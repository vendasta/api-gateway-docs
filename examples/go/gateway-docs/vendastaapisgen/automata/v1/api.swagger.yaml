swagger: "2.0"
info:
  title: automata/v1/api.proto
  version: version not set
tags:
  - name: Automata
  - name: AutomataDevelopment
  - name: AutomataOperations
  - name: AutomataDefaultAutomations
consumes:
  - application/json
produces:
  - application/json
paths:
  /automata.v1.Automata/CopyAutomation:
    post:
      operationId: Automata_CopyAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CopyAutomationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CopyAutomationRequest'
      tags:
        - Automata
  /automata.v1.Automata/CountRunningWorkflows:
    post:
      operationId: Automata_CountRunningWorkflows
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CountRunningWorkflowsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CountRunningWorkflowsRequest'
      tags:
        - Automata
  /automata.v1.Automata/CreateAutomation:
    post:
      operationId: Automata_CreateAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateAutomationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateAutomationRequest'
      tags:
        - Automata
  /automata.v1.Automata/DeleteAutomation:
    post:
      operationId: Automata_DeleteAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteAutomationRequest'
      tags:
        - Automata
  /automata.v1.Automata/GetAutomation:
    post:
      operationId: Automata_GetAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAutomationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAutomationRequest'
      tags:
        - Automata
  /automata.v1.Automata/GetAutomationAccessRequirements:
    post:
      operationId: Automata_GetAutomationAccessRequirements
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAutomationAccessRequirementsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAutomationAccessRequirementsRequest'
      tags:
        - Automata
  /automata.v1.Automata/GetAutomationTags:
    post:
      operationId: Automata_GetAutomationTags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAutomationTagsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAutomationTagsRequest'
      tags:
        - Automata
  /automata.v1.Automata/GetMultiAutomations:
    post:
      operationId: Automata_GetMultiAutomations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiAutomationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiAutomationsRequest'
      tags:
        - Automata
  /automata.v1.Automata/GetSubscription:
    post:
      operationId: Automata_GetSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSubscriptionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSubscriptionRequest'
      tags:
        - Automata
  /automata.v1.Automata/GetWorkflowStepPredecessorOutputParams:
    post:
      operationId: Automata_GetWorkflowStepPredecessorOutputParams
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetWorkflowStepPredecessorOutputParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetWorkflowStepPredecessorOutputParamsRequest'
      tags:
        - Automata
  /automata.v1.Automata/Hide:
    post:
      operationId: Automata_Hide
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HideRequest'
      tags:
        - Automata
  /automata.v1.Automata/ListActivities:
    post:
      operationId: Automata_ListActivities
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListActivitiesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListActivitiesRequest'
      tags:
        - Automata
  /automata.v1.Automata/ListActivitiesCurrentlyWaiting:
    post:
      operationId: Automata_ListActivitiesCurrentlyWaiting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListActivitiesCurrentlyWaitingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListActivitiesCurrentlyWaitingRequest'
      tags:
        - Automata
  /automata.v1.Automata/ListAutomationRuns:
    post:
      operationId: Automata_ListAutomationRuns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAutomationRunsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAutomationRunsRequest'
      tags:
        - Automata
  /automata.v1.Automata/ListAutomations:
    post:
      operationId: Automata_ListAutomations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAutomationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAutomationsRequest'
      tags:
        - Automata
  /automata.v1.Automata/ListAutomationsV2:
    post:
      summary: ListAutomationsV2 is used to list regular, template, or system automations
      operationId: Automata_ListAutomationsV2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAutomationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAutomationsRequestV2'
      tags:
        - Automata
  /automata.v1.Automata/ListSnippets:
    post:
      summary: ListSnippets is used to list snippets
      operationId: Automata_ListSnippets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSnippetsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSnippetsRequest'
      tags:
        - Automata
  /automata.v1.Automata/Publish:
    post:
      operationId: Automata_Publish
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1PublishRequest'
      tags:
        - Automata
  /automata.v1.Automata/SetAutomationToDraining:
    post:
      operationId: Automata_SetAutomationToDraining
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetAutomationToDrainingRequest'
      tags:
        - Automata
  /automata.v1.Automata/StartAutomationRunning:
    post:
      operationId: Automata_StartAutomationRunning
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StartAutomationRunningRequest'
      tags:
        - Automata
  /automata.v1.Automata/StopAllAutomationRuns:
    post:
      operationId: Automata_StopAllAutomationRuns
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StopAllAutomationRunsRequest'
      tags:
        - Automata
  /automata.v1.Automata/StopAutomationRunning:
    post:
      operationId: Automata_StopAutomationRunning
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StopAutomationRunningRequest'
      tags:
        - Automata
  /automata.v1.Automata/Subscribe:
    post:
      operationId: Automata_Subscribe
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SubscribeRequest'
      tags:
        - Automata
  /automata.v1.Automata/SummarizeAutomation:
    post:
      operationId: Automata_SummarizeAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SummarizeAutomationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SummarizeAutomationRequest'
      tags:
        - Automata
  /automata.v1.Automata/Unhide:
    post:
      operationId: Automata_Unhide
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnhideRequest'
      tags:
        - Automata
  /automata.v1.Automata/Unpublish:
    post:
      operationId: Automata_Unpublish
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnpublishRequest'
      tags:
        - Automata
  /automata.v1.Automata/Unsubscribe:
    post:
      operationId: Automata_Unsubscribe
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnsubscribeRequest'
      tags:
        - Automata
  /automata.v1.Automata/UpdateAutomation:
    post:
      operationId: Automata_UpdateAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateAutomationRequest'
      tags:
        - Automata
  /automata.v1.AutomataDefaultAutomations/DeleteConfiguration:
    post:
      summary: 'Deprecated: there is no alternative at this time'
      operationId: AutomataDefaultAutomations_DeleteConfiguration
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteConfigurationRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/DisableAutomationConfigurationV2:
    post:
      operationId: AutomataDefaultAutomations_DisableAutomationConfigurationV2
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DisableAutomationConfigurationRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/DisableForMarkets:
    post:
      summary: 'Deprecated: use DisableAutomationConfigurationV2 instead'
      operationId: AutomataDefaultAutomations_DisableForMarkets
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DisableForMarketsRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/EnableAutomationConfigurationV2:
    post:
      operationId: AutomataDefaultAutomations_EnableAutomationConfigurationV2
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EnableAutomationConfigurationRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/EnableForMarkets:
    post:
      summary: 'Deprecated: use EnableAutomationConfigurationV2 instead'
      operationId: AutomataDefaultAutomations_EnableForMarkets
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EnableForMarketsRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/GetAutomationConfigurationV2:
    post:
      operationId: AutomataDefaultAutomations_GetAutomationConfigurationV2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAutomationConfigurationV2Response'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAutomationConfigurationV2Request'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/GetConfiguration:
    post:
      summary: 'Deprecated: Use GetAutomationConfigurationV2 instead'
      operationId: AutomataDefaultAutomations_GetConfiguration
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConfigurationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetConfigurationRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/ListDefaultAutomations:
    post:
      operationId: AutomataDefaultAutomations_ListDefaultAutomations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDefaultAutomationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDefaultAutomationsRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDefaultAutomations/ListDefaultAutomationsForPartner:
    post:
      summary: 'Deprecated: use ListDefaultAutomations instead'
      operationId: AutomataDefaultAutomations_ListDefaultAutomationsForPartner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDefaultAutomationsForPartnerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDefaultAutomationsForPartnerRequest'
      tags:
        - AutomataDefaultAutomations
  /automata.v1.AutomataDevelopment/CreateEventTriggerDefinition:
    post:
      operationId: AutomataDevelopment_CreateEventTriggerDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateEventTriggerDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/CreateTaskDefinition:
    post:
      operationId: AutomataDevelopment_CreateTaskDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateTaskDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateTaskDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/DeleteEventTriggerDefinition:
    post:
      operationId: AutomataDevelopment_DeleteEventTriggerDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteEventTriggerDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/DeleteTaskDefinition:
    post:
      operationId: AutomataDevelopment_DeleteTaskDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteTaskDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/GetEventTriggerDefinition:
    post:
      operationId: AutomataDevelopment_GetEventTriggerDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetEventTriggerDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetEventTriggerDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/GetMultiTaskDefinition:
    post:
      operationId: AutomataDevelopment_GetMultiTaskDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiTaskDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiTaskDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/GetTaskDefinition:
    post:
      operationId: AutomataDevelopment_GetTaskDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTaskDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTaskDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/ListEventTriggerDefinition:
    post:
      operationId: AutomataDevelopment_ListEventTriggerDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListEventTriggerDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListEventTriggerDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/ListTaskDefinitions:
    post:
      operationId: AutomataDevelopment_ListTaskDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListTaskDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListTaskDefinitionsRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/UpdateEventTriggerDefinition:
    post:
      operationId: AutomataDevelopment_UpdateEventTriggerDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateEventTriggerDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataDevelopment/UpdateTaskDefinition:
    post:
      operationId: AutomataDevelopment_UpdateTaskDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateTaskDefinitionRequest'
      tags:
        - AutomataDevelopment
  /automata.v1.AutomataOperations/ContinueAutomationFromStep:
    post:
      summary: Continues an automation at a specific step given the previous automation event data
      operationId: AutomataOperations_ContinueAutomationFromStep
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ContinueAutomationFromStepRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/EmitAutomationEvent:
    post:
      summary: Emits an event that will be processed as a potential trigger for automations
      operationId: AutomataOperations_EmitAutomationEvent
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EmitAutomationEventRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/EndAutomationRun:
    post:
      summary: Ends a specific run of an automation
      operationId: AutomataOperations_EndAutomationRun
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EndAutomationRunRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/RateLimitCheck:
    post:
      summary: RateLimitCheck will return nothing if it succeeded and a FailedPrecondition error if it failed.
      operationId: AutomataOperations_RateLimitCheck
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RateLimitCheckRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/SearchManualAutomations:
    post:
      operationId: AutomataOperations_SearchManualAutomations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchManualAutomationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchManualAutomationsRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/SendTestWebhook:
    post:
      summary: Post to a given endpoint with a verifier token
      operationId: AutomataOperations_SendTestWebhook
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendTestWebhookRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/StartAccountGroupAutomation:
    post:
      operationId: AutomataOperations_StartAccountGroupAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StartAccountGroupAutomationRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/StartAutomation:
    post:
      summary: Starts an automation regardless of entity type of that automation
      operationId: AutomataOperations_StartAutomation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StartAutomationRequest'
      tags:
        - AutomataOperations
  /automata.v1.AutomataOperations/StartMigration:
    post:
      summary: Starts a migration that is pre configured
      operationId: AutomataOperations_StartMigration
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties: {}
      tags:
        - AutomataOperations
definitions:
  StartAutomationRequestStartAutomationPayload:
    type: object
    properties:
      entityId:
        type: string
        title: The entity id to start the automation for
      data:
        type: object
        title: The extra data to start the automation with
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1Activity:
    type: object
    properties:
      automationId:
        type: string
      entityId:
        type: string
      runId:
        type: string
        description: |-
          RunID is the unique value of the execution of an automation plus it's iteration. If you want to use a value for grouping
          all activities of a specific automatoin run together, use MainRunID instead.
      error:
        $ref: '#/definitions/v1Error'
      startedProcessing:
        type: string
        format: date-time
      completedProcessing:
        type: string
        format: date-time
      workflowStep:
        $ref: '#/definitions/v1WorkflowStep'
      inputData:
        type: string
        title: Input data is freeform json of the data passed into the step for the activity
      outputData:
        type: string
        title: Output data is freeform json of the data passed out from the step for the activity
      activityData:
        type: string
        title: Activity data is freeform json of the data processed within the activity
      nextWorkflowStep:
        $ref: '#/definitions/v1WorkflowStep'
        title: Next step contains the information of the next step of the activity execution
      stage:
        $ref: '#/definitions/v1Stage'
      partnerId:
        type: string
        title: 'Deprecated: use namespace instead'
      marketId:
        type: string
        title: MarketID is the market id of the automation that this activity is for
      waitForTriggerDefinitionId:
        type: string
        title: WaitForTriggerDefinitionID is the TriggerDefinitionID of the event that the activity is waiting/waited for
      triggerData:
        type: string
        title: Trigger data is freeform json of the data used by the trigger for the step for the activity
      endRunRequested:
        type: boolean
        title: indicates that this activity has been used to request ending its run
      mainRunId:
        type: string
        title: MainRunID is the id for a specific run of the automation. This groups all activities of that automation run together
      stepExecutionUuid:
        type: string
        description: |-
          StepExecutionUUID is a unique value for an execution of a step. This allows a step to be executed more than one time in an automation
          if there is a jump step in that automation for example.
      namespace:
        type: string
      goal:
        $ref: '#/definitions/v1WorkflowStep'
        title: For CompleteFromGoal activities, we save the goal that made the automation complete
  v1AppKey:
    type: object
    properties:
      appId:
        type: string
      editionId:
        type: string
    title: Identifier of an App (which includes addons)
  v1Automation:
    type: object
    properties:
      id:
        type: string
      partnerId:
        type: string
        title: PartnerID is no longer supported and Namespace+Context combo should be used instead
      marketId:
        type: string
        title: MarketID is no longer supported on new automations and will eventually be removed
      triggerDefinitionId:
        type: string
      triggerSubDefinitionId:
        type: string
      name:
        type: string
      runningState:
        $ref: '#/definitions/v1RunningState'
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      workflow:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1WorkflowStep'
        title: Workflow steps
      triggerStep:
        $ref: '#/definitions/v1WorkflowStep'
        title: Workflow step containing trigger definition, first step
      lastEditedBy:
        type: string
        title: iam.User.Id of the user that most recently modified this automation
      settings:
        $ref: '#/definitions/v1AutomationSettings'
      triggerFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1WorkflowStep'
        title: Filter steps executed after the trigger and before the workflow itself
      runningVersion:
        type: string
        format: date-time
        title: Running version for automation, empty if it's not running
      description:
        type: string
        description: Description of the automation.
      isTemplate:
        type: boolean
        title: Specifies if the automation is a template
      templatePublishedTime:
        type: string
        format: date-time
        title: Time that the template was published, empty if automation is not a template or not published
      isDefaultAutomation:
        type: boolean
        title: Specifies if the automation is a default automation
      defaultAutomationPublishedTime:
        type: string
        format: date-time
        title: Time that the default automation was published, empty if automation is not a default automation or not published
      originTemplateId:
        type: string
        title: The id of the template from which the automation was derived
      originDefaultAutomationId:
        type: string
        title: The id of the default automation from which the automation was derived
      tags:
        type: array
        items:
          type: string
      hidden:
        type: boolean
        title: Flag to determine if the automation is hidden or not from partners, if it can be hidden
      entityType:
        $ref: '#/definitions/v1EntityType'
        title: The entity type that the automation centers around
      token:
        $ref: '#/definitions/v1Token'
        title: The token associated with permissions for an automation
      context:
        $ref: '#/definitions/v1Context'
        title: The context the automation is running in
      notes:
        type: string
      namespace:
        type: string
      externalId:
        type: string
      groups:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Group'
      isSnippetAutomation:
        type: boolean
        title: Specifies if the automation is a snippet
      snippetAutomationPublishedTime:
        type: string
        format: date-time
        title: Time that the default automation was published, empty if automation is not a snippet automation or not published
      goal:
        $ref: '#/definitions/v1WorkflowStep'
        description: The (optional) goal of the automation, this is a filter step that when executed and passes the automation is considered to have reached its goal and will end.
  v1AutomationConfiguration:
    type: object
    properties:
      partnerId:
        type: string
      automationId:
        type: string
      disabledMarkets:
        type: array
        items:
          type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
    title: 'Deprecated: use AutomationConfigurationV2 instead'
  v1AutomationConfigurationV2:
    type: object
    properties:
      automationId:
        type: string
      context:
        $ref: '#/definitions/v1Context'
      namespace:
        type: string
      disabled:
        type: string
        format: date-time
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
  v1AutomationConfigurationV2Identifier:
    type: object
    properties:
      automationId:
        type: string
      context:
        $ref: '#/definitions/v1Context'
      namespace:
        type: string
  v1AutomationPublishedState:
    type: string
    enum:
      - AUTOMATION_PUBLISHED_STATE_NOT_SPECIFIED
      - AUTOMATION_PUBLISHED_STATE_PUBLISHED
      - AUTOMATION_PUBLISHED_STATE_DRAFT
    default: AUTOMATION_PUBLISHED_STATE_NOT_SPECIFIED
    title: whether the automation is published or not; relevant only to AutomationTypes default or template
  v1AutomationSettings:
    type: object
    properties:
      runType:
        $ref: '#/definitions/v1RunType'
      errorHandlingType:
        $ref: '#/definitions/v1ErrorHandlingType'
      timeZone:
        type: string
  v1AutomationStatus:
    type: string
    enum:
      - AUTOMATION_STATUS_NOT_SPECIFIED
      - AUTOMATION_STATUS_ON
      - AUTOMATION_STATUS_OFF
    default: AUTOMATION_STATUS_NOT_SPECIFIED
    title: whether the automation is on or off; relevant to default AutomationType
  v1AutomationSubscription:
    type: object
    properties:
      userId:
        type: string
        description: The iam.User that has subscribed.
      automationId:
        type: string
        title: The automation to subscribe to
      partnerId:
        type: string
        title: |-
          The partner id and market ids are really only relevant to default automations
          use namespace instead
      marketIds:
        type: array
        items:
          type: string
        title: The market ids the user is subscribing for
      namespace:
        type: string
  v1AutomationType:
    type: string
    enum:
      - AUTOMATION_TYPE_NOT_SPECIFIED
      - AUTOMATION_TYPE_STANDARD
      - AUTOMATION_TYPE_DEFAULT
      - AUTOMATION_TYPE_TEMPLATE
      - AUTOMATION_TYPE_SNIPPET
    default: AUTOMATION_TYPE_NOT_SPECIFIED
  v1CallOptions:
    type: object
    properties:
      retryPolicyOptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RetryPolicy'
        description: Custom policies for retrying resource requests based on http status error codes in the 400 range.
  v1Choices:
    type: object
    properties:
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Rule'
      defaultNextStep:
        type: string
  v1Context:
    type: string
    enum:
      - AUTOMATION_CONTEXT_UNSET
      - AUTOMATION_CONTEXT_PARTNER
      - AUTOMATION_CONTEXT_SMB
    default: AUTOMATION_CONTEXT_UNSET
    title: Context is used to indicate where in the platform the automation is intended to be used
  v1ContinueAutomationFromStepRequest:
    type: object
    properties:
      automationId:
        type: string
        title: The automation to continue
      entityId:
        type: string
        title: The entity id to continue the automation for
      previousWorkflowStepId:
        type: string
        title: The workflow step id of the activity that was last ran (eg. and failed)
      previousRunId:
        type: string
        title: The run id that the previous automation ran with
      workflowStepIdToContinue:
        type: string
        title: The workflow step id with which to continue the automation
  v1CopyAutomationRequest:
    type: object
    properties:
      originalAutomationId:
        type: string
      name:
        type: string
  v1CopyAutomationResponse:
    type: object
    properties:
      id:
        type: string
  v1CountRunningWorkflowsRequest:
    type: object
    properties:
      automationId:
        type: string
  v1CountRunningWorkflowsResponse:
    type: object
    properties:
      count:
        type: string
        format: int64
  v1CreateAutomationRequest:
    type: object
    properties:
      automation:
        $ref: '#/definitions/v1Automation'
      sourceId:
        type: string
        title: |-
          Another automation to create this one based off of
          Requires namespace, name and context set on the automation on the request
  v1CreateAutomationResponse:
    type: object
    properties:
      id:
        type: string
  v1CreateEventTriggerDefinitionRequest:
    type: object
    properties:
      eventTriggerDefinition:
        $ref: '#/definitions/v1EventTriggerDefinition'
  v1CreateTaskDefinitionRequest:
    type: object
    properties:
      taskDefinition:
        $ref: '#/definitions/v1TaskDefinition'
  v1CreateTaskDefinitionResponse:
    type: object
    properties:
      id:
        type: string
  v1DataType:
    type: string
    enum:
      - DATA_TYPE_UNSPECIFIED
      - DATA_TYPE_UNKNOWN
      - DATA_TYPE_STRING
      - DATA_TYPE_BOOLEAN
      - DATA_TYPE_ORDER_ACTION_TYPE
      - DATA_TYPE_ORDER_DECLINED_REASON_IDS
      - DATA_TYPE_ACCOUNT_GROUP_ID
      - DATA_TYPE_ORDER_ID
      - DATA_TYPE_SMB_USER_ID
      - DATA_TYPE_FULFILLMENT_PROJECT_ID
      - DATA_TYPE_EMAIL_ID
      - DATA_TYPE_EMAIL_EVENT
      - DATA_TYPE_OPPORTUNITY_ID
      - DATA_TYPE_JSON
      - DATA_TYPE_COMPANY_ID
      - DATA_TYPE_CONTACT_ID
      - DATA_TYPE_PRODUCT
      - DATA_TYPE_TASK
      - DATA_TYPE_CRM_NOTE
      - DATA_TYPE_CRM_EMAIL
      - DATA_TYPE_CRM_MEETING
      - DATA_TYPE_CRM_CALL
      - DATA_TYPE_CRM_SMS
      - DATA_TYPE_CRM_LINKEDIN
      - DATA_TYPE_CRM_INBOX
      - DATA_TYPE_INTEGRATION_CONNECTION
      - DATA_TYPE_NUMBER
      - DATA_TYPE_CURRENCY
      - DATA_TYPE_DATETIME
      - DATA_TYPE_CRM_OPPORTUNITY_ID
      - DATA_TYPE_INVOICE
    default: DATA_TYPE_UNSPECIFIED
    title: |-
      - DATA_TYPE_ORDER_ACTION_TYPE: the action type taken on the order (eg. approve, decline)
       - DATA_TYPE_ORDER_DECLINED_REASON_IDS: the sales order declined reason ids
       - DATA_TYPE_COMPANY_ID: CRM Company
       - DATA_TYPE_CONTACT_ID: CRM Contact
       - DATA_TYPE_TASK: This is a CRM task
       - DATA_TYPE_INTEGRATION_CONNECTION: Integration connection
       - DATA_TYPE_CRM_OPPORTUNITY_ID: CRM Opportunity
  v1DefaultAutomation:
    type: object
    properties:
      defaultAutomation:
        $ref: '#/definitions/v1Automation'
      configuration:
        $ref: '#/definitions/v1AutomationConfigurationV2'
  v1DefaultAutomationStatus:
    type: string
    enum:
      - LIST_DEFAULT_AUTOMATIONS_FOR_PARTNER_REQUEST_DEFAULT_AUTOMATION_STATUS_ON
      - LIST_DEFAULT_AUTOMATIONS_FOR_PARTNER_REQUEST_DEFAULT_AUTOMATION_STATUS_OFF
    default: LIST_DEFAULT_AUTOMATIONS_FOR_PARTNER_REQUEST_DEFAULT_AUTOMATION_STATUS_ON
  v1DefaultAutomationWithConfiguration:
    type: object
    properties:
      defaultAutomation:
        $ref: '#/definitions/v1Automation'
      configuration:
        $ref: '#/definitions/v1AutomationConfiguration'
  v1DeleteAutomationRequest:
    type: object
    properties:
      id:
        type: string
  v1DeleteConfigurationRequest:
    type: object
    properties:
      partnerId:
        type: string
      automationId:
        type: string
    title: 'Deprecated: there is no alternative at this time'
  v1DeleteEventTriggerDefinitionRequest:
    type: object
    properties:
      eventTypeId:
        type: string
  v1DeleteTaskDefinitionRequest:
    type: object
    properties:
      id:
        type: string
  v1DisableAutomationConfigurationRequest:
    type: object
    properties:
      automationConfigurationId:
        $ref: '#/definitions/v1AutomationConfigurationV2Identifier'
  v1DisableForMarketsRequest:
    type: object
    properties:
      partnerId:
        type: string
      automationId:
        type: string
      marketIds:
        type: array
        items:
          type: string
    title: 'Deprecated: use DisableAutomationConfigurationV2 instead'
  v1EmitAutomationEventRequest:
    type: object
    properties:
      eventId:
        type: string
        title: the identifier of the event to be emitted
      eventData:
        type: object
        title: the data to be emitted
    title: EmitAutomationEventRequest is the request object for EmitAutomationEvent
  v1EnableAutomationConfigurationRequest:
    type: object
    properties:
      automationConfigurationId:
        $ref: '#/definitions/v1AutomationConfigurationV2Identifier'
  v1EnableForMarketsRequest:
    type: object
    properties:
      partnerId:
        type: string
      automationId:
        type: string
      marketIds:
        type: array
        items:
          type: string
    title: 'Deprecated: use EnableAutomationConfigurationV2 instead'
  v1EndAutomationRunRequest:
    type: object
    properties:
      automationId:
        type: string
        title: The automation to start
      runId:
        type: string
        title: 'Deprecated: use main_run_id and step_execution_uuid instead'
      entityId:
        type: string
        title: Optionally, the entity id of the activity through which the request was made
      workflowStepId:
        type: string
        title: Optionally, the workflow step id of the activity through which the request was made
      mainRunId:
        type: string
        title: The main run id of the run to end
      stepExecutionUuid:
        type: string
  v1EntityType:
    type: string
    enum:
      - ENTITY_TYPE_NOT_SPECIFIED
      - ENTITY_TYPE_ACCOUNT_GROUP
      - ENTITY_TYPE_ORDER
      - ENTITY_TYPE_USER
      - ENTITY_TYPE_NO_ENTITY
      - ENTITY_TYPE_CONTACT
      - ENTITY_TYPE_COMPANY
    default: ENTITY_TYPE_NOT_SPECIFIED
  v1Error:
    type: object
    properties:
      message:
        type: string
      code:
        type: string
      humanReadableMessage:
        type: string
        title: |-
          human_readable_message is intended to be displayable to the user. This is optional so it will not always
          be populated
  v1ErrorHandlingType:
    type: string
    enum:
      - ERROR_HANDLING_TYPE_UNDEFINED
      - ERROR_HANDLING_TYPE_STOP_ON_ERROR
      - ERROR_HANDLING_TYPE_CONTINUE_ON_ERROR
    default: ERROR_HANDLING_TYPE_UNDEFINED
  v1EventTriggerDefinition:
    type: object
    properties:
      eventTypeId:
        type: string
        title: |-
          Event type ID that automata system will subscribe to from event broker
          Example: `/app/accounts/event/product-activation`
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      name:
        type: string
        title: |-
          Name for trigger definition, used only internally for listing purposes
          Example: `Product activated`
      parametersPaths:
        type: string
        title: |-
          Parameter paths is composed of the required JSONPath parameters that will be extracted from the event broker event
          Expected format: `{"account_group_id.$": "{.account_group_id}", "partner_id.$": "{.partner_id}", "market_id.$": "{.market_id}", "app_id.$": "{.app_id}"}`
      triggerContextIdFormat:
        type: string
        title: |-
          Format used to create identifier to detect multiple runs having the same context in an automation triggered through this trigger
          Expected format: `/product-activated/account-group/<account_group_id>/app_id/<app_id>`
      lastEditedBy:
        type: string
        title: iam.User.Id of the user that most recently modified this event trigger definition
      parameterFilterKeys:
        type: array
        items:
          type: string
        title: The filters on the parameter paths set on a WorkflowStep and saved to the waiting for Activity (which is then queried to check for a match with the incoming event)
      flattenedConfig:
        $ref: '#/definitions/v1FlattenedConfig'
        title: Specifies an array field that should be flattened with each element triggering a separate automation
  v1FlattenedConfig:
    type: object
    properties:
      sourcePath:
        type: string
        title: |-
          // The array field being flattened in the source event and what the destination path will be
          eg. {"geese.$":"{.goose}"} except its base64
      dataType:
        $ref: '#/definitions/v1FlattenedConfigDataType'
        title: The type of the field being flattened
  v1FlattenedConfigDataType:
    type: string
    enum:
      - FLATTENED_CONFIG_DATA_TYPE_UNSET
      - FLATTENED_CONFIG_DATA_TYPE_STRUCT
      - FLATTENED_CONFIG_DATA_TYPE_STRING
      - FLATTENED_CONFIG_DATA_TYPE_INT
      - FLATTENED_CONFIG_DATA_TYPE_FLOAT
      - FLATTENED_CONFIG_DATA_TYPE_BOOL
      - FLATTENED_CONFIG_DATA_TYPE_TIME
    default: FLATTENED_CONFIG_DATA_TYPE_UNSET
  v1GetAutomationAccessRequirementsRequest:
    type: object
    properties:
      automationId:
        type: string
  v1GetAutomationAccessRequirementsResponse:
    type: object
    properties:
      successIds:
        type: array
        items:
          type: string
      failedIds:
        type: array
        items:
          type: string
    title: Success and failed lists of task definition IDs
  v1GetAutomationConfigurationV2Request:
    type: object
    properties:
      automationConfigurationId:
        $ref: '#/definitions/v1AutomationConfigurationV2Identifier'
  v1GetAutomationConfigurationV2Response:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/v1AutomationConfigurationV2'
  v1GetAutomationRequest:
    type: object
    properties:
      id:
        type: string
  v1GetAutomationResponse:
    type: object
    properties:
      automation:
        $ref: '#/definitions/v1Automation'
  v1GetAutomationTagsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Use namespace instead
      marketIds:
        type: array
        items:
          type: string
        title: New automations do not have markets
      automationType:
        $ref: '#/definitions/v1AutomationType'
      namespace:
        type: string
  v1GetAutomationTagsResponse:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
  v1GetConfigurationRequest:
    type: object
    properties:
      partnerId:
        type: string
      automationId:
        type: string
    title: 'Deprecated: Use GetAutomationConfigurationV2'
  v1GetConfigurationResponse:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/v1AutomationConfiguration'
  v1GetEventTriggerDefinitionRequest:
    type: object
    properties:
      eventTypeId:
        type: string
  v1GetEventTriggerDefinitionResponse:
    type: object
    properties:
      eventTriggerDefinition:
        $ref: '#/definitions/v1EventTriggerDefinition'
  v1GetMultiAutomationsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: This does nothing, you don't need to specify it anymore
      marketId:
        type: string
        title: This does nothing, you don't need to specify it anymore
      automationIds:
        type: array
        items:
          type: string
  v1GetMultiAutomationsResponse:
    type: object
    properties:
      automations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Automation'
  v1GetMultiTaskDefinitionRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
  v1GetMultiTaskDefinitionResponse:
    type: object
    properties:
      taskDefinitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TaskDefinition'
  v1GetSubscriptionRequest:
    type: object
    properties:
      automationId:
        type: string
  v1GetSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1AutomationSubscription'
  v1GetTaskDefinitionRequest:
    type: object
    properties:
      id:
        type: string
  v1GetTaskDefinitionResponse:
    type: object
    properties:
      taskDefinition:
        $ref: '#/definitions/v1TaskDefinition'
  v1GetWorkflowStepPredecessorOutputParamsRequest:
    type: object
    properties:
      automationId:
        type: string
      workflowStepParentIds:
        type: array
        items:
          type: string
      onlyIncludeNamedSteps:
        type: boolean
  v1GetWorkflowStepPredecessorOutputParamsResponse:
    type: object
    properties:
      workflowStepOutputParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1WorkflowStepOutputParameterContainer'
  v1Group:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      notes:
        type: string
  v1HideRequest:
    type: object
    properties:
      id:
        type: string
  v1InputParameter:
    type: object
    properties:
      settings:
        $ref: '#/definitions/v1Parameter'
      required:
        type: boolean
      path:
        type: string
      validationType:
        $ref: '#/definitions/v1ValidationType'
  v1ListActivitiesCurrentlyWaitingRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListActivitiesCurrentlyWaitingRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListActivitiesCurrentlyWaitingRequestFilters:
    type: object
    properties:
      automationId:
        type: string
      workflowStepId:
        type: string
      partnerId:
        type: string
        title: 'Deprecated: use namespace instead'
      marketIds:
        type: array
        items:
          type: string
      namespace:
        type: string
  v1ListActivitiesCurrentlyWaitingResponse:
    type: object
    properties:
      activities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Activity'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1ListActivitiesRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListActivitiesRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListActivitiesRequestFilters:
    type: object
    properties:
      automationId:
        type: string
      runId:
        type: string
        title: 'Deprecated: use main_run_id instead'
      entityId:
        type: string
      workflowStepId:
        type: string
      stage:
        type: array
        items:
          $ref: '#/definitions/v1Stage'
      partnerId:
        type: string
        title: 'Deprecated: use namespace instead'
      marketIds:
        type: array
        items:
          type: string
      latestPerAutomation:
        type: boolean
        title: will return only the latest activity per automation
      automationType:
        $ref: '#/definitions/v1AutomationType'
        title: Limit the activities to a specific type
      onlyErrors:
        type: boolean
        title: Only returns activities that have an error
      mainRunId:
        type: string
      namespace:
        type: string
  v1ListActivitiesResponse:
    type: object
    properties:
      activities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Activity'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1ListAutomationRunsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListAutomationRunsRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListAutomationRunsRequestFilters:
    type: object
    properties:
      partnerId:
        type: string
        title: 'Deprecated: use namespace instead'
      marketIds:
        type: array
        items:
          type: string
      automationId:
        type: string
      entityId:
        type: string
      stages:
        type: array
        items:
          $ref: '#/definitions/v1Stage'
      showDefault:
        type: boolean
      namespace:
        type: string
      startingUserId:
        type: string
      startedProcessingMin:
        type: string
        format: date-time
      startedProcessingMax:
        type: string
        format: date-time
  v1ListAutomationRunsResponse:
    type: object
    properties:
      automationRuns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Activity'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1ListAutomationsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListAutomationsRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListAutomationsRequestFilters:
    type: object
    properties:
      partnerId:
        type: string
        title: Use namespace instead
      marketIds:
        type: array
        items:
          type: string
        title: New automations do not have markets
      lastUpdatedBy:
        type: string
      includeDeleted:
        type: boolean
      name:
        type: string
      runningStates:
        type: array
        items:
          $ref: '#/definitions/v1RunningState'
      tags:
        type: array
        items:
          type: string
      automationType:
        $ref: '#/definitions/v1AutomationType'
      publishedStates:
        type: array
        items:
          $ref: '#/definitions/v1AutomationPublishedState'
      status:
        type: array
        items:
          $ref: '#/definitions/v1AutomationStatus'
      workflowStepTaskDefinitionId:
        type: string
        title: Workflow Step Task Definition ID will filter automations to only those that contain a specific task definition as a workflow step
      triggerTaskDefinitionId:
        type: string
        title: Trigger Task Definition ID will filter automations to only those that contain a specific task definition as either the trigger step or used in a delay until event step
      tokenUserId:
        type: string
        title: Token User ID will filter automations to only those that are using an OAuth2 token supplied by the specified user
      context:
        $ref: '#/definitions/v1Context'
        title: 'Context will filter automations to only those that the automation is intended for, e.g.: partner, smb'
      namespace:
        type: string
  v1ListAutomationsRequestV2:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListAutomationsRequestV2Filters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListAutomationsRequestV2Filters:
    type: object
    properties:
      namespace:
        type: string
        title: namespace e.g., "VUNI", "AG-123456"
      context:
        $ref: '#/definitions/v1Context'
        title: 'context e.g.: partner, smb'
      automationTypes:
        type: array
        items:
          $ref: '#/definitions/v1AutomationType'
      name:
        type: string
        title: name of the automation (can do partial matches)
      runningStates:
        type: array
        items:
          $ref: '#/definitions/v1RunningState'
      tags:
        type: array
        items:
          type: string
      triggerTaskDefinitionIds:
        type: array
        items:
          type: string
        title: trigger_task_definition_ids will filter automations to only those that contain a specific task definition as either the trigger step or used in a delay until event step
      lastUpdatedBy:
        type: string
        title: last_updated_by user id of the user who last updated the automation
      tokenUserId:
        type: string
        title: token_user_id will filter automations to only those that are using an OAuth2 token supplied by the specified user
      parentNamespace:
        type: string
        description: |-
          an extra namespace that to look up automations for. In general, this will be used when asking for both the automations of an SMB context and it's partner's
          namespace at the same time.
      excludePlatformAutomations:
        type: boolean
        title: Platform automations are automations that we have built and provided to customers
  v1ListAutomationsResponse:
    type: object
    properties:
      automations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Automation'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1ListDefaultAutomationsForPartnerRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListDefaultAutomationsForPartnerRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
    title: 'Deprecated: use ListDefaultAutomations instead'
  v1ListDefaultAutomationsForPartnerRequestFilters:
    type: object
    properties:
      partnerId:
        type: string
      marketIds:
        type: array
        items:
          type: string
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1DefaultAutomationStatus'
      tags:
        type: array
        items:
          type: string
  v1ListDefaultAutomationsForPartnerResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DefaultAutomationWithConfiguration'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1ListDefaultAutomationsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListDefaultAutomationsRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListDefaultAutomationsRequestFilters:
    type: object
    properties:
      context:
        $ref: '#/definitions/v1Context'
      partnerId:
        type: string
        title: Use namespace instead
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1DefaultAutomationStatus'
      tags:
        type: array
        items:
          type: string
      namespace:
        type: string
  v1ListDefaultAutomationsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DefaultAutomation'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1ListEventTriggerDefinitionRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListEventTriggerDefinitionRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListEventTriggerDefinitionRequestFilters:
    type: object
    properties:
      name:
        type: string
  v1ListEventTriggerDefinitionResponse:
    type: object
    properties:
      eventTriggerDefinitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EventTriggerDefinition'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1ListSnippetsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListSnippetsRequestFilters'
      validationData:
        $ref: '#/definitions/v1ListSnippetsRequestValidationData'
        title: Optional. Used to see if the snippet is valid to be added to an automation at a certain point
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListSnippetsRequestFilters:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace the snippets exist in.
      parentNamespace:
        type: string
        description: Optional. A parent namespace of snippets to include.
      context:
        $ref: '#/definitions/v1Context'
        title: 'Context the snippets are for. (note: partners can list snippets in the SMB context)'
      publishedStates:
        type: array
        items:
          $ref: '#/definitions/v1AutomationPublishedState'
        title: 'Which published states to include. (note: partners can create draft snippets for their SMBs)'
      name:
        type: string
        title: Search for the name of snippet
  v1ListSnippetsRequestValidationData:
    type: object
    properties:
      automationId:
        type: string
        title: The id of the automation to validate the snippet against
      immediateStepParentIds:
        type: array
        items:
          type: string
        title: The ids of the steps immediately above where we are wanting to add the snippet
  v1ListSnippetsResponse:
    type: object
    properties:
      snippets:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Snippet'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1ListTaskDefinition:
    type: object
    properties:
      valid:
        type: boolean
      taskDefinition:
        $ref: '#/definitions/v1TaskDefinition'
      hasAccessToRun:
        type: boolean
        title: Flag indicating whether the requesting user has access to run the task
  v1ListTaskDefinitionsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1ListTaskDefinitionsRequestFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
      validationData:
        $ref: '#/definitions/v1ListTaskDefinitionsRequestValidationData'
        title: If validation_date is provided the task definitions will be marked as valid or not for the data provided
  v1ListTaskDefinitionsRequestFilters:
    type: object
    properties:
      taskType:
        $ref: '#/definitions/v1TaskType'
      internal:
        type: boolean
      publishedState:
        $ref: '#/definitions/v1PublishedState'
      onlyAvailableInDefaultAutomations:
        type: boolean
      name:
        type: string
      waitForDataTypeScope:
        $ref: '#/definitions/v1DataType'
        title: |-
          Filters to task definitions with at least one matching parameter filter key on its optionally linked event trigger definition
          For example, if an event trigger definition has a parameter filter key of `account_group_id` and a task definition is linked to it
          via it's entity_type_id and has an input parameter with the same id and the `AccountGroup` type, then specifying that type will return that
          task definition in the results
      marketReliant:
        type: boolean
        description: market reliant should no longer be used. It no longer serves a function and will be removed in the future.
      supportedContexts:
        type: array
        items:
          $ref: '#/definitions/v1Context'
  v1ListTaskDefinitionsRequestValidationData:
    type: object
    properties:
      automationId:
        type: string
      workflowStepParentIds:
        type: array
        items:
          type: string
        description: This api is called when adding a new step so there isn't a "current" step id to get the parents of, need the frontend to pass them in.
      triggerTaskDefinitionId:
        type: string
        title: Use this to validate the task definitions against a provided trigger task definition ID instead of what is saved on the automation
  v1ListTaskDefinitionsResponse:
    type: object
    properties:
      taskDefinitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ListTaskDefinition'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1OrderKey:
    type: object
    properties:
      accountGroupId:
        type: string
      orderId:
        type: string
  v1OutputParameter:
    type: object
    properties:
      settings:
        $ref: '#/definitions/v1Parameter'
      optional:
        type: boolean
      isEntity:
        type: boolean
      path:
        type: string
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: The total number of results. This is not supported on all paged apis and will be 0 if it is not supported
  v1Parameter:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      dataType:
        $ref: '#/definitions/v1DataType'
      repeated:
        type: boolean
  v1PublishRequest:
    type: object
    properties:
      id:
        type: string
  v1PublishedState:
    type: string
    enum:
      - PUBLISHED_STATE_UNSPECIFIED
      - PUBLISHED_STATE_PUBLISHED
      - PUBLISHED_STATE_DRAFT
    default: PUBLISHED_STATE_UNSPECIFIED
  v1RateLimit:
    type: object
    properties:
      automationId:
        type: string
      runningVersion:
        type: string
      stepId:
        type: string
      entityId:
        type: string
      unit:
        $ref: '#/definitions/v1RateLimitUnit'
        title: The time use that is used with the amount to calculate the window
      amount:
        type: string
        format: int64
        title: The number of time units in the window
      limit:
        type: string
        format: int64
  v1RateLimitCheckRequest:
    type: object
    properties:
      rateLimit:
        $ref: '#/definitions/v1RateLimit'
        title: The rate limit to check against (will be created if it doesn't exist)
      timestamp:
        type: string
        format: date-time
        title: The time at which to check for so that it can be idempotent
  v1RateLimitUnit:
    type: string
    enum:
      - RATE_LIMIT_UNIT_UNSPECIFIED
      - RATE_LIMIT_UNIT_HOUR
      - RATE_LIMIT_UNIT_DAY
    default: RATE_LIMIT_UNIT_UNSPECIFIED
  v1Resource:
    type: object
    properties:
      url:
        type: string
        title: 'Url to call for resource, e.g.,: https://us-central1-repcore-prod.cloudfunctions.net/AddAccountGroupToCampaignDemo'
      method:
        type: string
        title: 'Method to use for request, e.g.,: POST'
      isGetter:
        type: boolean
        title: Property defining if the resource is a getter, if it's a getter it shouldn't modify anything in the platform
      callOptions:
        $ref: '#/definitions/v1CallOptions'
        title: Execution options to obtain better error handling for scenarios where there might be errors during the call that the developer is aware of due to asynchronous operations in the platform
  v1RetryPolicy:
    type: object
    properties:
      statusCode:
        type: string
        title: status code for the retry policy
      maximumAttempts:
        type: string
        format: int64
        title: maximum number of attempts that will be run before failing a task
    title: Policy for retrying resource requests
  v1Rule:
    type: object
    properties:
      variablePath:
        type: string
      value:
        type: string
      next:
        type: string
      comparison:
        type: string
  v1RunType:
    type: string
    enum:
      - RUN_TYPE_NOT_SPECIFIED
      - RUN_TYPE_ONLY_ONCE
      - RUN_TYPE_MULTIPLE
      - RUN_TYPE_ONE_AT_A_TIME
    default: RUN_TYPE_NOT_SPECIFIED
  v1RunningState:
    type: string
    enum:
      - RUNNING_STATE_NOT_SPECIFIED
      - RUNNING_STATE_RUNNING
      - RUNNING_STATE_STOPPED
      - RUNNING_STATE_DRAINING
    default: RUNNING_STATE_NOT_SPECIFIED
  v1SearchManualAutomationsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/v1SearchManualAutomationsRequestFilters'
      searchTerm:
        type: string
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
      entityType:
        $ref: '#/definitions/v1EntityType'
        title: 'Deprecated: use the entity type from the filters instead'
  v1SearchManualAutomationsRequestFilters:
    type: object
    properties:
      partnerId:
        type: string
        title: 'Deprecated: use namespace instead'
      onlySalesRunnable:
        type: boolean
      marketIds:
        type: array
        items:
          type: string
      namespace:
        type: string
      entityTypes:
        type: array
        items:
          $ref: '#/definitions/v1EntityType'
      context:
        $ref: '#/definitions/v1Context'
  v1SearchManualAutomationsResponse:
    type: object
    properties:
      automations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Automation'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1SendTestWebhookRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: 'Deprecated: use namespace instead'
      marketId:
        type: string
      automationId:
        type: string
      url:
        type: string
      verifierToken:
        type: string
      additionalFields:
        type: object
        additionalProperties:
          type: string
      namespace:
        type: string
  v1SetAutomationToDrainingRequest:
    type: object
    properties:
      id:
        type: string
  v1SleepWaitConditions:
    type: object
    properties:
      weekdaySelection:
        type: array
        items:
          type: string
      timeRangeStartHour:
        type: integer
        format: int32
        title: |-
          The hour component for the earliest time where it is acceptable to run the
          automation (see notes above)
      timeRangeStartMinute:
        type: integer
        format: int32
        title: |-
          The minute component for the earliest time where it is acceptable to run
          the automation (see notes above)
      timeRangeEndHour:
        type: integer
        format: int32
        title: |-
          The hour component for the latest time where it is acceptable to run the
          automation (see notes above)
      timeRangeEndMinute:
        type: integer
        format: int32
        title: |-
          The minute component for the latest time where it is acceptable to run the
          automation (see notes above)
      dayOfMonthSelection:
        type: array
        items:
          type: integer
          format: int32
        description: |-
          The day of the month that the automation can run on. Valid values are 1-32,
          where 32 is used to select the last day of the month (28, 29, 30, or 31).
    description: |-
      SleepWaitConditions define the conditions that must be met before the
      automation can run.

      Note 1: Unless otherwise configured here, the time_range values are relative
      to the timezone specified in the Automation's settings.

      Note 2: Setting all of the "time_range_" values to 0 means that the automation
      can run at any time of day - assuming the other wait conditions are also met.
  v1Snippet:
    type: object
    properties:
      automation:
        $ref: '#/definitions/v1Automation'
      valid:
        type: boolean
        title: Fueled by the ValidationData of the request. Will be false if missing required input data
    title: Snippet is a group of actions stored as an Automation
  v1Stage:
    type: string
    enum:
      - STAGE_NOT_SPECIFIED
      - STAGE_WORKFLOW_STEP
      - STAGE_WORKFLOW_COMPLETED
      - STAGE_WORKFLOW_CANCELED
      - STAGE_WORKFLOW_COMPLETED_FROM_ERROR
      - STAGE_WORKFLOW_DID_NOT_RUN
      - STAGE_WORKFLOW_CONTINUED_FROM_ERROR
      - STAGE_WORKFLOW_CONTINUED
      - STAGE_WORKFLOW_COMPLETED_FROM_GOAL
    default: STAGE_NOT_SPECIFIED
    description: |2-
       - STAGE_WORKFLOW_DID_NOT_RUN: WORKFLOW_DID_NOT_RUN indicates that an event was received for an entity but that event did not pass the trigger filters so the
      workflow portion of the automation did not start.
       - STAGE_WORKFLOW_CONTINUED_FROM_ERROR: marks an activity as having continued from a step that errored
       - STAGE_WORKFLOW_CONTINUED: marks an activity as continuing the workflow
       - STAGE_WORKFLOW_COMPLETED_FROM_GOAL: The goal evaluated as having been met, ending the automation.
  v1StartAccountGroupAutomationRequest:
    type: object
    properties:
      automationId:
        type: string
      accountGroupIds:
        type: array
        items:
          type: string
      actionListName:
        type: string
      namespace:
        type: string
        title: |-
          If the automation is a default automation, this is the namespace that the automation will be run as. If the automation is just a regular automation this field will
          be superseded by the value of the namespace on that automation
  v1StartAutomationRequest:
    type: object
    properties:
      automationId:
        type: string
        title: The automation to start
      accountGroupIds:
        type: array
        items:
          type: string
        title: |-
          The account groups to start this automation for (optional)
          deprecated: use payloads instead
      orderKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OrderKey'
        description: |-
          The orders to start this automation for (optional)
          deprecated: use payloads instead, we only need the order ID, we don't need the account group id as well.
      payloads:
        type: array
        items:
          type: object
          $ref: '#/definitions/StartAutomationRequestStartAutomationPayload'
      checkAccessOnly:
        type: boolean
      namespace:
        type: string
        title: |-
          If the automation is a default automation, this is the namespace that the automation will be run as. If the automation is just a regular automation this field will
          be superseded by the value of the namespace on that automation
  v1StartAutomationRunningRequest:
    type: object
    properties:
      id:
        type: string
      settings:
        $ref: '#/definitions/v1AutomationSettings'
        description: |-
          When starting the automation, you can provide different settings to run this automation with. The automation will be updated to have the
          new settings, then it will be turned on.
          If no settings are provided the current settings of the automation will be used.
      subscribeToNotifications:
        type: boolean
        title: Whether or not the user will automatically be subscribed to notifications for this automation
  v1StopAllAutomationRunsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Use namespace instead
      namespace:
        type: string
      context:
        $ref: '#/definitions/v1Context'
  v1StopAutomationRunningRequest:
    type: object
    properties:
      id:
        type: string
  v1SubscribeRequest:
    type: object
    properties:
      automationId:
        type: string
      partnerId:
        type: string
        title: Use namespace instead
      marketIds:
        type: array
        items:
          type: string
        title: New automations don't have market ids
      namespace:
        type: string
        title: Namespace is used for subscriptions to default automations. We need to know what your namespace is to subscribe you to the correct subset
  v1SummarizeAutomationRequest:
    type: object
    properties:
      automationId:
        type: string
      prompts:
        type: array
        items:
          type: string
  v1SummarizeAutomationResponse:
    type: object
    properties:
      summary:
        type: string
  v1TaskDefinition:
    type: object
    properties:
      id:
        type: string
        title: 'ID for task definition, e.g.,: "TaskDefinition-add-a-tag"'
      name:
        type: string
        title: 'Name for task definition, only used in backend for listing, e.g.,: "Add a tag"'
      resource:
        $ref: '#/definitions/v1Resource'
        title: Resource used to make request in-platform to either modify a resource, or get it to use in filters
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      inputParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1InputParameter'
        title: Input parameters for task definition resource execution
      outputParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OutputParameter'
        title: Output parameters for task definition, parameters this task will care about passing along the event stream
      taskType:
        $ref: '#/definitions/v1TaskType'
        title: 'Type of task, can be: trigger, action, filter or building block'
      internal:
        type: boolean
        title: Flag to set whether a task definition will be exposed only internally
      publishedState:
        $ref: '#/definitions/v1PublishedState'
        title: Property to set whether a task definition has been published and can be seen by everyone or if it's still in draft, and thus in development
      requiredScopes:
        type: array
        items:
          type: string
        title: The scopes required to use an access token to hit the apis used in the resource
      availableInDefaultAutomations:
        type: boolean
        title: Flag to set whether a task definition is available to be used in default automations
      requiredSubscriptionFeatures:
        type: array
        items:
          type: string
        title: The subscription features required to use this task
      lastEditedBy:
        type: string
        title: iam.User.Id of the user that most recently modified this task definition
      eventTypeId:
        type: string
        title: 'Only used on trigger task types: The id of the event type that will trigger this task definition'
      preProcessors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1WorkflowStep'
        title: A list of workflow steps to be executed before the resource
      marketReliant:
        type: boolean
        description: market reliant should no longer be used. It no longer serves a function and will be removed in the future.
      eventSubTypeId:
        type: string
        title: 'Only used on trigger task types: The id of the event sub type that will trigger this task definition'
      supportedContexts:
        type: array
        items:
          $ref: '#/definitions/v1Context'
        title: The contexts that this task definition can successfully be run in
      choices:
        $ref: '#/definitions/v1Choices'
        description: |-
          The choices to execute before the step runs to decide if it should run or not based on some external static data.
          The main use case for this is to differentiate the Contact and Company CRM triggers. It's the same event topic, but
          the value of object_type is either CONTACT or COMPANY.
      requiredApps:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AppKey'
        title: Marketplaces apps required to use this task definition. Multiple apps will be evaluated as an OR, not as an AND
      staticValidationRules:
        $ref: '#/definitions/v1Choices'
        description: |-
          Static validation rules are rules that are run during the listing of task definitions to determine if the task definiton is valid
          to run. This can be used for things such as a "at least one value required" validator.
  v1TaskType:
    type: string
    enum:
      - TASK_TYPE_UNSPECIFIED
      - TASK_TYPE_ACTION
      - TASK_TYPE_TRIGGER
      - TASK_TYPE_BUILDING_BLOCKS
      - TASK_TYPE_FILTER
    default: TASK_TYPE_UNSPECIFIED
  v1Token:
    type: object
    properties:
      userId:
        type: string
        title: The iam.User id of the user with whose auth the automation is running with
      scopes:
        type: array
        items:
          type: string
        title: The scopes that have already been granted to this automation by the user
      refreshTokenExpiry:
        type: string
        format: date-time
        title: When the refresh token expires
      brokenTime:
        type: string
        format: date-time
        title: The time at which it was discovered that the token was broken
      consentingUserId:
        type: string
        description: |-
          The iam.User id of the user that consented to the scopes of the automation
          to be run using a service account. If this value is set then the user_id
          above is the one of a service account.
  v1UnhideRequest:
    type: object
    properties:
      id:
        type: string
  v1UnpublishRequest:
    type: object
    properties:
      id:
        type: string
  v1UnsubscribeRequest:
    type: object
    properties:
      automationId:
        type: string
  v1UpdateAutomationRequest:
    type: object
    properties:
      automation:
        $ref: '#/definitions/v1Automation'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpdateEventTriggerDefinitionRequest:
    type: object
    properties:
      eventTriggerDefinition:
        $ref: '#/definitions/v1EventTriggerDefinition'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpdateTaskDefinitionRequest:
    type: object
    properties:
      taskDefinition:
        $ref: '#/definitions/v1TaskDefinition'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1ValidationType:
    type: string
    enum:
      - VALIDATION_TYPE_UNSPECIFIED
      - VALIDATION_TYPE_STREAM
      - VALIDATION_TYPE_USER_PROVIDED
      - VALIDATION_TYPE_SYSTEM
    default: VALIDATION_TYPE_UNSPECIFIED
  v1WaitForTriggerFilter:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  v1WorkflowStep:
    type: object
    properties:
      id:
        type: string
      taskDefinitionId:
        type: string
      data:
        type: string
      choices:
        $ref: '#/definitions/v1Choices'
      sleep:
        type: string
        format: int64
        title: sleep duration in nanoseconds
      waitForTriggerDefinitionId:
        type: string
        title: WaitForTriggerDefinitionID is the TriggerDefinitionID of the event that the step should wait for
      waitForTriggerTaskDefinitionId:
        type: string
        title: WaitForTriggerTaskDefinitionID is the id of the TaskDefinition that should run when the trigger happens
      name:
        type: string
      customOutputParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OutputParameter'
        title: Custom output parameters for the workflow step that will be used in addition to the step's task definition output parameters
      waitForTriggerFilter:
        $ref: '#/definitions/v1WaitForTriggerFilter'
        title: wait_for_trigger_filter a key-value pair for which filtering on the incoming trigger event, e.g., "task_id" & "{.WorkflowStep.123.task_id}"
      clearedDataFlag:
        type: boolean
      notes:
        type: string
      sleepWaitConditions:
        $ref: '#/definitions/v1SleepWaitConditions'
      groupId:
        type: string
  v1WorkflowStepOutputParameterContainer:
    type: object
    properties:
      workflowStep:
        $ref: '#/definitions/v1WorkflowStep'
      outputParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OutputParameter'
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
