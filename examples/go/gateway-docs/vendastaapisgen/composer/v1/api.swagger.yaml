swagger: "2.0"
info:
  title: composer/v1/api.proto
  version: version not set
tags:
  - name: Composer
consumes:
  - application/json
produces:
  - application/json
paths:
  /composer.v1.Composer/DeleteHashtags:
    post:
      summary: Bulk delete hashtag model
      operationId: Composer_DeleteHashtags
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteHashtagsRequest'
      tags:
        - Composer
  /composer.v1.Composer/GetTenorAnonymousId:
    post:
      summary: Gets the anonymous id required to make calls to the tenor api
      operationId: Composer_GetTenorAnonymousId
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTenorAnonymousIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTenorAnonymousIdRequest'
      tags:
        - Composer
  /composer.v1.Composer/ListPixabayImages:
    post:
      summary: List pixabay images for a given query
      operationId: Composer_ListPixabayImages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPixabayImagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListPixabayImagesRequest'
      tags:
        - Composer
  /composer.v1.Composer/ListTenorGifs:
    post:
      summary: list tenor gifs for a given query
      operationId: Composer_ListTenorGifs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListTenorGifsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListTenorGifsRequest'
      tags:
        - Composer
  /composer.v1.Composer/ReplaceHashtags:
    post:
      summary: Bulk create or update hashtag model
      operationId: Composer_ReplaceHashtags
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReplaceHashtagsRequest'
      tags:
        - Composer
  /composer.v1.Composer/SchedulePosts:
    post:
      summary: Schedule post
      operationId: Composer_SchedulePosts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SchedulePostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SchedulePostsRequest'
      tags:
        - Composer
  /composer.v1.Composer/SearchHashtag:
    post:
      summary: Search for hashtags based on provided filter
      operationId: Composer_SearchHashtag
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchHashtagResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchHashtagRequest'
      tags:
        - Composer
  /composer.v1.Composer/UpdatePosts:
    post:
      summary: Edit post
      operationId: Composer_UpdatePosts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdatePostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdatePostsRequest'
      tags:
        - Composer
definitions:
  YoutubeCustomizationPrivacyStatus:
    type: string
    enum:
      - STATUS_INVALID
      - STATUS_PUBLIC
      - STATUS_PRIVATE
      - STATUS_UNLISTED
    default: STATUS_INVALID
  composerv1MediaEntry:
    type: object
    properties:
      mediaEntryId:
        type: string
      mediaUrl:
        type: string
      mediaType:
        type: string
      containerId:
        type: string
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
    description: |-
      Media Entry field to have media
      This is currently starting with Instagram Carousel posts but
      we would need to update other post types as well.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1DeleteHashtagsRequest:
    type: object
    properties:
      keyword:
        type: array
        items:
          type: string
        title: Hashtag keyword to be deleted
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1Exception:
    type: object
    properties:
      socialServiceId:
        type: string
        title: social service id
      message:
        type: string
        title: Exception message
  v1GMBPostCustomization:
    type: object
    properties:
      title:
        type: string
      eventStart:
        type: string
        format: date-time
      eventEnd:
        type: string
        format: date-time
      ctaType:
        type: string
      linkUrl:
        type: string
  v1GetTenorAnonymousIdRequest:
    type: object
  v1GetTenorAnonymousIdResponse:
    type: object
    properties:
      anonymousId:
        type: string
        title: Anonyous id to be used for calling tenor
      deprecated:
        type: string
  v1Hashtag:
    type: object
    properties:
      hashTagId:
        type: string
        title: The id of hash tag
      keyword:
        type: string
        title: The keyword
      usedCount:
        type: string
        format: int64
        title: Used count
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1Link:
    type: object
    properties:
      name:
        type: string
        title: The name of the link preview
      picture:
        type: string
        description: The preview image associated with the link.
      description:
        type: string
        title: The description of the link
      title:
        type: string
        title: The title for the link
  v1ListPixabayImagesRequest:
    type: object
    properties:
      query:
        type: string
        title: Query string for pixabay images
      cursor:
        type: string
        title: A cursor to specify where to start listing pixabay images
      pageSize:
        type: string
        format: int64
        title: The number of pixabay images to return
  v1ListPixabayImagesResponse:
    type: object
    properties:
      total:
        type: string
        format: int64
        title: total number
      totalHits:
        type: string
        format: int64
        title: hit number
      hits:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PixabayImage'
        title: Hit pixabay images response list
      deprecated:
        type: string
  v1ListTenorGifsRequest:
    type: object
    properties:
      query:
        type: string
        title: Query string for the gifs
      cursor:
        type: string
        title: A cursor to specify where to start listing tenor gifs
      pageSize:
        type: string
        format: int64
        title: The number of tenor gifs to return
      locale:
        type: string
        title: Language of the response
      anonymousId:
        type: string
        title: Anonymous id required to make calls to tenor apis
      mediaFilter:
        type: string
        title: Applied filters
      aspectRatioRange:
        type: string
        title: The aspect ratio of gifs to list
      contentFilter:
        type: string
        title: Content filter
  v1ListTenorGifsResponse:
    type: object
    properties:
      next:
        type: string
        title: next cursor
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TenorGif'
        title: resulting list of tenor gifs
      deprecated:
        type: string
  v1MetaData:
    type: object
    properties:
      propertyName:
        type: string
      propertyValue:
        type: string
    description: |-
      Metadata message type for saving properties in individual µservice
      This is currently starting with Instagram Carousel posts but
      we would need to update other post types as well.
  v1PixabayImage:
    type: object
    properties:
      id:
        type: string
        format: int64
        title: The id of pixabay image
      pageUrl:
        type: string
        title: pixabay image page URL
      type:
        type: string
        title: pixabay image type
      tags:
        type: string
        title: pixabay image tag
      previewUrl:
        type: string
        title: pixabay image preview
      previewWidth:
        type: string
        format: int64
        title: pixabay image preview width
      previewHeight:
        type: string
        format: int64
        title: pixabay image preview height
      webformatUrl:
        type: string
        title: pixabay image webformat URL
      webformatWidth:
        type: string
        format: int64
        title: pixabay image webformat wdith
      webformatHeight:
        type: string
        format: int64
        title: pixabay image webformat height
      largeImageUrl:
        type: string
        title: pixabay image large image URL
      fullHdUrl:
        type: string
        title: pixabay image full HD URL
      imageUrl:
        type: string
        title: pixabay image image URL
      imageWidth:
        type: string
        format: int64
        title: pixabay image image width
      imageHeight:
        type: string
        format: int64
        title: pixabay image image height
      imageSize:
        type: string
        format: int64
        title: pixabay image image size
      views:
        type: string
        format: int64
        title: pixabay image count of view
      downloads:
        type: string
        format: int64
        title: pixabay image count of download
      favorites:
        type: string
        format: int64
        title: pixabay image count of favorite
      likes:
        type: string
        format: int64
        title: pixabay image count of like
      comments:
        type: string
        format: int64
        title: pixabay image count of comment
      userId:
        type: string
        format: int64
        title: pixabay image user Id
      user:
        type: string
        title: pixabay image user
      userImageUrl:
        type: string
        title: pixabay image user image URL
  v1Post:
    type: object
    properties:
      socialServiceId:
        type: string
        title: The id of a social service to publish to
      businessId:
        type: string
        title: The business id of the account
      postText:
        type: string
        title: The Post text
      imageUrls:
        type: array
        items:
          type: string
        title: The urls of images to include on the post
      scheduled:
        type: string
        format: date-time
        title: The time to schedule the post for
      linkShortCodes:
        type: array
        items:
          type: string
        title: The shortcodes of links in the post
      linkUrl:
        type: string
        title: The url of a link to post
      gifUrl:
        type: string
        title: The url of a gif to post
      videoUrl:
        type: string
        title: The url of a video to post
      internalPostId:
        type: string
        title: The internal post id
      link:
        $ref: '#/definitions/v1Link'
      gmbPostCustomization:
        $ref: '#/definitions/v1GMBPostCustomization'
        title: GMB post customization
      isMultilocation:
        type: boolean
        title: If this is an ML composer post or not
      brandId:
        type: string
        title: If this is an ML post, brandId is also required
      postType:
        $ref: '#/definitions/v1PostType'
        title: The type of post e.g., Image/video/reel/gif etc
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/composerv1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the media, could be anything
      title:
        type: string
        title: 'The title of the post: Used by Youtube and LinkedIn for now'
      youtubeCustomization:
        $ref: '#/definitions/v1YoutubeCustomization'
        title: Youtube customization
      tiktokCustomization:
        $ref: '#/definitions/v1TikTokCustomization'
        title: TikTok customization
  v1PostType:
    type: string
    enum:
      - POST_TYPE_INVALID
      - POST_TYPE_IMAGE
      - POST_TYPE_VIDEO
      - POST_TYPE_GIF
      - POST_TYPE_REEL
      - POST_TYPE_CAROUSEL
      - POST_TYPE_STORIES
    default: POST_TYPE_INVALID
  v1ReplaceHashtagsRequest:
    type: object
    properties:
      keyword:
        type: array
        items:
          type: string
        title: Hashtag keyword for create or update for used count
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1Result:
    type: object
    properties:
      socialPostId:
        type: string
        title: Social post id
      post:
        $ref: '#/definitions/v1Post'
  v1SchedulePostsRequest:
    type: object
    properties:
      posts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Post'
  v1SchedulePostsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Result'
        title: post results
      exceptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Exception'
        title: Exception for failures
  v1SearchHashtagRequest:
    type: object
    properties:
      searchTerm:
        type: string
        title: search term for hashtags
      limit:
        type: string
        format: int64
        title: Limit size for hashtags
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1SearchHashtagResponse:
    type: object
    properties:
      hashtags:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Hashtag'
        title: Hashtag response list
  v1TenorGif:
    type: object
    properties:
      media:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1TenorMediaObject'
        title: The gif in various file types
      tags:
        type: array
        items:
          type: string
        title: Gif tags
      hasAudio:
        type: boolean
        title: If the gif has audio
      title:
        type: string
        title: Gif name
      id:
        type: string
        title: Gif id
      created:
        type: number
        format: float
        title: Gif created time
  v1TenorMediaObject:
    type: object
    properties:
      preview:
        type: string
        title: Preview url
      url:
        type: string
        title: Gif url
      dimensions:
        type: array
        items:
          type: string
          format: int64
        title: Gif dimensions
      size:
        type: string
        format: int64
        title: Gif file size
  v1TikTokCustomization:
    type: object
    properties:
      allowComment:
        type: boolean
      allowDuet:
        type: boolean
      allowStitch:
        type: boolean
  v1UpdatePostsRequest:
    type: object
    properties:
      posts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Post'
  v1UpdatePostsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Result'
        title: Edit post result
      exceptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Exception'
        title: Edit post exceptions
  v1YoutubeCustomization:
    type: object
    properties:
      privacyStatus:
        $ref: '#/definitions/YoutubeCustomizationPrivacyStatus'
