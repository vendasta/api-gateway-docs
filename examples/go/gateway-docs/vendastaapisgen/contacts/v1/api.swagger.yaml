swagger: "2.0"
info:
  title: contacts/v1/api.proto
  version: version not set
tags:
  - name: Contacts
  - name: UserList
consumes:
  - application/json
produces:
  - application/json
paths:
  /contacts.v1.Contacts/AssociateID:
    post:
      summary: |-
        Creates a mapping in contacts between the vendasta Contact ID and the vendor's ID
        DEPRECATED: Use VendorCustomerService.VendorAssociateCustomerID
      operationId: Contacts_AssociateID
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AssociateIDRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/BulkCreate:
    post:
      summary: |-
        Bulk create contacts from a file in Google Cloud Storage
        DEPRECATED: Use CustomerService.BulkCreate
      operationId: Contacts_BulkCreate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BulkCreateContactRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/BulkUpdate:
    post:
      summary: |-
        Bulk update contacts
        DEPRECATED: Use CustomerService.BulkUpdate
      operationId: Contacts_BulkUpdate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BulkUpdateContactRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/Create:
    post:
      summary: |-
        Creates a contact
        DEPRECATED: Use CustomerService.Create
      operationId: Contacts_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateContactResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateContactRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/Delete:
    post:
      summary: |-
        Marks a contact as deleted
        DEPRECATED: Use CustomerService.Delete
      operationId: Contacts_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteContactRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/List:
    post:
      summary: |-
        Returns a list of contacts for an account group
        DEPRECATED: Use CustomerService.List
      operationId: Contacts_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListContactsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListContactsRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/ListOrigins:
    post:
      summary: |-
        Returns the app id and the whitelabeled name for all contacts origins for an account group
        DEPRECATED: Use CustomerService.ListCustomerOrigins
      operationId: Contacts_ListOrigins
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListOriginsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListOriginsRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/TriggerSync:
    post:
      summary: |-
        TriggerSync triggers syncing of all contacts for a business to a vendor app
        DEPRECATED: Use VendorCustomerService.SyncAllCustomers
      operationId: Contacts_TriggerSync
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1TriggerSyncRequest'
      tags:
        - Contacts
  /contacts.v1.Contacts/Update:
    post:
      summary: |-
        Update a contact
        DEPRECATED: Use CustomerService.Update
      operationId: Contacts_Update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateContactResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateContactRequest'
      tags:
        - Contacts
  /contacts.v1.UserList/AddUsersToList:
    post:
      summary: Add users to a group that represents a User List
      operationId: UserList_AddUsersToList
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddUsersToListRequest'
      tags:
        - UserList
  /contacts.v1.UserList/CreateUserList:
    post:
      summary: Creates a group that represents User List
      operationId: UserList_CreateUserList
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateUserListRequest'
      tags:
        - UserList
  /contacts.v1.UserList/DeleteUserFromList:
    post:
      summary: Delete a user inside a User List held within a group
      operationId: UserList_DeleteUserFromList
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteUserFromListRequest'
      tags:
        - UserList
  /contacts.v1.UserList/GetUserList:
    post:
      summary: Gets the user list details
      operationId: UserList_GetUserList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUserListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetUserListRequest'
      tags:
        - UserList
  /contacts.v1.UserList/ListUserLists:
    post:
      summary: List the user lists for a foriegn key defined by a group
      operationId: UserList_ListUserLists
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListUserListsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListUserListsRequest'
      tags:
        - UserList
  /contacts.v1.UserList/ListUsersFromList:
    post:
      summary: List the users inside a User List held within a group
      operationId: UserList_ListUsersFromList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListUsersFromListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListUsersFromListRequest'
      tags:
        - UserList
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AddUsersToListRequest:
    type: object
    properties:
      listId:
        type: string
        title: The unique ID for the list
      userIds:
        type: array
        items:
          type: string
        title: The list of IAM user IDs
  v1AssociateIDRequest:
    type: object
    properties:
      contactId:
        type: string
        title: The Contact ID to add an external mapping for
      vendorContactId:
        type: string
        title: The Contact ID on the external source to map to
      appId:
        type: string
        title: The Application ID for the mapping
    title: A request type to associate a vendor's contact id to the contact id in our system
  v1BulkCreateContactRequest:
    type: object
    properties:
      filePath:
        type: string
        title: The path of the csv file for bulk creating contacts in Google Cloud Storage
      mapping:
        $ref: '#/definitions/v1HeaderMapping'
        title: The header mapping in the csv file
      syncedAppIds:
        type: array
        items:
          type: string
        title: The list of appIDs that all contacts in the csv can be synced with
      permissionToContact:
        type: boolean
        title: This flag is true if all contacts in the csv have explicitly opted-in to receive communication from the Business
  v1BulkUpdateContactRequest:
    type: object
    properties:
      contactIds:
        type: array
        items:
          type: string
        title: Contact ids to update
      syncedAppIdsToAdd:
        type: array
        items:
          type: string
        title: Additions to the list of appIDs that the contacts in contact_ids can be synced with
      syncedAppIdsToRemove:
        type: array
        items:
          type: string
        title: Removals from the list of appIDs that the contacts in contact_ids can be synced with
      permissionToContact:
        type: boolean
        title: This flag is true if all contacts in contact_ids have explicitly opted-in to receive communication from the Business
      accountGroupId:
        type: string
        title: Account group the contacts are in
  v1Contact:
    type: object
    properties:
      contactId:
        type: string
        title: A unique id for the contact
      accountGroupId:
        type: string
        title: The account group this contact belongs to
      firstName:
        type: string
        title: The first name of the contact
      lastName:
        type: string
        title: The last name of the contact
      address:
        type: string
        title: The street address of where the contact is
      city:
        type: string
        title: The city where the contact is
      state:
        type: string
        title: The state where the contact is
      country:
        type: string
        title: The country where the contact is
      phone:
        type: array
        items:
          type: string
        title: The phone number of the contact
      email:
        type: array
        items:
          type: string
        title: The email address of the contact
      created:
        type: string
        format: date-time
        title: The time the contact was created
      updated:
        type: string
        format: date-time
        title: The time the contact was last modified
      deleted:
        type: string
        format: date-time
        title: The time the contact was deleted. Will be nil if the contact has not been deleted
      origin:
        type: string
        title: The ID of the application that created the contact
      originalId:
        type: string
        title: The customer specified ID from the origin system
      syncedAppIds:
        type: array
        items:
          type: string
        title: The list of appIDs that the contact can be synced with
      permissionToContact:
        type: boolean
        title: This flag is true if the contact has explicitly opted-in to receive communication from the Business
  v1CreateContactRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group to add this contact to
      firstName:
        type: string
        title: The first name of the contact
      lastName:
        type: string
        title: The last name of the contact
      address:
        type: string
        title: The street address of where the contact is
      city:
        type: string
        title: The city where the contact is
      state:
        type: string
        title: The state where the contact is
      country:
        type: string
        title: The country where the contact is
      phone:
        type: array
        items:
          type: string
        title: The phone number of the contact
      email:
        type: array
        items:
          type: string
        title: The email address of the contact
      origin:
        type: string
        title: The application ID that created the contact
      originalId:
        type: string
        title: The customer specified ID from the origin system
      syncedAppIds:
        type: array
        items:
          type: string
        title: The list of appIDs that the contact can be synced with
      permissionToContact:
        type: boolean
        title: This flag is true if the contact has explicitly opted-in to receive communication from the Business
    title: Creating a contact requires [account_group_id] and at least one of [first_name, last_nam, email, phone]
  v1CreateContactResponse:
    type: object
    properties:
      contact:
        $ref: '#/definitions/v1Contact'
        title: The new contact that's been created
  v1CreateUserListRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The unique partner ID
      listId:
        type: string
        title: The unique ID for the list
      listName:
        type: string
        title: The name of the list for the users
  v1DeleteContactRequest:
    type: object
    properties:
      contactId:
        type: string
        title: The contact ID to delete
      accountGroupId:
        type: string
        title: The account group to delete contact for
      author:
        type: string
        title: The author(app_id) that perform the delete
  v1DeleteUserFromListRequest:
    type: object
    properties:
      listId:
        type: string
        title: The unique ID for the list
      userId:
        type: string
        title: An IAM user ID
  v1Filters:
    type: object
    properties:
      source:
        type: array
        items:
          type: string
        title: The source of the contacts the user want to filter for
      syncedAppIds:
        type: array
        items:
          type: string
        title: Filter with the appIDs that the contacts are synced with
    title: Option for controlling the filter of the contacts list
  v1GetUserListRequest:
    type: object
    properties:
      listId:
        type: string
        title: The unique ID for the list
  v1GetUserListResponse:
    type: object
    properties:
      userList:
        $ref: '#/definitions/v1UserListItem'
        title: The user list details
  v1HeaderMapping:
    type: object
    properties:
      emails:
        type: array
        items:
          type: string
      phones:
        type: array
        items:
          type: string
      firstName:
        type: string
      lastName:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
    title: Mapping headers in the csv file to match each field to whatever it's named
  v1ListContactsRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group to retrieve the contacts for
      cursor:
        type: string
        title: Cursor should be supplied from the last response or ""
      pageSize:
        type: string
        format: int64
        description: The number of results to retrieve.
      searchTerm:
        type: string
        title: search_term is an arbitrary string to perform full text search across all the contacts information
      sortOptions:
        $ref: '#/definitions/v1SortOptions'
        title: sort_options control what fileds it can sort on and the sorting direction
      filters:
        $ref: '#/definitions/v1Filters'
        title: filters control what fileds it can filte for
      appId:
        type: string
        title: app_id indicates what application's associations we should use to translate the contact id
  v1ListContactsResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Contact'
        title: List of the contacts
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: Total number of contacts for account group
  v1ListOriginsRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group id to retrieve contacts origins for
  v1ListOriginsResponse:
    type: object
    properties:
      whiteLabeledOrigins:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1WhiteLabeledOrigin'
        title: Mapping between an origin and the whitelabeled name
  v1ListUserListsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The unique partner ID
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
  v1ListUserListsResponse:
    type: object
    properties:
      userLists:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserListItem'
        title: The list of userlist items
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1ListUsersFromListRequest:
    type: object
    properties:
      listId:
        type: string
        title: The unique ID for the list
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
  v1ListUsersFromListResponse:
    type: object
    properties:
      userIds:
        type: array
        items:
          type: string
        title: The list of IAM user IDs
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
    title: Cursor and page size for paging request
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: Total number of results
    title: Metadata related to the paged response from a List request
  v1SortDirection:
    type: string
    enum:
      - Ascending
      - Descending
    default: Ascending
    description: The directions that a result set can be sorted in.
  v1SortField:
    type: string
    enum:
      - Name
      - Created
    default: Name
    description: The field to sort a result set on.
  v1SortOptions:
    type: object
    properties:
      direction:
        $ref: '#/definitions/v1SortDirection'
        title: A direction to sort results in
      field:
        $ref: '#/definitions/v1SortField'
        title: Field to sort on
    title: Options for controlling the order of query results
  v1TriggerSyncRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The business account requesting contacts to be synced
      appId:
        type: string
        title: The vendor app that contacts will be synced to
  v1UpdateContactRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group to update this contact
      firstName:
        type: string
        title: The first name of the contact
      lastName:
        type: string
        title: The last name of the contact
      address:
        type: string
        title: The street address of where the contact is
      city:
        type: string
        title: The city where the contact is
      state:
        type: string
        title: The state where the contact is
      country:
        type: string
        title: The country where the contact is
      phone:
        type: array
        items:
          type: string
        title: The phone number of the contact
      email:
        type: array
        items:
          type: string
        title: The email address of the contact
      contactId:
        type: string
        title: The contact ID to update
      author:
        type: string
        title: The author(app_id) that perform the update
      syncedAppIds:
        type: array
        items:
          type: string
        title: The list of appIDs that the contact can be synced with
      permissionToContact:
        type: boolean
        title: This flag is true if the contact has explicitly opted-in to receive communication from the Business
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: Mask for what fields should be updated
  v1UpdateContactResponse:
    type: object
    properties:
      contact:
        $ref: '#/definitions/v1Contact'
        title: The new contact that's been updated
  v1UserListItem:
    type: object
    properties:
      listId:
        type: string
        title: The unique ID for the list
      listName:
        type: string
        title: The name of the list for the users
      updated:
        type: string
        format: date-time
        title: The list's created or updated time (group)
      itemCount:
        type: string
        format: int64
        title: The list's member count
  v1WhiteLabeledOrigin:
    type: object
    properties:
      origin:
        type: string
        title: The origin of contact
      whiteLabeledName:
        type: string
        title: The white labeled name of the contact origin
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
