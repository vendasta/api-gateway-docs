swagger: "2.0"
info:
  title: conversation/v1/api.proto
  version: version not set
tags:
  - name: ConversationService
  - name: InboxService
  - name: EmailService
  - name: AISystemMessageService
consumes:
  - application/json
produces:
  - application/json
paths:
  /conversation.v1.AISystemMessageService/GetAISystemMessage:
    post:
      summary: Get will retrieve an AI System Message
      operationId: AISystemMessageService_GetAISystemMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAISystemMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAISystemMessageRequest'
      tags:
        - AISystemMessageService
  /conversation.v1.AISystemMessageService/ListAISystemMessages:
    post:
      summary: List will retrieve a list of AI System Messages
      operationId: AISystemMessageService_ListAISystemMessages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAISystemMessagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAISystemMessagesRequest'
      tags:
        - AISystemMessageService
  /conversation.v1.AISystemMessageService/UpsertAISystemMessage:
    post:
      summary: Upsert will create or update an AI System Message
      operationId: AISystemMessageService_UpsertAISystemMessage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpsertAISystemMessageRequest'
      tags:
        - AISystemMessageService
  /conversation.v1.ConversationService/AddConversationToConversationView:
    post:
      summary: Add conversation to Conversation view
      operationId: ConversationService_AddConversationToConversationView
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddConversationToConversationViewRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/AddMultiParticipants:
    post:
      summary: Adds multiple participants to an existing conversation
      operationId: ConversationService_AddMultiParticipants
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AddMultiParticipantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddMultiParticipantsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/CreateConversation:
    post:
      summary: Create a conversation
      operationId: ConversationService_CreateConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateConversationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateConversationRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/CreateMessageTemplate:
    post:
      summary: Create message template
      operationId: ConversationService_CreateMessageTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateMessageTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateMessageTemplateRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/CreateMultiMessages:
    post:
      summary: Create a list of messages
      operationId: ConversationService_CreateMultiMessages
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateMultiMessagesRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/CreateWidget:
    post:
      summary: |-
        Widget Configuration CRUD
        Create a new widget
      operationId: ConversationService_CreateWidget
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateWidgetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateWidgetRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/CreateWidgetConversation:
    post:
      summary: Create a new widget conversation
      operationId: ConversationService_CreateWidgetConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateWidgetConversationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateWidgetConversationRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/DeleteConversation:
    post:
      summary: Delete a conversation
      operationId: ConversationService_DeleteConversation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteConversationRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/DeleteMessage:
    post:
      summary: Delete a message of a conversation
      operationId: ConversationService_DeleteMessage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteMessageRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/DeleteMessageTemplate:
    post:
      summary: Delete message template
      operationId: ConversationService_DeleteMessageTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteMessageTemplateRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/DeleteWidget:
    post:
      summary: Delete a widget
      operationId: ConversationService_DeleteWidget
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteWidgetRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/EvaluateResponse:
    post:
      summary: Create a record of the evaluation of a response in a conversation
      operationId: ConversationService_EvaluateResponse
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EvaluateResponseRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetAvailableChannelsForConversation:
    post:
      summary: Get the list of channels that messages can be sent on for the provided conversation
      operationId: ConversationService_GetAvailableChannelsForConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAvailableChannelsForConversationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAvailableChannelsForConversationRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetConversationByKey:
    post:
      summary: Get a conversation based on the fields of conversation unique index
      operationId: ConversationService_GetConversationByKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConversationByKeyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetConversationByKeyRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetConversationSummary:
    post:
      summary: Get conversation summary
      operationId: ConversationService_GetConversationSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConversationSummaryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetConversationSummaryRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetConversationViews:
    post:
      summary: Get conversation views for participant
      operationId: ConversationService_GetConversationViews
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConversationViewsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetConversationViewsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMessage:
    post:
      summary: Get a message for a conversation
      operationId: ConversationService_GetMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Message'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMessageRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMessageTemplate:
    post:
      summary: Get message template
      operationId: ConversationService_GetMessageTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMessageTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMessageTemplateRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiConversationDetails:
    post:
      summary: Get the details for a conversation, including participants and latest message, for a list of conversation ids.
      operationId: ConversationService_GetMultiConversationDetails
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiConversationDetailsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiConversationDetailsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiConversationMessageCount:
    post:
      summary: Get a count of the number of messages on a conversation
      operationId: ConversationService_GetMultiConversationMessageCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiConversationMessageCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiConversationMessageCountRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiEvents:
    post:
      operationId: ConversationService_GetMultiEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiEventsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiMessages:
    post:
      summary: Get a list of messages by ids
      operationId: ConversationService_GetMultiMessages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiMessagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiMessagesRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiParticipants:
    post:
      summary: Get a list of participants by ids
      operationId: ConversationService_GetMultiParticipants
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiParticipantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiParticipantsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiWidget:
    post:
      summary: Get widgets by id
      operationId: ConversationService_GetMultiWidget
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiWidgetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiWidgetRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetMultiWidgetMessages:
    post:
      summary: Get a list of messages by ids
      operationId: ConversationService_GetMultiWidgetMessages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiWidgetMessagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiWidgetMessagesRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetParticipantsByKey:
    post:
      summary: Get a list of participants by participant key
      operationId: ConversationService_GetParticipantsByKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetParticipantsByKeyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetParticipantsByKeyRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetWidget:
    post:
      summary: Get widget by id
      operationId: ConversationService_GetWidget
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetWidgetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetWidgetRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetWidgetConfig:
    post:
      summary: Get widget config by id
      operationId: ConversationService_GetWidgetConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetWidgetConfigResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetWidgetConfigRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/GetWidgetConversation:
    post:
      summary: Get a widget conversation using the widget participant token
      operationId: ConversationService_GetWidgetConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetWidgetConversationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties: {}
      tags:
        - ConversationService
  /conversation.v1.ConversationService/InjectMessage:
    post:
      summary: Inject message into a conversation
      operationId: ConversationService_InjectMessage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1InjectMessageRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/ListMessageTemplate:
    post:
      summary: List message templates for a subject participant
      operationId: ConversationService_ListMessageTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListMessageTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListMessageTemplateRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/ListMessages:
    post:
      summary: List messages of a conversation
      operationId: ConversationService_ListMessages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListMessagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListMessagesRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/ListResponseEvaluations:
    post:
      summary: List response evaluations
      operationId: ConversationService_ListResponseEvaluations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListResponseEvaluationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListResponseEvaluationsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/ListWidgets:
    post:
      summary: List widgets
      operationId: ConversationService_ListWidgets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListWidgetsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListWidgetsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/LookupConversations:
    post:
      summary: Lookup conversations based on a set uf participant attributes
      operationId: ConversationService_LookupConversations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LookupConversationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LookupConversationsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/NewInboxLeadCaptured:
    post:
      summary: 'Informs conversation that a new Inbox lead was captured, for example: form submissions'
      operationId: ConversationService_NewInboxLeadCaptured
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NewInboxLeadCapturedResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1NewInboxLeadCapturedRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/ReceiveMessage:
    post:
      summary: Receive a message in a conversation
      operationId: ConversationService_ReceiveMessage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReceiveMessageRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/RemoveConversationFromConversationView:
    post:
      summary: Remove conversation from Conversation view
      operationId: ConversationService_RemoveConversationFromConversationView
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveConversationFromConversationViewRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/SearchConversations:
    post:
      summary: Search for conversations for an account and a search term.
      operationId: ConversationService_SearchConversations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchConversationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchConversationsRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/SendMessage:
    post:
      summary: Send a message to a conversation
      operationId: ConversationService_SendMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendMessageRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/SendWidgetMessage:
    post:
      summary: Send message in a widget conversation
      operationId: ConversationService_SendWidgetMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendWidgetMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendWidgetMessageRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/SetLastSeen:
    post:
      summary: Set conversation lastSeen field
      operationId: ConversationService_SetLastSeen
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SetLastSeenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetLastSeenRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/UpdateConversation:
    post:
      summary: Update a conversation
      operationId: ConversationService_UpdateConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateConversationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateConversationRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/UpdateMessageStatus:
    post:
      summary: Update a message status of a conversation
      operationId: ConversationService_UpdateMessageStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateMessageStatusRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/UpdateMessageTemplate:
    post:
      summary: Update message template
      operationId: ConversationService_UpdateMessageTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateMessageTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateMessageTemplateRequest'
      tags:
        - ConversationService
  /conversation.v1.ConversationService/UpdateWidget:
    post:
      summary: Update a widget
      operationId: ConversationService_UpdateWidget
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateWidgetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateWidgetRequest'
      tags:
        - ConversationService
  /conversation.v1.EmailService/GetOwnerEmail:
    post:
      summary: Get owner email
      operationId: EmailService_GetOwnerEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetOwnerEmailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetOwnerEmailRequest'
      tags:
        - EmailService
  /conversation.v1.InboxService/GetConfiguration:
    post:
      summary: Get a configuration for inbox
      operationId: InboxService_GetConfiguration
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConfigurationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetConfigurationRequest'
      tags:
        - InboxService
  /conversation.v1.InboxService/GetMultiConfiguration:
    post:
      summary: Get multiple configurations for inbox
      operationId: InboxService_GetMultiConfiguration
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiConfigurationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiConfigurationRequest'
      tags:
        - InboxService
  /conversation.v1.InboxService/UpsertConfiguration:
    post:
      summary: Upsert will create or update a configuration for inbox
      operationId: InboxService_UpsertConfiguration
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpsertConfigurationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpsertConfigurationRequest'
      tags:
        - InboxService
  /conversation.v1.InboxService/UpsertProductFeature:
    post:
      summary: Upsert will update or create product feature availaiblity for inbox
      operationId: InboxService_UpsertProductFeature
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpsertProductFeatureResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpsertProductFeatureRequest'
      tags:
        - InboxService
definitions:
  GetMessageTemplateRequestHydrationOptions:
    type: object
    properties:
      hydrationEntities:
        type: array
        items:
          type: object
          $ref: '#/definitions/HydrationOptionsHydrationEntity'
  GetMessageTemplateResponseHydrationInformation:
    type: object
    properties:
      allFieldsHydrated:
        type: boolean
        title: If all dynamic fields in message template are hydrated
  HydrationEntityEntityType:
    type: string
    enum:
      - ENTITY_TYPE_UNDEFINED
      - ENTITY_TYPE_PARTNER
      - ENTITY_TYPE_ACCOUNT_GROUP
      - ENTITY_TYPE_CONTACT
    default: ENTITY_TYPE_UNDEFINED
  HydrationOptionsHydrationEntity:
    type: object
    properties:
      entityType:
        $ref: '#/definitions/HydrationEntityEntityType'
        title: The entity type used to specify the type of entity id
      entityId:
        type: string
        title: |-
          The id used to get hydration information
          Such as, partner id used to get partner information to hydrate partner related dynamic fields in message template
  ListMessagesRequestListMessagesFilters:
    type: object
    properties:
      conversationId:
        type: string
  ListResponseEvaluationsResponseSummary:
    type: object
    properties:
      feedbackThemes:
        type: array
        items:
          type: object
          $ref: '#/definitions/SummaryTheme'
        title: Feedback themes that are used to categorize the response evaluations
    title: |-
      The summary of the response evaluations, only returned if `summarize` is true in the request
      The summary is cached based on the `subject_participant` and `created_after` and `created_before` filters for 12 hours
      The summary is not specific to the `paging_options`, it considers as many evaluations as possible within the time range
  ListWidgetsRequestListWidgetsFilters:
    type: object
    properties:
      namespaces:
        type: array
        items:
          type: string
        title: |-
          The namespaces of the widgets e.g. "ABC", "AG-123"
          Use either namespace or options.namespaces
      widgetTypes:
        type: array
        items:
          type: string
        title: The types of the widget e.g. "inbox-pro", "my-listings"
  LookupConversationsRequestLookupConversationsFilters:
    type: object
    properties:
      internalParticipantId:
        type: array
        items:
          type: string
        title: the internal participant id (IAM or Contact)
      location:
        $ref: '#/definitions/v1PlatformLocation'
        title: 'Deprecated: use origin_location instead'
      channel:
        $ref: '#/definitions/v1ConversationChannel'
      accountGroupId:
        type: string
        title: Deprecated
      externalConversationId:
        type: string
      originLocation:
        $ref: '#/definitions/v1PlatformLocation'
      originLocationExternalId:
        type: string
  LookupConversationsResponseConversations:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
  MetadataIdentifier:
    type: string
    enum:
      - METADATA_IDENTIFIER_UNDEFINED
      - METADATA_IDENTIFIER_RECIPIENT
      - METADATA_IDENTIFIER_SENDER
      - METADATA_IDENTIFIER_CONVERSATION
      - METADATA_IDENTIFIER_WHATSAPP_TEMPLATE
    default: METADATA_IDENTIFIER_UNDEFINED
  SummaryTheme:
    type: object
    properties:
      name:
        type: string
        title: The name of the theme
      description:
        type: string
        title: The description of the theme
      examples:
        type: array
        items:
          type: string
        title: Examples of the theme, these are real examples of responses that are categorized under the theme
  conversationv1AIConfiguration:
    type: object
    properties:
      aiResponseEnabled:
        type: boolean
      willRespondAt:
        type: string
        format: date-time
  conversationv1Status:
    type: string
    enum:
      - ERROR
      - WARNING
      - INFO
      - RESTRICTED
    default: ERROR
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1AISystemMessage:
    type: object
    properties:
      systemMessageId:
        type: string
        title: The id of the AI System Message
      systemMessageBody:
        type: string
        title: The body of the AI System Message
      iamUserId:
        type: string
        title: The IAM User ID of the user who last updated the AI System Message
      updated:
        type: string
        format: date-time
        title: The timestamp when the AI System Message was updated
  v1AddConversationToConversationViewRequest:
    type: object
    properties:
      viewId:
        type: string
      conversationId:
        type: string
      participantId:
        type: string
    title: AddConversationToConversationViewRequest is the request for adding conversation to Conversation view
  v1AddMultiParticipantsRequest:
    type: object
    properties:
      conversationId:
        type: string
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
  v1AddMultiParticipantsResponse:
    type: object
    properties:
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
  v1Address:
    type: object
    properties:
      firstLineAddress:
        type: string
        title: Address first line of the participant
      secondLineAddress:
        type: string
        title: Address second line of the participant
      city:
        type: string
        title: City of the participant
      state:
        type: string
        title: State of the participant
      country:
        type: string
        title: Country of the participant
      zipCode:
        type: string
        title: Zip code of the participant
  v1CapturedLead:
    type: object
    properties:
      name:
        type: string
        title: The name of the lead
      email:
        type: string
        title: The email address of the lead
      phone:
        type: string
        title: The phone number of the lead
      contactId:
        type: string
        title: The id of the CRM contact
    title: The captured lead
  v1ChannelAvailability:
    type: object
    properties:
      channel:
        $ref: '#/definitions/v1ConversationChannel'
      isAvailable:
        type: boolean
      statuses:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ChannelStatus'
  v1ChannelStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/conversationv1Status'
      i18nKey:
        type: string
  v1Configuration:
    type: object
    properties:
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
        description: The subject participant that this configuration is for.
      createdAt:
        type: string
        format: date-time
        title: The time that the configuration was created at
      updatedAt:
        type: string
        format: date-time
        title: The last time the configuration was updated
      availabilityMessage:
        type: string
        title: Availability Message is a message displayed at the top of inbox for your organization
      showAvailabilityMessage:
        type: boolean
        title: Determines if a availability message is displayed
      googleBusinessMessagesEnabled:
        type: boolean
        title: Determines if google business messages is available for the organization referred to by subject_participant
      smsEnabled:
        type: boolean
        title: Determines if sms is available for the organization referred to by subject_participant
      inboxProEnabled:
        type: boolean
        title: Deprecated
      webChatEnabled:
        type: boolean
        title: Determines if web chat is available for the organization referred to by subject_participant
      facebookMessengerEnabled:
        type: boolean
        title: Determines if facebook messenger is available for the organization referred to by subject_participant
      multiLocationEnabled:
        type: boolean
        title: Determine if Multi location is available for the organization referred to by subject_participant
      instagramMessagingEnabled:
        type: boolean
        title: Determines if instagram messaging is available for the organization referred to by subject_participant
      aiConfiguration:
        $ref: '#/definitions/v1ConfigurationAIConfiguration'
        title: AI Configuration
      whatsappEnabled:
        type: boolean
        title: Determines if whats app is available for the organization referred to by subject_participant
    title: Configuration for Inbox
  v1ConfigurationAIConfiguration:
    type: object
    properties:
      smsResponderEnabled:
        type: boolean
  v1Conversation:
    type: object
    properties:
      conversationId:
        type: string
      channel:
        $ref: '#/definitions/v1ConversationChannel'
      externalConversationId:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      participantIds:
        type: array
        items:
          type: string
      latestMsgSentTime:
        type: string
        format: date-time
      originLocation:
        $ref: '#/definitions/v1PlatformLocation'
      originLocationExternalId:
        type: string
      lastSeenByParticipant:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LastSeenByParticipant'
      conversationViewIds:
        type: array
        items:
          type: string
      subjectParticipantsKey:
        type: string
      subjectParticipants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubjectParticipant'
      isOpen:
        type: boolean
      aiConfiguration:
        $ref: '#/definitions/conversationv1AIConfiguration'
      latestMsgSentTimeBySubjectParticipant:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LatestMessageSentTimeBySubjectParticipant'
      subjectParticipantKey:
        $ref: '#/definitions/v1SubjectParticipantKey'
      latestRelevantActivityTime:
        type: string
        format: date-time
  v1ConversationChannel:
    type: string
    enum:
      - CONVERSATION_CHANNEL_UNDEFINED
      - CONVERSATION_CHANNEL_INTERNAL
      - CONVERSATION_CHANNEL_SMS
      - CONVERSATION_CHANNEL_FACEBOOK
      - CONVERSATION_CHANNEL_GOOGLE_MESSAGES
      - CONVERSATION_CHANNEL_OPENAI
      - CONVERSATION_CHANNEL_EMAIL
      - CONVERSATION_CHANNEL_GOOGLE_BUSINESS_COMMUNICATIONS
      - CONVERSATION_CHANNEL_WEB_CHAT
      - CONVERSATION_CHANNEL_INSTAGRAM
      - CONVERSATION_CHANNEL_WHATSAPP
    default: CONVERSATION_CHANNEL_UNDEFINED
  v1ConversationKey:
    type: object
    properties:
      subjectParticipants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubjectParticipant'
      channel:
        $ref: '#/definitions/v1ConversationChannel'
        title: 'Deprecated: Usage of this field will be ignored'
      originLocationExternalId:
        type: string
  v1ConversationMessageCount:
    type: object
    properties:
      conversationId:
        type: string
      count:
        type: string
        format: int64
    title: Deprecated
  v1CreateConversationRequest:
    type: object
    properties:
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
      channel:
        $ref: '#/definitions/v1ConversationChannel'
      externalConversationId:
        type: string
      created:
        type: string
        format: date-time
        title: temporary created/updated field to run migration
      updated:
        type: string
        format: date-time
      originLocation:
        $ref: '#/definitions/v1PlatformLocation'
        title: The location that the conversation originated from
      originLocationExternalId:
        type: string
  v1CreateConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
  v1CreateMessageTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1MessageTemplate'
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
  v1CreateMessageTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1MessageTemplate'
  v1CreateMultiMessagesRequest:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Message'
        title: messages
      lastSeen:
        type: string
        format: date-time
        title: temporary field to set in the conversation
  v1CreateWidgetConversationRequest:
    type: object
    properties:
      widgetId:
        type: string
        title: The widget id
      chatSourceUrl:
        type: string
        title: The page that the conversation is start on
      greetingMessage:
        type: string
        title: The greeting message displayed to the user
  v1CreateWidgetConversationResponse:
    type: object
    properties:
      widgetParticipantToken:
        type: string
        title: The widget_participant_token containing data about the widget user
      conversation:
        $ref: '#/definitions/v1Conversation'
        title: Conversation details
      greetingMessageId:
        type: string
        title: The message id for the greeting message
  v1CreateWidgetRequest:
    type: object
    properties:
      name:
        type: string
        title: The widget configuration to be created
      namespace:
        type: string
      color:
        type: string
      allowedUrls:
        type: array
        items:
          type: string
      welcomeMessage:
        type: string
        title: The welcome message for the webchat for the widget config
      dataSources:
        $ref: '#/definitions/v1DataSources'
        title: The sources for the data to be used by the widget AI assistant
      textColor:
        type: string
        title: The text color for the widget
      accentColor:
        type: string
        title: Accent color for the widget secondary elements
      accentTextColor:
        type: string
        title: Accent text color for the widget secondary elements
      skipContactCapture:
        type: boolean
        title: Whether the widget has contact capturing enabled
      additionalPromptInstructions:
        type: string
        title: The prompt provided by a user to be used as additional instructions for the web chat AI assistant
      assistantName:
        type: string
        title: assistant_name is the name of the AI assistant
      assistantAvatarUrl:
        type: string
        title: assistant_avatar_url is the url of the AI assistant avatar
      position:
        $ref: '#/definitions/v1WidgetPosition'
        title: The position of the widget on the page
      hideMobileCta:
        type: boolean
        title: Hide the popup CTA on mobile screens
      customGreetingMessage:
        type: string
        title: The custom greeting message that shows up as first message
      enableGreetingMessage:
        type: boolean
        title: Enable the greeting message from AI assistant
  v1CreateWidgetResponse:
    type: object
    properties:
      widget:
        $ref: '#/definitions/v1Widget'
        title: The created widget
  v1DataSources:
    type: object
    properties:
      businessProfile:
        type: boolean
        title: Will be used to determine if a business profile data source should be associated
      businessWebsite:
        type: boolean
        title: |-
          Will be used to determine if a business website data source should be associated
          This will also depend on the business having their website field filled
  v1DeleteConversationRequest:
    type: object
    properties:
      conversationId:
        type: string
  v1DeleteMessageRequest:
    type: object
    properties:
      messageId:
        type: string
  v1DeleteMessageTemplateRequest:
    type: object
    properties:
      templateId:
        type: string
        title: The template to be deleted
  v1DeleteWidgetRequest:
    type: object
    properties:
      widgetId:
        type: string
        title: The id of the widget to be deleted
  v1EvaluateResponseRequest:
    type: object
    properties:
      messageId:
        type: string
        title: 'Deprecated: use evaluated_message_id instead'
      sentiment:
        $ref: '#/definitions/v1EvaluationSentiment'
        title: The sentiment of the evaluation of the response
      comment:
        type: string
        title: A comment on what was helpful or not helpful about the response
      evaluatedEventId:
        type: string
      evaluatedMessageId:
        type: string
      conversationId:
        type: string
        title: The conversation id
  v1EvaluateResponseType:
    type: string
    enum:
      - EVALUATION_RESPONSE_TYPE_UNSPECIFIED
      - EVALUATION_RESPONSE_TYPE_EVENT
      - EVALUATION_RESPONSE_TYPE_MESSAGE
    default: EVALUATION_RESPONSE_TYPE_UNSPECIFIED
  v1EvaluationSentiment:
    type: string
    enum:
      - EVALUATION_SENTIMENT_UNDEFINED
      - EVALUATION_SENTIMENT_POSITIVE
      - EVALUATION_SENTIMENT_NEGATIVE
    default: EVALUATION_SENTIMENT_UNDEFINED
  v1Event:
    type: object
    properties:
      conversationId:
        type: string
      eventId:
        type: string
      happenedAt:
        type: string
        format: date-time
      labelKey:
        type: string
      initiatorId:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      message:
        type: string
      channel:
        $ref: '#/definitions/v1ConversationChannel'
      originatedAt:
        $ref: '#/definitions/v1PlatformLocation'
      type:
        $ref: '#/definitions/v1EventType'
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1KeyValuePair'
  v1EventType:
    type: string
    enum:
      - EVENT_TYPE_UNDEFINED
      - EVENT_TYPE_SMS_UNSUBSCRIBED
      - EVENT_TYPE_CAMPAIGN
      - EVENT_TYPE_REVIEW_REQUEST
      - EVENT_TYPE_FORM_SUBMISSION
      - EVENT_TYPE_PHONE_CALL
    default: EVENT_TYPE_UNDEFINED
  v1GetAISystemMessageRequest:
    type: object
    properties:
      systemMessageId:
        type: string
        title: The id of the AI System Message
  v1GetAISystemMessageResponse:
    type: object
    properties:
      systemMessage:
        $ref: '#/definitions/v1AISystemMessage'
        title: The AI System Message
  v1GetAvailableChannelsForConversationRequest:
    type: object
    properties:
      conversationId:
        type: string
        title: The conversation id
  v1GetAvailableChannelsForConversationResponse:
    type: object
    properties:
      channels:
        type: array
        items:
          $ref: '#/definitions/v1ConversationChannel'
        title: 'Deprecated: The list of channels messages can be sent on'
      preferredChannel:
        $ref: '#/definitions/v1ConversationChannel'
      channelAvailabilities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ChannelAvailability'
  v1GetConfigurationRequest:
    type: object
    properties:
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
        title: The subject participant, whose configuration is being requested
    title: GetConfigurationRequest is the request for a configuration
  v1GetConfigurationResponse:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/v1Configuration'
        title: The configuration for a subject participant
    title: GetConfigurationResponse will return a configuration for a given subject participant
  v1GetConversationByKeyRequest:
    type: object
    properties:
      conversationKey:
        $ref: '#/definitions/v1ConversationKey'
  v1GetConversationByKeyResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
  v1GetConversationSummaryRequest:
    type: object
    properties:
      conversationId:
        type: string
  v1GetConversationSummaryResponse:
    type: object
    properties:
      summary:
        type: string
  v1GetConversationViewsRequest:
    type: object
    properties:
      participantId:
        type: string
    title: GetConversationViewsRequest is the request for getting the ConversationView for a participant
  v1GetConversationViewsResponse:
    type: object
    properties:
      views:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1View'
    title: GetConversationViewsResponse will return participant conversation views
  v1GetMessageOptions:
    type: object
    properties:
      includeOriginalContent:
        type: boolean
  v1GetMessageRequest:
    type: object
    properties:
      messageId:
        type: string
      options:
        $ref: '#/definitions/v1GetMessageOptions'
  v1GetMessageTemplateRequest:
    type: object
    properties:
      templateId:
        type: string
      hydrationOptions:
        $ref: '#/definitions/GetMessageTemplateRequestHydrationOptions'
        title: Options to hydrate the dynamic fields in provided template
  v1GetMessageTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1MessageTemplate'
      hydrationInformation:
        $ref: '#/definitions/GetMessageTemplateResponseHydrationInformation'
  v1GetMultiConfigurationRequest:
    type: object
    properties:
      subjectParticipants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubjectParticipant'
        title: A list of subject participants, whose configurations are being requested
    title: GetMultiConfigurationRequest is the request for getting multiple configurations
  v1GetMultiConfigurationResponse:
    type: object
    properties:
      configurations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Configuration'
        title: The configurations for a list of subject participants
    title: GetMultiConfigurationResponse will return multiple configurations for a given subject participants
  v1GetMultiConversationDetailsRequest:
    type: object
    properties:
      conversationIds:
        type: array
        items:
          type: string
      options:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: options the requester wants to hydrate on the response
  v1GetMultiConversationDetailsResponse:
    type: object
    properties:
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GetMultiConversationDetailsResponseDetailedConversation'
  v1GetMultiConversationDetailsResponseDetailedConversation:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
      latestMessage:
        $ref: '#/definitions/v1Message'
        title: 'Deprecated: use latest_relevant_activity instead'
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
      summary:
        type: string
      event:
        $ref: '#/definitions/v1Event'
      message:
        $ref: '#/definitions/v1Message'
  v1GetMultiConversationMessageCountRequest:
    type: object
    properties:
      conversationIds:
        type: array
        items:
          type: string
  v1GetMultiConversationMessageCountResponse:
    type: object
    properties:
      messageCounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ConversationMessageCount'
        title: 'Deprecated: use counts instead'
      counts:
        type: object
        additionalProperties:
          type: string
          format: int64
  v1GetMultiEventsRequest:
    type: object
    properties:
      eventIds:
        type: array
        items:
          type: string
        title: The ids of the events to be retrieved
      conversationId:
        type: string
        title: The conversation id
  v1GetMultiEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Event'
        title: The list of events
  v1GetMultiMessagesRequest:
    type: object
    properties:
      messageIds:
        type: array
        items:
          type: string
        title: message IDs
      conversationId:
        type: string
        title: Conversation ID
      languageCode:
        type: string
        description: Code to request OpenAI translation. Provide code in ISO 639-1 format. Leave empty to skip translation.
  v1GetMultiMessagesResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Message'
        title: list of messages
  v1GetMultiParticipantsRequest:
    type: object
    properties:
      participantIds:
        type: array
        items:
          type: string
        title: participant IDs
      conversationId:
        type: string
        title: Deprecated
  v1GetMultiParticipantsResponse:
    type: object
    properties:
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: list of participants
  v1GetMultiWidgetMessagesRequest:
    type: object
    properties:
      messageIds:
        type: array
        items:
          type: string
        title: The ids of the messages to be retrieved
  v1GetMultiWidgetMessagesResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Message'
        title: The list of messages
  v1GetMultiWidgetRequest:
    type: object
    properties:
      widgetIds:
        type: array
        items:
          type: string
  v1GetMultiWidgetResponse:
    type: object
    properties:
      widgets:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Widget'
  v1GetOwnerEmailRequest:
    type: object
    properties:
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
  v1GetOwnerEmailResponse:
    type: object
    properties:
      forwardingEmail:
        type: string
  v1GetParticipantsByKeyRequest:
    type: object
    properties:
      participantKey:
        $ref: '#/definitions/v1ParticipantKey'
        title: participant
  v1GetParticipantsByKeyResponse:
    type: object
    properties:
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: |-
          list of participants
          Deprecated: use participant instead
      participant:
        $ref: '#/definitions/v1Participant'
  v1GetWidgetConfigRequest:
    type: object
    properties:
      widgetId:
        type: string
        title: The id of the widget to be retrieved
      visitData:
        $ref: '#/definitions/v1WidgetVisit'
        title: The visitor visit data for tracking a visitor to a website hosting the widget
  v1GetWidgetConfigResponse:
    type: object
    properties:
      name:
        type: string
        title: Name of the widget, e.g. "Mountain Media Support"
      color:
        type: string
        title: A hex color code for the widget, e.g. "#FF0000"
      isEnabled:
        type: boolean
        title: Whether the webchat for the widget config is enabled
      welcomeMessage:
        type: string
        title: The welcome message for the webchat for the widget config
      textColor:
        type: string
        title: The text color for the widget
      accentColor:
        type: string
        title: Accent color for the widget secondary elements
      accentTextColor:
        type: string
        title: Accent text color for the widget secondary elements
      skipContactCapture:
        type: boolean
        title: 'Deprecated: not meant to be used in the Web Chat client'
      widgetTopSpace:
        type: string
        format: int64
        title: Height between the widget top and the screen in pixels
      assistantName:
        type: string
        title: assistant_name is the name of the AI assistant
      assistantAvatarUrl:
        type: string
        title: assistant_avatar_url is the url of the AI assistant avatar
      position:
        $ref: '#/definitions/v1WidgetPosition'
        title: The position of the widget on the page
      hideMobileCta:
        type: boolean
        title: Hide the popup CTA on mobile screens
      customGreetingMessage:
        type: string
        title: The custom greeting message that shows up as first message
      enableGreetingMessage:
        type: boolean
        title: Enable the greeting message from AI assistant
      namespace:
        type: string
        title: The namespace of the widget e.g. "ABC", "AG-123"
      poweredByName:
        type: string
        title: The company name for the widget footer (either current namespace or parent namespace)
      poweredByWebsite:
        type: string
        title: The company website for the widget footer (either current namespace or parent namespace)
      showFooterContent:
        type: boolean
        title: Show the footer content on the widget (configured on the partner business app configuration)
  v1GetWidgetConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
        title: Conversation details
  v1GetWidgetRequest:
    type: object
    properties:
      widgetId:
        type: string
        title: The id of the widget to be retrieved
  v1GetWidgetResponse:
    type: object
    properties:
      widget:
        $ref: '#/definitions/v1Widget'
        title: The retrieved widget
  v1GlobalParticipantType:
    type: string
    enum:
      - GLOBAL_PARTICIPANT_TYPE_UNDEFINED
      - GLOBAL_PARTICIPANT_TYPE_CUSTOMER
      - GLOBAL_PARTICIPANT_TYPE_IAM_USER
      - GLOBAL_PARTICIPANT_TYPE_ACCOUNT_GROUP
      - GLOBAL_PARTICIPANT_TYPE_PARTNER
      - GLOBAL_PARTICIPANT_TYPE_IAM_TEMPORARY_SUBJECT
      - GLOBAL_PARTICIPANT_TYPE_DIGITAL_AGENT
      - GLOBAL_PARTICIPANT_TYPE_VENDOR
      - GLOBAL_PARTICIPANT_TYPE_OPENAI_BOT
      - GLOBAL_PARTICIPANT_TYPE_ANONYMOUS
      - GLOBAL_PARTICIPANT_TYPE_GROUP
    default: GLOBAL_PARTICIPANT_TYPE_UNDEFINED
    title: Participant Type that replaces Type the Type enum in Participant message
  v1InjectMessageRequest:
    type: object
    properties:
      messageId:
        type: string
        title: message ID could from an internal or external provider
      body:
        type: string
        title: body is the content of the message
      channel:
        $ref: '#/definitions/v1ConversationChannel'
        title: channel represents the origin from this message that could be from an internal or external provider
      type:
        $ref: '#/definitions/v1MessageType'
        title: message type
      location:
        $ref: '#/definitions/v1PlatformLocation'
        title: platform location represents the app or location from the message that belongs
      metadata:
        type: object
        additionalProperties:
          type: string
        title: metadata can represents any kind of value
      media:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Media'
        title: media is the media content of the message
      namespace:
        $ref: '#/definitions/v1NamespaceDetail'
        title: |-
          namespace is the namespace of the conversation where the participant_type the type of the participant that owns the
          conversation, and internal_participant_id is the entity that owns the conversation
      sourceName:
        type: string
        title: source of message that we're injecting into a conversation (e.g. SMS, Inbox, Email, etc...)
      created:
        type: string
        format: date-time
        title: The original creation time of the message
  v1KeyValuePair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  v1LastSeenByParticipant:
    type: object
    properties:
      participantId:
        type: string
      lastSeenTime:
        type: string
        format: date-time
  v1LatestMessageSentTimeBySubjectParticipant:
    type: object
    properties:
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
      time:
        type: string
        format: date-time
  v1ListAISystemMessagesRequest:
    type: object
    properties:
      cursor:
        type: string
        title: The cursor to start fetching AI System Messages from
      pageSize:
        type: string
        format: int64
        title: The number of AI System Messages to fetch per page
  v1ListAISystemMessagesResponse:
    type: object
    properties:
      aiSystemMessages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AISystemMessage'
        title: The list of AI System Messages
      nextCursor:
        type: string
        title: The cursor to fetch the next page of AI System Messages
      hasMore:
        type: boolean
        title: Whether there are more AI System Messages to fetch
  v1ListMessageTemplateRequest:
    type: object
    properties:
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
        title: The subject participant, whose message templates is being requested
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: paging options
  v1ListMessageTemplateResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MessageTemplate'
        title: All message templates for a given SubjectParticipant
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1ListMessagesRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListMessagesRequestListMessagesFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListMessagesResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Message'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
    title: |-
      *******************
      Responses
      *******************
  v1ListResponseEvaluationsRequest:
    type: object
    properties:
      summarize:
        type: boolean
        title: Whether to summarize the response evaluations
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
        title: The subject participant whose response evaluations should be retrieved
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Paging options for the request
      createdAfter:
        type: string
        format: date-time
        title: Filter evaluations created after this timestamp (inclusive)
      createdBefore:
        type: string
        format: date-time
        title: Filter evaluations created before this timestamp (inclusive)
      evaluationType:
        type: array
        items:
          $ref: '#/definitions/v1EvaluateResponseType'
        title: Filter evaluations by type
  v1ListResponseEvaluationsResponse:
    type: object
    properties:
      evaluations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ResponseEvaluation'
        title: The list of response evaluations
      summary:
        $ref: '#/definitions/ListResponseEvaluationsResponseSummary'
        title: The summary of the response evaluations generated by AI
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Paging metadata for the request
  v1ListWidgetsRequest:
    type: object
    properties:
      namespace:
        type: string
        title: |-
          The namespace of the widget e.g. "ABC", "AG-123"
          Use either namespace or options.namespaces
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: paging options
      options:
        $ref: '#/definitions/ListWidgetsRequestListWidgetsFilters'
  v1ListWidgetsResponse:
    type: object
    properties:
      widgets:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Widget'
        title: The list of widgets
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: paging metadata
  v1LookupConversationsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/LookupConversationsRequestLookupConversationsFilters'
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1LookupConversationsResponse:
    type: object
    properties:
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/LookupConversationsResponseConversations'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1Media:
    type: object
    properties:
      mediaContentType:
        type: string
        title: media content type is a two part identifier for file types (e.g. image/jpeg)
      mediaLocationPath:
        type: string
        title: media location path on a GCP bucket
      mediaFileName:
        type: string
        title: media file name
      fileSize:
        type: string
        format: int64
        title: size of file in bytes
      mediaUrl:
        type: string
        title: media url is the url of the media content
  v1Message:
    type: object
    properties:
      messageId:
        type: string
      externalMessageId:
        type: string
      conversationId:
        type: string
      participantId:
        type: string
      type:
        $ref: '#/definitions/v1MessageType'
      body:
        type: string
      error:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      media:
        type: array
        items:
          type: string
        title: media is the media content of the message
      sendStatus:
        $ref: '#/definitions/v1SendStatus'
      channel:
        $ref: '#/definitions/v1ConversationChannel'
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1KeyValuePair'
        title: metadata can represent any kind of value
      originalContent:
        type: string
        title: original_content is the original content of the message
    title: Message represents a message of a conversation
  v1MessageStatus:
    type: string
    enum:
      - MESSAGE_STATUS_NOT_READ
      - MESSAGE_STATUS_READ
      - MESSAGE_STATUS_SENT
      - MESSAGE_STATUS_DELIVERED
      - MESSAGE_STATUS_FAILED
      - MESSAGE_STATUS_UNDELIVERED
      - MESSAGE_STATUS_SENDING
    default: MESSAGE_STATUS_NOT_READ
    title: MessageStatus represents the status a message is
  v1MessageTemplate:
    type: object
    properties:
      templateId:
        type: string
        title: |-
          A unique RESTful identifier. The format will be used for providing template
          discoverability and categorizing them.
          Example: /business-id/AG-123/template-id/TEMPLATE-123
      name:
        type: string
        title: Template friendly name
      content:
        type: string
        title: Template content
      created:
        type: string
        format: date-time
        title: Creation time
  v1MessageType:
    type: string
    enum:
      - MESSAGE_TYPE_MESSAGE
      - MESSAGE_TYPE_MEDIA
      - MESSAGE_TYPE_SYSTEM
      - MESSAGE_TYPE_FORM_SUBMISSION
      - MESSAGE_TYPE_BOOKING_AVAILABILITY
      - MESSAGE_TYPE_TEMPLATE
    default: MESSAGE_TYPE_MESSAGE
    description: '- MESSAGE_TYPE_FORM_SUBMISSION: Form Submission messages have been moved to events'
    title: MessageType represents the type of a message
  v1Metadata:
    type: object
    properties:
      identifier:
        $ref: '#/definitions/MetadataIdentifier'
      data:
        type: object
        additionalProperties:
          type: string
  v1NamespaceDetail:
    type: object
    properties:
      participantType:
        $ref: '#/definitions/v1GlobalParticipantType'
      internalParticipantId:
        type: string
  v1NewInboxLeadCapturedRequest:
    type: object
    properties:
      namespace:
        type: string
        title: The namespace of the lead (e.g. "ABC", "AG-123" for CRM contacts that are namespaced to Vendasta's domain Account Group)
      parentNamespace:
        type: string
        title: The parent namespace of the lead (e.g. "ABC", for CRM contacts that are namespace to Vendasta's domain Account Group OR "VMF", for CRM contacts that are namespaced to Vendasta's domain Partner)
      conversationId:
        type: string
        title: |-
          The identifier of the conversation the lead is associated with
          Deprecated: use captured_lead.lead_id
      conversationSummary:
        type: string
        title: The summary of the conversation or summary of where the lead came from
      capturedLead:
        $ref: '#/definitions/v1CapturedLead'
        title: The captured lead
      source:
        type: string
        title: The location of the lead capture
      capturedAt:
        type: string
        format: date-time
        title: The timestamp of when the lead was captured
      message:
        type: string
        title: A message to be sent to inbox
      initiatorId:
        type: string
        title: The id of the object initiating the lead capture. (e.g. form submission id)
  v1NewInboxLeadCapturedResponse:
    type: object
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: integer
        format: int32
        title: page_size specifies the number of items to return in the next page
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: Total number of results
  v1Participant:
    type: object
    properties:
      participantId:
        type: string
        title: the participant id
      internalParticipantId:
        type: string
        title: the internal participant id (IAM or Contact)
      partnerId:
        type: string
        title: partner ID
      accountGroupId:
        type: string
        title: account group ID
      location:
        $ref: '#/definitions/v1PlatformLocation'
        title: Deprecated use location from the message instead
      channel:
        $ref: '#/definitions/v1ConversationChannel'
        title: Deprecated use channel from the conversation instead
      externalParticipantId:
        type: string
        title: the external participant id from 3rd party integrations
      name:
        type: string
        title: the name of the participant
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      participantType:
        $ref: '#/definitions/v1ParticipantType'
      email:
        type: string
        title: the email address of the participant
      phoneNumber:
        type: string
        title: the phone number of the participant
      address:
        $ref: '#/definitions/v1Address'
        title: Address of the participant
      isSubjectParticipant:
        type: boolean
        description: |-
          Participant is a "subject participant"
          If a message is sent by an SMB to a Partner,
          then `is_subject_participant` is true for both SMB and Partner
          NOTE: we might add a new field in the future to indicate if a
          subject participant is in the `subject_participant_key`
          this will be a different boolean from `is_subject_participant`.
      isParticipantInternalInfoDeleted:
        type: boolean
        title: |-
          If an accountGroup or Customer is deleted the internal
          info will be missing and will not be shown in the conversation
      profileImageUrl:
        type: string
        title: the profile image url of the participant
      namespaceHierarchy:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1NamespaceDetail'
        title: |-
          the namespace hierarchy of the participant
          this field is used to determine the organization hierarchy that the participant belongs to
  v1ParticipantKey:
    type: object
    properties:
      internalParticipantId:
        type: string
        title: the internal participant id (IAM or Contact)
      partnerId:
        type: string
        title: partner ID
      accountGroupId:
        type: string
        title: account group ID
      location:
        $ref: '#/definitions/v1PlatformLocation'
        title: Deprecated
      channels:
        type: array
        items:
          $ref: '#/definitions/v1ConversationChannel'
        title: Deprecated
      participantType:
        $ref: '#/definitions/v1GlobalParticipantType'
      namespaceHierarchy:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1NamespaceDetail'
        title: |-
          the namespace hierarchy of the participant
          this field is used to determine the organization hierarchy that the participant belongs to
  v1ParticipantType:
    type: string
    enum:
      - PARTICIPANT_TYPE_UNDEFINED
      - PARTICIPANT_TYPE_CUSTOMER
      - PARTICIPANT_TYPE_IAM_USER
      - PARTICIPANT_TYPE_ACCOUNT_GROUP
      - PARTICIPANT_TYPE_PARTNER
      - PARTICIPANT_TYPE_IAM_TEMPORARY_SUBJECT
      - PARTICIPANT_TYPE_DIGITAL_AGENT
      - PARTICIPANT_TYPE_VENDOR
      - PARTICIPANT_TYPE_OPENAI_BOT
      - PARTICIPANT_TYPE_ANONYMOUS
      - PARTICIPANT_TYPE_GROUP
    default: PARTICIPANT_TYPE_UNDEFINED
    title: '- PARTICIPANT_TYPE_UNDEFINED: the participant type determines the type of a participant in a conversation'
  v1PlatformLocation:
    type: string
    enum:
      - PLATFORM_LOCATION_UNDEFINED
      - PLATFORM_LOCATION_BUSINESS_APP
      - PLATFORM_LOCATION_PARTNER_CENTER
      - PLATFORM_LOCATION_VENDOR_CENTER
      - PLATFORM_LOCATION_TASK_MANAGER
      - PLATFORM_LOCATION_PROPOSAL_BUILDER
      - PLATFORM_LOCATION_SALES_CENTER
    default: PLATFORM_LOCATION_UNDEFINED
  v1ProductFeature:
    type: object
    properties:
      googleBusinessMessagesEnabled:
        type: boolean
        title: Determines if google business messages is available for the organization referred to by subject_participant
      smsEnabled:
        type: boolean
        title: Determines if sms is available for the organization referred to by subject_participant
      multiLocationEnabled:
        type: boolean
        title: Determine if Multi location is available for the organization referred to by subject_participant
      webChatEnabled:
        type: boolean
        title: Determines if web chat is available for the organization referred to by subject_participant
      facebookMessengerEnabled:
        type: boolean
        title: Determines if facebook messenger is available for the organization referred to by subject_participant
      instagramMessagingEnabled:
        type: boolean
        title: Determines if instagram messaging is available for the organization referred to by subject_participant
      aiSmsResponderEnabled:
        type: boolean
        title: Determines if ai sms responder is available for the organization referred to by subject_participant
      whatsappEnabled:
        type: boolean
        title: Determines if whats app is available for the organization referred to by subject_participant
  v1ReceiveMessageRequest:
    type: object
    properties:
      senderId:
        type: string
        title: sender ID could from an internal or external provider
      recipientId:
        type: string
        title: recipient ID sender ID could from an internal or external provider
      conversationId:
        type: string
        title: conversation ID the message will be sent to and could from an internal or external provider
      messageId:
        type: string
        title: message ID the message will be sent to and could from an internal or external provider
      body:
        type: string
        title: body is the content of the message
      channel:
        $ref: '#/definitions/v1ConversationChannel'
        title: channel represents the origin from this message that could be from an internal or external provider
      type:
        $ref: '#/definitions/v1MessageType'
        title: message type
      location:
        $ref: '#/definitions/v1PlatformLocation'
        title: platform location represents the app or location from the message that belongs
      partnerId:
        type: string
        description: 'Deprecated: use namespace instead'
        title: partner ID
      accountGroupId:
        type: string
        description: 'Deprecated: use namespace instead'
        title: account group ID
      metadata:
        type: object
        additionalProperties:
          type: string
        title: metadata can represents any kind of value
      media:
        type: array
        items:
          type: string
        title: media is the media content of the message
      namespace:
        $ref: '#/definitions/v1NamespaceDetail'
        title: |-
          namespace is the namespace of the conversation where the participant_type the type of the participant that owns the
          conversation, and internal_participant_id is the entity that owns the conversation
  v1RemoveConversationFromConversationViewRequest:
    type: object
    properties:
      viewId:
        type: string
      conversationId:
        type: string
      participantId:
        type: string
    title: RemoveConversationFromConversationViewRequest is the request for removing conversation from Conversation view
  v1ResponseEvaluation:
    type: object
    properties:
      messageId:
        type: string
        title: The message id of the response evaluation
      conversationId:
        type: string
        title: The conversation id of the response evaluation
      sentiment:
        $ref: '#/definitions/v1EvaluationSentiment'
        title: The sentiment of the response evaluation
      comment:
        type: string
        title: The comment of the response evaluation
      createdAt:
        type: string
        format: date-time
        title: The time the response evaluation was created
      subjectParticipants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubjectParticipant'
        title: The subject participants associated the response evaluation's conversation
      eventId:
        type: string
        description: The event id of the response evaluation; this will be empty if there is a message id.
  v1SearchConversationsRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
      location:
        $ref: '#/definitions/v1PlatformLocation'
      searchTerm:
        type: string
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1SearchConversationsResponse:
    type: object
    properties:
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SearchConversationsResponseDetailedConversation'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1SearchConversationsResponseDetailedConversation:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
      latestMessage:
        $ref: '#/definitions/v1Message'
      participants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
  v1SendMessageOptions:
    type: object
    properties:
      runSync:
        type: boolean
        title: option to run sendMessage synchronously
  v1SendMessageRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Participant'
        title: sender (IAM user) - Belongs to the Conversation µs
      recipient:
        $ref: '#/definitions/v1Participant'
        title: (NOT USED FOR NOW) recipient (IAM user or Contact) - Belongs to the Conversation µs
      conversationId:
        type: string
        title: conversation ID the message will be sent to - Belongs to the Conversation µs
      type:
        $ref: '#/definitions/v1MessageType'
        title: message type
      body:
        type: string
        title: message body
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Metadata'
        title: metadata can represents any kind of value
      originLocation:
        $ref: '#/definitions/v1PlatformLocation'
        title: message origin location
      media:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Media'
        title: message media content
      channel:
        $ref: '#/definitions/v1ConversationChannel'
        title: message channel is the channel that the message should be sent on
      options:
        $ref: '#/definitions/v1SendMessageOptions'
    title: |-
      *******************
      Requests
      *******************
  v1SendMessageResponse:
    type: object
    properties:
      workflowId:
        type: string
        title: 'Deprecated: use message_id instead'
      messageId:
        type: string
        title: The unique identifier of the message
  v1SendStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1MessageStatus'
      reason:
        type: string
      created:
        type: string
        format: date-time
  v1SendWidgetMessageRequest:
    type: object
    properties:
      type:
        $ref: '#/definitions/v1MessageType'
        title: message type
      body:
        type: string
        title: message body
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Metadata'
        title: metadata can represent any kind of value
      location:
        $ref: '#/definitions/v1PlatformLocation'
        title: message origin location
  v1SendWidgetMessageResponse:
    type: object
    properties:
      messageId:
        type: string
        title: The unique identifier of the message
  v1SetLastSeenRequest:
    type: object
    properties:
      conversationId:
        type: string
        title: conversation ID
      participant:
        $ref: '#/definitions/v1Participant'
      status:
        $ref: '#/definitions/v1SetLastSeenRequestStatus'
  v1SetLastSeenRequestStatus:
    type: string
    enum:
      - SET_LAST_SEEN_REQUEST_STATUS_READ
      - SET_LAST_SEEN_REQUEST_STATUS_UNREAD
    default: SET_LAST_SEEN_REQUEST_STATUS_READ
    title: LastSeenStatus
  v1SetLastSeenResponse:
    type: object
    properties:
      participant:
        $ref: '#/definitions/v1Participant'
  v1SubjectParticipant:
    type: object
    properties:
      participantType:
        $ref: '#/definitions/v1GlobalParticipantType'
      internalParticipantId:
        type: string
        title: the internal participant id
  v1SubjectParticipantKey:
    type: object
    properties:
      subjectParticipantsKey:
        type: string
      subjectParticipants:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubjectParticipant'
        title: parsed from subject_participants_key
  v1UpdateConversationRequest:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        description: The Field Mask indicate what fields should actually be updated.
  v1UpdateConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1Conversation'
  v1UpdateMessageStatusRequest:
    type: object
    properties:
      messageId:
        type: string
      participantId:
        type: string
      status:
        $ref: '#/definitions/v1MessageStatus'
  v1UpdateMessageTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1MessageTemplate'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        description: The Field Mask indicate what fields should actually be updated.
  v1UpdateMessageTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1MessageTemplate'
  v1UpdateWidgetRequest:
    type: object
    properties:
      widgetId:
        type: string
        title: The widget information to be updated
      name:
        type: string
        title: Name of the widget, e.g. "Mountain Media Support"
      color:
        type: string
        title: A hex color code for the widget, e.g. "#FF0000"
      allowedUrls:
        type: array
        items:
          type: string
        title: A list of urls that the widget is allowed to be embedded on
      welcomeMessage:
        type: string
        title: The welcome message for the webchat for the widget config
      isEnabled:
        type: boolean
        title: Whether the webchat for the widget config is enabled
      textColor:
        type: string
        title: The text color for the widget
      accentColor:
        type: string
        title: Accent color for the widget secondary elements
      accentTextColor:
        type: string
        title: Accent text color for the widget secondary elements
      skipContactCapture:
        type: boolean
        title: Whether the widget has contact capturing enabled
      additionalPromptInstructions:
        type: string
        title: The prompt provided by a user to be used as additional instructions for the web chat AI assistant
      assistantName:
        type: string
        title: assistant_name is the name of the AI assistant
      assistantAvatarUrl:
        type: string
        title: assistant_avatar_url is the url of the AI assistant avatar
      position:
        $ref: '#/definitions/v1WidgetPosition'
        title: The position of the widget on the page
      hideMobileCta:
        type: boolean
        title: Hide the popup CTA on mobile screens
      customGreetingMessage:
        type: string
        title: The custom greeting message that shows up as first message
      enableGreetingMessage:
        type: boolean
        title: Enable the greeting message from AI assistant
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        description: The Field Mask indicate what fields should actually be updated.
  v1UpdateWidgetResponse:
    type: object
    properties:
      widget:
        $ref: '#/definitions/v1Widget'
        title: The updated widget
  v1UpsertAISystemMessageRequest:
    type: object
    properties:
      systemMessage:
        $ref: '#/definitions/v1AISystemMessage'
        title: The AI System Message to upsert
  v1UpsertConfigurationRequest:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/v1Configuration'
        title: The configuration to be updated
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        description: The Field Mask indicate what fields should actually be updated.
    title: UpsertConfigurationRequest is the request for creating or updating an inbox configuration for an org
  v1UpsertConfigurationResponse:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/v1Configuration'
        title: The updated configuration
    title: UpsertConfigurationResponse is the response from creating or updating a a configuration
  v1UpsertProductFeatureRequest:
    type: object
    properties:
      productFeature:
        $ref: '#/definitions/v1ProductFeature'
        title: The product features to be updated
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        description: The Field Mask indicate what fields should actually be updated.
      subjectParticipant:
        $ref: '#/definitions/v1SubjectParticipant'
        title: The subject participant, whose product feature is being updated
    title: UpsertProductFeatureRequest is the request for updating or creating the feature configuration for inbox
  v1UpsertProductFeatureResponse:
    type: object
    properties:
      productFeature:
        $ref: '#/definitions/v1ProductFeature'
        title: The product feature availability
    title: UpsertProductFeatureResponse is the response from updating or creating product feature availability
  v1View:
    type: object
    properties:
      viewId:
        type: string
        title: The view id
      created:
        type: string
        format: date-time
        title: The time that the view was created at
    title: View
  v1Widget:
    type: object
    properties:
      widgetId:
        type: string
        title: The id of the widget
      name:
        type: string
        title: Name of the widget, e.g. "Mountain Media Support"
      namespace:
        type: string
        title: The id of the namespace, e.g. "ABC", "AG-123"
      color:
        type: string
        title: A hex color code for the widget, e.g. "#FF0000"
      allowedUrls:
        type: array
        items:
          type: string
        title: A list of urls that the widget is allowed to be embedded on
      position:
        $ref: '#/definitions/v1WidgetPosition'
        title: The position of the widget on the page
      created:
        type: string
        format: date-time
        title: The timestamp when the widget was created
      updated:
        type: string
        format: date-time
        title: The timestamp when the widget was updated
      isEnabled:
        type: boolean
        title: Whether the webchat for the widget config is enabled
      welcomeMessage:
        type: string
        title: The welcome message for the webchat for the widget config
      textColor:
        type: string
        title: The primary text color for the widget
      accentColor:
        type: string
        title: Accent color for the widget secondary elements
      accentTextColor:
        type: string
        title: Accent text color for the widget secondary elements
      skipContactCapture:
        type: boolean
        title: Whether the widget has contact capturing enabled
      additionalPromptInstructions:
        type: string
        title: The prompt provided by a user to be used as additional instructions for the web chat AI assistant
      assistantName:
        type: string
        title: The name of the AI assistant
      assistantAvatarUrl:
        type: string
        title: The avatar URL of the AI assistant
      embedHistory:
        type: array
        items:
          type: string
        title: The history of widget installations (typically the domain/hostname of the referer URL the widget is embedded on)
      hideMobileCta:
        type: boolean
        title: Hide the popup CTA on mobile screens
      customGreetingMessage:
        type: string
        title: The custom greeting message that shows up as first message
      enableGreetingMessage:
        type: boolean
        title: Enable the greeting message from AI assistant
  v1WidgetPosition:
    type: string
    enum:
      - WIDGET_POSITION_UNSPECIFIED
      - WIDGET_POSITION_RIGHT
      - WIDGET_POSITION_LEFT
    default: WIDGET_POSITION_UNSPECIFIED
    title: |-
      - WIDGET_POSITION_UNSPECIFIED: Unspecified widget position
       - WIDGET_POSITION_RIGHT: Widget position on the right side of the page
       - WIDGET_POSITION_LEFT: Widget position on the left side of the page
  v1WidgetVisit:
    type: object
    properties:
      visitorId:
        type: string
        title: The id of the visitor for tracking (long-lived user id of a visitor to a website hosting the widget)
      visitId:
        type: string
        title: The id of the visit for tracking (short-lived "session" id of a visitor to a website hosting the widget)
    title: Cookie "session" data for tracking a visitor to a website hosting the widget
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
