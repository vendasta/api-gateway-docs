swagger: "2.0"
info:
  title: crm_integrations/v1/api.proto
  version: version not set
tags:
  - name: IntegrationService
  - name: DataIngestionService
  - name: PlatformService
  - name: CrmAutomationService
  - name: CrmAIService
consumes:
  - application/json
produces:
  - application/json
paths:
  /crm_integrations.v1.CrmAIService/GetAISummaryForCRMObject:
    post:
      operationId: CrmAIService_GetAISummaryForCRMObject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAISummaryForCRMObjectResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAISummaryForCRMObjectRequest'
      tags:
        - CrmAIService
  /crm_integrations.v1.CrmAutomationService/StartManualAutomations:
    post:
      operationId: CrmAutomationService_StartManualAutomations
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StartManualAutomationsRequest'
      tags:
        - CrmAutomationService
  /crm_integrations.v1.DataIngestionService/DeleteObject:
    post:
      operationId: DataIngestionService_DeleteObject
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteObjectRequest'
      tags:
        - DataIngestionService
  /crm_integrations.v1.DataIngestionService/ImportFromJSON:
    post:
      operationId: DataIngestionService_ImportFromJSON
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ImportFromJSONResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ImportFromJSONRequest'
      tags:
        - DataIngestionService
  /crm_integrations.v1.DataIngestionService/UpsertObject:
    post:
      operationId: DataIngestionService_UpsertObject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpsertObjectResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpsertObjectRequest'
      tags:
        - DataIngestionService
  /crm_integrations.v1.IntegrationService/CreateIntegration:
    post:
      operationId: IntegrationService_CreateIntegration
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateIntegrationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateIntegrationRequest'
      tags:
        - IntegrationService
  /crm_integrations.v1.IntegrationService/DeleteIntegration:
    post:
      operationId: IntegrationService_DeleteIntegration
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteIntegrationRequest'
      tags:
        - IntegrationService
  /crm_integrations.v1.IntegrationService/GetMultiIntegration:
    post:
      operationId: IntegrationService_GetMultiIntegration
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiIntegrationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiIntegrationRequest'
      tags:
        - IntegrationService
  /crm_integrations.v1.IntegrationService/UpdateIntegration:
    post:
      operationId: IntegrationService_UpdateIntegration
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateIntegrationRequest'
      tags:
        - IntegrationService
  /crm_integrations.v1.PlatformService/AddContactAsIamUserForCompany:
    post:
      operationId: PlatformService_AddContactAsIamUserForCompany
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AddContactAsIamUserForCompanyStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddContactAsIamUserForCompanyRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/CreateAccountGroupForCompany:
    post:
      operationId: PlatformService_CreateAccountGroupForCompany
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateAccountGroupForCompanyRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/GetAccountGroupForCompany:
    post:
      operationId: PlatformService_GetAccountGroupForCompany
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountGroupForCompanyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAccountGroupForCompanyRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/GetCreateAccountGroupForCompanyStatus:
    post:
      operationId: PlatformService_GetCreateAccountGroupForCompanyStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCreateAccountGroupForCompanyStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCreateAccountGroupForCompanyStatusRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/GetWebsiteActivityForVisitor:
    post:
      operationId: PlatformService_GetWebsiteActivityForVisitor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetWebsiteActivityForVisitorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetWebsiteActivityForVisitorRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/InferCompanyCategories:
    post:
      operationId: PlatformService_InferCompanyCategories
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1InferCompanyCategoriesRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/IsContactIamUserForCompany:
    post:
      operationId: PlatformService_IsContactIamUserForCompany
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IsContactIamUserForCompanyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IsContactIamUserForCompanyRequest'
      tags:
        - PlatformService
  /crm_integrations.v1.PlatformService/RemoveContactAsIamUserForCompany:
    post:
      operationId: PlatformService_RemoveContactAsIamUserForCompany
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveContactAsIamUserForCompanyRequest'
      tags:
        - PlatformService
definitions:
  MergeConfigDateOverwriteConfig:
    type: object
    properties:
      dateCriteriaFieldId:
        type: string
        title: field ID that should be used to compare dates for MERGE_STRATEGY_OVERWRITE_IF_NEWER
  MergeStrategyMergeConfig:
    type: object
    properties:
      dateOverwriteConfig:
        $ref: '#/definitions/MergeConfigDateOverwriteConfig'
        title: add combine strategy config, and others here in the future if necessary
  StartManualAutomationsRequestStartAutomationCriteria:
    type: object
    properties:
      namespace:
        type: string
      objectType:
        type: string
      searchTerm:
        type: string
      filters:
        $ref: '#/definitions/v1FilterGroup'
  StartManualAutomationsRequestStartAutomationPayload:
    type: object
    properties:
      data:
        type: object
        title: The extra data to start the automation with
  UpsertObjectResponseMultiIngestionResponse:
    type: object
    properties:
      workflowStatus:
        $ref: '#/definitions/v1WorkflowStatus'
      result:
        $ref: '#/definitions/UpsertObjectResponseMultiIngestionResult'
      workflowId:
        type: string
  UpsertObjectResponseMultiIngestionResult:
    type: object
    properties:
      crmObjectId:
        type: string
      nestedObjects:
        type: array
        items:
          type: object
          $ref: '#/definitions/UpsertObjectResponseNestedObject'
  UpsertObjectResponseNestedObject:
    type: object
    properties:
      crmObjectId:
        type: string
      objectType:
        type: string
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AddContactAsIamUserForCompanyRequest:
    type: object
    properties:
      namespace:
        type: string
      contactId:
        type: string
      companyId:
        type: string
      sendWelcomeEmail:
        type: boolean
  v1AddContactAsIamUserForCompanyStatus:
    type: string
    enum:
      - ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_INVALID
      - ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_IN_PROGRESS
      - ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_SUCCEEDED
      - ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_FAILED
    default: ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_INVALID
  v1AddContactAsIamUserForCompanyStatusResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1AddContactAsIamUserForCompanyStatus'
  v1CreateAccountGroupForCompanyRequest:
    type: object
    properties:
      companyId:
        type: string
      namespace:
        type: string
  v1CreateAccountGroupForCompanyStatus:
    type: string
    enum:
      - CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_UNSPECIFIED
      - CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_IN_PROGRESS
      - CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_SUCCEEDED
      - CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_FAILED
    default: CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_UNSPECIFIED
  v1CreateIntegrationRequest:
    type: object
    properties:
      integration:
        $ref: '#/definitions/v1Integration'
  v1CreateIntegrationResponse:
    type: object
    properties:
      integrationId:
        type: string
  v1Currency:
    type: object
    properties:
      currencyCode:
        type: string
        title: ISO 4217 currency code
      value:
        type: number
        format: double
  v1DateDefault:
    type: string
    enum:
      - DATE_DEFAULT_INVALID
      - DATE_DEFAULT_TODAY
      - DATE_DEFAULT_YESTERDAY
      - DATE_DEFAULT_TOMORROW
      - DATE_DEFAULT_THIS_WEEK
      - DATE_DEFAULT_LAST_WEEK
      - DATE_DEFAULT_NEXT_WEEK
      - DATE_DEFAULT_THIS_MONTH
      - DATE_DEFAULT_LAST_MONTH
      - DATE_DEFAULT_NEXT_MONTH
      - DATE_DEFAULT_THIS_QUARTER
      - DATE_DEFAULT_LAST_QUARTER
      - DATE_DEFAULT_NEXT_QUARTER
      - DATE_DEFAULT_THIS_YEAR
      - DATE_DEFAULT_LAST_YEAR
      - DATE_DEFAULT_NEXT_YEAR
    default: DATE_DEFAULT_INVALID
  v1DeleteIntegrationRequest:
    type: object
    properties:
      integrationId:
        type: string
  v1DeleteObjectRequest:
    type: object
    properties:
      namespace:
        type: string
      integrationId:
        type: string
      jsonData:
        type: object
  v1FieldMapping:
    type: object
    properties:
      fieldId:
        type: string
      type:
        $ref: '#/definitions/v1MappingType'
      jsonPath:
        type: string
      mergeStrategy:
        $ref: '#/definitions/v1MergeStrategy'
      nestedIntegration:
        $ref: '#/definitions/v1NestedIntegration'
  v1FieldValue:
    type: object
    properties:
      fieldId:
        type: string
      externalId:
        type: string
      nullValue:
        type: string
      integerValue:
        type: string
        format: int64
      stringValue:
        type: string
      dateValue:
        type: string
        format: date-time
      booleanValue:
        type: boolean
      stringValues:
        $ref: '#/definitions/v1StringList'
      geopointValue:
        $ref: '#/definitions/v1Geopoint'
      floatValue:
        type: number
        format: float
      phoneFieldValues:
        $ref: '#/definitions/v1PhoneFields'
      currencyValue:
        $ref: '#/definitions/v1Currency'
    description: |-
      On GetMulti (or any future reading operation) both
      field_id and external_id will be returned.
    title: |-
      FieldValue represents one of the field of an crm_object (Contact, Company,
      etc...) On Create/Update we need the field_id or external_id filled, with the
      field_id taking precedence over external_id
  v1Filter:
    type: object
    properties:
      fieldId:
        type: string
      operator:
        $ref: '#/definitions/v1FilterOperator'
      values:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FilterValue'
        title: |-
          This is repeated to support operations that take zero or more than one value.
          For example
             isEmpty()
             isAnyOf(a, b, c)
             isBetween(date1, date2)
      floatTolerance:
        type: number
        format: float
  v1FilterGroup:
    type: object
    properties:
      operator:
        $ref: '#/definitions/v1FilterGroupOperator'
      filters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Filter'
  v1FilterGroupOperator:
    type: string
    enum:
      - FILTER_GROUP_OPERATOR_INVALID
      - FILTER_GROUP_OPERATOR_AND
      - FILTER_GROUP_OPERATOR_OR
    default: FILTER_GROUP_OPERATOR_INVALID
  v1FilterOperator:
    type: string
    enum:
      - FILTER_OPERATOR_INVALID
      - FILTER_OPERATOR_IS_EMPTY
      - FILTER_OPERATOR_IS_NOT_EMPTY
      - FILTER_OPERATOR_IS
      - FILTER_OPERATOR_IS_NOT
      - FILTER_OPERATOR_IS_ANY
      - FILTER_OPERATOR_IS_NOT_ANY
      - FILTER_OPERATOR_IS_ALL
      - FILTER_OPERATOR_IS_NOT_ALL
      - FILTER_OPERATOR_CONTAINS
      - FILTER_OPERATOR_DOES_NOT_CONTAIN
      - FILTER_OPERATOR_IS_EQUAL_TO
      - FILTER_OPERATOR_IS_NOT_EQUAL_TO
      - FILTER_OPERATOR_IS_GREATER_THAN
      - FILTER_OPERATOR_IS_GREATER_THAN_OR_EQUAL_TO
      - FILTER_OPERATOR_IS_LESS_THAN
      - FILTER_OPERATOR_IS_LESS_THAN_OR_EQUAL_TO
      - FILTER_OPERATOR_IS_BEFORE
      - FILTER_OPERATOR_IS_BEFORE_OR_ON
      - FILTER_OPERATOR_IS_AFTER
      - FILTER_OPERATOR_IS_AFTER_OR_ON
      - FILTER_OPERATOR_IS_BETWEEN
      - FILTER_OPERATOR_IS_NOT_BETWEEN
      - FILTER_OPERATOR_IS_VALID
      - FILTER_OPERATOR_IS_NOT_VALID
    default: FILTER_OPERATOR_INVALID
  v1FilterValue:
    type: object
    properties:
      boolean:
        type: boolean
      integer:
        type: string
        format: int64
      float:
        type: number
        format: float
      string:
        type: string
      date:
        type: string
        format: date-time
      dateDefault:
        $ref: '#/definitions/v1DateDefault'
      phone:
        $ref: '#/definitions/v1Phone'
  v1Geopoint:
    type: object
    properties:
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
  v1GetAISummaryForCRMObjectRequest:
    type: object
    properties:
      crmObjectNamespace:
        type: string
      crmObjectType:
        type: string
      crmObjectId:
        type: string
      language:
        type: string
      regenerateSummary:
        type: boolean
  v1GetAISummaryForCRMObjectResponse:
    type: object
    properties:
      response:
        type: string
  v1GetAccountGroupForCompanyRequest:
    type: object
    properties:
      companyId:
        type: string
      namespace:
        type: string
  v1GetAccountGroupForCompanyResponse:
    type: object
    properties:
      accountGroupId:
        type: string
        title: |-
          Company is related to zero to many Account Groups
          This API will return the Account Group assigned on the Company itself
          This Account Group should be the same as CreateAccountGroupForCompanyStatusResponse
  v1GetCreateAccountGroupForCompanyStatusRequest:
    type: object
    properties:
      companyId:
        type: string
      namespace:
        type: string
  v1GetCreateAccountGroupForCompanyStatusResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1CreateAccountGroupForCompanyStatus'
      accountGroupId:
        type: string
  v1GetMultiIntegrationRequest:
    type: object
    properties:
      integrationIds:
        type: array
        items:
          type: string
  v1GetMultiIntegrationResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Integration'
  v1GetWebsiteActivityForVisitorRequest:
    type: object
    properties:
      visitorId:
        type: string
  v1GetWebsiteActivityForVisitorResponse:
    type: object
    properties:
      pageView:
        $ref: '#/definitions/v1PageView'
  v1ImportFromJSONRequest:
    type: object
    properties:
      namespace:
        type: string
      crmObjectType:
        type: string
      crmObjectSubtype:
        type: string
      existingRecordChecks:
        type: array
        items:
          type: string
        description: |-
          existing_record_checks is a list of filters that will be executed in order to see if the record already exists.
          If any of the filters match exactly 1 record, the record will be updated instead of created.
      fieldData:
        type: object
      readMask:
        type: array
        items:
          type: string
        description: |-
          A list of fields that should have their merged values returned in the response.
          If empty no fields will be returned.
  v1ImportFromJSONResponse:
    type: object
    properties:
      crmObjectId:
        type: string
        title: CRM Object ID
      fields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FieldValue'
        title: Objects fields based on the request
  v1InferCompanyCategoriesRequest:
    type: object
    properties:
      partnerId:
        type: string
      namespace:
        type: string
      companyId:
        type: string
  v1Integration:
    type: object
    properties:
      integrationId:
        type: string
      objectType:
        type: string
      objectSubtype:
        type: string
      lookupMappingIds:
        type: array
        items:
          type: string
      fieldMappings:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FieldMapping'
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
  v1IsContactIamUserForCompanyRequest:
    type: object
    properties:
      namespace:
        type: string
      contactId:
        type: string
      companyId:
        type: string
  v1IsContactIamUserForCompanyResponse:
    type: object
    properties:
      isIamUser:
        type: boolean
  v1MappingType:
    type: string
    enum:
      - MAPPING_TYPE_UNSPECIFIED
      - MAPPING_TYPE_LOOKUP_CUSTOM_FIELD
      - MAPPING_TYPE_CUSTOM_FIELD
      - MAPPING_TYPE_SYSTEM_FIELD
    default: MAPPING_TYPE_UNSPECIFIED
  v1MergeStrategy:
    type: object
    properties:
      type:
        $ref: '#/definitions/v1MergeStrategyType'
      config:
        $ref: '#/definitions/MergeStrategyMergeConfig'
  v1MergeStrategyType:
    type: string
    enum:
      - MERGE_STRATEGY_UNSPECIFIED
      - MERGE_STRATEGY_ALWAYS_OVERWRITE
      - MERGE_STRATEGY_OVERWRITE_IF_EMPTY
      - MERGE_STRATEGY_OVERWRITE_IF_NEWER
      - MERGE_STRATEGY_COMBINE
    default: MERGE_STRATEGY_UNSPECIFIED
  v1NestedIntegration:
    type: object
    properties:
      integrationId:
        type: string
  v1PageView:
    type: object
    properties:
      url:
        type: string
      timestamp:
        type: string
        format: date-time
      utmAttributes:
        $ref: '#/definitions/v1UTMAttributes'
      referrer:
        type: string
      referringDomain:
        type: string
  v1Phone:
    type: object
    properties:
      isoCountryCode:
        type: string
        title: ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada
      nationalNumber:
        type: string
      extension:
        type: string
    title: This follows the E164 international standard specification for phone numbers
  v1PhoneFields:
    type: object
    properties:
      isoCountryCode:
        type: string
        title: ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada
      nationalNumber:
        type: string
      extension:
        type: string
      e164Compliant:
        type: boolean
  v1RemoveContactAsIamUserForCompanyRequest:
    type: object
    properties:
      namespace:
        type: string
      contactId:
        type: string
      companyId:
        type: string
  v1StartManualAutomationsRequest:
    type: object
    properties:
      automationId:
        type: string
        title: The automation to start
      payload:
        $ref: '#/definitions/StartManualAutomationsRequestStartAutomationPayload'
      criteria:
        $ref: '#/definitions/StartManualAutomationsRequestStartAutomationCriteria'
  v1StringList:
    type: object
    properties:
      values:
        type: array
        items:
          type: string
  v1UTMAttributes:
    type: object
    properties:
      utmCampaign:
        type: string
      utmMedium:
        type: string
      utmSource:
        type: string
      utmContent:
        type: string
      utmTerm:
        type: string
      gclid:
        type: string
      fbclid:
        type: string
      msclkid:
        type: string
  v1UpdateIntegrationRequest:
    type: object
    properties:
      integration:
        $ref: '#/definitions/v1Integration'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpsertObjectRequest:
    type: object
    properties:
      namespace:
        type: string
      integrationId:
        type: string
      jsonData:
        type: object
  v1UpsertObjectResponse:
    type: object
    properties:
      crmObjectId:
        type: string
        title: |-
          ID for the modified/created object in the CRM
          if it was a single ingestion operation
      multiIngestionResponse:
        $ref: '#/definitions/UpsertObjectResponseMultiIngestionResponse'
  v1WorkflowStatus:
    type: string
    enum:
      - WORKFLOW_STATUS_INVALID
      - WORKFLOW_STATUS_IN_PROGRESS
      - WORKFLOW_STATUS_SUCCEEDED
      - WORKFLOW_STATUS_FAILED
    default: WORKFLOW_STATUS_INVALID
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
