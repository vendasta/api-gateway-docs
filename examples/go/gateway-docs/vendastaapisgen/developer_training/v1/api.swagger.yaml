swagger: "2.0"
info:
  title: developer_training/v1/api.proto
  version: version not set
tags:
  - name: BusinessQA
  - name: TaxiUserDataService
  - name: AdminLibraryUserService
  - name: BookMasterDataService
  - name: BookTransactionService
  - name: KSinghSandhuTodoService
  - name: CceleokaforToDoService
  - name: KOdlandTaskService
  - name: IAntoshToDoList
  - name: HGoyalTaskService
  - name: AOlabenjoTodoListService
  - name: NTamrazyanToDoService
  - name: SPrajapatiToDoService
consumes:
  - application/json
produces:
  - application/json
paths:
  /developertraining.v1.AOlabenjoTodoListService/AOlabenjoAddTodoItem:
    post:
      operationId: AOlabenjoTodoListService_AOlabenjoAddTodoItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AOlabenjoAddTodoItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AOlabenjoAddTodoItemRequest'
      tags:
        - AOlabenjoTodoListService
  /developertraining.v1.AOlabenjoTodoListService/AOlabenjoDeleteTodoItem:
    post:
      operationId: AOlabenjoTodoListService_AOlabenjoDeleteTodoItem
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AOlabenjoDeleteTodoItemRequest'
      tags:
        - AOlabenjoTodoListService
  /developertraining.v1.AOlabenjoTodoListService/AOlabenjoListTodoItems:
    post:
      operationId: AOlabenjoTodoListService_AOlabenjoListTodoItems
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AOlabenjoListTodoItemsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AOlabenjoListTodoItemsRequest'
      tags:
        - AOlabenjoTodoListService
  /developertraining.v1.AOlabenjoTodoListService/AOlabenjoUpdateTodoItem:
    post:
      operationId: AOlabenjoTodoListService_AOlabenjoUpdateTodoItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AOlabenjoUpdateTodoItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AOlabenjoUpdateTodoItemRequest'
      tags:
        - AOlabenjoTodoListService
  /developertraining.v1.AdminLibraryUserService/CreateAdminLibraryUser:
    post:
      operationId: AdminLibraryUserService_CreateAdminLibraryUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AddAdminLibraryUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddAdminLibraryUserRequest'
      tags:
        - AdminLibraryUserService
  /developertraining.v1.AdminLibraryUserService/DeleteAdminLibraryUser:
    post:
      operationId: AdminLibraryUserService_DeleteAdminLibraryUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteAdminLibraryUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteAdminLibraryUserRequest'
      tags:
        - AdminLibraryUserService
  /developertraining.v1.AdminLibraryUserService/EditAdminLibraryUser:
    post:
      operationId: AdminLibraryUserService_EditAdminLibraryUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EditAdminLibraryUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EditAdminLibraryUserRequest'
      tags:
        - AdminLibraryUserService
  /developertraining.v1.AdminLibraryUserService/GetByMailIdAdminLibraryUser:
    post:
      operationId: AdminLibraryUserService_GetByMailIdAdminLibraryUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetByMailIdAdminLibraryUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetByMailIdAdminLibraryUserRequest'
      tags:
        - AdminLibraryUserService
  /developertraining.v1.AdminLibraryUserService/GetUserManagementList:
    post:
      operationId: AdminLibraryUserService_GetUserManagementList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Adminuserpagingresponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Adminuserpagingrequest'
      tags:
        - AdminLibraryUserService
  /developertraining.v1.AdminLibraryUserService/ValidateUserEmailInIam:
    post:
      operationId: AdminLibraryUserService_ValidateUserEmailInIam
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ValidateUserWithIamResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ValidateUserWithIamRequest'
      tags:
        - AdminLibraryUserService
  /developertraining.v1.BookMasterDataService/CreateBookmasterData:
    post:
      operationId: BookMasterDataService_CreateBookmasterData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookmasterAddResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookmasterAddRequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookMasterDataService/DeleteBookMasterData:
    post:
      operationId: BookMasterDataService_DeleteBookMasterData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Bookmasterdeleteresponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Bookmasterdeleterequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookMasterDataService/EditBookMasterData:
    post:
      operationId: BookMasterDataService_EditBookMasterData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookmasterEditResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookmasterEditRequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookMasterDataService/GetAdminDashboardBookMasterSummary:
    post:
      operationId: BookMasterDataService_GetAdminDashboardBookMasterSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Bookmastersummaryresponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Bookmastersummaryrequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookMasterDataService/GetBookDropdown:
    post:
      operationId: BookMasterDataService_GetBookDropdown
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookDropdownResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookDropdownRequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookMasterDataService/GetBookMasterData:
    post:
      operationId: BookMasterDataService_GetBookMasterData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Bookmasterpagingresponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Bookmasterpagingrequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookMasterDataService/GetByIdBookMasterData:
    post:
      operationId: BookMasterDataService_GetByIdBookMasterData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Bookmastergetbyidresponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Bookmastergetbyidrequest'
      tags:
        - BookMasterDataService
  /developertraining.v1.BookTransactionService/BookCheckout:
    post:
      operationId: BookTransactionService_BookCheckout
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookCheckoutResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookCheckOutRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/BookReturn:
    post:
      operationId: BookTransactionService_BookReturn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookReturnEditResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookReturnEditRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/EditBookReturn:
    post:
      operationId: BookTransactionService_EditBookReturn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookReturnResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookReturnRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/GetActiveUserList:
    post:
      operationId: BookTransactionService_GetActiveUserList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetActiveUserListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetActiveUserListRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/GetBookListByName:
    post:
      operationId: BookTransactionService_GetBookListByName
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BookFilterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BookFilterRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/GetBookReturnData:
    post:
      summary: Book Return Proto's
      operationId: BookTransactionService_GetBookReturnData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReturnedDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReturnedDataRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/GetCheckedOutData:
    post:
      operationId: BookTransactionService_GetCheckedOutData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCheckedOutDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCheckedOutDataRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BookTransactionService/GetTransactionRecord:
    post:
      operationId: BookTransactionService_GetTransactionRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionReportResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1TransactionReportRequest'
      tags:
        - BookTransactionService
  /developertraining.v1.BusinessQA/GetBusinessQuestionsAnswers:
    post:
      operationId: BusinessQA_GetBusinessQuestionsAnswers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBusinessQuestionsAnswersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetBusinessQuestionsAnswersRequest'
      tags:
        - BusinessQA
  /developertraining.v1.BusinessQA/ReplaceBusinessQuestionsAnswers:
    post:
      operationId: BusinessQA_ReplaceBusinessQuestionsAnswers
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReplaceBusinessQuestionsAnswersRequest'
      tags:
        - BusinessQA
  /developertraining.v1.CceleokaforToDoService/CCeleokaforCreateTodo:
    post:
      operationId: CceleokaforToDoService_CCeleokaforCreateTodo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CCeleokaforCreateTodoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CCeleokaforCreateTodoRequest'
      tags:
        - CceleokaforToDoService
  /developertraining.v1.CceleokaforToDoService/CCeleokaforDeleteTodo:
    post:
      operationId: CceleokaforToDoService_CCeleokaforDeleteTodo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CCeleokaforDeleteTodoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CCeleokaforDeleteTodoRequest'
      tags:
        - CceleokaforToDoService
  /developertraining.v1.CceleokaforToDoService/CCeleokaforGetAllTodos:
    post:
      operationId: CceleokaforToDoService_CCeleokaforGetAllTodos
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CCeleokaforGetAllTodosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CCeleokaforGetAllTodosRequest'
      tags:
        - CceleokaforToDoService
  /developertraining.v1.CceleokaforToDoService/CCeleokaforUpdateTodo:
    post:
      operationId: CceleokaforToDoService_CCeleokaforUpdateTodo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CCeleokaforUpdateTodoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CCeleokaforUpdateTodoRequest'
      tags:
        - CceleokaforToDoService
  /developertraining.v1.HGoyalTaskService/CreateTask:
    post:
      operationId: HGoyalTaskService_CreateTask
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HGoyalTaskCreateRequest'
      tags:
        - HGoyalTaskService
  /developertraining.v1.HGoyalTaskService/DeleteTask:
    post:
      operationId: HGoyalTaskService_DeleteTask
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HGoyalDeleteTaskRequest'
      tags:
        - HGoyalTaskService
  /developertraining.v1.HGoyalTaskService/GetTasks:
    post:
      operationId: HGoyalTaskService_GetTasks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HGoyalGetTasksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HGoyalGetTasksRequest'
      tags:
        - HGoyalTaskService
  /developertraining.v1.HGoyalTaskService/UpdateTask:
    post:
      operationId: HGoyalTaskService_UpdateTask
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HGoyalUpdateTaskRequest'
      tags:
        - HGoyalTaskService
  /developertraining.v1.IAntoshToDoList/CreateIAntoshTask:
    post:
      operationId: IAntoshToDoList_CreateIAntoshTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IAntoshCreateTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IAntoshCreateTaskRequest'
      tags:
        - IAntoshToDoList
  /developertraining.v1.IAntoshToDoList/DeleteIAntoshTask:
    post:
      operationId: IAntoshToDoList_DeleteIAntoshTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IAntoshDeleteTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IAntoshDeleteTaskRequest'
      tags:
        - IAntoshToDoList
  /developertraining.v1.IAntoshToDoList/GetIAntoshTask:
    post:
      operationId: IAntoshToDoList_GetIAntoshTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IAntoshGetTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IAntoshGetTaskRequest'
      tags:
        - IAntoshToDoList
  /developertraining.v1.IAntoshToDoList/ListIAntoshTasks:
    post:
      operationId: IAntoshToDoList_ListIAntoshTasks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IAntoshListTasksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties: {}
      tags:
        - IAntoshToDoList
  /developertraining.v1.IAntoshToDoList/UpdateIAntoshTask:
    post:
      operationId: IAntoshToDoList_UpdateIAntoshTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IAntoshUpdateTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IAntoshUpdateTaskRequest'
      tags:
        - IAntoshToDoList
  /developertraining.v1.KOdlandTaskService/KOdlandCreateTask:
    post:
      operationId: KOdlandTaskService_KOdlandCreateTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KOdlandCreateTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KOdlandCreateTaskRequest'
      tags:
        - KOdlandTaskService
  /developertraining.v1.KOdlandTaskService/KOdlandDeleteTask:
    post:
      operationId: KOdlandTaskService_KOdlandDeleteTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KOdlandDeleteTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KOdlandDeleteTaskRequest'
      tags:
        - KOdlandTaskService
  /developertraining.v1.KOdlandTaskService/KOdlandGetTasks:
    post:
      operationId: KOdlandTaskService_KOdlandGetTasks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KOdlandGetTasksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KOdlandGetTasksRequest'
      tags:
        - KOdlandTaskService
  /developertraining.v1.KOdlandTaskService/KOdlandUpdateTask:
    post:
      operationId: KOdlandTaskService_KOdlandUpdateTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KOdlandUpdateTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KOdlandUpdateTaskRequest'
      tags:
        - KOdlandTaskService
  /developertraining.v1.KSinghSandhuTodoService/CreateTask:
    post:
      operationId: KSinghSandhuTodoService_CreateTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KSinghSandhuCreateTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KSinghSandhuCreateTaskRequest'
      tags:
        - KSinghSandhuTodoService
  /developertraining.v1.KSinghSandhuTodoService/DeleteTask:
    post:
      operationId: KSinghSandhuTodoService_DeleteTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KSinghSandhuDeleteTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KSinghSandhuDeleteTaskByIdRequest'
      tags:
        - KSinghSandhuTodoService
  /developertraining.v1.KSinghSandhuTodoService/ListTasks:
    post:
      operationId: KSinghSandhuTodoService_ListTasks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KSinghSandhuListTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KSinghSandhuListTaskRequest'
      tags:
        - KSinghSandhuTodoService
  /developertraining.v1.KSinghSandhuTodoService/UpdateTask:
    post:
      operationId: KSinghSandhuTodoService_UpdateTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1KSinghSandhuUpdateTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1KSinghSandhuUpdateTaskRequest'
      tags:
        - KSinghSandhuTodoService
  /developertraining.v1.NTamrazyanToDoService/CreateNTamrazyanToDoItem:
    post:
      operationId: NTamrazyanToDoService_CreateNTamrazyanToDoItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NTamrazyanCreateToDoItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1NTamrazyanCreateToDoItemRequest'
      tags:
        - NTamrazyanToDoService
  /developertraining.v1.NTamrazyanToDoService/GetNTamrazyanToDoItem:
    post:
      operationId: NTamrazyanToDoService_GetNTamrazyanToDoItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NTamrazyanGetToDoItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1NTarmazyanGetToDoItemRequest'
      tags:
        - NTamrazyanToDoService
  /developertraining.v1.NTamrazyanToDoService/ListNTamrazyanToDoItems:
    post:
      operationId: NTamrazyanToDoService_ListNTamrazyanToDoItems
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NTamrazyanListToDoItemsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1NTamrazyanListToDoItemsRequest'
      tags:
        - NTamrazyanToDoService
  /developertraining.v1.NTamrazyanToDoService/RemoveNTamrazyanToDoItem:
    post:
      operationId: NTamrazyanToDoService_RemoveNTamrazyanToDoItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NTamrazyanRemoveToDoItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1NTamrazyanRemoveToDoItemRequest'
      tags:
        - NTamrazyanToDoService
  /developertraining.v1.NTamrazyanToDoService/UpdateNTamrazyanToDoItem:
    post:
      operationId: NTamrazyanToDoService_UpdateNTamrazyanToDoItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NTamrazyanUpdateToDoItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1NTamrazyanUpdateToDoItemRequest'
      tags:
        - NTamrazyanToDoService
  /developertraining.v1.SPrajapatiToDoService/SPrajapatiCreateToDo:
    post:
      operationId: SPrajapatiToDoService_SPrajapatiCreateToDo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SPrajapatiCreateToDoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SPrajapatiCreateToDoRequest'
      tags:
        - SPrajapatiToDoService
  /developertraining.v1.SPrajapatiToDoService/SPrajapatiDeleteToDo:
    post:
      operationId: SPrajapatiToDoService_SPrajapatiDeleteToDo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SPrajapatiDeleteToDoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SPrajapatiDeleteToDoRequest'
      tags:
        - SPrajapatiToDoService
  /developertraining.v1.SPrajapatiToDoService/SPrajapatiListAllTodos:
    post:
      operationId: SPrajapatiToDoService_SPrajapatiListAllTodos
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SPrajapatiListAllTodosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SPrajapatiListAllTodosRequest'
      tags:
        - SPrajapatiToDoService
  /developertraining.v1.SPrajapatiToDoService/SPrajapatiUpdateToDo:
    post:
      operationId: SPrajapatiToDoService_SPrajapatiUpdateToDo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SPrajapatiUpdateToDoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SPrajapatiUpdateToDoRequest'
      tags:
        - SPrajapatiToDoService
  /developertraining.v1.TaxiUserDataService/AddTaxiUserData:
    post:
      operationId: TaxiUserDataService_AddTaxiUserData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AddTaxiUserDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddTaxiUserDataRequest'
      tags:
        - TaxiUserDataService
  /developertraining.v1.TaxiUserDataService/DeleteTaxiUserData:
    post:
      operationId: TaxiUserDataService_DeleteTaxiUserData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteTaxiUserDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteTaxiUserDataRequest'
      tags:
        - TaxiUserDataService
  /developertraining.v1.TaxiUserDataService/EditTaxiUserData:
    post:
      operationId: TaxiUserDataService_EditTaxiUserData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EditTaxiUserDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EditTaxiUserDataRequest'
      tags:
        - TaxiUserDataService
  /developertraining.v1.TaxiUserDataService/GetByIdTaxiUserData:
    post:
      operationId: TaxiUserDataService_GetByIdTaxiUserData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetByIdTaxiUserDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetByIdTaxiUserDataRequest'
      tags:
        - TaxiUserDataService
  /developertraining.v1.TaxiUserDataService/GetUserTaxiGridData:
    post:
      operationId: TaxiUserDataService_GetUserTaxiGridData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTaxiUserDataPaginationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTaxiUserDataPaginationRequest'
      tags:
        - TaxiUserDataService
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AOlabenjoAddTodoItemRequest:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
    title: Add item
  v1AOlabenjoAddTodoItemResponse:
    type: object
    properties:
      additemStatus:
        type: boolean
      id:
        type: string
  v1AOlabenjoDeleteTodoItemRequest:
    type: object
    properties:
      id:
        type: string
    title: Delete item
  v1AOlabenjoListTodoItemsRequest:
    type: object
    title: List all items
  v1AOlabenjoListTodoItemsResponse:
    type: object
    properties:
      listtodoItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AOlabenjoToDoItem'
  v1AOlabenjoToDoItem:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
      completed:
        type: boolean
      deleted:
        type: boolean
  v1AOlabenjoUpdateTodoItemRequest:
    type: object
    properties:
      id:
        type: string
      todoItem:
        $ref: '#/definitions/v1AOlabenjoToDoItem'
    title: Update item
  v1AOlabenjoUpdateTodoItemResponse:
    type: object
    properties:
      status:
        type: boolean
      id:
        type: string
  v1AddAdminLibraryUserRequest:
    type: object
    properties:
      libraryadd:
        $ref: '#/definitions/v1LibraryAdminUserManangementRequest'
  v1AddAdminLibraryUserResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      addresponse:
        $ref: '#/definitions/v1LibraryAdminUserManangementResponse'
  v1AddTaxiUserDataRequest:
    type: object
    properties:
      addtaxiUserdata:
        $ref: '#/definitions/v1TaxiUserData'
  v1AddTaxiUserDataResponse:
    type: object
    properties:
      addtaxiStatus:
        type: boolean
      id:
        type: string
      message:
        type: string
  v1AdminUserManagement:
    type: object
    properties:
      emailId:
        type: string
      role:
        type: string
  v1Adminuserfilter:
    type: object
    properties:
      mailid:
        type: string
      role:
        type: string
      status:
        type: string
  v1Adminuserpagingrequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
      filters:
        $ref: '#/definitions/v1Adminuserfilter'
      from:
        type: string
        format: int64
      sortfield:
        type: string
      directionfield:
        type: string
  v1Adminuserpagingresponse:
    type: object
    properties:
      adminuserdata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AdminUserManagement'
      nextCursor:
        type: string
      hasMore:
        type: boolean
      message:
        type: string
  v1BookCheckOutRequest:
    type: object
    properties:
      bookId:
        type: string
      employeeId:
        type: string
      action:
        type: string
      checkedOutDate:
        type: string
        format: date-time
  v1BookCheckedOutData:
    type: object
    properties:
      employeeId:
        type: string
      bookId:
        type: string
      checkedOutDate:
        type: string
        format: date-time
      transactionId:
        type: string
      bookName:
        type: string
      returnedDate:
        type: string
        format: date-time
  v1BookCheckoutResponse:
    type: object
    properties:
      message:
        type: string
  v1BookDropdownData:
    type: object
    properties:
      bookId:
        type: string
      bookName:
        type: string
      quanity:
        type: string
  v1BookDropdownRequest:
    type: object
  v1BookDropdownResponse:
    type: object
    properties:
      bookDropdownData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BookDropdownData'
  v1BookFilterRequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
      bookname:
        type: string
  v1BookFilterResponse:
    type: object
    properties:
      bookfilterresponse:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BookFilterRequest'
      nextCursor:
        type: string
      hasMore:
        type: boolean
      message:
        type: string
  v1BookReturnEditRequest:
    type: object
    properties:
      bookId:
        type: string
      employeeId:
        type: string
      transactionId:
        type: string
      action:
        type: string
      checkedOutDate:
        type: string
        format: date-time
      returnedDate:
        type: string
        format: date-time
      missedDate:
        type: string
        format: date-time
  v1BookReturnEditResponse:
    type: object
    properties:
      message:
        type: string
  v1BookReturnRequest:
    type: object
    properties:
      bookId:
        type: string
      employeeId:
        type: string
      returnedDate:
        type: string
        format: date-time
      action:
        type: string
        title: Action should be return/missed
      missedDate:
        type: string
        format: date-time
      transactionId:
        type: string
  v1BookReturnResponse:
    type: object
    properties:
      message:
        type: string
  v1BookReturnedData:
    type: object
    properties:
      employeeId:
        type: string
      bookId:
        type: string
      returnedDate:
        type: string
        format: date-time
      transactionId:
        type: string
      action:
        type: string
      missedDate:
        type: string
        format: date-time
      bookName:
        type: string
  v1BookmasterAddRequest:
    type: object
    properties:
      addbookmaster:
        $ref: '#/definitions/v1BookmasterRequest'
  v1BookmasterAddResponse:
    type: object
    properties:
      bookmasterresponse:
        $ref: '#/definitions/v1BookmasterResponse'
      status:
        type: boolean
      message:
        type: string
  v1BookmasterEditRequest:
    type: object
    properties:
      editbookmaster:
        $ref: '#/definitions/v1BookmasterRequest'
  v1BookmasterEditResponse:
    type: object
    properties:
      bookmasterresponse:
        $ref: '#/definitions/v1BookmasterResponse'
      status:
        type: boolean
      message:
        type: string
  v1BookmasterRequest:
    type: object
    properties:
      bookid:
        type: string
      bookname:
        type: string
      bookauthor:
        type: string
      procureBookDate:
        type: string
        format: date-time
      category:
        type: string
      createdby:
        type: string
      modifiedby:
        type: string
      status:
        type: string
      qrcodeauth:
        type: string
      quantity:
        type: string
      purchasedquantity:
        type: string
  v1BookmasterResponse:
    type: object
    properties:
      bookid:
        type: string
      bookname:
        type: string
      bookauthor:
        type: string
      procureBookDate:
        type: string
        format: date-time
      category:
        type: string
      createdby:
        type: string
      modifiedby:
        type: string
      status:
        type: string
      qrcodeauth:
        type: string
      quantity:
        type: string
      purchasedquantity:
        type: string
      missedquantity:
        type: string
  v1Bookmasterdeleterequest:
    type: object
    properties:
      bookid:
        type: string
  v1Bookmasterdeleteresponse:
    type: object
    properties:
      message:
        type: string
      status:
        type: boolean
  v1Bookmasterfilter:
    type: object
    properties:
      bookname:
        type: string
      bookid:
        type: string
      bookauthor:
        type: string
      status:
        type: string
      category:
        type: string
  v1Bookmastergetbyidrequest:
    type: object
    properties:
      bookid:
        type: string
  v1Bookmastergetbyidresponse:
    type: object
    properties:
      bookmasterresponse:
        $ref: '#/definitions/v1BookmasterResponse'
      status:
        type: boolean
      message:
        type: string
  v1Bookmasterpagingrequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
      filters:
        $ref: '#/definitions/v1Bookmasterfilter'
      sortOptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Bookmastersortoptions'
      from:
        type: string
        format: int64
      sortfield:
        type: string
      directionfield:
        type: string
  v1Bookmasterpagingresponse:
    type: object
    properties:
      bookmasterdata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BookmasterResponse'
      nextCursor:
        type: string
      hasMore:
        type: boolean
      message:
        type: string
  v1Bookmastersortfield:
    type: string
    enum:
      - BOOKNAME
      - BOOKAUTHOR
      - CATEGORY
      - PROCUREDATE
    default: BOOKNAME
  v1Bookmastersortoptions:
    type: object
    properties:
      direction:
        $ref: '#/definitions/v1SortDirection'
      field:
        $ref: '#/definitions/v1Bookmastersortfield'
  v1Bookmastersummaryrequest:
    type: object
  v1Bookmastersummaryresponse:
    type: object
    properties:
      totalbooks:
        type: string
        format: int64
      availablebooks:
        type: string
        format: int64
      checkedoutbooks:
        type: string
        format: int64
      overduebooks:
        type: string
        format: int64
  v1CCeleokaforCreateTodoRequest:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
        format: date-time
  v1CCeleokaforCreateTodoResponse:
    type: object
    properties:
      todoItem:
        $ref: '#/definitions/v1CCeleokaforTodoListItem'
  v1CCeleokaforDeleteTodoRequest:
    type: object
    properties:
      id:
        type: string
  v1CCeleokaforDeleteTodoResponse:
    type: object
    properties:
      todoItem:
        $ref: '#/definitions/v1CCeleokaforTodoListItem'
  v1CCeleokaforGetAllTodosRequest:
    type: object
  v1CCeleokaforGetAllTodosResponse:
    type: object
    properties:
      todoItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CCeleokaforTodoListItem'
  v1CCeleokaforTodoListItem:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
        format: date-time
      completed:
        type: boolean
      deleted:
        type: string
        format: date-time
  v1CCeleokaforUpdateTodoRequest:
    type: object
    properties:
      todoItem:
        $ref: '#/definitions/v1CCeleokaforTodoListItem'
  v1CCeleokaforUpdateTodoResponse:
    type: object
    properties:
      todoItem:
        $ref: '#/definitions/v1CCeleokaforTodoListItem'
  v1DeleteAdminLibraryUserRequest:
    type: object
    properties:
      emailId:
        type: string
  v1DeleteAdminLibraryUserResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  v1DeleteTaxiUserDataRequest:
    type: object
    properties:
      id:
        type: string
  v1DeleteTaxiUserDataResponse:
    type: object
    properties:
      deleteStatus:
        type: boolean
      id:
        type: string
  v1EditAdminLibraryUserRequest:
    type: object
    properties:
      libraryedit:
        $ref: '#/definitions/v1LibraryAdminUserManangementRequest'
  v1EditAdminLibraryUserResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      editresponse:
        $ref: '#/definitions/v1LibraryAdminUserManangementResponse'
  v1EditTaxiUserDataRequest:
    type: object
    properties:
      edittaxiUserdata:
        $ref: '#/definitions/v1TaxiUserData'
  v1EditTaxiUserDataResponse:
    type: object
    properties:
      edittaxiStatus:
        type: boolean
      id:
        type: string
      message:
        type: string
  v1FilterTaxiUserData:
    type: object
    properties:
      empname:
        type: string
      licenseno:
        type: string
      phoneno:
        type: string
        format: int64
  v1GetActiveUserListRequest:
    type: object
    properties:
      namespace:
        type: string
      cursor:
        type: string
      pageSize:
        type: string
      userFilter:
        $ref: '#/definitions/v1UserFilter'
      sortOptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserSortData'
  v1GetActiveUserListResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GetActiveUserListResponseData'
      nextCursor:
        type: string
      hasMore:
        type: boolean
  v1GetActiveUserListResponseData:
    type: object
    properties:
      userId:
        type: string
      email:
        type: string
      greetingName:
        type: string
      languageCode:
        type: string
      created:
        type: string
      updated:
        type: string
      emailVerified:
        type: string
      roles:
        type: array
        items:
          type: string
      lastLogin:
        type: string
      publicKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GetUserListId'
      firstName:
        type: string
      lastName:
        type: string
  v1GetBusinessQuestionsAnswersRequest:
    type: object
    properties:
      businessId:
        type: string
        title: business ID is required
  v1GetBusinessQuestionsAnswersResponse:
    type: object
    properties:
      businessId:
        type: string
        title: business ID is required
      answers:
        $ref: '#/definitions/v1QuestionsAnswers'
  v1GetByIdTaxiUserDataRequest:
    type: object
    properties:
      id:
        type: string
  v1GetByIdTaxiUserDataResponse:
    type: object
    properties:
      taxidatabyid:
        $ref: '#/definitions/v1TaxiUserData'
  v1GetByMailIdAdminLibraryUserRequest:
    type: object
    properties:
      emailId:
        type: string
  v1GetByMailIdAdminLibraryUserResponse:
    type: object
    properties:
      status:
        type: boolean
      message:
        type: string
      responsedata:
        $ref: '#/definitions/v1LibraryAdminUserManangementResponse'
  v1GetCheckedOutDataRequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
  v1GetCheckedOutDataResponse:
    type: object
    properties:
      bookCheckedOutData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BookCheckedOutData'
      nextCursor:
        type: string
      hasMore:
        type: boolean
  v1GetReturnedDataRequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
        title: |-
          Bookreturnfilter filters = 3;
            repeated Bookreturnsortoptions sort_options = 4;
            int64 from =5;
            string sortfield =6;
            string directionfield =7;
  v1GetReturnedDataResponse:
    type: object
    properties:
      bookReturnData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BookReturnedData'
      nextCursor:
        type: string
      hasMore:
        type: boolean
  v1GetTaxiUserDataPaginationRequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
      filters:
        $ref: '#/definitions/v1FilterTaxiUserData'
  v1GetTaxiUserDataPaginationResponse:
    type: object
    properties:
      taxarrUserdata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TaxiUserData'
      nextCursor:
        type: string
      hasMore:
        type: boolean
      message:
        type: string
  v1GetUserListId:
    type: object
    properties:
      id:
        type: string
      key:
        type: string
  v1HGoyalDeleteTaskRequest:
    type: object
    properties:
      taskId:
        type: string
  v1HGoyalGetTasksRequest:
    type: object
  v1HGoyalGetTasksResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1HGoyalTask'
  v1HGoyalTask:
    type: object
    properties:
      taskId:
        type: string
      taskName:
        type: string
      taskDescription:
        type: string
      taskStatus:
        type: string
      taskDueDate:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      taskCompleted:
        type: boolean
  v1HGoyalTaskCreateRequest:
    type: object
    properties:
      taskName:
        type: string
      taskDescription:
        type: string
      taskDueDate:
        type: string
        format: date-time
  v1HGoyalUpdateTaskRequest:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1HGoyalTask'
  v1IAntoshCreateTaskRequest:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
        format: date-time
    title: To Create Task
  v1IAntoshCreateTaskResponse:
    type: object
    properties:
      id:
        type: string
  v1IAntoshDeleteTaskRequest:
    type: object
    properties:
      id:
        type: string
    title: To Delete Task
  v1IAntoshDeleteTaskResponse:
    type: object
    properties:
      id:
        type: string
  v1IAntoshGetTaskRequest:
    type: object
    properties:
      id:
        type: string
    title: To Get Task
  v1IAntoshGetTaskResponse:
    type: object
    properties:
      getTask:
        $ref: '#/definitions/v1IAntoshTask'
  v1IAntoshListTasksResponse:
    type: object
    properties:
      listTasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1IAntoshTask'
    title: To Get All Tasks
  v1IAntoshTask:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
        format: date-time
      completed:
        type: boolean
      deleted:
        type: boolean
  v1IAntoshUpdateTaskRequest:
    type: object
    properties:
      editTask:
        $ref: '#/definitions/v1IAntoshTask'
    title: To Update Task
  v1IAntoshUpdateTaskResponse:
    type: object
    properties:
      id:
        type: string
  v1KOdlandCreateTaskRequest:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1KOdlandTask'
    title: create a task
  v1KOdlandCreateTaskResponse:
    type: object
    properties:
      createStatus:
        type: boolean
      taskId:
        type: string
      message:
        type: string
  v1KOdlandDeleteTaskRequest:
    type: object
    properties:
      taskId:
        type: string
  v1KOdlandDeleteTaskResponse:
    type: object
    properties:
      deleteStatus:
        type: boolean
      taskId:
        type: string
  v1KOdlandGetTasksRequest:
    type: object
  v1KOdlandGetTasksResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1KOdlandTask'
  v1KOdlandTask:
    type: object
    properties:
      taskId:
        type: string
      taskTitle:
        type: string
      taskDueDate:
        type: string
        format: date-time
      taskDescription:
        type: string
      taskCompleted:
        type: boolean
      taskDeleted:
        type: boolean
  v1KOdlandUpdateTaskRequest:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1KOdlandTask'
  v1KOdlandUpdateTaskResponse:
    type: object
    properties:
      taskId:
        type: string
  v1KSinghSandhuCreateTaskRequest:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1KSinghSandhuTask'
    title: the request message for creating a task
  v1KSinghSandhuCreateTaskResponse:
    type: object
    properties:
      success:
        type: boolean
        title: Indicates if the task creation was successful
      id:
        type: string
        title: The ID of the created task
    title: the response message for creating a task
  v1KSinghSandhuDeleteTaskByIdRequest:
    type: object
    properties:
      id:
        type: string
  v1KSinghSandhuDeleteTaskResponse:
    type: object
    properties:
      success:
        type: boolean
        title: Indicates if the task deletion was successful
  v1KSinghSandhuListTaskRequest:
    type: object
    title: the request message for listing tasks
  v1KSinghSandhuListTaskResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1KSinghSandhuTask'
        title: A list of tasks
    title: the response message for listing tasks
  v1KSinghSandhuTask:
    type: object
    properties:
      id:
        type: string
        title: Unique identifier for the task
      title:
        type: string
      description:
        type: string
      dueDate:
        type: string
        format: date-time
        title: Due date of the task
      isCompleted:
        type: boolean
        title: Status of the task (completed or not)
      isDeleted:
        type: boolean
        title: Indicates if the task has been deleted
  v1KSinghSandhuUpdateTaskRequest:
    type: object
    properties:
      id:
        type: string
        title: The ID of the task to be updated
      title:
        type: string
        title: The new title of the task
      description:
        type: string
        title: The new description of the task
      dueDate:
        type: string
        format: date-time
        title: The new due date of the task
      isCompleted:
        type: boolean
        title: The new completion status of the task
  v1KSinghSandhuUpdateTaskResponse:
    type: object
    properties:
      success:
        type: boolean
        title: Indicates if the task update was successful
      id:
        type: string
  v1LibraryAdminUserManangementRequest:
    type: object
    properties:
      emailId:
        type: string
      role:
        type: string
      status:
        type: boolean
      pageAccess:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Pageaccess'
  v1LibraryAdminUserManangementResponse:
    type: object
    properties:
      emailId:
        type: string
      role:
        type: string
      status:
        type: boolean
      pageAccess:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Pageaccess'
  v1NTamrazyanCreateToDoItemRequest:
    type: object
    properties:
      title:
        type: string
      dueDate:
        type: string
        format: date-time
      description:
        type: string
  v1NTamrazyanCreateToDoItemResponse:
    type: object
    properties:
      id:
        type: string
  v1NTamrazyanGetToDoItemResponse:
    type: object
    properties:
      item:
        $ref: '#/definitions/v1NTamrazyanToDoItem'
  v1NTamrazyanListToDoItemsRequest:
    type: object
    properties:
      deleted:
        type: boolean
        title: filter by the booleans given
      completed:
        type: boolean
  v1NTamrazyanListToDoItemsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1NTamrazyanToDoItem'
  v1NTamrazyanRemoveToDoItemRequest:
    type: object
    properties:
      id:
        type: string
  v1NTamrazyanRemoveToDoItemResponse:
    type: object
    properties:
      id:
        type: string
  v1NTamrazyanToDoItem:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      dueDate:
        type: string
        format: date-time
      description:
        type: string
      completed:
        type: boolean
      deleted:
        type: boolean
  v1NTamrazyanUpdateToDoItemRequest:
    type: object
    properties:
      item:
        $ref: '#/definitions/v1NTamrazyanToDoItem'
  v1NTamrazyanUpdateToDoItemResponse:
    type: object
    properties:
      id:
        type: string
  v1NTarmazyanGetToDoItemRequest:
    type: object
    properties:
      id:
        type: string
  v1Pageaccess:
    type: object
    properties:
      pagetitle:
        type: string
      create:
        type: boolean
      update:
        type: boolean
      delete:
        type: boolean
      view:
        type: boolean
  v1QuestionsAnswers:
    type: object
    properties:
      whatIsBestTimeOfDayToContact:
        type: string
      isThisPlaceWheelchairAccessible:
        type: string
  v1ReplaceBusinessQuestionsAnswersRequest:
    type: object
    properties:
      businessId:
        type: string
        title: business ID is required
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: FieldMask for omitting values on update. If missing, update them all
      answers:
        $ref: '#/definitions/v1QuestionsAnswers'
  v1SPrajapatiCreateToDoRequest:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      completed:
        type: boolean
      deleted:
        type: boolean
      duedate:
        type: string
        format: date-time
  v1SPrajapatiCreateToDoResponse:
    type: object
    properties:
      todo:
        $ref: '#/definitions/v1SPrajapatiToDo'
      todoId:
        type: string
  v1SPrajapatiDeleteToDoRequest:
    type: object
    properties:
      todoId:
        type: string
  v1SPrajapatiDeleteToDoResponse:
    type: object
    properties:
      todoId:
        type: string
  v1SPrajapatiListAllTodosRequest:
    type: object
    properties:
      pageToken:
        type: string
      pageSize:
        type: integer
        format: int32
  v1SPrajapatiListAllTodosResponse:
    type: object
    properties:
      todos:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SPrajapatiToDo'
      nextPageToken:
        type: string
  v1SPrajapatiToDo:
    type: object
    properties:
      todoId:
        type: string
      title:
        type: string
      description:
        type: string
      completed:
        type: boolean
      deleted:
        type: boolean
      duedate:
        type: string
        format: date-time
  v1SPrajapatiUpdateToDoRequest:
    type: object
    properties:
      todoId:
        type: string
      title:
        type: string
      description:
        type: string
      completed:
        type: boolean
      deleted:
        type: boolean
      duedate:
        type: string
        format: date-time
  v1SPrajapatiUpdateToDoResponse:
    type: object
    properties:
      todo:
        $ref: '#/definitions/v1SPrajapatiToDo'
  v1SortDirection:
    type: string
    enum:
      - SORT_DIRECTION_INVALID
      - SORT_DIRECTION_ASCENDING
      - SORT_DIRECTION_DESCENDING
    default: SORT_DIRECTION_INVALID
  v1TaxiUserData:
    type: object
    properties:
      id:
        type: string
      empcode:
        type: string
      empname:
        type: string
      address:
        type: string
      licenseno:
        type: string
      phoneno:
        type: string
        format: int64
      experience:
        type: string
        format: int64
      city:
        type: string
      state:
        type: string
      country:
        type: string
  v1TransactionReportData:
    type: object
    properties:
      employeeId:
        type: string
      bookId:
        type: string
      checkedOutDate:
        type: string
        format: date-time
        title: string action=3;
      transactionId:
        type: string
        title: |-
          google.protobuf.Timestamp returned_date=5;
           string over_due=6;
      bookName:
        type: string
      returnedDate:
        type: string
        format: date-time
  v1TransactionReportRequest:
    type: object
    properties:
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
        title: FilterTransactionReportData filters=3;
  v1TransactionReportResponse:
    type: object
    properties:
      transactionReportData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionReportData'
      nextCursor:
        type: string
      hasMore:
        type: boolean
      message:
        type: string
  v1UserFilter:
    type: object
    properties:
      subjectTypes:
        type: array
        items:
          type: string
      searchTerms:
        type: array
        items:
          type: string
  v1UserSortData:
    type: object
    properties:
      field:
        type: string
        format: int64
      direction:
        type: string
        format: int64
  v1ValidateUserWithIamRequest:
    type: object
    properties:
      emailId:
        type: string
  v1ValidateUserWithIamResponse:
    type: object
    properties:
      status:
        type: boolean
      message:
        type: string
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
