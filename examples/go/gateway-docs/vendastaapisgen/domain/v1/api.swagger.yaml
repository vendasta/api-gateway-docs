swagger: "2.0"
info:
  title: domain/v1/api.proto
  version: version not set
tags:
  - name: DomainService
consumes:
  - application/json
produces:
  - application/json
paths:
  /domain.v1.DomainService/CreateDomainMapping:
    post:
      operationId: DomainService_CreateDomainMapping
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateDomainMappingRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/DeleteDomainMapping:
    post:
      operationId: DomainService_DeleteDomainMapping
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteDomainMappingRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/GetDMARCRecord:
    post:
      summary: Gets DMARC (Domain-based Message Authentication, Reporting, and Conformance) record (https://tools.ietf.org/html/rfc7489)
      operationId: DomainService_GetDMARCRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetDMARCRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetDMARCRecordRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/GetDNSRecords:
    post:
      summary: |-
        contract: returns a gRPC 7 if caller is unauthorized to access domain micro service
        Get a domain's DNS records by given domain
      operationId: DomainService_GetDNSRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetDNSRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetDNSRecordsRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/GetDomainByIdentifier:
    post:
      summary: Returns a domain by the Identifier if it exists.
      operationId: DomainService_GetDomainByIdentifier
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetDomainByIdentifierResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: A request for getting a domain by an Identifier.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetDomainByIdentifierRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/GetIdentifierByDomain:
    post:
      summary: Returns an identifier of the owner of the given domain if it exists
      operationId: DomainService_GetIdentifierByDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetIdentifierByDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: A request for getting an Identifier by a domain.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetIdentifierByDomainRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/GetSPFRecord:
    post:
      summary: Gets the SPF (Sender Policy Framework) Record for a domain (RFC 7208)
      operationId: DomainService_GetSPFRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSPFRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSPFRecordRequest'
      tags:
        - DomainService
  /domain.v1.DomainService/UpdateDomainMapping:
    post:
      operationId: DomainService_UpdateDomainMapping
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateDomainMappingRequest'
      tags:
        - DomainService
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AAAARecord:
    type: object
    properties:
      value:
        type: array
        items:
          type: string
        title: AAAA record value
    title: AAAA record
  v1ARecord:
    type: object
    properties:
      value:
        type: array
        items:
          type: string
        title: A record value
    title: A record
  v1Alignment:
    type: string
    enum:
      - ALIGNMENT_RELAXED
      - ALIGNMENT_STRICT
    default: ALIGNMENT_RELAXED
    title: |-
      - ALIGNMENT_RELAXED: Allow partial matches e.g. subdomains within a domain
       - ALIGNMENT_STRICT: Require an exact match
  v1CAARecord:
    type: object
    properties:
      value:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CAAValue'
        title: CAA record value
    title: CAA record
  v1CAAValue:
    type: object
    properties:
      value:
        type: string
        title: real CAA record value
      issuerCriticalFlag:
        type: boolean
        description: |-
          boolean to represent the issuer_critical bit of the flag property. In a CAA record, the flag is an 8-bit integer
          where the most significant bit indicates whether the corresponding property tag must be completely understood
          in order for the CAA record to be issued correctly.
      tag:
        type: string
        title: A string that represents the identifier of the property represented by the record
      ttl:
        type: string
        format: uint64
        title: Time to live
      recordClass:
        type: string
        title: Record class
    title: CAA record value
  v1CNameRecord:
    type: object
    properties:
      value:
        type: string
        title: Cname record value
    title: Cname record
  v1CreateDomainMappingRequest:
    type: object
    properties:
      identifier:
        $ref: '#/definitions/v1Identifier'
      domain:
        type: string
  v1DMARCPolicy:
    type: string
    enum:
      - DMARC_POLICY_NONE
      - DMARC_POLICY_QUARANTINE
      - DMARC_POLICY_REJECT
    default: DMARC_POLICY_NONE
    description: |2-
       - DMARC_POLICY_NONE: Take no action on the message. Log suspicious messages in the daily report.
       - DMARC_POLICY_QUARANTINE: Mark the messages as spam and hold it for more processing.
       - DMARC_POLICY_REJECT: Cancel the message so that it is not sent to the recipient.
  v1DMARCRecord:
    type: object
    properties:
      version:
        type: string
        title: The version of DMARC (must be DMARC1)
      reportAggregate:
        type: string
        title: Reporting URI(s) for aggregate data
      reportForensics:
        type: string
        title: Reporting URI(s) for failure data
      filterPercent:
        type: integer
        format: int32
        title: Sampling rate
      domainPolicy:
        $ref: '#/definitions/v1DMARCPolicy'
        title: Requested handling policy
      subdomainPolicy:
        $ref: '#/definitions/v1DMARCPolicy'
        title: Requested handling policy for subdomains
      dkimAlignment:
        $ref: '#/definitions/v1Alignment'
        title: DKIM alignment mode
      spfAlignment:
        $ref: '#/definitions/v1Alignment'
        title: SPF alignment mode
      reportOption:
        $ref: '#/definitions/v1ReportOption'
        title: Failed reporting options
      raw:
        type: string
        title: Raw DMARC record
  v1DNSRecordType:
    type: string
    enum:
      - A_RECORD
      - CNAME_RECORD
      - CAA_RECORD
      - TXT_RECORD
      - AAAA_RECORD
    default: A_RECORD
    title: Enum for DNS record types
  v1DeleteDomainMappingRequest:
    type: object
    properties:
      identifier:
        $ref: '#/definitions/v1Identifier'
  v1Directive:
    type: object
    properties:
      qualifier:
        $ref: '#/definitions/v1Qualifier'
        title: Should mail be accepted from the defined server(s)
      type:
        $ref: '#/definitions/v1MechanismType'
        title: How are we going to specify server(s)
      value:
        type: string
        title: Which server(s) are being specified
    title: A directive adds or removes servers from the approved list
  v1Domain:
    type: object
    properties:
      domain:
        type: string
      secure:
        type: boolean
    description: Provides the domain name and additional metadata.
  v1GetDMARCRecordRequest:
    type: object
    properties:
      primary:
        $ref: '#/definitions/v1Domain'
  v1GetDMARCRecordResponse:
    type: object
    properties:
      record:
        $ref: '#/definitions/v1DMARCRecord'
  v1GetDNSRecordsRequest:
    type: object
    properties:
      domain:
        type: string
        title: The domain for which to get DNS records
      recordTypes:
        type: array
        items:
          $ref: '#/definitions/v1DNSRecordType'
        title: The record types for which to check
    title: A request for getting a domain's DNS records
  v1GetDNSRecordsResponse:
    type: object
    properties:
      domain:
        type: string
        title: The domain that has dns records below
      aRecord:
        $ref: '#/definitions/v1ARecord'
        title: DNS A record for the domain above
      cnameRecord:
        $ref: '#/definitions/v1CNameRecord'
        title: DNS Cname record for the domain above
      caaRecord:
        $ref: '#/definitions/v1CAARecord'
        title: DNS CAA record for the domain above
      aaaaRecord:
        $ref: '#/definitions/v1AAAARecord'
        title: DNS AAAA record for the domain above
    title: A response that represents a domain's DNS records
  v1GetDomainByIdentifierRequest:
    type: object
    properties:
      identifier:
        $ref: '#/definitions/v1Identifier'
    description: A request for getting a domain by an Identifier.
  v1GetDomainByIdentifierResponse:
    type: object
    properties:
      primary:
        $ref: '#/definitions/v1Domain'
      secondaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Domain'
    title: Response for GetDomainByIdentifier
  v1GetIdentifierByDomainRequest:
    type: object
    properties:
      domain:
        type: string
        title: |-
          The domain or sub-domain name.
          Examples:
           - partners.vendasta.com
           - steprep-prod-hrd.appspot.com
           - rep.customdomain.com
    description: A request for getting an Identifier by a domain.
  v1GetIdentifierByDomainResponse:
    type: object
    properties:
      identifier:
        $ref: '#/definitions/v1Identifier'
    title: Response for GetIdentifierByDomain
  v1GetSPFRecordRequest:
    type: object
    properties:
      primary:
        $ref: '#/definitions/v1Domain'
  v1GetSPFRecordResponse:
    type: object
    properties:
      record:
        $ref: '#/definitions/v1SPFRecord'
  v1Identifier:
    type: object
    properties:
      contextualIdentifier:
        type: string
    description: |-
      Identifier is a contextual id that holds hierarchical data.

      Examples:

      Identifier{contextual_identifier: "/application/partner-center"}
      Identifier{contextual_identifier: "/product/RM/partner/ABC"}
      Identifier{contextual_identifier: "/product/SM/partner/DEF/market/my-market"}
      Identifier{contextual_identifier: "/marketplace/website-pro/account/AG-J7V5H8AV/website/49da31ebc3f34f6c97dd540e2447dca7"}

      These hierarchical identifiers allow for flexible re-use, as well as scanning across each contextual piece.
      For example, you could scan across all domains for `/product/RM`, which returns all custom domains for Reputation Intelligence.
      You could also scan across `/product/SM/partner/DEF` and get all of the custom market domains for the DEF partner in SM.
  v1MechanismType:
    type: string
    enum:
      - MECHANISM_TYPE_ALL
      - MECHANISM_TYPE_INCLUDE
      - MECHANISM_TYPE_A
      - MECHANISM_TYPE_MX
      - MECHANISM_TYPE_PTR
      - MECHANISM_TYPE_IP4
      - MECHANISM_TYPE_IP6
      - MECHANISM_TYPE_EXISTS
    default: MECHANISM_TYPE_ALL
    title: |-
      - MECHANISM_TYPE_ALL: Selects all servers
       - MECHANISM_TYPE_INCLUDE: References another domain's SPF
       - MECHANISM_TYPE_A: Refers to a DNS name A or AAAA record
       - MECHANISM_TYPE_MX: Refers to the incoming Mail Servers of a domain
       - MECHANISM_TYPE_PTR: Refers to a DNS name PTR record
       - MECHANISM_TYPE_IP4: Refers to an IPv4 address range
       - MECHANISM_TYPE_IP6: Refers to an IPv6 address range
       - MECHANISM_TYPE_EXISTS: Refers to a DNS record of any kind (rarely used)
  v1Modifier:
    type: object
    properties:
      tag:
        type: string
        title: The name of the modifier
      value:
        type: string
        title: The value of the modifier
    title: Modifiers allow expansion of the framework (redirect is the only common one)
  v1Qualifier:
    type: string
    enum:
      - QUALIFIER_PASS
      - QUALIFIER_FAIL
      - QUALIFIER_SOFT_FAIL
      - QUALIFIER_NEUTRAL
    default: QUALIFIER_PASS
    title: |-
      - QUALIFIER_PASS: Accept email from this server
       - QUALIFIER_FAIL: Reject email from this server(s)
       - QUALIFIER_SOFT_FAIL: Consider as potential spam email from this server(s)
       - QUALIFIER_NEUTRAL: Provides no information about email from this server(s)
  v1ReportOption:
    type: string
    enum:
      - REPORT_OPTION_ALL_FAILED
      - REPORT_OPTION_ANY_FAILED
      - REPORT_OPTION_DKIM_FAILED
      - REPORT_OPTION_SPF_FAILED
    default: REPORT_OPTION_ALL_FAILED
    description: |2-
       - REPORT_OPTION_ALL_FAILED: Generate a DMARC failure report if all mechanisms fail to produce an aligned "pass" result.
       - REPORT_OPTION_ANY_FAILED: Generate a DMARC failure report if any mechanisms fail to produce an aligned "pass" result.
       - REPORT_OPTION_DKIM_FAILED: Generate a DKIM failure report if the message had a signature that failed evaluation
       - REPORT_OPTION_SPF_FAILED: Generate an SPF failure report if the message failed SPF evaluation.
  v1SPFRecord:
    type: object
    properties:
      version:
        type: integer
        format: int64
        title: The version of SPF to use (should just be 1)
      directives:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Directive'
        title: Directives define groups of servers and how to treat email from them
      modifiers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Modifier'
        title: Expansion of the spec
      raw:
        type: string
        title: Raw SPF record
    title: |-
      SPF (Sender Policy Framework) Records declare which servers can send email on behalf of
      a particular domain
  v1UpdateDomainMappingRequest:
    type: object
    properties:
      identifier:
        $ref: '#/definitions/v1Identifier'
      domain:
        type: string
