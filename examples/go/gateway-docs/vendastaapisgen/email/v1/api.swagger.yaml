swagger: "2.0"
info:
  title: email/v1/api.proto
  version: version not set
tags:
  - name: EmailEventService
  - name: EmailService
  - name: Send
  - name: Domain
  - name: Senders
  - name: PartnerEmailQuotaService
  - name: SendGridService
  - name: Admin
  - name: Preferences
  - name: SubUser
  - name: Message
  - name: EmailClient
  - name: RecipientStatus
  - name: Blocks
  - name: InboundMessageService
  - name: InboundMessageMappingService
  - name: DisposableEmail
consumes:
  - application/json
produces:
  - application/json
paths:
  /email.v1.Admin/GetBouncedRecipient:
    post:
      operationId: Admin_GetBouncedRecipient
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBouncedRecipientResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetBouncedRecipientRequest'
      tags:
        - Admin
  /email.v1.Admin/GetUnsubscribedRecipient:
    post:
      operationId: Admin_GetUnsubscribedRecipient
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUnsubscribedRecipientResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetUnsubscribedRecipientRequest'
      tags:
        - Admin
  /email.v1.Admin/InitiateEmailDomainRectify:
    post:
      operationId: Admin_InitiateEmailDomainRectify
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1InitiateEmailDomainRectifyRequest'
      tags:
        - Admin
  /email.v1.Admin/InitiateEmailDomainRollback:
    post:
      operationId: Admin_InitiateEmailDomainRollback
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1InitiateEmailDomainRollbackRequest'
      tags:
        - Admin
  /email.v1.Admin/RedirectEmail:
    post:
      operationId: Admin_RedirectEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RedirectEmailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RedirectEmailRequest'
      tags:
        - Admin
  /email.v1.Admin/ResubscribeRecipient:
    post:
      operationId: Admin_ResubscribeRecipient
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResubscribeRecipientRequest'
      tags:
        - Admin
  /email.v1.Admin/SetEmailQueuesStatus:
    post:
      operationId: Admin_SetEmailQueuesStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AdminSetEmailQueuesStatusRequest'
      tags:
        - Admin
  /email.v1.Admin/UnbounceRecipient:
    post:
      operationId: Admin_UnbounceRecipient
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnbounceRecipientRequest'
      tags:
        - Admin
  /email.v1.Blocks/CreateBlock:
    post:
      operationId: Blocks_CreateBlock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateBlockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateBlockRequest'
      tags:
        - Blocks
  /email.v1.Blocks/DeleteBlock:
    post:
      operationId: Blocks_DeleteBlock
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteBlockRequest'
      tags:
        - Blocks
  /email.v1.Blocks/GetBlock:
    post:
      operationId: Blocks_GetBlock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBlockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetBlockRequest'
      tags:
        - Blocks
  /email.v1.DisposableEmail/CheckDisposableEmail:
    post:
      summary: CheckDisposableEmail checks if the domain of an email is disposable
      operationId: DisposableEmail_CheckDisposableEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CheckDisposableEmailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CheckDisposableEmailRequest'
      tags:
        - DisposableEmail
  /email.v1.Domain/CreatePendingDomain:
    post:
      operationId: Domain_CreatePendingDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPendingEmailDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreatePendingDomainRequest'
      tags:
        - Domain
  /email.v1.Domain/GetDefaultDomain:
    post:
      operationId: Domain_GetDefaultDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetDefaultDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetDefaultDomainRequest'
      tags:
        - Domain
  /email.v1.Domain/ListAllDomains:
    post:
      operationId: Domain_ListAllDomains
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAllDomainsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAllDomainsRequest'
      tags:
        - Domain
  /email.v1.Domain/VerifyDefaultDomain:
    post:
      operationId: Domain_VerifyDefaultDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifyDefaultDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VerifyDefaultDomainRequest'
      tags:
        - Domain
  /email.v1.Domain/VerifyEmailDomainDMARC:
    post:
      operationId: Domain_VerifyEmailDomainDMARC
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifyEmailDomainDMARCResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VerifyEmailDomainDMARCRequest'
      tags:
        - Domain
  /email.v1.EmailClient/ResubscribeRecipientFromUnsubscribeLink:
    post:
      operationId: EmailClient_ResubscribeRecipientFromUnsubscribeLink
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResubscribeRecipientFromUnsubscribeLinkRequest'
      tags:
        - EmailClient
  /email.v1.EmailEventService/ExportAttributeEventClickStats:
    post:
      operationId: EmailEventService_ExportAttributeEventClickStats
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ExportAttributeEventClickStatsRequest'
      tags:
        - EmailEventService
  /email.v1.EmailEventService/GetAttributeEventLinkStats:
    post:
      operationId: EmailEventService_GetAttributeEventLinkStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAttributeEventLinkStatsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAttributeEventLinkStatsRequest'
      tags:
        - EmailEventService
  /email.v1.EmailEventService/GetAttributeEventStats:
    post:
      operationId: EmailEventService_GetAttributeEventStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAttributeEventStatsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAttributeEventStatsRequest'
      tags:
        - EmailEventService
  /email.v1.EmailEventService/GetMultiEmailRollups:
    post:
      summary: Returns a list of email event rollups by the buckets
      operationId: EmailEventService_GetMultiEmailRollups
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiEmailRollupsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiEmailRollupsRequest'
      tags:
        - EmailEventService
  /email.v1.EmailEventService/List:
    post:
      summary: List email events matching a set of filters
      operationId: EmailEventService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListEmailEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListEmailEventsRequest'
      tags:
        - EmailEventService
  /email.v1.EmailEventService/ListForAttributes:
    post:
      operationId: EmailEventService_ListForAttributes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListEventsForAttributesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListEventsForAttributesRequest'
      tags:
        - EmailEventService
  /email.v1.EmailEventService/ListLinkClickActivityForAttribute:
    post:
      operationId: EmailEventService_ListLinkClickActivityForAttribute
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListLinkClickActivityForAttributeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListLinkClickActivityForAttributeRequest'
      tags:
        - EmailEventService
  /email.v1.EmailService/ChangeEmailDomain:
    post:
      operationId: EmailService_ChangeEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ChangeEmailDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ChangeEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/CreateEmailDomain:
    post:
      summary: Create email configuration for a domain
      operationId: EmailService_CreateEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/CreateEmailDomainWithSendAs:
    post:
      summary: Create email configuration for a domain
      operationId: EmailService_CreateEmailDomainWithSendAs
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateEmailDomainWithSendAsRequest'
      tags:
        - EmailService
  /email.v1.EmailService/DeleteEmailDomain:
    post:
      summary: Delete email configuration for a domain
      operationId: EmailService_DeleteEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/DeletePendingEmailDomain:
    post:
      operationId: EmailService_DeletePendingEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeletePendingEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/GetEmailDomain:
    post:
      summary: Returns the email configuration for a domain
      operationId: EmailService_GetEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetEmailDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/GetEmailQueuesStatus:
    post:
      operationId: EmailService_GetEmailQueuesStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetEmailQueuesStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetEmailQueuesStatusRequest'
      tags:
        - EmailService
  /email.v1.EmailService/GetPendingEmailDomain:
    post:
      operationId: EmailService_GetPendingEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPendingEmailDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetPendingEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/List:
    post:
      summary: List lists emails that were sent
      operationId: EmailService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListEmailsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListEmailsRequest'
      tags:
        - EmailService
  /email.v1.EmailService/Send:
    post:
      summary: 'Send sends an email through sendgrid: Deprecated, use SendV2 instead'
      operationId: EmailService_Send
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendRequest'
      tags:
        - EmailService
  /email.v1.EmailService/SendV2:
    post:
      operationId: EmailService_SendV2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendV2Response'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendV2Request'
      tags:
        - EmailService
  /email.v1.EmailService/SendWithCustomDomain:
    post:
      summary: SendWithCustomDomain sends an email using a custom domain which must be configured beforehand
      operationId: EmailService_SendWithCustomDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendWithCustomDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendWithCustomDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/SetEmailQueuesStatus:
    post:
      summary: 'Deprecated: Use AdminService.SetEmailQueuesStatus'
      operationId: EmailService_SetEmailQueuesStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetEmailQueuesStatusRequest'
      tags:
        - EmailService
  /email.v1.EmailService/VerifyEmailDomain:
    post:
      summary: Attempt to verify a domain
      operationId: EmailService_VerifyEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetEmailDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VerifyEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.EmailService/VerifyPendingEmailDomain:
    post:
      operationId: EmailService_VerifyPendingEmailDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifyPendingEmailDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: |-
            VerifyPendingEmailDomainRequest can be called to check if all of the
            PendingDomain's records match the values on the actual domain.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VerifyPendingEmailDomainRequest'
      tags:
        - EmailService
  /email.v1.InboundMessageMappingService/CreateInboundMessageMapping:
    post:
      operationId: InboundMessageMappingService_CreateInboundMessageMapping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateInboundMessageMappingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateInboundMessageMappingRequest'
      tags:
        - InboundMessageMappingService
  /email.v1.InboundMessageMappingService/GetInboundMessageMapping:
    post:
      operationId: InboundMessageMappingService_GetInboundMessageMapping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInboundMessageMappingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetInboundMessageMappingRequest'
      tags:
        - InboundMessageMappingService
  /email.v1.InboundMessageMappingService/GetReplyEmail:
    post:
      operationId: InboundMessageMappingService_GetReplyEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReplyEmailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReplyEmailRequest'
      tags:
        - InboundMessageMappingService
  /email.v1.InboundMessageService/GetInboundMessage:
    post:
      operationId: InboundMessageService_GetInboundMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInboundMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetInboundMessageRequest'
      tags:
        - InboundMessageService
  /email.v1.Message/GetMessage:
    post:
      summary: Get looks up an email using the provided ID
      operationId: Message_GetMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMessageRequest'
      tags:
        - Message
  /email.v1.Message/GetMultiMessage:
    post:
      summary: Get looks up an email using the provided ID
      operationId: Message_GetMultiMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiMessageRequest'
      tags:
        - Message
  /email.v1.PartnerEmailQuotaService/BulkUpsert:
    post:
      summary: BulkUpsert will create or update many PartnerEmailQuota entities
      operationId: PartnerEmailQuotaService_BulkUpsert
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BulkUpsertPartnerEmailQuotaRequest'
      tags:
        - PartnerEmailQuotaService
  /email.v1.PartnerEmailQuotaService/Delete:
    post:
      summary: Delete will soft delete a PartnerEmailQuota entity
      operationId: PartnerEmailQuotaService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeletePartnerEmailQuotaRequest'
      tags:
        - PartnerEmailQuotaService
  /email.v1.PartnerEmailQuotaService/GetMulti:
    post:
      summary: GetMulti will retrieve multiple PartnerEmailQuota entities
      operationId: PartnerEmailQuotaService_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiPartnerEmailQuotaResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiPartnerEmailQuotaRequest'
      tags:
        - PartnerEmailQuotaService
  /email.v1.PartnerEmailQuotaService/Upsert:
    post:
      summary: Upsert will create or updated a PartnerEmailQuota entity
      operationId: PartnerEmailQuotaService_Upsert
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpsertPartnerEmailQuotaRequest'
      tags:
        - PartnerEmailQuotaService
  /email.v1.Preferences/GetCategories:
    post:
      operationId: Preferences_GetCategories
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCategoriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCategoriesRequest'
      tags:
        - Preferences
  /email.v1.Preferences/GetCategoryPreferences:
    post:
      operationId: Preferences_GetCategoryPreferences
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCategoryPreferencesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCategoryPreferencesRequest'
      tags:
        - Preferences
  /email.v1.Preferences/GetUnsubscribeLink:
    post:
      operationId: Preferences_GetUnsubscribeLink
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUnsubscribeLinkResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetUnsubscribeLinkRequest'
      tags:
        - Preferences
  /email.v1.Preferences/SaveCategoryPreferences:
    post:
      operationId: Preferences_SaveCategoryPreferences
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SaveCategoryPreferencesRequest'
      tags:
        - Preferences
  /email.v1.RecipientStatus/BatchSearchRecipientStatus:
    post:
      operationId: RecipientStatus_BatchSearchRecipientStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BatchSearchRecipientStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BatchSearchRecipientStatusRequest'
      tags:
        - RecipientStatus
  /email.v1.RecipientStatus/ResetRecipientStatus:
    post:
      operationId: RecipientStatus_ResetRecipientStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResetRecipientStatusRequest'
      tags:
        - RecipientStatus
  /email.v1.RecipientStatus/ResubscribeRecipientStatus:
    post:
      operationId: RecipientStatus_ResubscribeRecipientStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResubscribeRecipientStatusRequest'
      tags:
        - RecipientStatus
  /email.v1.RecipientStatus/UnsubscribeRecipientStatus:
    post:
      operationId: RecipientStatus_UnsubscribeRecipientStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnsubscribeRecipientStatusRequest'
      tags:
        - RecipientStatus
  /email.v1.Send/SendFromAuthorizedDomain:
    post:
      operationId: Send_SendFromAuthorizedDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendFromAuthorizedDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendFromAuthorizedDomainRequest'
      tags:
        - Send
  /email.v1.Send/SendWhitelabelEmailToUser:
    post:
      operationId: Send_SendWhitelabelEmailToUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendWhitelabelEmailToUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendWhitelabelEmailToUserRequest'
      tags:
        - Send
  /email.v1.SendGridService/ListSendGridSubUserReputations:
    post:
      operationId: SendGridService_ListSendGridSubUserReputations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSendGridSubUserReputationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSendGridSubUserReputationsRequest'
      tags:
        - SendGridService
  /email.v1.SendGridService/ListSendGridTeammates:
    post:
      summary: |-
        ListSendGridTeammates returns a list of people who are "teammates" on
        Vendasta's SendGrid account.
      operationId: SendGridService_ListSendGridTeammates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSendGridTeammatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSendGridTeammatesRequest'
      tags:
        - SendGridService
  /email.v1.Senders/GetSenderInfo:
    post:
      operationId: Senders_GetSenderInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSenderInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSenderInfoRequest'
      tags:
        - Senders
  /email.v1.Senders/QuarantineSender:
    post:
      operationId: Senders_QuarantineSender
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1QuarantineSenderRequest'
      tags:
        - Senders
  /email.v1.SubUser/DeleteSubUser:
    post:
      operationId: SubUser_DeleteSubUser
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteSubUserRequest'
      tags:
        - SubUser
  /email.v1.SubUser/InitializeSubUser:
    post:
      operationId: SubUser_InitializeSubUser
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1InitializeSubUserRequest'
      tags:
        - SubUser
definitions:
  ContentContentType:
    type: string
    enum:
      - TEXT_PLAIN
      - TEXT_HTML
    default: TEXT_PLAIN
  EmailEventBucketEventRollup:
    type: object
    properties:
      date:
        type: string
        format: date-time
        title: the date for the rollup
      quantity:
        type: string
        format: int64
        title: the quantity of the Email Events for the given date
  GetAttributeEventStatsResponseEventStats:
    type: object
    properties:
      eventType:
        $ref: '#/definitions/v1EventType'
        title: Event type
      count:
        type: string
        format: int64
        title: Count of events for the event type
      uniqueCount:
        type: string
        format: int64
        title: Count of unique events for the event type
      uniqueRecipients:
        type: string
        format: int64
        title: Count of unique recipients for the event type
    title: The Event Stats
  LinkClickStatsRecipient:
    type: object
    properties:
      emailAddress:
        type: string
        title: recipient email address
  ListEmailEventsRequestListEmailEventsFilters:
    type: object
    properties:
      emailId:
        type: string
        title: Email ID to list events for
      partnerId:
        type: string
        title: The partner context the email event is for
      businessId:
        type: string
        title: The business context the email event is for
    title: Filters to filter the list of email events on
  ListEmailsRequestListEmailsFilters:
    type: object
    properties:
      to:
        type: string
      from:
        type: string
      dateRange:
        $ref: '#/definitions/vendastatypesDateRange'
      espId:
        type: string
        title: Deprecated. Use esp_ids instead
      partnerId:
        type: string
      applicationId:
        type: string
      businessId:
        type: string
      espIds:
        type: array
        items:
          type: string
      subuserId:
        type: string
  emailv1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
    title: To provide options for the paged request
  emailv1Status:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
      recipientEmail:
        type: string
      status:
        $ref: '#/definitions/v1RecipientStatusEnum'
      infractionCount:
        type: string
        format: int64
      bounceExpiry:
        type: string
        format: date-time
      lastUpdated:
        type: string
        format: date-time
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1AdminSetEmailQueuesStatusRequest:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1EmailQueueStatus'
  v1AttachmentInfo:
    type: object
    properties:
      filename:
        type: string
      name:
        type: string
      contentType:
        type: string
      contentId:
        type: string
      charset:
        type: string
      storageObjectName:
        type: string
      storageObjectUrl:
        type: string
  v1Attribute:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    title: A key/value attribute
  v1BatchSearchRecipientStatusRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
      recipientEmails:
        type: array
        items:
          type: string
  v1BatchSearchRecipientStatusResponse:
    type: object
    properties:
      recipientStatuses:
        type: array
        items:
          type: object
          $ref: '#/definitions/emailv1Status'
  v1BounceSender:
    type: object
    properties:
      type:
        $ref: '#/definitions/v1BounceSenderType'
      id:
        type: string
        title: E.g. Partner ID, Account Group ID, or empty for Yesware
  v1BounceSenderType:
    type: string
    enum:
      - UNBOUNCE_SENDER_TYPE_INVALID
      - UNBOUNCE_SENDER_TYPE_PARTNER
      - UNBOUNCE_SENDER_TYPE_BUSINESS
      - UNBOUNCE_SENDER_TYPE_YESWARE
    default: UNBOUNCE_SENDER_TYPE_INVALID
    description: |-
      Unbounce sender type is used instead of SenderType because the unbounce
      RPC can also be used for interacting with Yesware's SendGrid account.
  v1Bucket:
    type: object
    properties:
      bucketName:
        type: string
        title: The name of the bucket
      attribute:
        $ref: '#/definitions/v1Attribute'
        title: A key/value attribute to get data for
    title: A Bucket to get emails by
  v1BulkUpsertPartnerEmailQuotaRequest:
    type: object
    properties:
      partnerEmailQuota:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PartnerEmailQuotaMutation'
  v1Category:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/v1Namespace'
      id:
        type: string
      name:
        type: string
  v1ChangeEmailDomainRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
        title: The type of sender that this request is being made on behalf of (e.g. business, partner)
      senderId:
        type: string
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
      sendFromDomain:
        type: string
        title: The domain to send emails from (e.g. for "test@example.com", this would be "example.com")
      sendFromUsername:
        type: string
        title: The username to send emails from (e.g. for "test@example.com", this would be "test")
      replyToEmail:
        type: string
        title: The complete email address to include as a "reply-to" on outgoing emails
      sendFromName:
        type: string
        title: The name of the sender that emails will be sent from (e.g. for "no-reply@example.com" can be "Example Corp")
  v1ChangeEmailDomainResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1ChangeEmailDomainStatus'
  v1ChangeEmailDomainStatus:
    type: string
    enum:
      - CHANGE_EMAIL_DOMAIN_STATUS_INVALID
      - CHANGE_EMAIL_DOMAIN_STATUS_ACCEPTED
      - CHANGE_EMAIL_DOMAIN_STATUS_PENDING
    default: CHANGE_EMAIL_DOMAIN_STATUS_INVALID
  v1CheckDisposableEmailRequest:
    type: object
    properties:
      email:
        type: string
        title: |-
          email to be checked if the domain belongs to a
          disposable email service
    title: CheckDisposableEmailRequest check if a email if disposable
  v1CheckDisposableEmailResponse:
    type: object
    properties:
      isDisposable:
        type: boolean
        title: answer if a domain belonging to an email is disposable
    title: CheckDisposableEmailResponse check if a email if disposable
  v1ContactParticipant:
    type: object
    properties:
      contactId:
        type: string
      namespace:
        type: string
  v1Content:
    type: object
    properties:
      type:
        $ref: '#/definitions/ContentContentType'
        title: type of content
      value:
        type: string
        title: value of that content
      sensitive:
        type: boolean
        title: |-
          This content is sensitive and will be encrypted at rest. This means that it will only be decrypted in order to
          send the email. This is intended to be used for email messages containing sensitive data: for example, password
          reset and one-time-password emails
    title: A content for use in an email message
  v1CreateBlockRequest:
    type: object
    properties:
      blockType:
        type: string
      message:
        type: string
      conditions:
        type: string
  v1CreateBlockResponse:
    type: object
    properties:
      blockType:
        type: string
      id:
        type: string
  v1CreateEmailDomainRequest:
    type: object
    properties:
      partnerId:
        type: string
      applicationId:
        type: string
      businessId:
        type: string
      userId:
        type: string
      domain:
        type: string
  v1CreateEmailDomainWithSendAsRequest:
    type: object
    properties:
      partnerId:
        type: string
      applicationId:
        type: string
      businessId:
        type: string
      userId:
        type: string
      domain:
        type: string
      sendAsEmail:
        type: string
      sendAsName:
        type: string
  v1CreateInboundMessageMappingRequest:
    type: object
    properties:
      appNamespace:
        type: string
        title: The app namespace to use for this mapping. (e.g. "Inbox, CRM, etc")
      idempotencyKey:
        type: string
        title: The idempotency key, the owner of the unique mapping record. (e.g. "AG-1234, CONV-123, VUNI, etc")
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        description: The attribute arguments to use for this mapping.
  v1CreateInboundMessageMappingResponse:
    type: object
    properties:
      mappingId:
        type: string
  v1CreatePendingDomainRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
      domain:
        type: string
        title: The domain to send emails from (e.g. for "test@example.com", this would be "example.com")
  v1CustomSender:
    type: object
    properties:
      customEmailUsername:
        type: string
        title: The custom user name for the email address. ie; hello in hello@world.com
      name:
        type: string
        title: The name to send from
      replyTo:
        type: string
        title: The email replies should send to
  v1DeleteBlockRequest:
    type: object
    properties:
      blockType:
        type: string
      id:
        type: string
  v1DeleteEmailDomainRequest:
    type: object
    properties:
      partnerId:
        type: string
      applicationId:
        type: string
      businessId:
        type: string
  v1DeletePartnerEmailQuotaRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: ID of the Partner
  v1DeletePendingEmailDomainRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
        title: The type of sender that this request is being made on behalf of (e.g. business, partner)
      senderId:
        type: string
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
      domain:
        type: string
  v1DeleteSubUserRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
  v1EmailDomain:
    type: object
    properties:
      partnerId:
        type: string
        title: Which Partner ID this record is scoped to (if applicable)
      businessId:
        type: string
        title: Which Business ID this record is scoped to (if applicable)
      domain:
        type: string
        title: Which domain this record is scope to
      mail:
        $ref: '#/definitions/v1Record'
        title: The DNS Record for Sendgrid
      dkim1:
        $ref: '#/definitions/v1Record'
        title: The first DKIM CNAME record
      dkim2:
        $ref: '#/definitions/v1Record'
        title: The second dkim CNAME record
      apiKey:
        type: string
        title: The SendGrid API key
      subUserId:
        type: string
        title: The SendGrid SubUser ID
      applicationId:
        type: string
        title: The Application Name for this Key
      domainId:
        type: string
        title: The SendGrid Domain ID
      sendAsEmail:
        type: string
        title: The custom email to be used when sending from this domain
      sendAsName:
        type: string
        title: The custom name to be used when sending from this domain
      dmarc:
        $ref: '#/definitions/v1Record'
        title: The DMARC record for this domain
  v1EmailEvent:
    type: object
    properties:
      emailId:
        type: string
        title: A unique identifier for the email this event is for
      eventId:
        type: string
        title: A unique identifier for the event
      eventType:
        $ref: '#/definitions/v1EventType'
        title: The type of event
      eventTime:
        type: string
        format: date-time
        title: The time of this event
      ipAddress:
        type: string
        title: IP address the event originated from, if applicable
      userAgent:
        type: string
        title: The user agent the event originated from, if applicable
      urlClicked:
        type: string
        title: The URL clicked by the user
      reason:
        type: string
        title: The "reason" associated to an event
      urlClickedNormalized:
        type: string
        title: The normalized URL clicked by the user
      emailAddress:
        type: string
        title: The email address of the user
    title: An email event
  v1EmailEventBucket:
    type: object
    properties:
      bucketName:
        type: string
        title: The name of the bucket
      eventRollup:
        type: array
        items:
          type: object
          $ref: '#/definitions/EmailEventBucketEventRollup'
        description: The Events rolled up into daily counts.
  v1EmailEventFilter:
    type: object
    properties:
      partnerId:
        type: string
        description: The partner context the email event is for.
      marketId:
        type: string
        description: The market context - under the partner - the email event is for.
      notificationTypes:
        type: array
        items:
          $ref: '#/definitions/v1NotificationType'
        title: The notification type list to filter by
      eventTypes:
        type: array
        items:
          $ref: '#/definitions/v1EventType'
        title: The event type list to filter by
      dateRange:
        $ref: '#/definitions/vendastatypesDateRange'
        title: the date range to filter the data by
  v1EmailMessage:
    type: object
    properties:
      to:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: Participants to deliver the message to
      cc:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: Participants who should be cc'd on the message
      bcc:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: Participants who should be bcc'd on the message
      from:
        $ref: '#/definitions/v1Participant'
        title: Participant whom the message is from
      replyTo:
        $ref: '#/definitions/v1Participant'
        title: Participant whom the message's replies should go to
      subject:
        type: string
        title: Subject of the message
      content:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Content'
        title: Content of the email in one or more types
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        title: Any number of attributes to attach to the message that will also be attached to resulting email events
      emailId:
        type: string
        title: A unique identifier for the email
      timestamp:
        type: string
        format: date-time
        title: The time the email was sent
      headers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Header'
        title: Email headers
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GCSAttachment'
        title: Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider
      urlAttachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1URLAttachment'
        title: 'Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider'
      serviceProviderInfo:
        $ref: '#/definitions/v1ServiceProviderInfo'
        title: Info for the Service Provider
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Links'
        title: Info required to track individual links within an email
      originUserId:
        type: string
        title: The ID of the user who sent the email (which can be a service account)
    title: An email message
  v1EmailMessageV2:
    type: object
    properties:
      to:
        $ref: '#/definitions/v1UserParticipant'
        title: Participants to deliver the message to
      from:
        $ref: '#/definitions/v1Participant'
        title: Participant whom the message is from
      replyTo:
        $ref: '#/definitions/v1Participant'
        title: Participant whom the message's replies should go to
      subject:
        type: string
        title: Subject of the message
      content:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Content'
        title: Content of the email in one or more types
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        title: Any number of attributes to attach to the message that will also be attached to resulting email events
      emailId:
        type: string
        title: A unique identifier for the email
      timestamp:
        type: string
        format: date-time
        title: The time the email was sent
      headers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Header'
        title: Email headers
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GCSAttachment'
        title: Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider
      urlAttachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1URLAttachment'
        title: 'Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider'
      serviceProviderInfo:
        $ref: '#/definitions/v1ServiceProviderInfo'
        title: Info for the Service Provider
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Links'
        title: Info required to track individual links within an email
  v1EmailQueueStatus:
    type: string
    enum:
      - EMAIL_QUEUE_STATUS_UNSPECIFIED
      - EMAIL_QUEUE_STATUS_RUNNING
      - EMAIL_QUEUE_STATUS_DISABLED
    default: EMAIL_QUEUE_STATUS_UNSPECIFIED
  v1EmailWithCustomDomainMessage:
    type: object
    properties:
      to:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: Participants to deliver the message to
      cc:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: Participants who should be cc'd on the message
      bcc:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: Participants who should be bcc'd on the message
      replyTo:
        $ref: '#/definitions/v1Participant'
        title: Participant whom the message's replies should go to
      subject:
        type: string
        title: Subject of the message
      content:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Content'
        title: Content of the email in one or more types
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        title: Any number of attributes to attach to the message that will also be attached to resulting email events
      emailId:
        type: string
        title: A unique identifier for the email
      timestamp:
        type: string
        format: date-time
        title: The time the email was sent
      headers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Header'
        title: Email headers
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GCSAttachment'
        title: Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider
      urlAttachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1URLAttachment'
        title: 'Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider'
  v1Envelope:
    type: object
    properties:
      toField:
        type: array
        items:
          type: string
      fromField:
        type: string
    title: An email envelope contents
  v1EventType:
    type: string
    enum:
      - EMPTY
      - PROCESSED
      - DELIVERED
      - OPENED
      - CLICKED
      - BOUNCED
      - DEFERRED
      - DROPPED
      - SPAMREPORT
      - UNSUBSCRIBED
      - RESUBSCRIBED
    default: EMPTY
  v1ExportAttributeEventClickStatsRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: the sender to export links for
      normalizedUrl:
        type: string
        title: the url to get stats for
      attribute:
        $ref: '#/definitions/v1Attribute'
        title: 'the attribute key and value (ex: automation_step_id : id-123)'
      userId:
        type: string
        title: the id of the request
  v1GCSAttachment:
    type: object
    properties:
      bucket:
        type: string
        title: google cloud services storage bucket where the file is located
      filename:
        type: string
        title: filename for the file to be attached. This can look like a /path/to/file
      attachedFilename:
        type: string
        title: attached_filename is the intended name of this attachment in the email
  v1GetAttributeEventLinkStatsRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The sender to get LinkStats for
      attribute:
        $ref: '#/definitions/v1Attribute'
        title: The attribute to get LinkStats for
    title: Request for the GetAttributeEventLinkStats RPC
  v1GetAttributeEventLinkStatsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LinkStats'
        title: The list of link stats
    title: Response for the GetAttributeEventLinkStats RPC
  v1GetAttributeEventStatsRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The sender to get EventStats for
      attribute:
        $ref: '#/definitions/v1Attribute'
        title: The attribute to get EventStats for
    title: Request for the GetAttributeEventStats RPC
  v1GetAttributeEventStatsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetAttributeEventStatsResponseEventStats'
        title: The list of event stats
    title: Response for the GetAttributeEventStats RPC
  v1GetBlockRequest:
    type: object
    properties:
      blockType:
        type: string
      id:
        type: string
  v1GetBlockResponse:
    type: object
    properties:
      blockType:
        type: string
      id:
        type: string
      message:
        type: string
      conditions:
        type: string
  v1GetBouncedRecipientRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1BounceSender'
        title: ID of sender (e.g. partner, business, Yesware)
      recipientEmail:
        type: string
        title: email address of recipient
  v1GetBouncedRecipientResponse:
    type: object
    properties:
      recipientEmail:
        type: string
        title: returns email of bounced recipient, if the recipient is bounced (else empty string)
  v1GetCategoriesRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
  v1GetCategoriesResponse:
    type: object
    properties:
      categories:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Category'
  v1GetCategoryPreferencesRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      recipientId:
        type: string
  v1GetCategoryPreferencesResponse:
    type: object
    properties:
      optedInEmailCategoryIds:
        type: array
        items:
          type: string
      emailPreferenceInitialized:
        type: boolean
  v1GetDefaultDomainRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
  v1GetDefaultDomainResponse:
    type: object
    properties:
      domain:
        type: string
  v1GetEmailDomainRequest:
    type: object
    properties:
      partnerId:
        type: string
      applicationId:
        type: string
      businessId:
        type: string
  v1GetEmailDomainResponse:
    type: object
    properties:
      domain:
        $ref: '#/definitions/v1EmailDomain'
  v1GetEmailQueuesStatusRequest:
    type: object
  v1GetEmailQueuesStatusResponse:
    type: object
    properties:
      running:
        type: boolean
  v1GetInboundMessageMappingRequest:
    type: object
    properties:
      appNamespace:
        type: string
        title: The app namespace to use for this mapping. (e.g. "Inbox, CRM, etc")
      idempotencyKey:
        type: string
        title: The idempotency key, the owner of the unique mapping record. (e.g. "AG-1234, CONV-123, VUNI, etc")
  v1GetInboundMessageMappingResponse:
    type: object
    properties:
      inboundMessageMapping:
        $ref: '#/definitions/v1InboundMessageMapping'
  v1GetInboundMessageRequest:
    type: object
    properties:
      emailId:
        type: string
        title: The email ID of the inbound message to retrieve
  v1GetInboundMessageResponse:
    type: object
    properties:
      inboundMessage:
        $ref: '#/definitions/v1InboundMessage'
  v1GetMessageRequest:
    type: object
    properties:
      emailId:
        type: string
  v1GetMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1EmailMessage'
  v1GetMultiEmailRollupsRequest:
    type: object
    properties:
      buckets:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Bucket'
        description: the buckets specifying what email data to rollup on.
      filter:
        $ref: '#/definitions/v1EmailEventFilter'
        title: The filters to apply
  v1GetMultiEmailRollupsResponse:
    type: object
    properties:
      emailRollups:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EmailEventBucket'
        title: a list of EmailEventBucket by the bucket name
  v1GetMultiMessageRequest:
    type: object
    properties:
      emailIds:
        type: array
        items:
          type: string
  v1GetMultiMessageResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EmailMessage'
  v1GetMultiPartnerEmailQuotaRequest:
    type: object
    properties:
      partnerIds:
        type: array
        items:
          type: string
        title: ID of the Partners
  v1GetMultiPartnerEmailQuotaResponse:
    type: object
    properties:
      partnerEmailQuotas:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PartnerEmailQuota'
        title: Entities
  v1GetPendingEmailDomainRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
        title: The type of sender that this request is being made on behalf of (e.g. business, partner)
      senderId:
        type: string
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
  v1GetPendingEmailDomainResponse:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
        title: The type of sender that this request is being made on behalf of (e.g. business, partner)
      senderId:
        type: string
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
      sendFromDomain:
        type: string
        title: the domain to send emails from
      targetSpf:
        type: string
        title: the SPF record that is desired on the DNS records
      currentSpf:
        type: string
        title: the SPF record that is most recently found on the DNS records
      sendFromUsername:
        type: string
        title: The username to send emails from (e.g. for "test@example.com", this would be "test")
      targets:
        $ref: '#/definitions/v1GetPendingEmailDomainTargetCNameRecords'
        title: The CName targets to set on the domain before it can be used in the platform
  v1GetPendingEmailDomainTargetCNameRecords:
    type: object
    properties:
      mailSubdomain:
        type: string
      mailValue:
        type: string
      dkim1Subdomain:
        type: string
      dkim1Value:
        type: string
      dkim2Subdomain:
        type: string
      dkim2Value:
        type: string
      dmarcSubdomain:
        type: string
      dmarcValue:
        type: string
  v1GetReplyEmailRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The sender of this request is being made on behalf of (e.g. account group, partner)
      idempotencyKey:
        type: string
        title: The idempotency key, the owner of the unique mapping record. (e.g. "AG-1234, CONV-123, VUNI, etc")
  v1GetReplyEmailResponse:
    type: object
    properties:
      replyAddress:
        type: string
        title: The reply address of owner (e.g. "AG-1234, CONV-123, VUNI, etc")
  v1GetSenderInfoRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
  v1GetSenderInfoResponse:
    type: object
    properties:
      domain:
        type: string
        title: The domain name (e.g. example.com) that this sender prefers to use for sending platform emails on their behalf
      isPlatformAuthorized:
        type: boolean
        description: |-
          A boolean that is only true if the sender has installed our DKIM records on their domain
          Unauthorized domains are likely to land in spam and put our platform at risk of being block-listed.
      isDefaultForSenderType:
        type: boolean
        description: A boolean that is true if this is a domain that is owned by the platform, rather than the sender.
      preferredEmailUsername:
        type: string
        title: The username (e.g. -->this<--@example.com) that this sender prefers to use for sending platform emails on their behalf
      preferredEmailDisplayName:
        type: string
        title: The display name (e.g. Joe Smith) that this sender prefers to use for sending platform emails on their behalf
      preferredReplyToEmailAddress:
        type: string
        description: The reply-to email that this sender prefers. This will not necessarily use the same domain.
  v1GetUnsubscribeLinkRequest:
    type: object
    properties:
      id:
        type: string
  v1GetUnsubscribeLinkResponse:
    type: object
    properties:
      emailId:
        type: string
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      recipientIds:
        type: array
        items:
          type: string
  v1GetUnsubscribedRecipientRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      recipientEmail:
        type: string
  v1GetUnsubscribedRecipientResponse:
    type: object
    properties:
      recipientEmail:
        type: string
        title: The recipient's email should be included in the response if the recipient is currently unsubscribed, otherwise an empty string and a NotFound error should be returned
  v1Header:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    title: A key/value Header
  v1InboundMessage:
    type: object
    properties:
      emailId:
        type: string
        title: the email ID of the inbound message
      headers:
        type: string
        title: the headers of the email
      dkim:
        type: string
        title: the verification results of any DKIM and domain keys signatures in the message
      contentIds:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        title: the identifiers for the attachments of an email
      toField:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Participant'
        title: the email addresses of recipients
      fromField:
        $ref: '#/definitions/v1Participant'
        title: the sender email address
      contentText:
        type: string
        title: the email body in plaintext format
      contentHtml:
        type: string
        title: the body in HTML format
      senderIp:
        type: string
        title: the ip address of sender
      spamReport:
        type: string
        title: the Spam Assassin's spam report
      envelope:
        $ref: '#/definitions/v1Envelope'
        title: the SMTP envelope information
      attachments:
        type: integer
        format: int32
        title: the number of attachments
      attachmentInfo:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AttachmentInfo'
        title: the attachment info
      subject:
        type: string
        title: the subject line of an email
      spamScore:
        type: number
        format: float
        title: the Spam Assassin's rating for whether or not this is spam
      charsets:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        title: the character sets of the field extracted from the message
      spf:
        type: string
        title: the results of the Sender Policy Framework verification of the message sender and receiving IP address
      rawMessage:
        type: string
        title: the original raw email message that can be used for re-parsing
      created:
        type: string
        format: date-time
        title: the creation time of the email message
      updated:
        type: string
        format: date-time
        title: the updated time of the email message
  v1InboundMessageMapping:
    type: object
    properties:
      mappingId:
        type: string
        title: the mapping ID of the record owner
      appNamespace:
        type: string
        title: The app namespace to use for this mapping. (e.g. "Inbox, CRM, etc")
      idempotencyKey:
        type: string
        title: The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of a mapping record. (e.g. "AG-1234, CONV-123, VUNI, etc")
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        description: The attribute arguments to use for this mapping.
      created:
        type: string
        format: date-time
        title: the creation time of the inbound message mapping
      updated:
        type: string
        format: date-time
        title: the updated time of the inbound message mapping
      deleted:
        type: string
        format: date-time
        title: the deleted time of the inbound message mapping
  v1InboundMessageMappingOptions:
    type: object
    properties:
      appNamespace:
        type: string
        title: The app namespace to use for this mapping. (e.g. "Inbox, crm, etc")
      ownerId:
        type: string
        title: The owner ID to for this mapping. (e.g. "AG-1234, CONV-123, VUNI, MESSAGE-123, etc")
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        description: The attribute arguments to use for this mapping.
    description: InboundMessageMappingOptions is used to map the inbound message to a specific app and owner.
  v1InitializeSubUserRequest:
    type: object
    properties:
      senderType:
        type: string
      senderId:
        type: string
  v1InitiateEmailDomainRectifyRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      bypassFrequencyLimit:
        type: boolean
  v1InitiateEmailDomainRollbackRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
  v1LinkClickStats:
    type: object
    properties:
      recipient:
        $ref: '#/definitions/LinkClickStatsRecipient'
        title: The recipient
      recentDate:
        type: string
        format: date-time
        title: The recent click date
      count:
        type: string
        format: int64
        title: The number  of clicks
  v1LinkStats:
    type: object
    properties:
      url:
        type: string
        title: The normalized url
      totalClicks:
        type: string
        format: int64
        title: Total number of times this link has been clicked
      uniqueClicks:
        type: string
        format: int64
        title: Number of unique clicks on this link
      clickRate:
        type: number
        format: double
        title: Rate of clicks per delivered email
  v1Links:
    type: object
    properties:
      url:
        type: string
        title: original url used in the email
      normalizedUrl:
        type: string
        title: normalized version used to identify the link when sent with templated content
  v1ListAllDomainsRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
  v1ListAllDomainsResponse:
    type: object
    properties:
      domains:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SenderDomain'
        description: The set of all domains available for this sender, including "primary" and any pending domains.
  v1ListEmailEventsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListEmailEventsRequestListEmailEventsFilters'
      pagingOptions:
        $ref: '#/definitions/emailv1PagedRequestOptions'
        title: Options for how to page the response for this request
    title: List email events matching a set of filters
  v1ListEmailEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EmailEvent'
        title: The email events matching the lookup query
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        description: |-
          Metadata about the paging
          Deprecated: This data is no longer provided. Use cursor.
      nextCursor:
        type: string
        title: Cursor for fetching an additional page of results
    title: Response containing a list of email events and paging metadata
  v1ListEmailsRequest:
    type: object
    properties:
      searchTerm:
        type: string
        title: String to use for full text search on all email fields
      filters:
        $ref: '#/definitions/ListEmailsRequestListEmailsFilters'
        title: Exact match filters
      pagingOptions:
        $ref: '#/definitions/emailv1PagedRequestOptions'
        title: Options for how to page the response for this request
  v1ListEmailsResponse:
    type: object
    properties:
      emails:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EmailMessage'
        title: The email messages matching the list query
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Paging metadata
  v1ListEventsForAttributesRequest:
    type: object
    properties:
      attribute:
        $ref: '#/definitions/v1Attribute'
      sender:
        $ref: '#/definitions/v1Sender'
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
      eventTypes:
        type: array
        items:
          $ref: '#/definitions/v1EventType'
  v1ListEventsForAttributesResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EmailEvent'
      cursor:
        type: string
      hasMore:
        type: boolean
  v1ListLinkClickActivityForAttributeRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The sender to get LinkClickActivity for
      attribute:
        $ref: '#/definitions/v1Attribute'
        title: The attribute to get LinkClickActivity for
      pagingOptions:
        $ref: '#/definitions/v1ListLinkClickActivityForAttributeRequestPagedRequestOptions'
        title: paging options
      normalizedUrl:
        type: string
        title: The normalized url to get stats for
  v1ListLinkClickActivityForAttributeRequestPagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1ListLinkClickActivityForAttributeResponse:
    type: object
    properties:
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LinkClickStats'
  v1ListSendGridSubUserReputationsRequest:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
      cursor:
        type: string
        format: int64
  v1ListSendGridSubUserReputationsResponse:
    type: object
    properties:
      reputations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SendGridSubUserReputation'
      nextCursor:
        type: string
        format: int64
  v1ListSendGridTeammatesRequest:
    type: object
  v1ListSendGridTeammatesResponse:
    type: object
    properties:
      teammates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SendGridTeammate'
  v1Namespace:
    type: string
    enum:
      - NAMESPACE_INVALID
      - NAMESPACE_EMAIL
    default: NAMESPACE_INVALID
  v1NotificationType:
    type: string
    enum:
      - NOTIFICATION_TYPE_PRODUCT_UPSELL
      - NOTIFICATION_TYPE_PRODUCT_ADOPTION
      - NOTIFICATION_TYPE_CUSTOMER_ACQUISITION
    default: NOTIFICATION_TYPE_PRODUCT_UPSELL
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: Total results found by the operation
    title: Contains metadata about the paged response
  v1Participant:
    type: object
    properties:
      name:
        type: string
      emailAddress:
        type: string
    title: An email participant
  v1PartnerEmailQuota:
    type: object
    properties:
      partnerId:
        type: string
        title: ID of Partner
      dailyQuota:
        type: string
        format: int64
        title: Quota
      created:
        type: string
        format: date-time
        title: Created date
      updated:
        type: string
        format: date-time
        title: Updated date
  v1PartnerEmailQuotaMutation:
    type: object
    properties:
      partnerId:
        type: string
        title: ID of Partner
      dailyQuota:
        type: string
        format: int64
        title: Quota
    title: Entity and values to upsert
  v1QuarantineSenderRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
  v1RecipientStatusEnum:
    type: string
    enum:
      - RECIPIENT_STATUS_INVALID
      - RECIPIENT_STATUS_HARD
      - RECIPIENT_STATUS_SOFT
      - RECIPIENT_STATUS_UNKNOWN
      - RECIPIENT_STATUS_RESET
      - RECIPIENT_STATUS_NOT_BLOCKED
    default: RECIPIENT_STATUS_INVALID
  v1Record:
    type: object
    properties:
      type:
        type: string
        title: The DNS record type (CNAME, A, AAAA, TXT)
      subdomain:
        type: string
        title: The subdomain entry
      value:
        type: string
        title: The expected value of the record
      currentValue:
        type: string
        title: The actual value of the record
      verified:
        type: boolean
        title: Indicator of a match bettween current ane expected
  v1RedirectEmailRequest:
    type: object
    properties:
      authCheckOnly:
        type: boolean
      emailId:
        type: string
      newRecipientEmailAddress:
        type: string
      includeContent:
        type: boolean
        title: |-
          Set to "true" to include the email content (i.e. the body)
          (WARNING: Ensure the content does not contain sensitive info like password-reset links before sending)
      includeAttributes:
        type: boolean
        title: |-
          Set to "true" to include the original message's attributes
          (WARNING: this may cause sender-facing engagement stats to be surfaces in the platform)
      override:
        $ref: '#/definitions/v1EmailMessage'
        title: 'Support currently in development: non-zero values will be applied over the original message'
      overrideSender:
        $ref: '#/definitions/v1Sender'
  v1RedirectEmailResponse:
    type: object
    properties:
      newEmailId:
        type: string
  v1ResetRecipientStatusRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
      recipientEmail:
        type: string
  v1ResubscribeRecipientFromUnsubscribeLinkRequest:
    type: object
    properties:
      unsubscribeLinkUrl:
        type: string
        title: 'Deprecated: use unsubscribe_link_id instead'
      unsubscribeLinkId:
        type: string
  v1ResubscribeRecipientRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      recipientEmail:
        type: string
  v1ResubscribeRecipientStatusRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      recipientEmail:
        type: string
  v1SaveCategoryPreferencesRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      unverifiedEmailAddress:
        type: string
      userId:
        type: string
      optedInEmailCategoryIds:
        type: array
        items:
          type: string
  v1SendFromAuthorizedDomainRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The email sender
      recipient:
        $ref: '#/definitions/v1Participant'
        title: The email recipient
      message:
        $ref: '#/definitions/v1WhiteLabelEmailMessage'
        title: The Email message
      idempotencyKey:
        type: string
        title: The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of an email. This is used to prevent the email from sending more than once
      transactional:
        type: boolean
        description: |-
          Set true if the user should reasonably expect to receive this email as a
          result of interaction with the platform. Set false if this email is
          marketing content or otherwise something that the user may not expect/want.
      encryptContentAtRest:
        type: boolean
        description: |-
          Set true to encrypt the content of the email when it is stored.
          This means you will not be able to see the content of the email
          in places like Admin Center or vStore. The content is decrypted
          immediately before the email leaves our system to be sent.
      customSender:
        $ref: '#/definitions/v1CustomSender'
        description: The custom sender to use for this email. If not provided, the default sender will be used.
      inboundMessageMappingOptions:
        $ref: '#/definitions/v1InboundMessageMappingOptions'
        description: The Inbound message mapping options. It could be used to map the reply message to a specific app and owner.
  v1SendFromAuthorizedDomainResponse:
    type: object
    properties:
      emailId:
        type: string
  v1SendGridSubUserReputation:
    type: object
    properties:
      username:
        type: string
      reputationPercent:
        type: number
        format: float
  v1SendGridTeammate:
    type: object
    properties:
      fullName:
        type: string
      email:
        type: string
      role:
        type: string
      slackUserName:
        type: string
      slackUrl:
        type: string
    title: SendGridTeammate is a person who has a role defined on Vendasta's SendGrid account
  v1SendRequest:
    type: object
    properties:
      email:
        $ref: '#/definitions/v1EmailMessage'
        title: The email message to send
      espId:
        type: string
        title: Email service provider ID, must be configured ahead of time
      idempotencyKey:
        type: string
        title: The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of an email
      partnerId:
        type: string
        title: The ID of the partner sending the email
      applicationId:
        type: string
        title: The ID of the application sending the email
      businessId:
        type: string
        title: The ID of the business sending the email
  v1SendResponse:
    type: object
    properties:
      emailId:
        type: string
  v1SendV2Request:
    type: object
    properties:
      email:
        $ref: '#/definitions/v1EmailMessageV2'
        description: The email message to send.
      espId:
        type: string
        title: Email service provider ID, must be configured ahead of time
      idempotencyKey:
        type: string
        title: The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of an email
      partnerId:
        type: string
        title: The ID of the partner sending the email
      applicationId:
        type: string
        title: The ID of the application sending the email
      businessId:
        type: string
        title: The ID of the business sending the email
  v1SendV2Response:
    type: object
    properties:
      emailId:
        type: string
  v1SendWhitelabelEmailToUserRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
        title: The email sender
      recipientUser:
        $ref: '#/definitions/v1UserParticipant'
        description: Use recipient instead
        title: The email recipient
      message:
        $ref: '#/definitions/v1WhiteLabelEmailMessage'
        title: The Email Message
      idempotencyKey:
        type: string
        title: The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of an email. This is used to prevent the email from sending more than once
      transactional:
        type: boolean
        description: |-
          Set true if the user should reasonably expect to receive this email as a
          result of interaction with the platform. Set false if this email is
          marketing content or otherwise something that the user may not expect/want.
      userParticipant:
        $ref: '#/definitions/v1UserParticipant'
        title: send to a user
      contactParticipant:
        $ref: '#/definitions/v1ContactParticipant'
        title: send to a contact
  v1SendWhitelabelEmailToUserResponse:
    type: object
    properties:
      emailId:
        type: string
  v1SendWithCustomDomainRequest:
    type: object
    properties:
      email:
        $ref: '#/definitions/v1EmailWithCustomDomainMessage'
        title: The email message to send
      idempotencyKey:
        type: string
        title: The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of an email
      partnerId:
        type: string
        title: The ID of the partner sending the email
      applicationId:
        type: string
        title: The ID of the application sending the email
      businessId:
        type: string
        title: The ID of the business sending the email
      fallbackEmail:
        type: string
        title: The email to be used if the custom domain is not configured
      fallbackName:
        type: string
        title: The name to be used if the custom domain is not configured
      fallbackEspId:
        type: string
        title: The Email service provider ID to be used with the fallback email and name
  v1SendWithCustomDomainResponse:
    type: object
    properties:
      emailId:
        type: string
      customDomainUsed:
        type: boolean
        title: result of the send. Indicates whether the custom or the fallback was used to send
  v1Sender:
    type: object
    properties:
      type:
        $ref: '#/definitions/v1SenderType'
        title: E.g. Partner, Business
      id:
        type: string
        title: E.g. Partner ID, Account Group ID
      appNamespace:
        type: string
        title: E.g. conversation
  v1SenderDomain:
    type: object
    properties:
      sendFromDomain:
        type: string
        title: the domain to send emails from (e.g. for "test@example.com", this would be "example.com")
      targetSpf:
        type: string
        title: the SPF record that is desired on the DNS records
      currentSpf:
        type: string
        title: the SPF record that is most recently found on the DNS records
      targets:
        $ref: '#/definitions/v1GetPendingEmailDomainTargetCNameRecords'
        title: The CName targets to set on the domain before it can be used in the platform
      isPrimary:
        type: boolean
        title: True if this is the sender's preferred sending address
  v1SenderType:
    type: string
    enum:
      - SENDER_TYPE_INVALID
      - SENDER_TYPE_PARTNER
      - SENDER_TYPE_BUSINESS
    default: SENDER_TYPE_INVALID
  v1ServiceProviderInfo:
    type: object
    properties:
      subUserId:
        type: string
        title: subUserID
    title: Info for the service provider
  v1SetEmailQueuesStatusRequest:
    type: object
    properties:
      running:
        type: boolean
  v1URLAttachment:
    type: object
    properties:
      fileUrl:
        type: string
        title: URL pointing to file to be attached
      attachedFilename:
        type: string
        title: the intended name of this attachment in the email
  v1UnbounceRecipientRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1BounceSender'
        title: ID of sender (e.g. partner, business, product)
      recipientEmail:
        type: string
        title: email address of recipient
  v1UnsubscribeRecipientStatusRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
      senderId:
        type: string
      recipientEmail:
        type: string
  v1UpsertPartnerEmailQuotaRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: ID of Partner
      dailyQuota:
        type: string
        format: int64
        title: Quota
  v1UserParticipant:
    type: object
    properties:
      userId:
        type: string
  v1VerifyDefaultDomainMismatch:
    type: object
    properties:
      dnsRecordType:
        type: string
        title: E.g. CNAME, TXT, A
      url:
        type: string
      expectedValue:
        type: string
      actualValue:
        type: string
        description: The record that was found on the domain. Or empty if no record found.
      matchedPrefix:
        type: string
        description: |-
          If a record was found on the domain, this will be the first "chunk" of the
          record value that matches the expected value. This helps detect typo errors.
      matchedSuffix:
        type: string
        description: |-
          If a record was found on the domain, this will be the last "chunk" of the
          record value that matches the expected value. This helps detect typo errors.
  v1VerifyDefaultDomainRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
  v1VerifyDefaultDomainResponse:
    type: object
    properties:
      allRecordsMatch:
        type: boolean
      mismatches:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1VerifyDefaultDomainMismatch'
  v1VerifyEmailDomainDMARCRequest:
    type: object
    properties:
      sender:
        $ref: '#/definitions/v1Sender'
  v1VerifyEmailDomainDMARCResponse:
    type: object
    properties:
      dmarcPass:
        type: boolean
      dmarcRecord:
        type: string
      reason:
        type: string
  v1VerifyEmailDomainRequest:
    type: object
    properties:
      partnerId:
        type: string
      applicationId:
        type: string
      businessId:
        type: string
  v1VerifyPendingEmailDomainMismatch:
    type: object
    properties:
      dnsRecordType:
        type: string
        title: E.g. CNAME, TXT, A
      url:
        type: string
      expectedValue:
        type: string
      actualValue:
        type: string
        description: The record that was found on the domain. Or empty if no record found.
      matchedPrefix:
        type: string
        description: |-
          If a record was found on the domain, this will be the first "chunk" of the
          record value that matches the expected value. This helps detect typo errors.
      matchedSuffix:
        type: string
        description: |-
          If a record was found on the domain, this will be the last "chunk" of the
          record value that matches the expected value. This helps detect typo errors.
  v1VerifyPendingEmailDomainRequest:
    type: object
    properties:
      senderType:
        $ref: '#/definitions/v1SenderType'
        title: The type of sender that this request is being made on behalf of (e.g. business, partner)
      senderId:
        type: string
        title: The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)
    description: |-
      VerifyPendingEmailDomainRequest can be called to check if all of the
      PendingDomain's records match the values on the actual domain.
  v1VerifyPendingEmailDomainResponse:
    type: object
    properties:
      allRecordsMatch:
        type: boolean
      mismatches:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1VerifyPendingEmailDomainMismatch'
  v1WhiteLabelEmailMessage:
    type: object
    properties:
      subject:
        type: string
        title: Subject of the message
      htmlContent:
        type: string
        title: HTML (primary) content to send in the email
      plainTextContent:
        type: string
        title: Plain text (fallback) content to send in the email
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attribute'
        title: Any number of attributes to attach to the message that will also be attached to resulting email events
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Links'
        title: Info required to track individual links within an email
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GCSAttachment'
        title: Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider
      urlAttachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1URLAttachment'
        title: 'Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider'
  vendastatypesDateRange:
    type: object
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
