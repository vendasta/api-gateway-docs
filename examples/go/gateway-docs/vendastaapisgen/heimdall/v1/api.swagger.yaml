swagger: "2.0"
info:
  title: heimdall/v1/api.proto
  version: version not set
tags:
  - name: Heimdall
consumes:
  - application/json
produces:
  - application/json
paths:
  /heimdall.v1.Heimdall/CreateErrorReport:
    post:
      summary: Create a new error report
      operationId: Heimdall_CreateErrorReport
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateErrorReportRequest'
      tags:
        - Heimdall
  /heimdall.v1.Heimdall/CreatePerformanceLog:
    post:
      summary: Create a performance log
      operationId: Heimdall_CreatePerformanceLog
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreatePerformanceLogRequest'
      tags:
        - Heimdall
  /heimdall.v1.Heimdall/CreateRPCLogs:
    post:
      summary: Create new rpc logs
      operationId: Heimdall_CreateRPCLogs
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateRPCLogsRequest'
      tags:
        - Heimdall
  /heimdall.v1.Heimdall/CreateSessionTrace:
    post:
      summary: Create a new session trace
      operationId: Heimdall_CreateSessionTrace
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateSessionTraceRequest'
      tags:
        - Heimdall
  /heimdall.v1.Heimdall/CreateUserEvents:
    post:
      summary: Create new user events
      operationId: Heimdall_CreateUserEvents
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateUserEventsRequest'
      tags:
        - Heimdall
  /heimdall.v1.Heimdall/GetAtlassianAccessToken:
    post:
      summary: Get Access token for Atlassian APIs
      operationId: Heimdall_GetAtlassianAccessToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAtlassianAccessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAtlassianAccessRequest'
      tags:
        - Heimdall
  /heimdall.v1.Heimdall/RefreshAtlassianAccessToken:
    post:
      summary: Refresh Access token for Atlassian APIs
      operationId: Heimdall_RefreshAtlassianAccessToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RefreshAtlassianAccessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RefreshAtlassianAccessRequest'
      tags:
        - Heimdall
definitions:
  PerformanceLogFromCache:
    type: string
    enum:
      - PERFORMANCE_LOG_FROM_CACHE_INDETERMINATE
      - PERFORMANCE_LOG_FROM_CACHE_CACHED
      - PERFORMANCE_LOG_FROM_CACHE_UNCACHED
    default: PERFORMANCE_LOG_FROM_CACHE_INDETERMINATE
  StacktraceFrame:
    type: object
    properties:
      filename:
        type: string
        title: The relative filepath to the call
      lineNumber:
        type: string
        title: The line number in the file
      colNumber:
        type: string
        title: The column number in the line of the file
      function:
        type: string
        title: The name of the function being called
      inApp:
        type: boolean
        title: Whether this call orginated in applicaiton code and is relevant to the stack trace
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1Breadcrumb:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
        title: A timestamp representing when the breadcrumb occurred
      type:
        type: string
        title: The type of event the breadcrumb is for, eg Navigation or Http
      message:
        type: string
        title: A message describing the breadcrumb
      data:
        type: object
        additionalProperties:
          type: string
        title: Data associated with this breadcrumb
      category:
        type: string
        description: |-
          Categories are dotted strings that indicate what the crumb is or where it comes from.
          Typically itâ€™s a module name or a descriptive string. For instance ui.click could be
          used to indicate that a click happend in the UI or flask could be used to indicate that
          the event originated in the Flask framework.
  v1CreateErrorReportRequest:
    type: object
    properties:
      report:
        $ref: '#/definitions/v1ErrorReport'
        title: The ErrorReport object to create
    title: Request to create a new ErrorReport
  v1CreatePerformanceLogRequest:
    type: object
    properties:
      performanceLog:
        $ref: '#/definitions/v1PerformanceLog'
  v1CreateRPCLogsRequest:
    type: object
    properties:
      rpcLogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RPCLog'
        title: A list of RPCLog objects to create
    title: Request to create new RPCLogs
  v1CreateSessionTraceRequest:
    type: object
    properties:
      sessionTrace:
        $ref: '#/definitions/v1SessionTrace'
        title: The session trace to create
    title: Request to create a new SessionTrace
  v1CreateUserEventsRequest:
    type: object
    properties:
      userEvents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserEvent'
        title: A list of UserEvent objects to create
    title: Request to create new UserEvents
  v1ErrorReport:
    type: object
    properties:
      eventId:
        type: string
        title: Hexadecimal string representing a uuid4 value
      project:
        type: string
        title: The name of the project this report is created for, eg. business-center-client
      environment:
        type: string
        title: The name of the environment that created this report, eg. production
      release:
        type: string
        title: The release this error occured in. For projects that use vstatic this would be the deployment id
      platform:
        type: string
        title: The language of the program that generated this error, eg javascript, go
      timestamp:
        type: string
        format: date-time
        title: A timestamp representing when the error occured
      request:
        $ref: '#/definitions/v1Request'
        title: An object containing information relevant for when the error occur during an http request
      exception:
        $ref: '#/definitions/v1Exception'
        title: Information about the exception that occured
      message:
        type: string
        title: A message used to provide details of this error
      stackTrace:
        $ref: '#/definitions/v1Stacktrace'
        title: The stacktrace for when this error occured
      breadcrumbs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Breadcrumb'
        title: Breadcrumbs to provide info for what the user was doing prior to the error
      user:
        $ref: '#/definitions/v1User'
        title: Information about the user that the error occured for
      extra:
        type: object
        additionalProperties:
          type: string
        title: Arbitray map of extra information to include with the report
      traceId:
        type: string
        title: The trace id for the session
  v1Exception:
    type: object
    properties:
      type:
        type: string
        title: The type of the exception
      value:
        type: string
        title: A value for the exception
      module:
        type: string
        title: The package or module which the exception belongs to
      stacktrace:
        $ref: '#/definitions/v1Stacktrace'
        title: Stacktrace for the exception
  v1GetAtlassianAccessRequest:
    type: object
    properties:
      code:
        type: string
        title: Code provided by Atlassian OAuth2.0 user flow, used to create access tokens via Auth API
  v1GetAtlassianAccessResponse:
    type: object
    properties:
      accessToken:
        type: string
        title: Access token provided by JIRA OAuth 2.0
      refreshToken:
        type: string
        title: Refresh token for access provided by JIRA OAuth 2.0
      expiresIn:
        type: string
        title: Number of seconds before the access token expires
  v1HTTPMethod:
    type: string
    enum:
      - GET
      - HEAD
      - POST
      - PUT
      - DELETE
      - CONNECT
      - OPTIONS
      - PATCH
    default: GET
  v1PerformanceLog:
    type: object
    properties:
      project:
        type: string
        title: The project calling the rpc
      environment:
        type: string
        title: The environment of the project
      deploymentId:
        type: string
        title: The deployment id of the project
      traceId:
        type: string
        title: The trace id for the session
      connectEnd:
        type: number
        format: float
        title: |-
          Measures, mostly self-explanatory, for the rest check out this page:
          https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming
      connectStart:
        type: number
        format: float
      decodedBodySize:
        type: number
        format: float
      domComplete:
        type: number
        format: float
      domContentLoadedEventEnd:
        type: number
        format: float
      domContentLoadedEventStart:
        type: number
        format: float
      domInteractive:
        type: number
        format: float
      domainLookupEnd:
        type: number
        format: float
      domainLookupStart:
        type: number
        format: float
      duration:
        type: number
        format: float
      encodedBodySize:
        type: number
        format: float
      fetchStart:
        type: number
        format: float
      loadEventEnd:
        type: number
        format: float
      loadEventStart:
        type: number
        format: float
      redirectCount:
        type: number
        format: float
      redirectEnd:
        type: number
        format: float
      redirectStart:
        type: number
        format: float
      requestStart:
        type: number
        format: float
      responseEnd:
        type: number
        format: float
      responseStart:
        type: number
        format: float
      secureConnectionStart:
        type: number
        format: float
      startTime:
        type: number
        format: float
      transferSize:
        type: number
        format: float
      unloadEventEnd:
        type: number
        format: float
      unloadEventStart:
        type: number
        format: float
      userAgent:
        type: string
        title: User agent that the user was using to browse; may indicate why all measures are 0 (like for Safari and IE)
      type:
        type: string
      firstPaint:
        type: number
        format: float
        title: How many ms it took to get _anything_ painted to the screen
      firstContentfulPaint:
        type: number
        format: float
        title: How many ms it took to get something meaningful painted to the screen, i.e. text or images or what have you
      requestPath:
        type: string
        title: The path in the app where the performance log is from
      requestHost:
        type: string
      afterViewInit:
        type: number
        format: float
        title: How many ms it took to get to the AppComponent ngAfterViewInit
      fromCache:
        $ref: '#/definitions/PerformanceLogFromCache'
        description: |-
          If the transfer size is 0, then it came from cache... however, Safari and IE don't support the new
          NavigationPerformanceTiming API yet, which includes transfer size, so they're always zero.
          Using a distinct field will let us tell in the library side if this is a trustworthy zero by setting this field.
      changeDetectionMsPerTick:
        type: number
        format: float
        description: The average time in ms for each change detection cycle.
      changeDetectionTicks:
        type: number
        format: float
        description: The number of ticks.
      javascriptHeapMemory:
        type: string
        format: int64
    description: |-
      PerformanceLog represents a large portion of the performance measures that browsers track. It is worth noting these
      are just measures, and would need to be used in calculations to get truly useful metrics out of them.
      E.g. something like dom_content_loaded_event_end isn't very useful without using its respective start time to
      calculate the total duration of that event.
  v1RPCLog:
    type: object
    properties:
      requestPath:
        type: string
        title: The RPC or endpoint being called
      requestHost:
        type: string
        title: The host of the RPC or endpoint being called
      httpMethod:
        $ref: '#/definitions/v1HTTPMethod'
        title: The http method being used to call the request_path
      httpStatus:
        type: string
        format: int64
        title: The http status of the response of the call
      project:
        type: string
        title: The project calling the rpc
      environment:
        type: string
        title: The environment of the project
      deploymentId:
        type: string
        title: The deployment id of the project
      startTime:
        type: string
        format: date-time
        title: When the request was made
      durationMillis:
        type: string
        format: int64
        title: How long until the response was recieved in milliseconds
      responseSize:
        type: string
        format: int64
        title: How large the response was in bytes
      sourcePath:
        type: string
        title: The source of the invoked request, i.e. The current page
      responseBody:
        type: string
        title: 'Optional: The full response body of the request'
      traceId:
        type: string
        title: The trace id for the session
  v1RefreshAtlassianAccessRequest:
    type: object
    properties:
      refreshToken:
        type: string
        title: Token required to refresh Atlassian access, to get a new token
  v1RefreshAtlassianAccessResponse:
    type: object
    properties:
      accessToken:
        type: string
        title: Access token provided by Atlassian OAuth 2.0
      expiresIn:
        type: string
        title: Number of seconds before the access token expires
  v1Request:
    type: object
    properties:
      headers:
        type: object
        additionalProperties:
          type: string
        title: Http headers for the request
      url:
        type: string
        title: Url of the request
  v1SessionTrace:
    type: object
    properties:
      traceId:
        type: string
        title: The unique identifier for the session
      project:
        type: string
        title: The project calling the rpc
      environment:
        type: string
        title: The environment of the project
      deploymentId:
        type: string
        title: The deployment id of the project
      dimensions:
        type: object
        additionalProperties:
          type: string
        title: The dimensions of the session (partnerID, userType, bucketValue)
      userAgent:
        type: string
        title: The user agent string
      referrer:
        type: string
        title: Where the user was previously
      language:
        type: string
        title: The user's language preference set in their browser
  v1Stacktrace:
    type: object
    properties:
      frames:
        type: array
        items:
          type: object
          $ref: '#/definitions/StacktraceFrame'
        title: The list of frames that comprise the stack trace
  v1User:
    type: object
    properties:
      id:
        type: string
        title: Unique identifier for the user
      email:
        type: string
        title: Email address of the user
      username:
        type: string
        title: Name for the user
      ipAddress:
        type: string
        title: The users IP address
  v1UserEvent:
    type: object
    properties:
      project:
        type: string
        title: The project calling the rpc
      environment:
        type: string
        title: The environment of the project
      deploymentId:
        type: string
        title: The deployment id of the project
      traceId:
        type: string
        title: The trace id for the session
      eventCategory:
        type: string
        title: The object that was interacted with ('Button', 'Dropdown', 'Navigation')
      eventAction:
        type: string
        title: The type of interaction ('Click', 'Select', 'View')
      eventLabel:
        type: string
        title: The context on the event ('Package Activation', 'Account Deletion', 'Logout')
      eventValue:
        type: string
        format: int64
        title: The value of the event, most likely 1, but could be a metric being tracked(# of products activated)
      dimensions:
        type: object
        additionalProperties:
          type: string
        title: The dimensions of the event (partnerID, userType, bucketValue)
      timestamp:
        type: string
        format: date-time
        title: A timestamp representing when the event occured
