swagger: "2.0"
info:
  title: marketplace/v1/api.proto
  version: version not set
tags:
  - name: Marketplace
  - name: Vendor
consumes:
  - application/json
produces:
  - application/json
paths:
  /marketplace.v1.Marketplace/AssociateCustomerID:
    post:
      summary: AssociateCustomerID allows a vendor to create a mapping from Vendasta's Customer ID to their customer ID
      operationId: Marketplace_AssociateCustomerID
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AssociateCustomerIDRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/CheckAccountPermission:
    post:
      summary: CheckAccountPermission checks whether the given user has access to the given account (account group).
      operationId: Marketplace_CheckAccountPermission
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CheckAccountPermissionRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/CreateCustomer:
    post:
      summary: CreateCustomer adds a customer to the Customer List System
      operationId: Marketplace_CreateCustomer
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateCustomerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateCustomerRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/DeleteBusinessMetric:
    post:
      summary: DeleteBusinessMetric - soft delete a business metric
      operationId: Marketplace_DeleteBusinessMetric
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteBusinessMetricRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/DeleteCustomer:
    post:
      summary: DeleteCustomer deletes a customer from the Customer List System
      operationId: Marketplace_DeleteCustomer
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteCustomerRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/DeleteMultiBusinessMetrics:
    post:
      summary: DeleteMultiBusinessMetrics - soft delete multiple businesses metrics
      description: VAnalytics
      operationId: Marketplace_DeleteMultiBusinessMetrics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteMultiBusinessMetricsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteMultiBusinessMetricsRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetAccountRichData:
    post:
      summary: Retrieves extended account data such as hours of operation and images.
      operationId: Marketplace_GetAccountRichData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountRichDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAccountRichDataRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetAccountSettings:
    post:
      summary: GetAccountSettingsMulti retrieves all the settings an account has for an app (including the partner / market settings)
      operationId: Marketplace_GetAccountSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountSettingsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAccountSettingsRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetBusinessMetric:
    post:
      summary: GetBusinessMetric - get multiple business metrics
      operationId: Marketplace_GetBusinessMetric
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBusinessMetricResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetBusinessMetricRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetBusinessMetricPoint:
    post:
      summary: GetBusinessMetricPoint - get a business metric point
      operationId: Marketplace_GetBusinessMetricPoint
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBusinessMetricPointResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetBusinessMetricPointRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetCustomer:
    post:
      summary: GetCustomer get a customer from the Customer List System
      operationId: Marketplace_GetCustomer
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCustomerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCustomerRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetOAuthToken:
    post:
      summary: |-
        GetOAuthToken is for requesting an oauth token for a marketplace application to use to authenticate against all
        other RPC's/API's.
      operationId: Marketplace_GetOAuthToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetOAuthTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetOAuthTokenRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetRetailPrice:
    post:
      summary: TickComponentUsage increments the usage counter for the given metered component on an account.
      operationId: Marketplace_GetRetailPrice
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRetailPriceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetRetailPriceRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetSessionFromToken:
    post:
      summary: GetSessionFromToken is for requesting the session information from a token
      operationId: Marketplace_GetSessionFromToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSessionFromTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSessionFromTokenRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetSessionTransferURL:
    post:
      summary: GetSessionTransferURLRequest is for requesting the session transfer URL for an account (account group).
      operationId: Marketplace_GetSessionTransferURL
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSessionTransferURLResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSessionTransferURLRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/GetUser:
    post:
      summary: GetUser returns the user for specified user ID
      operationId: Marketplace_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetUserRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/ListActiveAddons:
    post:
      summary: ListActiveAddons gives all the addons the specified business has active on the specified application.
      operationId: Marketplace_ListActiveAddons
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListActiveAddonsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListActiveAddonsRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/ListAssociatedUsers:
    post:
      summary: ListAssociatedUsers gives all the Users for specified business.
      operationId: Marketplace_ListAssociatedUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAssociatedUsersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAssociatedUsersRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/ListCustomers:
    post:
      summary: ListCustomers gives all the customers the vendor can get for a business
      operationId: Marketplace_ListCustomers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListCustomersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListCustomersRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/PushBusinessMetric:
    post:
      summary: |-
        VAnalytics
        PushBusinessMetric stores data points for a business
      operationId: Marketplace_PushBusinessMetric
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BusinessMetric'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/ResolveChangeSpendRequest:
    post:
      summary: Sends the approval/rejection of the spend amount change request from the vendor
      operationId: Marketplace_ResolveChangeSpendRequest
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResolveChangeSpendRequestRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/SyncAllCustomers:
    post:
      summary: SyncAllCustomers sends a vendor create webhook for each customer in the Customer List System
      operationId: Marketplace_SyncAllCustomers
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SyncAllCustomersRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/TickComponentUsage:
    post:
      summary: The partner will be billed for this usage.
      operationId: Marketplace_TickComponentUsage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1TickComponentUsageRequest'
      tags:
        - Marketplace
  /marketplace.v1.Marketplace/UpdateCustomer:
    post:
      summary: UpdateCustomer updates a customer in the Customer List System
      operationId: Marketplace_UpdateCustomer
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateCustomerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateCustomerRequest'
      tags:
        - Marketplace
  /marketplace.v1.Vendor/ValidateOrderForm:
    post:
      summary: Use Marketplace-API as a proxy to the vendor to validate an order form field
      operationId: Vendor_ValidateOrderForm
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ValidateOrderFormResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ValidateOrderFormRequest'
      tags:
        - Vendor
definitions:
  CurrenciesCurrency:
    type: string
    enum:
      - USD
      - AUD
      - BRL
      - CAD
      - CHF
      - CNY
      - CZK
      - EUR
      - GBP
      - HKD
      - INR
      - JPY
      - KHR
      - KRW
      - MXN
      - NOK
      - NZD
      - RUB
      - SEK
      - SGD
      - TRY
      - ZAR
      - DZD
      - AWG
      - FJD
      - KYD
    default: USD
  FrequenciesFrequency:
    type: string
    enum:
      - MONTHLY
      - DAILY
      - ONCE
      - YEARLY
      - WEEKLY
      - OTHER
    default: MONTHLY
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1AccountRichData:
    type: object
    properties:
      brandsCarried:
        type: array
        items:
          type: string
      callTrackingNumber:
        type: array
        items:
          type: string
      commonName:
        type: array
        items:
          type: string
      deletedFlag:
        type: boolean
      contactFirstName:
        type: string
      images:
        $ref: '#/definitions/v1Images'
      timezone:
        type: string
      workNumber:
        type: array
        items:
          type: string
      partnerId:
        type: string
      id:
        type: string
      city:
        type: string
      zip:
        type: string
      marketId:
        type: string
      deleted:
        type: string
        format: date-time
      state:
        type: string
      companyName:
        type: string
      latitude:
        type: number
        format: float
      foursquareUrl:
        type: string
      serviceAreaBusinessFlag:
        type: boolean
      seoCategory:
        type: array
        items:
          type: string
      email:
        type: string
      taxIds:
        type: array
        items:
          type: string
      website:
        type: string
      rssUrl:
        type: string
      updated:
        type: string
        format: date-time
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      twitterUrl:
        type: string
      address2:
        type: string
      hoursOfOperation:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1HoursOfOperationSpan'
      faxNumber:
        type: string
      shortDescription:
        type: string
      contactEmail:
        type: string
      address:
        type: string
      serviceAvailability:
        $ref: '#/definitions/v1ServiceAvailability'
      youtubeUrl:
        type: string
      instagramUrl:
        type: string
      keyPerson:
        type: array
        items:
          type: string
      facebookUrl:
        type: string
      pinterestUrl:
        type: string
      contactLastName:
        type: string
      created:
        type: string
        format: date-time
      customerIdentifier:
        type: string
      cellNumber:
        type: string
      linkedinUrl:
        type: string
      longitude:
        type: number
        format: float
      salesPersonId:
        type: string
      tollFreeNumber:
        type: string
      googleplusUrl:
        type: string
      servicesOffered:
        type: array
        items:
          type: string
      country:
        type: string
      landmark:
        type: string
      paymentMethods:
        type: array
        items:
          type: string
  v1AccountSettings:
    type: object
    properties:
      accountId:
        type: string
        title: The id for the account
      partnerId:
        type: string
        title: The id for the Partner (the vendor may know this as the reseller)
      marketId:
        type: string
        title: The id for the Market the account is in
      platformSettings:
        $ref: '#/definitions/v1PlatformSettings'
        description: The set of structured settings Vendasta has defined.
      whitelabelActive:
        type: boolean
        title: Whether or not whitelabeling is currently enabled for this account
  v1AddonActivation:
    type: object
    properties:
      addonId:
        type: string
        description: A prerequisite marketplace vendor's ID's of the addon activated.
      activationId:
        type: string
        description: An ID assigned uniquely to this addon upon being activated.
  v1AssociateCustomerIDRequest:
    type: object
    properties:
      customerId:
        type: string
        title: The Customer ID to add an external mapping for
      vendorCustomerId:
        type: string
        title: The Customer ID on the external source to map to
      accountId:
        type: string
        title: The Account ID the customer belongs to
  v1BusinessMetric:
    type: object
    properties:
      businessId:
        type: string
        title: The businessID of the SMB this data will correspond to
      label:
        type: string
        title: A human readable label for the data being collected
      points:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Point'
        title: One or more distinct data points that should be collected
    title: |-
      Data expected from the client. Is composed of a header and at least one point
      of data
  v1ChangeSpendRequestStatus:
    type: string
    enum:
      - CHANGE_SPEND_REQUEST_STATUS_INVALID
      - CHANGE_SPEND_REQUEST_STATUS_CREATED
      - CHANGE_SPEND_REQUEST_STATUS_APPROVED
      - CHANGE_SPEND_REQUEST_STATUS_REJECTED
      - CHANGE_SPEND_REQUEST_STATUS_OVERRIDDEN
    default: CHANGE_SPEND_REQUEST_STATUS_INVALID
    title: The possible change spend request statuses
  v1CheckAccountPermissionRequest:
    type: object
    properties:
      userId:
        type: string
        description: The User ID.
      accountId:
        type: string
        description: The Account ID.
    title: CheckAccountPermissionRequest
  v1Contact:
    type: object
    properties:
      contactId:
        type: string
        title: A unique id for the contact
      accountGroupId:
        type: string
        title: The account group this contact belongs to
      firstName:
        type: string
        title: The first name of the contact
      lastName:
        type: string
        title: The last name of the contact
      address:
        type: string
        title: The street address of where the contact is
      city:
        type: string
        title: The city where the contact is
      state:
        type: string
        title: The state where the contact is
      country:
        type: string
        title: The country where the contact is
      phone:
        type: array
        items:
          type: string
        title: The phone number of the contact
      email:
        type: array
        items:
          type: string
        title: The email address of the contact
      created:
        type: string
        format: date-time
        title: The time the contact was created
      updated:
        type: string
        format: date-time
        title: The time the contact was last modified
      deleted:
        type: string
        format: date-time
        title: The time the contact was deleted. Will be nil if the contact has not been deleted
      origin:
        type: string
        title: The ID of the application that created the contact
      originalId:
        type: string
        title: The customer specified ID from the origin system
      tags:
        type: array
        items:
          type: string
        title: The tags of the customer
      origins:
        type: array
        items:
          type: string
        title: The application ID that created the customer
      permissionToContact:
        type: string
        format: date-time
        title: The time the customer has explicitly opted-in to receive communication from the Business
      assignedRepFirstName:
        type: string
        title: The first name of the rep assigned to the customer
      assignedRepLastName:
        type: string
        title: The last name of the rep assigned to the customer
    title: See contacts/v1/contacts.proto
  v1CreateCustomerRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id to add this customer to
      firstName:
        type: string
        title: The first name of the customer
      lastName:
        type: string
        title: The last name of the customer
      address:
        type: string
        title: The street address of where the customer is
      city:
        type: string
        title: The city where the customer is
      state:
        type: string
        title: The state where the customer is
      country:
        type: string
        title: The country where the customer is
      phone:
        type: array
        items:
          type: string
        title: The phone number of the customer
      email:
        type: array
        items:
          type: string
        title: The email address of the customer
      vendorId:
        type: string
        title: The vendor specified ID from the origin system
      tags:
        type: array
        items:
          type: string
        title: The tags of the customer
      origin:
        type: string
        title: The application ID that created the customer
      permissionToContact:
        type: boolean
        title: This flag is true if the customer has explicitly opted-in to receive communication from the Business
      assignedRepFirstName:
        type: string
        title: The first name of the rep assigned to the customer
      assignedRepLastName:
        type: string
        title: The last name of the rep assigned to the customer
  v1CreateCustomerResponse:
    type: object
    properties:
      customer:
        $ref: '#/definitions/v1Contact'
        title: The new customer that's been created
      conflictingCustomerId:
        type: string
        title: The customer id that conflict with
  v1DateRange:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        title: start date of range
      endDate:
        type: string
        format: date-time
        title: end date of range
    title: date range with start and end date
  v1DateRangeFilter:
    type: object
    properties:
      beginRange:
        type: string
        format: date-time
        title: Start date of range
      endRange:
        type: string
        format: date-time
        title: End date of range
    title: The start and end of date range (inclusive)
  v1DeleteBusinessMetricRequest:
    type: object
    properties:
      id:
        type: string
  v1DeleteBusinessMetricResponse:
    type: object
    properties:
      id:
        type: string
      error:
        $ref: '#/definitions/v1Error'
  v1DeleteCustomerRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id to delete this customer from
      customerId:
        type: string
        title: The Customer ID indicating which customer to delete
  v1DeleteMultiBusinessMetricsRequest:
    type: object
    properties:
      businessMetrics:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DeleteBusinessMetricRequest'
  v1DeleteMultiBusinessMetricsResponse:
    type: object
    properties:
      businessMetrics:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DeleteBusinessMetricResponse'
  v1Error:
    type: object
    properties:
      code:
        type: string
        format: int64
      message:
        type: string
  v1FieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
  v1Filters:
    type: object
    properties:
      source:
        type: array
        items:
          type: string
        title: The source of the contacts the user want to filter for
      created:
        $ref: '#/definitions/v1DateRangeFilter'
        title: Filter by created
      tag:
        type: array
        items:
          type: string
        title: Filter by Tag
      negateTags:
        type: boolean
        title: Negate the tag filter
    title: Option for controlling the filter of the contacts list
  v1GetAccountRichDataRequest:
    type: object
    properties:
      accountGroupId:
        type: string
  v1GetAccountRichDataResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1AccountRichData'
  v1GetAccountSettingsRequest:
    type: object
    properties:
      accountId:
        type: string
        title: the id corresponding to the account to get settings for
  v1GetAccountSettingsResponse:
    type: object
    properties:
      accountSettings:
        $ref: '#/definitions/v1AccountSettings'
  v1GetBusinessMetricPointRequest:
    type: object
    properties:
      id:
        type: string
  v1GetBusinessMetricPointResponse:
    type: object
    properties:
      source:
        type: string
      businessId:
        type: string
      label:
        type: string
      value:
        type: string
        format: int64
      dateHappened:
        type: string
        format: date-time
      dateHappenedKey:
        type: string
      aggregationKey:
        type: string
      id:
        type: string
      created:
        type: string
        format: date-time
      deleted:
        type: boolean
    title: |-
      https://github.com/vendasta/vanalytics/blob/9f3930d9e66a4959624a1e73abcf2a1e0b24dfdc/internal/business-metrics/model.go#L15
      GetBusinessMetricPointResponse - A single business metric point
  v1GetBusinessMetricRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The businessID of the SMB this data will correspond to
      label:
        type: string
        title: A human readable label for the data being collected
      dateRange:
        $ref: '#/definitions/v1DateRange'
        title: date range for request
      pageSize:
        type: string
        format: int64
        description: Page size of the points in the returned metric.
      cursor:
        type: string
        description: A paging cursor for the points in the returned metric. Leave empty for initial request.
    title: data expected in request
  v1GetBusinessMetricResponse:
    type: object
    properties:
      metric:
        $ref: '#/definitions/v1BusinessMetric'
        title: A metric containing multiple points, the number of which is limited by page size
      cursor:
        type: string
        description: A cursor to provide to GetBusinessMetricRequest to get additional points. If empty there are no more points.
  v1GetCustomerRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id to get this customer from
      customerId:
        type: string
        title: The Customer ID indicating which customer to get
  v1GetCustomerResponse:
    type: object
    properties:
      customer:
        $ref: '#/definitions/v1Contact'
        title: The customer that's to get
      conflictingCustomerId:
        type: string
        title: The customer id that conflict with
  v1GetOAuthTokenRequest:
    type: object
    properties:
      grantType:
        type: string
        description: 'Use the following string: ''urn:ietf:params:oauth:grant-type:jwt-bearer''.'
      assertion:
        type: string
        description: The JWT, including signature.
    title: GetOAuthTokenRequest
  v1GetOAuthTokenResponse:
    type: object
    properties:
      accessToken:
        type: string
        description: The token to use to authenticate all other API's with (set in the Authorization header).
      tokenType:
        type: string
        description: The type of token returned.
      expires:
        type: string
        format: date-time
        description: A timestamp indicating when the access token is good until.
    title: GetOAuthTokenResponse
  v1GetRetailPriceRequest:
    type: object
    properties:
      editionId:
        type: string
        title: the id of the tier to get the retail price for, related to the app
      accountId:
        type: string
        title: the id of the account to get the retail price for
      partnerMarket:
        $ref: '#/definitions/v1PartnerMarketContainer'
        title: the partner market combination to get the retail price for
  v1GetRetailPriceResponse:
    type: object
    properties:
      retailPrice:
        $ref: '#/definitions/v1RetailPrice'
        title: The retail price of an application for an account
  v1GetSessionFromTokenRequest:
    type: object
    properties:
      token:
        type: string
        title: The encrypted authorization token
  v1GetSessionFromTokenResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1Session'
        title: The Session associated with the specified token
  v1GetSessionTransferURLRequest:
    type: object
    properties:
      accountId:
        type: string
        description: The Account ID.
    title: GetSessionTransferURLRequest
  v1GetSessionTransferURLResponse:
    type: object
    properties:
      sessionTransferUrl:
        type: string
        description: The session transfer URL to send the user to (which may result in a redirect to a login screen).
    title: GetSessionTransferURLResponse
  v1GetUserRequest:
    type: object
    properties:
      userId:
        type: string
        title: The ID of the user
    title: Request of getting a specified user
  v1GetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1User'
        title: The user
    title: Response of getting a specified user
  v1HoursOfOperationSpan:
    type: object
    properties:
      closes:
        type: string
      dayOfWeek:
        type: array
        items:
          type: string
        title: Use repeated for an array
      description:
        type: string
      opens:
        type: string
  v1Images:
    type: object
    properties:
      logo:
        type: string
      primary:
        type: string
  v1ListActiveAddonsRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id
  v1ListActiveAddonsResponse:
    type: object
    properties:
      addons:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AddonActivation'
        description: The active addons for the specified business on the app.
  v1ListAssociatedUsersRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id
  v1ListAssociatedUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1User'
        title: Users associated with the specified business and application
  v1ListCustomersRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id to retrieve the customers for
      cursor:
        type: string
        title: Cursor should be supplied from the last response or ""
      pageSize:
        type: string
        format: int64
        description: The number of results to retrieve.
      searchTerm:
        type: string
        title: search_term is an arbitrary string to perform full text search across all the customers information
      sortOptions:
        $ref: '#/definitions/v1SortOptions'
        title: sort_options control what fields it can sort on and the sorting direction
      filters:
        $ref: '#/definitions/v1Filters'
        title: filters control what fields it can filter for
  v1ListCustomersResponse:
    type: object
    properties:
      customers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Contact'
        title: List of the customers
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: Total number of customers for account group
  v1OrderFormField:
    type: object
    properties:
      fieldId:
        type: string
        title: ID of the order form field
      fieldValue:
        type: string
        title: User inputted answer to the order form field
    title: Order Form Field information
  v1PartnerMarketContainer:
    type: object
    properties:
      marketId:
        type: string
        title: market_id is a sub group nested under the partner corresponding to partner_id
      partnerId:
        type: string
        title: partner_id is the id of the partner that has the associated retail price for a app
  v1PlatformSettings:
    type: object
    properties:
      partnerName:
        type: string
        title: Partner's name, meant to be used for whitelabeling
      partnerLogoUrl:
        type: string
        title: Partner's logo meant to be used for whitelabeling
      partnerPrimaryBrandingHexColor:
        type: string
        title: Partner's primary brand colour
  v1Point:
    type: object
    properties:
      dateHappened:
        type: string
        format: date-time
        title: Date the value happened
      aggregationKey:
        type: string
        title: Human readable tag that can be used to aggregate otherwise similar values
      intval:
        type: string
        format: int64
      strval:
        type: string
      id:
        type: string
    title: Defines a single point of data
  v1ResolveChangeSpendRequestRequest:
    type: object
    properties:
      changeRequestId:
        type: string
        title: the unique identifier of the spend change request
      accountId:
        type: string
        title: account group id for this request
      activationId:
        type: string
        title: the activation id, which is specific for this change request
      status:
        $ref: '#/definitions/v1ChangeSpendRequestStatus'
        title: the new status of the change spend request, typically approved or rejected
      statusUpdateNote:
        type: string
        title: the updater's note which explains reasoning for their decision
      itemId:
        type: string
        title: field for specifying the add-on id if the change request is for an add-on
    title: Request to resolve a change spend request
  v1RetailPrice:
    type: object
    properties:
      price:
        type: string
        format: int64
        title: the price of the app
      billingFrequency:
        $ref: '#/definitions/FrequenciesFrequency'
        title: the frequency in which the purchaser should be billed for the app
      currency:
        $ref: '#/definitions/CurrenciesCurrency'
        title: the currency in which the purchaser would make payment(s) in
      setupFee:
        type: string
        format: int64
        title: the setup fee in cents
    title: RetailPrice is the price that an app should be sold to a business at
  v1ServiceAvailability:
    type: object
    properties:
      closedStatus:
        type: string
      closedStatusDate:
        type: string
        format: date-time
  v1Session:
    type: object
    properties:
      appId:
        type: string
        title: The App ID from the session information
      issued:
        type: string
        format: date-time
        title: The time that the token was first issued
      expires:
        type: string
        format: date-time
        title: The time that the token is valid until
  v1SortDirection:
    type: string
    enum:
      - Ascending
      - Descending
    default: Ascending
    description: The directions that a result set can be sorted in.
  v1SortField:
    type: string
    enum:
      - Name
      - Created
      - FirstName
      - LastName
    default: Name
    description: The field to sort a result set on.
  v1SortOptions:
    type: object
    properties:
      direction:
        $ref: '#/definitions/v1SortDirection'
        title: A direction to sort results in
      field:
        $ref: '#/definitions/v1SortField'
        title: Field to sort on
    title: Options for controlling the order of query results
  v1SyncAllCustomersRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id to sync customers from
  v1TickComponentUsageRequest:
    type: object
    properties:
      accountId:
        type: string
        title: ID of the account which used the resource
      componentId:
        type: string
        title: ID of the metered component which was used
      quantity:
        type: string
        format: int64
        title: The amount of the resource which was used
      idempotencyKey:
        type: string
        title: |-
          Arbitrary but unique string which identifies this particular usage
          Duplicate submissions with the same key and timestamp will result in a 409 conflict
  v1UpdateCustomerRequest:
    type: object
    properties:
      accountId:
        type: string
        title: The account id to update this customer to
      firstName:
        type: string
        title: The first name of the customer
      lastName:
        type: string
        title: The last name of the customer
      address:
        type: string
        title: The street address of where the customer is
      city:
        type: string
        title: The city where the customer is
      state:
        type: string
        title: The state where the customer is
      country:
        type: string
        title: The country where the customer is
      phone:
        type: array
        items:
          type: string
        title: The phone number of the customer
      email:
        type: array
        items:
          type: string
        title: The email address of the customer
      vendorId:
        type: string
        title: The Vendor specified ID for the customer in the vendor system
      tags:
        type: array
        items:
          type: string
        title: The tags of the customer
      origin:
        type: string
        title: The application ID that created the customer
      permissionToContact:
        type: boolean
        title: This flag is true if the customer has explicitly opted-in to receive communication from the Business
      assignedRepFirstName:
        type: string
        title: The first name of the rep assigned to the customer
      assignedRepLastName:
        type: string
        title: The last name of the rep assigned to the customer
      fieldMask:
        $ref: '#/definitions/v1FieldMask'
        title: Mask for what fields should be updated
  v1UpdateCustomerResponse:
    type: object
    properties:
      customer:
        $ref: '#/definitions/v1Contact'
        title: The updated customer
      conflictingCustomerId:
        type: string
        title: The customer id that conflict with
  v1User:
    type: object
    properties:
      userId:
        type: string
        title: Primary identifier for the user
      firstName:
        type: string
        title: First name of the user
      lastName:
        type: string
        title: Last name of the user
      email:
        type: string
        title: Email of the user
      workPhone:
        type: string
        title: Work phone of the user
      partnerId:
        type: string
        title: The partner ID that the user belongs to
      accountIds:
        type: array
        items:
          type: string
        title: The account IDs that associated with the user
      emailVerified:
        type: boolean
        title: A boolean for whether the email is verified
  v1ValidateOrderFormRequest:
    type: object
    properties:
      appId:
        type: string
        title: AppID
      addonId:
        type: string
        title: AddonID. Empty if not for an addon order form
      field:
        $ref: '#/definitions/v1OrderFormField'
        title: The particular field that kicked off this request
    title: Request to be proxied to the Vendor for order form validation
  v1ValidateOrderFormResponse:
    type: object
    properties:
      invalidReason:
        type: string
        title: Why the field is invalid
    title: |-
      Response of the Vendor stating the validity of the order form field
      If invalid_reason is empty, it means it is valid
