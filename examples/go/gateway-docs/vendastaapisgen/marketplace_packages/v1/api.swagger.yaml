swagger: "2.0"
info:
  title: marketplace_packages/v1/api.proto
  version: version not set
tags:
  - name: MarketplacePackages
consumes:
  - application/json
produces:
  - application/json
paths:
  /marketplace_packages.v1.MarketplacePackages/AddProductToStore:
    post:
      summary: AddProductToStore performs the required actions for a product to be added to a partner store
      operationId: MarketplacePackages_AddProductToStore
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddProductToStoreRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/AreAppsDistributedToPartner:
    post:
      summary: AreAppsDistributedToPartner checks if particular apps are distributed to a partner
      operationId: MarketplacePackages_AreAppsDistributedToPartner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AreAppsDistributedToPartnerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AreAppsDistributedToPartnerRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/BulkCopyPackage:
    post:
      summary: |-
        BulkCopyPackage copies multiple packages to multiple markets for a single partner. The source packages can either be specified by their id.
        or the partner/market they are associated too.
        UNIMPLEMENTED: BulkCopyPackage is not implemented
      operationId: MarketplacePackages_BulkCopyPackage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BulkCopyPackageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1BulkCopyPackageRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/CopyPackage:
    post:
      summary: CopyPackage copies a package to all the markets in the request
      operationId: MarketplacePackages_CopyPackage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CopyPackageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CopyPackageRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/CreatePackage:
    post:
      summary: CreatePackage creates a package based on the package details that is passed into the request.
      operationId: MarketplacePackages_CreatePackage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreatePackageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreatePackageRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/DeletePackage:
    post:
      summary: |-
        DeletePackage deletes a package through a soft delete. The package that is deleted will have a timestamp associated with this action stored on the model.
        When a package is deleted, it is no longer returned in the response any of the RPCs. A mutation operation on a deleted package
        will result in a `NotFound` error code with no operations being performed.
      operationId: MarketplacePackages_DeletePackage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeletePackageRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/DisableAppForPartner:
    post:
      summary: DisableAppForPartner sets the app for the given partner as disabled
      operationId: MarketplacePackages_DisableAppForPartner
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DisableAppForPartnerRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/EnableAppForPartner:
    post:
      summary: EnableAppForPartner sets the app for the given partner as Enabled
      operationId: MarketplacePackages_EnableAppForPartner
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EnableAppForPartnerRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/GetMultiAddons:
    post:
      summary: Get multiple addons by key
      operationId: MarketplacePackages_GetMultiAddons
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiAddonsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiAddonsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/GetMultiAddonsByApp:
    post:
      summary: GetMultiAddonsByApp addons that are marked as approved for a list of app ids
      operationId: MarketplacePackages_GetMultiAddonsByApp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiAddonsByAppResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiAddonsByAppRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/GetMultiIsAppEnabled:
    post:
      summary: GetMultiIsAppEnabled returns whether the provided app is currently enabled by any partner
      operationId: MarketplacePackages_GetMultiIsAppEnabled
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiIsAppEnabledResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiIsAppEnabledRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/GetMultiPackages:
    post:
      summary: Get Package by package/solution ID
      operationId: MarketplacePackages_GetMultiPackages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiPackageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiPackageRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/GetMultiPartnerAppEnablementStatus:
    post:
      summary: GetMultiPartnerAppEnablementStatus gets the all the apps statuses for the given partner ids and app ids
      operationId: MarketplacePackages_GetMultiPartnerAppEnablementStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiPartnerAppEnablementStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiPartnerAppEnablementStatusRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/GetMultiProducts:
    post:
      summary: Get products for a partner by ID
      operationId: MarketplacePackages_GetMultiProducts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiProductsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiProductsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/HideArchivedPackage:
    post:
      summary: |-
        Hides an archived package from list views. Package must first be archived before it can be hidden.
        A hidden package can still be retrieved via `GetMultiPackages` with a status of `ARCHIVED`.
      operationId: MarketplacePackages_HideArchivedPackage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HideArchivedPackageRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/IsAppDistributedToPartner:
    post:
      summary: |-
        IsAppDistributedToPartner checks if a particular app is distributed to a partner
        DEPRECATED: This RPC has been deprecated and should no longer be used
      operationId: MarketplacePackages_IsAppDistributedToPartner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IsAppDistributedToPartnerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IsAppDistributedToPartnerRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListActivatableApps:
    post:
      summary: ListActivatable returns a list of activatable items based on distribution controls
      operationId: MarketplacePackages_ListActivatableApps
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListActivatableAppsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListActivatableAppsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListAddons:
    post:
      summary: |-
        List addons for a partner
        DEPRECATED: ListAddons is deprecated and should no longer be used
      operationId: MarketplacePackages_ListAddons
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAddonsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAddonsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListAppDistributionStatus:
    post:
      summary: List App Distribution Status returns a list of app identifiers with their distribution status
      operationId: MarketplacePackages_ListAppDistributionStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAppDistributionStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAppDistributionStatusRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListAvailableApps:
    post:
      summary: |-
        List Available Apps returns a list of only apps summaries (not addons) with the discoverable flag enabled on them for the given partner
        Deprecated: ListAvailableApps is deprecated. Use ListDiscoverableApps instead.
      operationId: MarketplacePackages_ListAvailableApps
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAvailableAppsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAvailableAppsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListDiscoverableAppSuggestions:
    post:
      summary: List Discoverable Apps suggestions returns a list of suggestions of app names that can be found
      operationId: MarketplacePackages_ListDiscoverableAppSuggestions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDiscoverableAppSuggestionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDiscoverableAppSuggestionsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListDiscoverableApps:
    post:
      summary: List Discoverable Apps returns a list of apps summaries that correspond to a list of apps with the discoverable flag enabled on them
      operationId: MarketplacePackages_ListDiscoverableApps
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDiscoverableAppsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDiscoverableAppsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListDistributedAppIds:
    post:
      summary: ListDistributedApps returns a list of distributed app ids the Partner has accesss to
      operationId: MarketplacePackages_ListDistributedAppIds
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDistributedAppIdsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDistributedAppIdsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListPackageIDsForProduct:
    post:
      summary: AddProductToStore performs the required actions for a product to be added to a partner store
      operationId: MarketplacePackages_ListPackageIDsForProduct
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPackageIDsForProductResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListPackageIDsForProductRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListPackages:
    post:
      summary: List packages for a partner market
      operationId: MarketplacePackages_ListPackages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPackagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListPackagesRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListPartnerAppEnablementStatus:
    post:
      summary: ListPartnerAppEnablementStatus returns all the app status for a partner id
      operationId: MarketplacePackages_ListPartnerAppEnablementStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPartnerAppEnablementStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListPartnerAppEnablementStatusRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/ListProducts:
    post:
      summary: List products for a partner
      operationId: MarketplacePackages_ListProducts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListProductsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListProductsRequest'
      tags:
        - MarketplacePackages
  /marketplace_packages.v1.MarketplacePackages/UpdatePackage:
    post:
      summary: UpdatePackage updates a package by mutating it based on a list of operations provided in the request.
      operationId: MarketplacePackages_UpdatePackage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdatePackageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdatePackageRequest'
      tags:
        - MarketplacePackages
definitions:
  AppEnablementStatusesAppEnablementStatus:
    type: string
    enum:
      - NOT_SPECIFIED
      - ENABLED
      - DISABLED
    default: NOT_SPECIFIED
  AreAppsDistributedToPartnerResponseAppDistributedContainer:
    type: object
    properties:
      appId:
        type: string
        title: The id of the application
      isDistributed:
        type: boolean
        title: |-
          Reflects the distributed boolean on the model. This is used to decide whether the app is available in Partner
          Center, either for the Partner who made it or multiple partners. If it's turned off then it's not available
          in Partner Center
      isSolelyDistributedToPartner:
        type: boolean
        title: |-
          If the app is marked as distributed but the partner making the request is the only one in the white list,
          then this will return true. If multiple partners are whitelisted it will return false. We want to communicate
          to vendors that their app is distributed only when it's available for resale by other partners
    title: Is this one app distributed?
  BulkCopyPackageRequestPackageSource:
    type: object
    properties:
      packageIdsContainer:
        $ref: '#/definitions/v1PackageIdContainer'
        description: A wrapper for package ids to be compatible with proto3 oneof clauses.
      scope:
        $ref: '#/definitions/v1PackageScope'
    description: Definition of where the packages to copy originate from.
  CurrenciesCurrency:
    type: string
    enum:
      - USD
      - AUD
      - BRL
      - CAD
      - CHF
      - CNY
      - CZK
      - EUR
      - GBP
      - HKD
      - INR
      - JPY
      - KHR
      - KRW
      - MXN
      - NOK
      - NZD
      - RUB
      - SEK
      - SGD
      - TRY
      - ZAR
      - DZD
      - AWG
      - FJD
      - KYD
    default: USD
  FrequenciesFrequency:
    type: string
    enum:
      - MONTHLY
      - DAILY
      - ONCE
      - YEARLY
      - WEEKLY
      - OTHER
    default: MONTHLY
  GetMultiAddonsByAppResponseAddonListContainer:
    type: object
    properties:
      addons:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Addon'
    title: A container for a list of addons
  GetMultiIsAppEnabledResponseAppEnablement:
    type: object
    properties:
      appId:
        type: string
      enabled:
        type: boolean
  GetMultiPackageResponsePackageContainer:
    type: object
    properties:
      package:
        $ref: '#/definitions/v1Package'
  GetMultiProductsResponseProductContainer:
    type: object
    properties:
      product:
        $ref: '#/definitions/v1Product'
  ListAppDistributionStatusResponseAppDistributionStatus:
    type: object
    properties:
      appId:
        type: string
        title: app id
      name:
        type: string
        title: name of the app
      whitelist:
        type: array
        items:
          type: string
        title: a white list containing partner ids that can access the app
      blacklist:
        type: array
        items:
          type: string
        title: a black list containing partner ids that cannot access the app
      distributable:
        type: boolean
        title: if true, an app is accessable by all partners that are not in the black list. If false, the app is accessable only by partners in the white list
  ListDiscoverableAppSuggestionsResponseSuggestion:
    type: object
    properties:
      appName:
        type: string
  ListDistributedAppIdsRequestListDistributedAppIdsRequestFilters:
    type: object
    properties:
      appTypes:
        type: array
        items:
          $ref: '#/definitions/v1AppType'
        description: app_types is a list of app types to filter to. Including nothing means to not filter by app types.
  LmiCategories:
    type: string
    enum:
      - NOT_SET
      - WEBSITE
      - CONTENT_AND_EXPERIENCE
      - LISTINGS
      - REPUTATION
      - SEO
      - SOCIAL
      - ADVERTISING
    default: NOT_SET
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1ActivatableApp:
    type: object
    properties:
      appId:
        type: string
        title: id of the app
      name:
        type: string
        title: name of the app
      headerImage:
        type: string
        title: header image from app general settings
      tagline:
        type: string
        title: tagline from app general settings
      icon:
        type: string
        title: icon from app general settings
      countryRestrictions:
        $ref: '#/definitions/v1PermissionLists'
        title: countries this app is restricted for
      allowMultipleActivations:
        type: boolean
        title: whether or not the app allows multiple activations
      childActivatableApps:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ActivatableApp'
        title: a list of child activatable apps that depend on this app being enabled and distributed
    title: An app that is available to be activated
  v1AddProductToStoreRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
      marketId:
        type: string
        title: the id of the market whose store the product is being added to
      appId:
        type: string
        title: the id of the app
      editionId:
        type: string
        title: edition id of the retail price being set
      retailPrice:
        $ref: '#/definitions/v1RetailPrice'
        title: retail price to be set for the product
      publishImmediately:
        type: boolean
        title: flag indicating whether to publish to store immediately or not
  v1Addon:
    type: object
    properties:
      addonId:
        type: string
        title: The id of the addon, unique within the scope of the app the addon is for
      appId:
        type: string
        title: The id of the app which the addon is for
      tagline:
        type: string
        title: A tagline for an addon
      title:
        type: string
        title: The title of the addon
      approved:
        type: boolean
        title: Is the addon approved to be shown publicly within marketplace
      icon:
        type: string
        title: Icon url for the addon
      bannerImage:
        type: string
        title: The banner image of an addon
      endUserMarketing:
        $ref: '#/definitions/v1MarketingInformation'
        title: DEPRECATED
      serviceModel:
        type: array
        items:
          type: string
        title: Addon service_model
      discoverable:
        type: boolean
        title: Is the addon discoverable within marketplace
      screenshots:
        type: array
        items:
          type: string
        title: A list of screenshots for an addon
      multipleActivations:
        type: boolean
        title: Can the addon support multiple activations
      usesOrderForm:
        type: boolean
        title: Indicates if the addon uses an order form during activation
      billingFrequency:
        type: string
        title: Addon billing_frequency
      resellerMarketing:
        $ref: '#/definitions/v1MarketingInformation'
        title: DEPRECATED
      created:
        type: string
        format: date-time
        title: A timestamp of when the addon was created
      updated:
        type: string
        format: date-time
        title: A timestamp of when the addon was last updated
      orderForm:
        $ref: '#/definitions/v1OrderForm'
        title: Order form fields
      price:
        type: string
        format: int64
        title: The wholesale price of the addon, in cents, the currency is inherited from the base product
      restrictions:
        $ref: '#/definitions/v1Restrictions'
        title: List of restrictions for the addon
      activationRequiresApproval:
        type: boolean
        title: Does the addon require vendor approval to be activated
      billingId:
        type: string
        title: The sku for the Add-On with billing
      currency:
        type: string
        title: currency of the addon
      setupFee:
        type: string
        format: int64
        title: The setup fee for the addon
      suspended:
        type: string
        format: date-time
        title: A timestamp of when the addon was suspended
      usesCustomPricing:
        type: boolean
        title: Indicates whether or not the addon supports custom pricing
    description: |-
      Addon is a item that can be purchased to enable additional features within a marketplace app.
      These can be either Consumables, Non-Consumables or Subscriptions.
  v1AddonKey:
    type: object
    properties:
      appId:
        type: string
        title: The parent app for the addon
      addonId:
        type: string
        title: The addon id
      quantity:
        type: string
        format: int64
        title: The quantity of the addon in the package
  v1AddonOptions:
    type: object
    properties:
      groupAddonsWithParent:
        type: boolean
        title: flag used to determine if addons will be grouped with parent in response
      displayNonDiscoverableAddons:
        type: boolean
        title: flag used to determine if we want non-discoverable addons in response
  v1AppData:
    type: object
    properties:
      scope:
        type: string
        title: 'scope of the data, ie: /VUNI/default-market'
      kindValues:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1KindValues'
        title: List of the data for the app
    description: product/app data a.k.a. tags.
  v1AppSummary:
    type: object
    properties:
      appId:
        type: string
        title: The id of the app
      name:
        type: string
        title: The name of the app
      icon:
        type: string
        title: Icon for the app
      headerImage:
        type: string
        title: A larger image to display marketing content
      tagline:
        type: string
        title: 'Product information: tagline'
      enabled:
        type: boolean
        title: Whether or not the partner has enabled the discoverable app
      billingId:
        type: string
        title: The billing id for the discoverable item
      vendorWholesale:
        $ref: '#/definitions/v1WholesalePrice'
        title: wholesale vendor price
      type:
        type: string
        title: The type of app the summary is being provided for
      addons:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AppSummary'
        title: a list of the available addons for this app
      vendorRetailPrice:
        $ref: '#/definitions/v1VendorRetailPrice'
        title: vendor retail price
      wholesalePricingFromBilling:
        $ref: '#/definitions/v1BillingWholesalePricing'
        description: wholesale pricing from billing. comes straight from billing.
      wholesalePrice:
        $ref: '#/definitions/v1ProductWholesalePrice'
        description: resolved wholesale price. edition and stairstep pricing is considered.
      setupFee:
        type: string
        format: int64
        description: 'setup fee set on the marketplace app. Value is # of cents.'
    title: AppSummary represents a subsection of the marketplace app fields
  v1AppType:
    type: string
    enum:
      - NOT_SPECIFIED
      - APP
      - ADDON
      - CUSTOM_PRODUCT
    default: NOT_SPECIFIED
    title: AppType refers to the type of app (one of app, addon, custom product)
  v1AreAppsDistributedToPartnerRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The ID of the partner
      appIds:
        type: array
        items:
          type: string
        title: The app id to check
  v1AreAppsDistributedToPartnerResponse:
    type: object
    properties:
      areAppsDistributed:
        type: array
        items:
          type: object
          $ref: '#/definitions/AreAppsDistributedToPartnerResponseAppDistributedContainer'
        title: Whether or not the apps are distributed to the partner on the request
    title: |-
      Returns each app's distribution settings, with is_solely_distributed_to_partner
      true if the app is not distributed to anyone but the partner making the request
  v1BillingWholesalePricing:
    type: object
    properties:
      pricingType:
        $ref: '#/definitions/v1ProductPricingType'
      currency:
        type: string
      frequency:
        type: string
      pricingRules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ProductPricingRule'
      commitment:
        $ref: '#/definitions/v1Commitment'
      isStartingPrice:
        type: boolean
  v1BulkCopyPackageRequest:
    type: object
    properties:
      source:
        $ref: '#/definitions/BulkCopyPackageRequestPackageSource'
        description: The source definition of the packages to copy.
      target:
        $ref: '#/definitions/v1PackageScope'
        description: The destination to copy the packages to.
  v1BulkCopyPackageResponse:
    type: object
  v1Commitment:
    type: object
    properties:
      initial:
        type: string
        format: int64
      recurring:
        type: string
        format: int64
  v1ContactFormAction:
    type: object
    title: object for Contact Form for 'Get It now' action
  v1CopyPackageRequest:
    type: object
    properties:
      packageId:
        type: string
        title: the id of the package to copy
      name:
        type: string
        title: name override of the package
      pricing:
        $ref: '#/definitions/v1Pricing'
        title: price override of the package
      publish:
        type: boolean
        title: Whether or not the copied package should be published or not
      packageDestination:
        $ref: '#/definitions/v1PackageScope'
        title: The destination to copy the package to
  v1CopyPackageResponse:
    type: object
    properties:
      failedScope:
        $ref: '#/definitions/v1PackageScope'
        title: the destination that the package could not be copied to
  v1Cost:
    type: object
    properties:
      billingFrequency:
        type: string
        title: Billing Frequency
      currency:
        type: string
        title: Currency
      price:
        type: string
        format: int64
        title: Price in cents
    title: Vendor Cost of the App
  v1CreatePackageRequest:
    type: object
    properties:
      partnerId:
        type: string
        description: The partner id that the package is associated to.
      marketId:
        type: string
        description: The market id that the market is associated to.
      name:
        type: string
        description: The name of package to create.
      tagline:
        type: string
        description: The tagline is suppose to be a snappy sentence respresents the package.
      iconUrl:
        type: string
        description: The url for the icon of the package.
      headerImageUrl:
        type: string
        description: The url for the header image.
      content:
        type: string
        description: The content of the package. This may also be known as a desciption.
      pricing:
        $ref: '#/definitions/v1Pricing'
        description: The price of the package.
      hideProductDetails:
        type: boolean
        description: Setting this flag will hide the product details when the package is displayed.
      hideProductIconsAndNames:
        type: boolean
        description: Setting this flag will hide the product icons and names when the package is displayed.
      publishImmediately:
        type: boolean
        description: Setting this flag will immediately publish the application.
      lineItems:
        $ref: '#/definitions/v1LineItems'
        description: The Items that make up the price of the package.
      marketAction:
        $ref: '#/definitions/v1MarketAction'
        title: Market action config object
      usesBillingPricing:
        type: boolean
        title: |-
          Flag to mention if the package price is coming from the package itself (usesBillingPricing = false) or if the price comes from billing (usesBillingPricing = true)
          This flag is deprecated as every price should be in billing now. [MT-1190]
      pricingDisplayOption:
        $ref: '#/definitions/v1PricingDisplayOption'
        title: Options for displaying the price or a related message such as Contact Sales
  v1CreatePackageResponse:
    type: object
    properties:
      package:
        $ref: '#/definitions/v1Package'
        title: The package that was created
  v1DefaultAction:
    type: object
    title: object for default legacy action
  v1DeletePackageRequest:
    type: object
    properties:
      packageId:
        type: string
  v1DisableAppForPartnerRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
      appId:
        type: string
        title: the id of the app
      origin:
        type: string
        title: the origin for the request
  v1DiscoverProductSortOrderType:
    type: string
    enum:
      - SORT_ORDER_NOT_SPECIFIED
      - SORT_ORDER_RELEASED
      - SORT_ORDER_TRENDING
      - SORT_ORDER_TOP_SELLING
    default: SORT_ORDER_NOT_SPECIFIED
    title: Discover product's sort order types
  v1DiscoverableAppParent:
    type: object
    properties:
      appId:
        type: string
        title: The id of the app
      name:
        type: string
        title: The name of the app
  v1DiscoverableAppSummary:
    type: object
    properties:
      appId:
        type: string
        title: The id of the app
      name:
        type: string
        title: The name of the app
      icon:
        type: string
        title: Icon for the app
      headerImage:
        type: string
        title: A larger image to display marketing content
      tagline:
        type: string
        title: 'Product information: tagline'
      price:
        type: integer
        format: int32
        title: The price of the app
      billingFrequency:
        $ref: '#/definitions/FrequenciesFrequency'
        title: The frequency of the app will be billed for
      currency:
        $ref: '#/definitions/CurrenciesCurrency'
        title: The currency the app will be billed in
      enabled:
        type: boolean
        title: Whether or not the partner has enabled the discoverable app
      lmiCategories:
        type: array
        items:
          $ref: '#/definitions/LmiCategories'
        title: A list of Local marketing index category of the app
      billingId:
        type: string
        title: The billing id for the discoverable item
      type:
        type: string
        title: The type of app the summary is being provided for
      created:
        type: string
        format: date-time
        title: A timestamp of when the app was created
      cost:
        $ref: '#/definitions/v1Cost'
        title: Cost to the vendor for provisioning of the App
      appData:
        $ref: '#/definitions/v1AppData'
        description: additional data of the app/product.
      keySellingPoints:
        type: array
        items:
          type: string
        title: A list of key selling points marketing info of the app
      suggestedRetailPrice:
        $ref: '#/definitions/v1VendorRetailPrice'
        title: suggested retail price for the app
      usesCustomPricing:
        type: boolean
        description: Whether or not this App's pricing model uses custom pricing. If so, minimum spend amount ("starting at" price) is captured by the `price` field.
      parent:
        $ref: '#/definitions/v1DiscoverableAppParent'
        title: In the event of a child app show the parents app id and name
    title: DiscoverableAppSummary represents a subsection of the marketplace app fields
  v1EnableAppForPartnerRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
      appId:
        type: string
        title: the id of the app
      origin:
        type: string
        title: the origin for the request
  v1ExternalUrlAction:
    type: object
    properties:
      url:
        type: string
        title: url string for external navigation
  v1FrequentlyAskedQuestions:
    type: object
    properties:
      question:
        type: string
        title: Question part of the faq
      answer:
        type: string
        title: Answer part of the faq
  v1GetMultiAddonsByAppRequest:
    type: object
    properties:
      appIds:
        type: array
        items:
          type: string
        title: the app_ids to fetch all the child addons for
      partnerId:
        type: string
        title: The id of the partner
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
  v1GetMultiAddonsByAppResponse:
    type: object
    properties:
      addonMap:
        type: object
        additionalProperties:
          $ref: '#/definitions/GetMultiAddonsByAppResponseAddonListContainer'
        title: A map of appIDs with their child apps
  v1GetMultiAddonsRequest:
    type: object
    properties:
      addonKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AddonKey'
        title: list of addon key which contains a appId and addonId
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
  v1GetMultiAddonsResponse:
    type: object
    properties:
      addons:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Addon'
        title: list of addons for above data
  v1GetMultiIsAppEnabledRequest:
    type: object
    properties:
      appIds:
        type: array
        items:
          type: string
        title: List of appIds to check whether they are enabled by any partner
  v1GetMultiIsAppEnabledResponse:
    type: object
    properties:
      appEnablement:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetMultiIsAppEnabledResponseAppEnablement'
        title: Pairing of app_id and whether it is enabled
  v1GetMultiPackageRequest:
    type: object
    properties:
      packageIds:
        type: array
        items:
          type: string
        title: Package ID to lookup by
  v1GetMultiPackageResponse:
    type: object
    properties:
      packageContainers:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetMultiPackageResponsePackageContainer'
        title: Packages found in lookup
  v1GetMultiPartnerAppEnablementStatusRequest:
    type: object
    properties:
      partnerAppRequest:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PartnerAppRequest'
        title: a list of partner id app id combinations to get the statuses for
  v1GetMultiPartnerAppEnablementStatusResponse:
    type: object
    properties:
      partnerAppResponse:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PartnerAppResponse'
        title: a list of partner id,app id and status combinations
  v1GetMultiProductsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The ID of the partner
      productIds:
        type: array
        items:
          type: string
        title: The IDs of the products to get
      marketId:
        type: string
        title: The MarketID to apply white labeling for, if non is provided we will white label at a partner level
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: Allows filtering what fields are returned on the response
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
  v1GetMultiProductsResponse:
    type: object
    properties:
      products:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetMultiProductsResponseProductContainer'
        title: The list of requested Products
  v1HideArchivedPackageRequest:
    type: object
    properties:
      packageId:
        type: string
        title: ID of the archived package to hide
  v1IncludedCommonFormFields:
    type: object
    properties:
      businessName:
        type: boolean
      businessAddress:
        type: boolean
      businessPhoneNumber:
        type: boolean
      businessAccountGroupId:
        type: boolean
      salespersonName:
        type: boolean
      salespersonPhoneNumber:
        type: boolean
      salespersonEmail:
        type: boolean
      contactName:
        type: boolean
      contactPhoneNumber:
        type: boolean
      contactEmail:
        type: boolean
    title: Common form fields among apps, can be autofilled
  v1IsAppDistributedToPartnerRequest:
    type: object
    properties:
      appId:
        type: string
        title: The app id to check
      partnerId:
        type: string
        title: The ID of the partner
    title: 'DEPRECATED: This response is associated with a deprecated RPC'
  v1IsAppDistributedToPartnerResponse:
    type: object
    properties:
      isDistributed:
        type: boolean
        title: Whether or not the app is distributed to the partner on the request
    title: 'DEPRECATED: This response is associated with a deprecated RPC'
  v1KindValues:
    type: object
    properties:
      kind:
        type: string
        title: 'data kind, ie: /tag/lmi'
      values:
        type: array
        items:
          type: string
        title: list of values for the kind
    title: app data kind and values list pair
  v1LineItem:
    type: object
    properties:
      id:
        type: string
        description: The id of the line item. This has to be passed if the `line_item_type` field is set to `LineItemType.APP`.
      parentId:
        type: string
      quantity:
        type: string
        format: int64
        title: The quantity of the line item in the package. This theoretically does not have a limit
      editionId:
        type: string
        title: The id of the Edition for the line item
  v1LineItems:
    type: object
    properties:
      lineItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LineItem'
  v1ListActivatableAppsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner id to look search for activatable apps on
      pageSize:
        type: integer
        format: int32
        title: Number of activatable apps to return
      cursor:
        type: string
        title: Page of results that we are on
      marketId:
        type: string
        title: Market ID to make sure apps can be scoped and whitelabeled by market
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
  v1ListActivatableAppsResponse:
    type: object
    properties:
      activatableApps:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ActivatableApp'
        title: A list of apps that are both enabled and distributed for a partner
  v1ListAddonsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The ID of the partner
      appIds:
        type: array
        items:
          type: string
        title: The IDs of the Apps
      pageSize:
        type: integer
        format: int32
        title: Number of addons returned
      cursor:
        type: string
        title: Page of results that we are on
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
    title: |-
      Request all products for partner id
      DEPRECATED: This request is associated with a deprecated RPC
  v1ListAddonsResponse:
    type: object
    properties:
      addons:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Addon'
        title: The Addons for a partner
      nextCursor:
        type: string
        title: Page of results that we are on
      hasMore:
        type: boolean
        title: Is there more pages?
    title: 'DEPRECATED: This response is associated with a deprecated RPC'
  v1ListAppDistributionStatusRequest:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        title: Number of statuses to return
      cursor:
        type: string
        title: Page of results that we are on
  v1ListAppDistributionStatusResponse:
    type: object
    properties:
      appDistributionStatuses:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListAppDistributionStatusResponseAppDistributionStatus'
  v1ListAvailableAppsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: PartnerID represents the partner to get the discoverable app summaries for
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
      tagFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Tag'
        title: if provided, results will be filtered by the tags specified
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
      searchTerm:
        type: string
        title: string for searching on product name
  v1ListAvailableAppsResponse:
    type: object
    properties:
      availableAppsSummaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AppSummary'
        title: list of the apps matching the request
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1ListDiscoverableAppSuggestionsRequest:
    type: object
    properties:
      searchTerm:
        type: string
        title: string to search Discoverable Apps with
      partnerId:
        type: string
        title: PartnerID represents the partner to get the discoverable app summaries for
      pageSize:
        type: integer
        format: int32
        title: maximum amount of results to return
  v1ListDiscoverableAppSuggestionsResponse:
    type: object
    properties:
      suggestions:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListDiscoverableAppSuggestionsResponseSuggestion'
        title: List of app "suggestions", object containing a few app fields
  v1ListDiscoverableAppsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: PartnerID represents the partner to get the discoverable app summaries for
      pageSize:
        type: integer
        format: int32
        title: Number of discoverable app summaries to return
      cursor:
        type: string
        title: Current position to fetch the summaries from
      marketId:
        type: string
        title: The MarketID context the partner user is operating in
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
      tagFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Tag'
        title: if provided, results will be filtered by the tags specified
      searchTerm:
        type: string
        title: string used to filter apps by
      sortOrder:
        $ref: '#/definitions/v1DiscoverProductSortOrderType'
        title: Sort order field would be used to define which specific sorted list to return
      addonOptions:
        $ref: '#/definitions/v1AddonOptions'
        title: Options used to manipulate how addons appear in the results
  v1ListDiscoverableAppsResponse:
    type: object
    properties:
      discoverableAppSummary:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DiscoverableAppSummary'
      nextCursor:
        type: string
        title: Page of results that we are on
      hasMore:
        type: boolean
        title: Is there more pages?
      totalResults:
        type: string
        format: int64
        title: The total results that match the query
  v1ListDistributedAppIdsRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      filters:
        $ref: '#/definitions/ListDistributedAppIdsRequestListDistributedAppIdsRequestFilters'
  v1ListDistributedAppIdsResponse:
    type: object
    properties:
      appIds:
        type: array
        items:
          type: string
  v1ListPackageIDsForProductRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
      marketId:
        type: string
        title: the id of the market
      appId:
        type: string
        title: the id of the app
      editionId:
        type: string
        title: edition id of the app
  v1ListPackageIDsForProductResponse:
    type: object
    properties:
      packageIds:
        type: array
        items:
          type: string
        title: List of the package ids
  v1ListPackagesRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The ID of the partner who we are getting packages for
      marketId:
        type: string
        title: The ID of the market we are getting the package for
      lmiCategory:
        $ref: '#/definitions/LmiCategories'
        title: LMI Category that this package belongs to
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1StatusesStatus'
        title: List of the statuses of the products in the package
      sort:
        type: boolean
        description: |-
          Use partner configured custom order
          Deprecated: results are always returned in store order.
      pageSize:
        type: integer
        format: int32
        title: Number of packages returned
      cursor:
        type: string
        title: Page of results that we are on
      includeTotalResults:
        type: boolean
        title: Whether or not to include the total results in the response
      filterTerm:
        type: string
        description: |-
          filter_term is used as a pattern to filter applications against package names and ids.
          If the filter term isn't specified, no filtering is performed.
    title: Request all packages matching provided values
  v1ListPackagesResponse:
    type: object
    properties:
      packages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Package'
        title: List of the packages that are available
      nextCursor:
        type: string
        title: Page of results that we are on
      hasMore:
        type: boolean
        title: Are there more pages?
      totalResults:
        type: string
        format: int64
        title: The total results of the query
  v1ListPartnerAppEnablementStatusRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
  v1ListPartnerAppEnablementStatusResponse:
    type: object
    properties:
      partnerAppResponse:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PartnerAppResponse'
        title: a list of partner id,app id and status combinations
  v1ListProductFilter:
    type: object
    properties:
      approved:
        type: boolean
        title: only return approved Products, used to filter out products that have lost approval
      state:
        $ref: '#/definitions/v1StateFilterOptions'
        description: The app state to be included in the returned results. Will default to Published (filtering out those in Draft).
    description: Filters for the list products end point.
  v1ListProductsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The ID of the partner
      pageSize:
        type: integer
        format: int32
        title: Number of products returned
      cursor:
        type: string
        title: Page of results that we are on
      marketId:
        type: string
        title: Market ID for whitelabeling
      filters:
        $ref: '#/definitions/v1ListProductFilter'
        title: filters
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: Allows filtering what fields are returned on the response
      whitelabelOverrideKey:
        type: string
        title: Override the current whitelabel configuration
    title: Request all products for partner id
  v1ListProductsResponse:
    type: object
    properties:
      products:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Product'
        title: The Products for a partner
      nextCursor:
        type: string
        title: Page of results that we are on
      hasMore:
        type: boolean
        title: Is there more pages?
  v1MarketAction:
    type: object
    properties:
      default:
        $ref: '#/definitions/v1DefaultAction'
        title: object for default action for legacy functionality
      externalUrl:
        $ref: '#/definitions/v1ExternalUrlAction'
        title: The URL object if "Get It Now" is to navigate to an external URL
      contactForm:
        $ref: '#/definitions/v1ContactFormAction'
        title: object for the contact form behavior of "Get It Now" - the default option in the frontend
      orderForm:
        $ref: '#/definitions/v1OrderFormAction'
        title: object for the oder form behaviour of "Get It Now"
  v1MarketingInformation:
    type: object
    properties:
      description:
        type: string
        title: 'Reseller marketing information: description'
      keySellingPoints:
        type: array
        items:
          type: string
        title: 'Reseller marketing information: key selling points'
      faqs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FrequentlyAskedQuestions'
        title: 'Reseller marketing information: faqs'
      files:
        type: array
        items:
          type: string
        title: 'Reseller marketing information: pdf upload'
    title: Marketing information about the addon
  v1OrderForm:
    type: object
    properties:
      orderForm:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OrderFormField'
        title: 'Order form: fields in the order form'
      commonForm:
        $ref: '#/definitions/v1IncludedCommonFormFields'
        title: 'Order form: common form fields'
      activationMessage:
        type: string
        title: 'Order form: message shown to users upon activating the app'
      separateOrderForms:
        type: boolean
        title: 'Order form: should a multi-activatable app/addon use a separate order form for each activation'
    title: Order form fields
  v1OrderFormAction:
    type: object
    title: object for Order Form for 'Get It Now' action
  v1OrderFormField:
    type: object
    properties:
      label:
        type: string
      id:
        type: string
      type:
        type: string
      options:
        type: array
        items:
          type: string
      description:
        type: string
      required:
        type: boolean
      prefix:
        type: string
        title: For textbox fields, this string will be displayed in front of the textbox
      suffix:
        type: string
        title: For textbox fields, this string will be displayed behind the textbox
      regexValidator:
        type: string
        title: A regex string used to validate a fields answer
      regexErrorMessage:
        type: string
        title: The error message displayed if the regex_validator does not match the answer
    title: Field asking user for information when they try to activate the app
  v1Package:
    type: object
    properties:
      created:
        type: string
        format: date-time
        title: Created time
      updated:
        type: string
        format: date-time
        title: Updated time
      archived:
        type: string
        format: date-time
        title: Archived time
      updatedBy:
        type: string
        title: User that last updated the package
      packageId:
        type: string
        title: Unique id for the package
      partnerId:
        type: string
        title: Partner Id for package
      marketId:
        type: string
        title: Market Id for the package
      name:
        type: string
        title: Package name
      icon:
        type: string
        title: Icon for the package
      status:
        $ref: '#/definitions/v1StatusesStatus'
        title: Status for the package
      headerImageUrl:
        type: string
        title: URL for the header image
      tagline:
        type: string
        title: The slogan for the package
      content:
        type: string
        title: What is in the package
      products:
        type: array
        items:
          type: string
        title: |-
          deprecated: use line items field instead
          Product ids for a package
      hideProductDetails:
        type: boolean
        title: Hide details of the products in the package
      hideProductIconsAndNames:
        type: boolean
        title: Hide product icons and names
      pricing:
        $ref: '#/definitions/v1Pricing'
        title: Pricing of the package
      normalizedAnnualPrice:
        type: string
        format: int64
        title: Price for the year
      addonKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AddonKey'
        title: |-
          deprecated: use line items field instead
          Addon ids for a package
      productOrder:
        type: array
        items:
          type: string
        title: |-
          deprecated: use line items field instead
          Specifies the order of the products / addons in a package. Either the app id, or the addon id
      lineItems:
        $ref: '#/definitions/v1LineItems'
        description: A Order List of the Line items that a package contains.
      marketAction:
        $ref: '#/definitions/v1MarketAction'
        title: get it now configuration object
      usesBillingPricing:
        type: boolean
        title: |-
          Flag to mention if the package price is coming from the package itself (usesBillingPricing = false) or if the price comes from billing (usesBillingPricing = true)
          This flag is deprecated as every price should be in billing now. [MT-1190]
      pricingDisplayOption:
        $ref: '#/definitions/v1PricingDisplayOption'
        title: Options for displaying the price or a related message such as Contact Sales
  v1PackageIdContainer:
    type: object
    properties:
      packageIds:
        type: array
        items:
          type: string
  v1PackageScope:
    type: object
    properties:
      partnerId:
        type: string
      marketIds:
        type: array
        items:
          type: string
    title: the scope to copy the packages to
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
    title: To provide options for the paged request
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: Total results found by the operation
    title: Contains metadata about the paged response
  v1PartnerAppRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
      appId:
        type: string
        title: the id of the app
  v1PartnerAppResponse:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner
      appId:
        type: string
        title: the id of the app
      status:
        $ref: '#/definitions/AppEnablementStatusesAppEnablementStatus'
        title: the status of the app
      updateEvents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UpdateEvent'
        title: historical updates to the app enablement status
  v1PermissionLists:
    type: object
    properties:
      whitelist:
        type: array
        items:
          type: string
      blacklist:
        type: array
        items:
          type: string
    title: A white and black list used for defining restrictions
  v1Price:
    type: object
    properties:
      price:
        type: integer
        format: int32
        title: Price of the product
      frequency:
        $ref: '#/definitions/FrequenciesFrequency'
        title: Billing frequency of the product
      isStartingPrice:
        type: boolean
        description: |-
          is_starting_price denotes whether there are potential extra charges on top of the listed price
          e.g. whether there are in-product-purchases, tiers,
          or metered components billed in addition to the listed amount.
      setupFee:
        type: integer
        format: int32
        title: additional setup fee for this price
  v1Pricing:
    type: object
    properties:
      currency:
        $ref: '#/definitions/CurrenciesCurrency'
        title: '[DEPRECATED] Currency of the pricing'
      prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Price'
        title: '[DEPRECATED] Prices of the package'
      price:
        $ref: '#/definitions/v1Price'
        title: Price of the package
  v1PricingDisplayOption:
    type: string
    enum:
      - PRICING_DISPLAY_OPTION_NOT_SPECIFIED
      - PRICING_DISPLAY_OPTION_CONTACT_SALES
      - PRICING_DISPLAY_OPTION_STARTING_AT
    default: PRICING_DISPLAY_OPTION_NOT_SPECIFIED
    title: |-
      - PRICING_DISPLAY_OPTION_NOT_SPECIFIED: No option specified so price will be displayed normally
       - PRICING_DISPLAY_OPTION_CONTACT_SALES: Display Contact Sales
       - PRICING_DISPLAY_OPTION_STARTING_AT: Display Starting at price
  v1Product:
    type: object
    properties:
      productId:
        type: string
        title: ID of the product
      partnerId:
        type: string
        title: ID of the partner
      name:
        type: string
        title: Name of the product
      tagline:
        type: string
        title: The slogan for the package
      description:
        type: string
        title: Description of the product
      keySellingPoints:
        type: array
        items:
          type: string
        title: Repersentation of the values of the product
      iconUrl:
        type: string
        title: Icon url
      headerImageUrl:
        type: string
        title: Header image url
      screenshotUrls:
        type: array
        items:
          type: string
        title: Screen shot url
      pdfUploadUrls:
        type: array
        items:
          type: string
        title: PDF url
      currency:
        $ref: '#/definitions/CurrenciesCurrency'
        title: Currency for the product to be sold in
      wholesalePrice:
        type: string
        title: Whole sale price of the product
      recommendedSellPrice:
        type: string
        title: Recommended selling price of the product
      billingFrequency:
        type: string
        title: How often it is billed
      serviceModel:
        type: array
        items:
          $ref: '#/definitions/v1ServiceModelType'
        title: DIY, DIFM. DIWM, etc
      category:
        type: string
        title: Category for the product
      lmiCategories:
        type: array
        items:
          $ref: '#/definitions/LmiCategories'
        title: LMI categories this product helps solve
      origin:
        type: string
        title: Indicates if a vendor or partner created
      usesCustomizationForm:
        type: boolean
        title: Order form for the product activation
      entryUrl:
        type: string
        title: Click in url
      sessionUrl:
        type: string
        title: Used to maintian session
      websiteUrl:
        type: string
        title: External marketing url
      updatedBy:
        type: string
        title: User that updated the product
      endDate:
        type: string
        format: date-time
        title: Expiry date for products
      faqs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FrequentlyAskedQuestions'
        title: FAQs about products
      created:
        type: string
        format: date-time
        title: Time it was created
      updated:
        type: string
        format: date-time
        title: Time it was updated last
      isArchived:
        type: boolean
        title: Is the product archived
      restrictions:
        $ref: '#/definitions/v1Restrictions'
        title: List of restrictions for the product
      billingId:
        type: string
        title: The sku for the Marketplace App with billing
      usesActivationSpecificEntryUrl:
        type: boolean
        title: Uses activation specific entry url
      state:
        $ref: '#/definitions/v1State'
        title: State tells which state (i.e., draft or published) of an app
      setupFee:
        type: string
        format: int64
        description: 'Setup fee for the wholesale price of the product. Value is # of cents.'
      suspended:
        type: string
        format: date-time
        title: A timestamp of when the product was suspended
      usesCustomPricing:
        type: boolean
        title: Uses custom pricing
  v1ProductPricingRule:
    type: object
    properties:
      price:
        type: string
        format: int64
      minUnits:
        type: string
        format: int64
      maxUnits:
        type: string
        format: int64
  v1ProductPricingType:
    type: string
    enum:
      - INVALID
      - STANDARD
      - STAIRSTEP
      - TIERED
    default: INVALID
  v1ProductWholesalePrice:
    type: object
    properties:
      currency:
        type: string
      price:
        type: string
        format: int64
      frequency:
        type: string
      commitment:
        $ref: '#/definitions/v1Commitment'
      isStartingAt:
        type: boolean
      shouldContactSales:
        type: boolean
      priceDisplaySku:
        type: string
        description: the sku used to resolve the price from billing.
  v1Restrictions:
    type: object
    properties:
      country:
        $ref: '#/definitions/v1PermissionLists'
        title: Allowed or not allowed countries for this product/addon
    title: Restictions is used to specify any restrictions on an app/addon for a given field
  v1RetailPrice:
    type: object
    properties:
      price:
        type: string
        format: int64
        title: the price of the app
      billingFrequency:
        $ref: '#/definitions/FrequenciesFrequency'
        title: the frequency in which the purchaser should be billed for the app
      currency:
        $ref: '#/definitions/CurrenciesCurrency'
        title: the currency in which the purchaser would make payment(s) in
      setupFee:
        type: string
        format: int64
        title: the setup fee in cents
    title: RetailPrice is the price that an app should be sold to a business at
  v1ServiceModelType:
    type: string
    enum:
      - DIY
      - DIWM
      - DIFM
    default: DIY
  v1State:
    type: string
    enum:
      - STATE_INVALID
      - STATE_DRAFT
      - STATE_PUBLISHED
    default: STATE_INVALID
    description: |-
      - STATE_INVALID: STATE_INVALID means that the state has not been set
      for legacy purposes, we'll set state default to STATE_PUBLISHED
       - STATE_DRAFT: STATE_DRAFT means that the app is not visible in Partner Center
       - STATE_PUBLISHED: STATE_PUBLISHED means that the app is now visible in Partner Center
    title: State tells which state (i.e., draft or published) of an app
  v1StateFilterOptions:
    type: string
    enum:
      - STATE_FILTER_OPTIONS_PUBLISHED
      - STATE_FILTER_OPTIONS_DRAFT
      - STATE_FILTER_OPTIONS_ALL
    default: STATE_FILTER_OPTIONS_PUBLISHED
    title: |-
      - STATE_FILTER_OPTIONS_PUBLISHED: filter for published
       - STATE_FILTER_OPTIONS_DRAFT: filter for draft
       - STATE_FILTER_OPTIONS_ALL: No filter, return all states
  v1StatusesStatus:
    type: string
    enum:
      - DRAFT
      - PUBLISHED
      - ARCHIVED
    default: DRAFT
  v1Tag:
    type: object
    properties:
      kind:
        type: string
        description: 'kind of tag, ie: tag/lmi, tag/feature, etc.'
      value:
        type: string
        description: 'value of tag, ie: seo, reputation, etc.'
  v1UpdateEvent:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/AppEnablementStatusesAppEnablementStatus'
      origin:
        type: string
  v1UpdatePackageOperation:
    type: object
    properties:
      name:
        type: string
        description: The name of package to create.
      tagline:
        type: string
        description: The tagline is suppose to be a snappy sentence represents the package.
      iconUrl:
        type: string
        description: The url for the icon of the package. Deprecated, use icon_url_v2 instead.
      headerImageUrl:
        type: string
        description: The url for the header image. Deprecated, use header_image_url_v2 instead.
      content:
        type: string
        description: The content of the package. This may also be known as a description.
      pricing:
        $ref: '#/definitions/v1Pricing'
        description: The price of the package.
      hideProductDetails:
        type: boolean
        description: Setting this flag will hide the product details when the package is displayed.
      hideProductIconsAndNames:
        type: boolean
        description: Setting this flag will hide the product icons and names when the package is displayed.
      lineItems:
        $ref: '#/definitions/v1LineItems'
        title: LineItems is a list of line items to update
      status:
        $ref: '#/definitions/v1StatusesStatus'
        title: The status of the package
      marketAction:
        $ref: '#/definitions/v1MarketAction'
        title: Market action config object
      usesBillingPricing:
        type: boolean
        title: |-
          Flag to mention if the package price is coming from the package itself (usesBillingPricing = false) or if the price comes from billing (usesBillingPricing = true)
          This flag is deprecated as every price should be in billing now. [MT-1190]
      pricingDisplayOption:
        $ref: '#/definitions/v1PricingDisplayOption'
        title: Options for displaying the price or a related message such as Contact Sales
      iconUrlV2:
        type: string
        description: The url for the icon of the package, can be empty.
      headerImageUrlV2:
        type: string
        description: The url for the header image of the package, can be empty.
  v1UpdatePackageRequest:
    type: object
    properties:
      packageId:
        type: string
        title: The identifier of the package to update
      updatePackageOperations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UpdatePackageOperation'
        title: A list of operations to mutate the package against
    title: |-
      The update package request is to used to update the package configuration. Things that can be updated in clude the name, and line items.
       To update a list of fields, pass in a list of repeated objects to the `update_package_operations` property, that contain the field and
       the value you want to modify. An example UpdatePackageRequest json structure to modify the name and tagline would be:
       {
         "package_id": "SOL-123"
         "update_package_operations": [
           {
             "name": "Name of Package"
          },
           {
             "tagline": "Slogon or snappy line for the package"
           }
         ]
       }
  v1UpdatePackageResponse:
    type: object
    properties:
      package:
        $ref: '#/definitions/v1Package'
        description: The resulting package after all operations have been applied.
  v1VendorRetailPrice:
    type: object
    properties:
      billingFrequency:
        type: string
        title: Billing Frequency
      currency:
        type: string
        title: Currency
      price:
        type: string
        format: int64
        title: Price in cents
      editionPrice:
        type: boolean
        title: is edition price
  v1WholesalePrice:
    type: object
    properties:
      billingFrequency:
        type: string
        title: Billing Frequency
      currency:
        type: string
        title: Currency
      price:
        type: string
        format: int64
        title: Price in cents
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
