swagger: "2.0"
info:
  title: mission_control/v1/api.proto
  version: version not set
tags:
  - name: MissionControl
  - name: MissionControlAdmin
consumes:
  - application/json
produces:
  - application/json
paths:
  /missioncontrol.v1.MissionControl/GetCurrentImage:
    post:
      summary: Get the current image for an environment
      operationId: MissionControl_GetCurrentImage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCurrentImageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCurrentImageRequest'
      tags:
        - MissionControl
  /missioncontrol.v1.MissionControl/GetZones:
    post:
      summary: Get the zones a microservice is eligible for. This can be restricted to the zones that are serving traffic.
      operationId: MissionControl_GetZones
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetZonesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetZonesRequest'
      tags:
        - MissionControl
  /missioncontrol.v1.MissionControl/ListApplications:
    post:
      summary: Lists a page of applications
      operationId: MissionControl_ListApplications
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListApplicationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListApplicationsRequest'
      tags:
        - MissionControl
  /missioncontrol.v1.MissionControl/ListImages:
    post:
      summary: List images for the given application
      operationId: MissionControl_ListImages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListImagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListImagesRequest'
      tags:
        - MissionControl
  /missioncontrol.v1.MissionControl/SetImage:
    post:
      summary: Set Image for Deployment
      operationId: MissionControl_SetImage
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetImageRequest'
      tags:
        - MissionControl
  /missioncontrol.v1.MissionControl/SetTraffic:
    post:
      summary: Toggle Traffic Enabled
      operationId: MissionControl_SetTraffic
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetTrafficRequest'
      tags:
        - MissionControl
  /missioncontrol.v1.MissionControlAdmin/CreateServiceAccount:
    post:
      summary: Create a new vendasta service account
      operationId: MissionControlAdmin_CreateServiceAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateServiceAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateServiceAccountRequest'
      tags:
        - MissionControlAdmin
  /missioncontrol.v1.MissionControlAdmin/CreateServiceAccountClientKey:
    post:
      summary: Generate and register a new client key with a service account
      operationId: MissionControlAdmin_CreateServiceAccountClientKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateServiceAccountClientKeyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateServiceAccountClientKeyRequest'
      tags:
        - MissionControlAdmin
  /missioncontrol.v1.MissionControlAdmin/DeleteServiceAccount:
    post:
      summary: Delete a vendasta service account
      operationId: MissionControlAdmin_DeleteServiceAccount
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteServiceAccountRequest'
      tags:
        - MissionControlAdmin
  /missioncontrol.v1.MissionControlAdmin/DeleteServiceAccountClientKey:
    post:
      summary: Delete a client key from a service account
      operationId: MissionControlAdmin_DeleteServiceAccountClientKey
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteServiceAccountClientKeyRequest'
      tags:
        - MissionControlAdmin
  /missioncontrol.v1.MissionControlAdmin/GetServiceAccount:
    post:
      summary: Retrieve a single service account
      operationId: MissionControlAdmin_GetServiceAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetServiceAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetServiceAccountRequest'
      tags:
        - MissionControlAdmin
  /missioncontrol.v1.MissionControlAdmin/SearchServiceAccounts:
    post:
      summary: View a list of all service accounts
      operationId: MissionControlAdmin_SearchServiceAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchServiceAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchServiceAccountsRequest'
      tags:
        - MissionControlAdmin
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1Application:
    type: object
    properties:
      appId:
        type: string
        title: 'unique identifier for the application (example: account-group)'
      appName:
        type: string
        title: 'human readable name for the application (example: Account Group)'
      githubRepoUrl:
        type: string
        title: 'The Github Repository URL (example: https://github.com/vendasta/account-group)'
  v1ClientKey:
    type: object
    properties:
      id:
        type: string
        title: ID of the key
      key:
        type: string
        title: Public key
  v1CreateServiceAccountClientKeyRequest:
    type: object
    properties:
      email:
        type: string
        description: The email of the service account.
      environment:
        $ref: '#/definitions/v1Environment'
        title: The environment to do this operation on
    title: Request message for MissionControlServiceAccount.v1.CreateServiceAccountClientKey
  v1CreateServiceAccountClientKeyResponse:
    type: object
    properties:
      privateKey:
        type: string
        description: The matching private key for the public key generated by IAM. This key is not stored by IAM and can not be retrieved again.
      keyId:
        type: string
        description: The identifier of the matching public key.
    title: Response message for MissionControlServiceAccount.v1.CreateServiceAccountClientKey
  v1CreateServiceAccountRequest:
    type: object
    properties:
      email:
        type: string
        description: The email of the service account.
      environment:
        $ref: '#/definitions/v1Environment'
        title: The environment to do this operation on
    title: Request message for MissionControlServiceAccount.v1.CreateServiceAccount
  v1CreateServiceAccountResponse:
    type: object
    properties:
      serviceAccountId:
        type: string
    title: Response message for MissionControlServiceAccount.v1.CreateServiceAccount
  v1CurrentImage:
    type: object
    properties:
      image:
        $ref: '#/definitions/v1Image'
      zone:
        type: array
        items:
          type: string
  v1DeleteServiceAccountClientKeyRequest:
    type: object
    properties:
      email:
        type: string
        description: The email of the service account.
      keyId:
        type: string
        description: The identifier of the public key.
      environment:
        $ref: '#/definitions/v1Environment'
        title: The environment to do this operation on
    title: Request message for MissionControlServiceAccount.v1.DeleteServiceAccountClientKey
  v1DeleteServiceAccountRequest:
    type: object
    properties:
      serviceAccountId:
        type: string
        description: The account id of the service account.
      environment:
        $ref: '#/definitions/v1Environment'
        title: The environment to do this operation on
    title: Request message for MissionControlServiceAccount.v1.DeleteServiceAccount
  v1Environment:
    type: string
    enum:
      - Test
      - Demo
      - Prod
    default: Test
    description: Environment represents a mission control environment that segments an application into test, demo, and production.
  v1GetCurrentImageRequest:
    type: object
    properties:
      applicationId:
        type: string
      environment:
        $ref: '#/definitions/v1Environment'
  v1GetCurrentImageResponse:
    type: object
    properties:
      images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CurrentImage'
  v1GetServiceAccountRequest:
    type: object
    properties:
      email:
        type: string
        description: The email of the service account.
      environment:
        $ref: '#/definitions/v1Environment'
        title: The environment to do this operation on
    title: Request message for MissionControlServiceAccount.v1.GetServiceAccount
  v1GetServiceAccountResponse:
    type: object
    properties:
      serviceAccount:
        $ref: '#/definitions/v1ServiceAccount'
        description: The service account.
    title: Response message for MissionControlServiceAccount.v1.GetServiceAccount
  v1GetZonesRequest:
    type: object
    properties:
      applicationId:
        type: string
      environment:
        $ref: '#/definitions/v1Environment'
      enabled:
        type: boolean
        title: |-
          If true, only the zones a microservice is serving traffic to will be returned, otherwise all zones a microservice
          could be deployed to will be returned
  v1GetZonesResponse:
    type: object
    properties:
      name:
        type: array
        items:
          type: string
  v1GitCommitDetails:
    type: object
    properties:
      author:
        $ref: '#/definitions/v1GithubCommitUser'
        title: The user who created the content
      committer:
        $ref: '#/definitions/v1GithubCommitUser'
        title: The user who committed the content
      message:
        type: string
        title: the content of the git commit message
    title: The details of the git commit (if any)
  v1GithubCommitUser:
    type: object
    properties:
      date:
        type: string
        format: date-time
      name:
        type: string
      email:
        type: string
    description: Details about the user who committed/authored a specific git commit.
  v1Image:
    type: object
    properties:
      applicationId:
        type: string
        title: The application ID
      imageId:
        type: string
        title: The ID of the image
      gitHash:
        type: string
        title: if applicable, the git hash of this deployment
      created:
        type: string
        format: date-time
        title: Output only - Time the deployment was created
      containerBuilderId:
        type: string
        title: Optional - Google Container Builder ID that built and published this deployment
      gitCommitDetails:
        $ref: '#/definitions/v1GitCommitDetails'
        title: Output only - Details about the provided git_hash
      branchName:
        type: string
        title: if applicable, the git branch name of this deployment
  v1ListApplicationsRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
    title: Request message for MissionControl.ListApplicationsRequest
  v1ListApplicationsResponse:
    type: object
    properties:
      applications:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Application'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
    title: Response message for MissionControl.ListApplications
  v1ListImagesRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: The unique identifier of the application
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
    title: Request message for MissionControl.ListImages
  v1ListImagesResponse:
    type: object
    properties:
      images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Image'
    title: Response message for MissionControl.ListImages
  v1OrderByDirection:
    type: string
    enum:
      - ASCENDING
      - DESCENDING
    default: ASCENDING
    title: Indicates the sort order for SearchServiceAccounts
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
    description: Metadata for paging through a list/search endpoint.
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
    description: Metadata for paging through a list/search endpoint.
  v1SearchServiceAccountsRequest:
    type: object
    properties:
      searchTerm:
        type: string
        title: Filter results by
      orderBy:
        type: string
        title: Field to order by
      orderByDirection:
        $ref: '#/definitions/v1OrderByDirection'
        title: Indicates to sort by ascending or descending
      cursor:
        type: string
        description: Cursor allows paging of results, the next_cursor returned by the last response is expected.
      pageSize:
        type: string
        format: int64
        description: The number of results to return.
      environment:
        $ref: '#/definitions/v1Environment'
        title: The environment to do this operation on
    title: Request message for MissionControlServiceAccount.v1.SearchServiceAccounts
  v1SearchServiceAccountsResponse:
    type: object
    properties:
      serviceAccounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ServiceAccount'
        description: A list of service accounts.
      nextCursor:
        type: string
        description: |-
          A string indicating the starting position of the next set of results. The client should pass this in the
          the next request.
      hasMore:
        type: boolean
        description: A bool indicating if there are more results to be paged through.
      totalResults:
        type: string
        format: int64
        title: Total results found
    title: Response message for MissionControlServiceAccount.v1.SearchServiceAccounts
  v1ServiceAccount:
    type: object
    properties:
      serviceAccountId:
        type: string
      email:
        type: string
        description: Email of the service account.
      keyIds:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ClientKey'
        description: Associated client keys.
    title: Representation of a Vendasta Service account
  v1SetImageRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: IAM
      environment:
        $ref: '#/definitions/v1Environment'
        title: Prod
      imageId:
        type: string
        title: gcr.io/IAM:<version>
      zone:
        type: string
        title: us-central1-c
  v1SetTrafficRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: IAM
      environment:
        $ref: '#/definitions/v1Environment'
        title: Prod
      zone:
        type: string
        title: us-central1-c
      enabled:
        type: boolean
        title: Should this zone serve traffic for this application and environment
