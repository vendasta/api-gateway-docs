swagger: "2.0"
info:
  title: order_fulfillment/v1/api.proto
  version: version not set
tags:
  - name: OrderFulfillmentService
consumes:
  - application/json
produces:
  - application/json
paths:
  /orderfulfillment.v1.OrderFulfillmentService/CancelEditionChange:
    post:
      summary: Cancel a pending edition change
      operationId: OrderFulfillmentService_CancelEditionChange
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CancelEditionChangeRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/CancelOrderItemWaitingForConsumerInformation:
    post:
      summary: |-
        Cancel an order item waiting for consumer information
        Only cancels order items with OrderItemStatus = 10
      operationId: OrderFulfillmentService_CancelOrderItemWaitingForConsumerInformation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CancelOrderItemWaitingForConsumerInformationRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/CreateOrder:
    post:
      summary: Create an order for a partner and a list of order items
      operationId: OrderFulfillmentService_CreateOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateOrderRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/CreateOrderForSingleItem:
    post:
      summary: |-
        Creates an order for a single order item
        This is not intended for general use, and is locked down to specific service accounts
      operationId: OrderFulfillmentService_CreateOrderForSingleItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateOrderForSingleItemResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateOrderForSingleItemRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/DeactivateImmediately:
    post:
      summary: Deactivate an item immediately
      operationId: OrderFulfillmentService_DeactivateImmediately
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeactivateImmediatelyRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/DismissFailedOrderItem:
    post:
      summary: Mark a failed order item as dismissed
      operationId: OrderFulfillmentService_DismissFailedOrderItem
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DismissFailedOrderItemRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/GetCurrentSpend:
    post:
      summary: Get current spend for a product/addon
      operationId: OrderFulfillmentService_GetCurrentSpend
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCurrentSpendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetCurrentSpendRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/GetMultiActivationDates:
    post:
      summary: Get the activation dates for multiple items
      operationId: OrderFulfillmentService_GetMultiActivationDates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiActivationDatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiActivationDatesRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/GetMultiActivationErrorsForOrderItems:
    post:
      summary: Gets activation errors for multiple order items.
      operationId: OrderFulfillmentService_GetMultiActivationErrorsForOrderItems
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiActivationErrorsForOrderItemsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiActivationErrorsForOrderItemsRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/GetMultiScheduledDeactivationsForBusiness:
    post:
      summary: Gets scheduled deactivations for multiple Activation IDs
      operationId: OrderFulfillmentService_GetMultiScheduledDeactivationsForBusiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiScheduledDeactivationsForBusinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiScheduledDeactivationsForBusinessRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/GetOrderByIdempotencyKey:
    post:
      summary: Retrieves an order from it's idempotency key
      operationId: OrderFulfillmentService_GetOrderByIdempotencyKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetOrderByIdempotencyKeyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: |-
            Get the order, not by the OrderID but by the idempotency key. Technically a query, not a get but as the idempotency
            key is unique this will result in 0 or 1 orders. It is also a query against the primary data source so it will be up
            to date data. The fundamental difference between this and a get by order id is the speed of the response.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetOrderByIdempotencyKeyRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ListChangeSpendRequestHistory:
    post:
      summary: Lists a spend change request history of spend change events
      operationId: OrderFulfillmentService_ListChangeSpendRequestHistory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListChangeSpendRequestHistoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListChangeSpendRequestHistoryRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ListChangeSpendRequests:
    post:
      summary: Sends the spend amount change request to the vendor
      operationId: OrderFulfillmentService_ListChangeSpendRequests
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListChangeSpendRequestsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListChangeSpendRequestsRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ListOrderItemsForBusiness:
    post:
      summary: List order items for a given business
      operationId: OrderFulfillmentService_ListOrderItemsForBusiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListOrderItemsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListOrderItemsForBusinessRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ListOrderItemsForOrder:
    post:
      summary: List order items for a given order
      operationId: OrderFulfillmentService_ListOrderItemsForOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListOrderItemsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListOrderItemsForOrderRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ListScheduledActivationsForBusiness:
    post:
      summary: Lists scheduled activations for a business
      operationId: OrderFulfillmentService_ListScheduledActivationsForBusiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListScheduledActivationsForBusinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListScheduledActivationsForBusinessRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/RecordOrderFormSubmissionAndActivateOrderItem:
    post:
      summary: Record an order form submission for an OrderItem and start activation process for it
      operationId: OrderFulfillmentService_RecordOrderFormSubmissionAndActivateOrderItem
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RecordOrderFormSubmissionAndActivateOrderItemRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/RequestSpendAmountChange:
    post:
      summary: Sends the spend amount change request to the vendor
      operationId: OrderFulfillmentService_RequestSpendAmountChange
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ChangeSpendRequestRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ResolveChangeSpendRequest:
    post:
      summary: Sends the approval/rejection of the spend amount change request from the vendor
      operationId: OrderFulfillmentService_ResolveChangeSpendRequest
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResolveChangeSpendRequestRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ResolvePendingActivation:
    post:
      summary: |-
        Resolve a pending activation. This is called by the vendor to approve or reject and activation. The endpoint
        ensures Accounts and Order Fulfillment are kept in sync with respect to the status of the order item/activation
      operationId: OrderFulfillmentService_ResolvePendingActivation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResolvePendingActivationRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/ScheduleDeactivation:
    post:
      summary: Create a scheduled deactivation for an item
      operationId: OrderFulfillmentService_ScheduleDeactivation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ScheduleDeactivationRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/UnscheduleActivation:
    post:
      summary: Unschedules a ScheduledProvisioningTask of type "activation"
      operationId: OrderFulfillmentService_UnscheduleActivation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnscheduleActivationRequest'
      tags:
        - OrderFulfillmentService
  /orderfulfillment.v1.OrderFulfillmentService/UnscheduleDeactivation:
    post:
      summary: Unschedules a ScheduledProvisioningTask of type "deactivation"
      operationId: OrderFulfillmentService_UnscheduleDeactivation
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnscheduleDeactivationRequest'
      tags:
        - OrderFulfillmentService
definitions:
  BlameSource:
    type: string
    enum:
      - BLAME_SOURCE_SYSTEM
      - BLAME_SOURCE_USER
    default: BLAME_SOURCE_SYSTEM
  ListChangeSpendRequestHistoryRequestListChangeSpendRequestsHistoryFilterOptions:
    type: object
    properties:
      itemIds:
        type: array
        items:
          type: string
        title: List of items to return spend change requests for
      businessIds:
        type: array
        items:
          type: string
        title: List of businesses to return spend change requests for
      changeRequestIds:
        type: array
        items:
          type: string
        title: List of change request ids
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1ChangeSpendRequestStatus'
        title: List of which statuses a request should be in to be returned
  ListChangeSpendRequestHistoryResponseChangeSpendRequestEvents:
    type: object
    properties:
      itemId:
        type: string
        title: order item id, which could be app id or addon id
      businessId:
        type: string
        title: account group id for this request
      changeRequestId:
        type: string
        title: unique identifier for this change spend request
      eventTime:
        type: string
        format: date-time
        title: time stamp of the event and status change
      status:
        $ref: '#/definitions/v1ChangeSpendRequestStatus'
        title: new status of the event
      externalData:
        $ref: '#/definitions/v1ChangeRequestEventExternalData'
        title: external spend change data
      requestingUser:
        type: string
        description: user requesting spend change, this will be the email of the user who made the request.
      resolvedBy:
        type: string
        description: user requesting spend change, this will be the email of the user who resolved the request.
      effectiveDate:
        type: string
        format: date-time
        title: time stamp of the event and status change
  ListChangeSpendRequestsRequestListChangeSpendRequestsFilterOptions:
    type: object
    properties:
      itemIds:
        type: array
        items:
          type: string
        title: List of items to return spend change requests for
      businessIds:
        type: array
        items:
          type: string
        title: List of businesses to return spend change requests for
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1ChangeSpendRequestStatus'
        title: List of which statuses a request should be in to be returned
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1ActivationDateIdentifiers:
    type: object
    properties:
      activationId:
        type: string
        title: activation id of the item
      itemId:
        type: string
        title: item id of the item
  v1ActivationDates:
    type: object
    properties:
      activationDate:
        type: string
        format: date-time
        title: the date an item was activated
      renewalDate:
        type: string
        format: date-time
        title: the next payment date for an item
      commitmentDate:
        type: string
        format: date-time
        title: |-
          The date when the final payment of the subscription's commitment is due
          (first day of final billing period on a commitement)
      earliestValidScheduledDeactivationDate:
        type: string
        format: date-time
        title: the earliest date and item can be set to deactivate
      endOfCommitmentPeriod:
        type: string
        format: date-time
        title: the last day of final billing period of a commitment, when the service for the last payment officially expires
  v1ActivationFailureDetails:
    type: object
    properties:
      orderItemId:
        type: string
        description: id that identifies an order item.
      failureReason:
        $ref: '#/definitions/v1FailureReason'
        description: reason code for failure.
      details:
        type: array
        items:
          type: string
        description: |-
          list of failure reason details.
               * there are activation failures that may return multiple failure details like validation
                 failure which may return multiple error codes that corresponds to order form fields
                 that are causing validation to fail.
               * details could be numeric values or strings.
               * for validation failure, details would be numeric values that corresponds to
                 order-fulfillment's validation error codes.
               * for charge failures, details would be Stripe's error string/code if available.
                 https://stripe.com/docs/error-codes
               * for vendor rejection failure, details would be a freeform text provided by vendors when
                 they rejected the order item.
               * for activation failures, as of writting, more granular error details/codes are not
                 available or provided. So only the FailureReason will be available.
               * details are not guaranteed to be available for all failure reasons as of writting.
  v1BillingFrequency:
    type: string
    enum:
      - BILLING_FREQUENCY_INVALID
      - BILLING_FREQUENCY_MONTHLY
      - BILLING_FREQUENCY_YEARLY
      - BILLING_FREQUENCY_ONE_TIME
    default: BILLING_FREQUENCY_INVALID
  v1Blame:
    type: object
    properties:
      source:
        $ref: '#/definitions/BlameSource'
        description: |-
          The source of action
          This could be a User identified by subject ID, ie: bbassingthwaite@vendasta.com
          or a System-level action, bulk action, etc.
      sourceIdentifier:
        type: string
        title: |-
          Optionally used to provide additional information on source
          ie: If source is USER, identifier could be an e-mail
  v1CancelEditionChangeRequest:
    type: object
    properties:
      orderItemId:
        type: string
        title: Unique identifier of the order item
  v1CancelOrderItemWaitingForConsumerInformationRequest:
    type: object
    properties:
      orderItemId:
        type: string
        title: Unique identifier of the order item
  v1ChangeRequestEventExternalData:
    type: object
    properties:
      note:
        type: string
        title: note is the requester_note for created events, vendor_response for resolved events
      requestedSpendAmount:
        type: string
        format: int64
        title: new spend amount, which a partner requests from the vendor
      businessName:
        type: string
        description: name of the business or account group identified by the business_id.
      resellerName:
        type: string
        description: partner name associated with a business/accountGroup identified by the business_id.
      itemName:
        type: string
        description: app or product name identified by the item_id.
      renewalDate:
        type: string
        format: date-time
        description: the next renewal date of the subscription.
      currentSubscriptionCost:
        type: string
        format: int64
        description: current spend amount set on the subscription.
      billingFrequency:
        $ref: '#/definitions/v1BillingFrequency'
        title: the frequency that the subscription renews at
      resellerId:
        type: string
        description: partner id associated with a business/accountGroup identified by the business_id.
      resellerCurrency:
        type: string
        title: the partner's currency
  v1ChangeSpendRequest:
    type: object
    properties:
      changeRequestId:
        type: string
        title: unique identifier for this change spend request
      businessId:
        type: string
        title: account group id for this request
      itemId:
        type: string
        title: order item id, which could be app id or addon id
      activationId:
        type: string
        title: the activation id, which is specific for this change request
      requestedSpendAmount:
        type: string
        format: int64
        title: new spend amount, which a partner requests from the vendor
      status:
        $ref: '#/definitions/v1ChangeSpendRequestStatus'
        title: current status of the change request
      requesterNote:
        type: string
        title: requester note for this change request
      created:
        type: string
        format: date-time
        title: the date the request was created
      requestingUser:
        type: string
        description: user requesting spend change, this will be the email of the user who made the request.
      billingOrderId:
        type: string
        title: the order id in billing associated with the billable item for the request
      externalData:
        $ref: '#/definitions/v1ChangeSpendRequestExternalData'
        description: external data referenced by the id fields.
  v1ChangeSpendRequestExternalData:
    type: object
    properties:
      businessName:
        type: string
        description: name of the business or account group identified by the business_id.
      resellerName:
        type: string
        description: partner name associated with a business/accountGroup identified by the business_id.
      itemName:
        type: string
        description: app or product name identified by the item_id.
      renewalDate:
        type: string
        format: date-time
        description: the next renewal date of the subscription.
      currentSubscriptionCost:
        type: string
        format: int64
        description: current spend amount set on the subscription.
      billingFrequency:
        $ref: '#/definitions/v1BillingFrequency'
        title: the frequency that the subscription renews at
      resellerId:
        type: string
        description: partner id associated with a business/accountGroup identified by the business_id.
      resellerCurrency:
        type: string
        title: the partner's currency
  v1ChangeSpendRequestRequest:
    type: object
    properties:
      businessId:
        type: string
        title: account group id for this request
      itemId:
        type: string
        title: order item id, which could be app id or addon id
      activationId:
        type: string
        title: the activation id, which is specific for this change request
      requestedSpendAmount:
        type: string
        format: int64
        title: new spend amount, which a partner requests from the vendor
      requesterNote:
        type: string
        title: requester note for this change request
  v1ChangeSpendRequestStatus:
    type: string
    enum:
      - CHANGE_SPEND_REQUEST_STATUS_INVALID
      - CHANGE_SPEND_REQUEST_STATUS_CREATED
      - CHANGE_SPEND_REQUEST_STATUS_APPROVED
      - CHANGE_SPEND_REQUEST_STATUS_REJECTED
      - CHANGE_SPEND_REQUEST_STATUS_OVERRIDDEN
    default: CHANGE_SPEND_REQUEST_STATUS_INVALID
  v1Consumer:
    type: string
    enum:
      - CONSUMER_UNSET
      - CONSUMER_WHOLESALE
      - CONSUMER_RETAIL
    default: CONSUMER_UNSET
    description: |-
      - CONSUMER_WHOLESALE: A wholesale consumer represents a billing relationship with Vendasta
       - CONSUMER_RETAIL: A retail consumer represents a billing relationship with a partner
    title: Consumer represents the billing relationship
  v1CreateOrderForSingleItemRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner making the order
      businessId:
        type: string
        title: the business id for the order item
      itemId:
        type: string
        title: the item id for the order item
      editionId:
        type: string
        title: the id of the edition to be processed
      isTrial:
        type: boolean
        title: the flag indicating whether the order item is for a trial or not
      orderFormSubmissionId:
        type: string
        title: the submission form id for the order item
      orderSource:
        $ref: '#/definitions/v1Blame'
        title: the metadata containing information about who initiated the request
  v1CreateOrderForSingleItemResponse:
    type: object
    properties:
      orderId:
        type: string
        title: unique identifier of the created order
      orderItemId:
        type: string
        title: unique identifier of the single order item
      activationId:
        type: string
        title: pregenerated unique identifier for the activation
  v1CreateOrderRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: the id of the partner making the order
      orderItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OrderItemParameters'
        title: the list of items being ordered
      orderSource:
        $ref: '#/definitions/v1Blame'
        title: the metadata containing information about who initiated the request
      idempotencyKey:
        type: string
        title: Arbitrary but unique string which identifies this particular order
    title: message to request the creation of an order
  v1CreateOrderResponse:
    type: object
    properties:
      orderId:
        type: string
        title: the id of the created order
    title: response message for the successful creation of an order
  v1DeactivateImmediatelyRequest:
    type: object
    properties:
      activationId:
        type: string
        title: activation id of the item
      businessId:
        type: string
        title: business id of the account
      itemId:
        type: string
        title: id of the item to be deactivated
  v1DismissFailedOrderItemRequest:
    type: object
    properties:
      orderId:
        type: string
        title: parent order id of the order item
      businessId:
        type: string
        title: the business id for the order item
      itemId:
        type: string
        title: the item id for the order item
      orderItemId:
        type: string
        title: Unique identifier of the order item
    title: Request to mark a failed order item as dismissed
  v1EditionChangeInformation:
    type: object
    properties:
      currentActivationId:
        type: string
        title: The activation ID that it is coming from
      editionChangeReasons:
        $ref: '#/definitions/v1Reasons'
        title: The user given reasons for this change
    title: Includes information on the edition change ordered
  v1FailureReason:
    type: string
    enum:
      - FAILURE_REASON_UNKNOWN_ERROR
      - FAILURE_REASON_VALIDATION_ERROR
      - FAILURE_REASON_CHARGE_ERROR
      - FAILURE_REASON_VENDOR_REJECTED_ERROR
      - FAILURE_REASON_ACTIVATION_ERROR
    default: FAILURE_REASON_UNKNOWN_ERROR
  v1Frequency:
    type: string
    enum:
      - FREQUENCY_INVALID
      - FREQUENCY_MONTHLY
      - FREQUENCY_YEARLY
      - FREQUENCY_ONE_TIME
    default: FREQUENCY_INVALID
    title: Frequency for the billing of an order item
  v1GetCurrentSpendRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: partner id
      businessId:
        type: string
        title: account group id for this request
      itemId:
        type: string
        title: item id, which could be app id or addon id
      activationId:
        type: string
        description: the unique ID that was assigned to the app/addon upon activation.
  v1GetCurrentSpendResponse:
    type: object
    properties:
      spendAmount:
        type: string
        format: int64
        title: the current spend for the product
  v1GetMultiActivationDatesRequest:
    type: object
    properties:
      activationDateIdentifiers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ActivationDateIdentifiers'
        title: list of the activation and item IDs of the items to get dates for
      partnerId:
        type: string
        title: Partner ID of the items to get the dates for
      businessId:
        type: string
        title: Business ID of the items to get the dates for
  v1GetMultiActivationDatesResponse:
    type: object
    properties:
      activationDates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ActivationDates'
  v1GetMultiActivationErrorsForOrderItemsRequest:
    type: object
    properties:
      orderItemIds:
        type: array
        items:
          type: string
        description: list of order item ids we want to know about.
  v1GetMultiActivationErrorsForOrderItemsResponse:
    type: object
    properties:
      failureDetails:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ActivationFailureDetails'
        description: details about the order item activation failure.
  v1GetMultiScheduledDeactivationsForBusinessRequest:
    type: object
    properties:
      activationIds:
        type: array
        items:
          type: string
        title: list of activation IDs of the scheduled provisioning tasks to get
      businessId:
        type: string
        title: Business ID to get activations for
  v1GetMultiScheduledDeactivationsForBusinessResponse:
    type: object
    properties:
      scheduledDeactivations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ScheduledProvisioningTask'
        title: list of scheduled provisioning tasks to return
  v1GetOrderByIdempotencyKeyRequest:
    type: object
    properties:
      idempotencyKey:
        type: string
    description: |-
      Get the order, not by the OrderID but by the idempotency key. Technically a query, not a get but as the idempotency
      key is unique this will result in 0 or 1 orders. It is also a query against the primary data source so it will be up
      to date data. The fundamental difference between this and a get by order id is the speed of the response.
  v1GetOrderByIdempotencyKeyResponse:
    type: object
    properties:
      order:
        $ref: '#/definitions/v1Order'
        title: The order
  v1ListChangeSpendRequestHistoryRequest:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
        title: the number of results to retrieve
      cursor:
        type: string
        title: cursor should be supplied from the last response to load the next results
      filterOptions:
        $ref: '#/definitions/ListChangeSpendRequestHistoryRequestListChangeSpendRequestsHistoryFilterOptions'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: field mask to use when filtering list response
  v1ListChangeSpendRequestHistoryResponse:
    type: object
    properties:
      nextCursor:
        type: string
        title: The cursor to send with the next request if there are more results to be loaded
      hasMore:
        type: boolean
        title: Indicates whether or not there are more results to be loaded
      changeSpendRequestEvents:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListChangeSpendRequestHistoryResponseChangeSpendRequestEvents'
        title: The list of spend change events
  v1ListChangeSpendRequestsRequest:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
        title: the number of results to retrieve
      cursor:
        type: string
        title: cursor should be supplied from the last response to load the next results
      filterOptions:
        $ref: '#/definitions/ListChangeSpendRequestsRequestListChangeSpendRequestsFilterOptions'
  v1ListChangeSpendRequestsResponse:
    type: object
    properties:
      changeSpendRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ChangeSpendRequest'
        title: The list of spend changes returned
      nextCursor:
        type: string
        title: The cursor to send with the next request if there are more results to be loaded
      hasMore:
        type: boolean
        title: Indicates whether or not there are more results to be loaded
  v1ListOrderItemsForBusinessRequest:
    type: object
    properties:
      businessId:
        type: string
        title: the business id to list order items for
      filterByStatuses:
        type: array
        items:
          $ref: '#/definitions/v1OrderItemStatus'
        title: the statuses to include in the list response [DEPRECATED - does nothing]
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: field mask to use when filtering list response
      cursor:
        type: string
        title: cursor should be supplied from the last response to load the next results
      pageSize:
        type: string
        format: int64
        title: the number of results to retrieve
    title: list the order items for a given business
  v1ListOrderItemsForOrderRequest:
    type: object
    properties:
      orderId:
        type: string
        title: the order id to list order items for
      cursor:
        type: string
        title: cursor should be supplied from the last response to load the next results
      pageSize:
        type: string
        format: int64
        title: the number of results to retrieve
    title: list the order items for a given business
  v1ListOrderItemsResponse:
    type: object
    properties:
      orderItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1OrderItem'
        title: the list of order items returned
      nextCursor:
        type: string
        title: The cursor to send with the next request if there are more results to be loaded
      hasMore:
        type: boolean
        title: Indicates whether or not there are more results to be loaded
    title: paged list response of order items
  v1ListScheduledActivationsForBusinessRequest:
    type: object
    properties:
      businessId:
        type: string
        title: Business ID to get activations for
      cursor:
        type: string
        description: The cursor at which to start the page.
      pageSize:
        type: string
        format: int64
        description: The size of the page to fetch.
  v1ListScheduledActivationsForBusinessResponse:
    type: object
    properties:
      scheduledActivations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ScheduledProvisioningTask'
        title: list of scheduled provisioning tasks to return
      nextCursor:
        type: string
        description: The next cursor for which to fetch the next page.
      hasMore:
        type: boolean
        description: The flag indicating whether there is another page.
  v1Order:
    type: object
    properties:
      orderId:
        type: string
        title: Unique identifier for the order
      partnerId:
        type: string
        title: Partner id for the order
      created:
        type: string
        format: date-time
        title: timestamp of when this order was created
      updated:
        type: string
        format: date-time
        title: timestamp of when this order was last updated
      status:
        $ref: '#/definitions/v1OrderStatus'
        title: The status of the Order
      orderSource:
        $ref: '#/definitions/v1Blame'
        title: The source of the order
      idempotencyKey:
        type: string
        title: Idempotency key to ensure order uniqueness
  v1OrderItem:
    type: object
    properties:
      orderId:
        type: string
        title: parent order id of the order item
      businessId:
        type: string
        title: the business id of the order item
      itemId:
        type: string
        title: the item id of the order item
      orderItemId:
        type: string
        title: order item id of the order item
      orderFormSubmissionId:
        type: string
        title: the submission form id of the order item
      editionId:
        type: string
        title: the optional edition id of the order item
      isTrial:
        type: boolean
        title: the flag indicating whether the order item is for a trial or not
      activationId:
        type: string
        title: activation id of the associated activation
      status:
        $ref: '#/definitions/v1OrderItemStatus'
        title: status of the order item
      created:
        type: string
        format: date-time
        title: timestamp of when the order item was created
      updated:
        type: string
        format: date-time
        title: timestamp of when the order item was last updated
      validationErrorCodes:
        type: array
        items:
          $ref: '#/definitions/v1ValidationErrorCodes'
        title: error codes if the order item failed validation
      productActivationInformation:
        $ref: '#/definitions/v1ProductActivationInformation'
      editionChangeInformation:
        $ref: '#/definitions/v1EditionChangeInformation'
      packageId:
        type: string
        title: the optional package id of the package/bundle containing the order item
      chargeFailureCode:
        type: string
        description: |-
          A string representing a failure code for the credit card charge for this order item, as defined here: https://stripe.com/docs/error-codes.
          Empty if the charge succeeded, or if it failed for an unrelated reason.
      packageInstanceId:
        type: string
        title: |-
          the optional instance ID of the package/bundle containing the order item.
          when a package is purchased in multiples, this ID will differentiate which items belong to which instance of the package
      customPrice:
        type: string
        format: int64
        title: the optional custom price that will be propagated to the recurring subscription within billing
      retailAmount:
        type: string
        format: int64
        description: The retail amount for the order item. This is in the smallest currency unit.
      retailFrequency:
        $ref: '#/definitions/v1Frequency'
        description: The frequency at which the retail price will be billed.
      subscriptionId:
        type: string
        title: The subscription ID of the subscription within billing
      consumer:
        $ref: '#/definitions/v1Consumer'
        title: The billing relationship the subscription is for
    title: API representation of an Order Item
  v1OrderItemParameters:
    type: object
    properties:
      businessId:
        type: string
        title: the business id for the order item
      itemId:
        type: string
        title: the item id for the order item
      orderFormSubmissionId:
        type: string
        title: the submission form id for the order item
      editionId:
        type: string
        title: the optional edition id for the order item
      isTrial:
        type: boolean
        title: the flag indicating whether the order item is for a trial or not
      productActivationInformation:
        $ref: '#/definitions/v1ProductActivationInformation'
      editionChangeInformation:
        $ref: '#/definitions/v1EditionChangeInformation'
      packageId:
        type: string
        title: the optional package id of the package/bundle containing the order item
      customPrice:
        type: string
        format: int64
        title: the optional custom price that will be propagated to the recurring subscription within billing
      packageInstanceId:
        type: string
        title: |-
          the optional instance ID of the package/bundle containing the order item.
          when a package is purchased in multiples, this ID will differentiate which items belong to which instance of the package
      retailAmount:
        type: string
        format: int64
        description: The retail amount for the order item. This is in the smallest currency unit.
      retailFrequency:
        $ref: '#/definitions/v1Frequency'
        description: The frequency at which the retail price will be billed.
      subscriptionId:
        type: string
        title: The subscription ID of the subscription within billing
      consumer:
        $ref: '#/definitions/v1Consumer'
        title: The billing relationship the subscription is for
      scheduledDeactivationDate:
        type: string
        format: date-time
        title: The scheduled deactivation date assigned to an order item
      scheduledActivationDate:
        type: string
        format: date-time
        title: The scheduled activation date assigned to an order item
    title: Parameters for an Order Item
  v1OrderItemStatus:
    type: string
    enum:
      - ORDER_ITEM_STATUS_INVALID
      - ORDER_ITEM_STATUS_CREATED
      - ORDER_ITEM_STATUS_VALIDATION_FAILED
      - ORDER_ITEM_STATUS_CHARGED
      - ORDER_ITEM_STATUS_CHARGE_SUCCESSFUL
      - ORDER_ITEM_STATUS_CHARGE_FAILED
      - ORDER_ITEM_STATUS_PENDING_ACTIVATION
      - ORDER_ITEM_STATUS_ACTIVATION_FAILED
      - ORDER_ITEM_STATUS_ACTIVATION_SUCCESSFUL
      - ORDER_ITEM_STATUS_CANCELED
      - ORDER_ITEM_STATUS_WAITING_FOR_CONSUMER_INFORMATION
      - ORDER_ITEM_STATUS_ACTIVATION_SCHEDULED
      - ORDER_ITEM_STATUS_ACTIVATION_UNSCHEDULED
    default: ORDER_ITEM_STATUS_INVALID
  v1OrderStatus:
    type: string
    enum:
      - ORDER_STATUS_UNKNOWN
      - ORDER_STATUS_CREATED
      - ORDER_STATUS_PROCESSING
      - ORDER_STATUS_CHARGED
    default: ORDER_STATUS_UNKNOWN
  v1ProductActivationInformation:
    type: object
  v1Reasons:
    type: object
    properties:
      choices:
        type: array
        items:
          type: string
        title: A list of provided reasons the user chose for downgrading an edition
      comments:
        type: string
        title: Additional comments provided with regards to why a product was downgraded
    title: A representation of reasons and comments of user feedback for their action
  v1RecordOrderFormSubmissionAndActivateOrderItemRequest:
    type: object
    properties:
      orderItemId:
        type: string
        title: Unique identifier of the order item
      orderFormSubmissionId:
        type: string
        title: Unique identifier of the order form submission
  v1ResolveChangeSpendRequestRequest:
    type: object
    properties:
      changeRequestId:
        type: string
        title: the unique identifier of the spend change request
      businessId:
        type: string
        title: account group id for this request
      itemId:
        type: string
        title: order item id, which could be app id or addon id
      activationId:
        type: string
        title: the activation id, which is specific for this change request
      status:
        $ref: '#/definitions/v1ChangeSpendRequestStatus'
        title: the new status of the change spend request, typically approved or rejected
      statusUpdateNote:
        type: string
        title: the updater's note which explains reasoning for their decision
  v1ResolvePendingActivationRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The business ID of the pending activation
      productId:
        type: string
        title: The product ID of the pending activation
      activationId:
        type: string
        title: The ID of the pending activation
      approved:
        type: boolean
        title: True for approved, False for rejected
      rejectedReason:
        type: string
        title: Reason for a rejection (Required only if approved is false)
      accountId:
        type: string
        title: (OPTIONAL) The external account identifier of the successfully activated account
      activationDescriptor:
        type: string
        title: Activation descriptor is displayed in UI to differentiate multiple activations
      force:
        type: boolean
        title: (OPTIONAL) force indicator will allow the resulting workflow to execute even if it has previously ran to completion
    title: Request to resolve a pending activation
  v1ScheduleDeactivationRequest:
    type: object
    properties:
      activationId:
        type: string
        title: activation id of the item
      businessId:
        type: string
        title: business id of the account
      itemId:
        type: string
        title: id of the item to be deactivated
      scheduledFor:
        type: string
        format: date-time
        title: time that the item should get deactivated
  v1ScheduledProvisioningTask:
    type: object
    properties:
      activationId:
        type: string
        title: activation id of the item
      businessId:
        type: string
        title: business id of the account
      itemId:
        type: string
        title: id of the item
      scheduledProvisioningTaskStatus:
        type: string
        title: status of the scheduled task
      scheduledFor:
        type: string
        format: date-time
        title: time that the item the scheduled task should execute
      editionId:
        type: string
        title: id of the edition
  v1UnscheduleActivationRequest:
    type: object
    properties:
      activationId:
        type: string
        title: activation id of the item
  v1UnscheduleDeactivationRequest:
    type: object
    properties:
      activationId:
        type: string
        title: activation id of the item
  v1ValidationErrorCodes:
    type: string
    enum:
      - VALIDATION_ERROR_CODES_UNKNOWN
      - VALIDATION_ERROR_CODES_APP_NOT_FOUND
      - VALIDATION_ERROR_CODES_NO_ORDER_FORM_SUBMISSION_ID
      - VALIDATION_ERROR_CODES_ORDER_FORM_NOT_FOUND
      - VALIDATION_ERROR_CODES_ORDER_FORM_ALREADY_USED
      - VALIDATION_ERROR_CODES_ORDER_FORM_NOT_SUPPORTED
      - VALIDATION_ERROR_CODES_INVALID_ENTRY_URL
      - VALIDATION_ERROR_CODES_ENTRY_URL_NOT_PROVIDED
      - VALIDATION_ERROR_CODES_INVALID_DEPENDENCY
      - VALIDATION_ERROR_CODES_ALREADY_ACTIVE
      - VALIDATION_ERROR_CODES_EDITION_NOT_PROVIDED
      - VALIDATION_ERROR_CODES_EDITIONS_NOT_SUPPORTED
      - VALIDATION_ERROR_CODES_INVALID_EDITION
      - VALIDATION_ERROR_CODES_TRIAL_NOT_SUPPORTED
      - VALIDATION_ERROR_CODES_ACCOUNT_GROUP_NOT_FOUND
      - VALIDATION_ERROR_CODES_NO_COUNTRY_INFORMATION
      - VALIDATION_ERROR_CODES_UNSUPPORTED_COUNTRY
      - VALIDATION_ERROR_CODES_CANNOT_CHANGE_EDITION_OF_TRIAL
      - VALIDATION_ERROR_CODES_APP_NOT_ACTIVE
      - VALIDATION_ERROR_CODES_FEATURE_NOT_ENABLED
      - VALIDATION_ERROR_CODES_APP_IS_SUSPENDED
      - VALIDATION_ERROR_CODES_PACKAGE_NOT_FOUND
      - VALIDATION_ERROR_CODES_PARTNER_NOT_OWNER_OF_PACKAGE
    default: VALIDATION_ERROR_CODES_UNKNOWN
    title: |-
      - VALIDATION_ERROR_CODES_NO_ORDER_FORM_SUBMISSION_ID: Order Form errors
       - VALIDATION_ERROR_CODES_INVALID_DEPENDENCY: Order Dependency errors
       - VALIDATION_ERROR_CODES_EDITION_NOT_PROVIDED: Order Item Property errors
       - VALIDATION_ERROR_CODES_ACCOUNT_GROUP_NOT_FOUND: Account Group errors
       - VALIDATION_ERROR_CODES_CANNOT_CHANGE_EDITION_OF_TRIAL: Edition Change errors
       - VALIDATION_ERROR_CODES_FEATURE_NOT_ENABLED: Partner Feature errors
       - VALIDATION_ERROR_CODES_APP_IS_SUSPENDED: Order Item Property errors con't
       - VALIDATION_ERROR_CODES_PACKAGE_NOT_FOUND: Only applies to retail order items
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
