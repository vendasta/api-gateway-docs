swagger: "2.0"
info:
  title: order_fulfillment/v1/fulfillment_order.proto
  version: version not set
tags:
  - name: FulfillmentOrderService
consumes:
  - application/json
produces:
  - application/json
paths:
  /orderfulfillment.v1.FulfillmentOrderService/CreateFulfillmentOrder:
    post:
      summary: Create a fulfillment order
      operationId: FulfillmentOrderService_CreateFulfillmentOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateFulfillmentOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateFulfillmentOrderRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/DeleteFulfillmentOrder:
    post:
      summary: Delete a fulfillment order
      operationId: FulfillmentOrderService_DeleteFulfillmentOrder
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteFulfillmentOrderRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/GetFulfillmentOrder:
    post:
      summary: Retrieve a fulfillment order
      operationId: FulfillmentOrderService_GetFulfillmentOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetFulfillmentOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetFulfillmentOrderRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/GetFulfillmentOrdersForSalesOrder:
    post:
      summary: Get all fulfillment orders that are under a sales order
      operationId: FulfillmentOrderService_GetFulfillmentOrdersForSalesOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetFulfillmentOrdersForSalesOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetFulfillmentOrdersForSalesOrderRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/GetMultiBySalesOrderIds:
    post:
      summary: Get all fulfillment orders that are under a list of sales orders
      operationId: FulfillmentOrderService_GetMultiBySalesOrderIds
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiBySalesOrderIdsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiBySalesOrderIdsRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/SearchFulfillmentOrder:
    post:
      summary: Search for a fulfillment order
      operationId: FulfillmentOrderService_SearchFulfillmentOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchFulfillmentOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchFulfillmentOrderRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/SendFulfillmentOrder:
    post:
      summary: Send a fulfillment order to a user
      operationId: FulfillmentOrderService_SendFulfillmentOrder
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendFulfillmentOrderRequest'
      tags:
        - FulfillmentOrderService
  /orderfulfillment.v1.FulfillmentOrderService/UpdateFulfillmentOrder:
    post:
      summary: Update a fulfillment order
      operationId: FulfillmentOrderService_UpdateFulfillmentOrder
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateFulfillmentOrderRequest'
      tags:
        - FulfillmentOrderService
definitions:
  SalesInfoCost:
    type: object
    properties:
      billingFrequency:
        type: string
        title: Billing Frequency
      currency:
        type: string
        title: Currency
      price:
        type: string
        format: int64
        title: Price in cents
  SalesInfoOrderFormSubmission:
    type: object
    properties:
      commonFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Field'
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Field'
      created:
        type: string
        format: date-time
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AppInfo:
    type: object
    properties:
      appId:
        type: string
        title: fields related to the app the work order is for
      appName:
        type: string
  v1BusinessInfo:
    type: object
    properties:
      businessId:
        type: string
        title: fields related to the account the work order is for
      name:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      marketId:
        type: string
      partnerLogoUrl:
        type: string
      marketName:
        type: string
  v1CreateFulfillmentOrderRequest:
    type: object
    properties:
      salesOrderId:
        type: string
      businessId:
        type: string
      resellerPartnerId:
        type: string
      vendorPartnerId:
        type: string
      appId:
        type: string
  v1CreateFulfillmentOrderResponse:
    type: object
    properties:
      fulfillmentOrder:
        $ref: '#/definitions/v1FulfillmentOrder'
  v1DeleteFulfillmentOrderRequest:
    type: object
    properties:
      fulfillmentOrderId:
        type: string
  v1Field:
    type: object
    properties:
      fieldId:
        type: string
        title: Unique identifier of a custom or common field
      answer:
        type: string
        title: Response related to the question of the field_id
      fieldType:
        $ref: '#/definitions/v1FieldType'
        title: The type of field
      label:
        type: string
        title: The question for the custom or common field
      description:
        type: string
        title: The description of the field
      prefix:
        type: string
        title: For textbox fields, this string will be displayed in front of the textbox
      suffix:
        type: string
        title: For textbox fields, this string will be displayed behind the textbox
      regexValidator:
        type: string
        title: A regex string used to validate a fields answer
      regexErrorMessage:
        type: string
        title: The error message displayed if the regex_validator does not match the answer
  v1FieldType:
    type: string
    enum:
      - FIELD_TYPE_NOT_SPECIFIED
      - FIELD_TYPE_TEXT
      - FIELD_TYPE_TEXT_AREA
      - FIELD_TYPE_DROPDOWN
      - FIELD_TYPE_CHECKBOX
      - FIELD_TYPE_FILE
      - FIELD_TYPE_VBCUSER
    default: FIELD_TYPE_NOT_SPECIFIED
  v1FulfillmentFormInfo:
    type: object
    properties:
      hasForm:
        type: boolean
  v1FulfillmentOrder:
    type: object
    properties:
      fulfillmentOrderId:
        type: string
        title: The unique identifier for this fulfillment order
      salesOrderId:
        type: string
        title: The sales order that generated this fulfillment
      businessId:
        type: string
        title: The business id
      resellerPartnerId:
        type: string
        title: The channel partner id of the reseller
      vendorPartnerId:
        type: string
        title: The partner ID of the vendor doing fulfillment
      appId:
        type: string
        title: The app id
      status:
        $ref: '#/definitions/v1FulfillmentOrderStatus'
        title: The status of this fulfillment
      created:
        type: string
        format: date-time
        title: Time the fulfillment order was created
      updated:
        type: string
        format: date-time
        title: Time the fulfillment order was updated
      deleted:
        type: string
        format: date-time
        title: Time the fulfillment order was deleted
      businessInfo:
        $ref: '#/definitions/v1BusinessInfo'
        title: additional fields that will be included based on a projection filter
      resellerPartnerInfo:
        $ref: '#/definitions/v1ResellerPartnerInfo'
      appInfo:
        $ref: '#/definitions/v1AppInfo'
      salesInfo:
        $ref: '#/definitions/v1SalesInfo'
      pendingActivationInfo:
        $ref: '#/definitions/v1PendingActivationInfo'
      pendingActivationIds:
        type: array
        items:
          type: string
        title: ids of the activations associated with the fulfillment order
      fulfillmentFormInfo:
        $ref: '#/definitions/v1FulfillmentFormInfo'
        title: will be included based on the projection filter
      associatedProjects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FulfillmentOrderProjects'
  v1FulfillmentOrderProjectionFilter:
    type: object
    properties:
      includeBusinessInfo:
        type: boolean
        title: indicates if info should be included about the account group
      includeResellerPartnerInfo:
        type: boolean
        title: indicates if info should be included about the reselling partner
      includeAppInfo:
        type: boolean
        title: indicates if info should be included about the app the work order is for
      includeSalesInfo:
        type: boolean
        title: indicates if info should be included about the sales order
      includePendingActivationInfo:
        type: boolean
        title: indicates if info should be included about pending activations related to the sales order
      includeFulfillmentFormInfo:
        type: boolean
        title: indicates if info should be included about the fulfillment form
      includeProjects:
        type: boolean
        title: indicates if info should be included about the associated projects
  v1FulfillmentOrderProjects:
    type: object
    properties:
      projectId:
        type: string
        title: The unique identifier for this project
      projectName:
        type: string
        title: The name of the project
      projectStatus:
        type: string
        title: The status of the project
      projectAssigneeName:
        type: string
        title: The name of the assignee
      projectDueDate:
        type: string
        format: date-time
        title: The email of the assignee
  v1FulfillmentOrderStatus:
    type: string
    enum:
      - FULFILLMENT_ORDER_STATUS_UNSET
      - FULFILLMENT_ORDER_STATUS_DETAILS_NEEDED
      - FULFILLMENT_ORDER_STATUS_IN_REVIEW
      - FULFILLMENT_ORDER_STATUS_IN_PROGRESS
      - FULFILLMENT_ORDER_STATUS_COMPLETED
      - FULFILLMENT_ORDER_STATUS_CANCELLED
      - FULFILLMENT_ORDER_STATUS_ON_HOLD
    default: FULFILLMENT_ORDER_STATUS_UNSET
    title: |-
      - FULFILLMENT_ORDER_STATUS_DETAILS_NEEDED: Details Needed: Fulfillment Form needs to be submitted
       - FULFILLMENT_ORDER_STATUS_IN_REVIEW: In Review: Fulfillment Form has been submitted. Vendor is reviewing submission
       - FULFILLMENT_ORDER_STATUS_IN_PROGRESS: In Progress: Fulfillment Form has required info and work has begun to deliver order.
       - FULFILLMENT_ORDER_STATUS_COMPLETED: Completed: Work for the order is done and has been delivered.
       - FULFILLMENT_ORDER_STATUS_CANCELLED: Cancelled: Fulfillment has not been completed and will not be completed.
       - FULFILLMENT_ORDER_STATUS_ON_HOLD: On Hold: Fulfillment is on hold
  v1FulfillmentOrders:
    type: object
    properties:
      fulfillmentOrders:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FulfillmentOrder'
  v1GetFulfillmentOrderRequest:
    type: object
    properties:
      fulfillmentOrderId:
        type: string
      projectionFilter:
        $ref: '#/definitions/v1FulfillmentOrderProjectionFilter'
        title: projection filter to decide which additional fields to include
  v1GetFulfillmentOrderResponse:
    type: object
    properties:
      fulfillmentOrder:
        $ref: '#/definitions/v1FulfillmentOrder'
  v1GetFulfillmentOrdersForSalesOrderRequest:
    type: object
    properties:
      salesOrderId:
        type: string
        title: The sales order we wish to get work for
      cursor:
        type: string
        description: indicates to the api where to begin the results from. It should be provided from the previous response, if any.
      pageSize:
        type: string
        format: int64
        title: the number of results to retrieve
      projectionFilter:
        $ref: '#/definitions/v1FulfillmentOrderProjectionFilter'
        title: projection filter to decide which additional fields to include
      businessId:
        type: string
        title: The business id of the business the sales order belongs to
  v1GetFulfillmentOrdersForSalesOrderResponse:
    type: object
    properties:
      fulfillmentOrders:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FulfillmentOrder'
        description: list of all the Fulfillment Orders for the sales order.
      nextCursor:
        type: string
        title: The cursor to send with the next request if there are more results to be loaded
      hasMore:
        type: boolean
        title: Indicates whether or not there are more results to be loaded
      totalResults:
        type: string
        format: int64
        title: The total number of results
  v1GetMultiBySalesOrderIdsRequest:
    type: object
    properties:
      salesOrderIds:
        type: array
        items:
          type: string
        title: List of sales order ids to get fulfillment orders for
  v1GetMultiBySalesOrderIdsResponse:
    type: object
    properties:
      fulfillmentOrdersMap:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1FulfillmentOrders'
        title: Returns a map of sales order id to fulfillment orders
  v1PendingActivationInfo:
    type: object
    properties:
      activationStatuses:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1PendingActivationStatus'
        title: activation_statuses is a map of activation IDs to their statuses
  v1PendingActivationStatus:
    type: string
    enum:
      - PENDING_ACTIVATION_STATUS_NOT_SPECIFIED
      - PENDING_ACTIVATION_STATUS_PENDING
      - PENDING_ACTIVATION_STATUS_APPROVED
      - PENDING_ACTIVATION_STATUS_REJECTED
    default: PENDING_ACTIVATION_STATUS_NOT_SPECIFIED
  v1ResellerPartnerInfo:
    type: object
    properties:
      partnerId:
        type: string
        title: fields related to the reselling partner the work order is for
      name:
        type: string
  v1SalesInfo:
    type: object
    properties:
      cost:
        $ref: '#/definitions/SalesInfoCost'
        title: Wholesale cost for the order item
      submittedBy:
        type: string
        title: User who submitted the order
      orderForm:
        $ref: '#/definitions/SalesInfoOrderFormSubmission'
        description: Submitted order form for the sales order.
  v1SearchFulfillmentOrderRequest:
    type: object
    properties:
      cursor:
        type: string
        description: indicates to the api where to begin the results from. It should be provided from the previous response, if any.
      pageSize:
        type: string
        format: int64
        title: the number of results to retrieve
      salesOrderIds:
        type: array
        items:
          type: string
        title: list of sales order ids to search on
      businessIds:
        type: array
        items:
          type: string
        title: list of business ids to search on
      resellerPartnerIds:
        type: array
        items:
          type: string
        title: list of reseller partner ids to search on
      vendorPartnerIds:
        type: array
        items:
          type: string
        title: list of vendor partner ids to search on
      appIds:
        type: array
        items:
          type: string
        title: list of app ids to search on
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1FulfillmentOrderStatus'
        title: list of Fulfillment Statuses to search on
      timeOptions:
        $ref: '#/definitions/v1SearchFulfillmentOrderTimeOptions'
        title: determines which time field to search on
      sortField:
        type: string
        title: which field to sort on. Defaults to creation date
      sortDirection:
        $ref: '#/definitions/v1SortDirection'
        title: which direction to sort
      projectionFilter:
        $ref: '#/definitions/v1FulfillmentOrderProjectionFilter'
        title: projection filter to decide which additional fields to include
      activationIds:
        type: array
        items:
          type: string
        title: The Activation IDs to search on
      excludeAppIds:
        type: boolean
        title: indicator to treat any provided app ids as excluded
      excludeResellerIds:
        type: boolean
        title: indicator to treat any provided reseller ids as excluded
      hasForm:
        type: boolean
        title: determines if the api call returns all FOs or only the ones that have forms
      fulfillmentOrderIds:
        type: array
        items:
          type: string
        title: list of fulfillment order IDs to search on
  v1SearchFulfillmentOrderResponse:
    type: object
    properties:
      fulfillmentOrders:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FulfillmentOrder'
        title: list containing results
      nextCursor:
        type: string
        title: The cursor to send with the next request if there are more results to be loaded
      hasMore:
        type: boolean
        title: Indicates whether or not there are more results to be loaded
      totalResults:
        type: string
        format: int64
        title: The total number of results
  v1SearchFulfillmentOrderTimeOptions:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      timeField:
        $ref: '#/definitions/v1TimeField'
  v1SendFulfillmentOrderRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The business id of the account the order is for
      salesOrderId:
        type: string
        title: The sales order we wish to share fulfillment orders for
      userId:
        type: string
        title: The user we wish to share fulfillment orders with
      itemNames:
        type: array
        items:
          type: string
        title: The item names that the fulfillment orders are for
      message:
        type: string
        title: (optional) The message we wish to send with the fulfillment orders
  v1SortDirection:
    type: string
    enum:
      - SORT_DIRECTION_UNSET
      - SORT_DIRECTION_ASCENDING
      - SORT_DIRECTION_DESCENDING
    default: SORT_DIRECTION_UNSET
  v1TimeField:
    type: string
    enum:
      - TIME_FIELD_UNSET
      - TIME_FIELD_CREATED
      - TIME_FIELD_UPDATED
      - TIME_FIELD_DELETED
    default: TIME_FIELD_UNSET
  v1UpdateFulfillmentOrderRequest:
    type: object
    properties:
      fulfillmentOrderId:
        type: string
      status:
        $ref: '#/definitions/v1FulfillmentOrderStatus'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
