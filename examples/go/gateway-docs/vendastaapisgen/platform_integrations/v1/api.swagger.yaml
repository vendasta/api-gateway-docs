swagger: "2.0"
info:
  title: platform_integrations/v1/api.proto
  version: version not set
tags:
  - name: IntegrationMarketingService
  - name: IntegrationManagementService
  - name: ConnectionsService
  - name: ProxyService
consumes:
  - application/json
produces:
  - application/json
paths:
  /grpc/platform_integrations.v1.IntegrationManagementService/Create:
    post:
      operationId: IntegrationManagementService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateIntegrationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateIntegrationRequest'
      tags:
        - IntegrationManagementService
  /grpc/platform_integrations.v1.IntegrationManagementService/Delete:
    post:
      operationId: IntegrationManagementService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteIntegrationRequest'
      tags:
        - IntegrationManagementService
  /grpc/platform_integrations.v1.IntegrationManagementService/EmitEvent:
    post:
      summary: |-
        EmitEvent allows vendors to emit event broker events to be consumed by automations. There is manual work to be done before a vendor can use this.
        https://vendasta.jira.com/wiki/spaces/AUTO/pages/2293989386/How+do+Vendor+triggers+work
      operationId: IntegrationManagementService_EmitEvent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EmitEventResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EmitEventRequest'
      tags:
        - IntegrationManagementService
  /grpc/platform_integrations.v1.IntegrationManagementService/Get:
    post:
      operationId: IntegrationManagementService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetIntegrationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetIntegrationRequest'
      tags:
        - IntegrationManagementService
  /grpc/platform_integrations.v1.IntegrationManagementService/List:
    post:
      operationId: IntegrationManagementService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListIntegrationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListIntegrationRequest'
      tags:
        - IntegrationManagementService
  /grpc/platform_integrations.v1.IntegrationManagementService/Update:
    post:
      operationId: IntegrationManagementService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateIntegrationRequest'
      tags:
        - IntegrationManagementService
  /platform_integrations.v1.ConnectionsService/Delete:
    post:
      operationId: ConnectionsService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteConnectionRequest'
      tags:
        - ConnectionsService
  /platform_integrations.v1.ConnectionsService/GetConnectionData:
    post:
      operationId: ConnectionsService_GetConnectionData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConnectionDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetConnectionDataRequest'
      tags:
        - ConnectionsService
  /platform_integrations.v1.ConnectionsService/List:
    post:
      operationId: ConnectionsService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListConnectionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListConnectionRequest'
      tags:
        - ConnectionsService
  /platform_integrations.v1.ConnectionsService/Update:
    post:
      operationId: ConnectionsService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateConnectionRequest'
      tags:
        - ConnectionsService
  /platform_integrations.v1.IntegrationMarketingService/Get:
    post:
      operationId: IntegrationMarketingService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IntegrationMarketingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetIntegrationMarketingRequest'
      tags:
        - IntegrationMarketingService
  /platform_integrations.v1.IntegrationMarketingService/GetMulti:
    post:
      operationId: IntegrationMarketingService_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiIntegrationMarketingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiIntegrationMarketingRequest'
      tags:
        - IntegrationMarketingService
  /platform_integrations.v1.IntegrationMarketingService/List:
    post:
      operationId: IntegrationMarketingService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListIntegrationMarketingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListIntegrationMarketingRequest'
      tags:
        - IntegrationMarketingService
  /platform_integrations.v1.ProxyService/CallIntegrationEndpoint:
    post:
      summary: |-
        CallIntegrationEndpoint is used to call an endpoint on the integrated system
        using the credentials stored on the connection.
      description: Example usage is an automation action that calls an endpoint on the integrated system
      operationId: ProxyService_CallIntegrationEndpoint
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CallIntegrationEndpointResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CallIntegrationEndpointRequest'
      tags:
        - ProxyService
  /platform_integrations.v1.ProxyService/CallVendastaEndpoint:
    post:
      summary: |-
        CallVendastaEndpoint is used to call an endpoint on the vendasta platform
        It will be used by vendors to modify data within the connected namespace
      operationId: ProxyService_CallVendastaEndpoint
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CallVendastaEndpointResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CallVendastaEndpointRequest'
      tags:
        - ProxyService
  /platform_integrations/v1/ConnectionsService/Create:
    post:
      operationId: ConnectionsService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateConnectionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateConnectionRequest'
      tags:
        - ConnectionsService
  /platform_integrations/v1/ConnectionsService/Get/{connectionId}:
    get:
      operationId: ConnectionsService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetConnectionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: connectionId
          in: path
          required: true
          type: string
        - name: namespace
          in: query
          required: false
          type: string
        - name: filters.context
          description: Optional. connections could be filtered based one of these attribute.
          in: query
          required: false
          type: string
          enum:
            - PI_CONTEXT_UNSET
            - PI_CONTEXT_PARTNER
            - PI_CONTEXT_SMB
          default: PI_CONTEXT_UNSET
        - name: filters.externalId
          in: query
          required: false
          type: string
        - name: filters.integrationId
          in: query
          required: false
          type: string
        - name: refreshIfOlderThanMinutes
          in: query
          required: false
          type: string
          format: int64
      tags:
        - ConnectionsService
definitions:
  platform_integrationsv1FieldOptions:
    type: object
    properties:
      label:
        type: string
        title: The primary text to display to the user
      value:
        title: value The value to use when this option is selected
    title: FieldOptions represents a single item in a dropdown or radio list
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1APIRequest:
    type: object
    properties:
      method:
        $ref: '#/definitions/v1HTTPMethod'
      path:
        type: string
      query:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1HTTPParam'
      headers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1HTTPParam'
      body:
        type: string
        format: byte
    title: |-
      APIRequest is the request to be proxied to the specified system
      The request parts will be processed as go templates allowing for values from the connection to be inserted
      For example you may use
      {.connection.custom_field.some_field}
      {.connection.namespace}
  v1APIResponse:
    type: object
    properties:
      headers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1HTTPParam'
      statusCode:
        type: integer
        format: int32
      body:
        type: string
        format: byte
  v1ActionType:
    type: string
    enum:
      - ACTION_TYPE_UNSPECIFIED
      - ACTION_TYPE_CONTINUE
      - ACTION_TYPE_CANCEL
      - ACTION_TYPE_ADD_CONNECTION
      - ACTION_TYPE_SEND_REQUEST
      - ACTION_TYPE_COPY
      - ACTION_TYPE_SAVE
      - ACTION_TYPE_UNLOCK
      - ACTION_TYPE_EDIT
    default: ACTION_TYPE_UNSPECIFIED
    description: |-
      - ACTION_TYPE_CONTINUE: for AUTH2 based integrations, preconnect form buttons
       - ACTION_TYPE_ADD_CONNECTION: for gingr integration, preconnect form has add connection button
       - ACTION_TYPE_SEND_REQUEST: for support based integrations, preconnect form has send request button
       - ACTION_TYPE_COPY: for gingr integration, config page has copy button
       - ACTION_TYPE_SAVE: save button needs for legacy based connections
       - ACTION_TYPE_UNLOCK: unlock button for automated review request
       - ACTION_TYPE_EDIT: for text type sync setting like protractor
    title: added enum for possible action type for sync setting
  v1Actions:
    type: object
    properties:
      label:
        type: string
        title: label of the button
      actionType:
        $ref: '#/definitions/v1ActionType'
        title: type of the action like continue, cancel, send request, copy, save
    title: actions for sync setting
  v1AdditionalInfo:
    type: object
    properties:
      provider:
        type: string
      categories:
        type: array
        items:
          type: string
      websites:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1WebsiteInfo'
      requirements:
        type: array
        items:
          type: string
      resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ResourceInfo'
      businesses:
        type: array
        items:
          type: string
      billing:
        type: array
        items:
          type: string
      productIds:
        type: array
        items:
          type: string
        title: |-
          Product id which are available in the partner center marketplace and ID could change based on the
          environment the user is logged in (DEMO/PROD). Ex. RM, SM, MP-94072eXXXXXXXXXXXXXXd7ab4fc7a7e8
      worksWith:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FieldConfig'
        title: |-
          The works_with section can be used to display the sections that are associated with integrations.
          Ex: GoogleMeet : {Business:["My Meetings"]}, QuickBooks : {Customers:["contacts","companies"]} , GoogleSearchConsole : {Reports:"Executive reports"}
          This field can be used instead of the existing businesses field to support different, multiple sections as key value pairs utilizing the required fields in FieldConfig type
  v1CallIntegrationEndpointRequest:
    type: object
    properties:
      connection:
        $ref: '#/definitions/v1ConnectionIdentifier'
      request:
        $ref: '#/definitions/v1APIRequest'
  v1CallIntegrationEndpointResponse:
    type: object
    properties:
      response:
        $ref: '#/definitions/v1APIResponse'
      requestId:
        type: string
        title: |-
          The ID assigned to the request by the platform
          It can be used to lookup the request in the logs
  v1CallVendastaEndpointRequest:
    type: object
    properties:
      connection:
        $ref: '#/definitions/v1ConnectionIdentifier'
      request:
        $ref: '#/definitions/v1APIRequest'
  v1CallVendastaEndpointResponse:
    type: object
    properties:
      response:
        $ref: '#/definitions/v1APIResponse'
      requestId:
        type: string
        title: |-
          The ID assigned to the request by the platform
          It can be used to lookup the request in the logs
  v1ConnectionIdentifier:
    type: object
    properties:
      integrationId:
        type: string
        title: The UUID of an integration configuration record
      integrationType:
        type: string
        title: |-
          The type of the integration configuration record. Ex: "ShopMonkey"
          Some integrations have multiple records to represent different configurations
          Using the code allows all configurations to be checked however may result in multiple connections
      connectionId:
        type: string
        title: The UUID of a connection record
      externalId:
        type: string
        description: |-
          The vendor supplied id for the connection to the integration.
          They are unique per integration.
      namespace:
        type: string
        description: The namespace that this connection is for, the current options are an account group id or partner id.
  v1ConnectionMessage:
    type: object
    properties:
      severity:
        $ref: '#/definitions/v1Severity'
        title: INFO, WARNING, ERROR
      title:
        type: string
      message:
        type: string
      ctaText:
        type: string
        title: Text to display on a call to action button
      ctaUrl:
        type: string
        title: Page or site to navigate to when the call to action button is clicked
  v1ConnectionMethods:
    type: string
    enum:
      - UNSPECIFIED
      - OAUTH2
      - APIKEY
      - VENDOR_MANAGED
      - LEGACY_OAUTH
    default: UNSPECIFIED
  v1ConnectionResponse:
    type: object
    properties:
      connectionId:
        type: string
      namespace:
        type: string
      integrationId:
        type: string
      userId:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/v1ConnectionStatus'
      label:
        type: string
      externalId:
        type: string
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CustomFields'
      statusLastUpdated:
        type: string
        format: date-time
      dataLastReceived:
        type: string
        format: date-time
      context:
        $ref: '#/definitions/v1SupportedContexts'
      connectionMessages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ConnectionMessage'
  v1ConnectionStatus:
    type: string
    enum:
      - UNSPECIFIED_STATUS
      - PRECONNECTED
      - CONNECTED
      - DISCONNECTED
      - DELETED
    default: UNSPECIFIED_STATUS
  v1CreateConnectionRequest:
    type: object
    properties:
      namespace:
        type: string
      integrationId:
        type: string
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CustomFields'
      context:
        $ref: '#/definitions/v1SupportedContexts'
  v1CreateConnectionResponse:
    type: object
    properties:
      connectionId:
        type: string
  v1CreateIntegrationRequest:
    type: object
    properties:
      ownerId:
        type: string
      logo:
        type: string
      displayName:
        type: string
      description:
        type: string
      integrationType:
        type: string
      connectionMethod:
        $ref: '#/definitions/v1ConnectionMethods'
      clientId:
        type: string
      clientSecret:
        type: string
      apiKey:
        type: string
      authenticationUrl:
        type: string
      tokenUrl:
        type: string
      longDescription:
        type: string
      additionalInfo:
        $ref: '#/definitions/v1AdditionalInfo'
      baseUrl:
        type: string
      maxConnections:
        type: string
        format: int64
      webhookVerifierToken:
        type: string
      supportedContexts:
        type: array
        items:
          $ref: '#/definitions/v1SupportedContexts'
      fieldExtensionIds:
        type: array
        items:
          type: string
        title: Contains the ID of a CRM field extension that should be automatically enabled for the namespace when a connection to this integration is created
      preconnectFormFields:
        $ref: '#/definitions/v1FormConfig'
        title: sync setting details of preconnect form for the integration
      configPageFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FormConfig'
        title: sync setting details of config page for the connection
      instructions:
        $ref: '#/definitions/v1FormConfig'
        title: instructions displayed on the config page when the connection is in preconnected status
    title: added fields to save config for the integration
  v1CreateIntegrationResponse:
    type: object
    properties:
      integrationId:
        type: string
  v1CustomFields:
    type: object
    properties:
      label:
        type: string
      value:
        type: string
  v1DeleteConnectionRequest:
    type: object
    properties:
      connectionId:
        type: string
      namespace:
        type: string
  v1DeleteIntegrationRequest:
    type: object
    properties:
      integrationId:
        type: string
      namespace:
        type: string
  v1EmitEventRequest:
    type: object
    properties:
      topic:
        type: string
        description: This is not the event broker event topic. It is a sub topic that the vendor will use as their "topic" for the event.
      namespace:
        type: string
        description: |-
          The namespace that this event is for, the current options are an account group id or partner id. Any string is accepted here
          we do not validate that it refers to an actual account group or partner.
      payload:
        type: object
      eventId:
        type: string
        title: |-
          Optional: An ID to identify this as a unique event. Idempotency is calculated as a combination of the event id and the emittedAt time.
          if event_id is not provided a UUID will be generated instead
      emittedAt:
        type: string
        format: date-time
        description: |-
          Optional: The time this event was emitted at. Is used along with the eventID to calculate idempotency to stop duplicate events.
          If provided, it must be a value in the past, after the year 2000.
      ownerId:
        type: string
        description: The integration owner of the id. Should be the vendor id.
  v1EmitEventResponse:
    type: object
    properties:
      eventId:
        type: string
        title: |-
          The ID of the event that was emitted. It is returned because event_id is optional on the intake so vendors might want to
          have access to the generated id
  v1FieldConfig:
    type: object
    properties:
      id:
        type: string
        title: id of the setting
      label:
        type: string
        title: label of the setting
      placeHolder:
        type: string
        title: place holder for the inputbox for API key based integration
      hintText:
        type: string
        title: description for the setting, for special case jobber "select the trigger to sync customer data:"
      fieldType:
        $ref: '#/definitions/v1FieldType'
        title: type of the setting like checkbox, toggle, password, text, radio ...etc
      required:
        type: boolean
        title: for required field
      dependents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FieldConfig'
        title: 'dependents for special case like jobber, dependents: [{id: ''triggerIsClosedJob'', required: false, type: ''radio'',value: ''false''}]'
      options:
        type: array
        items:
          type: object
          $ref: '#/definitions/platform_integrationsv1FieldOptions'
        title: 'options for the radio button like jobber, options: [{label: ''When a job is closed'', value: ''true''}, {label: ''When a visit is completed'', value: ''false''}]'
      actions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Actions'
        title: button actions of the settings of config page
      url:
        type: string
        title: url in instruction of the config page
      icon:
        type: string
        title: lock icon for sync setting like automated review request, url icon for instruction, eye icon for password
      defaultValue:
        description: default_value The value to use when there is no connection record or the connection record does not have a custom field with this field's id.
      hidden:
        type: boolean
        description: flag to determine whether we need to show the field in the UI or not.
      fieldScopes:
        type: array
        items:
          $ref: '#/definitions/v1FieldScope'
        description: fieldScope is the allowed scopes that can view the field in the connection settings page.
      readonly:
        type: boolean
        description: Readonly allows to enable the password field editable or readonly.
      writeScopes:
        type: array
        items:
          $ref: '#/definitions/v1FieldScope'
        description: writeScope is the allowed scope that can allow edit access to a field in the connection settings page.
    title: added FieldConfig for storing settings of the integration
  v1FieldScope:
    type: string
    enum:
      - INTEGRATION_SUPPORT
      - NAMESPACE_ADMINS
      - CONNECTING_USER
    default: INTEGRATION_SUPPORT
    description: |-
      - INTEGRATION_SUPPORT: Allows only the support team to have the access
       - NAMESPACE_ADMINS: Allows the namespace admins such as partner admins, sales people & SMB users to have the access
       - CONNECTING_USER: Allows the user who established the connection to have the acess
    title: |-
      FieldScope defines scopes for which the field will be visible
      using enum here because in future we might add more scope types and expand the usecase beyond the fields
  v1FieldType:
    type: string
    enum:
      - FIELD_TYPE_UNSPECIFIED
      - FIELD_TYPE_CHECKBOX
      - FIELD_TYPE_TOGGLE
      - FIELD_TYPE_PASSWORD
      - FIELD_TYPE_TEXT
      - FIELD_TYPE_RADIO
      - FIELD_TYPE_SELECT
      - FIELD_TYPE_LABEL
      - FIELD_TYPE_CHIPLIST
      - FIELD_TYPE_URL
    default: FIELD_TYPE_UNSPECIFIED
    description: |-
      FieldType defines options for how the field will be rendered on the forms.

       - FIELD_TYPE_CHECKBOX: for checkbox sync setting
       - FIELD_TYPE_TOGGLE: for toggle sync setting
       - FIELD_TYPE_PASSWORD: for password sync setting
       - FIELD_TYPE_TEXT: for input_box sync setting
       - FIELD_TYPE_RADIO: for radiobutton sync setting
       - FIELD_TYPE_SELECT: for dropdown sync setting
       - FIELD_TYPE_LABEL: for the instructions label ,as we need FieldType for instructions which holds only label.
       - FIELD_TYPE_CHIPLIST: for chips sync setting
       - FIELD_TYPE_URL: for url of the instructions
  v1FormConfig:
    type: object
    properties:
      title:
        type: string
        title: title of the form
      description:
        type: string
        title: for description of the  preconnect form
      fields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FieldConfig'
        title: list of the sync settings
      actions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Actions'
        title: for actions of the preconnect form and config page
    title: added FormConfig for storing title, description, fieldConfig, actions, urls of preconnect form and config page
  v1GetConnectionDataRequest:
    type: object
    properties:
      connectionId:
        type: string
  v1GetConnectionDataResponse:
    type: object
    properties:
      connectionId:
        type: string
      namespace:
        type: string
      integrationId:
        type: string
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CustomFields'
      status:
        $ref: '#/definitions/v1ConnectionStatus'
      statusLastUpdated:
        type: string
        format: date-time
      dataLastReceived:
        type: string
        format: date-time
  v1GetConnectionRequestFilters:
    type: object
    properties:
      context:
        $ref: '#/definitions/v1SupportedContexts'
        description: Optional. connections could be filtered based one of these attribute.
      externalId:
        type: string
      integrationId:
        type: string
  v1GetConnectionResponse:
    type: object
    properties:
      connectionId:
        type: string
      namespace:
        type: string
      integrationId:
        type: string
      userId:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/v1ConnectionStatus'
      label:
        type: string
      externalId:
        type: string
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CustomFields'
      context:
        $ref: '#/definitions/v1SupportedContexts'
      statusLastUpdated:
        type: string
        format: date-time
      dataLastReceived:
        type: string
        format: date-time
      connectionMessages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ConnectionMessage'
  v1GetIntegrationMarketingRequest:
    type: object
    properties:
      integrationId:
        type: string
      namespace:
        type: string
  v1GetIntegrationRequest:
    type: object
    properties:
      integrationId:
        type: string
  v1GetIntegrationResponse:
    type: object
    properties:
      integrationId:
        type: string
      ownerId:
        type: string
      logo:
        type: string
      displayName:
        type: string
      description:
        type: string
      integrationType:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
      apiKey:
        type: string
      authenticationUrl:
        type: string
      tokenUrl:
        type: string
      connectionMethod:
        $ref: '#/definitions/v1ConnectionMethods'
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      longDescription:
        type: string
      additionalInfo:
        $ref: '#/definitions/v1AdditionalInfo'
      baseUrl:
        type: string
      maxConnections:
        type: string
        format: int64
      webhookVerifierToken:
        type: string
      supportedContexts:
        type: array
        items:
          $ref: '#/definitions/v1SupportedContexts'
      fieldExtensionIds:
        type: array
        items:
          type: string
        title: Contains the ID of a CRM field extension that should be automatically enabled for the namespace when a connection to this integration is created
      preconnectFormFields:
        $ref: '#/definitions/v1FormConfig'
        title: sync setting details of preconnect form for the integration
      configPageFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FormConfig'
        title: sync setting details of config page for the connection
      instructions:
        $ref: '#/definitions/v1FormConfig'
        title: instructions displayed on the config page when the connection is in preconnected status
  v1GetMultiIntegrationMarketingRequest:
    type: object
    properties:
      integrationIds:
        type: array
        items:
          type: string
  v1GetMultiIntegrationMarketingResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1IntegrationMarketingResponse'
  v1HTTPMethod:
    type: string
    enum:
      - UNDEFINED
      - POST
      - GET
      - PUT
      - DELETE
      - PATCH
    default: UNDEFINED
  v1HTTPParam:
    type: object
    properties:
      key:
        type: string
      values:
        type: array
        items:
          type: string
  v1IntegrationMarketingResponse:
    type: object
    properties:
      integrationId:
        type: string
      logo:
        type: string
      displayName:
        type: string
      description:
        type: string
      integrationType:
        type: string
      status:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      longDescription:
        type: string
      additionalInfo:
        $ref: '#/definitions/v1AdditionalInfo'
      maxConnections:
        type: string
        format: int64
      connectionMethod:
        $ref: '#/definitions/v1ConnectionMethods'
      supportedContexts:
        type: array
        items:
          $ref: '#/definitions/v1SupportedContexts'
      preconnectFormFields:
        $ref: '#/definitions/v1FormConfig'
        title: sync setting details of preconnect form for the integration
      configPageFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FormConfig'
        title: sync setting details of config page for the connection
      instructions:
        $ref: '#/definitions/v1FormConfig'
        title: instructions displayed on the config page when the connection is in preconnected status
  v1IntegrationsFilters:
    type: object
    properties:
      displayName:
        type: string
  v1ListConnectionRequest:
    type: object
    properties:
      namespace:
        type: string
      pagingOptions:
        $ref: '#/definitions/vendastatypesPagedRequestOptions'
      filters:
        $ref: '#/definitions/v1ListConnectionRequestFilters'
  v1ListConnectionRequestFilters:
    type: object
    properties:
      context:
        $ref: '#/definitions/v1SupportedContexts'
        description: Optional. connections could be filtered based one of these attribute.
      externalId:
        type: string
      integrationId:
        type: string
  v1ListConnectionResponse:
    type: object
    properties:
      connections:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ConnectionResponse'
      pagingMetadata:
        $ref: '#/definitions/vendastatypesPagedResponseMetadata'
  v1ListIntegrationMarketingRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/vendastatypesPagedRequestOptions'
      filters:
        $ref: '#/definitions/v1IntegrationsFilters'
      supportedContexts:
        $ref: '#/definitions/v1SupportedContexts'
  v1ListIntegrationMarketingResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1IntegrationMarketingResponse'
      pagingMetadata:
        $ref: '#/definitions/vendastatypesPagedResponseMetadata'
  v1ListIntegrationRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/vendastatypesPagedRequestOptions'
      filters:
        $ref: '#/definitions/v1IntegrationsFilters'
  v1ListIntegrationResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GetIntegrationResponse'
      pagingMetadata:
        $ref: '#/definitions/vendastatypesPagedResponseMetadata'
  v1ResourceInfo:
    type: object
    properties:
      resourceName:
        type: string
      resourceUrl:
        type: string
  v1Severity:
    type: string
    enum:
      - UNSPECIFIED_SEVERITY
      - INFO
      - WARNING
      - ERROR
    default: UNSPECIFIED_SEVERITY
  v1SupportedContexts:
    type: string
    enum:
      - PI_CONTEXT_UNSET
      - PI_CONTEXT_PARTNER
      - PI_CONTEXT_SMB
    default: PI_CONTEXT_UNSET
  v1UpdateConnectionRequest:
    type: object
    properties:
      connectionId:
        type: string
      namespace:
        type: string
      updateFields:
        $ref: '#/definitions/v1UpdateConnectionRequestUpdateFields'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpdateConnectionRequestUpdateFields:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1ConnectionStatus'
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CustomFields'
      label:
        type: string
      context:
        $ref: '#/definitions/v1SupportedContexts'
  v1UpdateIntegrationRequest:
    type: object
    properties:
      integrationId:
        type: string
      updateFields:
        $ref: '#/definitions/v1UpdateIntegrationRequestUpdateFields'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpdateIntegrationRequestUpdateFields:
    type: object
    properties:
      logo:
        type: string
      displayName:
        type: string
      description:
        type: string
      integrationType:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
      apiKey:
        type: string
      connectionMethod:
        $ref: '#/definitions/v1ConnectionMethods'
      authenticationUrl:
        type: string
      tokenUrl:
        type: string
      longDescription:
        type: string
      additionalInfo:
        $ref: '#/definitions/v1AdditionalInfo'
      baseUrl:
        type: string
      maxConnections:
        type: string
        format: int64
      webhookVerifierToken:
        type: string
      supportedContexts:
        type: array
        items:
          $ref: '#/definitions/v1SupportedContexts'
      ownerId:
        type: string
      fieldExtensionIds:
        type: array
        items:
          type: string
        title: Contains the ID of a CRM field extension that should be automatically enabled for the namespace when a connection to this integration is created
      preconnectFormFields:
        $ref: '#/definitions/v1FormConfig'
        title: sync setting details of preconnect form for the integration
      configPageFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1FormConfig'
        title: sync setting details of config page for the connection
      instructions:
        $ref: '#/definitions/v1FormConfig'
        title: instructions displayed on the config page when the connection is in preconnected status
  v1WebsiteInfo:
    type: object
    properties:
      siteName:
        type: string
      siteUrl:
        type: string
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
  vendastatypesPagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  vendastatypesPagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: The total number of results. This is not supported on all paged apis and will be 0 if it is not supported
