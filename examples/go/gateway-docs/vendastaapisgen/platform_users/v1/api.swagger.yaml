swagger: "2.0"
info:
  title: platform_users/v1/api.proto
  version: version not set
tags:
  - name: PermissionsService
  - name: SMBAssociationsService
  - name: ViewAccessService
  - name: UsersService
consumes:
  - application/json
produces:
  - application/json
paths:
  /platformusers.v1.PermissionsService/GetPermissions:
    post:
      operationId: PermissionsService_GetPermissions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPermissionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetPermissionsRequest'
      tags:
        - PermissionsService
  /platformusers.v1.PermissionsService/UpdatePermissions:
    post:
      operationId: PermissionsService_UpdatePermissions
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdatePermissionsRequest'
      tags:
        - PermissionsService
  /platformusers.v1.SMBAssociationsService/ListAssociatedUsers:
    post:
      operationId: SMBAssociationsService_ListAssociatedUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAssociatedUsersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAssociatedUsersRequest'
      tags:
        - SMBAssociationsService
  /platformusers.v1.UsersService/GetUserIdentifiers:
    post:
      operationId: UsersService_GetUserIdentifiers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUserIdentifiersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetUserIdentifiersRequest'
      tags:
        - UsersService
  /platformusers.v1.UsersService/ListNamespaces:
    post:
      operationId: UsersService_ListNamespaces
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListNamespacesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListNamespacesRequest'
      tags:
        - UsersService
  /platformusers.v1.ViewAccessService/GetRestrictions:
    post:
      operationId: ViewAccessService_GetRestrictions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRestrictionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetRestrictionsRequest'
      tags:
        - ViewAccessService
  /platformusers.v1.ViewAccessService/HasViewAccess:
    post:
      operationId: ViewAccessService_HasViewAccess
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HasViewAccessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1HasViewAccessRequest'
      tags:
        - ViewAccessService
definitions:
  GetRestrictionsResponseRestriction:
    type: object
    properties:
      viewId:
        type: string
      partnerId:
        type: string
      groupId:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetRestrictionsResponseRestrictionValue'
      ownerId:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetRestrictionsResponseRestrictionValue'
  GetRestrictionsResponseRestrictionValue:
    type: object
    properties:
      stringValue:
        type: string
      other:
        $ref: '#/definitions/v1SpecialRestrictedValue'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1GetPermissionsRequest:
    type: object
    properties:
      partnerId:
        type: string
      userId:
        type: string
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1GetPermissionsResponse:
    type: object
    properties:
      permissions:
        $ref: '#/definitions/v1Permissions'
  v1GetRestrictionsRequest:
    type: object
    properties:
      viewId:
        type: array
        items:
          type: string
  v1GetRestrictionsResponse:
    type: object
    properties:
      restrictions:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetRestrictionsResponseRestriction'
  v1GetUserIdentifiersRequest:
    type: object
    properties:
      namespace:
        type: string
      namespaceContext:
        $ref: '#/definitions/v1NamespaceContext'
      email:
        type: array
        items:
          type: string
  v1GetUserIdentifiersResponse:
    type: object
    properties:
      userIdentifiers:
        type: array
        items:
          type: string
        title: Empty string means the user does not exist in the namespace
  v1HasViewAccessRequest:
    type: object
    properties:
      viewIds:
        type: array
        items:
          type: string
      partnerId:
        type: string
        title: Or namespace
      marketId:
        type: string
        title: Or group ID
      ownerId:
        type: string
  v1HasViewAccessResponse:
    type: object
    properties:
      access:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1HasViewAccessResponseAccess'
  v1HasViewAccessResponseAccess:
    type: object
    properties:
      viewId:
        type: string
      hasAccess:
        type: boolean
  v1ListAssociatedUsersRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The partner id the users belong to
      accountId:
        type: string
        title: The account identifier the users are associated with
      pagingOptions:
        $ref: '#/definitions/vendastatypesPagedRequestOptions'
        title: The paging options to use for the request
  v1ListAssociatedUsersResponse:
    type: object
    properties:
      associations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserAssociations'
        title: The user associations
      pagingMetadata:
        $ref: '#/definitions/vendastatypesPagedResponseMetadata'
        title: The paging metadata
  v1ListNamespacesRequest:
    type: object
    properties:
      email:
        type: string
  v1ListNamespacesResponse:
    type: object
    properties:
      namespaces:
        type: array
        items:
          type: string
        title: The namespaces that the users with the given email address are in
  v1Namespace:
    type: object
    properties:
      namespaceId:
        type: string
        description: namespace_id is the namespace string, like a partner ID "ABC" or and an account group "AG-B5QCG7MXXN".
      namespaceType:
        type: string
        description: namespace_type is the type of namespace, like PARTNER or ACCOUNT_GROUP.
  v1NamespaceContext:
    type: string
    enum:
      - NAMESPACE_CONTEXT_INVALID
      - NAMESPACE_CONTEXT_PARTNER
      - NAMESPACE_CONTEXT_ACCOUNT_GROUP
    default: NAMESPACE_CONTEXT_INVALID
  v1Permissions:
    type: object
    properties:
      partnerId:
        type: string
      userId:
        type: string
      namespace:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Namespace'
      contacts:
        $ref: '#/definitions/v1Resource'
      activities:
        $ref: '#/definitions/v1Resource'
      companies:
        $ref: '#/definitions/v1Resource'
      restrictedToMarketId:
        type: string
      opportunities:
        $ref: '#/definitions/v1Resource'
  v1Resource:
    type: object
    properties:
      readScope:
        $ref: '#/definitions/v1ResourceScope'
      writeScope:
        $ref: '#/definitions/v1ResourceScope'
  v1ResourceScope:
    type: string
    enum:
      - RESOURCE_SCOPE_INVALID
      - RESOURCE_SCOPE_NONE
      - RESOURCE_SCOPE_OWN
      - RESOURCE_SCOPE_OWN_UNOWNED
      - RESOURCE_SCOPE_ALL
    default: RESOURCE_SCOPE_INVALID
  v1SpecialRestrictedValue:
    type: string
    enum:
      - INVALID
      - EMPTY
      - ALL
    default: INVALID
  v1UpdatePermissionsRequest:
    type: object
    properties:
      permissions:
        $ref: '#/definitions/v1Permissions'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UserAssociations:
    type: object
    properties:
      userId:
        type: string
        title: The user identifiers the account is associated with
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
  vendastatypesPagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  vendastatypesPagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: The total number of results. This is not supported on all paged apis and will be 0 if it is not supported
