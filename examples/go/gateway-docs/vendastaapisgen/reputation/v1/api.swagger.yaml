swagger: "2.0"
info:
  title: reputation/v1/api.proto
  version: version not set
tags:
  - name: ListingService
  - name: SourceService
  - name: ReviewService
  - name: ReviewResponseTemplateService
  - name: ConciergeReviewResponseService
  - name: ReviewRequestService
  - name: LimitService
  - name: AccountService
  - name: ReviewWidgetService
  - name: ReviewWidgetUsageService
  - name: NetPromoterScoreService
  - name: WhiteLabelDomainService
consumes:
  - application/json
produces:
  - application/json
paths:
  /reputation.v1.AccountService/GetSMSEnabled:
    post:
      operationId: AccountService_GetSMSEnabled
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSMSEnabledResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSMSEnabledRequest'
      tags:
        - AccountService
  /reputation.v1.ConciergeReviewResponseService/ApproveReviewResponse:
    post:
      summary: Approve the review response submitted by an agent
      operationId: ConciergeReviewResponseService_ApproveReviewResponse
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ApproveReviewResponseRequest'
      tags:
        - ConciergeReviewResponseService
  /reputation.v1.ConciergeReviewResponseService/GetReviewResponse:
    post:
      summary: Get a review response submitted by an agent
      operationId: ConciergeReviewResponseService_GetReviewResponse
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewResponseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewResponseRequest'
      tags:
        - ConciergeReviewResponseService
  /reputation.v1.ConciergeReviewResponseService/ProvideFeedbackToReviewResponse:
    post:
      summary: Provide a feedback to the review response submitted by an agent
      operationId: ConciergeReviewResponseService_ProvideFeedbackToReviewResponse
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ProvideFeedbackToReviewResponseRequest'
      tags:
        - ConciergeReviewResponseService
  /reputation.v1.LimitService/GetLimit:
    post:
      summary: Get the limit value and usage
      operationId: LimitService_GetLimit
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetLimitResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetLimitRequest'
      tags:
        - LimitService
  /reputation.v1.ListingService/ForceRefreshListing:
    post:
      summary: force refresh a listing
      operationId: ListingService_ForceRefreshListing
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ForceRefreshListingRequest'
      tags:
        - ListingService
  /reputation.v1.ListingService/GetListings:
    post:
      summary: Retrieves a set of listings by ids
      operationId: ListingService_GetListings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetListingsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetListingsRequest'
      tags:
        - ListingService
  /reputation.v1.ListingService/LookupListings:
    post:
      operationId: ListingService_LookupListings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LookupListingsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LookupListingsRequest'
      tags:
        - ListingService
  /reputation.v1.ListingService/SearchBingMaps:
    post:
      summary: Search Bing Maps existence for a business with a custom company name
      operationId: ListingService_SearchBingMaps
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchBingMapsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchBingMapsRequest'
      tags:
        - ListingService
  /reputation.v1.ListingService/SubmitListing:
    post:
      summary: submit a listing to core services
      operationId: ListingService_SubmitListing
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SubmitListingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SubmitListingRequest'
      tags:
        - ListingService
  /reputation.v1.ListingService/UpdateListing:
    post:
      operationId: ListingService_UpdateListing
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateListingRequest'
      tags:
        - ListingService
  /reputation.v1.NetPromoterScoreService/GetMulti:
    post:
      summary: API to retrieve multiple NPS records by passing a list of NPS IDs.
      operationId: NetPromoterScoreService_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiNPSResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiNPSRequest'
      tags:
        - NetPromoterScoreService
  /reputation.v1.NetPromoterScoreService/ImportNPS:
    post:
      summary: |-
        API to import NPS record, mostly for internal use like importing historical data
        This will create a new NPS record in `NetPromoterScore`. It will also trigger any secondary workflow that is associated with NPS record creation.
      operationId: NetPromoterScoreService_ImportNPS
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ImportNPSResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ImportNPSRequest'
      tags:
        - NetPromoterScoreService
  /reputation.v1.NetPromoterScoreService/LeaveNetPromoterScore:
    post:
      summary: Public Update for NPS entity
      operationId: NetPromoterScoreService_LeaveNetPromoterScore
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LeaveNetPromoterScoreRequest'
      tags:
        - NetPromoterScoreService
  /reputation.v1.NetPromoterScoreService/ListNetPromoterScores:
    post:
      summary: api to list nps records for a account group id
      operationId: NetPromoterScoreService_ListNetPromoterScores
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListNetPromoterScoresResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListNetPromoterScoresRequest'
      tags:
        - NetPromoterScoreService
  /reputation.v1.ReviewRequestService/CreateReviewRequestEmailTemplate:
    post:
      summary: Creates an email template for review requesting
      operationId: ReviewRequestService_CreateReviewRequestEmailTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewRequestEmailTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateReviewRequestEmailTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/CreateReviewRequestSMSTemplate:
    post:
      summary: Create SMS template for review request
      operationId: ReviewRequestService_CreateReviewRequestSMSTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewRequestSMSTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateReviewRequestSMSTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/DeleteReviewRequestEmailTemplate:
    post:
      summary: Delete email template
      operationId: ReviewRequestService_DeleteReviewRequestEmailTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteReviewRequestTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/GetLeaveReviewURLs:
    post:
      operationId: ReviewRequestService_GetLeaveReviewURLs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetLeaveReviewURLsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetLeaveReviewURLsRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/GetReviewRequestEmailTemplate:
    post:
      summary: Gets an email template for review requesting
      operationId: ReviewRequestService_GetReviewRequestEmailTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewRequestEmailTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewRequestEmailTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/GetReviewRequestSMSTemplate:
    post:
      summary: Get SMS template for review request
      operationId: ReviewRequestService_GetReviewRequestSMSTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewRequestSMSTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewRequestSMSTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/ListReviewRequestEmailTemplates:
    post:
      summary: Lists email templates
      operationId: ReviewRequestService_ListReviewRequestEmailTemplates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListReviewRequestEmailTemplatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListReviewRequestEmailTemplatesRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/ResendReview:
    post:
      summary: API to resend NPS SMSThenEmail requests specifically for detractors.
      operationId: ReviewRequestService_ResendReview
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ResendReviewRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/ScheduleReviewRequest:
    post:
      summary: Schedule a review request to go out after a delay
      operationId: ReviewRequestService_ScheduleReviewRequest
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ScheduleReviewRequestRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/SendPreviewEmail:
    post:
      operationId: ReviewRequestService_SendPreviewEmail
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendPreviewEmailRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/SendReviewRequest:
    post:
      summary: Send a review request to the customers
      operationId: ReviewRequestService_SendReviewRequest
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendReviewRequestRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/SendReviewRequestEmail:
    post:
      summary: Sends an email review request to the customers of recipients list
      operationId: ReviewRequestService_SendReviewRequestEmail
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendReviewRequestEmailRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/SendReviewRequestSms:
    post:
      summary: Sends an sms review request to the list of specified contacts
      operationId: ReviewRequestService_SendReviewRequestSms
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendReviewRequestSmsRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/SetDefaultReviewRequestTemplate:
    post:
      summary: Update or set email template as default
      operationId: ReviewRequestService_SetDefaultReviewRequestTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetDefaultReviewRequestTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/UpdateReviewRequestEmailTemplate:
    post:
      summary: Update email template
      operationId: ReviewRequestService_UpdateReviewRequestEmailTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateReviewRequestEmailTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewRequestService/UpdateReviewRequestSMSTemplate:
    post:
      operationId: ReviewRequestService_UpdateReviewRequestSMSTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateReviewRequestSMSTemplateRequest'
      tags:
        - ReviewRequestService
  /reputation.v1.ReviewResponseTemplateService/CreateBrandReviewResponseTemplate:
    post:
      summary: Creates a review response template for a brand
      operationId: ReviewResponseTemplateService_CreateBrandReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewResponseTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateBrandReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/CreateBusinessReviewResponseTemplate:
    post:
      summary: Creates a review response template for a business
      operationId: ReviewResponseTemplateService_CreateBusinessReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewResponseTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateBusinessReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/CreateDefaultReviewResponseTemplate:
    post:
      summary: Creates a default review response template for all businesses
      operationId: ReviewResponseTemplateService_CreateDefaultReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewResponseTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateDefaultReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/CreateDigitalAgentReviewResponseTemplate:
    post:
      summary: Creates a review response template for digital agents
      operationId: ReviewResponseTemplateService_CreateDigitalAgentReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewResponseTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateDigitalAgentReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/CreatePartnerMarketReviewResponseTemplate:
    post:
      summary: Creates a review response template for a partner/market
      operationId: ReviewResponseTemplateService_CreatePartnerMarketReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewResponseTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreatePartnerMarketReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/DeleteBrandReviewResponseTemplate:
    post:
      summary: Deletes a review response template for a brand
      operationId: ReviewResponseTemplateService_DeleteBrandReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteBrandReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/DeleteBusinessReviewResponseTemplate:
    post:
      summary: Deletes a review response template for a business
      operationId: ReviewResponseTemplateService_DeleteBusinessReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteBusinessReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/DeleteDefaultReviewResponseTemplate:
    post:
      summary: Deletes a default review response template for all businesses
      operationId: ReviewResponseTemplateService_DeleteDefaultReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteDefaultReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/DeleteDigitalAgentReviewResponseTemplate:
    post:
      summary: Deletes a review response template for digital agents
      operationId: ReviewResponseTemplateService_DeleteDigitalAgentReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteDigitalAgentReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/DeletePartnerMarketReviewResponseTemplate:
    post:
      summary: Deletes a review response template for a partner/market
      operationId: ReviewResponseTemplateService_DeletePartnerMarketReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeletePartnerMarketReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/ListBusinessReviewResponseTemplates:
    post:
      summary: List review response templates for a business
      operationId: ReviewResponseTemplateService_ListBusinessReviewResponseTemplates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListBusinessReviewResponseTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListBusinessReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/UpdateBrandReviewResponseTemplate:
    post:
      summary: Updates a review response template for a brand
      operationId: ReviewResponseTemplateService_UpdateBrandReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateBrandReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/UpdateBusinessReviewResponseTemplates:
    post:
      summary: Updates a review response template for a business
      operationId: ReviewResponseTemplateService_UpdateBusinessReviewResponseTemplates
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateBusinessReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewResponseTemplateService/UpdateDigitalAgentReviewResponseTemplate:
    post:
      summary: Updates a review response template for digital agents
      operationId: ReviewResponseTemplateService_UpdateDigitalAgentReviewResponseTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateDigitalAgentReviewResponseTemplateRequest'
      tags:
        - ReviewResponseTemplateService
  /reputation.v1.ReviewService/CanRespondToReview:
    post:
      summary: Determine if the review can support responses
      operationId: ReviewService_CanRespondToReview
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CanRespondToReviewResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CanRespondToReviewRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/CreateReviewComment:
    post:
      summary: Respond to a review by leaving a comment on it
      operationId: ReviewService_CreateReviewComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewCommentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateReviewCommentRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/GetMultiThirdPartyReviewPublishSettings:
    post:
      summary: Get the third party review publish settings for a list of account groups
      operationId: ReviewService_GetMultiThirdPartyReviewPublishSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiThirdPartyReviewPublishSettingsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiThirdPartyReviewPublishSettingsRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/GetReviewHistory:
    post:
      summary: Retrieves a set of review histories by review id
      operationId: ReviewService_GetReviewHistory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ReviewHistoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReviewHistoryRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/GetReviews:
    post:
      summary: Retrieves a set of reviews by ids
      operationId: ReviewService_GetReviews
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewsRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/SuggestReviewResponse:
    post:
      summary: Suggest a a review response
      operationId: ReviewService_SuggestReviewResponse
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SuggestReviewResponseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SuggestReviewResponseRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/UpdateReview:
    post:
      summary: Update a review. Most commonly this means updating the action status on the review.
      operationId: ReviewService_UpdateReview
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateReviewResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateReviewRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/UpdateReviewComment:
    post:
      summary: |-
        Update a review comment by updating its comment text
        Note: This rpc supports updating review comments for the My Listing source only
      operationId: ReviewService_UpdateReviewComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateReviewCommentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateReviewCommentRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewService/UpdateReviewUserDeletedInfo:
    post:
      summary: Update the user deleted info on a review, allowing the user to mark it either deleted or kept.
      operationId: ReviewService_UpdateReviewUserDeletedInfo
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateReviewUserDeletedInfoRequest'
      tags:
        - ReviewService
  /reputation.v1.ReviewWidgetService/CreateReview:
    post:
      summary: Creates a new My Listing review
      operationId: ReviewWidgetService_CreateReview
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateReviewRequest'
      tags:
        - ReviewWidgetService
  /reputation.v1.ReviewWidgetService/CreateReviewWidget:
    post:
      summary: Creates a review widget config
      operationId: ReviewWidgetService_CreateReviewWidget
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateReviewWidgetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateReviewWidgetRequest'
      tags:
        - ReviewWidgetService
  /reputation.v1.ReviewWidgetService/GetReviewWidget:
    post:
      summary: Gets a review widget config by account group id
      operationId: ReviewWidgetService_GetReviewWidget
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewWidgetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewWidgetRequest'
      tags:
        - ReviewWidgetService
  /reputation.v1.ReviewWidgetService/GetReviewWidgetByID:
    post:
      summary: Gets a review widget config by widget id
      operationId: ReviewWidgetService_GetReviewWidgetByID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewWidgetByIDResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewWidgetByIDRequest'
      tags:
        - ReviewWidgetService
  /reputation.v1.ReviewWidgetService/ListWidgetReviews:
    post:
      operationId: ReviewWidgetService_ListWidgetReviews
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListWidgetReviewsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListWidgetReviewsRequest'
      tags:
        - ReviewWidgetService
  /reputation.v1.ReviewWidgetService/UpdateReviewWidget:
    post:
      summary: Update an existing review widget
      operationId: ReviewWidgetService_UpdateReviewWidget
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateReviewWidgetRequest'
      tags:
        - ReviewWidgetService
  /reputation.v1.ReviewWidgetUsageService/CheckReviewWidgetUsage:
    post:
      operationId: ReviewWidgetUsageService_CheckReviewWidgetUsage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CheckReviewWidgetUsageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CheckReviewWidgetUsageRequest'
      tags:
        - ReviewWidgetUsageService
  /reputation.v1.SourceService/GetBusinessSources:
    post:
      summary: Retrieves a set of enabled/ignored sources for a list of businesses
      operationId: SourceService_GetBusinessSources
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBusinessSourcesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetBusinessSourcesRequest'
      tags:
        - SourceService
  /reputation.v1.SourceService/GetReviewSourceInfo:
    post:
      summary: Get source info for an account group
      operationId: SourceService_GetReviewSourceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewSourceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewSourceInfoRequest'
      tags:
        - SourceService
  /reputation.v1.SourceService/GetReviewSourceInfoInternal:
    post:
      summary: Internal auth checked, Get source info for an account group
      operationId: SourceService_GetReviewSourceInfoInternal
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetReviewSourceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetReviewSourceInfoRequest'
      tags:
        - SourceService
  /reputation.v1.SourceService/GetSourceDetails:
    post:
      summary: Retrieves a list of active sources for the (partner, market, location, tax id)
      operationId: SourceService_GetSourceDetails
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSourceDetailsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSourceDetailsRequest'
      tags:
        - SourceService
  /reputation.v1.SourceService/RefreshBusinessSource:
    post:
      summary: refreshes listing(s) for a single source
      operationId: SourceService_RefreshBusinessSource
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RefreshBusisinessSourceRequest'
      tags:
        - SourceService
  /reputation.v1.WhiteLabelDomainService/GetPartnerWhiteLabelDomain:
    post:
      operationId: WhiteLabelDomainService_GetPartnerWhiteLabelDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPartnerWhiteLabelDomainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetPartnerWhiteLabelDomainRequest'
      tags:
        - WhiteLabelDomainService
definitions:
  CustomizationsOverallRatingDecimalPlaces:
    type: string
    enum:
      - OVERALL_RATING_DECIMAL_PLACES_NOT_SET
      - OVERALL_RATING_DECIMAL_PLACES_1
      - OVERALL_RATING_DECIMAL_PLACES_2
    default: OVERALL_RATING_DECIMAL_PLACES_NOT_SET
    title: How many decimal places to show for the overall rating
  ListNetPromoterScoresRequestFilters:
    type: object
    properties:
      fromDate:
        type: string
        format: date-time
        title: from and to date wise filter
      toDate:
        type: string
        format: date-time
      scoreCategory:
        type: array
        items:
          $ref: '#/definitions/v1ScoreCategory'
        title: NPS Score wise filters
  ListReviewRequestEmailTemplatesRequestSearchOptions:
    type: object
    properties:
      searchTerm:
        type: string
        title: Search Term
      exactMatch:
        type: boolean
        title: Exact Match returns only exact matches
  ListReviewRequestEmailTemplatesRequestSortField:
    type: string
    enum:
      - SORT_FIELD_NOT_SET
      - SORT_FIELD_UPDATED
      - SORT_FIELD_NAME
    default: SORT_FIELD_NOT_SET
  ListReviewRequestEmailTemplatesRequestSortOptions:
    type: object
    properties:
      sortDirection:
        $ref: '#/definitions/v1SortDirection'
        title: Which direction to sort in
      sortField:
        $ref: '#/definitions/ListReviewRequestEmailTemplatesRequestSortField'
        title: Which field to sort by
  ListWidgetReviewsRequestMinimumRating:
    type: string
    enum:
      - MINIMUM_RATING_UNSPECIFIED
      - MINIMUM_RATING_1
      - MINIMUM_RATING_2
      - MINIMUM_RATING_3
      - MINIMUM_RATING_4
      - MINIMUM_RATING_5
      - MINIMUM_RATING_MANUALLY_PUBLISHED
    default: MINIMUM_RATING_UNSPECIFIED
  ListingMatchQuality:
    type: string
    enum:
      - LISTING_MATCH_QUALITY_GOOD
      - LISTING_MATCH_QUALITY_POOR
      - LISTING_MATCH_QUALITY_NO_MATCH
    default: LISTING_MATCH_QUALITY_GOOD
  ReviewWidgetLayout:
    type: string
    enum:
      - LAYOUT_UNSPECIFIED
      - LAYOUT_FEED
      - LAYOUT_CAROUSEL
      - LAYOUT_BADGE
    default: LAYOUT_UNSPECIFIED
    title: The layout of the widget (feed, carousel, badge)
  ScheduleReviewRequestRequestScheduleConditions:
    type: object
    properties:
      daysOfWeek:
        type: array
        items:
          $ref: '#/definitions/v1DaysOfWeek'
        title: The days of the week to send requests on
      initialDelay:
        $ref: '#/definitions/v1PeriodDelay'
        description: |-
          The minimum delay before the review request is sent.
          The delay could be longer if the delayed time falls outside the criteria defined by the other conditions.
      timeRangeStartHour:
        type: integer
        format: int32
        title: |-
          The hour component for the earliest time where it is acceptable to send the
          review request (see notes above)
      timeRangeStartMinute:
        type: integer
        format: int32
        title: |-
          The minute component for the earliest time where it is acceptable to send
          the review request (see notes above)
      timeRangeEndHour:
        type: integer
        format: int32
        title: |-
          The hour component for the latest time where it is acceptable to send the
          review request (see notes above)
      timeRangeEndMinute:
        type: integer
        format: int32
        title: |-
          The minute component for the latest time where it is acceptable to send the
          review request (see notes above)
      daysUntilNextRequest:
        type: integer
        format: int32
        description: |-
          The minimum number of days since the last review request to a contact.
          Any requests sent within this time frame will be ignored.
    description: |-
      ScheduleConditions define the conditions that must be met before the
      review request is sent.

      Note 1: Unless otherwise configured here, the time_range values are relative
      to the timezone of the account group that is sending the review request.

      Note 2: Setting all of the "time_range_" values to 0 means that the review
      request can be sent at any time of day - assuming the other wait conditions
      are also met.
  SourceAttributeScope:
    type: object
    properties:
      whitelist:
        type: array
        items:
          type: string
        title: Attributes that are whitelisted
      blacklist:
        type: array
        items:
          type: string
        title: Attributes that are blacklisted
      isWhitelistedByDefault:
        type: boolean
        title: Indicates whether the attribute is whitelisted by default
    title: AttributeScope provides details on whether an attribute (partner, taxonomy, location) is whitelisted, blacklisted or on by default
  SourceIcon:
    type: object
    properties:
      url16px:
        type: string
      url32px:
        type: string
      url50px:
        type: string
    title: URLs to an image icon of the source
  SourceListingInteractionHTML:
    type: object
    properties:
      descriptionHtml:
        type: string
      claimListingHtml:
        type: string
      editListingHtml:
        type: string
      createListingHtml:
        type: string
    title: HTML Information about interacting with a source
  StylingTheme:
    type: string
    enum:
      - THEME_UNSPECIFIED
      - THEME_LIGHT
      - THEME_DARK
    default: THEME_UNSPECIFIED
    title: The theme to use for the widget
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1ApproveReviewResponseRequest:
    type: object
    properties:
      reviewId:
        type: string
        title: The id of the review which response needs to be approved
      partnerId:
        type: string
        title: The partner id of the business
      businessId:
        type: string
        title: The id of the business
  v1BingMapsLocation:
    type: object
    properties:
      name:
        type: string
        title: The name of the bing place on bing maps
      address:
        type: string
        title: The address of the bing place on bing maps
      url:
        type: string
        title: The bing maps url of the bing place
  v1CanRespondToReviewRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The ID of the business owning the review
      reviewId:
        type: string
        title: The ID of the review being responded to
    title: The request message for ReviewService.CanRespondToReview
  v1CanRespondToReviewResponse:
    type: object
    properties:
      canRespond:
        type: boolean
        title: Represents whether or not the response is supported
      unsupportedReason:
        type: string
        title: A message with the reason the review doesn't support responses
    description: The response message for ReviewService.CanRespondToReview.
  v1Channel:
    type: string
    enum:
      - CHANNEL_UNSPECIFIED
      - SMS_FALLBACK_TO_EMAIL
      - SMS_ONLY
      - EMAIL_FALLBACK_TO_SMS
      - EMAIL_ONLY
      - BOTH_EMAIL_AND_SMS
    default: CHANNEL_UNSPECIFIED
    description: The channel to send the review request through.
  v1CheckReviewWidgetUsageRequest:
    type: object
    properties:
      widgetId:
        type: string
        title: The widget ID of the widget to get the usage for
  v1CheckReviewWidgetUsageResponse:
    type: object
    properties:
      isUsed:
        type: boolean
        title: Whether the widget is being used
  v1ConciergeReviewResponse:
    type: object
    properties:
      reviewId:
        type: string
        title: The identifier of the review
      partnerId:
        type: string
        title: The identifier of the partner
      taskId:
        type: string
        title: The identifier of the task in task manager
      response:
        type: string
        title: The response content to the review
      agentName:
        type: string
        title: The name of the agent who creates the response
      body:
        type: string
        title: The body of the response
      replyToEmail:
        type: string
        title: The email to receive approval notifications for the response
      feedback:
        type: string
        title: The feedback to the review response
      feedbackProvider:
        type: string
        title: The person who provides the feedback
      commentId:
        type: string
        title: The identifier for the review response
      feedbackDate:
        type: string
        format: date-time
        title: When the feedback was provided
      approvalRequestedDate:
        type: string
        format: date-time
        title: When the review response request is approved
      created:
        type: string
        format: date-time
        title: When the review response was created in the system
      modified:
        type: string
        format: date-time
        title: When the review response was last modified by the system
      partnerName:
        type: string
        title: The partner name
      faviconUrl:
        type: string
        title: The favicon url
      tags:
        type: array
        items:
          type: string
        title: The tags for the review response
    title: ConciergeReviewResponse represents a Concierge ReviewResponse in the ReviewService
  v1CreateBrandReviewResponseTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: partner id that owns the new template
      brandId:
        type: string
        title: brand id that owns the new template
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: review response template to be created
  v1CreateBusinessReviewResponseTemplateRequest:
    type: object
    properties:
      businessId:
        type: string
        title: id for template scoped to a business
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: review response template data
  v1CreateDefaultReviewResponseTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: review response template data for default template
  v1CreateDigitalAgentReviewResponseTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: partner id that owns the new template
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: review response template to be created
  v1CreatePartnerMarketReviewResponseTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: partner id for template
      marketId:
        type: string
        title: market id for template
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: review response template data
  v1CreateReviewCommentRequest:
    type: object
    properties:
      reviewId:
        $ref: '#/definitions/v1ReviewIdentifier'
      commentText:
        type: string
      commenterEmail:
        type: string
      commenterName:
        type: string
      postedByOwner:
        type: boolean
      shouldPublish:
        type: boolean
      postedByDigitalAgent:
        type: boolean
    title: The request message for ReviewService.CreateReviewComment
  v1CreateReviewCommentResponse:
    type: object
    properties:
      commentId:
        type: string
      commentText:
        type: string
        title: Comment text
      commenterName:
        type: string
        title: Commenter name
      created:
        type: string
        format: date-time
        title: Creation date of the comment
      published:
        type: string
        format: date-time
        title: Published date of the comment
      postedByOwner:
        type: boolean
        title: Whether this comment is a post by the owner of the listing being reviewed
    title: The response message for ReviewService.CreateReviewComment
  v1CreateReviewRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      starRating:
        type: number
        format: float
      reviewerName:
        type: string
      reviewerEmail:
        type: string
      reviewTitle:
        type: string
      reviewContent:
        type: string
  v1CreateReviewRequestEmailTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID the template will be under
      accountGroupId:
        type: string
        title: Account Group ID the template will be under
      name:
        type: string
        title: Name of the template
      externalId:
        type: string
        title: External ID of the template
  v1CreateReviewRequestEmailTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewRequestTemplate'
        title: The template created
  v1CreateReviewRequestSMSTemplateRequest:
    type: object
    properties:
      title:
        type: string
        title: The display name of the SMS template
      partnerId:
        type: string
      accountGroupId:
        type: string
      content:
        type: string
        title: The content of the template
      templateType:
        $ref: '#/definitions/v1TemplateType'
      npsRedirectReviewSource:
        type: boolean
        title: template configurations
      reviewSourceId:
        type: array
        items:
          type: string
        title: multiple review sources
      businessLogoUrl:
        type: string
        title: business logo
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: The fields to update
      includeBusinessLogo:
        type: boolean
        title: Include Business Logo based on the flag
    title: CreateSMSTemplatesRequest for storing the SMS template
  v1CreateReviewRequestSMSTemplateResponse:
    type: object
    properties:
      externalTemplateId:
        type: string
        title: external template id of the sms template
      templateId:
        type: string
        title: template id of the sms template
      partnerId:
        type: string
        title: Partner ID the template will be under
      accountGroupId:
        type: string
        title: Account Group ID the template will be under
      name:
        type: string
        title: template name
      templateType:
        $ref: '#/definitions/v1TemplateType'
        title: template type
    title: CreateSMSTemplatesRequest for storing the SMS template
  v1CreateReviewResponse:
    type: object
    properties:
      review:
        $ref: '#/definitions/v1Review'
  v1CreateReviewResponseTemplateResponse:
    type: object
    properties:
      responseTemplateId:
        type: string
        title: The id of the review response template created
  v1CreateReviewWidgetRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account Group ID for owner of the review widget
  v1CreateReviewWidgetResponse:
    type: object
    properties:
      reviewWidget:
        $ref: '#/definitions/v1ReviewWidget'
  v1Customizations:
    type: object
    properties:
      overallRatingDecimalPlaces:
        $ref: '#/definitions/CustomizationsOverallRatingDecimalPlaces'
      headerText:
        type: string
        title: The header text to display instead of 'Reviews from our customers'
  v1DaysOfWeek:
    type: string
    enum:
      - DAY_OF_WEEK_UNSPECIFIED
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    default: DAY_OF_WEEK_UNSPECIFIED
  v1DeleteBrandReviewResponseTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: partner id that owns the existing template
      brandId:
        type: string
        title: brand id that owns the existing template
      responseTemplateId:
        type: string
        title: The id of the review response template to delete
      owner:
        type: string
        title: The original owner of the response template
  v1DeleteBusinessReviewResponseTemplateRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The id of the business that owns the template
      responseTemplateId:
        type: string
        title: The id of the review response template to delete
      owner:
        type: string
        title: The original owner of the response template
  v1DeleteDefaultReviewResponseTemplateRequest:
    type: object
    properties:
      responseTemplateId:
        type: string
        title: The id of the review response template to delete
  v1DeleteDigitalAgentReviewResponseTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The partner that owns the existing template
      responseTemplateId:
        type: string
        title: The id of the review response template to delete
  v1DeletePartnerMarketReviewResponseTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: partner id for template
      marketId:
        type: string
        title: market id for template
      responseTemplateId:
        type: string
        title: The id of the review response template to delete
      owner:
        type: string
        title: The original owner of the response template
  v1DeleteReviewRequestTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID of the template to be deleted
      accountGroupId:
        type: string
        title: Account Group ID of the template to be deleted
      templateId:
        type: string
        title: ID of the template to be deleted
  v1EmailTemplateData:
    type: object
    properties:
      emailTemplateSubject:
        type: string
        title: The subject of email template
      emailTemplateHtml:
        type: string
        title: The html string of email template
  v1ForceRefreshListingRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: account group id which the listing belongs to
      listingId:
        type: string
        title: id of the listing which needs to be force refreshed
      listingUrl:
        type: string
        title: url of the listing which needs to be force refreshed
      sourceId:
        type: string
        format: int64
        title: source of the listing
  v1GetBusinessSourcesRequest:
    type: object
    properties:
      accountGroupIds:
        type: array
        items:
          type: string
    title: The request message for SourceService.GetBusinessSources
  v1GetBusinessSourcesResponse:
    type: object
    properties:
      sourceDetails:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SourceDetails'
    title: The response message for SourceService.GetBusinessSources
  v1GetLeaveReviewURLsRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account group that these URLs are for
      sourceIds:
        type: array
        items:
          type: string
        title: The source IDs to get URLs for
  v1GetLeaveReviewURLsResponse:
    type: object
    properties:
      urls:
        type: object
        additionalProperties:
          type: string
        title: The URLs for the sources
  v1GetLimitRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account Group ID of the account group
      limitType:
        $ref: '#/definitions/v1LimitType'
        title: Type of the limit
  v1GetLimitResponse:
    type: object
    properties:
      limit:
        type: string
        format: int64
        title: The limit value
      usage:
        type: string
        format: int64
        title: The limit usage
  v1GetListingsRequest:
    type: object
    properties:
      listingIds:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ListingIdentifier'
        title: A set of listing identifiers to retrieve
    title: The request message for ListingService.GetListings
  v1GetListingsResponse:
    type: object
    properties:
      listings:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Listing'
    title: The response message for ListingService.GetListings
  v1GetMultiNPSRequest:
    type: object
    properties:
      netPromoterScoreIds:
        type: array
        items:
          type: string
  v1GetMultiNPSResponse:
    type: object
    properties:
      netPromoterScore:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1NetPromoterScore'
  v1GetMultiThirdPartyReviewPublishSettingsRequest:
    type: object
    properties:
      accountGroupIds:
        type: array
        items:
          type: string
  v1GetMultiThirdPartyReviewPublishSettingsResponse:
    type: object
    properties:
      thirdPartyReviewPublishSettings:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1ThirdPartyReviewPublishSettings'
  v1GetPartnerWhiteLabelDomainRequest:
    type: object
    properties:
      partnerId:
        type: string
  v1GetPartnerWhiteLabelDomainResponse:
    type: object
    properties:
      whiteLabelDomain:
        type: string
  v1GetReviewRequestEmailTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID the template will be under
      accountGroupId:
        type: string
        title: Account Group ID the template will be under
      templateId:
        type: string
        title: ID of the template (note this is the ID in ReviewRequestTemplate table)
  v1GetReviewRequestEmailTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewRequestTemplate'
        title: The review request template
  v1GetReviewRequestSMSTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID the template will be under
      accountGroupId:
        type: string
        title: Account Group ID the template will be under
      templateId:
        type: string
        title: ID of the ReviewRequestTemplate
  v1GetReviewRequestSMSTemplateResponse:
    type: object
    properties:
      templateId:
        type: string
        title: Identifier for the template
      externalTemplateId:
        type: string
        title: External identifier for the template content
      title:
        type: string
        title: The display name of the SMS template
      partnerId:
        type: string
      accountGroupId:
        type: string
      content:
        type: string
        title: The content of the template
      templateType:
        $ref: '#/definitions/v1TemplateType'
        title: The type of template
      npsRedirectReviewSource:
        type: boolean
        title: template configurations
      reviewSourceId:
        type: array
        items:
          type: string
        title: multiple review sources
      imageUrl:
        type: string
        title: Stores the URL of the uploaded image
      includeBusinessLogo:
        type: boolean
        title: Include Business Logo based on the flag
  v1GetReviewResponseRequest:
    type: object
    properties:
      reviewId:
        type: string
        title: The id of the review to get response for
      partnerId:
        type: string
        title: The partner id of the business
      businessId:
        type: string
        title: The id of the business
  v1GetReviewResponseResponse:
    type: object
    properties:
      reviewResponse:
        $ref: '#/definitions/v1ConciergeReviewResponse'
  v1GetReviewSourceInfoRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account Group ID of the account group
      sourceIds:
        type: array
        items:
          type: string
        title: The source IDs to get URLs for
    title: Get review source information for an account group
  v1GetReviewSourceInfoResponse:
    type: object
    properties:
      sourceInfo:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewSourceInfo'
        title: The source information for the account group in a Struct from JSON
  v1GetReviewWidgetByIDRequest:
    type: object
    properties:
      widgetId:
        type: string
  v1GetReviewWidgetByIDResponse:
    type: object
    properties:
      reviewWidget:
        $ref: '#/definitions/v1ReviewWidget'
      reviewStats:
        $ref: '#/definitions/v1ReviewStats'
      leaveReviewUrls:
        type: object
        additionalProperties:
          type: string
  v1GetReviewWidgetRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account Group ID for owner of the review widget
  v1GetReviewWidgetResponse:
    type: object
    properties:
      reviewWidget:
        $ref: '#/definitions/v1ReviewWidget'
      reviewStats:
        $ref: '#/definitions/v1ReviewStats'
  v1GetReviewsRequest:
    type: object
    properties:
      reviewIds:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewIdentifier'
        title: The set of review ids to retrieve
      includeComments:
        type: boolean
        title: Whether or not to include comments on the reviews
    title: The request message for ReviewService.GetReviewsRequest
  v1GetReviewsResponse:
    type: object
    properties:
      reviews:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Review'
    title: The response message for ReviewService.GetReviews
  v1GetSMSEnabledRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account Group ID of the account group
  v1GetSMSEnabledResponse:
    type: object
    properties:
      smsState:
        $ref: '#/definitions/v1SMSState'
        title: The state of the SMS features
  v1GetSourceDetailsRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The Partner ID to narrow the sources down by
      marketId:
        type: string
        title: The Market ID to narrow the sources down by
      location:
        type: string
        title: A country code (e.g., 'CA') or country code and state (e.g., 'CA:SK') or country code and state and city (e.g., 'CA:SK:saskatoon')
      taxIds:
        type: array
        items:
          type: string
        title: A taxonomy ID (e.g., 'auto', 'auto:parking', etc.)
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: Controls which fields are returned on the response
    title: The request message for SourceService.GetSourceDetails
  v1GetSourceDetailsResponse:
    type: object
    properties:
      sources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Source'
    title: The response message for SourceService.GetSourceDetails
  v1ImportNPSRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      crmContactId:
        type: string
      score:
        type: string
        format: int64
        title: The rating 0-10 that the contact left
      comment:
        type: string
        description: 'Optional: Comment that the contact left while providing score.'
      scoreLeft:
        type: string
        format: date-time
        description: The time the score was left. If not provided, the current time will be used.
      attributes:
        type: object
        title: |-
          Optional: Additional attributes that can be associated with the NPS like source system id, service type, external review id, service provided employee id etc
          This will be stored as attributes in the NetPromoterScore entity to provide additional context
  v1ImportNPSResponse:
    type: object
    properties:
      netPromoterScoreId:
        type: string
  v1Interval:
    type: string
    enum:
      - INTERVAL_UNSPECIFIED
      - INTERVAL_MINUTES
      - INTERVAL_HOURS
      - INTERVAL_DAYS
      - INTERVAL_WEEKS
      - INTERVAL_MONTHS
    default: INTERVAL_UNSPECIFIED
    title: Interval of time as delay period for sending review requests
  v1LeaveNetPromoterScoreRequest:
    type: object
    properties:
      netPromoterScoreId:
        type: string
        title: Nps ID of the entity that will be updated
      score:
        type: string
        format: int64
        title: The NPS score that was picked on scale of 1 to 10
      comment:
        type: string
        title: Optional comment seen in some UI, so we know what score it was associated with
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: The fields to update
  v1LimitType:
    type: string
    enum:
      - LIMIT_TYPE_UNSPECIFIED
      - LIMIT_TYPE_MONTHLY_SMS
    default: LIMIT_TYPE_UNSPECIFIED
  v1ListBusinessReviewResponseTemplateRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The id of the business to lookup templates for
      partnerId:
        type: string
        title: The partner id of the business
      marketId:
        type: string
        title: The market id of the business
      brandId:
        type: string
        title: The brand id of the business
      isDigitalAgent:
        type: boolean
        title: Indicates the request is coming from a digital agent
  v1ListBusinessReviewResponseTemplateResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewResponseTemplate'
        title: The list of templates for the business
  v1ListNetPromoterScoresRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      filters:
        $ref: '#/definitions/ListNetPromoterScoresRequestFilters'
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1ListNetPromoterScoresResponse:
    type: object
    properties:
      netPromoterScore:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1NetPromoterScore'
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      hasMore:
        type: boolean
        title: Whether there are more results
      totalResults:
        type: string
        format: int64
        title: Approximate total results for an unbounded page size
  v1ListReviewRequestEmailTemplatesRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: The options that define the page of templates requested (e.g. cursor, page size)
      partnerId:
        type: string
        title: The partner ID the template falls under
      accountGroupId:
        type: string
        title: The account group ID the template falls under
      searchOptions:
        $ref: '#/definitions/ListReviewRequestEmailTemplatesRequestSearchOptions'
        title: Search Options for listing templates
      sortOptions:
        $ref: '#/definitions/ListReviewRequestEmailTemplatesRequestSortOptions'
        title: Sort options for listing templates
      templateType:
        $ref: '#/definitions/v1ReviewRequestTemplateType'
        title: The Type can send either sms or email
  v1ListReviewRequestEmailTemplatesResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewRequestTemplate'
        title: Templates listed
      cursor:
        type: string
        title: Cursor to list the next page of results
      hasMore:
        type: boolean
        title: Whether there are more results
      totalResults:
        type: string
        format: int64
        title: Approximate total results for an unbounded page size
  v1ListWidgetReviewsRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      sourceIds:
        type: array
        items:
          type: string
      cursor:
        type: string
      pageSize:
        type: string
        format: int64
      minimumRating:
        $ref: '#/definitions/ListWidgetReviewsRequestMinimumRating'
  v1ListWidgetReviewsResponse:
    type: object
    properties:
      reviews:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Review'
      nextCursor:
        type: string
      hasMore:
        type: boolean
      totalHits:
        type: string
        format: int64
  v1Listing:
    type: object
    properties:
      listingIdentifier:
        $ref: '#/definitions/v1ListingIdentifier'
        title: Unique identifier of the listing
      sourceId:
        type: string
        format: int64
        title: The source that the listing belongs to
      nap:
        $ref: '#/definitions/v1NAP'
        title: NAP data of the listing
      url:
        type: string
        title: The URL of the listing
      domain:
        type: string
        title: The domain of the listing URL
      matchQuality:
        $ref: '#/definitions/ListingMatchQuality'
        title: Match quality details about the listing
      score:
        type: string
        format: int64
        title: The score of the listing
      userSubmitted:
        type: boolean
        title: Indicates if the listing was submitted by the user
      verified:
        type: boolean
        title: Indicates if the listing was marked verified by the user
      missing:
        type: boolean
        title: Indicates if the listing is missing from the sources site
      matches:
        type: array
        items:
          type: string
        title: A list of which fields match the businesses NAP data (companyName, city, state)
      created:
        type: string
        format: date-time
        title: When the listing was created in the system
      modified:
        type: string
        format: date-time
        title: When the listing was last modified by the system
      lastScraped:
        type: string
        format: date-time
        title: When the listing was last scraped by the system
      lastUserRefresh:
        type: string
        format: date-time
        title: When the listing was refreshed by the user
      missingOn:
        type: string
        format: date-time
        title: When the listing was found missing by the system
      externalId:
        type: string
        title: The external ID of the listing
  v1ListingIdentifier:
    type: object
    properties:
      accountGroupId:
        type: string
      listingId:
        type: string
    title: Uniquely identifies a listing
  v1LookupListingsRequest:
    type: object
    properties:
      businessId:
        type: string
      sourceIds:
        type: array
        items:
          type: string
          format: int64
      includeAnchorDataMatches:
        type: boolean
      includeGoodListings:
        type: boolean
      includeInternetProviderListings:
        type: boolean
      includeNotDoneListings:
        type: boolean
      includePoorListings:
        type: boolean
  v1LookupListingsResponse:
    type: object
    properties:
      listingsBySource:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LookupResponseForSource'
  v1LookupResponseForSource:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      sourceName:
        type: string
      userFriendlySourceName:
        type: string
      poorListings:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Listing'
      goodListings:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Listing'
      notDoneListings:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Listing'
  v1NAP:
    type: object
    properties:
      companyName:
        type: string
        title: The listings company name
      address:
        type: string
        title: The listings address
      city:
        type: string
        title: The listings city
      state:
        type: string
        title: The listings state
      zip:
        type: string
        title: The listings zip
      country:
        type: string
        title: The listings country
      phone:
        type: string
        title: The listings phone
      website:
        type: string
        title: The listings website
    title: NAP information of a listing
  v1NetPromoterScore:
    type: object
    properties:
      netPromoterScoreId:
        type: string
      accountGroupId:
        type: string
      score:
        type: string
        format: int64
      comment:
        type: string
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1NetPromoterScoreAttribute'
      scoreLeftTime:
        type: string
        format: date-time
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
  v1NetPromoterScoreAttribute:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
    title: Paged Request Options provide a standard cursor and page size for paged requests
  v1PeriodDelay:
    type: object
    properties:
      delayPeriod:
        $ref: '#/definitions/v1Interval'
        title: The delay period to use
      numberOfPeriods:
        type: integer
        format: int32
        title: The number of periods to wait before sending the review request
  v1ProvideFeedbackToReviewResponseRequest:
    type: object
    properties:
      reviewId:
        type: string
        title: The id of the review to get response for
      partnerId:
        type: string
        title: The partner id of the business
      businessId:
        type: string
        title: The id of the business
      feedback:
        type: string
        title: The feedback provided
  v1Recommendation:
    type: string
    enum:
      - RECOMMENDATION_UNSPECIFIED
      - RECOMMENDATION_POSITIVE
      - RECOMMENDATION_NEGATIVE
    default: RECOMMENDATION_UNSPECIFIED
    title: Enum for a review's facebook recommendation value
  v1RefreshBusisinessSourceRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      sourceId:
        type: string
        format: int64
      listingId:
        type: string
  v1ResendReviewRequest:
    type: object
    properties:
      netPromoterScoreId:
        type: string
  v1Review:
    type: object
    properties:
      reviewId:
        $ref: '#/definitions/v1ReviewIdentifier'
        title: Identifier of the review
      listingId:
        type: string
        title: The listing id that the review belongs to
      sourceId:
        type: string
        format: int64
        title: The source that the review belongs to
      externalId:
        type: string
        title: The sources identifier of the review
      content:
        type: string
        title: The author's review content body
      title:
        type: string
        title: A short description of the review
      rating:
        type: string
        title: The rating of the review
      scaledStars:
        type: string
        format: int64
        title: The scaled stars of the review
      originalStars:
        type: number
        format: double
        title: The original stars of the review
      url:
        type: string
        title: The URL of the review
      domain:
        type: string
        title: The domain of the review URL
      reviewer:
        $ref: '#/definitions/v1Reviewer'
        title: Details about the reviewer
      published:
        type: string
        format: date-time
        title: When the review was published
      created:
        type: string
        format: date-time
        title: When the review was created in the system
      modified:
        type: string
        format: date-time
        title: When the review was last modified by the system
      actionStatus:
        $ref: '#/definitions/v1ReviewActionStatus'
        title: Indicates whether any action is required or has been taken on the review
      isPublished:
        type: boolean
        title: Indicates if the review is published
      isSharedByReviewer:
        type: boolean
        title: Indicates if the review has been shared by the reviewer
      newComment:
        type: boolean
        title: Indicates if there is a new comment on the review
      comments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewComment'
        title: Comments on the review
      hasAccuratePublished:
        type: boolean
        title: Core puts the published time in the middle of the UTC day if it's unsure
      recommendation:
        $ref: '#/definitions/v1Recommendation'
        title: The review's facebook recommendation value
      lastFailedReviewCommentCreated:
        type: string
        format: date-time
        title: Timestamp for a failed review response
      lastFailedReviewCommentReason:
        type: string
        title: Reason why failed review response failed to post
      lastFailedReviewCommentText:
        type: string
        title: The review response text that failed to post
      edited:
        type: string
        format: date-time
        title: The time a review was edited
      deletedStatus:
        $ref: '#/definitions/v1ReviewDeletedStatus'
        title: The deleted status of a review
      deleted:
        type: string
        format: date-time
        title: The time a review was deleted
      thirdPartyPublishedStatus:
        $ref: '#/definitions/v1ThirdPartyPublishedStatus'
        title: The status of whether the review is a third party published review
      sourceName:
        type: string
        title: The review source name
    title: Represents a Review in the ReviewService
  v1ReviewActionStatus:
    type: string
    enum:
      - REVIEW_ACTION_STATUS_ACTION_REQUIRED
      - REVIEW_ACTION_STATUS_NO_ACTION_REQUIRED
      - REVIEW_ACTION_STATUS_OWNER_RESPONDED
      - REVIEW_ACTION_STATUS_RESPONSE_AWAITING_APPROVAL
      - REVIEW_ACTION_STATUS_DIGITAL_AGENT_RESPONDED
    default: REVIEW_ACTION_STATUS_ACTION_REQUIRED
    title: Enum for the action status of a review
  v1ReviewComment:
    type: object
    properties:
      commentId:
        type: string
        title: Identifier of the comment
      name:
        type: string
        title: Name of the commenter
      text:
        type: string
        title: Text of the comment
      email:
        type: string
        title: Email address of the person making the comment
      created:
        type: string
        format: date-time
        title: Creation date of the comment
      externalId:
        type: string
        title: External id of the comment
      modified:
        type: string
        format: date-time
        title: Modified date of the comment
      published:
        type: string
        format: date-time
        title: Published date of the comment
      postedByOwner:
        type: boolean
        title: Whether this comment is a post by the owner of the listing being reviewed
      postedByDigitAgent:
        type: boolean
        title: Whether this comment is a post by the owner of the listing being reviewed
      accountGroupId:
        type: string
        title: Business identifier of the comment
      reviewId:
        type: string
        title: Review identifier of the comment
    title: Represents a ReviewComment in the ReviewService
  v1ReviewDeletedStatus:
    type: string
    enum:
      - REVIEW_DELETED_STATUS_EMPTY
      - REVIEW_DELETED_STATUS_USER_REMOVED
      - REVIEW_DELETED_STATUS_USER_KEPT
      - REVIEW_DELETED_STATUS_UNSPECIFIED
    default: REVIEW_DELETED_STATUS_EMPTY
    title: Enum for the deleted status of a review
  v1ReviewHistory:
    type: object
    properties:
      reviewHistoryId:
        type: string
        title: Identifier of the review history
      listingId:
        type: string
        title: The listing id that the review belongs to
      source:
        type: string
        format: int64
        title: The source that the review belongs to
      externalId:
        type: string
        title: The sources identifier of the review
      content:
        type: string
        title: The review content body
      reviewId:
        type: string
        title: Review id that the review history belongs to
      partnerId:
        type: string
        title: The rating of the review
      scaledStarRating:
        type: string
        format: int64
        title: The scaled stars of the review
      reviewerName:
        type: string
        title: Name of the reviewer
      published:
        type: string
        format: date-time
        title: When the review was published
      created:
        type: string
        format: date-time
        title: When the review history was created in the system
      reviewLastEdited:
        type: string
        format: date-time
        title: When the review was last modified on the source site
      isRecommendation:
        $ref: '#/definitions/v1Recommendation'
        title: The review's facebook recommendation value
      accountGroupId:
        type: string
        title: Business identifier of the review history
    title: Represents a ReviewHistory in the ReviewService
  v1ReviewHistoryRequest:
    type: object
    properties:
      reviewId:
        type: string
  v1ReviewHistoryResponse:
    type: object
    properties:
      reviewHistory:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewHistory'
  v1ReviewIdentifier:
    type: object
    properties:
      accountGroupId:
        type: string
      reviewId:
        type: string
    title: Uniquely identifies a Review
  v1ReviewRequestTemplate:
    type: object
    properties:
      templateId:
        type: string
        title: Identifier for the template
      externalTemplateId:
        type: string
        title: External identifier for the template content
      name:
        type: string
        title: Name of the template
      isDefault:
        type: boolean
        title: Whether the template is the default to be used when automatically sending to someone
      partnerId:
        type: string
        title: Partner ID the template falls under
      accountGroupId:
        type: string
        title: Account Group ID the template falls under
      created:
        type: string
        format: date-time
        title: Created time of the template
      updated:
        type: string
        format: date-time
        title: Updated time of the template
      deleted:
        type: string
        format: date-time
        title: Deleted time of the template
  v1ReviewRequestTemplateType:
    type: string
    enum:
      - REVIEW_REQUEST_TEMPLATE_TYPE_UNSPECIFIED
      - REVIEW_REQUEST_TEMPLATE_TYPE_EMAIL
      - REVIEW_REQUEST_TEMPLATE_TYPE_SMS
    default: REVIEW_REQUEST_TEMPLATE_TYPE_UNSPECIFIED
  v1ReviewResponseTemplate:
    type: object
    properties:
      title:
        type: string
        title: The display name of the template
      categories:
        type: array
        items:
          type: string
        title: The categories the response template is for
      ratings:
        type: array
        items:
          type: string
          format: int64
        title: The review ratings the response template is for
      content:
        type: string
        title: The content of the template
      responseTemplateId:
        type: string
        title: The review response template id
      externalTemplateId:
        type: string
        title: The external template id
      createdBy:
        type: string
        title: Creator of the template
      created:
        type: string
        format: date-time
        title: Created time of the template
      owner:
        type: string
        title: The original owner of the response template
  v1ReviewSourceInfo:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
        title: Listing source ID
      displayName:
        type: string
        title: source name
      leaveReviewUrl:
        type: string
        title: leave-a-review redirection URL to buisness' review page
    title: Review Source information for an account group
  v1ReviewStats:
    type: object
    properties:
      averageRating:
        type: number
        format: float
        title: The overall average rating for the account group
      totalCount:
        type: string
        format: int64
        title: The total number of reviews for the account group
  v1ReviewWidget:
    type: object
    properties:
      widgetId:
        type: string
      accountGroupId:
        type: string
      leaveReviewDestination:
        type: string
        title: The source ID to direct people to leave a review at, or multiple source IDs joined with comma
      layout:
        $ref: '#/definitions/ReviewWidgetLayout'
      reviewDisplaySourceIds:
        type: array
        items:
          type: string
      customizations:
        $ref: '#/definitions/v1Customizations'
      toggles:
        $ref: '#/definitions/v1Toggles'
      styling:
        $ref: '#/definitions/v1Styling'
  v1Reviewer:
    type: object
    properties:
      email:
        type: string
        title: Email of the reviewer
      name:
        type: string
        title: Name of the reviewer
      url:
        type: string
        title: URL to the reviewers profile
    title: Represents a Review in the ReviewService
  v1SMSState:
    type: string
    enum:
      - SMS_STATE_UNDEFINED
      - SMS_STATE_DISABLED
      - SMS_STATE_ENABLED
    default: SMS_STATE_UNDEFINED
    title: |-
      - SMS_STATE_UNDEFINED: SMS state is undefined - should not be returned by the API
       - SMS_STATE_DISABLED: SMS is disabled for the account group
       - SMS_STATE_ENABLED: SMS is enabled for the account group
  v1SMSTemplateData:
    type: object
    properties:
      templateType:
        $ref: '#/definitions/v1TemplateType'
        title: The template ID of the sms
      npsRedirectReviewSource:
        type: boolean
        title: template configurations
      reviewSourceId:
        type: array
        items:
          type: string
        title: multiple review sources
      businessLogoUrl:
        type: string
        title: business logo
      includeBusinessLogo:
        type: boolean
        title: Include Business Logo based on the flag
  v1ScheduleReviewRequestRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group ID of the account that is requesting reviews
      contactIds:
        type: array
        items:
          type: string
        title: The contact IDs to send review requests to
      channel:
        $ref: '#/definitions/v1Channel'
        title: The channel to send the review request through
      sendNow:
        type: boolean
        description: Whether to send the review request now and ignore the rest of the scheduling options provided.
      scheduleConditions:
        $ref: '#/definitions/ScheduleReviewRequestRequestScheduleConditions'
      followUps:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PeriodDelay'
        description: |-
          Specifies the sequence and timing of follow-up messages. Each follow-up message's timing is
          relative to the previous message in the sequence.
  v1ScoreCategory:
    type: string
    enum:
      - UNSET
      - DETRACTORS
      - PASSIVES
      - PROMOTERS
    default: UNSET
  v1SearchBingMapsRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: account group id which the bing maps existence search is for
      companyName:
        type: string
        title: company_name that the bing maps existence search is based with
  v1SearchBingMapsResponse:
    type: object
    properties:
      locations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BingMapsLocation'
        title: The list of bing maps locations
  v1SendPreviewEmailRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: Account Group ID for the sender
      emailTemplateData:
        $ref: '#/definitions/v1EmailTemplateData'
        title: The Email Template Data
      recipientUserId:
        type: string
        title: The user_id of the recipient to send the email to
  v1SendReviewRequestEmailRequest:
    type: object
    properties:
      recipientsEmails:
        type: array
        items:
          type: string
        title: The emails of recipients list
      accountGroupId:
        type: string
        title: The account group ID of the account that is requesting reviews
      emailTemplateData:
        $ref: '#/definitions/v1EmailTemplateData'
        title: The email template data
      contactIds:
        type: array
        items:
          type: string
        title: The contact IDs to send emails to
      partnerId:
        type: string
        title: The partner ID of the account group
      templateType:
        $ref: '#/definitions/v1ReviewRequestTemplateType'
        title: type of the template
      isMultiChannel:
        type: boolean
        title: If it is both SMS and Email template request type
  v1SendReviewRequestRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group ID of the account that is requesting reviews
      contactIds:
        type: array
        items:
          type: string
        title: The contact IDs to send review requests to
  v1SendReviewRequestSmsRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group ID of the account that is requesting reviews
      partnerId:
        type: string
        title: The partner ID of the account group
      contactIds:
        type: array
        items:
          type: string
        title: The contact IDs to send review requests to
      messageText:
        type: string
        title: The text of sms to be sent
      smsTemplateData:
        $ref: '#/definitions/v1SMSTemplateData'
        title: The sms template data
      templateType:
        $ref: '#/definitions/v1ReviewRequestTemplateType'
        title: type of the template
      isMultiChannel:
        type: boolean
        title: If it is both SMS and Email template request type
  v1SetDefaultReviewRequestTemplateRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID the template will be under
      accountGroupId:
        type: string
        title: Account Group ID the template will be under
      templateId:
        type: string
        title: ID of the template
      templateType:
        $ref: '#/definitions/v1ReviewRequestTemplateType'
        title: type of the template
  v1SortDirection:
    type: string
    enum:
      - SORT_DIRECTION_NOT_SET
      - SORT_DIRECTION_ASCENDING
      - SORT_DIRECTION_DESCENDING
    default: SORT_DIRECTION_NOT_SET
  v1Source:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
        title: 'The Source ID of the listing (ex: 10000)'
      name:
        type: string
        title: 'The name of the source (ex: Google)'
      sourceTypeName:
        type: string
        title: 'The name of the source type (ex: Directory Site)'
      sourceTypeId:
        type: string
        title: 'The ID of the source type (ex: directory-site)'
      icon:
        $ref: '#/definitions/SourceIcon'
        title: Icon details
      enabled:
        type: boolean
        title: Indicates whether the source is enabled/disabled based on the attributes (partner, market, taxonomy, location)
      hasReviews:
        type: boolean
        title: Source has reviews or not
      hasNoRatingsReviews:
        type: boolean
        title: Source has no rating reviews
      hasListings:
        type: boolean
        title: Source has listings
      adminNotes:
        type: string
        title: Admin notes about the source
      supportsSubmittingListings:
        type: boolean
        title: Core supports a user manually submitting a listing by URL
      ignoredAnchorDataMatches:
        type: array
        items:
          type: string
        title: Indicates certain fields to ignore when comparing anchor data
      partner:
        $ref: '#/definitions/SourceAttributeScope'
        title: Indicates by the partner attribute which ones are whitelisted, blacklisted and on by default
      location:
        $ref: '#/definitions/SourceAttributeScope'
        title: Indicates by the location attribute which ones are whitelisted, blacklisted and on by default
      taxonomy:
        $ref: '#/definitions/SourceAttributeScope'
        title: Indicates by the taxonomy attribute which ones are whitelisted, blacklisted and on by default
      submitListingData:
        $ref: '#/definitions/v1SourceSubmitListing'
        title: Data used for submitting a listing (URLs, help text, regex...)
      listingInteractionHtml:
        $ref: '#/definitions/SourceListingInteractionHTML'
        title: HTML explaining a source and how to create/edit/verify listings on it
    title: Details about a specific source
  v1SourceDetails:
    type: object
    properties:
      sources:
        type: array
        items:
          type: string
          format: int64
      ignoredSources:
        type: array
        items:
          type: string
          format: int64
    title: Indicates which sources are enabled and ignored by the business
  v1SourceSubmitListing:
    type: object
    properties:
      validationRegex:
        type: string
      helpText:
        type: string
      editListingUrl:
        type: string
      createListingUrl:
        type: string
    title: Information about submitting/editing a source
  v1Styling:
    type: object
    properties:
      theme:
        $ref: '#/definitions/StylingTheme'
      accentColour:
        type: string
  v1SubmitListingRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      listingUrl:
        type: string
      sourceId:
        type: string
        format: int64
  v1SubmitListingResponse:
    type: object
    properties:
      listingId:
        type: string
  v1SuggestReviewResponseRequest:
    type: object
    properties:
      reviewId:
        type: string
      businessId:
        type: string
      inSameLanguage:
        type: boolean
        description: Use the same language as the review when in_same_language is true. The response is in English by default.
  v1SuggestReviewResponseResponse:
    type: object
    properties:
      message:
        type: string
  v1TemplateType:
    type: string
    enum:
      - TEMPLATE_TYPE_UNSPECIFIED
      - TEMPLATE_TYPE_REVIEW_REQUEST
      - TEMPLATE_TYPE_NPS_REQUEST
      - TEMPLATE_TYPE_REVIEW_AND_NPS_REQUEST
    default: TEMPLATE_TYPE_UNSPECIFIED
  v1ThirdPartyPublishedStatus:
    type: string
    enum:
      - THIRD_PARTY_PUBLISHED_STATUS_EMPTY
      - THIRD_PARTY_PUBLISHED_STATUS_TRUE
      - THIRD_PARTY_PUBLISHED_STATUS_FALSE
    default: THIRD_PARTY_PUBLISHED_STATUS_EMPTY
    description: '- THIRD_PARTY_PUBLISHED_STATUS_EMPTY: Empty means the auto-publish minimum rating setting determines whether it''s published or not'
    title: Enum for review third party published status
  v1ThirdPartyReviewPublishSettings:
    type: object
    properties:
      widgetAllReviewsEnabled:
        type: boolean
        title: Whether the widget can show reviews for all sources
      minimumPublishRating:
        type: string
        format: int64
        title: The minimum star rating to auto-publish reviews, 0 means only manually published reviews
    title: Settings for publishing 3rd party reviews to review widget
  v1Toggles:
    type: object
    properties:
      showOverallRatingTitle:
        type: boolean
        title: Whether to show the title "Overall rating"
      showOverallRatingCard:
        type: boolean
        title: Whether to show the overall rating card which shows a summary of the review stats
      showReviewCount:
        type: boolean
        title: Whether to show the total review count
      showLeaveAReviewButton:
        type: boolean
        title: Whether to show the "Leave a review" button
      showHeader:
        type: boolean
        title: Whether or not to show the 'Reviews from our customers' header"
      showStarRatingSummary:
        type: boolean
        title: Whether or not to show the average star rating
      showReviewSource:
        type: boolean
        title: Whether or not to show the the source on each review card
      showReviewStarRating:
        type: boolean
        title: Whether or not to show the the star rating on each review card
      showReviewPublishedDate:
        type: boolean
        title: Whether or not to show the the published date on each review card
  v1UpdateBrandReviewResponseTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: The template to update
      partnerId:
        type: string
        title: The partner id of the brand updating the template
      brandId:
        type: string
        title: The id of the brand updating the template
  v1UpdateBusinessReviewResponseTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: The template to update
      businessId:
        type: string
        title: The id of the business updating the template
  v1UpdateDigitalAgentReviewResponseTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewResponseTemplate'
        title: The template to update
      partnerId:
        type: string
        title: The partner that owns the existing template
  v1UpdateListingRequest:
    type: object
    properties:
      listingId:
        $ref: '#/definitions/v1ListingIdentifier'
      isMine:
        type: boolean
        title: If provided, will mark listing as mine or not mine
      isVerified:
        type: boolean
        title: If provided, will mark listing as verified or not verified
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpdateReviewCommentRequest:
    type: object
    properties:
      reviewCommentId:
        type: string
      reviewCommentContent:
        type: string
    title: The request message for ReviewService.UpdateReviewComment
  v1UpdateReviewCommentResponse:
    type: object
    properties:
      reviewComment:
        $ref: '#/definitions/v1ReviewComment'
    description: The response message for ReviewService.UpdateReviewComment.
  v1UpdateReviewRequest:
    type: object
    properties:
      reviewId:
        $ref: '#/definitions/v1ReviewIdentifier'
      actionStatus:
        $ref: '#/definitions/v1ReviewActionStatus'
      isPublished:
        type: boolean
      isPublishedThirdPartyReview:
        type: boolean
      isSharedByReviewer:
        type: boolean
      newComment:
        type: boolean
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
    title: The request message for ReviewService.UpdateReview
  v1UpdateReviewRequestEmailTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1ReviewRequestTemplate'
        title: The template to update
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: The fields to update
  v1UpdateReviewRequestSMSTemplateRequest:
    type: object
    properties:
      templateId:
        type: string
      externalTemplateId:
        type: string
      title:
        type: string
      partnerId:
        type: string
      accountGroupId:
        type: string
      content:
        type: string
        title: The content of the template
      templateType:
        $ref: '#/definitions/v1TemplateType'
      npsRedirectReviewSource:
        type: boolean
        title: template configurations
      reviewSourceId:
        type: array
        items:
          type: string
        title: multiple review sources
      businessLogoUrl:
        type: string
        title: business logo
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: The fields to update
      includeBusinessLogo:
        type: boolean
        title: Include Business Logo based on the flag
  v1UpdateReviewResponse:
    type: object
    properties:
      reviewId:
        type: string
    title: The response message for ReviewService.UpdateReview
  v1UpdateReviewUserDeletedInfoRequest:
    type: object
    properties:
      reviewId:
        type: string
      userId:
        type: string
      deletedStatus:
        $ref: '#/definitions/v1ReviewDeletedStatus'
  v1UpdateReviewWidgetRequest:
    type: object
    properties:
      reviewWidget:
        $ref: '#/definitions/v1ReviewWidget'
        title: The review widget to update, with changes
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: The field mask for which fields to update
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
