swagger: "2.0"
info:
  title: sales/v2/api.proto
  version: version not set
tags:
  - name: CancellationRequests
  - name: BusinessService
  - name: Salespeople
  - name: Contacts
  - name: ActionLists
  - name: CampaignService
consumes:
  - application/json
produces:
  - application/json
paths:
  /sales.v2beta1.ActionLists/AddAccountsToActionList:
    post:
      summary: wrapper for AA /_ajax/v1/action-lists/add-accounts/
      operationId: ActionLists_AddAccountsToActionList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1AddAccountsToActionListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1AddAccountsToActionListRequest'
      tags:
        - ActionLists
  /sales.v2beta1.ActionLists/ListActionLists:
    post:
      summary: wrapper for AA /_ajax/v1/action-lists/get/
      operationId: ActionLists_ListActionLists
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1ListActionListsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1ListActionListsRequest'
      tags:
        - ActionLists
  /sales.v2beta1.BusinessService/GetAccountPrimaryContact:
    post:
      summary: GetAccountPrimaryContact will get the primaryContactId for an account on the ProspectingInfo table
      operationId: BusinessService_GetAccountPrimaryContact
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetAccountPrimaryContactResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetAccountPrimaryContactRequest'
      tags:
        - BusinessService
  /sales.v2beta1.BusinessService/GetSalesActivityForAccounts:
    post:
      summary: GetSalesActivityForAccounts will get the most recent sales activity date for the accounts provided
      operationId: BusinessService_GetSalesActivityForAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetSalesActivityForAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetSalesActivityForAccountsRequest'
      tags:
        - BusinessService
  /sales.v2beta1.BusinessService/Search:
    post:
      summary: Search will return a scored list of businesses that match the filters.
      operationId: BusinessService_Search
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1SearchResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1SearchRequest'
      tags:
        - BusinessService
  /sales.v2beta1.BusinessService/SearchBusinessesByContactEmail:
    post:
      summary: SearchBusinessesByContactEmail will return a list of businesses match the request
      operationId: BusinessService_SearchBusinessesByContactEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1SearchResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1SearchBusinessesByContactEmailRequest'
      tags:
        - BusinessService
  /sales.v2beta1.BusinessService/SetAccountPrimaryContact:
    post:
      summary: SetAccountPrimaryContact will set the primaryContactId for an account on the ProspectingInfo table
      operationId: BusinessService_SetAccountPrimaryContact
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1SetAccountPrimaryContactRequest'
      tags:
        - BusinessService
  /sales.v2beta1.CampaignService/AddContactToCampaign:
    post:
      operationId: CampaignService_AddContactToCampaign
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1AddContactToCampaignRequest'
      tags:
        - CampaignService
  /sales.v2beta1.CampaignService/GetMultiCampaigns:
    post:
      operationId: CampaignService_GetMultiCampaigns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetMultiCampaignsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetMultiCampaignsRequest'
      tags:
        - CampaignService
  /sales.v2beta1.CampaignService/LookupCampaigns:
    post:
      operationId: CampaignService_LookupCampaigns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1LookupCampaignsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1LookupCampaignsRequest'
      tags:
        - CampaignService
  /sales.v2beta1.CancellationRequests/Create:
    post:
      operationId: CancellationRequests_Create
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1CreateRequest'
      tags:
        - CancellationRequests
  /sales.v2beta1.CancellationRequests/IsConfigValid:
    post:
      operationId: CancellationRequests_IsConfigValid
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1IsConfigValidResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1IsConfigValidRequest'
      tags:
        - CancellationRequests
  /sales.v2beta1.CancellationRequests/List:
    post:
      operationId: CancellationRequests_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1ListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1ListRequest'
      tags:
        - CancellationRequests
  /sales.v2beta1.CancellationRequests/UpdateStatus:
    post:
      operationId: CancellationRequests_UpdateStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1UpdateStatusRequest'
      tags:
        - CancellationRequests
  /sales.v2beta1.Contacts/Create:
    post:
      summary: Creates a new V2 contact in vStore
      operationId: Contacts_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1CreateContactResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1CreateContactRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/Delete:
    post:
      operationId: Contacts_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1DeleteContactRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/GetContactByID:
    post:
      operationId: Contacts_GetContactByID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetContactResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetContactByIDRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/GetContactsForAccounts:
    post:
      operationId: Contacts_GetContactsForAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetContactsForAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetContactsForAccountsRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/ListContactsForBusiness:
    post:
      operationId: Contacts_ListContactsForBusiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1ListContactsForBusinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1ListContactsForBusinessRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/ListContactsForEmail:
    post:
      operationId: Contacts_ListContactsForEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1ListContactsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1ListContactsForEmailRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/ListContactsForPhoneNumber:
    post:
      summary: |-
        List contacts given a phone number
        Matches contacts phone number given specified phone number format
      operationId: Contacts_ListContactsForPhoneNumber
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1ListContactsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1ListContactsForPhoneNumberRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/ResendUserWelcomeEmail:
    post:
      operationId: Contacts_ResendUserWelcomeEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1ResendUserWelcomeEmailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1ResendUserWelcomeEmailRequest'
      tags:
        - Contacts
  /sales.v2beta1.Contacts/Update:
    post:
      operationId: Contacts_Update
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1UpdateContactRequest'
      tags:
        - Contacts
  /sales.v2beta1.Salespeople/CreateSalespersonForUser:
    post:
      operationId: Salespeople_CreateSalespersonForUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1CreateSalespersonForUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1CreateSalespersonForUserRequest'
      tags:
        - Salespeople
  /sales.v2beta1.Salespeople/GetMultiOpportunityEfforts:
    post:
      summary: Gets efforts salespeople done against opportunities
      operationId: Salespeople_GetMultiOpportunityEfforts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetMultiOpportunityEffortsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetMultiOpportunityEffortsRequest'
      tags:
        - Salespeople
  /sales.v2beta1.Salespeople/GetSalespersonByEmail:
    post:
      operationId: Salespeople_GetSalespersonByEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetSalespersonByEmailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetSalespersonByEmailRequest'
      tags:
        - Salespeople
  /sales.v2beta1.Salespeople/GetSalespersonByUserId:
    post:
      operationId: Salespeople_GetSalespersonByUserId
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2beta1GetSalespersonByUserIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1GetSalespersonByUserIdRequest'
      tags:
        - Salespeople
  /sales.v2beta1.Salespeople/SendPasswordResetEmail:
    post:
      operationId: Salespeople_SendPasswordResetEmail
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1SendPasswordResetEmailRequest'
      tags:
        - Salespeople
definitions:
  AddContactToCampaignRequestRecipient:
    type: object
    properties:
      accountGroupId:
        type: string
      emailAddress:
        type: string
  ListContactsForPhoneNumberRequestListOptions:
    type: object
    properties:
      includeDeleted:
        type: boolean
        title: Will return deleted contacts; default is false
      phoneNumberFormat:
        type: string
        title: |-
          Option to provide a hint on how to treat phone number
          Possible options are either unset or "e164"
    title: Options for listing contcats given a phone number
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v2beta1AccountLatestSalesActivity:
    type: object
    properties:
      accountId:
        type: string
      lastActivityDate:
        type: string
        format: date-time
  v2beta1ActionList:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      accounts:
        type: string
        format: int64
      inProgress:
        type: boolean
  v2beta1AddAccountsToActionListRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      listName:
        type: string
      accountGroupIds:
        type: array
        items:
          type: string
  v2beta1AddAccountsToActionListResponse:
    type: object
    properties:
      actionListId:
        type: string
        title: the ID of the action list that was appended or created
  v2beta1AddContactToCampaignRequest:
    type: object
    properties:
      partnerId:
        type: string
      campaignId:
        type: string
      marketId:
        type: string
      senderUnifiedUserId:
        type: string
      contact:
        $ref: '#/definitions/AddContactToCampaignRequestRecipient'
  v2beta1Business:
    type: object
    properties:
      id:
        type: string
      accountGroupId:
        type: string
      updated:
        type: string
        format: date-time
  v2beta1CancellationRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      cancellationRequestId:
        type: string
      partnerId:
        type: string
      lineItemId:
        type: string
      requestingUserId:
        type: string
      status:
        $ref: '#/definitions/v2beta1CancellationRequestStatus'
      reason:
        $ref: '#/definitions/v2beta1CancellationRequestReason'
      message:
        type: string
      requestCreatedDate:
        type: string
        format: date-time
  v2beta1CancellationRequestReason:
    type: string
    enum:
      - CANCELLATION_REQUEST_REASON_UNSET
      - CANCELLATION_REQUEST_REASON_OTHER
    default: CANCELLATION_REQUEST_REASON_UNSET
  v2beta1CancellationRequestStatus:
    type: string
    enum:
      - CANCELLATION_REQUEST_STATUS_UNSET
      - CANCELLATION_REQUEST_STATUS_REQUESTED
      - CANCELLATION_REQUEST_STATUS_RESOLVED
      - CANCELLATION_REQUEST_STATUS_DECLINED
    default: CANCELLATION_REQUEST_STATUS_UNSET
  v2beta1Contact:
    type: object
    properties:
      contactId:
        type: string
      notes:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      title:
        type: string
      contactEmail:
        type: string
      phoneNumber:
        type: string
      phoneExtension:
        type: string
      accountIds:
        type: array
        items:
          type: string
      created:
        type: string
        format: date-time
      phoneNumberCountry:
        type: string
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      marketId:
        type: string
  v2beta1CreateContactRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      accountGroupIds:
        type: array
        items:
          type: string
      phoneNumber:
        type: string
      phoneNumberCountry:
        type: string
      phoneNumberExtension:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      title:
        type: string
      notes:
        type: string
  v2beta1CreateContactResponse:
    type: object
    properties:
      contact:
        $ref: '#/definitions/v2beta1Contact'
  v2beta1CreateRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      lineItemId:
        type: string
      requestingUserId:
        type: string
      status:
        $ref: '#/definitions/v2beta1CancellationRequestStatus'
      reason:
        $ref: '#/definitions/v2beta1CancellationRequestReason'
      message:
        type: string
  v2beta1CreateSalespersonForUserRequest:
    type: object
    properties:
      authCheckOnly:
        type: boolean
      userId:
        type: string
      marketId:
        type: string
      isSalesManager:
        type: boolean
  v2beta1CreateSalespersonForUserResponse:
    type: object
  v2beta1DeleteContactRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      contactId:
        type: string
  v2beta1EffortAggregate:
    type: object
    properties:
      efforts:
        type: object
        additionalProperties:
          type: string
          format: int64
    title: Number of sales efforts mapped to the effort type
  v2beta1GetAccountPrimaryContactRequest:
    type: object
    properties:
      accountId:
        type: string
      partnerId:
        type: string
      marketId:
        type: string
  v2beta1GetAccountPrimaryContactResponse:
    type: object
    properties:
      contactId:
        type: string
  v2beta1GetContactByIDRequest:
    type: object
    properties:
      contactId:
        type: string
  v2beta1GetContactResponse:
    type: object
    properties:
      contact:
        $ref: '#/definitions/v2beta1Contact'
  v2beta1GetContactsForAccountsRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      accountIds:
        type: array
        items:
          type: string
  v2beta1GetContactsForAccountsResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1Contact'
  v2beta1GetMultiCampaignsRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      accountGroupId:
        type: string
      campaignIds:
        type: array
        items:
          type: string
  v2beta1GetMultiCampaignsResponse:
    type: object
    properties:
      campaigns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1SalesCampaign'
  v2beta1GetMultiOpportunityEffortsRequest:
    type: object
    properties:
      opportunityIds:
        type: array
        items:
          type: string
  v2beta1GetMultiOpportunityEffortsResponse:
    type: object
    properties:
      opportunityEfforts:
        type: object
        additionalProperties:
          $ref: '#/definitions/v2beta1EffortAggregate'
        title: Effort aggregates mapped to the opportunity
  v2beta1GetSalesActivityForAccountsRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      accountIds:
        type: array
        items:
          type: string
  v2beta1GetSalesActivityForAccountsResponse:
    type: object
    properties:
      accountsLatestSalesActivity:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1AccountLatestSalesActivity'
  v2beta1GetSalespersonByEmailRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID of the salesperson
      email:
        type: string
        title: Email of the salesperson
      marketId:
        type: string
        title: Market ID of the salesperson
  v2beta1GetSalespersonByEmailResponse:
    type: object
    properties:
      salesperson:
        $ref: '#/definitions/v2beta1Salesperson'
  v2beta1GetSalespersonByUserIdRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: Partner ID of the salesperson
      userId:
        type: string
        title: User ID or Subject ID of the sales person
  v2beta1GetSalespersonByUserIdResponse:
    type: object
    properties:
      salesperson:
        $ref: '#/definitions/v2beta1Salesperson'
  v2beta1IsConfigValidRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
  v2beta1IsConfigValidResponse:
    type: object
    properties:
      isValid:
        type: boolean
  v2beta1ListActionListsRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/v2beta1PageIndexedRequestOptions'
      partnerId:
        type: string
      marketId:
        type: string
      searchString:
        type: string
  v2beta1ListActionListsResponse:
    type: object
    properties:
      actionLists:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1ActionList'
      nextPage:
        type: string
        format: int64
      totalActionListsCount:
        type: string
        format: int64
  v2beta1ListContactsForBusinessRequest:
    type: object
    properties:
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
      pagingOptions:
        $ref: '#/definitions/v2beta1PagedRequestOptions'
      accountGroupId:
        type: string
  v2beta1ListContactsForBusinessResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1Contact'
  v2beta1ListContactsForEmailRequest:
    type: object
    properties:
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
      pagingOptions:
        $ref: '#/definitions/v2beta1PagedRequestOptions'
      partnerId:
        type: string
      marketId:
        type: string
      contactEmail:
        type: string
  v2beta1ListContactsForPhoneNumberRequest:
    type: object
    properties:
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: Field mask to return request fields; must specify which fields to return
      pagingOptions:
        $ref: '#/definitions/v2beta1PagedRequestOptions'
      phoneNumber:
        type: string
        title: Phone number to match agasint
      options:
        $ref: '#/definitions/ListContactsForPhoneNumberRequestListOptions'
  v2beta1ListContactsResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1Contact'
  v2beta1ListRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
      marketId:
        type: string
  v2beta1ListResponse:
    type: object
    properties:
      requests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1CancellationRequest'
  v2beta1LookupCampaignsRequest:
    type: object
    properties:
      partnerId:
        type: string
      status:
        type: array
        items:
          type: string
      focus:
        type: array
        items:
          type: string
      state:
        type: array
        items:
          type: string
      offset:
        type: string
        format: int64
      pageSize:
        type: string
        format: int64
      searchTerm:
        type: string
      marketId:
        type: string
  v2beta1LookupCampaignsResponse:
    type: object
    properties:
      campaigns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1SalesCampaign'
  v2beta1PageIndexedRequestOptions:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the requested page
      pageIndex:
        type: string
        format: int64
        title: page_index specifies the page number of the first result to return
    title: paging using page size+page index
  v2beta1PagedRequestOptions:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the requested page
    title: paging using cursors
  v2beta1ResendUserWelcomeEmailRequest:
    type: object
    properties:
      partnerId:
        type: string
      subjectId:
        type: string
  v2beta1ResendUserWelcomeEmailResponse:
    type: object
    properties:
      notificationId:
        type: string
  v2beta1SalesCampaign:
    type: object
    properties:
      name:
        type: string
      campaignStatus:
        type: string
      campaignId:
        type: string
      campaignSchedule:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1ScheduleStep'
  v2beta1Salesperson:
    type: object
    properties:
      salespersonId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phoneNumber:
        type: array
        items:
          type: string
      unifiedUserId:
        type: string
      countryCode:
        type: string
      marketId:
        type: string
      photoUrlHttps:
        type: string
      lastLogin:
        type: string
        format: date-time
  v2beta1ScheduleStep:
    type: object
    properties:
      stepType:
        type: string
      secondsAfterLastEmail:
        type: string
        format: int64
      name:
        type: string
      templateId:
        type: string
  v2beta1SearchBusinessesByContactEmailRequest:
    type: object
    properties:
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
      partnerId:
        type: string
        title: The partner the business is in
      marketId:
        type: string
        title: The market the business is in
      contactEmailQuery:
        type: string
        title: The email of the contact to filter businesses by
      assignedUserId:
        type: string
        title: The user assigned to the business
  v2beta1SearchRequest:
    type: object
    properties:
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
      partnerId:
        type: string
      marketId:
        type: string
      pagingOptions:
        $ref: '#/definitions/v2beta1PagedRequestOptions'
  v2beta1SearchResponse:
    type: object
    properties:
      businesses:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2beta1Business'
  v2beta1SendPasswordResetEmailRequest:
    type: object
    properties:
      salesPersonId:
        type: string
        title: ID for the salesperson who will receive the email
      usePlatformDefaultDomain:
        type: boolean
        description: |-
          When true, the message will be sent using a pre-authorized gray-labelled
          domain that the platform is authorized to use for sending emails.
      partnerId:
        type: string
        title: ID for the partner who is sending the email
  v2beta1SetAccountPrimaryContactRequest:
    type: object
    properties:
      accountId:
        type: string
      contactId:
        type: string
      partnerId:
        type: string
      marketId:
        type: string
  v2beta1UpdateContactRequest:
    type: object
    properties:
      partnerId:
        type: string
      marketId:
        type: string
      contact:
        $ref: '#/definitions/v2beta1Contact'
        title: The contact object to be modified
      mutatorMask:
        $ref: '#/definitions/vendastatypesFieldMask'
        title: The fields to be modified, leave empty if all fields should be modified
  v2beta1UpdateStatusRequest:
    type: object
    properties:
      cancellationRequestId:
        type: string
      status:
        $ref: '#/definitions/v2beta1CancellationRequestStatus'
      userId:
        type: string
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
