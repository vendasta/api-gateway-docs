swagger: "2.0"
info:
  title: sales_orders/v1/proposal_builder_api.proto
  version: version not set
tags:
  - name: Documents
consumes:
  - application/json
produces:
  - application/json
paths:
  /salesorders.v1.Documents/ArchiveDocument:
    post:
      summary: Archives the document for the document id sent in the request
      operationId: Documents_ArchiveDocument
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ArchiveDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/CreateDocument:
    post:
      summary: Will create a document based on the document type sent in the request.
      operationId: Documents_CreateDocument
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateDocumentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/DeleteDocument:
    post:
      summary: |-
        Deletes the document for the given document id sent in the request.
        TODO: Need to figure out on the behaviour of this API if a proposal is linked to the order.
        TODO: Are we going to delete the subsequent order linked to it or not?
        NOTE: Currently delete document supports only templates
      operationId: Documents_DeleteDocument
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/GenerateDocumentPDF:
    post:
      summary: Generate a PDF for the document asynchronously
      operationId: Documents_GenerateDocumentPDF
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GenerateDocumentPDFRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/GetDocument:
    post:
      summary: Gets the document related to the documentID passed in the request.
      operationId: Documents_GetDocument
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetDocumentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: GetDocument will be getting the metadata+contents for the document_id passed as a request.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/GetDocumentLineItems:
    post:
      summary: |-
        Gets the line items that are set on a proposal or proposal template document
        represented by its pricing table.
      operationId: Documents_GetDocumentLineItems
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetDocumentLineItemsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetDocumentLineItemsRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/GetMultiDocuments:
    post:
      summary: |-
        Gets documents by documentIDs, documents that do not exist will have an empty value at the same index
        Requesting any documents that you do not have READ access to will result in just an error being returned
      operationId: Documents_GetMultiDocuments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiDocumentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiDocumentsRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/GetProposalEmailPreview:
    post:
      summary: Get a preview of the prospect email
      operationId: Documents_GetProposalEmailPreview
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProposalEmailPreviewResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetProposalEmailPreviewRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/ListDocumentEvents:
    post:
      summary: Lists events associated with a document
      operationId: Documents_ListDocumentEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDocumentEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDocumentEventsRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/ListDocuments:
    post:
      summary: Lists all the documents depending on the filters in the request.
      operationId: Documents_ListDocuments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDocumentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDocumentsRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/MarkDocumentAsReviewed:
    post:
      summary: Marks a document as reviewed by a given user
      operationId: Documents_MarkDocumentAsReviewed
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1MarkDocumentAsReviewedRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/MarkDocumentAsViewed:
    post:
      summary: Marks a document as viewed by a given user
      operationId: Documents_MarkDocumentAsViewed
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1MarkDocumentAsViewedRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/SearchDocuments:
    post:
      summary: A paged endpoint for searching documents.
      operationId: Documents_SearchDocuments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchDocumentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchDocumentsRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/SendDocumentForInternalReview:
    post:
      summary: Sends document for an internal review
      operationId: Documents_SendDocumentForInternalReview
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendDocumentForInternalReviewRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/SendProposalRecipientEmail:
    post:
      summary: Send an email to the prospect of a proposal
      operationId: Documents_SendProposalRecipientEmail
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SendProposalRecipientEmailRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/UnarchiveDocument:
    post:
      summary: UnArchives the document for the document id sent in the request
      operationId: Documents_UnarchiveDocument
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnarchiveDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/UnlockDocument:
    post:
      summary: Sets a document's status from Reviewed back to Draft
      operationId: Documents_UnlockDocument
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UnlockDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/UpdateDocument:
    post:
      summary: |-
        UpdateDocument will only modify the preferences defined in the field_mask.
        A lack of field_mask resulting in an error is a modified, but acceptable, behaviour from the FieldMask spec.
        See https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
      operationId: Documents_UpdateDocument
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateDocumentRequest'
      tags:
        - Documents
  /salesorders.v1.Documents/UpsertDocumentLineItems:
    post:
      summary: |-
        Inserts or updates the line items of a proposal or proposal template document
        depending on if any have been set before.
      operationId: Documents_UpsertDocumentLineItems
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpsertDocumentLineItemsRequest'
      tags:
        - Documents
definitions:
  LineItemAppKey:
    type: object
    properties:
      appId:
        type: string
      editionId:
        type: string
      packageId:
        type: string
        description: A package id is optional, it is used to group line items together in a package.
      packageInstanceId:
        type: string
        description: |-
          A package instance id keeps track of the package instance that a line item belongs to. For example, if the customer purchases two packages that contain the same product,
          this will identify which package the product belongs to.

          This must be provided if a package id is provided, and should not be provided if there is no package id provided. The ID should be a uuid.
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1ArchiveDocumentRequest:
    type: object
    properties:
      documentId:
        type: string
  v1BillingPeriod:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        title: The start date of the billing period
      endDate:
        type: string
        format: date-time
        title: The end date of the billing period
      duration:
        $ref: '#/definitions/v1Duration'
        title: Value representing the duration to bill for (use instead of end date)
    title: The Time frame to bill for
  v1Content:
    type: object
    properties:
      type:
        $ref: '#/definitions/v1ContentType'
        title: type of content
      value:
        type: string
        title: value of that content
    title: A content for use in an email message
  v1ContentType:
    type: string
    enum:
      - CONTENT_TYPE_TEXT_PLAIN
      - CONTENT_TYPE_TEXT_HTML
    default: CONTENT_TYPE_TEXT_PLAIN
  v1Cost:
    type: object
    properties:
      customPrice:
        type: string
        format: int64
        title: The custom price of the order item. Can only be changed if the application supports custom pricing
    title: Cost represents the wholesale cost of an order
  v1CreateDocumentRequest:
    type: object
    properties:
      document:
        $ref: '#/definitions/v1Document'
  v1CreateDocumentResponse:
    type: object
    properties:
      documentId:
        type: string
  v1Currency:
    type: string
    enum:
      - USD
      - CAD
      - EUR
      - AUD
      - GBP
      - NZD
      - ZAR
    default: USD
    title: '- ZAR: Do not add to this list. If more currencies are required currency_code should be used instead'
  v1CustomPriceMapping:
    type: object
    properties:
      productId:
        type: string
        title: The ID of the product
      customPrice:
        type: string
        format: int64
        title: The custom price value of the product
    title: Representing custom prices for variable priced products in a package
  v1DeleteDocumentRequest:
    type: object
    properties:
      documentId:
        type: string
  v1Document:
    type: object
    properties:
      documentId:
        type: string
      title:
        type: string
      description:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      deleted:
        type: string
        format: date-time
      pageCount:
        type: string
        format: int64
      jsonContent:
        type: string
      type:
        $ref: '#/definitions/v1DocumentType'
      shareType:
        $ref: '#/definitions/v1DocumentShareType'
      organizationId:
        type: string
        title: |-
          The organization the document belongs to.
          This will evolve to be a partner_id, vendor_id, or business_id.
          Read more here: https://vendasta.jira.com/wiki/spaces/RD/pages/510984296/Organization+Hierarchy+and+Roles?focusedCommentId=664830778#comment-664830778
      organizationType:
        $ref: '#/definitions/v1OrganizationType'
      creatorUserId:
        type: string
        title: |-
          The user_id of the user who created the document
          May be scoped under organization_type in the future if necessary (hubspot user, vendasta user, etc)
      recipientOrganizationId:
        type: string
        description: The organization the document may be getting sent to.
      recipientOrganizationType:
        $ref: '#/definitions/v1OrganizationType'
      orderId:
        type: string
      tags:
        type: array
        items:
          type: string
      marketId:
        type: string
      status:
        $ref: '#/definitions/v1DocumentStatus'
      archived:
        type: string
        format: date-time
      viewCount:
        type: string
        format: int64
      thumbnailPath:
        type: string
      pdfPath:
        type: string
      snapshotId:
        type: string
      currencyCode:
        type: string
      recipientContactId:
        type: string
      format:
        $ref: '#/definitions/v1Format'
  v1DocumentEmailRecipient:
    type: object
    properties:
      name:
        type: string
      emailAddress:
        type: string
  v1DocumentEvent:
    type: object
    properties:
      documentId:
        type: string
      occurred:
        type: string
        format: date-time
      performedBy:
        type: string
        title: performed_by is who is performing the event, this could be an IAM user id, or an IAM temporary subject id
      eventType:
        $ref: '#/definitions/v1DocumentEventType'
        title: event_type describes the type of event that occurred
      eventContext:
        type: string
        title: event_context provides context to the event that occurred
      deleted:
        type: string
        format: date-time
      context:
        $ref: '#/definitions/v1DocumentEventContext'
  v1DocumentEventContext:
    type: object
    properties:
      sentByEmailContext:
        $ref: '#/definitions/v1DocumentEventContextSentByEmail'
      viewedByRecipientContext:
        $ref: '#/definitions/v1DocumentEventContextViewedByRecipient'
      approvedByRecipientContext:
        $ref: '#/definitions/v1DocumentEventContextApprovedByRecipient'
      feedbackFromRecipientContext:
        $ref: '#/definitions/v1DocumentEventContextFeedbackFromRecipient'
      commentFromInternalUserContext:
        $ref: '#/definitions/v1DocumentEventContextCommentFromInternalUser'
      sendForInternalReviewContext:
        $ref: '#/definitions/v1DocumentEventContextSendForInternalReview'
      reviewedByInternalUserContext:
        $ref: '#/definitions/v1DocumentEventContextReviewedByInternalUser'
      unlockedDocumentContext:
        $ref: '#/definitions/v1DocumentEventContextUnlockDocument'
  v1DocumentEventContextApprovedByRecipient:
    type: object
    properties:
      email:
        type: string
        title: The email address of the user that approved the proposal
  v1DocumentEventContextCommentFromInternalUser:
    type: object
    properties:
      userId:
        type: string
      conversationOriginLocationExternalId:
        type: string
  v1DocumentEventContextFeedbackFromRecipient:
    type: object
    properties:
      orderId:
        type: string
      recipientOrganizationId:
        type: string
      recipientOrganizationType:
        $ref: '#/definitions/v1OrganizationType'
      recipientEmail:
        type: string
      recipientName:
        type: string
  v1DocumentEventContextReviewedByInternalUser:
    type: object
    properties:
      reviewerUserId:
        type: string
      comment:
        type: string
  v1DocumentEventContextSendForInternalReview:
    type: object
    properties:
      requesterUserId:
        type: string
      reviewerUserId:
        type: string
      comment:
        type: string
  v1DocumentEventContextSentByEmail:
    type: object
    properties:
      sentEmails:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SentDocumentEmail'
  v1DocumentEventContextUnlockDocument:
    type: object
    properties:
      userId:
        type: string
  v1DocumentEventContextViewedByRecipient:
    type: object
    properties:
      orderId:
        type: string
        title: The id of the order associated with the proposal
      recipientOrganizationId:
        type: string
      recipientOrganizationType:
        $ref: '#/definitions/v1OrganizationType'
      recipientEmail:
        type: string
      recipientName:
        type: string
  v1DocumentEventType:
    type: string
    enum:
      - DOCUMENT_EVENT_TYPE_INVALID
      - DOCUMENT_EVENT_TYPE_SENT_BY_EMAIL
      - DOCUMENT_EVENT_TYPE_VIEWED_BY_RECIPIENT
      - DOCUMENT_EVENT_TYPE_FEEDBACK_FROM_RECIPIENT
      - DOCUMENT_EVENT_TYPE_APPROVED_BY_RECIPIENT
      - DOCUMENT_EVENT_TYPE_INTERNAL_REVIEW_REQUESTED
      - DOCUMENT_EVENT_TYPE_COMMENT_FROM_INTERNAL_USER
      - DOCUMENT_EVENT_TYPE_REVIEWED_BY_INTERNAL_USER
      - DOCUMENT_EVENT_TYPE_UNLOCK_DOCUMENT
    default: DOCUMENT_EVENT_TYPE_INVALID
  v1DocumentShareType:
    type: string
    enum:
      - DOCUMENT_SHARE_TYPE_INVALID
      - DOCUMENT_SHARE_TYPE_GLOBAL
      - DOCUMENT_SHARE_TYPE_ORGANIZATION
    default: DOCUMENT_SHARE_TYPE_INVALID
    description: |-
      - DOCUMENT_SHARE_TYPE_GLOBAL: GLOBAL share type indicates the document can be seen by every user of the service.
       - DOCUMENT_SHARE_TYPE_ORGANIZATION: ORGANIZATION indicates the document can only be seen by users in the same organization (within the same partner, or within the same business)
    title: DocumentShareType determines how the document can be shared
  v1DocumentStatus:
    type: string
    enum:
      - DOCUMENT_STATUS_INVALID
      - DOCUMENT_STATUS_SENT
      - DOCUMENT_STATUS_VIEWED_BY_RECIPIENT
      - DOCUMENT_STATUS_FEEDBACK_FROM_RECIPIENT
      - DOCUMENT_STATUS_APPROVED_BY_RECIPIENT
      - DOCUMENT_STATUS_ARCHIVED
      - DOCUMENT_STATUS_DELETED
      - DOCUMENT_STATUS_PENDING_REVIEW
      - DOCUMENT_STATUS_REVIEWED
      - DOCUMENT_STATUS_DRAFT
    default: DOCUMENT_STATUS_INVALID
    description: |2-
       - DOCUMENT_STATUS_DRAFT: Statuses are pretty closely matched with event type.
      {adding this number to make room for them to grow together.
  v1DocumentType:
    type: string
    enum:
      - DOCUMENT_TYPE_INVALID
      - DOCUMENT_TYPE_PROPOSAL
      - DOCUMENT_TYPE_PROPOSAL_TEMPLATE
      - DOCUMENT_TYPE_PAGE_TEMPLATE
      - DOCUMENT_TYPE_WIDGET_TEMPLATE
    default: DOCUMENT_TYPE_INVALID
    description: '- DOCUMENT_TYPE_PROPOSAL: intended to be sent to a client or already has been'
    title: Thinking this can be a set of pages (proposal), a page, or a widget (portion of a page)
  v1Duration:
    type: object
    properties:
      value:
        type: string
        format: int64
        description: Value for duration of time of a given operation.
      duration:
        $ref: '#/definitions/v1DurationPeriod'
        description: Unit for measuring time.
  v1DurationPeriod:
    type: string
    enum:
      - UNSPECIFIED
      - MONTH
      - YEAR
      - DAY
      - WEEK
    default: UNSPECIFIED
  v1Format:
    type: object
    properties:
      orientation:
        $ref: '#/definitions/v1Orientation'
    title: provides global settings for a document's formatting
  v1GenerateDocumentPDFRequest:
    type: object
    properties:
      documentId:
        type: string
  v1GetDocumentLineItemsRequest:
    type: object
    properties:
      documentId:
        type: string
  v1GetDocumentLineItemsResponse:
    type: object
    properties:
      lineItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LineItem'
  v1GetDocumentRequest:
    type: object
    properties:
      documentId:
        type: string
    description: GetDocument will be getting the metadata+contents for the document_id passed as a request.
  v1GetDocumentResponse:
    type: object
    properties:
      document:
        $ref: '#/definitions/v1Document'
  v1GetMultiDocumentsRequest:
    type: object
    properties:
      documentIds:
        type: array
        items:
          type: string
  v1GetMultiDocumentsResponse:
    type: object
    properties:
      documents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Document'
  v1GetProposalEmailPreviewRequest:
    type: object
    properties:
      documentId:
        type: string
      proposalEmailDetails:
        $ref: '#/definitions/v1ProposalEmailDetails'
      senderUserId:
        type: string
  v1GetProposalEmailPreviewResponse:
    type: object
    properties:
      emailPreviewContent:
        $ref: '#/definitions/v1Content'
  v1LineItem:
    type: object
    properties:
      appKey:
        $ref: '#/definitions/LineItemAppKey'
      packageId:
        type: string
      currency:
        $ref: '#/definitions/v1Currency'
        title: While this is not deprecated, more currencies than the value of the enum are supported. To use those currencies use currency_code instead
      initialRevenue:
        $ref: '#/definitions/v1Revenue'
        title: 'DEPRECATED: not important now that there is a draft state for sales orders, history of the order should be used instead'
      currentRevenue:
        $ref: '#/definitions/v1Revenue'
      quantity:
        type: string
        format: int64
      isTrial:
        type: boolean
        title: Only used when AppKey is the identifier
      currencyCode:
        type: string
        description: The 3-letter currency code defined in ISO 4217.
      cost:
        $ref: '#/definitions/v1Cost'
      customPrices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CustomPriceMapping'
        title: The custom price mapping for variable priced products in a package in the order
      billingPeriod:
        $ref: '#/definitions/v1BillingPeriod'
        title: The billing period of the line item
      autoBillable:
        type: boolean
        title: 'DEPRECATED: use non_billable instead'
      nonBillable:
        type: boolean
        title: |-
          Indicates whether this line item should be billable or not
          If true, the item will not be billed
      taxRateIds:
        type: array
        items:
          type: string
        title: The tax rate ids that apply to this line item
  v1ListDocumentEventsRequest:
    type: object
    properties:
      documentId:
        type: string
      filters:
        $ref: '#/definitions/v1ListDocumentEventsRequestFilters'
  v1ListDocumentEventsRequestFilters:
    type: object
    properties:
      eventTypes:
        type: array
        items:
          $ref: '#/definitions/v1DocumentEventType'
  v1ListDocumentEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DocumentEvent'
  v1ListDocumentsRequest:
    type: object
    properties:
      paging:
        $ref: '#/definitions/vendastatypesPagedRequestOptions'
      filters:
        $ref: '#/definitions/v1ListDocumentsRequestFilters'
  v1ListDocumentsRequestFilters:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/v1DocumentType'
        title: If not provided, defaults to all types
      organizationId:
        type: string
      recipientOrganizationId:
        type: string
      marketId:
        type: string
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1DocumentStatus'
        title: If not provided, defaults to all statuses
  v1ListDocumentsResponse:
    type: object
    properties:
      documents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Document'
      paging:
        $ref: '#/definitions/vendastatypesPagedResponseMetadata'
  v1MarkDocumentAsReviewedRequest:
    type: object
    properties:
      documentId:
        type: string
      reviewerUserId:
        type: string
      comment:
        type: string
  v1MarkDocumentAsViewedRequest:
    type: object
    properties:
      documentId:
        type: string
      orderToken:
        type: string
  v1OrganizationType:
    type: string
    enum:
      - ORGANIZATION_TYPE_INVALID
      - ORGANIZATION_TYPE_PARTNER
      - ORGANIZATION_TYPE_SMB
    default: ORGANIZATION_TYPE_INVALID
  v1Orientation:
    type: string
    enum:
      - ORIENTATION_PORTRAIT
      - ORIENTATION_LANDSCAPE
    default: ORIENTATION_PORTRAIT
  v1ProposalEmailDetails:
    type: object
    properties:
      subject:
        type: string
      emailText:
        type: string
      proposalLinkText:
        type: string
      closingText:
        type: string
  v1ProposalEmailMessage:
    type: object
    properties:
      to:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Recipient'
      replyTo:
        $ref: '#/definitions/v1Recipient'
        title: Recipient whom the message's replies should go to
  v1Recipient:
    type: object
    properties:
      name:
        type: string
      emailAddress:
        type: string
  v1Revenue:
    type: object
    properties:
      revenueComponents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RevenueComponent'
    title: Revenue represents the retail price of an order
  v1RevenueComponent:
    type: object
    properties:
      value:
        type: string
        format: int64
        description: The value in the smallest common currency unit i.e. cents. Therefore 4000 would represent $40.00.
      period:
        $ref: '#/definitions/v1RevenuePeriod'
        description: The frequency this revenue occurs.
      isStartingRevenue:
        type: boolean
        title: The indication if this is only the starting price or the actual price
  v1RevenuePeriod:
    type: string
    enum:
      - ONETIME
      - DAILY
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
      - YEARLY
    default: ONETIME
  v1SearchDocumentsRequest:
    type: object
    properties:
      paging:
        $ref: '#/definitions/vendastatypesPagedRequestOptions'
      filters:
        $ref: '#/definitions/v1SearchDocumentsRequestFilters'
      searchTerm:
        type: string
  v1SearchDocumentsRequestFilters:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/v1DocumentType'
        title: If not provided, defaults to all types
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1DocumentStatus'
        title: If not provided, defaults to all statuses
      organizationId:
        type: string
      recipientOrganizationId:
        type: string
      marketId:
        type: string
      organizationUserIds:
        type: array
        items:
          type: string
        title: If not provided, defaults to all users
  v1SearchDocumentsResponse:
    type: object
    properties:
      documents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Document'
      paging:
        $ref: '#/definitions/vendastatypesPagedResponseMetadata'
  v1SendDocumentForInternalReviewRequest:
    type: object
    properties:
      documentId:
        type: string
      requesterUserId:
        type: string
      reviewerUserId:
        type: string
      comment:
        type: string
  v1SendProposalRecipientEmailRequest:
    type: object
    properties:
      proposalEmailMessage:
        $ref: '#/definitions/v1ProposalEmailMessage'
      senderUserId:
        type: string
      documentId:
        type: string
        title: The document_id will be used to determine the details regarding the document
      idempotencyKey:
        type: string
        title: The idempotency key, if provided, will be used as part of the hash for determining the uniqueness of an email
      organizationId:
        type: string
        title: The ID of the partner sending the email
      proposalEmailDetails:
        $ref: '#/definitions/v1ProposalEmailDetails'
  v1SentDocumentEmail:
    type: object
    properties:
      emailId:
        type: string
      recipient:
        $ref: '#/definitions/v1DocumentEmailRecipient'
  v1UnarchiveDocumentRequest:
    type: object
    properties:
      documentId:
        type: string
  v1UnlockDocumentRequest:
    type: object
    properties:
      documentId:
        type: string
      userId:
        type: string
  v1UpdateDocumentRequest:
    type: object
    properties:
      documentId:
        type: string
      document:
        $ref: '#/definitions/v1Document'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1UpsertDocumentLineItemsRequest:
    type: object
    properties:
      documentId:
        type: string
      lineItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LineItem'
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
  vendastatypesPagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  vendastatypesPagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: The total number of results. This is not supported on all paged apis and will be 0 if it is not supported
