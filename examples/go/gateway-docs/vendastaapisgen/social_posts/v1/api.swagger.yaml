swagger: "2.0"
info:
  title: social_posts/v1/api.proto
  version: version not set
tags:
  - name: HashTags
  - name: PixabayImages
  - name: TenorGifs
  - name: SocialPosts
  - name: PartnerSocialPosts
  - name: PostTemplates
  - name: MultilocationPostService
  - name: PostPerformance
consumes:
  - application/json
produces:
  - application/json
paths:
  /socialposts.v1.HashTags/DeleteHashtags:
    post:
      summary: Bulk delete hashtag model
      operationId: HashTags_DeleteHashtags
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteHashtagsRequest'
      tags:
        - HashTags
  /socialposts.v1.HashTags/ReplaceHashtags:
    post:
      summary: Bulk create or update hashtag model
      operationId: HashTags_ReplaceHashtags
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReplaceHashtagsRequest'
      tags:
        - HashTags
  /socialposts.v1.HashTags/SearchHashtag:
    post:
      summary: Search for hashtags based on provided filter
      operationId: HashTags_SearchHashtag
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchHashtagResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchHashtagRequest'
      tags:
        - HashTags
  /socialposts.v1.MultilocationPostService/CreateMultilocationPost:
    post:
      summary: CreateMultilocationPost is called to create a multilocation post
      operationId: MultilocationPostService_CreateMultilocationPost
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateMultilocationPostResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateMultilocationPostRequest'
      tags:
        - MultilocationPostService
  /socialposts.v1.MultilocationPostService/DeleteMultilocationPost:
    post:
      summary: DeleteMultilocationPost is called to delete multilocation post
      operationId: MultilocationPostService_DeleteMultilocationPost
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteMultilocationPostRequest'
      tags:
        - MultilocationPostService
  /socialposts.v1.MultilocationPostService/EditMultilocationPost:
    post:
      summary: EditMultilocationPost is called to edit a multilocation post
      operationId: MultilocationPostService_EditMultilocationPost
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EditMultilocationPostResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1EditMultilocationPostRequest'
      tags:
        - MultilocationPostService
  /socialposts.v1.MultilocationPostService/GetMultilocationPost:
    post:
      summary: |-
        GetMultilocationPost is called to get a single multilocation post based on
        brand_id and multilocation_id
      operationId: MultilocationPostService_GetMultilocationPost
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultilocationPostResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultilocationPostRequest'
      tags:
        - MultilocationPostService
  /socialposts.v1.MultilocationPostService/ListMultilocationPostsForBrand:
    post:
      summary: |-
        ListMultilocationPostsForBrand is called to retrieve a list multilocation
        post based on a date range
      operationId: MultilocationPostService_ListMultilocationPostsForBrand
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListMultilocationPostsForBrandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListMultilocationPostsForBrandRequest'
      tags:
        - MultilocationPostService
  /socialposts.v1.MultilocationPostService/RemoveFromMultilocationPost:
    post:
      summary: |-
        RemoveFromMultilocationPost is called to remove(edit/delete) a
        multilocation post
      operationId: MultilocationPostService_RemoveFromMultilocationPost
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveFromMultilocationPostRequest'
      tags:
        - MultilocationPostService
  /socialposts.v1.PartnerSocialPosts/ListScheduled:
    post:
      summary: |-
        List all the scheduled social posts of all accounts of a partner scheduled
        for a certain time period
      operationId: PartnerSocialPosts_ListScheduled
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PartnerListScheduledPostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1PartnerListScheduledSocialPostsRequest'
      tags:
        - PartnerSocialPosts
  /socialposts.v1.PartnerSocialPosts/ListScheduledByCreated:
    post:
      summary: |-
        List all the scheduled social posts of all accounts of a partner created
        during a certain time period
      operationId: PartnerSocialPosts_ListScheduledByCreated
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PartnerListScheduledPostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1PartnerListScheduledSocialPostsRequest'
      tags:
        - PartnerSocialPosts
  /socialposts.v1.PixabayImages/ListPixabayImages:
    post:
      summary: List pixabay images for a given query
      operationId: PixabayImages_ListPixabayImages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPixabayImagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListPixabayImagesRequest'
      tags:
        - PixabayImages
  /socialposts.v1.PostPerformance/GenerateCSVForPerformanceStats:
    post:
      summary: Trigger csv generation  for performance stats
      operationId: PostPerformance_GenerateCSVForPerformanceStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateCSVForPerformanceStatsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GenerateCSVForPerformanceStatsRequest'
      tags:
        - PostPerformance
  /socialposts.v1.PostPerformance/GetGeneratedCSVForPerformanceStats:
    post:
      summary: |-
        This endpoint is currently just a placeholder and would be in use if we
        implement caching for multiple downloads etc
      operationId: PostPerformance_GetGeneratedCSVForPerformanceStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetGeneratedCSVForPerformanceStatsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetGeneratedCSVForPerformanceStatsRequest'
      tags:
        - PostPerformance
  /socialposts.v1.PostTemplates/CreatePostTemplate:
    post:
      summary: Creates a new PostTemplate
      operationId: PostTemplates_CreatePostTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreatePostTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreatePostTemplateRequest'
      tags:
        - PostTemplates
  /socialposts.v1.PostTemplates/DeletePostTemplate:
    post:
      summary: Deletes a Post Template
      operationId: PostTemplates_DeletePostTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeletePostTemplateRequest'
      tags:
        - PostTemplates
  /socialposts.v1.PostTemplates/GetPostTemplate:
    post:
      summary: Gets an existing PostTemplate
      operationId: PostTemplates_GetPostTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPostTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetPostTemplateRequest'
      tags:
        - PostTemplates
  /socialposts.v1.PostTemplates/ListPostTemplates:
    post:
      summary: Lists Post Templates for a given AGID
      operationId: PostTemplates_ListPostTemplates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPostTemplatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListPostTemplatesRequest'
      tags:
        - PostTemplates
  /socialposts.v1.PostTemplates/UpdatePostTemplate:
    post:
      summary: Updates an already existing PostTemplate
      operationId: PostTemplates_UpdatePostTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdatePostTemplateRequest'
      tags:
        - PostTemplates
  /socialposts.v1.SocialPosts/DeleteSocialPost:
    post:
      summary: Delete a social post
      operationId: SocialPosts_DeleteSocialPost
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteSocialPostRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/GetMultiSocialPostStats:
    post:
      summary: Get multi socialPostStats of a list of facebook post or twitter post
      operationId: SocialPosts_GetMultiSocialPostStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiSocialPostStatsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiSocialPostStatsRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/GetMultiSocialPosts:
    post:
      summary: Get multiple social posts from a list of IDs
      operationId: SocialPosts_GetMultiSocialPosts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiSocialPostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiSocialPostsRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/GetScheduledPostCount:
    post:
      summary: Get scheduled post count total for a partner and business
      operationId: SocialPosts_GetScheduledPostCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetScheduledPostCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetScheduledPostCountRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/List:
    post:
      summary: List the social posts
      operationId: SocialPosts_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSocialPostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSocialPostsRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/Schedule:
    post:
      summary: Schedule a post to the specified social services
      operationId: SocialPosts_Schedule
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SchedulePostResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SchedulePostRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/ScheduleToAllPages:
    post:
      summary: |-
        Will schedule a post to go out to all company social services connected to
        the account This includes all twitter accounts, Facebook pages (not
        facebook users), Google plus pages (not google plus users) and LinkedIn
        company pages (not linkedin users)
      operationId: SocialPosts_ScheduleToAllPages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ScheduleToAllPagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ScheduleToAllPagesRequest'
      tags:
        - SocialPosts
  /socialposts.v1.SocialPosts/SuggestMessage:
    post:
      summary: Suggest a social message
      operationId: SocialPosts_SuggestMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SuggestMessageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SuggestMessageRequest'
      tags:
        - SocialPosts
  /socialposts.v1.TenorGifs/GetTenorAnonymousId:
    post:
      summary: Gets the anonymous id required to make calls to the tenor api
      operationId: TenorGifs_GetTenorAnonymousId
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTenorAnonymousIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTenorAnonymousIdRequest'
      tags:
        - TenorGifs
  /socialposts.v1.TenorGifs/ListTenorGifs:
    post:
      summary: list tenor gifs for a given query
      operationId: TenorGifs_ListTenorGifs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListTenorGifsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListTenorGifsRequest'
      tags:
        - TenorGifs
definitions:
  CallToActionCallToActionType:
    type: string
    enum:
      - LEARN_MORE
      - BOOK
      - ORDER
      - SHOP
      - SIGN_UP
      - GET_OFFER
      - CALL
    default: LEARN_MORE
    title: The type of the CTA
  PartnerListScheduledSocialPostsRequestFilters:
    type: object
    properties:
      dateRange:
        $ref: '#/definitions/v1DateRangeFilter'
        title: |-
          Scheduled posts that are scheduled to be posted between begin and end
          Only one of scheduled_date_filter or created_date_filter can be provided
      partnerId:
        type: string
  SocialPostDeletionStatus:
    type: string
    enum:
      - NONE
      - FAILED
      - IN_PROGRESS
    default: NONE
  SocialPostService:
    type: string
    enum:
      - TWITTER
      - FACEBOOK
      - LINKED_IN
      - GOOGLE_PLUS
      - GOOGLE_MY_BUSINESS
      - UNKNOWN
      - INSTAGRAM
      - CURATED_CONTENT
      - YOUTUBE
      - TIKTOK
      - WORDPRESS
    default: TWITTER
  YoutubeCustomizationPrivacyStatus:
    type: string
    enum:
      - YOUTUBE_PRIVACY_STATUS_INVALID
      - YOUTUBE_PRIVACY_STATUS_PUBLIC
      - YOUTUBE_PRIVACY_STATUS_PRIVATE
      - YOUTUBE_PRIVACY_STATUS_UNLISTED
    default: YOUTUBE_PRIVACY_STATUS_INVALID
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1Author:
    type: object
    properties:
      name:
        type: string
        title: The name of the author
      id:
        type: string
        format: int64
        title: The id of the author
  v1BlogPostCustomization:
    type: object
    properties:
      siteType:
        type: string
        title: The site type of the blog post
      author:
        $ref: '#/definitions/v1Author'
        title: The author of the blog post
      categories:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Category'
        title: The categories of the blog post
      tags:
        type: array
        items:
          type: string
        title: The tags of the blog post
  v1CallToAction:
    type: object
    properties:
      url:
        type: string
        title: The url for the CTA
      actionType:
        $ref: '#/definitions/CallToActionCallToActionType'
  v1Category:
    type: object
    properties:
      id:
        type: string
        format: int64
        title: The categoryId
      name:
        type: string
        title: The category name
  v1CreateMultilocationPostRequest:
    type: object
    properties:
      brandId:
        type: string
        title: BrandID for the post
      text:
        type: string
        title: Original post text
      media:
        type: array
        items:
          type: string
        title: Original media links
      scheduledDate:
        type: string
        format: date-time
        title: Date that the original post was scheduled to go
      locations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Location'
        title: List of locations in the original post
      gifs:
        type: array
        items:
          type: string
        title: Original gif links
      videos:
        type: array
        items:
          type: string
        title: Original video links
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the post, could be anything
      tags:
        type: array
        items:
          type: string
        title: Tags required to differentiate posts
      customization:
        $ref: '#/definitions/v1PostCustomization'
        title: Extra specific configurations for the post
      linkShortCode:
        type: string
        description: The short code of the link in this post.
      postTypes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SSIDPostType'
        title: The type of post for each SSID e.g., Image/video/reel/gif etc
  v1CreateMultilocationPostResponse:
    type: object
    properties:
      post:
        $ref: '#/definitions/v1MultilocationPost'
        title: The successfully created Multilocation post
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MultilocationPostError'
        title: Multilocation posts with errors
  v1CreatePostTemplateRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group id
      title:
        type: string
        title: The title of the template
      postText:
        type: string
        title: Fields covering the contents of the Template
      postDateTime:
        type: string
        format: date-time
      gmbPostCustomization:
        type: string
      imageUrl:
        type: string
      imagePath:
        type: string
      imageSize:
        type: string
      previews:
        type: string
      options:
        type: array
        items:
          type: string
      videoUrl:
        type: string
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the media, could be anything
      postType:
        $ref: '#/definitions/v1PostType'
        title: The type of post e.g., Image/video/reel/gif etc
      youtubeCustomization:
        $ref: '#/definitions/v1YoutubeCustomization'
        title: Youtube customization for this template
  v1CreatePostTemplateResponse:
    type: object
    properties:
      templateId:
        type: string
        title: A brand new unique internal identifier for a PostTemplate object
  v1DateRangeFilter:
    type: object
    properties:
      beginRange:
        type: string
        format: date-time
      endRange:
        type: string
        format: date-time
    title: Begin and end of date range
  v1DeleteHashtagsRequest:
    type: object
    properties:
      keyword:
        type: array
        items:
          type: string
        title: Hashtag keyword to be deleted
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1DeleteMultilocationPostRequest:
    type: object
    properties:
      brandId:
        type: string
        title: BrandID for the post
      multilocationId:
        type: string
        title: MultilocationID
  v1DeletePostTemplateRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group id
      templateId:
        type: string
        title: The internal id of the template
  v1DeleteSocialPostRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The business to delete the social post for
      socialPostId:
        type: string
        title: The post id that going to delete
  v1EditMultilocationPostRequest:
    type: object
    properties:
      brandId:
        type: string
        title: BrandID for the post
      multilocationId:
        type: string
        title: MultilocationID
      text:
        type: string
        title: post text
      media:
        type: array
        items:
          type: string
        title: media links
      scheduledDate:
        type: string
        format: date-time
        title: Date that the post is scheduled to go
      fieldMask:
        $ref: '#/definitions/v1FieldMask'
        title: Map of changed fields
      gifs:
        type: array
        items:
          type: string
        title: gif links
      videos:
        type: array
        items:
          type: string
        title: video links
      locations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Location'
        title: List of locations, either added, removed or original
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the post, could be anything
      tags:
        type: array
        items:
          type: string
        title: Tags required to differentiate posts
      customization:
        $ref: '#/definitions/v1PostCustomization'
        title: Extra specific configurations for the post
      linkShortCode:
        type: string
        description: The short code of the link in this post.
      postTypes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SSIDPostType'
        title: The type of post for each SSID e.g., Image/video/reel/gif etc
  v1EditMultilocationPostResponse:
    type: object
    properties:
      post:
        $ref: '#/definitions/v1MultilocationPost'
        title: The successfully created Multilocation post
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MultilocationPostError'
        title: Any errors that may have occured on individual posts
  v1Error:
    type: object
    properties:
      reason:
        type: string
      category:
        type: string
  v1Event:
    type: object
    properties:
      title:
        type: string
        title: The title of the event
      startDatetime:
        type: string
        format: date-time
        title: The start timestamp of the event
      endDatetime:
        type: string
        format: date-time
        title: The end timestamp of the evet
  v1FacebookPostStats:
    type: object
    properties:
      commentCount:
        type: string
        format: int64
      shareCount:
        type: string
        format: int64
      likeCount:
        type: string
        format: int64
      hasLike:
        type: boolean
      canLike:
        type: boolean
      reactions:
        type: string
        format: int64
      peopleReached:
        type: string
        format: int64
  v1FieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
  v1GenerateCSVForPerformanceStatsRequest:
    type: object
    properties:
      businessId:
        type: string
        title: business_id for the stats (e.g., ABC)
      postData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PostData'
        title: array of maps of post_id, reach and engagement to merge
      includeHeaders:
        type: array
        items:
          type: string
        title: array of string for getting the headers to be included
  v1GenerateCSVForPerformanceStatsResponse:
    type: object
    properties:
      generatedId:
        type: string
        title: |-
          returns just a url string for now
          reason for calling it a generated id is so
          that in future if we are supporting caching,
          we can use a id instead of URL
  v1GetGeneratedCSVForPerformanceStatsRequest:
    type: object
    properties:
      generatedId:
        type: string
        title: Same as generated_id from GenerateCSVForPerformanceStatsResponse
  v1GetGeneratedCSVForPerformanceStatsResponse:
    type: object
    properties:
      url:
        type: string
        title: The csv storage url from google storage (or any other)
  v1GetMultiSocialPostStatsRequest:
    type: object
    properties:
      internalPostIds:
        type: array
        items:
          type: string
        title: Internal post id
      businessId:
        type: string
        title: account group id
      partnerId:
        type: string
        title: partner id
  v1GetMultiSocialPostStatsResponse:
    type: object
    properties:
      socialPostStats:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SocialPostStats'
        title: Post stats entity
  v1GetMultiSocialPostsRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The business ID
      internalPostIds:
        type: array
        items:
          type: string
        title: The internal post IDs
  v1GetMultiSocialPostsResponse:
    type: object
    properties:
      socialPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SocialPost'
        title: The requested social posts
  v1GetMultilocationPostRequest:
    type: object
    properties:
      brandId:
        type: string
        title: BrandID for the post
      multilocationId:
        type: string
        title: MultilocationID
  v1GetMultilocationPostResponse:
    type: object
    properties:
      multilocationPost:
        $ref: '#/definitions/v1MultilocationPost'
        title: The requested multilocation post
  v1GetPostTemplateRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group id
      templateId:
        type: string
        title: The internal id of the template
  v1GetPostTemplateResponse:
    type: object
    properties:
      postTemplate:
        $ref: '#/definitions/v1PostTemplate'
        title: The obtained PostTemplate
  v1GetScheduledPostCountRequest:
    type: object
    properties:
      partnerId:
        type: string
        title: The partner ID
      businessId:
        type: string
        title: The business ID
      socialServiceIds:
        type: array
        items:
          type: string
        title: The social service IDs
  v1GetScheduledPostCountResponse:
    type: object
    properties:
      count:
        type: string
        format: int64
        title: The total count of scheduled posts
  v1GetTenorAnonymousIdRequest:
    type: object
  v1GetTenorAnonymousIdResponse:
    type: object
    properties:
      anonymousId:
        type: string
        title: Anonyous id to be used for calling tenor
  v1Hashtag:
    type: object
    properties:
      keyword:
        type: string
        title: The keyword
      usedCount:
        type: string
        format: int64
        title: Used count
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1ListMultilocationPostsForBrandRequest:
    type: object
    properties:
      brandId:
        type: string
        title: BrandID for the post
      startDate:
        type: string
        format: date-time
        title: Start Date for the multilocation post
      endDate:
        type: string
        format: date-time
        title: End Date for the multilocation post
      cursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      pageSize:
        type: string
        format: int64
        title: Number of results to grab
  v1ListMultilocationPostsForBrandResponse:
    type: object
    properties:
      multilocationPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MultilocationPost'
        title: List of MultilocationPost
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      failedSocialPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SocialPost'
        title: A list of failed social posts in this range
  v1ListPixabayImagesRequest:
    type: object
    properties:
      query:
        type: string
        title: Query string for pixabay images
      cursor:
        type: string
        title: A cursor to specify where to start listing pixabay images
      pageSize:
        type: string
        format: int64
        title: The number of pixabay images to return
      includeLocalUrl:
        type: boolean
        title: to get google storage
      agid:
        type: string
  v1ListPixabayImagesResponse:
    type: object
    properties:
      total:
        type: string
        format: int64
        title: total number
      totalHits:
        type: string
        format: int64
        title: hit number
      hits:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PixabayImage'
        title: Hit pixabay images response list
  v1ListPostTemplatesRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group id
      cursor:
        type: string
        title: Cursor to more templates if it is greater then the page size
      pageSize:
        type: string
        format: int64
        title: Number of results to grab
  v1ListPostTemplatesResponse:
    type: object
    properties:
      postTemplate:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PostTemplate'
        title: List of obtained Templates
      nextCursor:
        type: string
        title: Cursor to more templates if it is greater then the page size
      hasMore:
        type: boolean
        title: Boolean if there are more templates to get
  v1ListSocialPostsRequest:
    type: object
    properties:
      start:
        type: string
        format: date-time
        title: |-
          If a start time is provided, a page of the posts that are newer than it
          will be returned If a start time of the current date time is provided you
          will get a page of posts that are scheduled to be posted
      end:
        type: string
        format: date-time
        title: |-
          If an end time is provided, a page of the posts older than it will be
          returned If an end time of the current date time is provided you will not
          get any posts that are scheduled to be posted
      businessId:
        type: string
        title: The business to list the social posts for
      partnerId:
        type: string
        title: The partner the social posts belong to
      cursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      socialServiceIds:
        type: array
        items:
          type: string
        title: A list of social service IDs to request posts for
      tags:
        type: array
        items:
          type: string
        title: A list of tags to request posts for
      pageSize:
        type: string
        format: int64
        title: Number of results to grab
  v1ListSocialPostsResponse:
    type: object
    properties:
      socialPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SocialPost'
        title: A page of social posts
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
  v1ListTenorGifsRequest:
    type: object
    properties:
      query:
        type: string
        title: Query string for the gifs
      cursor:
        type: string
        title: A cursor to specify where to start listing tenor gifs
      pageSize:
        type: string
        format: int64
        title: The number of tenor gifs to return
      locale:
        type: string
        title: Language of the response
      anonymousId:
        type: string
        title: Anonymous id required to make calls to tenor apis
      mediaFilter:
        type: string
        title: Applied filters
      aspectRatioRange:
        type: string
        title: The aspect ratio of gifs to list
      contentFilter:
        type: string
        title: Content filter
  v1ListTenorGifsResponse:
    type: object
    properties:
      next:
        type: string
        title: next cursor
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TenorGif'
        title: resulting list of tenor gifs
  v1Location:
    type: object
    properties:
      socialServiceIds:
        type: array
        items:
          type: string
        title: List of SSID for the location
      accountGroupId:
        type: string
        title: AGID for the location
  v1MediaEntry:
    type: object
    properties:
      mediaEntryId:
        type: string
      mediaUrl:
        type: string
      mediaType:
        type: string
      containerId:
        type: string
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
      mediaPath:
        type: string
  v1MessageLength:
    type: string
    enum:
      - SHORT_FORM
      - LONG_FORM
    default: SHORT_FORM
  v1MetaData:
    type: object
    properties:
      propertyName:
        type: string
      propertyValue:
        type: string
    title: Metadata message type for saving properties in instagram µservice
  v1MultilocationPost:
    type: object
    properties:
      brandId:
        type: string
        title: BrandID for the post
      multilocationId:
        type: string
        title: MultilocationID
      originalText:
        type: string
        title: Original post text
      originalScheduledDate:
        type: string
        format: date-time
        title: Date that the original post was scheduled to go
      originalMedia:
        type: array
        items:
          type: string
        title: Original media links (images only)
      originalLocations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Location'
        title: List of locations in the original post
      editedLocations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Location'
        title: List of edited(in SL) locations
      deletedLocations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Location'
        title: List of deleted(in SL) locations
      originalGifs:
        type: array
        items:
          type: string
        title: Original gif links
      originalVideos:
        type: array
        items:
          type: string
        title: Original video links
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the post, could be anything
      tags:
        type: array
        items:
          type: string
        title: Tags required to differentiate posts
      customization:
        $ref: '#/definitions/v1PostCustomization'
        title: Extra specific configurations for the post
      linkShortCode:
        type: string
        description: The short code of the link in this post.
      postTypes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SSIDPostType'
        title: The PostType for each of the SSIDs associated with this post
  v1MultilocationPostError:
    type: object
    properties:
      socialServiceId:
        type: string
        title: SSID for which the error happened
      accountGroupId:
        type: string
        title: AGID for which the error happened
      errorReason:
        type: string
        title: Actual error message
  v1PartnerListScheduledPostsResponse:
    type: object
    properties:
      socialPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SocialPost'
        title: A page of social posts
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
  v1PartnerListScheduledSocialPostsRequest:
    type: object
    properties:
      cursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      filters:
        $ref: '#/definitions/PartnerListScheduledSocialPostsRequestFilters'
      pageSize:
        type: string
        format: int64
        title: Number of results to grab
  v1PixabayImage:
    type: object
    properties:
      id:
        type: string
        format: int64
        title: The id of pixabay image
      pageUrl:
        type: string
        title: pixabay image page URL
      type:
        type: string
        title: pixabay image type
      tags:
        type: string
        title: pixabay image tag
      previewUrl:
        type: string
        title: pixabay image preview
      previewWidth:
        type: string
        format: int64
        title: pixabay image preview width
      previewHeight:
        type: string
        format: int64
        title: pixabay image preview height
      webformatUrl:
        type: string
        title: pixabay image webformat URL
      webformatWidth:
        type: string
        format: int64
        title: pixabay image webformat wdith
      webformatHeight:
        type: string
        format: int64
        title: pixabay image webformat height
      largeImageUrl:
        type: string
        title: pixabay image large image URL
      fullHdUrl:
        type: string
        title: pixabay image full HD URL
      imageUrl:
        type: string
        title: pixabay image image URL
      imageWidth:
        type: string
        format: int64
        title: pixabay image image width
      imageHeight:
        type: string
        format: int64
        title: pixabay image image height
      imageSize:
        type: string
        format: int64
        title: pixabay image image size
      views:
        type: string
        format: int64
        title: pixabay image count of view
      downloads:
        type: string
        format: int64
        title: pixabay image count of download
      favorites:
        type: string
        format: int64
        title: pixabay image count of favorite
      likes:
        type: string
        format: int64
        title: pixabay image count of like
      comments:
        type: string
        format: int64
        title: pixabay image count of comment
      userId:
        type: string
        format: int64
        title: pixabay image user Id
      user:
        type: string
        title: pixabay image user
      userImageUrl:
        type: string
        title: pixabay image user image URL
      storageUrl:
        type: string
        title: Local storage url
  v1PostAction:
    type: object
    properties:
      type:
        type: string
        title: Represents the type of the CTA
      linkUrl:
        type: string
        title: The link where the CTA will lead to
    title: Represents the action associated with the post when the network allows CTA
  v1PostCustomization:
    type: object
    properties:
      event:
        $ref: '#/definitions/v1PostEvent'
        title: Event associated with this post. For example, a GMB event that should be created with the post
      action:
        $ref: '#/definitions/v1PostAction'
        title: Actions that can be triggered within the posts when the network allows CTA
    title: Contains extra configurations of a post, like events and actions
  v1PostData:
    type: object
    properties:
      postId:
        type: string
      reach:
        type: string
        format: int64
      engagement:
        type: number
        format: float
      views:
        type: string
        format: int64
      clicks:
        type: string
        format: int64
      comments:
        type: string
        format: int64
      shares:
        type: string
        format: int64
      reactions:
        type: string
        format: int64
      saves:
        type: string
        format: int64
      likes:
        type: string
        format: int64
      videoViews:
        type: string
        format: int64
      retweets:
        type: string
        format: int64
      favourites:
        type: string
        format: int64
      impressions:
        type: string
        format: int64
      commentsCount:
        type: string
        format: int64
      likeCount:
        type: string
        format: int64
  v1PostEvent:
    type: object
    properties:
      title:
        type: string
        title: Title of the event related to the post
      start:
        type: string
        format: date-time
        title: The timestamp when the event will start
      end:
        type: string
        format: date-time
        title: The timestamp when the event will end
    title: Represents an event that should be associated/created with a post
  v1PostTemplate:
    type: object
    properties:
      accountGroupId:
        type: string
        description: Unique id signifying account group this belongs to.
      templateId:
        type: string
        description: Unique id signifying template this is.
      title:
        type: string
        description: Title of Template.
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      postText:
        type: string
        description: Text contained in template.
      postDateTime:
        type: string
        format: date-time
      gmbPostCustomization:
        type: string
      imageUrl:
        type: string
      imagePath:
        type: string
      imageSize:
        type: string
      previews:
        type: string
      options:
        type: array
        items:
          type: string
      videoUrl:
        type: string
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the media, could be anything
      postType:
        $ref: '#/definitions/v1PostType'
        title: The type of post e.g., Image/video/reel/gif etc
      youtubeCustomization:
        $ref: '#/definitions/v1YoutubeCustomization'
        title: Youtube customization
      tiktokCustomization:
        $ref: '#/definitions/v1TikTokCustomization'
        title: Tiktok customization
  v1PostType:
    type: string
    enum:
      - POST_TYPE_INVALID
      - POST_TYPE_IMAGE
      - POST_TYPE_VIDEO
      - POST_TYPE_GIF
      - POST_TYPE_REEL
      - POST_TYPE_CAROUSEL
      - POST_TYPE_STORIES
      - POST_TYPE_TEXT
    default: POST_TYPE_INVALID
  v1PostingStatus:
    type: string
    enum:
      - POSTING_IN_PROGRESS
      - POSTING_FAILED
      - POSTING_COMPLETED
    default: POSTING_IN_PROGRESS
  v1RemoveFromMultilocationPostRequest:
    type: object
    properties:
      reason:
        $ref: '#/definitions/v1RemoveReason'
        description: The reason for removing the post.
      brandId:
        type: string
        title: BrandID for the post
      multilocationId:
        type: string
        title: MultilocationID
      locations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Location'
        title: Locations to remove
  v1RemoveReason:
    type: string
    enum:
      - REMOVE_REASON_EDIT
      - REMOVE_REASON_DELETE
    default: REMOVE_REASON_EDIT
    description: |2-
       - REMOVE_REASON_EDIT: Used if the post is edited.
       - REMOVE_REASON_DELETE: Used if the post is deleted.
  v1ReplaceHashtagsRequest:
    type: object
    properties:
      keyword:
        type: array
        items:
          type: string
        title: Hashtag keyword for create or update for used count
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1SSIDPostType:
    type: object
    properties:
      socialServiceId:
        type: string
      postType:
        $ref: '#/definitions/v1PostType'
    title: SSIDPostType represents the post type for each social service id
  v1SchedulePostRequest:
    type: object
    properties:
      socialPost:
        $ref: '#/definitions/v1SocialPostData'
        title: The social post to post
      socialServiceIds:
        type: array
        items:
          type: string
        title: The social accounts to post this post to
      partnerId:
        type: string
      businessId:
        type: string
        title: The business that has the social accounts connected to it
  v1SchedulePostResponse:
    type: object
    properties:
      statuses:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SchedulePostStatus'
        title: The statuses of the posts that were attempted to be scheduled
  v1SchedulePostStatus:
    type: object
    properties:
      socialPostId:
        type: string
        title: The ID of this post that can be used to get it again
      socialServiceId:
        type: string
        title: The ID of the social page this post was posted to
      socialServiceLabel:
        type: string
        title: |-
          The Name or Username of the social page this post was posted to (may not
          always be populated)
      error:
        $ref: '#/definitions/v1Error'
        title: |-
          The reason why there was an error scheduling the post. Error will be nil if
          it was successful
  v1ScheduleToAllPagesRequest:
    type: object
    properties:
      socialPost:
        $ref: '#/definitions/v1SocialPostData'
        title: The social post to post
      partnerId:
        type: string
      businessId:
        type: string
        title: |-
          The business to post the social post to all of it's connected pages
          (twitter user, linkedin company, google plus page, facebook page)
  v1ScheduleToAllPagesResponse:
    type: object
    properties:
      statuses:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SchedulePostStatus'
        title: The statuses of the posts that were attempted to be scheduled
  v1SearchHashtagRequest:
    type: object
    properties:
      searchTerm:
        type: string
        title: search term for hashtags
      limit:
        type: string
        format: int64
        title: Limit size for hashtags
      businessId:
        type: string
        title: The business id of the account
      partnerId:
        type: string
        title: The partner id of the account
  v1SearchHashtagResponse:
    type: object
    properties:
      hashtags:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Hashtag'
        title: Hashtag response list
  v1SocialPost:
    type: object
    properties:
      businessId:
        type: string
        title: The unique identifier of the business this post is related to
      socialPostId:
        type: string
      postText:
        type: string
      posted:
        type: string
        format: date-time
        title: |-
          The date time that this post was posted to it's corresponding social
          account
      isError:
        type: boolean
      deletionStatus:
        $ref: '#/definitions/SocialPostDeletionStatus'
      service:
        $ref: '#/definitions/SocialPostService'
      permalink:
        type: string
        title: The link to the post on the social page (e.g. an actual link to Facebook)
      created:
        type: string
        format: date-time
        title: |-
          The date time that this entity was created in our system (not the time that
          it was posted)
      profileUrl:
        type: string
      profileImageUrl:
        type: string
      scheduled:
        type: string
        format: date-time
        title: |-
          The date time that this post is scheduled to be posted. If it's in the past
          that means it we have or are attempting to post this You can see if it was
          successful based on the status
      status:
        $ref: '#/definitions/v1PostingStatus'
        title: The status of attempting to post this social post to the social account
      imageUrl:
        type: string
        title: The image posted
      name:
        type: string
        title: The name of the social account (may not always be populated)
      username:
        type: string
        title: The username of the social account (may not always be populated)
      parentId:
        type: string
        title: The correlation id for posts that have been posted as a group
      socialServiceId:
        type: string
        title: The id of the social service this post was created with
      event:
        $ref: '#/definitions/v1Event'
        title: The event for a Google My Business post
      callToAction:
        $ref: '#/definitions/v1CallToAction'
        title: The call to action for a Google My Busines post
      videoUrl:
        type: string
        title: The video posted
      error:
        $ref: '#/definitions/v1Error'
        title: |-
          The reason why there was an error scheduling the post. Error will be nil if
          it was successful
      imageUrls:
        type: array
        items:
          type: string
        title: A list of images for this post
      linkPreviewImageUrl:
        type: string
        description: An image that appears as a preview to a URL link.
      brandId:
        type: string
        title: A unique identifer for a brand (if this is a multilocation post)
      multilocationPostId:
        type: string
        title: A unique identifer if this is a multilocation post
      postType:
        $ref: '#/definitions/v1PostType'
        title: The type of post e.g., Image/video/reel/gif etc
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the media, could be anything
      title:
        type: string
        title: The title of the post
      youtubeCustomization:
        $ref: '#/definitions/v1YoutubeCustomization'
        title: Customization for youtube posts
      tiktokCustomization:
        $ref: '#/definitions/v1TikTokCustomization'
        title: Customization for tiktok posts
      blogPostCustomization:
        $ref: '#/definitions/v1BlogPostCustomization'
        title: Customization for blog posts
    title: |-
      The information about a social post. It does not necessarily need to have
      been posted yet
  v1SocialPostData:
    type: object
    properties:
      postText:
        type: string
        title: |-
          The text to post, must be provided for all twitter and google plus page
          posts
      imageUrl:
        type: string
        title: The image to post
      scheduleFor:
        type: string
        format: date-time
        title: |-
          When this social post should be posted. If not provided the social  will be
          posted asap
  v1SocialPostStats:
    type: object
    properties:
      internalPostId:
        type: string
      facebookPostStats:
        $ref: '#/definitions/v1FacebookPostStats'
      twitterPostStats:
        $ref: '#/definitions/v1TwitterPostStats'
  v1SuggestMessageRequest:
    type: object
    properties:
      prompt:
        type: string
        title: prompt that will be used to suggest the message
      businessId:
        type: string
        title: business_id is the id of the business fo which this message is being generated to
      length:
        $ref: '#/definitions/v1MessageLength'
        title: length indicates whether the consumer wants to build a long or short message
      type:
        $ref: '#/definitions/v1TemplateType'
        title: type indicates whether the consumer wants to use a specific template or a custom format
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: metadata is a list of key value pairs that can be used to pass additional information to the suggester
  v1SuggestMessageResponse:
    type: object
    properties:
      message:
        type: string
  v1TemplateType:
    type: string
    enum:
      - TEMPLATE_UNSET
      - TEMPLATE_CUSTOM
      - TEMPLATE_SOCIAL_POST
    default: TEMPLATE_UNSET
  v1TenorGif:
    type: object
    properties:
      mediaMap:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1TenorMediaObject'
        title: The gif in various file types
      tags:
        type: array
        items:
          type: string
        title: Gif tags
      hasAudio:
        type: boolean
        title: If the gif has audio
      title:
        type: string
        title: Gif name
      id:
        type: string
        title: Gif id
      created:
        type: number
        format: float
        title: Gif created time
  v1TenorMediaObject:
    type: object
    properties:
      preview:
        type: string
        title: Preview url
      url:
        type: string
        title: Gif url
      dimensions:
        type: array
        items:
          type: string
          format: int64
        title: Gif dimensions
      size:
        type: string
        format: int64
        title: Gif file size
  v1TikTokCustomization:
    type: object
    properties:
      allowComment:
        type: boolean
      allowDuet:
        type: boolean
      allowStitch:
        type: boolean
  v1TwitterPostStats:
    type: object
    properties:
      favourites:
        type: string
        format: int64
      hasFavourited:
        type: boolean
      retweets:
        type: string
        format: int64
      hasRetweeted:
        type: boolean
  v1UpdatePostTemplateRequest:
    type: object
    properties:
      accountGroupId:
        type: string
        title: The account group id
      templateId:
        type: string
        title: The internal id of the template
      title:
        type: string
        title: The title of the template
      postText:
        type: string
        title: Fields covering the contents of the template
      postDateTime:
        type: string
        format: date-time
      gmbPostCustomization:
        type: string
      imageUrl:
        type: string
      imagePath:
        type: string
      imageSize:
        type: string
      previews:
        type: string
      options:
        type: array
        items:
          type: string
      videoUrl:
        type: string
      mediaEntries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MediaEntry'
        title: Array of media content when uploading multiple media
      metaData:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetaData'
        title: Metadata about the post, could be anything
      postType:
        $ref: '#/definitions/v1PostType'
        title: The type of post e.g., Image/video/reel/gif etc
      youtubeCustomization:
        $ref: '#/definitions/v1YoutubeCustomization'
        title: Youtube customization for this template
  v1YoutubeCustomization:
    type: object
    properties:
      title:
        type: string
        title: Title of Youtube video
      privacyStatus:
        $ref: '#/definitions/YoutubeCustomizationPrivacyStatus'
