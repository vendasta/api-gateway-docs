swagger: "2.0"
info:
  title: social_posts/v2/api_v2.proto
  version: version not set
tags:
  - name: SocialPostsV2
  - name: Linkedin
  - name: CommonAiInstructions
  - name: Unsplash
  - name: ContentGeneration
  - name: CuratedContent
consumes:
  - application/json
produces:
  - application/json
paths:
  /socialposts.v2.CommonAiInstructions/CreateCommonAiInstructions:
    post:
      operationId: CommonAiInstructions_CreateCommonAiInstructions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2CreateCommonAiInstructionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2CreateCommonAiInstructionsRequest'
      tags:
        - CommonAiInstructions
  /socialposts.v2.CommonAiInstructions/GetCommonAiInstructions:
    post:
      operationId: CommonAiInstructions_GetCommonAiInstructions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2GetCommonAiInstructionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2GetCommonAiInstructionsRequest'
      tags:
        - CommonAiInstructions
  /socialposts.v2.CommonAiInstructions/UpdateCommonAiInstructions:
    post:
      operationId: CommonAiInstructions_UpdateCommonAiInstructions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2UpdateCommonAiInstructionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2UpdateCommonAiInstructionsRequest'
      tags:
        - CommonAiInstructions
  /socialposts.v2.ContentGeneration/Generate:
    post:
      operationId: ContentGeneration_Generate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2GenerateAiResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2GenerateAiRequest'
      tags:
        - ContentGeneration
  /socialposts.v2.ContentGeneration/GenerateBlogPostCampaign:
    post:
      operationId: ContentGeneration_GenerateBlogPostCampaign
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2GenerateBlogPostCampaignResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2GenerateBlogPostCampaignRequest'
      tags:
        - ContentGeneration
  /socialposts.v2.ContentGeneration/GenerateContentMetaData:
    post:
      operationId: ContentGeneration_GenerateContentMetaData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2GenerateContentMetaDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2GenerateContentMetaDataRequest'
      tags:
        - ContentGeneration
  /socialposts.v2.ContentGeneration/GeneratePostCampaign:
    post:
      operationId: ContentGeneration_GeneratePostCampaign
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2GeneratePostCampaignResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2GeneratePostCampaignRequest'
      tags:
        - ContentGeneration
  /socialposts.v2.ContentGeneration/GeneratePosts:
    post:
      operationId: ContentGeneration_GeneratePosts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2GeneratePostsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2GeneratePostsRequest'
      tags:
        - ContentGeneration
  /socialposts.v2.CuratedContent/List:
    post:
      operationId: CuratedContent_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2ListCuratedContentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2ListCuratedContentRequest'
      tags:
        - CuratedContent
  /socialposts.v2.Linkedin/DeletePost:
    post:
      summary: Deletes a post on the Linkedin platform
      operationId: Linkedin_DeletePost
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2DeletePostRequest'
      tags:
        - Linkedin
  /socialposts.v2.Linkedin/UploadMedia:
    post:
      summary: Upload media rpc, to upload any video/gif/image media to linkedIn
      operationId: Linkedin_UploadMedia
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2MediaUploadResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2MediaUploadRequest'
      tags:
        - Linkedin
  /socialposts.v2.SocialPostsV2/CreateImages:
    post:
      summary: Generate images from AI
      operationId: SocialPostsV2_CreateImages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2CreateImageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2CreateImageRequest'
      tags:
        - SocialPostsV2
  /socialposts.v2.SocialPostsV2/GenerateVariations:
    post:
      summary: Generate Variations
      operationId: SocialPostsV2_GenerateVariations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2CreateImageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2ImageUrl'
      tags:
        - SocialPostsV2
  /socialposts.v2.SocialPostsV2/GetImageByUrl:
    post:
      summary: Generate images from AI
      operationId: SocialPostsV2_GetImageByUrl
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2ImageBlob'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2ImageUrl'
      tags:
        - SocialPostsV2
  /socialposts.v2.SocialPostsV2/RepostSocialPost:
    post:
      summary: Repost a failed post
      operationId: SocialPostsV2_RepostSocialPost
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2RepostSocialPostRequest'
      tags:
        - SocialPostsV2
  /socialposts.v2.SocialPostsV2/ScheduleSocialPosts:
    post:
      summary: Schedule social posts
      operationId: SocialPostsV2_ScheduleSocialPosts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2SocialPostResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2SocialPostRequest'
      tags:
        - SocialPostsV2
  /socialposts.v2.SocialPostsV2/UpdateSocialPosts:
    post:
      summary: Update social posts
      operationId: SocialPostsV2_UpdateSocialPosts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2UpdateSocialPostResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2UpdateSocialPostRequest'
      tags:
        - SocialPostsV2
  /socialposts.v2.Unsplash/ListUnsplashImages:
    post:
      operationId: Unsplash_ListUnsplashImages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2ListUnsplashImagesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2ListUnsplashImagesRequest'
      tags:
        - Unsplash
  /socialposts.v2.Unsplash/UploadToStorage:
    post:
      operationId: Unsplash_UploadToStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v2UploadToStorageResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2UploadToStorageRequest'
      tags:
        - Unsplash
definitions:
  GeneratePostsResponsePost:
    type: object
    properties:
      text:
        type: string
  YoutubeCustomizationV2PrivacyStatusV2:
    type: string
    enum:
      - YOUTUBE_PRIVACY_STATUS_INVALID
      - YOUTUBE_PRIVACY_STATUS_PUBLIC
      - YOUTUBE_PRIVACY_STATUS_PRIVATE
      - YOUTUBE_PRIVACY_STATUS_UNLISTED
    default: YOUTUBE_PRIVACY_STATUS_INVALID
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v2AiInstructions:
    type: object
    properties:
      commonAiInstructions:
        type: string
      dataUsageStatus:
        type: boolean
      aiBlogInstructions:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
  v2Ancestry:
    type: object
    properties:
      type:
        $ref: '#/definitions/v2SubAncestry'
      category:
        $ref: '#/definitions/v2SubAncestry'
      subcategory:
        $ref: '#/definitions/v2SubAncestry'
  v2BlogPostCampaign:
    type: object
    properties:
      blogPostId:
        type: string
        title: Unique identifier for the blog post
      blogPostType:
        $ref: '#/definitions/v2PostCategory'
        title: Type of the blog post
  v2Collection:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      publishedAt:
        type: string
      lastCollectedAt:
        type: string
      updatedAt:
        type: string
      coverPhoto:
        type: string
      user:
        type: string
  v2ContentLength:
    type: string
    enum:
      - SHORT_FORM
      - MEDIUM_FORM
      - LONG_FORM
      - OPTIMIZED_FORM
    default: SHORT_FORM
    title: The length of the content to be generated
  v2CreateCommonAiInstructionsRequest:
    type: object
    properties:
      businessId:
        type: string
      partnerId:
        type: string
      aiInstructions:
        $ref: '#/definitions/v2AiInstructions'
  v2CreateCommonAiInstructionsResponse:
    type: object
    properties:
      aiInstructions:
        $ref: '#/definitions/v2AiInstructions'
  v2CreateImageRequest:
    type: object
    properties:
      businessId:
        type: string
        title: The business id of the account
      prompt:
        type: string
        title: search term for image generator
      imageAmount:
        type: integer
        format: int32
        title: number of images needed 1-10 images
      size:
        type: string
        title: 'size of the image : "256x256" ,"512x512" ,"1024x1024"'
      responseFormat:
        type: string
        title: 'images format : "url" , "b64_json"'
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: metadata is a list of key value pairs that can be used to pass additional information to the suggester
      model:
        type: string
        title: The AI Model used . it can be "dall-e-2" or "dalle-e-3"
      style:
        type: string
        title: the Style of the image. it can be "vivid" or "natural"
      quality:
        type: string
        title: The qualiy of the image. it can be "standar" or "hd"
  v2CreateImageResponse:
    type: object
    properties:
      createdId:
        type: string
        format: uint64
        title: request id from DALLE
      generatedImages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2ImageCreated'
        title: List of images
  v2CuratedContentPost:
    type: object
    properties:
      id:
        type: string
        title: Unique identifier of the post
      text:
        type: string
        title: The message of the post
      media:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2UploadedMedia'
        title: Both the image and video details are stored in this field
      errors:
        type: string
        title: The error message if the post is an error
      businessId:
        type: string
        title: The business ID of the post
      createdAt:
        type: string
        title: The date the post was created
      postedAt:
        type: string
        title: The date the post was posted
  v2DeletePostRequest:
    type: object
    properties:
      accessToken:
        type: string
        title: Linkedin user's access token
      postId:
        type: string
        title: A Linkedin post urn
  v2GenerateAiRequest:
    type: object
    properties:
      goal:
        type: string
        title: This goal is to create a title and content
      instruction:
        type: string
        title: Instructions for how the content should be generated
      keyword:
        type: string
        title: Keyword for generating the content
      tone:
        type: string
        title: Tone indicates the desired style or type of content
      length:
        $ref: '#/definitions/v2ContentLength'
        title: Length refers to the number of characters in the content
      generateType:
        $ref: '#/definitions/v2GenerateType'
        title: generate_type determines the response format based on the enum value
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        description: contains key value pair to utilise additional details.
    title: This request message for generate the content
  v2GenerateAiResponse:
    type: object
    properties:
      multiResult:
        $ref: '#/definitions/v2MultiResponse'
        title: (For TITLE and OUTLINE)
      result:
        $ref: '#/definitions/v2Response'
        title: (For BLOG)
    title: This is Wrapper message for multiple response types
  v2GenerateBlogPostCampaignRequest:
    type: object
    properties:
      businessId:
        type: string
        title: Account group ID
      networkType:
        type: array
        items:
          $ref: '#/definitions/v2Network'
        title: List of social networks
      blogCampaign:
        $ref: '#/definitions/v2BlogPostCampaign'
        title: Campaigns from a blog post
      partnerId:
        type: string
        title: Partner ID to fetch the common instructions
  v2GenerateBlogPostCampaignResponse:
    type: object
    properties:
      posts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2Posts'
        title: List of posts generated
  v2GenerateContentMetaDataRequest:
    type: object
    properties:
      businessId:
        type: string
        title: Account group ID
      titleInput:
        $ref: '#/definitions/v2TitleGeneration'
      keywordInput:
        $ref: '#/definitions/v2KeywordGeneration'
  v2GenerateContentMetaDataResponse:
    type: object
    properties:
      generatedTitle:
        type: string
        title: Generated title suggestion
      generatedKeywords:
        $ref: '#/definitions/v2KeywordList'
        title: List of generated keywords
  v2GeneratePostCampaignRequest:
    type: object
    properties:
      businessId:
        type: string
        title: Account group ID
      networkType:
        type: array
        items:
          $ref: '#/definitions/v2Network'
        title: List of social networks
      postGeneration:
        $ref: '#/definitions/v2PostsGeneration'
        title: Campaigns from user's input
      partnerId:
        type: string
        title: Partner ID to fetch the common instructions
  v2GeneratePostCampaignResponse:
    type: object
    properties:
      postList:
        $ref: '#/definitions/v2PostList'
        title: List of posts generated
  v2GeneratePostsRequest:
    type: object
    properties:
      numberOfPosts:
        type: string
        format: int64
        description: The number of posts to generate.
      topic:
        type: string
        description: The topic the posts should be about.
      commonInstructions:
        type: string
        description: Common instructions to use when generating the posts.
      tone:
        type: string
        description: The tone of the posts.
      postLength:
        type: string
        format: int64
        description: The max character length of the posts.
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: Meta data to exchange info like AGID/PartnerId as  flexible for AI knowledge
  v2GeneratePostsResponse:
    type: object
    properties:
      posts:
        type: array
        items:
          type: object
          $ref: '#/definitions/GeneratePostsResponsePost'
      keyword:
        type: string
  v2GenerateType:
    type: string
    enum:
      - TITLE
      - OUTLINE
      - BLOG
    default: TITLE
    title: This request and response for AI purpose
  v2GetCommonAiInstructionsRequest:
    type: object
    properties:
      businessId:
        type: string
      partnerId:
        type: string
  v2GetCommonAiInstructionsResponse:
    type: object
    properties:
      aiInstructions:
        $ref: '#/definitions/v2AiInstructions'
  v2Image:
    type: object
    properties:
      small:
        type: string
      medium:
        type: string
      large:
        type: string
  v2ImageBlob:
    type: object
    properties:
      blob:
        type: string
        format: byte
  v2ImageCreated:
    type: object
    properties:
      url:
        type: string
      b64Json:
        type: string
      revisedPrompt:
        type: string
  v2ImageUrl:
    type: object
    properties:
      url:
        type: string
  v2KeywordGeneration:
    type: object
    properties:
      blogPostId:
        type: string
        title: Unique identifier for the blog post
      keywordCount:
        type: integer
        format: int64
        title: Number of keywords to generate
  v2KeywordList:
    type: object
    properties:
      keywords:
        type: array
        items:
          type: string
  v2LinkV2:
    type: object
    properties:
      name:
        type: string
        title: The name of the link preview
      picture:
        type: string
        description: The preview image associated with the link.
      description:
        type: string
        title: The description of the link
      title:
        type: string
        title: The title for the link
      url:
        type: string
        title: The URL of the link
      shortcode:
        type: string
        title: The shortcode of the link
    title: Represents all the information of a post's link
  v2Links:
    type: object
    properties:
      self:
        type: string
      html:
        type: string
      download:
        type: string
      downloadLocation:
        type: string
  v2ListCuratedContentRequest:
    type: object
    properties:
      businessId:
        type: string
        title: Account ID of the business
      feedId:
        type: string
        title: Feed Identifier of the website(Integration)
      pageSize:
        type: integer
        format: int32
        title: Page size
      cursor:
        type: string
        title: Next page cursor
  v2ListCuratedContentResponse:
    type: object
    properties:
      posts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2CuratedContentPost'
      externalId:
        type: string
      hasMore:
        type: boolean
      nextCursor:
        type: string
  v2ListUnsplashImagesRequest:
    type: object
    properties:
      query:
        type: string
        title: Query string for unsplash images
      page:
        type: string
        format: int64
        title: page to be retrieved. By default 1
      perPage:
        type: string
        format: int64
        title: number of images per page. By default 10
      orderBy:
        type: string
        title: how to sort the images. By default "relevant"
      collection:
        type: array
        items:
          type: string
        title: collection id to narrow the search. Optional
      contentFilter:
        type: string
        title: filter content bu safety. Optional
      color:
        type: string
        title: filter result by color. Optional
      orientation:
        type: string
        title: filter result by image orientation. Optional
      random:
        type: boolean
        title: if set to true, use the random endpoint instead of search endpoint
      includeLocalUrl:
        type: boolean
        title: to get google storage
  v2ListUnsplashImagesResponse:
    type: object
    properties:
      total:
        type: string
        format: int64
      totalPages:
        type: string
        format: int64
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2Photo'
  v2Media:
    type: object
    properties:
      url:
        type: string
      mediaType:
        $ref: '#/definitions/v2MediaType'
  v2MediaType:
    type: string
    enum:
      - MEDIA_TYPE_INVALID
      - MEDIA_TYPE_IMAGE
      - MEDIA_TYPE_VIDEO
      - MEDIA_TYPE_GIF
      - MEDIA_TYPE_CAROUSEL
    default: MEDIA_TYPE_INVALID
  v2MediaUploadRequest:
    type: object
    properties:
      accessToken:
        type: string
        title: LinkedIn user's access token
      owner:
        type: string
        title: |-
          owner e.g., it could either be a person(in case of a personal profile)
          or a organization (in case of a business page maintained)
          urn:li:organization:24141830 this would get translated to
          registerUploadRequest. owner	schema inside linkedin vector API
          https://docs.microsoft.com/en-us/linkedin/marketing/integrations/community-management/shares/vector-asset-api?view=li-lms-2022-08&tabs=http#schema
      medias:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2Media'
        title: |-
          video url, it should be a public url. In case of SM, it would be the gogole
          storage public url of the resource
  v2MediaUploadResponse:
    type: object
    properties:
      uploadUrns:
        type: array
        items:
          type: string
        title: |-
          upload_urn would be a resouce identifier returned by LinkedIn service which
          would be needed to add iamge/video in a post
  v2MetadataV2:
    type: object
    properties:
      name:
        type: string
        title: The property name or key
      value:
        type: string
        title: The property value associated with the name/key
    title: Stored as key/value pairs can contain generic metadata information
  v2MultiResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: string
    title: Response message for Title and Outline(Array of string)
  v2Network:
    type: string
    enum:
      - INVALID_NETWORK
      - FACEBOOK
      - INSTAGRAM
      - LINKEDIN
      - TWITTER
      - GMB
      - TIKTOK
      - YOUTUBE
      - CUSTOM_FEED
      - WORDPRESS
    default: INVALID_NETWORK
  v2Photo:
    type: object
    properties:
      id:
        type: string
      slug:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      promotedAt:
        type: string
      width:
        type: string
        format: int64
      height:
        type: string
        format: int64
      color:
        type: string
      blurHash:
        type: string
      description:
        type: string
      altDescription:
        type: string
      breadcrumbs:
        type: array
        items:
          type: string
      urls:
        $ref: '#/definitions/v2Urls'
      links:
        $ref: '#/definitions/v2Links'
      likes:
        type: string
        format: int64
      likedByUser:
        type: boolean
      currentUserCollections:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2Collection'
      sponsorship:
        type: array
        items:
          type: string
      user:
        $ref: '#/definitions/v2User'
      tags:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2Tags'
      storageUrl:
        type: string
        title: Local storage url
  v2PostActionV2:
    type: object
    properties:
      type:
        type: string
        title: Represents the type of the CTA
      linkUrl:
        type: string
        title: The link where the CTA will lead to
    title: Represents the action associated with the post when the network allows CTA
  v2PostCategory:
    type: string
    enum:
      - INVALID_CATEGORY
      - DRAFT
      - SCHEDULED
      - PUBLISHED
    default: INVALID_CATEGORY
  v2PostContent:
    type: object
    properties:
      singlePost:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2SinglePost'
  v2PostContentV2:
    type: object
    properties:
      postText:
        type: string
        title: The text of the post
      medias:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2PostMediaV2'
        title: All media associated with the post
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2LinkV2'
        title: Contains the information of a post's link if any
      description:
        type: string
        title: 'Description : Added specifically for linkedin'
      title:
        type: string
        title: 'Title: Not required for all social networks'
    title: 'Represents all the content of a post: text, media, links, etc'
  v2PostCustomizationV2:
    type: object
    properties:
      event:
        $ref: '#/definitions/v2PostEventV2'
        title: Event associated with this post. For example, a GMB event that should be created with the post
      action:
        $ref: '#/definitions/v2PostActionV2'
        title: Actions that can be triggered within the posts when the network allows CTA
    title: Contains extra configurations of a post, like events and actions
  v2PostEventV2:
    type: object
    properties:
      title:
        type: string
        title: Title of the event related to the post
      start:
        type: string
        format: date-time
        title: The timestamp when the event will start
      end:
        type: string
        format: date-time
        title: The timestamp when the event will end
    title: Represents an event that should be associated/created with a post
  v2PostList:
    type: object
    properties:
      topic:
        type: string
      posts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2Posts'
  v2PostMediaV2:
    type: object
    properties:
      mediaId:
        type: string
        title: Identifier of all the media associated to a post
      mediaUrl:
        type: string
        title: The URL where the media is stored
      mediaType:
        type: string
        title: 'Type of the media: ''IMAGE'' or ''VIDEO'', etc'
      containerId:
        type: string
        title: Represents the container identifier, if the network requires it
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: Contains metadata if any associated with each media of the post
    title: Represents the media used on a post
  v2PostStatusV2:
    type: string
    enum:
      - POST_STATUS_INVALID
      - POST_STATUS_SUCCESS
      - POST_STATUS_ERROR
    default: POST_STATUS_INVALID
    title: Represents the status of a post
  v2PostTypeV2:
    type: string
    enum:
      - POST_TYPE_INVALID
      - POST_TYPE_IMAGE
      - POST_TYPE_VIDEO
      - POST_TYPE_GIF
      - POST_TYPE_MULTI_MEDIA
      - POST_TYPE_TEXT
      - POST_TYPE_STORIES
    default: POST_TYPE_INVALID
    title: Represents the type of a post
  v2Posts:
    type: object
    properties:
      postContent:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2PostContent'
  v2PostsGeneration:
    type: object
    properties:
      topic:
        type: array
        items:
          type: string
        title: The topic the posts should be about
      goal:
        type: string
        title: The goal of the post
      tone:
        $ref: '#/definitions/v2Tone'
        title: Tone of the post
      contentLength:
        $ref: '#/definitions/v2ContentLength'
        title: Length of the post
      noOfPosts:
        type: integer
        format: int64
        title: No. of posts to generate
      useCommonInstr:
        type: boolean
        title: Whether or not use common instructions
  v2RepostSocialPostRequest:
    type: object
    properties:
      socialPostId:
        type: string
        title: Social post id to repost
      accountGroupId:
        type: string
        title: Account group id of the post to repost
  v2Response:
    type: object
    properties:
      content:
        type: string
    title: Response message for BLOG (String)
  v2SinglePost:
    type: object
    properties:
      socialNetwork:
        $ref: '#/definitions/v2Network'
      post:
        type: string
  v2Social:
    type: object
    properties:
      instagramUsername:
        type: string
      portfolioUrl:
        type: string
      twitterUsername:
        type: string
      paypalEmail:
        type: string
  v2SocialPostOutput:
    type: object
    properties:
      internalPostId:
        type: string
        title: Internal identifier of the post
      socialPost:
        $ref: '#/definitions/v2SocialPostV2'
        title: All the post content and information
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: Contains metadata if any associated with the post
      status:
        $ref: '#/definitions/v2PostStatusV2'
        title: Represents the status of each post, since we allow partial schedule for bundles
      statusMessage:
        type: string
        title: A message related to the post. Can be the error message in case of an error status, for example
    title: Contains all the information of a post plus internal identifier and metadata
  v2SocialPostRequest:
    type: object
    properties:
      socialPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2SocialPostV2'
        title: List of posts to be created and scheduled
    title: The complete request of the ScheduleSocialPosts RPC
  v2SocialPostResponse:
    type: object
    properties:
      socialPosts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2SocialPostOutput'
        title: List of the created/scheduled posts containing internal identifiers
    title: The complete response of the ScheduleSocialPosts RPC
  v2SocialPostV2:
    type: object
    properties:
      businessId:
        type: string
        title: The business id that owes this post
      socialServiceId:
        type: string
        title: Social service id represents specific networks ids. Indicates the network in which the post will be published
      postContent:
        $ref: '#/definitions/v2PostContentV2'
        description: 'Stores the content of the post: text, media, links, etc.'
      scheduled:
        type: string
        format: date-time
        title: The time to schedule the post at
      customization:
        $ref: '#/definitions/v2PostCustomizationV2'
        title: Extra specific configurations for the post
      postType:
        $ref: '#/definitions/v2PostTypeV2'
        title: Represents the type of the post
      internalPostId:
        type: string
        title: Internal post id, we need it as  a fail-safe
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: Metadata to hold any additional details related to the post
      partnerId:
        type: string
        title: partner_id of the business_id for this post
      brandId:
        type: string
        title: brand_id related to this post (multilocation only)
      multilocationPostId:
        type: string
        title: multi_location_post_id related to this post (multilocation only)
      youtubeCustomization:
        $ref: '#/definitions/v2YoutubeCustomizationV2'
        title: Youtube specific customization
      userId:
        type: string
        title: Adding UserId, for TikTok
      shareId:
        type: string
        title: Adding share_id for TikTok
      tiktokCustomization:
        $ref: '#/definitions/v2TikTokCustomizationV2'
        title: TikTok customization
      campaignId:
        type: string
        title: Campaign ID , Used to store Control social posts for Campaign
    title: Represents all the structure needed to create a post
  v2Source:
    type: object
    properties:
      ancestry:
        $ref: '#/definitions/v2Ancestry'
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      metaTitle:
        type: string
      metaDescription:
        type: string
      coverPhoto:
        $ref: '#/definitions/v2Photo'
  v2SubAncestry:
    type: object
    properties:
      slug:
        type: string
      prettySlug:
        type: string
  v2Tags:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      source:
        $ref: '#/definitions/v2Source'
  v2TikTokCustomizationV2:
    type: object
    properties:
      allowComment:
        type: boolean
      allowDuet:
        type: boolean
      allowStitch:
        type: boolean
  v2TitleGeneration:
    type: object
    properties:
      blogTitle:
        type: string
        description: Title of the blog.
  v2Tone:
    type: string
    enum:
      - INVALID_TONE
      - DEFAULT
      - FRIENDLY
      - LUXURIOUS
      - PROFESSIONAL
      - RELAXED
      - BOLD
      - ADVENTUROUS
      - WITTY
      - PERSUASIVE
      - EMPATHETIC
    default: INVALID_TONE
  v2UpdateCommonAiInstructionsRequest:
    type: object
    properties:
      businessId:
        type: string
      partnerId:
        type: string
      aiInstructions:
        $ref: '#/definitions/v2AiInstructions'
  v2UpdateCommonAiInstructionsResponse:
    type: object
    properties:
      aiInstructions:
        $ref: '#/definitions/v2AiInstructions'
  v2UpdateSocialPostRequest:
    type: object
    properties:
      socialPost:
        $ref: '#/definitions/v2SocialPostV2'
        title: Social post to update
      isError:
        type: boolean
        title: is post is an error
      errors:
        type: string
        title: errors in case any
      errorCategory:
        type: string
        title: error description
      postId:
        type: string
        title: post id, e.g. urn:share:12345
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: Contains metadata if any associated with the post
      permalink:
        type: string
        title: permalink, e.g. https://www.facebook.com/169454092503751/posts/184857307630096
  v2UpdateSocialPostResponse:
    type: object
    properties:
      socialPost:
        $ref: '#/definitions/v2SocialPostV2'
        title: Social post to update
      isError:
        type: boolean
        title: is post is an error
      errors:
        type: string
        title: errors in case any
      errorCategory:
        type: string
        title: error description
      postId:
        type: string
        title: post id, e.g. urn:share:12345
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/v2MetadataV2'
        title: Contains metadata if any associated with the post
  v2UploadToStorageRequest:
    type: object
    properties:
      url:
        type: string
      mediaType:
        $ref: '#/definitions/v2MediaType'
      agid:
        type: string
  v2UploadToStorageResponse:
    type: object
    properties:
      url:
        type: string
  v2UploadedMedia:
    type: object
    properties:
      type:
        type: string
      url:
        type: string
  v2Urls:
    type: object
    properties:
      raw:
        type: string
      full:
        type: string
      regular:
        type: string
      small:
        type: string
      thumb:
        type: string
      smallS3:
        type: string
  v2User:
    type: object
    properties:
      id:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      name:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      twitterUsername:
        type: string
      portfolioUrl:
        type: string
      bio:
        type: string
      location:
        type: string
      links:
        $ref: '#/definitions/v2UserLink'
      profileImage:
        $ref: '#/definitions/v2Image'
      instagramUsername:
        type: string
      totalCollections:
        type: string
        format: int64
      totalLikes:
        type: string
        format: int64
      totalPhotos:
        type: string
        format: int64
      totalPromotedPhotos:
        type: string
        format: int64
      acceptedTos:
        type: boolean
      forHire:
        type: boolean
      social:
        $ref: '#/definitions/v2Social'
  v2UserLink:
    type: object
    properties:
      self:
        type: string
      html:
        type: string
      photos:
        type: string
      likes:
        type: string
      portfolio:
        type: string
      following:
        type: string
      followers:
        type: string
  v2YoutubeCustomizationV2:
    type: object
    properties:
      privacyStatus:
        $ref: '#/definitions/YoutubeCustomizationV2PrivacyStatusV2'
