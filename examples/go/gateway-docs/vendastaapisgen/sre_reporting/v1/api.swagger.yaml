swagger: "2.0"
info:
  title: sre_reporting/v1/api.proto
  version: version not set
tags:
  - name: Availability
  - name: ServiceLevel
  - name: User
  - name: SLOHistory
consumes:
  - application/json
produces:
  - application/json
paths:
  /srereporting.v1.Availability/Get:
    post:
      summary: |-
        Get a microservice's availabiltiy data by the service name and date range.
        Deprecated: please use `GetMulti` instead.
      operationId: Availability_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AvailabilityGetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AvailabilityGetRequest'
      tags:
        - Availability
  /srereporting.v1.Availability/GetMulti:
    post:
      summary: Get one or many avalaibility data by given service name(s).
      operationId: Availability_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AvailabilityGetMultiResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AvailabilityGetMultiRequest'
      tags:
        - Availability
  /srereporting.v1.SLOHistory/GetAggregateSLOHistory:
    post:
      summary: Returns SLO Histories for all services bucketed by period
      operationId: SLOHistory_GetAggregateSLOHistory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAggregateSLOHistoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAggregateSLOHistoryRequest'
      tags:
        - SLOHistory
  /srereporting.v1.SLOHistory/GetLiveSLOHistory:
    post:
      summary: returns the last 60 days of SLI measures for a given SLO
      operationId: SLOHistory_GetLiveSLOHistory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetLiveSLOHistoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetLiveSLOHistoryRequest'
      tags:
        - SLOHistory
  /srereporting.v1.ServiceLevel/GetMulti:
    post:
      summary: Get one or many service levels by service name.
      operationId: ServiceLevel_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceLevelGetMultiResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ServiceLevelGetMultiRequest'
      tags:
        - ServiceLevel
  /srereporting.v1.ServiceLevel/List:
    post:
      summary: A paged endpoint for listing service levels.
      operationId: ServiceLevel_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceLevelListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ServiceLevelListRequest'
      tags:
        - ServiceLevel
  /srereporting.v1.ServiceLevel/ListSLO:
    post:
      summary: Get all SLOs associated with a service.
      operationId: ServiceLevel_ListSLO
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSLOResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSLORequest'
      tags:
        - ServiceLevel
  /srereporting.v1.ServiceLevel/Search:
    post:
      summary: A paged endpoint for searching service levels.
      operationId: ServiceLevel_Search
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceLevelSearchResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ServiceLevelSearchRequest'
      tags:
        - ServiceLevel
  /srereporting.v1.ServiceLevel/UpdateServiceLevel:
    post:
      summary: Less specific update. Can update one or many fields on a ServiceLevel
      operationId: ServiceLevel_UpdateServiceLevel
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateServiceLevelRequest'
      tags:
        - ServiceLevel
  /srereporting.v1.ServiceLevel/UpdateStatus:
    post:
      summary: Update a project status. A project may be active, in maintenance mode, or archived (shutdown) completely.
      operationId: ServiceLevel_UpdateStatus
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateStatusServiceLevelRequest'
      tags:
        - ServiceLevel
  /srereporting.v1.User/GetMulti:
    post:
      summary: Get one or many users by ID
      operationId: User_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UserGetMultiResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UserGetMultiRequest'
      tags:
        - User
  /srereporting.v1.User/List:
    post:
      summary: A paged endpoint for listing users
      operationId: User_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UserListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UserListRequest'
      tags:
        - User
  /srereporting.v1.User/Replace:
    post:
      summary: Replace the entire dataset (sync operation from G Suite)
      operationId: User_Replace
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UserReplaceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UserReplaceRequest'
      tags:
        - User
definitions:
  ServiceLevelSearchRequestSearchOptions:
    type: object
    properties:
      searchTerm:
        type: string
      statusFilters:
        type: array
        items:
          $ref: '#/definitions/srereportingv1Status'
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  srereportingv1Status:
    type: string
    enum:
      - STATUS_UNSET
      - STATUS_INVALID
      - STATUS_ARCHIVED
      - STATUS_ACTIVE
      - STATUS_MAINTENANCE
    default: STATUS_UNSET
  v1AvailabilityData:
    type: object
    properties:
      serviceName:
        type: string
        description: The name of the service, e.g. accounts or account-group.
      environment:
        $ref: '#/definitions/v1Environment'
        description: The environment of the service, e.g. demo or prod.
      target:
        type: number
        format: float
        description: The availability target of the service.
      pointList:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AvailabilityPoint'
        description: The series of avalability data within a time range.
  v1AvailabilityGetMultiRequest:
    type: object
    properties:
      serviceName:
        type: array
        items:
          type: string
        title: The name of the service from the service-level.yaml file. e.g. CS, IAM, vstore
      environment:
        $ref: '#/definitions/v1Environment'
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
  v1AvailabilityGetMultiResponse:
    type: object
    properties:
      availability:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AvailabilityData'
  v1AvailabilityGetRequest:
    type: object
    properties:
      serviceName:
        type: string
      environment:
        $ref: '#/definitions/v1Environment'
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
  v1AvailabilityGetResponse:
    type: object
    properties:
      target:
        type: number
        format: float
      pointList:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AvailabilityPoint'
  v1AvailabilityPoint:
    type: object
    properties:
      timeStamp:
        type: string
        format: date-time
      value:
        type: number
        format: double
  v1Environment:
    type: string
    enum:
      - ENVIRONMENT_DEMO
      - ENVIRONMENT_PROD
    default: ENVIRONMENT_DEMO
    description: Environment represents a vStatic environment that segments an application into demo and production deliveries.
  v1GetAggregateSLOHistoryRequest:
    type: object
    properties:
      period:
        $ref: '#/definitions/v1Period'
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1GetAggregateSLOHistoryResponse:
    type: object
    properties:
      dateBucket:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1SLOHistoryDataList'
        title: |-
          The map's Key is string representation of the Date of start of the Period
          eg, Oct 1 is start of Q4, so a key of "2022-10-1" would give you a List of all quarterly SLO histories from that quarter
          TODO Finalize how we are going to handle this date string logic, should we use timestamps trimmed to "start of Day"?
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
  v1GetLiveSLOHistoryRequest:
    type: object
    properties:
      serviceName:
        type: string
  v1GetLiveSLOHistoryResponse:
    type: object
    properties:
      history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1LiveSLOHistoryData'
  v1InvalidDataMarker:
    type: string
    enum:
      - INVALID_DATA_MARKER_UNSET
      - INVALID_DATA_MARKER_ZERO_DENOMINATOR
      - INVALID_DATA_MARKER_OUT_OF_BOUND
    default: INVALID_DATA_MARKER_UNSET
    title: |-
      - INVALID_DATA_MARKER_UNSET: UNSET indicates there was no issue fetching the SLO History
       - INVALID_DATA_MARKER_ZERO_DENOMINATOR: A Zero denominator indicates no traffic in the case of availability SLOs, (good requests divided by total requests)
       - INVALID_DATA_MARKER_OUT_OF_BOUND: Out of bound errors will occur when the SLI is > 100 or < 0. Likely means some aspect of the SLO is being counted incorrectly
  v1ListSLORequest:
    type: object
    properties:
      serviceName:
        type: string
  v1ListSLOResponse:
    type: object
    properties:
      slo:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SLOData'
  v1LiveSLOHistoryData:
    type: object
    properties:
      sloName:
        type: string
      objective:
        $ref: '#/definitions/v1Objective'
      slis:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SLI'
    title: Representation of the live SLI history of a given SLO
  v1Objective:
    type: object
    properties:
      unit:
        type: string
        title: The Objective's unit. E.g. "%" or "ms"
      value:
        type: number
        format: float
        description: The Objective's value.
    description: Service Level Objective target representation.
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
    title: Contains metadata about the paged response
  v1Period:
    type: string
    enum:
      - PERIOD_UNSET
      - PERIOD_WEEK
      - PERIOD_MONTH
      - PERIOD_QUARTER
    default: PERIOD_UNSET
  v1SLI:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
        title: the date the SLI measure is from
      value:
        type: number
        format: float
        title: the value of the SLI measure
    title: "Representation of an SLI measure. I expect there to be large volumes of SLIs, which is why I've \nexcluded any information about the unit of measure"
  v1SLOData:
    type: object
    properties:
      name:
        type: string
        description: Name of the SLO. E.g. "performance".
      objective:
        $ref: '#/definitions/v1Objective'
        description: The SLO's objective.
      sloId:
        type: string
        title: SLOID is the SLO's Datadog SLO id
      pathExclusions:
        type: array
        items:
          type: string
        title: Paths to exclude when evaluating a performance SLO
    description: Service Level Objective representation.
  v1SLOHistoryData:
    type: object
    properties:
      sloHistoryId:
        type: string
        title: ID is a unique ID of the SLOHistory instance
      serviceName:
        type: string
        title: ServiceName is the service the SLOHistory corresponds to
      owner:
        type: string
        title: Owner is the owner of the service. Normally a team, occasionally an individual
      name:
        type: string
        title: Name is the name of the SLO. E.g. "availability", "performance"
      sloId:
        type: string
        title: SLOID is the SLO's Datadog SLO id
      period:
        $ref: '#/definitions/v1Period'
        title: Period is the time period the SLOHistory is for. E.g. week, month, quarter"
      periodStartDate:
        type: string
        format: date-time
        title: PeriodStartDate is the first day the SLOHistory period includes
      periodEndDate:
        type: string
        format: date-time
        title: PeriodEndDate is the last day the SLOHistory period includes
      objective:
        type: number
        format: float
        title: Objective is the SLO target as a percentage. Indicator is measured against Objective to determine if the SLO is passing or failing
      indicator:
        type: number
        format: float
        title: Indicator is the SLI measurement for the time period as a percentage. Either the uptime percentage, or percentage of time the service was above PerformanceTarget
      performanceTarget:
        type: string
        description: |-
          PerformanceTarget is the performance target the service tries to meet.
          PerformanceTarget is non-zero only for performance SLIs.
      errorBudget:
        type: number
        format: float
        title: ErrorBudget is the percentage of error budget remaining during the period. Negative indicates error budget was exceeded
      passed:
        type: boolean
        title: Passed denotes whether the SLO passed or failed the Objective during the period
      invalidDataMarker:
        $ref: '#/definitions/v1InvalidDataMarker'
        title: Invalid data marker is used to indicate the reason a history scrape failed
  v1SLOHistoryDataList:
    type: object
    properties:
      sloHistory:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SLOHistoryData'
  v1ServiceLevelData:
    type: object
    properties:
      name:
        type: string
        title: The name of the service, e.g. executive-report. No environment, as this is env-agnostic
      platform:
        type: string
        title: The platform of the service, e.g. GKE, GAE, vstatic, npm
      language:
        type: string
        title: The language of the service, e.g. go or python
      availability:
        type: number
        format: float
        title: The percentage of availability the service is targeting. E.g. 99.9, 99.95
      owner:
        type: string
        title: The GitHub team that owns this service, e.g. sre
      hardDependencies:
        type: array
        items:
          type: string
        title: The hard dependencies this service relies on, e.g. vstore, IAM
      apiCatalogue:
        type: string
        description: The location of the api catalogue json file for this service.
      gaeYaml:
        type: string
        description: The location of the yaml file that specifies the application layout.
      cloudProjects:
        type: array
        items:
          type: string
        title: The Google Cloud projects that this service lives in, e.g. repcore-demo and repcore-prod
      nonServiceType:
        type: string
        description: Some repositories are a library, so if this string is present it should say what type of service this is.
      status:
        $ref: '#/definitions/srereportingv1Status'
        description: |-
          Repositories can be 'active'ly worked on, in 'maintenance' mode, or 'archived' completely.
          Generally 'archived' may come from the state of the GitHub repo rather than the service-level.yaml itself, but
          it could also be defined in the yaml.
      issueTrackerProjectId:
        type: string
        description: |-
          Issue tracker project id identifies which project issues can be filed against in the current issue tracker of choice for
          this service.
      description:
        type: string
        description: A description of the service this service level is for.
      slos:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SLOData'
        description: The service's service level objectives.
    description: |-
      Analogous to the service-level.yaml file in a GitHub repository. It holds information about the
      owner, platform, and dependencies of the service.
  v1ServiceLevelGetMultiRequest:
    type: object
    properties:
      serviceNames:
        type: array
        items:
          type: string
        title: The name of the service from the service-level.yaml file. e.g. CS, IAM, vstore
  v1ServiceLevelGetMultiResponse:
    type: object
    properties:
      serviceLevels:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ServiceLevelData'
  v1ServiceLevelListRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ServiceLevelListResponse:
    type: object
    properties:
      serviceLevels:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ServiceLevelData'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1ServiceLevelSearchRequest:
    type: object
    properties:
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
      searchOptions:
        $ref: '#/definitions/ServiceLevelSearchRequestSearchOptions'
  v1ServiceLevelSearchResponse:
    type: object
    properties:
      serviceLevels:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ServiceLevelData'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1UpdateServiceLevelRequest:
    type: object
    properties:
      serviceName:
        type: string
      fieldMask:
        type: array
        items:
          type: string
        title: Array of strings for fields to update on the ServiceLevel
      description:
        type: string
  v1UpdateStatusServiceLevelRequest:
    type: object
    properties:
      serviceName:
        type: string
      status:
        $ref: '#/definitions/srereportingv1Status'
  v1UserData:
    type: object
    properties:
      id:
        type: string
      googleId:
        type: string
      email:
        type: string
      name:
        type: string
      role:
        type: string
      division:
        type: string
      team:
        type: string
      githubId:
        type: string
      extractedDate:
        type: string
        format: date-time
  v1UserGetMultiRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
  v1UserGetMultiResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserData'
  v1UserListRequest:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
  v1UserListResponse:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      results:
        type: integer
        format: int32
      totalResults:
        type: integer
        format: int32
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserData'
  v1UserReplaceRequest:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1UserData'
  v1UserReplaceResponse:
    type: object
    properties:
      unchangedCount:
        type: integer
        format: int32
      created:
        type: array
        items:
          type: string
      updated:
        type: array
        items:
          type: string
      deleted:
        type: array
        items:
          type: string
