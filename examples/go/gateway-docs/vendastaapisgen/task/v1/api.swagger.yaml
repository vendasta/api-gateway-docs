swagger: "2.0"
info:
  title: task/v1/api.proto
  version: version not set
tags:
  - name: TaskCommand
  - name: TaskQuery
consumes:
  - application/json
produces:
  - application/json
paths:
  /task.v1.TaskCommand/AddAssignee:
    post:
      operationId: TaskCommand_AddAssignee
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddAssigneeRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddAttachment:
    post:
      operationId: TaskCommand_AddAttachment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddAttachmentRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddConversation:
    post:
      operationId: TaskCommand_AddConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddConversationRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddCustomTags:
    post:
      summary: Add or remove user provided tags on a task.
      operationId: TaskCommand_AddCustomTags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddCustomTagsRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddHistory:
    post:
      summary: Add a custom task history message. History messages are autogenerated for all task changes except to data and metadata
      operationId: TaskCommand_AddHistory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddHistoryRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddMultiAssignee:
    post:
      operationId: TaskCommand_AddMultiAssignee
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddMultiAssigneeRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddMultipleSubtasks:
    post:
      operationId: TaskCommand_AddMultipleSubtasks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddMultipleSubtasksRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddSubtask:
    post:
      operationId: TaskCommand_AddSubtask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddSubtaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/AddTags:
    post:
      summary: Add a list of strings to tag the task with. Meant to be human readable / UI visible.
      operationId: TaskCommand_AddTags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddTagsRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/DeleteMultiTask:
    post:
      operationId: TaskCommand_DeleteMultiTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteMultiTaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/DeleteTask:
    post:
      operationId: TaskCommand_DeleteTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteTaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/Generate:
    post:
      summary: Create a new task
      operationId: TaskCommand_Generate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GenerateTaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/MultiCommand:
    post:
      summary: Allow many commands to be run for any number of tasks in one request
      operationId: TaskCommand_MultiCommand
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1MultiCommandRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RemoveAssignee:
    post:
      operationId: TaskCommand_RemoveAssignee
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveAssigneeRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RemoveAttachment:
    post:
      operationId: TaskCommand_RemoveAttachment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveAttachmentRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RemoveCustomTags:
    post:
      operationId: TaskCommand_RemoveCustomTags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveCustomTagsRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RemoveMultiAssignee:
    post:
      operationId: TaskCommand_RemoveMultiAssignee
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveMultiAssigneeRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RemoveTags:
    post:
      operationId: TaskCommand_RemoveTags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RemoveTagsRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/ReorderSubtask:
    post:
      summary: Change the position of a subtask in its parent's subtask list
      operationId: TaskCommand_ReorderSubtask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReorderSubtaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RestoreMultiTask:
    post:
      operationId: TaskCommand_RestoreMultiTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RestoreMultiTaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/RestoreTask:
    post:
      summary: Restore a deleted task
      operationId: TaskCommand_RestoreTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RestoreTaskRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetData:
    post:
      summary: A list of KeyValue pairs of arbitrary task specific data.
      operationId: TaskCommand_SetData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetKeyValuesRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetDescription:
    post:
      operationId: TaskCommand_SetDescription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetDescriptionRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetDueDate:
    post:
      operationId: TaskCommand_SetDueDate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetDueDateRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetMetadata:
    post:
      summary: A list of KeyValue pairs of info about the task. Task scoping is stored as metadata as well as each part of your contextual namespace
      operationId: TaskCommand_SetMetadata
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetKeyValuesRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetMultiDueDate:
    post:
      operationId: TaskCommand_SetMultiDueDate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetMultiDueDateRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetMultiNotes:
    post:
      operationId: TaskCommand_SetMultiNotes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetMultiNotesRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetMultiStatus:
    post:
      operationId: TaskCommand_SetMultiStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MultiCommandResponses'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetMultiStatusRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetNotes:
    post:
      operationId: TaskCommand_SetNotes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetNotesRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetStatus:
    post:
      operationId: TaskCommand_SetStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetStatusRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetTitle:
    post:
      operationId: TaskCommand_SetTitle
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetTitleRequest'
      tags:
        - TaskCommand
  /task.v1.TaskCommand/SetType:
    post:
      operationId: TaskCommand_SetType
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CommandResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetTypeRequest'
      tags:
        - TaskCommand
  /task.v1.TaskQuery/Get:
    post:
      summary: Get an individual task
      operationId: TaskQuery_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTaskRequest'
      tags:
        - TaskQuery
  /task.v1.TaskQuery/GetMetrics:
    post:
      summary: Aggregate data about tasks. Accepts multiple requests at once and returns the corresponding results as a series of lists
      operationId: TaskQuery_GetMetrics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMetricsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMetricsRequest'
      tags:
        - TaskQuery
  /task.v1.TaskQuery/GetMulti:
    post:
      summary: |-
        Get multiple tasks - if exclude_deleted is true deleted tasks are removed from the response, not just replaced
        with nil. Order still preserved.
      operationId: TaskQuery_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTasksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTasksRequest'
      tags:
        - TaskQuery
  /task.v1.TaskQuery/GetTree:
    post:
      summary: Get a task and all of it's subtasks
      operationId: TaskQuery_GetTree
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTreeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTreeRequest'
      tags:
        - TaskQuery
  /task.v1.TaskQuery/MultiSearch:
    post:
      summary: Aggregate multiple search requests into a singular response
      operationId: TaskQuery_MultiSearch
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1MultiSearchTaskRequest'
      tags:
        - TaskQuery
  /task.v1.TaskQuery/Search:
    post:
      summary: Search for tasks based on provided filters
      operationId: TaskQuery_Search
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchTaskResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchTaskRequest'
      tags:
        - TaskQuery
definitions:
  GetMetricsRequestMetricRequest:
    type: object
    properties:
      metric:
        $ref: '#/definitions/v1Metric'
        title: The metric to be returned
      filters:
        $ref: '#/definitions/v1GetMetricsFilters'
        title: Fields that can be used to control and narrow the data used for metrics
      name:
        type: string
        title: Name of the metric request
  KeyValueValue:
    type: object
    properties:
      stringValue:
        type: string
      int64Value:
        type: string
        format: int64
      boolValue:
        type: boolean
      doubleValue:
        type: number
        format: double
      timeValue:
        type: string
        format: date-time
      type:
        type: string
        title: The type of the value chosen. e.g. "string"
  KeyValuesKeyValue:
    type: object
    properties:
      values:
        type: array
        items:
          type: object
          $ref: '#/definitions/KeyValueValue'
        description: List of values associated with the key.
      key:
        type: string
        title: String key associated with the values
  MetricResponsesMetricResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/v1CountMetricResponse'
      value:
        $ref: '#/definitions/v1ValueMetricResponse'
      subMetricResponses:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricResponses'
    title: The result for an individual metric request
  MultiCommandRequestEvent:
    type: object
    properties:
      generate:
        $ref: '#/definitions/v1GenerateTaskRequest'
      addSubtask:
        $ref: '#/definitions/v1AddSubtaskRequest'
      setTitle:
        $ref: '#/definitions/v1SetTitleRequest'
      setType:
        $ref: '#/definitions/v1SetTypeRequest'
      addAssignee:
        $ref: '#/definitions/v1AddAssigneeRequest'
      removeAssignee:
        $ref: '#/definitions/v1RemoveAssigneeRequest'
      setDueDate:
        $ref: '#/definitions/v1SetDueDateRequest'
      setStatus:
        $ref: '#/definitions/v1SetStatusRequest'
      setKeyValue:
        $ref: '#/definitions/v1SetKeyValue'
      addHistory:
        $ref: '#/definitions/v1AddHistoryRequest'
      addConversation:
        $ref: '#/definitions/v1AddConversationRequest'
      addTags:
        $ref: '#/definitions/v1AddTagsRequest'
      removeTags:
        $ref: '#/definitions/v1RemoveTagsRequest'
      setNotes:
        $ref: '#/definitions/v1SetNotesRequest'
      setDescription:
        $ref: '#/definitions/v1SetDescriptionRequest'
      delete:
        $ref: '#/definitions/v1DeleteTaskRequest'
      restore:
        $ref: '#/definitions/v1RestoreTaskRequest'
      reorder:
        $ref: '#/definitions/v1ReorderSubtaskRequest'
      addAttachment:
        $ref: '#/definitions/v1AddAttachmentRequest'
      removeAttachment:
        $ref: '#/definitions/v1RemoveAttachmentRequest'
      addCustomTags:
        $ref: '#/definitions/v1AddCustomTagsRequest'
      removeCustomTags:
        $ref: '#/definitions/v1RemoveCustomTagsRequest'
  MultiCommandResponsesMultiCommandResponse:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The latest task version after the command was processed
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: Information about the task that that was passed into the request
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AccessPermissions:
    type: object
    properties:
      read:
        type: array
        items:
          type: string
      write:
        type: array
        items:
          type: string
      delete:
        type: array
        items:
          type: string
    title: A generic message for storing who has permissions to whatever it's attached to
  v1AddAssigneeRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      assignee:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1AddAttachmentRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are removing an attachment on
      attachment:
        $ref: '#/definitions/v1Attachment'
        title: The details of the file being attached to the task
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1AddConversationRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      message:
        type: string
      sendFrom:
        type: string
      sendTo:
        type: string
      source:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
      isPublic:
        type: boolean
        title: determines if conversation is private or public
      persona:
        $ref: '#/definitions/v1PersonaType'
        title: persona type of user who added the conversation
  v1AddCustomTagsRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      customTags:
        type: array
        items:
          type: string
        title: User defined tags that can be used to filter tasks
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1AddHistoryRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      message:
        type: string
        title: The message that will show up on task history
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1AddMultiAssigneeRequest:
    type: object
    properties:
      addRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AddAssigneeRequest'
        title: List of the requests to add assignees to tasks
  v1AddMultipleSubtasksRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are adding the subtask to
      subtaskRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AddSubtaskRequest'
        title: Array of subtask requests
  v1AddSubtaskRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are adding the subtask to
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the parent task
      taskId:
        type: string
        title: The task id of the new task
      title:
        type: string
        title: Name of task
      status:
        type: string
        title: The initial state of the task
      dueDate:
        type: string
        format: date-time
        title: When the task should be done by
      assignees:
        type: array
        items:
          type: string
        title: Who should complete this task
      description:
        type: string
        title: Task details
      tags:
        type: array
        items:
          type: string
        title: Task label used to organize or convey information about a task. e.g. "Approved", "Feedback Provided"
      notes:
        type: string
        title: Free form information about the task
      taskType:
        type: string
        title: The what type of task this is. e.g. "Review", "Social Post"
      data:
        $ref: '#/definitions/v1KeyValues'
        title: Extra data to store on the task
      metadata:
        $ref: '#/definitions/v1KeyValues'
        description: Data about the task. The subtask's namespace will automatically be split apart and stored in this field.
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attachment'
        title: Details about the tasks attachments
      customTags:
        type: array
        items:
          type: string
        title: User defined tags used to filter task searches
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1AddTagsRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      tags:
        type: array
        items:
          type: string
        title: Task labels used to organize or convey information about a task. e.g. "Approved", "Feedback Provided"
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1Attachment:
    type: object
    properties:
      name:
        type: string
      url:
        type: string
      contentType:
        type: string
      uploadingPersonaType:
        type: string
      filePermissions:
        $ref: '#/definitions/v1AccessPermissions'
  v1CommandResponse:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The latest task version after the command was processed
  v1Conversation:
    type: object
    properties:
      sendFrom:
        type: string
      sendTo:
        type: string
      message:
        type: string
      created:
        type: string
        format: date-time
      source:
        type: string
        title: Where the conversation originated
      isPublic:
        type: boolean
      persona:
        $ref: '#/definitions/v1PersonaType'
        title: persona type of user who added the conversation
  v1CountMetricResponse:
    type: object
    properties:
      key:
        type: string
        title: The value of a field for a given metric
      count:
        type: string
        format: int64
        title: The number of tasks with a field value that matches key
    title: A metric response that contains the number of tasks with a given value for a field
  v1DeleteMultiTaskRequest:
    type: object
    properties:
      deleteRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DeleteTaskRequest'
        title: The version, namespace, parent path, and task id of the tasks being deleted
  v1DeleteTaskRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are deleting
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are deleting
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1GenerateTaskRequest:
    type: object
    properties:
      namespace:
        type: string
        title: The task's scope. Should be contextual, separated by '/'. e.g. partner/ABC/account-group/AG-123
      taskId:
        type: string
        title: The unique id of the new task
      title:
        type: string
        title: Name of task
      status:
        type: string
        title: The initial state of the task
      dueDate:
        type: string
        format: date-time
        title: When the task should be done by
      assignees:
        type: array
        items:
          type: string
        title: Who should complete this task
      description:
        type: string
        title: Task details
      tags:
        type: array
        items:
          type: string
        title: Task label used to organize or convey information about a task. e.g. "Approved", "Feedback Provided"
      notes:
        type: string
        title: Free form information about the task
      taskType:
        type: string
        title: The what type of task this is. e.g. "Review", "Social Post"
      data:
        $ref: '#/definitions/v1KeyValues'
        title: Extra data to store on the task
      metadata:
        $ref: '#/definitions/v1KeyValues'
        description: Data about the task. The task's namespace will automatically be split apart and stored in this field.
      attachments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attachment'
        title: Details about the tasks attachments
      customTags:
        type: array
        items:
          type: string
        title: User defined tags used to filter task searches
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1GetMetricsFilters:
    type: object
    properties:
      namespace:
        type: string
        title: Exact match namespace
      parentPathFuzzy:
        type: string
        description: Fuzzy match parent path.
      parentPathExact:
        type: string
        title: Exact match parent path
      titleFuzzy:
        type: string
        title: Fuzzy match task title
      titleExact:
        type: string
        title: Exact match task title
      assignees:
        type: array
        items:
          type: string
        title: Assignee to search on. Multiple assignees will return tasks that have at least one of the specified assignees
      rangeStart:
        type: string
        format: date-time
        title: Search tasks that have a due date or completion_date after the specified time
      rangeEnd:
        type: string
        format: date-time
        title: Search tasks that have a due date or completion_date before the specified time
      types:
        type: array
        items:
          type: string
        description: Type of tasks to return. Returns tasks that match at least one of the specified types.
      status:
        type: array
        items:
          type: string
        title: Exact match task status
      tags:
        type: array
        items:
          type: string
        title: Search tasks tagged with these tags. Returns tasks that match at least one tag
      metadata:
        $ref: '#/definitions/v1KeyValues'
        description: Search on key value metadata. Useful for searching on part of your namespace or task scope.
      dateRangeField:
        $ref: '#/definitions/v1RangeField'
        title: Which field to range over for range_start and range_end
      access:
        type: array
        items:
          type: string
        title: Which users have access to a task
      metadataGroups:
        $ref: '#/definitions/v1GroupedMetadata'
        title: Groups of metadata that will OR together (all data within each group will be AND'ed)
  v1GetMetricsRequest:
    type: object
    properties:
      requests:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetMetricsRequestMetricRequest'
        title: Requests for each Metric to be returned
  v1GetMetricsResponse:
    type: object
    properties:
      metrics:
        type: array
        items:
          $ref: '#/definitions/v1Metric'
        title: List of the metric type being returned
      responses:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricResponses'
        title: MetricResponses contains the results of the aggregation
      names:
        type: array
        items:
          type: string
        title: The provided names of each requested metric
    title: Returns a list of responses where each response, name and metric correspond sequentially to a requested metric
  v1GetTaskRequest:
    type: object
    properties:
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The specific task to retrieve
      returnDeleted:
        type: boolean
  v1GetTaskResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1Task'
  v1GetTasksRequest:
    type: object
    properties:
      identities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TaskIdentity'
        title: The tasks to retrieve
      returnDeleted:
        type: boolean
        description: |-
          Deleted tasks will be returned regardless of this field (and it never was functional).
          To not have deleted tasks returned use the exclude_deleted field.
      excludeDeleted:
        type: boolean
    title: GetTasksRequest is the request message for GetMulti
  v1GetTasksResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Task'
    title: GetTasksResponse is the response message for GetMulti
  v1GetTreeRequest:
    type: object
    properties:
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The root of the task tree to be returned
    title: GetTreeRequest is the request message for GetTree
  v1GetTreeResponse:
    type: object
    properties:
      tasks:
        $ref: '#/definitions/v1TaskTree'
  v1GroupedMetadata:
    type: object
    properties:
      metadataGroup:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1KeyValues'
  v1GroupedTags:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TagGroup'
  v1History:
    type: object
    properties:
      date:
        type: string
        format: date-time
        title: When the event happened
      user:
        type: string
        title: The user that did the action
      message:
        type: string
        title: The action taken
  v1KeyValueField:
    type: string
    enum:
      - KEY_VALUE_FIELD_UNSET
      - KEY_VALUE_FIELD_DATA
      - KEY_VALUE_FIELD_METADATA
    default: KEY_VALUE_FIELD_UNSET
  v1KeyValues:
    type: object
    properties:
      keyValues:
        type: array
        items:
          type: object
          $ref: '#/definitions/KeyValuesKeyValue'
  v1Metric:
    type: string
    enum:
      - METRIC_NAMESPACE
      - METRIC_TYPE
      - METRIC_TAG
      - METRIC_STATUS
      - METRIC_ASSIGNEE
      - METRIC_OLDEST_DUE_DATE
      - METRIC_STATUS_PER_TYPE
      - METRIC_TYPE_PER_ASSIGNEE
      - METRIC_STATUS_PER_ASSIGNEE_PER_TYPE
      - METRIC_UNUSED
      - METRIC_STATUS_PER_ASSIGNEE
      - METRIC_PARTNER
      - METRIC_PER_DAY
      - METRIC_FULFILLING_PARTNER
      - METRIC_TYPE_PER_DAY
      - METRIC_TAG_PER_DAY
      - METRIC_COUNT_BY_DATE_RANGE
      - METRIC_TASKS_COMPLETED_BY_DELAY
      - METRIC_TASKS_OVERDUE_BY_DELAY
    default: METRIC_NAMESPACE
    title: |-
      - METRIC_NAMESPACE: The number of tasks for each different namespace
       - METRIC_TYPE: The number of tasks for each task type
       - METRIC_TAG: The number of tasks for each tag
       - METRIC_STATUS: The number of tasks for each status
       - METRIC_ASSIGNEE: The number of tasks for each assignee
       - METRIC_OLDEST_DUE_DATE: The oldest due date on a task for each type
       - METRIC_STATUS_PER_TYPE: The number of tasks with each different status for each type
       - METRIC_TYPE_PER_ASSIGNEE: The number of tasks in each type for all assignees
       - METRIC_STATUS_PER_ASSIGNEE_PER_TYPE: The number of tasks with a certain status for an assignee for a type
       - METRIC_UNUSED: As of proto 3.3(which we are on at the time of this comment) the reserved keyword is not supported inside an enum
      so this no longer used enum value must exist
       - METRIC_STATUS_PER_ASSIGNEE: The number of tasks in each status per assignee
       - METRIC_PARTNER: The number of tasks for each partner
       - METRIC_PER_DAY: The number of tasks for an assignee broken down per day
       - METRIC_FULFILLING_PARTNER: The number of tasks for each fulfilling partner
       - METRIC_TYPE_PER_DAY: The number of tasks for each type broken down per day
       - METRIC_TAG_PER_DAY: The number of tasks for a tag broken down per day
       - METRIC_COUNT_BY_DATE_RANGE: Count the number of tasks on a specified range
       - METRIC_TASKS_COMPLETED_BY_DELAY: Aggregate number of tasks based on the difference between completion and due dates
       - METRIC_TASKS_OVERDUE_BY_DELAY: Aggregate number of tasks based on the difference between completion and due dates
  v1MetricResponses:
    type: object
    properties:
      metricResponses:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricResponsesMetricResponse'
    title: The results for all metrics requested in GetMetrics
  v1MultiCommandRequest:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/MultiCommandRequestEvent'
      callerSubjectId:
        type: string
  v1MultiCommandResponses:
    type: object
    properties:
      responses:
        type: array
        items:
          type: object
          $ref: '#/definitions/MultiCommandResponsesMultiCommandResponse'
  v1MultiSearchTaskRequest:
    type: object
    properties:
      searchRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SearchTaskRequest'
  v1PersonaType:
    type: string
    enum:
      - PERSONA_TYPE_UNSET
      - PERSONA_TYPE_PARTNER
      - PERSONA_TYPE_SALES_PERSON
      - PERSONA_TYPE_DIGITAL_AGENT
      - PERSONA_TYPE_SMB
    default: PERSONA_TYPE_UNSET
  v1RangeField:
    type: string
    enum:
      - RANGE_FIELD_DUE_DATE
      - RANGE_FIELD_COMPLETION_DATE
      - RANGE_FIELD_CREATED_DATE
    default: RANGE_FIELD_DUE_DATE
  v1RemoveAssigneeRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      assignee:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1RemoveAttachmentRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are removing an attachment on
      attachment:
        $ref: '#/definitions/v1Attachment'
        title: The details of the file being removed from the task
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1RemoveCustomTagsRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      customTags:
        type: array
        items:
          type: string
        title: User defined tags to be removed from a task
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1RemoveMultiAssigneeRequest:
    type: object
    properties:
      removeRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RemoveAssigneeRequest'
        title: List of the requests to remove assignees from tasks
  v1RemoveTagsRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      tags:
        type: array
        items:
          type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1ReorderSubtaskRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are reordering
      currentPosition:
        type: string
        format: int64
        title: The current index of the subtask in the parent task's list of subtasks
      newPosition:
        type: string
        format: int64
        title: The new index of the subtask in the parent task's list of subtasks
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1RestoreMultiTaskRequest:
    type: object
    properties:
      restoreRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RestoreTaskRequest'
        title: The version, namespace, parent path, and task id of the tasks being restored
  v1RestoreTaskRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are restoring
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are restoring
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SearchTaskRequest:
    type: object
    properties:
      namespace:
        type: string
        title: Exact match namespace
      parentPathFuzzy:
        type: string
        description: Fuzzy match parent path.
      parentPathExact:
        type: string
        title: Exact match parent path
      titleFuzzy:
        type: string
        title: Fuzzy match task title
      titleExact:
        type: string
        title: Exact match task title
      assignees:
        type: array
        items:
          type: string
        title: Assignee to search on. Multiple assignees will return tasks that have at least one of the specified assignees
      rangeStart:
        type: string
        format: date-time
        title: Search tasks that have a due date after the specified time
      rangeEnd:
        type: string
        format: date-time
        title: Search tasks that have a due date before the specified time
      types:
        type: array
        items:
          type: string
        description: Type of tasks to return. Returns tasks that match at least one of the specified types.
      status:
        type: array
        items:
          type: string
        title: Exact match task status
      tags:
        type: array
        items:
          type: string
        title: Search tasks tagged with these tags. Returns tasks that match at least one tag
      metadata:
        $ref: '#/definitions/v1KeyValues'
        description: Search on key value metadata. Useful for searching on part of your namespace or task scope.
      cursor:
        type: string
        title: An offset to start returning tasks from
      pageSize:
        type: string
        format: int64
        title: The number of tasks to be returned
      sortField:
        type: string
        title: What field to sort results on
      sortDirection:
        $ref: '#/definitions/v1SortDirection'
        title: Whether or not to sort results ascending or descending
      dateRangeField:
        $ref: '#/definitions/v1RangeField'
        title: Which field to range over for range_start and range_end
      access:
        type: array
        items:
          type: string
        title: Which users have access to a task
      sorts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Sort'
        title: The fields and directions to sort the results on. List order will be used for precedence
      excludeHistory:
        type: boolean
        description: Whether or not to exclude history from the search response. This can help with large message size issues.
      deletedOnly:
        type: boolean
        title: Whether to show only deleted tasks in the search response
      tagGroups:
        $ref: '#/definitions/v1GroupedTags'
        title: Groups of tags to OR together (the tags within each group are AND'ed)
      metadataGroups:
        $ref: '#/definitions/v1GroupedMetadata'
        title: Groups of metadata that will OR together (all data within each group will be AND'ed)
      taskId:
        type: string
        title: Exact match task ID. Useful if the ID is known but the namespace or parent path are uncertain
      customTags:
        type: array
        items:
          type: string
        title: User defined custom tags. If specified will return tasks that match ALL provided tags
    title: Request to search tasks with optional fields to search on
  v1SearchTaskResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Task'
        title: The list of tasks returned from this search request
      nextCursor:
        type: string
        title: The cursor to send with the next search request
      hasMore:
        type: boolean
        title: If there is another batch of results to be returned
      hits:
        type: string
        format: int64
        title: Total number of tasks that match the search criteria
  v1SetDescriptionRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      description:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SetDueDateRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      dueDate:
        type: string
        format: date-time
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SetKeyValue:
    type: object
    properties:
      version:
        type: string
        format: int64
      identity:
        $ref: '#/definitions/v1TaskIdentity'
      keyValueData:
        $ref: '#/definitions/v1KeyValues'
        title: Map like data with string keys and values of type string|int64|bool|double|Timestamp
      field:
        $ref: '#/definitions/v1KeyValueField'
        title: The field to set the KeyValues on
  v1SetKeyValuesRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      keyValueData:
        $ref: '#/definitions/v1KeyValues'
        title: Map like data with string keys and values of type string|int64|bool|double|Timestamp
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SetMultiDueDateRequest:
    type: object
    properties:
      dueDateRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SetDueDateRequest'
        title: List of requests to set due dates on tasks
  v1SetMultiNotesRequest:
    type: object
    properties:
      notesRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SetNotesRequest'
        title: List of requests to set notes on tasks
  v1SetMultiStatusRequest:
    type: object
    properties:
      statusRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SetStatusRequest'
        title: List of the requests to set statuses on tasks
  v1SetNotesRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      notes:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SetStatusRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      status:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SetTitleRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      title:
        type: string
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1SetTypeRequest:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The most up to date version you have of the task you are operating on
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task you are operating on
      taskType:
        type: string
        title: The type you wish to set the task to
      callerSubjectId:
        type: string
        title: The subject id of the user performing this action
  v1Sort:
    type: object
    properties:
      field:
        type: string
        title: The field to sort on
      direction:
        $ref: '#/definitions/v1SortDirection'
        title: Whether to sort ascending or descending
    title: A sort to be used when searching
  v1SortDirection:
    type: string
    enum:
      - SORT_DIRECTION_DESCENDING
      - SORT_DIRECTION_ASCENDING
    default: SORT_DIRECTION_DESCENDING
  v1TagGroup:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
  v1Task:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The task's current version
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task
      title:
        type: string
        title: The name of the task
      status:
        type: string
        title: The state of the task
      dueDate:
        type: string
        format: date-time
        title: When the task is due
      assignees:
        type: array
        items:
          type: string
        title: Who is working on the task
      notes:
        type: string
        title: User added details about the task
      description:
        type: string
        title: Task details
      tags:
        type: array
        items:
          type: string
        title: Labels given to the task
      history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1History'
        title: The events that have happened on this task
      created:
        type: string
        format: date-time
      modified:
        type: string
        format: date-time
      completionDate:
        type: string
        format: date-time
      subtasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TaskIdentity'
        title: Namespace, parent path, and task id of all the task's subtasks
      taskType:
        type: string
      data:
        $ref: '#/definitions/v1KeyValues'
        title: Arbitrary data stored on the task
      metadata:
        $ref: '#/definitions/v1KeyValues'
        title: Data about the task. Includes each part of task's namespace
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Conversation'
      deleted:
        type: string
        format: date-time
      attachment:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attachment'
        title: Information about an uploaded files associated with this task
      customTags:
        type: array
        items:
          type: string
  v1TaskIdentity:
    type: object
    properties:
      namespace:
        type: string
        title: The scope of the task. e.g. "partner/ABC/account-group/AG-123"
      parentPath:
        type: string
        title: The tasks parent(s). e.g. "/TK-1/" if this is a subtask of task TK-1 or "/" if this is a top level task
      taskId:
        type: string
        title: The tasks unique id
  v1TaskTree:
    type: object
    properties:
      version:
        type: string
        format: int64
        title: The task's current version
      identity:
        $ref: '#/definitions/v1TaskIdentity'
        title: The namespace, parent path, and task id of the task
      title:
        type: string
        title: The name of the task
      status:
        type: string
        title: The state of the task
      dueDate:
        type: string
        format: date-time
        title: When the task is due
      assignees:
        type: array
        items:
          type: string
        title: Who is working on the task
      notes:
        type: string
        title: User added details about the task
      description:
        type: string
        title: Task details
      tags:
        type: array
        items:
          type: string
        title: Labels given to the task
      history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1History'
        title: The events that have happened on this task
      created:
        type: string
        format: date-time
      modified:
        type: string
        format: date-time
      completionDate:
        type: string
        format: date-time
      subtasks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TaskTree'
        title: Namespace, parent path, and task id of all the task's subtasks
      taskType:
        type: string
      data:
        $ref: '#/definitions/v1KeyValues'
        title: Arbitrary data stored on the task
      metadata:
        $ref: '#/definitions/v1KeyValues'
        title: Data about the task. Includes each part of task's namespace
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Conversation'
      deleted:
        type: string
        format: date-time
      attachment:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Attachment'
        title: Information about uploaded files associated with this task
      customTags:
        type: array
        items:
          type: string
  v1ValueMetricResponse:
    type: object
    properties:
      key:
        type: string
        title: The field for the metric calculation
      value:
        type: number
        format: double
        title: The value of the metric i.e. min
    title: A metric response that contains the value of aggregated data for a given field
