swagger: "2.0"
info:
  title: task_manager/v1/accounts.proto
  version: version not set
tags:
  - name: Accounts
consumes:
  - application/json
produces:
  - application/json
paths:
  /taskmanager.v1.Accounts/CreateConciergeAccount:
    post:
      operationId: Accounts_CreateConciergeAccount
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateConciergeAccountRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/DeactivateConciergeAccount:
    post:
      operationId: Accounts_DeactivateConciergeAccount
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeactivateConciergeAccountRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/GetAccountListingSourcesSettings:
    post:
      summary: Account Monitored Sources (Listing Sources) Settings
      operationId: Accounts_GetAccountListingSourcesSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SourceSettingsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAccountListingSourcesSettingsRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/GetPurchasingPartnerAccount:
    post:
      summary: GetPurchasingPartnerAccount returns the AccountGroup for an Account within Purchasing Partner
      operationId: Accounts_GetPurchasingPartnerAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPurchasingPartnerAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetPurchasingPartnerAccountRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/GetPurchasingPartnerConciergeAccount:
    post:
      summary: GetPurchasingPartnerConciergeAccount returns the ConciergeAccount for an Account within Purchasing Partner
      operationId: Accounts_GetPurchasingPartnerConciergeAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetPurchasingPartnerConciergeAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetPurchasingPartnerConciergeAccountRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/GetSalesOrderFormSubmissionInfo:
    post:
      summary: Retrieve data from the Order Form Submission
      operationId: Accounts_GetSalesOrderFormSubmissionInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSalesOrderFormSubmissionInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSalesOrderFormSubmissionInfoRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/GetTaskAccounts:
    post:
      summary: |-
        GetTaskAccounts returns the account groups a list of tasks is for
        account groups are retrieved via task identities so users can be authed based on their access to the task (needed for cross partner tasks with vendor fulfilment)
      operationId: Accounts_GetTaskAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTaskAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTaskAccountsRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/GetTaskConciergeAccount:
    post:
      summary: |-
        GetTaskConciergeAccount returns the account groups a list of tasks is for
        concierge accounts are retrieved via task identities so users can be authed based on their access to the task (needed for cross partner tasks with vendor fulfilment)
      operationId: Accounts_GetTaskConciergeAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTaskConciergeAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTaskConciergeAccountRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/IsAppActive:
    post:
      operationId: Accounts_IsAppActive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IsAppActiveResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IsAppActiveRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/ListAccountSocialServices:
    post:
      summary: Returns the connected social services for an account group
      operationId: Accounts_ListAccountSocialServices
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAccountSocialServicesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListAccountSocialServicesRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/ListCommitmentDates:
    post:
      operationId: Accounts_ListCommitmentDates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListCommitmentDatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListCommitmentDatesRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/PauseConciergeAccount:
    post:
      operationId: Accounts_PauseConciergeAccount
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1PauseConciergeAccountRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/SetAccountNote:
    post:
      summary: SetAccountNote Set the note field of an Account
      operationId: Accounts_SetAccountNote
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetAccountNoteRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/UpdateAccountListingSource:
    post:
      operationId: Accounts_UpdateAccountListingSource
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateAccountListingSourceRequest'
      tags:
        - Accounts
  /taskmanager.v1.Accounts/UpdateAccountMultiListingSource:
    post:
      operationId: Accounts_UpdateAccountMultiListingSource
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateAccountMultiListingSourceRequest'
      tags:
        - Accounts
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AccountGroup:
    type: object
    properties:
      accountGroupId:
        type: string
      napData:
        $ref: '#/definitions/v1NAPData'
      externalIdentifiers:
        $ref: '#/definitions/v1ExternalIdentifiers'
      contactDetails:
        $ref: '#/definitions/v1ContactDetails'
      salesperson:
        $ref: '#/definitions/v1Salesperson'
    title: The fields on an account group that Task Manager cares about
  v1AccountSocialService:
    type: string
    enum:
      - ACCOUNT_SOCIAL_SERVICE_UNDEFINED
      - ACCOUNT_SOCIAL_SERVICE_FACEBOOK
      - ACCOUNT_SOCIAL_SERVICE_GMB
    default: ACCOUNT_SOCIAL_SERVICE_UNDEFINED
  v1ConciergeAccount:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
      conciergeAccountId:
        type: string
      assignee:
        type: string
      notes:
        type: string
      isCollectingTasks:
        type: boolean
      isBilling:
        type: boolean
      qaTasksEnabled:
        type: boolean
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      market:
        type: string
      website:
        type: string
      contactName:
        type: string
      willDeactivate:
        type: boolean
  v1ContactDetails:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phoneNumber:
        type: string
  v1CreateConciergeAccountRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      fulfillingPartnerId:
        type: string
      startActiveBypass:
        type: boolean
        description: |-
          this is a bypass flag to start the account in the active state. Typically set to true when creating a task for an
          account that doesn't exist yet.
  v1DeactivateConciergeAccountRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
  v1ExternalIdentifiers:
    type: object
    properties:
      origin:
        type: string
      jobId:
        type: array
        items:
          type: string
      customerIdentifier:
        type: string
      tags:
        type: array
        items:
          type: string
      actionLists:
        type: array
        items:
          type: string
      socialProfileId:
        type: string
      partnerId:
        type: string
      marketId:
        type: string
      taxIds:
        type: array
        items:
          type: string
      salesPersonId:
        type: string
        title: Primary salesperson id
  v1GetAccountListingSourcesSettingsRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
  v1GetPurchasingPartnerAccountRequest:
    type: object
    properties:
      purchasingPartnerId:
        type: string
      accountGroupId:
        type: string
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1GetPurchasingPartnerAccountResponse:
    type: object
    properties:
      accountGroup:
        $ref: '#/definitions/v1AccountGroup'
  v1GetPurchasingPartnerConciergeAccountRequest:
    type: object
    properties:
      purchasingPartnerId:
        type: string
      accountGroupId:
        type: string
  v1GetPurchasingPartnerConciergeAccountResponse:
    type: object
    properties:
      conciergeAccount:
        $ref: '#/definitions/v1ConciergeAccount'
  v1GetSalesOrderFormSubmissionInfoRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      fulfillingPartnerId:
        type: string
      orderFormSubmissionId:
        type: string
  v1GetSalesOrderFormSubmissionInfoResponse:
    type: object
    properties:
      orderFormSubmissionId:
        type: string
      productId:
        type: string
      accountGroupId:
        type: string
      partnerId:
        type: string
      commonFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SalesOrderFormSubmissionField'
      customFields:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SalesOrderFormSubmissionField'
  v1GetTaskAccountsRequest:
    type: object
    properties:
      identities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TaskIdentity'
      fieldMask:
        $ref: '#/definitions/vendastatypesFieldMask'
  v1GetTaskAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AccountGroup'
  v1GetTaskConciergeAccountRequest:
    type: object
    properties:
      identity:
        $ref: '#/definitions/v1TaskIdentity'
  v1GetTaskConciergeAccountResponse:
    type: object
    properties:
      conciergeAccount:
        $ref: '#/definitions/v1ConciergeAccount'
  v1IsAppActiveRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      fulfillingPartnerId:
        type: string
      appId:
        type: string
  v1IsAppActiveResponse:
    type: object
    properties:
      isActive:
        type: boolean
  v1ListAccountSocialServicesRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      fulfillingPartnerId:
        type: string
  v1ListAccountSocialServicesResponse:
    type: object
    properties:
      socialServices:
        type: array
        items:
          $ref: '#/definitions/v1AccountSocialService'
  v1ListCommitmentDatesRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      fulfillingPartnerId:
        type: string
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListCommitmentDatesResponse:
    type: object
    properties:
      commitmentDate:
        type: object
        additionalProperties:
          type: string
          format: date-time
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1NAPData:
    type: object
    properties:
      companyName:
        type: string
      address:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      country:
        type: string
      website:
        type: string
      workNumber:
        type: array
        items:
          type: string
      callTrackingNumber:
        type: array
        items:
          type: string
      timezone:
        type: string
      serviceAreaBusiness:
        type: boolean
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
      totalResults:
        type: string
        format: int64
        title: The total number of results
  v1PauseConciergeAccountRequest:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
  v1SalesOrderFormSubmissionField:
    type: object
    properties:
      label:
        type: string
      description:
        type: string
      answer:
        type: string
      fieldId:
        type: string
      fieldType:
        type: string
  v1Salesperson:
    type: object
    properties:
      salespersonId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phoneNumber:
        type: array
        items:
          type: string
      userId:
        type: string
        title: Refers to the iam user.User
      countryCode:
        type: string
      marketId:
        type: string
      photoUrlHttps:
        type: string
      lastLogin:
        type: string
        format: date-time
      jobTitle:
        type: string
      isSalesManager:
        type: boolean
      meetingBookingUrl:
        type: string
    title: 'Deprecated: Define your salesperson RPCs in v2 and use the v2 salesperson'
  v1SetAccountNoteRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
      note:
        type: string
  v1SourceSetting:
    type: object
    properties:
      sourceTypeId:
        type: string
      hasListingsFlag:
        type: boolean
      iconClass16px:
        type: string
      iconClass32px:
        type: string
      hasReviewsFlag:
        type: boolean
      name:
        type: string
      sourceId:
        type: string
        format: int64
      enabledFlag:
        type: boolean
      visibilityEnabled:
        type: boolean
      socializeEnabled:
        type: boolean
      descriptionHtml:
        type: string
      reviewsEnabled:
        type: boolean
      sourceTypeName:
        type: string
      iconUrl:
        type: string
      iconUrl32px:
        type: string
      listingsVerified:
        type: boolean
      anchorDataWarning:
        type: boolean
  v1SourceSettingsResponse:
    type: object
    properties:
      sourceSettings:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SourceSetting'
  v1TaskIdentity:
    type: object
    properties:
      namespace:
        type: string
        title: The scope of the task. e.g. "partner/ABC/account-group/AG-123"
      parentPath:
        type: string
        title: The tasks parent(s). e.g. "/TK-1/" if this is a subtask of task TK-1 or "/" if this is a top level task
      taskId:
        type: string
        title: The tasks unique id
  v1UpdateAccountListingSourceRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
      category:
        type: string
      enabled:
        type: boolean
      sourceId:
        type: string
        format: int64
  v1UpdateAccountMultiListingSourceRequest:
    type: object
    properties:
      partnerId:
        type: string
      accountGroupId:
        type: string
      category:
        type: string
      enabled:
        type: boolean
      sourceIds:
        type: array
        items:
          type: string
          format: int64
  vendastatypesFieldMask:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
        description: The set of field mask paths.
    description: |-
      paths: "f.a"
          paths: "f.b.d"

      Here `f` represents a field in some root message, `a` and `b`
      fields in the message found in `f`, and `d` a field found in the
      message in `f.b`.

      Field masks are used to specify a subset of fields that should be
      returned by a get operation or modified by an update operation.
      Field masks also have a custom JSON encoding (see below).

      # Field Masks in Projections

      When used in the context of a projection, a response message or
      sub-message is filtered by the API to only contain those fields as
      specified in the mask. For example, if the mask in the previous
      example is applied to a response message as follows:

          f {
            a : 22
            b {
              d : 1
              x : 2
            }
            y : 13
          }
          z: 8

      The result will not contain specific values for fields x,y and z
      (their value will be set to the default, and omitted in proto text
      output):


          f {
            a : 22
            b {
              d : 1
            }
          }

      A repeated field is not allowed except at the last position of a
      paths string.

      If a FieldMask object is not present in a get operation, the
      operation applies to all fields (as if a FieldMask of all fields
      had been specified).

      Note that a field mask does not necessarily apply to the
      top-level response message. In case of a REST get operation, the
      field mask applies directly to the response, but in case of a REST
      list operation, the mask instead applies to each individual message
      in the returned resource list. In case of a REST custom method,
      other definitions may be used. Where the mask applies will be
      clearly documented together with its declaration in the API.  In
      any case, the effect on the returned resource/resources is required
      behavior for APIs.

      # Field Masks in Update Operations

      A field mask in update operations specifies which fields of the
      targeted resource are going to be updated. The API is required
      to only change the values of the fields as specified in the mask
      and leave the others untouched. If a resource is passed in to
      describe the updated values, the API ignores the values of all
      fields not covered by the mask.

      If a repeated field is specified for an update operation, the existing
      repeated values in the target resource will be overwritten by the new values.
      Note that a repeated field is only allowed in the last position of a `paths`
      string.

      If a sub-message is specified in the last position of the field mask for an
      update operation, then the existing sub-message in the target resource is
      overwritten. Given the target message:

          f {
            b {
              d : 1
              x : 2
            }
            c : 1
          }

      And an update message:

          f {
            b {
              d : 10
            }
          }

      then if the field mask is:

       paths: "f.b"

      then the result will be:

          f {
            b {
              d : 10
            }
            c : 1
          }

      However, if the update mask was:

       paths: "f.b.d"

      then the result would be:

          f {
            b {
              d : 10
              x : 2
            }
            c : 1
          }

      In order to reset a field's value to the default, the field must
      be in the mask and set to the default value in the provided resource.
      Hence, in order to reset all fields of a resource, provide a default
      instance of the resource and set all fields in the mask, or do
      not provide a mask as described below.

      If a field mask is not present on update, the operation applies to
      all fields (as if a field mask of all fields has been specified).
      Note that in the presence of schema evolution, this may mean that
      fields the client does not know and has therefore not filled into
      the request will be reset to their default. If this is unwanted
      behavior, a specific service may require a client to always specify
      a field mask, producing an error if not.

      As with get operations, the location of the resource which
      describes the updated values in the request message depends on the
      operation kind. In any case, the effect of the field mask is
      required to be honored by the API.

      ## Considerations for HTTP REST

      The HTTP kind of an update operation which uses a field mask must
      be set to PATCH instead of PUT in order to satisfy HTTP semantics
      (PUT must only be used for full updates).

      # JSON Encoding of Field Masks

      In JSON, a field mask is encoded as a single string where paths are
      separated by a comma. Fields name in each path are converted
      to/from lower-camel naming conventions.

      As an example, consider the following message declarations:

          message Profile {
            User user = 1;
            Photo photo = 2;
          }
          message User {
            string display_name = 1;
            string address = 2;
          }

      In proto a field mask for `Profile` may look as such:

          mask {
            paths: "user.display_name"
            paths: "photo"
          }

      In JSON, the same mask is represented as below:

          {
            mask: "user.displayName,photo"
          }

      # Field Masks and Oneof Fields

      Field masks treat fields in oneofs just as regular fields. Consider the
      following message:

          message SampleMessage {
            oneof test_oneof {
              string name = 4;
              SubMessage sub_message = 9;
            }
          }

      The field mask can be:

          mask {
            paths: "name"
          }

      Or:

          mask {
            paths: "sub_message"
          }

      Note that oneof type names ("test_oneof" in this case) cannot be used in
      paths.
    title: '`FieldMask` represents a set of symbolic field paths, for example:'
