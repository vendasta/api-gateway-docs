swagger: "2.0"
info:
  title: templates/v1/api.proto
  version: version not set
tags:
  - name: TemplatesService
consumes:
  - application/json
produces:
  - application/json
paths:
  /templates.v1.TemplatesService/AddTemplateLocale:
    post:
      summary: Add a localized version of a template
      operationId: TemplatesService_AddTemplateLocale
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AddTemplateLocaleRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/Create:
    post:
      summary: Creates a template
      operationId: TemplatesService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/CreateMulti:
    post:
      summary: Creates multiple templates
      operationId: TemplatesService_CreateMulti
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateMultiTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/Delete:
    post:
      summary: Delete template
      operationId: TemplatesService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/Get:
    post:
      summary: Fetch a template data
      operationId: TemplatesService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/GetAllSubstitutionParameters:
    post:
      summary: Returns all of the substitution parameters and the data required to use them
      operationId: TemplatesService_GetAllSubstitutionParameters
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAllSubstitutionParametersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAllSubstitutionParametersRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/GetMulti:
    post:
      summary: Fetch multiple template data
      operationId: TemplatesService_GetMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/List:
    post:
      summary: List templates for a given account
      operationId: TemplatesService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListTemplateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/ListSubstitutionParameters:
    post:
      summary: Returns a list of substitution parameters and the data required to use them
      operationId: TemplatesService_ListSubstitutionParameters
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSubstitutionParametersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSubstitutionParametersRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/Render:
    post:
      summary: Render any content to html
      operationId: TemplatesService_Render
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RenderRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/RenderMulti:
    post:
      summary: Render any content to html
      operationId: TemplatesService_RenderMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenderMultiResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RenderMultiRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/RenderTemplate:
    post:
      summary: Render a given template to html
      operationId: TemplatesService_RenderTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RenderTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/RenderTemplateMulti:
    post:
      summary: Render many templates to html at once
      operationId: TemplatesService_RenderTemplateMulti
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenderMultiResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RenderTemplateMultiRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/Replace:
    post:
      summary: Replace template
      operationId: TemplatesService_Replace
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ReplaceTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/Update:
    post:
      summary: Update template
      operationId: TemplatesService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateTemplateRequest'
      tags:
        - TemplatesService
  /templates.v1.TemplatesService/VerifySubstitutionParameters:
    post:
      summary: |-
        Verify the substitution parameters found in the template, not all substitution parameters return an error if they can't be rendered, some are just replaced
        with an empty string. This is done for legacy compatibility
      operationId: TemplatesService_VerifySubstitutionParameters
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifySubstitutionParametersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VerifySubstitutionParametersRequest'
      tags:
        - TemplatesService
definitions:
  GetMultiTemplateResponseGetOrError:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1Template'
      errorDescription:
        type: string
    title: Template or error message
  ListSubstitutionParametersRequestFilters:
    type: object
    properties:
      includeHtml:
        type: boolean
      includeDeprecated:
        type: boolean
      forRequiredOptions:
        $ref: '#/definitions/v1SubstitutionParameterOptions'
        title: |-
          With Required Options will filter out the SubstitutionParameters that have required options that are left blank. This way if you don't provide
          an `account_group_id` SubstitutionParameters that required `account_group_id` will not be returned. The values aren't used, other than to check if it's empty.
          If this structure is nil then this filter is ignored and all of the SubstitutionParameters will be returned (while respecting the other filters)
  RenderMultiResponseRenderOrError:
    type: object
    properties:
      renderedTemplate:
        type: string
      errorDescription:
        type: string
    title: Rendered template
  RenderTemplateMultiRequestParameterizedTemplates:
    type: object
    properties:
      templateId:
        type: string
        title: Template ID to render (without locale section)
      parameters:
        type: object
        title: |-
          Substitution parameters
          Supports dot pathing in the template content; for example, given `productName['.Workflow.Step1.ProductId']` will go Workflow > Step1 > ProductId into
          parameters and get the associated value
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
      substitutionParameterOptions:
        $ref: '#/definitions/v1SubstitutionParameterOptions'
        description: |-
          Options to hydrate user friendly parameters provided on render to previously defined replacement tags. This is a less powerful, but more user friendly way for
          dynamic content replacement.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AccountGroupsHydrationOption:
    type: object
    properties:
      accountGroupIds:
        type: string
        title: The name of the parameter that will contain account group ids
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the list of account groups
  v1AddTemplateLocaleRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      templateId:
        type: string
        title: Template ID to get
      locale:
        type: string
        title: |-
          The locale to add
          Must be IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
          Examples: en-US, cs-CZ, mx-MX
  v1AppsHydrationOption:
    type: object
    properties:
      appKeys:
        type: string
        description: The name of the parameter that will contain app_keys. They should be in the format of the AppKey message.
      partnerId:
        type: string
        title: The name of the parameter that will contain the partner id (used for whitelabeling)
      marketId:
        type: string
        title: The name of the parameter that will contain the market id (used for whitelabeling)
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the list of apps
  v1BrandingHydrationOption:
    type: object
    properties:
      partnerId:
        type: string
        title: The name of the parameter that will contain the partner id
      marketId:
        type: string
        title: The name of the parameter that will contain the market id
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the branding
  v1CreateMultiTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id (e.g. Customer Voice, Notifications, etc)
      templates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Template'
        title: Templates to create
  v1CreateTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id (e.g. Customer Voice, Notifications, etc)
      template:
        $ref: '#/definitions/v1Template'
        title: Template to create
  v1DeleteTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      templateId:
        type: string
        title: Template ID to delete
  v1GetAllSubstitutionParametersRequest:
    type: object
    properties:
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
  v1GetAllSubstitutionParametersResponse:
    type: object
    properties:
      substitutionParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubstitutionParameter'
  v1GetMultiTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      templateIds:
        type: array
        items:
          type: string
        title: List of templates to get
  v1GetMultiTemplateResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetMultiTemplateResponseGetOrError'
        description: |-
          A list of templates, or an error if a template could not be found.
          The order of the list is the same as the order of the request.
  v1GetTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      templateId:
        type: string
        title: Template ID to get
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
  v1GetTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/v1Template'
        title: Template data
  v1HydrationOptions:
    type: object
    properties:
      accountGroups:
        $ref: '#/definitions/v1AccountGroupsHydrationOption'
      apps:
        $ref: '#/definitions/v1AppsHydrationOption'
      packages:
        $ref: '#/definitions/v1PackagesHydrationOption'
      branding:
        $ref: '#/definitions/v1BrandingHydrationOption'
      users:
        $ref: '#/definitions/v1UsersHydrationOption'
      salesActivities:
        $ref: '#/definitions/v1SalesActivitiesHydrationOption'
      partnerConfig:
        $ref: '#/definitions/v1PartnerConfigHydrationOption'
      task:
        $ref: '#/definitions/v1TasksHydrationOption'
  v1ListSubstitutionParametersRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListSubstitutionParametersRequestFilters'
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
  v1ListSubstitutionParametersResponse:
    type: object
    properties:
      substitutionParameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubstitutionParameter'
  v1ListTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      prefix:
        type: string
        title: Prefix used for a prefix query (e.g. "/business-id/AG-123/")
      cursor:
        type: string
        title: A cursor to specify where to start listing templates
      pageSize:
        type: string
        format: int64
        title: The number of templates to return
  v1ListTemplateResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Template'
        title: All templates for a given business ID
      cursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not there are more results to list
  v1PackagesHydrationOption:
    type: object
    properties:
      packageIds:
        type: string
        title: The name of the parameter that will contain package ids
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the list of apps
  v1PartnerConfigHydrationOption:
    type: object
    properties:
      partnerId:
        type: string
        title: The name of the parameter that will contain the partner id of the sales config
      marketId:
        type: string
        title: The name of the parameter that will contain the market id of the sales config (empty for all markets)
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the list of sales config
  v1RawTemplate:
    type: object
    properties:
      templateContent:
        type: string
      type:
        $ref: '#/definitions/v1TemplateType'
  v1RenderMultiRequest:
    type: object
    properties:
      renderRequests:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RenderMultiRequestRender'
  v1RenderMultiRequestRender:
    type: object
    properties:
      templateContent:
        type: string
        title: Template content to render
      parameters:
        type: object
        title: |-
          Substitution parameters
          Supports dot pathing in the template content; for example, given `productName['.Workflow.Step1.ProductId']` will go Workflow > Step1 > ProductId into
          parameters and get the associated value
      errorOnMissingParam:
        type: boolean
        title: should return an error if parameters are missing keys. This is only an option for golang templates. Django templates wont return an error for missing keys
      type:
        $ref: '#/definitions/v1TemplateType'
        title: The type of template so the correct templating engine can be used
      hydrationOptions:
        $ref: '#/definitions/v1HydrationOptions'
        title: Options to hydrate parameters provided on render to inflated structures
      substitutionParameterOptions:
        $ref: '#/definitions/v1SubstitutionParameterOptions'
        description: |-
          Options to hydrate user friendly parameters provided on render to previously defined replacement tags. This is a less powerful, but more user friendly way for
          dynamic content replacement.
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
      renderFakeData:
        type: boolean
        title: (Optional) True if fake data should be rendered when real data cannot be
      disableAutoEscape:
        type: boolean
        title: (Optional) True if automatic character escaping should be disabled
      preserveUnhydratedPlaceholders:
        type: boolean
        title: (Optional) True if non hydrated fields are wished to be displayed
  v1RenderMultiResponse:
    type: object
    properties:
      renders:
        type: array
        items:
          type: object
          $ref: '#/definitions/RenderMultiResponseRenderOrError'
        description: |-
          a list of the rendered templates, or an error if a template could not be rendered.
          The order of the list is the same as the order in the request.
  v1RenderRequest:
    type: object
    properties:
      templateContent:
        type: string
        title: Template content to render
      parameters:
        type: object
        title: |-
          Substitution parameters
          Supports dot pathing in the template content; for example, given `productName['.Workflow.Step1.ProductId']` will go Workflow > Step1 > ProductId into
          parameters and get the associated value
      errorOnMissingParam:
        type: boolean
        title: should return an error if parameters are missing keys. This is only an option for golang templates. Django templates wont return an error for missing keys
      type:
        $ref: '#/definitions/v1TemplateType'
        title: The type of template so the correct templating engine can be used
      hydrationOptions:
        $ref: '#/definitions/v1HydrationOptions'
        title: Options to hydrate parameters provided on render to inflated structures
      substitutionParameterOptions:
        $ref: '#/definitions/v1SubstitutionParameterOptions'
        description: |-
          Options to hydrate user friendly parameters provided on render to previously defined replacement tags. This is a less powerful, but more user friendly way for
          dynamic content replacement.
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
      renderFakeData:
        type: boolean
        title: (Optional) True if fake data should be rendered when real data cannot be
      disableAutoEscape:
        type: boolean
        title: (Optional) True if automatic character escaping should be disabled
      preserveUnhydratedPlaceholders:
        type: boolean
        title: (Optional) True if non hydrated fields are wished to be displayed
  v1RenderResponse:
    type: object
    properties:
      renderedTemplate:
        type: string
        title: Rendered template
  v1RenderTemplateMultiRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      templatesToRender:
        type: array
        items:
          type: object
          $ref: '#/definitions/RenderTemplateMultiRequestParameterizedTemplates'
        title: a list of template ids and parameters to render them with
      errorOnMissingParam:
        type: boolean
        title: should return an error if parameters are missing keys. This is only an option for golang templates. Django templates wont return an error for missing keys
      disableAutoEscape:
        type: boolean
        title: (Optional) True if automatic character escaping should be disabled
      preserveUnhydratedPlaceholders:
        type: boolean
        title: (Optional) True if non hydrated fields are wished to be displayed
  v1RenderTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      templateId:
        type: string
        title: Template ID to render
      parameters:
        type: object
        title: |-
          Substitution parameters
          Supports dot pathing in the template content; for example, given `productName['.Workflow.Step1.ProductId']` will go Workflow > Step1 > ProductId into
          parameters and get the associated value
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
      errorOnMissingParam:
        type: boolean
        title: should return an error if parameters are missing keys. This is only an option for golang templates. Django templates wont return an error for missing keys
      substitutionParameterOptions:
        $ref: '#/definitions/v1SubstitutionParameterOptions'
        description: |-
          Options to hydrate user friendly parameters provided on render to previously defined replacement tags. This is a less powerful, but more user friendly way for
          dynamic content replacement.
      disableAutoEscape:
        type: boolean
        title: (Optional) True if automatic character escaping should be disabled
      preserveUnhydratedPlaceholders:
        type: boolean
        title: (Optional) True if non hydrated fields are wished to be displayed
  v1ReplaceTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      template:
        $ref: '#/definitions/v1Template'
        title: Template data
  v1SalesActivitiesHydrationOption:
    type: object
    properties:
      salesActivityKeys:
        type: string
        title: The name of the parameter that will contain the sales activity keys
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the list of sales activities
  v1SubstitutionParameter:
    type: object
    properties:
      replacementTag:
        type: string
        title: the tag that will be looked for in the template content to replace
      requiredOptions:
        type: array
        items:
          type: string
      displayName:
        type: string
      isHtml:
        type: boolean
      isDeprecated:
        type: boolean
  v1SubstitutionParameterError:
    type: object
    properties:
      replacementTag:
        type: string
        title: the tag that will be looked for in the template content to replace
      reason:
        type: string
        title: the reason this tag caused an error when verifying the substitution parameters
  v1SubstitutionParameterOptions:
    type: object
    properties:
      accountGroupId:
        type: string
      partnerId:
        type: string
      marketId:
        type: string
      userId:
        type: string
      orderId:
        type: string
      contactId:
        type: string
      namespace:
        type: string
    title: |-
      SubstitutionParameterOptions signals the template renderer to scan the template content for specific replacement tags.
      If those tags are found (and the relevant parameters are supplied) the values will be provided in the data dictionary while rendering the template.
      See GetAllSubstitutionParameters for the full list of replacement tags when turning on these options
  v1TasksHydrationOption:
    type: object
    properties:
      taskKeys:
        type: string
        title: The name of the parameter that will contain the task keys
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the tasks
  v1Template:
    type: object
    properties:
      templateId:
        type: string
        title: |-
          A unique RESTful identifier. The format will be used for providing template
          discoverability and categorizing them.
          Example: /business-id/AG-123/template-id/TEMPLATE-123
      name:
        type: string
        title: Template friendly name
      metadata:
        type: object
        title: 'Template meta data (e.g. Subject: "..." for an email template)'
      content:
        type: string
        title: Template content
      locale:
        type: string
        title: |-
          An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
          Examples: en-US, cs-CZ, es-MX
      hydrationOptions:
        $ref: '#/definitions/v1HydrationOptions'
        title: Options to hydrate parameters provided on render to inflated structures
      type:
        $ref: '#/definitions/v1TemplateType'
      created:
        type: string
        format: date-time
        description: The time at which the template was created.
  v1TemplateIdentifier:
    type: object
    properties:
      applicationId:
        type: string
      templateId:
        type: string
  v1TemplateType:
    type: string
    enum:
      - TEMPLATE_TYPE_GOLANG
      - TEMPLATE_TYPE_DJANGO
      - TEMPLATE_TYPE_GOLANG_TEXT
    default: TEMPLATE_TYPE_GOLANG
  v1UpdateTemplateRequest:
    type: object
    properties:
      applicationId:
        type: string
        title: Application id
      template:
        $ref: '#/definitions/v1Template'
        title: Template data
  v1UsersHydrationOption:
    type: object
    properties:
      userIds:
        type: string
        title: The name of the parameter that will contain the user ids
      inflatedPropertyName:
        type: string
        title: The name of the property to inflate with the list of users
  v1VerifySubstitutionParametersRequest:
    type: object
    properties:
      rawTemplate:
        $ref: '#/definitions/v1RawTemplate'
      templateIdentifier:
        $ref: '#/definitions/v1TemplateIdentifier'
      substitutionParameterOptions:
        $ref: '#/definitions/v1SubstitutionParameterOptions'
      locale:
        type: string
        description: (Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code.
      parameters:
        type: object
  v1VerifySubstitutionParametersResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SubstitutionParameterError'
