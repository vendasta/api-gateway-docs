swagger: "2.0"
info:
  title: web_crawler/v1/api.proto
  version: version not set
tags:
  - name: CollectorService
  - name: ScraperService
  - name: ListingService
  - name: RescrapeService
  - name: SearchService
  - name: LockdownService
  - name: IncidentService
  - name: PlatformHealth
consumes:
  - application/json
produces:
  - application/json
paths:
  /web_crawler.v1.CollectorService/Create:
    post:
      operationId: CollectorService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateCollectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateCollectorRequest'
      tags:
        - CollectorService
  /web_crawler.v1.CollectorService/Delete:
    post:
      operationId: CollectorService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteCollectorRequest'
      tags:
        - CollectorService
  /web_crawler.v1.CollectorService/List:
    post:
      operationId: CollectorService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListCollectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListCollectorRequest'
      tags:
        - CollectorService
  /web_crawler.v1.CollectorService/Start:
    post:
      operationId: CollectorService_Start
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1StartCollectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1StartCollectorRequest'
      tags:
        - CollectorService
  /web_crawler.v1.CollectorService/Update:
    post:
      operationId: CollectorService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateCollectorRequest'
      tags:
        - CollectorService
  /web_crawler.v1.IncidentService/List:
    post:
      operationId: IncidentService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListIncidentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListIncidentRequest'
      tags:
        - IncidentService
  /web_crawler.v1.ListingService/ScrapeListing:
    post:
      operationId: ListingService_ScrapeListing
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ScrapeListingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ScrapeListingRequest'
      tags:
        - ListingService
  /web_crawler.v1.ListingService/ScrapeReviews:
    post:
      operationId: ListingService_ScrapeReviews
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ScrapeReviewsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ScrapeReviewsRequest'
      tags:
        - ListingService
  /web_crawler.v1.ListingService/SearchForListing:
    post:
      operationId: ListingService_SearchForListing
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SearchForListingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchForListingRequest'
      tags:
        - ListingService
  /web_crawler.v1.ListingService/SubmitListingURL:
    post:
      summary: 'DEPRECATED: Use SubmitPotentialListing or ScrapeListing'
      operationId: ListingService_SubmitListingURL
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SubmitListingURLRequest'
      tags:
        - ListingService
  /web_crawler.v1.ListingService/SubmitPotentialListing:
    post:
      operationId: ListingService_SubmitPotentialListing
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SubmitPotentialListingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SubmitPotentialListingRequest'
      tags:
        - ListingService
  /web_crawler.v1.LockdownService/Create:
    post:
      operationId: LockdownService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateLockdownRequest'
      tags:
        - LockdownService
  /web_crawler.v1.LockdownService/Delete:
    post:
      operationId: LockdownService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteLockdownRequest'
      tags:
        - LockdownService
  /web_crawler.v1.LockdownService/GetMultiMostRecentLockdown:
    post:
      operationId: LockdownService_GetMultiMostRecentLockdown
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiMostRecentLockdownResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiMostRecentLockdownRequest'
      tags:
        - LockdownService
  /web_crawler.v1.LockdownService/List:
    post:
      operationId: LockdownService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListLockdownResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListLockdownRequest'
      tags:
        - LockdownService
  /web_crawler.v1.PlatformHealth/GetMultiKeyMetricsList:
    post:
      operationId: PlatformHealth_GetMultiKeyMetricsList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiKeyMetricsListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiKeyMetricsListRequest'
      tags:
        - PlatformHealth
  /web_crawler.v1.PlatformHealth/GetMultiSourceTier:
    post:
      operationId: PlatformHealth_GetMultiSourceTier
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMultiSourceTierResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetMultiSourceTierRequest'
      tags:
        - PlatformHealth
  /web_crawler.v1.PlatformHealth/GetSourceTier:
    post:
      operationId: PlatformHealth_GetSourceTier
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetSourceTierResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetSourceTierRequest'
      tags:
        - PlatformHealth
  /web_crawler.v1.PlatformHealth/ListSourceTiersForTierID:
    post:
      operationId: PlatformHealth_ListSourceTiersForTierID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSourceTiersForTierIDResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSourceTiersForTierIDRequest'
      tags:
        - PlatformHealth
  /web_crawler.v1.PlatformHealth/UpdateSourceTier:
    post:
      operationId: PlatformHealth_UpdateSourceTier
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateSourceTierRequest'
      tags:
        - PlatformHealth
  /web_crawler.v1.RescrapeService/GetListingScrapingStatus:
    post:
      summary: Get the details of the latest record of a source being re-scraped.
      operationId: RescrapeService_GetListingScrapingStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetListingScrapingStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetListingScrapingStatusRequest'
      tags:
        - RescrapeService
  /web_crawler.v1.RescrapeService/RescrapeAllReviews:
    post:
      operationId: RescrapeService_RescrapeAllReviews
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RescrapeAllReviewsRequest'
      tags:
        - RescrapeService
  /web_crawler.v1.RescrapeService/ScrapeListings:
    post:
      summary: Scrape all listings for a particular source, optionally on a per-partner basis.
      operationId: RescrapeService_ScrapeListings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ScrapeListingsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ScrapeListingsRequest'
      tags:
        - RescrapeService
  /web_crawler.v1.ScraperService/Create:
    post:
      operationId: ScraperService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateScraperRequest'
      tags:
        - ScraperService
  /web_crawler.v1.ScraperService/Delete:
    post:
      operationId: ScraperService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteScraperRequest'
      tags:
        - ScraperService
  /web_crawler.v1.ScraperService/List:
    post:
      operationId: ScraperService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListScraperResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListScraperRequest'
      tags:
        - ScraperService
  /web_crawler.v1.ScraperService/ListProxyAddresses:
    post:
      summary: |-
        ListProxyAddresses returns the proxy addresses for the different proxy groups
        This allows Web-Crawler to be the source of truth for the proxy addresses
        If other services need to use the proxy addresses, they can call this endpoint to get the latest proxy addresses
      operationId: ScraperService_ListProxyAddresses
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListProxyAddressesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties: {}
      tags:
        - ScraperService
  /web_crawler.v1.ScraperService/TestScraper:
    post:
      operationId: ScraperService_TestScraper
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TestScraperResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1TestScraperRequest'
      tags:
        - ScraperService
  /web_crawler.v1.ScraperService/Update:
    post:
      operationId: ScraperService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1UpdateScraperRequest'
      tags:
        - ScraperService
  /web_crawler.v1.SearchService/SearchAPISource:
    post:
      operationId: SearchService_SearchAPISource
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SearchAPISourceRequest'
      tags:
        - SearchService
definitions:
  ChildRuleIndexToTake:
    type: string
    enum:
      - CHILD_RULE_INDEX_TO_TAKE_TAKE_ALL
      - CHILD_RULE_INDEX_TO_TAKE_TAKE_INDEX
    default: CHILD_RULE_INDEX_TO_TAKE_TAKE_ALL
    title: Whether we want to use the json array index or take all values within a JSON array
  GetMultiKeyMetricsListResponseSourceAndEvents:
    type: object
    properties:
      sourceId:
        type: string
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Event'
  GetMultiMostRecentLockdownRequestGetMultiMostRecentLockdownFilters:
    type: object
    properties:
      scraperType:
        type: array
        items:
          $ref: '#/definitions/web_crawlerv1Type'
  ListCollectorRequestListCollectorFilters:
    type: object
    properties:
      sourceId:
        type: string
  ListIncidentRequestListIncidentFilters:
    type: object
    properties:
      sourceId:
        type: string
      scraperType:
        $ref: '#/definitions/web_crawlerv1Type'
  ListLockdownRequestListLockdownFilters:
    type: object
    properties:
      sourceId:
        type: string
      scraperType:
        $ref: '#/definitions/web_crawlerv1Type'
  ListProxyAddressesResponseProxyGroup:
    type: object
    properties:
      groupName:
        type: string
      proxyAddresses:
        type: array
        items:
          type: string
  ListScraperRequestListScraperFilters:
    type: object
    properties:
      sourceId:
        type: string
  ListingGeo:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
  LockdownLevel:
    type: string
    enum:
      - LOCKDOWN_LEVEL_ERROR
      - LOCKDOWN_LEVEL_WARNING
    default: LOCKDOWN_LEVEL_ERROR
  LockdownState:
    type: string
    enum:
      - STATE_UNSET
      - STATE_AUTO
      - STATE_MANUAL
    default: STATE_UNSET
  OptionsTransportWaitUntil:
    type: string
    enum:
      - OPTIONS_TRANSPORT_WAIT_UNTIL_NETWORK_IDLE_0
      - OPTIONS_TRANSPORT_WAIT_UNTIL_NETWORK_IDLE_2
      - OPTIONS_TRANSPORT_WAIT_UNTIL_DOM_CONTENT_LOADED
      - OPTIONS_TRANSPORT_WAIT_UNTIL_LOAD
    default: OPTIONS_TRANSPORT_WAIT_UNTIL_NETWORK_IDLE_0
  RegexPatternMatchType:
    type: string
    enum:
      - REGEX_PATTERN_MATCH_TYPE_NOT_SPECIFIED
      - REGEX_PATTERN_MATCH_TYPE_MATCH
      - REGEX_PATTERN_MATCH_TYPE_GROUP
    default: REGEX_PATTERN_MATCH_TYPE_NOT_SPECIFIED
  ScrapeListingsRequestTimeFrame:
    type: object
    properties:
      startDate:
        type: string
        description: Date in the format YYYY-MM-DD, eg. 2020-01-25. Must be before end_date.
      endDate:
        type: string
        description: Date in the format YYYY-MM-DD, eg. 2020-01-25. Must be after start_date.
  ScrapingStatusIsScraping:
    type: string
    enum:
      - SCRAPING_STATUS_IS_SCRAPING_UNSPECIFIED
      - SCRAPING_STATUS_IS_SCRAPING_NOT_SCRAPING
      - SCRAPING_STATUS_IS_SCRAPING_SCRAPING
    default: SCRAPING_STATUS_IS_SCRAPING_UNSPECIFIED
  SubmitListingURLRequestPriority:
    type: string
    enum:
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_UNSPECIFIED
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_LOW
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_HIGH
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_REFRESH
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_USER_SUBMIT
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_LISTING_SYNC_PRO
      - SUBMIT_LISTING_URL_REQUEST_PRIORITY_BING_SEARCH
    default: SUBMIT_LISTING_URL_REQUEST_PRIORITY_UNSPECIFIED
  ToTakeNodePosition:
    type: string
    enum:
      - TO_TAKE_NODE_POSITION_NOT_SPECIFIED
      - TO_TAKE_NODE_POSITION_PARENT
      - TO_TAKE_NODE_POSITION_PARENT_PREVIOUS
      - TO_TAKE_NODE_POSITION_PARENT_NEXT
    default: TO_TAKE_NODE_POSITION_NOT_SPECIFIED
    title: What nodes to select relative to the identified one
  ToTakeTake:
    type: string
    enum:
      - TO_TAKE_TAKE_FIRST
      - TO_TAKE_TAKE_ALL
      - TO_TAKE_TAKE_PREVIOUS
      - TO_TAKE_TAKE_NEXT
      - TO_TAKE_TAKE_LAST
      - TO_TAKE_TAKE_FIRST_CHILD
      - TO_TAKE_TAKE_LAST_CHILD
    default: TO_TAKE_TAKE_FIRST
    title: What nodes we want to take
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1Action:
    type: string
    enum:
      - ACTION_COLLECT
      - ACTION_DOWNLOAD
    default: ACTION_COLLECT
    title: A collector can be run with multiple intents specified by the action
  v1Callback:
    type: string
    enum:
      - CALLBACK_NOT_SPECIFIED
      - CALLBACK_PARSE_ADDRESS
      - CALLBACK_PARSE_JSON
      - CALLBACK_REGEX_MATCH
      - CALLBACK_PARSE_MULTI_TELEPHONE_NUMBERS
      - CALLBACK_REGION_SHORTENER
      - CALLBACK_PARSE_URL
      - CALLBACK_OUTER_HTML_REGEX
      - CALLBACK_COUNT_STARS
      - CALLBACK_FOLLOW_URL
      - CALLBACK_WORD_TO_NUMBER
      - CALLBACK_PARSE_ADDRESS_OPENAI
      - CALLBACK_PARSE_ADDRESS_SUB_PREMISE
    default: CALLBACK_NOT_SPECIFIED
  v1Callbacks:
    type: object
    properties:
      onXml:
        $ref: '#/definitions/v1OnXML'
      onScraped:
        $ref: '#/definitions/v1OnScraped'
      onResponse:
        $ref: '#/definitions/v1OnResponse'
      onHtml:
        $ref: '#/definitions/v1OnHTML'
    title: |-
      Callbacks that will be fired on the collector
      The available callbacks that can be registered on a collector: http://go-colly.org/docs/introduction/start/
  v1ChildRule:
    type: object
    properties:
      name:
        type: string
      selector:
        type: string
      attribute:
        type: string
      jsonSchema:
        type: string
      callback:
        $ref: '#/definitions/v1Callback'
      regexp:
        $ref: '#/definitions/v1Regex'
        title: Pass regex selector
      selectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Selector'
      jsonArrayIndex:
        type: string
        format: int64
        title: The element number within a json list that you want to scrape when running the PARSE_JSON callback
      indexToTake:
        $ref: '#/definitions/ChildRuleIndexToTake'
      countStarsConfig:
        $ref: '#/definitions/v1CountStarsConfig'
        description: Config for counting stars that appear as individual elements on the page, rather than having a number.
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ChildRule'
        title: A child rule can also have its own rules where again we are scraping nested content
    title: Used to parse nested content from an html fragment
  v1Collector:
    type: object
    properties:
      id:
        type: string
        title: the id of a collector
      name:
        type: string
        title: name of the collector
      options:
        $ref: '#/definitions/v1Options'
        title: gocolly collector options
      callbacks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Callbacks'
        title: the callbacks that will be applied to the collector when running
      startUrl:
        type: array
        items:
          type: string
        title: optional start url for the collector to start with
      sourceId:
        type: string
        format: int64
        title: the source id the collector is for
      urlValidationRegex:
        type: array
        items:
          type: string
        title: regex that validates this is a valid listing url
      headers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Header'
        title: Headers to use to fetch the sitemaps
      disallowedUrlFilters:
        type: array
        items:
          type: string
        title: regex restricts visiting urls that matches it (opposite behavior of url_validation_regex)
      collectorType:
        $ref: '#/definitions/v1CollectorType'
        title: collector_type is the type of collector this is
      status:
        $ref: '#/definitions/v1CollectorStatus'
        title: status is the current run status of the collector
    title: Collector is the representation of a gocolly collector
  v1CollectorStatus:
    type: string
    enum:
      - COLLECTOR_STATUS_NOT_SPECIFIED
      - COLLECTOR_STATUS_ABORT
      - COLLECTOR_STATUS_ABLE_TO_RUN
    default: COLLECTOR_STATUS_NOT_SPECIFIED
  v1CollectorType:
    type: string
    enum:
      - COLLECTOR_TYPE_NOT_SPECIFIED
      - COLLECTOR_TYPE_HTML
      - COLLECTOR_TYPE_SITEMAP
    default: COLLECTOR_TYPE_NOT_SPECIFIED
  v1CountStarsConfig:
    type: object
    properties:
      itemToCount:
        $ref: '#/definitions/v1Selector'
        description: item_to_count is a selector to identify the repeated thing that needs to be counted.
      maximumExpectedItems:
        type: string
        format: int64
        description: maximum_expected_items is the largest possible umber of things, eg 5/5 stars could have 5 star images to count.
      maximumStarValue:
        type: string
        format: int64
        description: |-
          maximum_star_value is used to normalize the number of counted things down to a star value.
          eg. there are a max of 10 images, each of 1/2 stars, with a maximum star value of 5, it will normalise 7/10 to 3.5/5.
    description: |-
      CountStarsConfig contains configuration necessary to run the CALLBACK_COUNT_STARS callback.
      The selector on the rule should select the element that contains the elements that need to be counted.
  v1CreateCollectorRequest:
    type: object
    properties:
      collector:
        $ref: '#/definitions/v1Collector'
    title: CollectorService Request/Response messages
  v1CreateCollectorResponse:
    type: object
    properties:
      id:
        type: string
        title: the id of the newly created collector
  v1CreateLockdownRequest:
    type: object
    properties:
      lockdown:
        $ref: '#/definitions/v1Lockdown'
  v1CreateScraperRequest:
    type: object
    properties:
      scraper:
        $ref: '#/definitions/v1Scraper'
    title: ScraperService Request/Response messages
  v1DeleteCollectorRequest:
    type: object
    properties:
      collectorId:
        type: string
  v1DeleteLockdownRequest:
    type: object
    properties:
      sourceId:
        type: string
        title: source_id of the listing/review source
      scraperType:
        $ref: '#/definitions/web_crawlerv1Type'
        title: type of scraper that caused the incident
      id:
        type: string
        title: the id of the lockdown to delete
  v1DeleteScraperRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      type:
        $ref: '#/definitions/v1DeleteScraperRequestType'
  v1DeleteScraperRequestType:
    type: string
    enum:
      - DELETE_SCRAPER_REQUEST_TYPE_UNSPECIFIED
      - DELETE_SCRAPER_REQUEST_TYPE_LISTING
      - DELETE_SCRAPER_REQUEST_TYPE_REVIEW
      - DELETE_SCRAPER_REQUEST_TYPE_LISTING_JSON
      - DELETE_SCRAPER_REQUEST_TYPE_REVIEW_COMMENTS
      - DELETE_SCRAPER_REQUEST_TYPE_REVIEW_JSON
      - DELETE_SCRAPER_REQUEST_TYPE_REVIEW_RAW
    default: DELETE_SCRAPER_REQUEST_TYPE_UNSPECIFIED
  v1Event:
    type: object
    properties:
      eventId:
        type: string
      sourceId:
        type: string
      eventType:
        type: string
      value:
        type: number
        format: double
      metadata:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
  v1GetListingScrapingStatusRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
        description: The source for which you want to know the scraping status.
  v1GetListingScrapingStatusResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1ScrapingStatus'
  v1GetMultiKeyMetricsListRequest:
    type: object
    properties:
      sourceIds:
        type: array
        items:
          type: string
  v1GetMultiKeyMetricsListResponse:
    type: object
    properties:
      sourceAndEvents:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetMultiKeyMetricsListResponseSourceAndEvents'
  v1GetMultiMostRecentLockdownRequest:
    type: object
    properties:
      sourceIds:
        type: array
        items:
          type: string
      filters:
        $ref: '#/definitions/GetMultiMostRecentLockdownRequestGetMultiMostRecentLockdownFilters'
    title: |-
      GetMultiMostRecentLockdownRequest returns the most recent
      (not deleted) lockdown for each of the provided sources
  v1GetMultiMostRecentLockdownResponse:
    type: object
    properties:
      lockdowns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Lockdown'
  v1GetMultiSourceTierRequest:
    type: object
    properties:
      sourceIds:
        type: array
        items:
          type: string
  v1GetMultiSourceTierResponse:
    type: object
    properties:
      tiers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SourceTier'
  v1GetSourceTierRequest:
    type: object
    properties:
      sourceId:
        type: string
  v1GetSourceTierResponse:
    type: object
    properties:
      tier:
        $ref: '#/definitions/v1SourceTier'
  v1Header:
    type: object
    properties:
      key:
        type: string
        title: Key is the header key
      value:
        type: string
        title: Value is the header value
  v1Incident:
    type: object
    properties:
      id:
        type: string
        title: the id of an incident
      scraperType:
        $ref: '#/definitions/web_crawlerv1Type'
        title: type of scraper that caused the incident
      sourceId:
        type: string
        title: source_id of the listing/review source
      listingUrl:
        type: string
        title: URL of webpage being scraped
      error:
        type: string
        title: Error message
      created:
        type: string
        format: date-time
        title: Timestamp when the incident was created
      workflowId:
        type: string
        title: ID of Temporal Workflow during which the incident was created
      content:
        type: string
        title: Content scraped when the incident was created
    title: Incident is the representation of an error that occurred while scraping a webpage
  v1ListCollectorRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListCollectorRequestListCollectorFilters'
        title: Filters to apply when listing collectors
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
  v1ListCollectorResponse:
    type: object
    properties:
      collector:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Collector'
        title: The collectors matching the request
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1ListIncidentRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListIncidentRequestListIncidentFilters'
        title: Filters to apply when listing incidents
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
    title: IncidentService Request/Response messages
  v1ListIncidentResponse:
    type: object
    properties:
      incidents:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Incident'
        title: The incidents matching the request
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1ListLockdownRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListLockdownRequestListLockdownFilters'
        title: Filters to apply when listing lockdowns
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
  v1ListLockdownResponse:
    type: object
    properties:
      lockdowns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Lockdown'
        title: The lockdowns matching the request
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1ListProxyAddressesResponse:
    type: object
    properties:
      proxyGroups:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListProxyAddressesResponseProxyGroup'
  v1ListScraperRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/ListScraperRequestListScraperFilters'
        title: Filters to apply when listing scrapers
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
        title: Options for how to page the response for this request
  v1ListScraperResponse:
    type: object
    properties:
      scraper:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Scraper'
        title: The scrapers matching the request
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
        title: Metadata about the paging
  v1ListSourceTiersForTierIDRequest:
    type: object
    properties:
      tierId:
        type: string
      pagingOptions:
        $ref: '#/definitions/v1PagedRequestOptions'
  v1ListSourceTiersForTierIDResponse:
    type: object
    properties:
      sourceTiers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SourceTier'
      pagingMetadata:
        $ref: '#/definitions/v1PagedResponseMetadata'
  v1Listing:
    type: object
    properties:
      currenciesAccepted:
        type: string
      openingHours:
        type: string
      paymentAccepted:
        type: string
      priceRange:
        type: string
      country:
        type: string
      locality:
        type: string
      region:
        type: string
      postOfficeBoxNumber:
        type: string
      postalCode:
        type: string
      streetAddress:
        type: string
      ratingCount:
        type: string
        format: int64
      reviewCount:
        type: string
        format: int64
      ratingValue:
        type: number
        format: double
      description:
        type: string
      geoLocation:
        $ref: '#/definitions/ListingGeo'
      name:
        type: string
      phone:
        type: string
      website:
        type: string
      additionalPhoneNumbers:
        type: array
        items:
          type: string
      clickTrackUrl:
        type: string
      identifier:
        type: string
      potentialRemovalIndicator:
        type: string
        description: potential_removal_indicator is a string that can be used to determine if a listing has been removed from the source website.
    title: Listing represents a unique scraped listing in Web Crawler
  v1Lockdown:
    type: object
    properties:
      id:
        type: string
        title: the id of the lockdown
      scraperType:
        $ref: '#/definitions/web_crawlerv1Type'
        title: type of scraper that caused the incident
      sourceId:
        type: string
        title: source_id of the listing/review source
      level:
        $ref: '#/definitions/LockdownLevel'
        title: the lockdown level
      userId:
        type: string
        title: the user that created the lockdown
      message:
        type: string
        title: the error message or reason that resulted in the lockdown
      created:
        type: string
        format: date-time
        title: Timestamp when the lockdown was created
      updated:
        type: string
        format: date-time
        title: Timestamp when the lockdown was updated
      deleted:
        type: string
        format: date-time
        title: Timestamp when the lockdown was deleted
      state:
        $ref: '#/definitions/LockdownState'
        title: state of a lockdown creation
  v1OnHTML:
    type: object
    properties:
      selector:
        type: string
      value:
        type: string
      handler:
        $ref: '#/definitions/v1OnHTMLHandler'
      action:
        $ref: '#/definitions/v1Action'
      attribute:
        type: string
    description: OnHTML callback is handled just after onResponse. Used for custom handling of html selectors.
  v1OnHTMLHandler:
    type: string
    enum:
      - ON_HTML_HANDLER_NOT_SPECIFIED
      - ON_HTML_HANDLER_IS_VALID_LISTING
      - ON_HTML_HANDLER_FOLLOW_URL
      - ON_HTML_HANDLER_URL
      - ON_HTML_HANDLER_CRAWL_FOLLOW
    default: ON_HTML_HANDLER_NOT_SPECIFIED
  v1OnResponse:
    type: object
    properties:
      contentType:
        type: string
      handler:
        $ref: '#/definitions/v1OnResponseHandler'
      action:
        $ref: '#/definitions/v1Action'
    title: OnResponse callback is the first callback to fire. Used for custom handling of scrape events
  v1OnResponseHandler:
    type: string
    enum:
      - ON_RESPONSE_HANDLER_NOT_SPECIFIED
      - ON_RESPONSE_HANDLER_URL
    default: ON_RESPONSE_HANDLER_NOT_SPECIFIED
  v1OnScraped:
    type: object
    properties:
      handler:
        $ref: '#/definitions/v1OnScrapedHandler'
      action:
        $ref: '#/definitions/v1Action'
    title: |-
      OnScraped callback is the last callback to fire. The Storage handler allows the raw response to be uploaded to
      a cloud storage bucket
  v1OnScrapedHandler:
    type: string
    enum:
      - ON_SCRAPED_HANDLER_NOT_SPECIFIED
      - ON_SCRAPED_HANDLER_STORAGE
    default: ON_SCRAPED_HANDLER_NOT_SPECIFIED
  v1OnXML:
    type: object
    properties:
      xpathQuery:
        type: string
      regexpMatch:
        type: string
      handler:
        $ref: '#/definitions/v1OnXMLHandler'
      action:
        $ref: '#/definitions/v1Action'
    title: OnXMl callback would typically be used for handling a sitemap
  v1OnXMLHandler:
    type: string
    enum:
      - ON_XML_HANDLER_NOT_SPECIFIED
      - ON_XML_HANDLER_SITEMAP
      - ON_XML_HANDLER_URL
    default: ON_XML_HANDLER_NOT_SPECIFIED
  v1Options:
    type: object
    properties:
      maxDepth:
        type: string
        format: int64
      allowedDomains:
        type: array
        items:
          type: string
      parseHttpErrorResponse:
        type: boolean
      disallowedDomains:
        type: array
        items:
          type: string
      urlFilters:
        type: array
        items:
          type: string
      allowUrlRevisit:
        type: boolean
      maxBodySize:
        type: string
        format: int64
      cacheDir:
        type: string
      ignoreRobotsTxt:
        type: boolean
      async:
        type: boolean
      detectCharset:
        type: boolean
      disableCompression:
        type: boolean
        description: disable_compression is used to set the DisableCompression on the http.Transport object for when a collector makes requests to get site maps.
      concurrentRequestLimit:
        type: number
        format: double
        title: ConcurrentRequestLimit limits the requests per second that can be made to a source
      waitUntil:
        $ref: '#/definitions/OptionsTransportWaitUntil'
      disableImages:
        type: boolean
        title: When true the chrome proxy will skip image resources
      allowCors:
        type: boolean
        title: When true proxy will allow CORS requests
      windowDataSelector:
        type: string
        title: window_data_selector lets us grab data (usually JSON) from the window object instead of return HTML this will return the data you select
      sitemapUsePuppeteer:
        type: boolean
        title: sitemap_use_puppeteer tells the colly collector to use a puppeteer transport when we are running with a COLLECT action
      disableAdblock:
        type: boolean
        title: Disable Adblock when creating puppeteer browser
      waitForSelector:
        type: string
        title: Wait for a selector to render before downloading a webpage
      waitSecondsAfterLoad:
        type: string
        format: int64
        title: The number of seconds to wait after the webpage is loaded so that more information could be loaded and saved
      selectorToClick:
        type: string
        title: The selector of button or field that will be clicked on the webpage to load more information
      hasRedirection:
        type: boolean
        title: Indicates the webpage will redirect
      navigationTimeout:
        type: string
        format: int64
        title: The number of seconds to wait for the webpage to timeout
      openShadowDom:
        type: boolean
        title: Allows scraping from closed shadow DOM
      waitSecondsAfterClick:
        type: string
        format: int64
        title: The number of seconds to wait after clicking selector
      waitSecondsAfterBeingBlocked:
        type: string
        format: int64
        title: The number of seconds to wait after being blocked
    title: Options to be used when registering a new collector
  v1PagedRequestOptions:
    type: object
    properties:
      cursor:
        type: string
        title: cursor can be passed to retrieve the next page of results keyed by the cursor
      pageSize:
        type: string
        format: int64
        title: page_size specifies the number of items to return in the next page
  v1PagedResponseMetadata:
    type: object
    properties:
      nextCursor:
        type: string
        title: A cursor that can be provided to retrieve the next page of results
      hasMore:
        type: boolean
        title: Whether or not more results exist
  v1Regex:
    type: object
    properties:
      pattern:
        type: string
      type:
        $ref: '#/definitions/RegexPatternMatchType'
      groupIndex:
        type: string
        format: int64
        title: Only set group index when pattern match type is group
  v1RescrapeAllReviewsRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      url:
        type: string
  v1Review:
    type: object
    properties:
      reviewBody:
        type: string
      authorName:
        type: string
      headline:
        type: string
      description:
        type: string
      datePublished:
        type: string
        format: date-time
      ratingValue:
        type: number
        format: double
      reviewUrl:
        type: string
      identifier:
        type: string
      reviewComments:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReviewComment'
      extraInfo:
        type: string
      dateEdited:
        type: string
        format: date-time
      recommendation:
        type: string
    title: Review represents a unique scraped review in Web Crawler
  v1ReviewComment:
    type: object
    properties:
      reviewCommentBody:
        type: string
      authorName:
        type: string
      datePublished:
        type: string
        format: date-time
    title: ReviewComment represents a unique scraped review comment in Web Crawler
  v1Rule:
    type: object
    properties:
      name:
        type: string
      jsonSchema:
        type: string
      callback:
        $ref: '#/definitions/v1Callback'
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ChildRule'
      regexp:
        $ref: '#/definitions/v1Regex'
        title: Pass regex selector
      jsonSelectors:
        type: array
        items:
          type: string
        title: Used to parse json responses
      selectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Selector'
      jsonArrayIndex:
        type: string
        format: int64
        title: The element number within a json list that you want to scrape when running the PARSE_JSON callback
      schemaSelector:
        $ref: '#/definitions/v1SchemaSelector'
        title: The element key and value within a json listing that you want to scrape when running the PARSE_JSON callback
      countStarsConfig:
        $ref: '#/definitions/v1CountStarsConfig'
        description: Config for counting stars that appear as individual elements on the page, rather than having a number.
    title: Rule used to parse content from a document fragment
  v1SchemaSelector:
    type: object
    properties:
      key:
        type: string
        title: Essentially the "key" of a json document. For structured data this typically corresponds with @type
      value:
        type: string
        title: 'The string value of the key field that we are looking for, eg. @type: "Hotel"'
    title: SchemaSelector is used to select data from a JSON document
  v1ScrapeListingRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      url:
        type: string
      profileKey:
        type: string
      listingKey:
        type: string
      force:
        type: boolean
        title: |-
          Ignore idempotency key to rescrape listing immediately.
          This is only intended for use during debugging by developers or one-time operations via superadmin.
          It should not be used by other services as it is an expensive operation
  v1ScrapeListingResponse:
    type: object
    properties:
      workflowId:
        type: string
  v1ScrapeListingsRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
        description: The source for which we want to re-scrape all listings.
      partnerId:
        type: string
        description: Deprecated. Use partner_ids instead.
      timeFrame:
        $ref: '#/definitions/ScrapeListingsRequestTimeFrame'
        title: A time frame that indicates that we want to scrape listings that were last scraped after start_time and before end_time
      partnerIds:
        type: array
        items:
          type: string
        description: The list of partner ids whose accounts we want to scrape listings for the source.
      accountGroupIds:
        type: array
        items:
          type: string
        description: A list of account groups to re-scrape listings for. If account_group_ids is specified, partner_ids is ignored.
      forceRefetch:
        type: boolean
        description: Specifying force re-fetch will make all scraped listings fetch from the site, rather than scraping the html we have saved.
      rescrapeReviews:
        type: boolean
  v1ScrapeListingsResponse:
    type: object
    properties:
      workflowId:
        type: string
        description: The ID of the cadence workflow that was started.
  v1ScrapeReviewsRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      listingKey:
        type: string
      startingPage:
        type: string
        format: int64
      rescrape:
        type: boolean
        title: optional param that when true all reviews found (determined by the starting page) will be rescraped
      updateReviews:
        type: boolean
        title: optional param that when true the workflow will update duplicate reviews with scraped content
      updateFields:
        type: array
        items:
          type: string
        title: optional param that specify which fields could be updated when update_reviews is true
      force:
        type: boolean
        title: |-
          optional param that when true the review scraping will be started no matter if review scraping has been done recently
          This is only intended for use during debugging by developers or one-time operations via superadmin.
          It should not be used by other services as it is an expensive operation
      continueForExpiredAccount:
        type: boolean
        title: optional param that when true will cause a re-scrape even when RM has expired
    title: ScrapeReviews Request/Response messages
  v1ScrapeReviewsResponse:
    type: object
    properties:
      workflowId:
        type: string
  v1Scraper:
    type: object
    properties:
      name:
        type: string
      url:
        type: string
      sourceId:
        type: string
        format: int64
      type:
        $ref: '#/definitions/web_crawlerv1Type'
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Rule'
      status:
        $ref: '#/definitions/v1ScraperStatus'
        description: The current status of the scraper.
      reviewResetTime:
        type: string
        format: date-time
        description: When specified, all reviews for listings last scraped before this date will be deleted and re-scraped from scratch.
    title: Scraper contains the rules to apply to an html fragment to extract information
  v1ScraperStatus:
    type: string
    enum:
      - SCRAPER_STATUS_ACTIVE
      - SCRAPER_STATUS_MANUALLY_STOPPED
    default: SCRAPER_STATUS_ACTIVE
    title: |-
      - SCRAPER_STATUS_ACTIVE: Status when a scraper is ready to scrape things
       - SCRAPER_STATUS_MANUALLY_STOPPED: Status when a scraper has been deliberately stopped by a person
  v1ScrapingStatus:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
        description: The source that this status is for.
      isScraping:
        $ref: '#/definitions/ScrapingStatusIsScraping'
        title: Is the source currently being re-scraped?
      started:
        type: string
        format: date-time
        title: When did this action start?
      finished:
        type: string
        format: date-time
        title: When did this action finish?
      startedBy:
        type: string
        title: Who started the re-scrape of all the listings?
  v1SearchAPISourceRequest:
    type: object
    properties:
      sourceId:
        type: string
      searchTerms:
        type: object
        additionalProperties:
          type: string
    title: SearchService Request/Response messages
  v1SearchForListingRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      profileKey:
        type: string
      force:
        type: boolean
        title: |-
          Ignore idempotency key to perform a search for listings immediately.
          This is only intended for use during debugging by developers or one-time operations via superadmin.
          It should not be used by other services as it is an expensive operation
      continueForExpiredAccount:
        type: boolean
        title: optional param that when true, the listing search workflow will be running for expired account
    title: SearchForListing Request/Response messages
  v1SearchForListingResponse:
    type: object
    properties:
      workflowId:
        type: string
  v1Selector:
    type: object
    properties:
      selector:
        type: string
        title: The path to the piece of data you want to get from the page, eg. "div[class=\"bold\"]"
      attribute:
        type: string
        description: |-
          The name of the attribute on the selector you want to get data out of.
          Example:
          <div class="bold" data="Interesting stuff to scrape">Other stuff</div>
          Passing in an attribute of "data" would get "Interesting stuff to scrape" out of the page.
      toTake:
        $ref: '#/definitions/v1ToTake'
        title: what nodes we want to take
    title: Selector is used to select data from an html fragment
  v1SourceTier:
    type: object
    properties:
      sourceId:
        type: string
      tierId:
        type: string
      override:
        type: boolean
  v1StartCollectorRequest:
    type: object
    properties:
      collectorId:
        type: string
      queueId:
        type: string
        description: queue id is no longer used since the switch to backing collections with Cadence.
  v1StartCollectorResponse:
    type: object
    properties:
      workflowId:
        type: string
  v1SubmitListingURLRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      url:
        type: string
      priority:
        $ref: '#/definitions/SubmitListingURLRequestPriority'
      searchAllReviews:
        type: boolean
      searchForReviews:
        type: boolean
    title: ListingService Request/Response messages
  v1SubmitPotentialListingRequest:
    type: object
    properties:
      sourceId:
        type: string
        format: int64
      url:
        type: string
      profileKey:
        type: string
      potentialListingKey:
        type: string
  v1SubmitPotentialListingResponse:
    type: object
    properties:
      workflowId:
        type: string
  v1TestScraperRequest:
    type: object
    properties:
      scraper:
        $ref: '#/definitions/v1Scraper'
      url:
        type: string
      ignoreCache:
        type: boolean
        title: Ignore cached fragments and re-fetch the fragments from source sites
      listingId:
        type: string
  v1TestScraperResponse:
    type: object
    properties:
      review:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Review'
      listing:
        $ref: '#/definitions/v1Listing'
      responseMessage:
        type: string
        title: TestScraper message
  v1ToTake:
    type: object
    properties:
      take:
        $ref: '#/definitions/ToTakeTake'
        title: What node we want to take
      seperator:
        type: string
        title: If we are taking all how we want to separate them
      node:
        $ref: '#/definitions/ToTakeNodePosition'
        title: Node to select
    title: ToTake is what node returned from the selector we want to take
  v1UpdateCollectorRequest:
    type: object
    properties:
      collector:
        $ref: '#/definitions/v1Collector'
  v1UpdateScraperRequest:
    type: object
    properties:
      scraper:
        $ref: '#/definitions/v1Scraper'
  v1UpdateSourceTierRequest:
    type: object
    properties:
      sourceId:
        type: string
      tierId:
        type: string
      override:
        type: boolean
  web_crawlerv1Type:
    type: string
    enum:
      - TYPE_NOT_SPECIFIED
      - TYPE_LISTING
      - TYPE_REVIEW
      - TYPE_LISTING_JSON
      - TYPE_REVIEW_COMMENTS
      - TYPE_REVIEW_JSON
      - TYPE_REVIEW_RAW
    default: TYPE_NOT_SPECIFIED
    title: Type for differentiation between review and listing scrapers
