openapi: 3.0.0
info:
  title: Business REST APIs
  version: '1.0'
  description: APIs for managing data for a single business location.
servers:
  - url: 'https://prod.apigateway.co/business'
    description: Production
  - url: 'https://demo.apigateway.co/business'
    description: Demo
  - url: '{local}/business'
    description: Local
  - url: 'http://localhost:11001/business'
    description: Localhost
paths:
  /customers:
    post:
      summary: Create Customer
      operationId: post-customers
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/customers'
        '409':
          description: Conflict
          content:
            application/vnd.api+json:
              schema:
                type: object
                description: ''
                x-examples:
                  example-1:
                    errors:
                      - code: ResourceAlreadyExists
                        title: Already exists
                        detail: A customers already exists with matching values
                        status: '409'
                        meta:
                          conflictingCustomerID: CUSTOMER-7e5cda73-1d01-42ee-a44a-622b8c3c7c04
                          field: emailAddresses
                          fieldValue: tdewald+test@vendasta.com
                          resourceType: customers
                    meta:
                      requestId: pLSjFbcXoEFfRsWx
                    links:
                      self:
                        href: /business/customers
                additionalProperties: false
                properties:
                  errors:
                    type: array
                    uniqueItems: false
                    minItems: 1
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        code:
                          type: string
                          default: ResourceAlreadyExists
                          example: ResourceAlreadyExists
                          readOnly: true
                        title:
                          type: string
                          default: Already exists
                          example: Already exists
                          readOnly: true
                        detail:
                          type: string
                          default: A customers already exists with matching values
                          example: A customers already exists with matching values
                          readOnly: true
                        status:
                          type: string
                          default: '409'
                          example: '409'
                          readOnly: true
                        meta:
                          type: object
                          additionalProperties: false
                          properties:
                            conflictingCustomerID:
                              type: string
                              example: CUSTOMER-123
                              description: The ID of the customer record with a matching email or phone number
                              readOnly: true
                            field:
                              type: string
                              enum:
                                - phoneNumbers
                                - emailAddresses
                              example: emailAddresses
                              description: The field that contains the matching value
                              readOnly: true
                            fieldValue:
                              type: string
                              example: example@email.com
                              description: The email or phone number value that matches an existing customer
                              readOnly: true
                            resourceType:
                              type: string
                              default: customers
                              example: customers
                              readOnly: true
                          readOnly: true
                      readOnly: true
                    readOnly: true
                  meta:
                    type: object
                    additionalProperties: false
                    properties:
                      requestId:
                        type: string
                        readOnly: true
                    readOnly: true
                  links:
                    type: object
                    additionalProperties: false
                    properties:
                      self:
                        type: object
                        additionalProperties: false
                        properties:
                          href:
                            type: string
                            readOnly: true
                        readOnly: true
                    readOnly: true
                readOnly: true
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`
        
        Used to create a new customer record within Business App.

        The following members must be populated during creation:
        - `relationships.businessLocation.data.id`
        - `attributes.emailAddresses` or `attributes.phoneNumbers`
      x-lifecycle:
        status: trustedTester
      security:
        - OAuth2:
            - customers
      parameters:
        - schema:
            type: string
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            example: application/vnd.api+json
          in: header
          name: Content-Type
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
          required: true
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/customers'
            examples:
              Example Request:
                value:
                  data:
                    type: customers
                    attributes:
                      givenName: William
                      familyName: Smith
                      address:
                        streetAddress: 123 Fake St.
                        city: Kalamazoo
                        regionCode: US-MI
                        countryCode: US
                      phoneNumbers:
                        - '+13065551234'
                      emailAddresses:
                        - example@email.com
                      tags:
                        - 2021 Christmas Campaign
                      permissionToContact: true
                      createdAt: '2019-08-24T14:15:22Z'
                      updatedAt: '2019-08-24T14:15:22Z'
                    relationships:
                      businessLocation:
                        data:
                          id: AG-123
      tags:
        - Customers
    options:
      summary: ''
      operationId: options-customers
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Customers
        - Options
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          scopes:
            customers: Allows read-write access to customer details
  schemas:
    customers:
      title: Customers
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`
        
        A customer is a person a business location has had a prior business relationship with and permission to contact.
        
        Customer records are displayed within Business App. If you are looking for contacts within Sales and Success Center, see Sales Contact.
      type: object
      x-examples:
        Example Customer:
          type: customers
          id: 'AG-123:CUSTOMER-123'
          attributes:
            givenName: William
            familyName: Smith
            address:
              streetAddress: 109 8th Street E.
              city: Saskatoon
              regionCode: CA-SK
              countryCode: CA
            phoneNumbers:
              - '+13065551234'
            emailAddresses:
              - bill@example.com
            tags:
              - 2021 Christmas Campaign
            permissionToContact: true
            createdAt: '2019-08-24T14:15:22Z'
            updatedAt: '2019-08-24T14:15:22Z'
          relationships:
            businessLocation:
              data:
                id: AG-123
      x-lifecycle:
        status: trustedTester
      x-tags:
        - Customers
      properties:
        type:
          type: string
          default: customers
          example: customers
          enum:
            - customers
          readOnly: true
        id:
          type: string
          minLength: 1
          example: 'AG-123:CUSTOMER-123'
          readOnly: true
        attributes:
          type: object
          properties:
            givenName:
              type: string
              description: 'Given name(s) or first name(s) of the customer. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
              example: William
              minLength: 1
            familyName:
              type: string
              minLength: 1
              description: 'Surname(s) or last name(s) of the customer. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
              example: Smith
            address:
              type: object
              properties:
                streetAddress:
                  type: string
                  minLength: 1
                  example: 123 Fake St.
                city:
                  type: string
                  minLength: 1
                  example: Kalamazoo
                  description: 'The city, town or locality component of an address.'
                regionCode:
                  type: string
                  minLength: 1
                  description: 'The code for the top level subdivision within the country (state/province) as defined by ISO 3166-2 format (CA-SK, US-FL, AG-08, AU-NSW)'
                  example: US-MI
                countryCode:
                  type: string
                  minLength: 2
                  description: 'The two letter country code defined by ISO 3166-1 (CA, US).'
                  example: US
                  maxLength: 2
            phoneNumbers:
              type: array
              description: A comma-separated list of phone numbers for a customer in E.164 format ex. +13065551234. At least one unique phone number or email is required.
              items:
                type: string
                example: '+13065551234'
            emailAddresses:
              type: array
              description: A list of email addresses for a customer. At least one unique phone number or email is required.
              items:
                type: string
                example: example@email.com
                format: email
            tags:
              type: array
              description: A list of business identifiers used to categorize customer resources.
              items:
                type: string
                example: 2021 Christmas Campaign
            permissionToContact:
              type: boolean
              default: false
              description: Whether the customer has given permission to be contacted for marketing purposes.
            createdAt:
              type: string
              format: date-time
              description: The time at which the customer was initially created in the platform.
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The time at which the customer was last updated.
              readOnly: true
        relationships:
          type: object
          properties:
            businessLocation:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      minLength: 1
                      description: The ID of the business location the customer belongs to.
                    type:
                      type: string
                      default: businessLocation
                      enum:
                        - businessLocation
                      readOnly: true
                  required:
                    - id
tags:
  - name: Options
  - name: Customers
