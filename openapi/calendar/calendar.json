{
  "swagger": "2.0",
  "x-stoplight": {
    "id": "v8llgafeahnth"
  },
  "host": "api.calendarhero.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "API Token (found at https://app.calendarhero.com/settings/user#API)"
    }
  },
  "info": {
    "title": "CalendarHero API",
    "version": "1.0",
    "contact": {
      "name": "CalendarHero",
      "email": "hello@calendarhero.com",
      "url": "https://faq.calendarhero.com"
    },
    "termsOfService": "https://calendarhero.com/terms-of-use"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/contact": {
      "get": {
        "summary": "searches for contacts that match search/filter criteria",
        "operationId": "getContact",
        "parameters": [
          {
            "type": "string",
            "description": "searches for contacts with a specific email (name@domain.com), domain (@domain.com) or name (first last)",
            "name": "search",
            "in": "query"
          },
          {
            "type": "string",
            "description": "searches for a specific set of contacts. can not be used with search",
            "enum": [
              "popular",
              "recent",
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h",
              "i",
              "j",
              "k",
              "l",
              "m",
              "n",
              "o",
              "p",
              "q",
              "r",
              "s",
              "t",
              "u",
              "v",
              "w",
              "x",
              "y",
              "z"
            ],
            "name": "filter",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "do not remove duplicate contacts",
            "enum": [
              "1",
              "0"
            ],
            "name": "all",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "include results for teams that match search parameter",
            "enum": [
              "1",
              "0"
            ],
            "name": "includeTeams",
            "in": "query",
            "required": false
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "contact"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "creates a new contact",
        "operationId": "postContact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model11"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "contact"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/meeting": {
      "get": {
        "summary": "return the user's meetings within a timeframe",
        "operationId": "getMeeting",
        "parameters": [
          {
            "type": "string",
            "description": "start date/time",
            "name": "start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "end date/time",
            "name": "end",
            "in": "query",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "meeting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/provider": {
      "get": {
        "operationId": "getProvider",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "calendar",
              "contacts",
              "messaging",
              "social",
              "email",
              "search",
              "files",
              "groups",
              "faq",
              "crm",
              "ticket",
              "rooms",
              "video",
              "ats",
              "payment"
            ],
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "org",
            "in": "query",
            "required": false
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "provider"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model2"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "searches all of the user's integrations for a query term",
        "operationId": "getSearch",
        "parameters": [
          {
            "type": "string",
            "description": "The requested timeframe's start date/time (YYYY-MM-DDTHH:mm:ssZ)",
            "name": "dateStart",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "The requested timeframe's ending date/time (YYYY-MM-DDTHH:mm:ssZ)",
            "name": "dateEnd",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "The query term to search for",
            "name": "query",
            "in": "query",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "search"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "returns the user object",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model3"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "updates the user's object",
        "operationId": "putUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model3"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/contact/count": {
      "get": {
        "summary": "returns the number of contacts",
        "operationId": "getContactCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "contact"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/contact/{id}": {
      "get": {
        "summary": "returns a contact",
        "operationId": "getContactId",
        "parameters": [
          {
            "type": "string",
            "description": "contact's ID",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "just return the contact's information stored in CalendarHero.  when false, contact insights will also be returned.",
            "name": "basic",
            "in": "query",
            "required": false
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "contact"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "updates a contact",
        "operationId": "putContactId",
        "parameters": [
          {
            "type": "string",
            "description": "The contact's ID as returned from GET /contact",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "id",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model4"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "contact"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "deletes a contact",
        "operationId": "deleteContactId",
        "parameters": [
          {
            "type": "string",
            "description": "contact's ID",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "contact"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/meeting/categories": {
      "get": {
        "summary": "retrieves the user's meeting categories' stats",
        "operationId": "getMeetingCategories",
        "parameters": [
          {
            "type": "string",
            "description": "YYYY-MM",
            "name": "month",
            "in": "query"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "meeting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/meeting/tasks": {
      "get": {
        "summary": "returns the user's requests/tasks",
        "operationId": "getMeetingTasks",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "active",
              "upcoming",
              "closed"
            ],
            "name": "state",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tally",
            "in": "query",
            "required": false
          },
          {
            "type": "number",
            "name": "skip",
            "in": "query",
            "required": false
          },
          {
            "type": "number",
            "name": "take",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "required": false
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "meeting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "create a meeting request",
        "operationId": "postMeetingTasks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model14"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "meeting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/msg/web": {
      "get": {
        "summary": "returns a reply message for the user",
        "operationId": "getMsgWeb",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "msg"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "send a user's message into the assistant",
        "operationId": "postMsgWeb",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "msg"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/search/{id}": {
      "get": {
        "summary": "Gets the search result",
        "operationId": "getSearchId",
        "parameters": [
          {
            "type": "string",
            "description": "the ID the of the search result returned from /search",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "search"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/calendly": {
      "get": {
        "summary": "imports user's Calendly event types",
        "operationId": "getUserCalendly",
        "parameters": [
          {
            "type": "string",
            "description": "Calendly's API token",
            "name": "token",
            "in": "query"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/directories": {
      "get": {
        "summary": "get user's directories",
        "operationId": "getUserDirectories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "add a new directory",
        "operationId": "postUserDirectories",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model18"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/meeting": {
      "get": {
        "summary": "get user's meeting types",
        "operationId": "getUserMeeting",
        "parameters": [
          {
            "type": "boolean",
            "name": "onlyTypes",
            "in": "query",
            "required": false
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "updates the user's meeting type",
        "operationId": "putUserMeeting",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model6"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/org": {
      "get": {
        "summary": "returns the user's organization",
        "operationId": "getUserOrg",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "returnBillingUserInfo",
            "in": "query",
            "required": false
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/savings": {
      "get": {
        "summary": "returns the user's savings information",
        "operationId": "getUserSavings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/webhook/{event}": {
      "get": {
        "operationId": "getWebhookEvent",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "meeting_request_success",
              "new_meeting_request",
              "meeting_request_expired",
              "meeting_request_cancelled",
              "meeting_rescheduled",
              "new_contact_added",
              "meeting_completed",
              "meeting_started"
            ],
            "name": "event",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "webhook"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "operationId": "postWebhookEvent",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "meeting_request_success",
              "new_meeting_request",
              "meeting_request_expired",
              "meeting_request_cancelled",
              "meeting_rescheduled",
              "new_contact_added",
              "meeting_completed",
              "meeting_started"
            ],
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model19"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "webhook"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "operationId": "deleteWebhookEvent",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "meeting_request_success",
              "new_meeting_request",
              "meeting_request_expired",
              "meeting_request_cancelled",
              "meeting_rescheduled",
              "new_contact_added",
              "meeting_completed",
              "meeting_started"
            ],
            "name": "event",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model19"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "webhook"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/directories/{uuid}": {
      "get": {
        "summary": "get user's directory by directory id",
        "operationId": "getUserDirectoriesUuid",
        "parameters": [
          {
            "type": "string",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "update the user's directory",
        "operationId": "putUserDirectoriesUuid",
        "parameters": [
          {
            "type": "string",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model10"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "delete a directory",
        "operationId": "deleteUserDirectoriesUuid",
        "parameters": [
          {
            "type": "string",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/webhook/{event}/sample": {
      "get": {
        "operationId": "getWebhookEventSample",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "meeting_request_success",
              "new_meeting_request",
              "meeting_request_expired",
              "meeting_request_cancelled",
              "meeting_rescheduled",
              "new_contact_added",
              "meeting_completed",
              "meeting_started"
            ],
            "name": "event",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "webhook"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/meeting/tasks/{id}/remind": {
      "put": {
        "summary": "remind the contact(s) about the meeting",
        "operationId": "putMeetingTasksIdRemind",
        "parameters": [
          {
            "type": "string",
            "description": "task's ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "meeting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/meeting/{name}": {
      "post": {
        "summary": "add a new meeting type",
        "operationId": "postUserMeetingName",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "delete a meeting type",
        "operationId": "deleteUserMeetingName",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/user/meeting/{name}/share": {
      "post": {
        "summary": "share a meeting type",
        "operationId": "postUserMeetingNameShare",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "x-alternatives": [
              {
                "$ref": "#/x-alt-definitions/Model1"
              },
              {
                "$ref": "#/x-alt-definitions/Model2"
              }
            ],
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model20"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/meeting/tasks/{id}": {
      "delete": {
        "summary": "deletes a task/request",
        "operationId": "deleteMeetingTasksId",
        "parameters": [
          {
            "type": "string",
            "description": "task's ID",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "meeting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    }
  },
  "definitions": {
    "categoryType": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "auth": {
      "type": "object"
    },
    "Model1": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "orgId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "categoryType": {
          "$ref": "#/definitions/categoryType"
        },
        "providerType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dateLastImport": {
          "type": "string",
          "format": "date"
        },
        "auth": {
          "$ref": "#/definitions/auth"
        },
        "calendar": {
          "$ref": "#/definitions/auth"
        },
        "contacts": {
          "$ref": "#/definitions/auth"
        },
        "faq": {
          "$ref": "#/definitions/auth"
        },
        "group": {
          "$ref": "#/definitions/auth"
        },
        "mail": {
          "$ref": "#/definitions/auth"
        },
        "rooms": {
          "$ref": "#/definitions/auth"
        },
        "xref": {
          "type": "string"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date"
        },
        "dateAdded": {
          "type": "string",
          "format": "date"
        },
        "e_auth": {
          "type": "string"
        }
      },
      "required": [
        "categoryType",
        "providerType",
        "name"
      ]
    },
    "Model2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model1"
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "work": {
          "$ref": "#/definitions/auth"
        }
      }
    },
    "stats": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/auth"
        },
        "historical": {
          "$ref": "#/definitions/categoryType"
        }
      }
    },
    "named": {
      "type": "object",
      "properties": {
        "lunch": {
          "type": "boolean"
        },
        "coffee": {
          "type": "boolean"
        },
        "breakfast": {
          "type": "boolean"
        },
        "dinner": {
          "type": "boolean"
        },
        "drinks": {
          "type": "boolean"
        },
        "call": {
          "type": "boolean"
        }
      }
    },
    "managed": {
      "type": "object",
      "properties": {
        "named": {
          "$ref": "#/definitions/named"
        },
        "timezone": {
          "type": "boolean"
        },
        "meeting_length": {
          "type": "boolean"
        },
        "days": {
          "type": "boolean"
        },
        "workday": {
          "type": "boolean"
        },
        "hourly_offsets": {
          "type": "boolean"
        },
        "cc_meeting": {
          "type": "boolean"
        }
      }
    },
    "meeting": {
      "type": "object",
      "properties": {
        "emailHour": {
          "type": "number"
        },
        "defaultMeetingMinutes": {
          "type": "number"
        },
        "startOffsets": {
          "$ref": "#/definitions/auth"
        },
        "days": {
          "$ref": "#/definitions/auth"
        },
        "defaultTimes": {
          "$ref": "#/definitions/auth"
        },
        "workDay": {
          "$ref": "#/definitions/auth"
        },
        "dailyFreeRatio": {
          "type": "number"
        },
        "notifyForOverlap": {
          "type": "boolean"
        },
        "disableTravelTime": {
          "type": "boolean"
        },
        "ondemand": {
          "$ref": "#/definitions/auth"
        },
        "noticePeriod": {
          "$ref": "#/definitions/auth"
        },
        "meetingCalendarDisplay": {
          "$ref": "#/definitions/auth"
        }
      }
    },
    "showcontact": {
      "type": "object",
      "properties": {
        "twitter_posts": {
          "type": "number"
        },
        "photos": {
          "type": "boolean"
        },
        "websites": {
          "type": "boolean"
        },
        "organizations": {
          "type": "boolean"
        },
        "socialProfiles": {
          "type": "boolean"
        },
        "location": {
          "type": "boolean"
        },
        "email": {
          "type": "boolean"
        },
        "crunchbase": {
          "type": "boolean"
        }
      }
    },
    "weather": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string"
        }
      }
    },
    "Model3": {
      "type": "object",
      "properties": {
        "vendastaLegacyUserId": {
          "type": "string"
        },
        "vendastaUserId": {
          "type": "string"
        },
        "vendastaTopNavUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "dateLastLogin": {
          "type": "string",
          "format": "date"
        },
        "timezone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "hideAutomatedAssistant": {
          "type": "boolean"
        },
        "email_footer": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/location"
        },
        "avatar": {
          "type": "string"
        },
        "telephones": {
          "$ref": "#/definitions/categoryType"
        },
        "preferredNotificationType": {
          "type": "string"
        },
        "preferredNotificationIndex": {
          "type": "number"
        },
        "logoUrl": {
          "type": "string"
        },
        "branding": {
          "$ref": "#/definitions/auth"
        },
        "templates": {
          "$ref": "#/definitions/auth"
        },
        "plan": {
          "type": "string"
        },
        "datePlanChanged": {
          "type": "string",
          "format": "date"
        },
        "tags": {
          "$ref": "#/definitions/categoryType"
        },
        "stats": {
          "$ref": "#/definitions/stats"
        },
        "restrictedApps": {
          "$ref": "#/definitions/categoryType"
        },
        "managed": {
          "$ref": "#/definitions/managed"
        },
        "messaging": {
          "$ref": "#/definitions/categoryType"
        },
        "directories": {
          "$ref": "#/definitions/auth"
        },
        "meeting": {
          "$ref": "#/definitions/meeting"
        },
        "showcontact": {
          "$ref": "#/definitions/showcontact"
        },
        "weather": {
          "$ref": "#/definitions/weather"
        },
        "inactiveUntilDate": {
          "type": "string",
          "format": "date"
        },
        "orgId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "associatedOrgId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "extraEmails": {
          "$ref": "#/definitions/categoryType"
        },
        "inCodeTrial": {
          "type": "boolean"
        },
        "versions.nlp": {
          "type": "string"
        },
        "versions.beta": {
          "type": "boolean"
        },
        "versions.trial.expiry": {
          "type": "string",
          "format": "date"
        },
        "versions.trial.trialPeriodDuration": {
          "type": "number"
        },
        "versions.plan.isDowngrading": {
          "type": "boolean"
        },
        "versions.plan.billingCycleDate": {
          "type": "string",
          "format": "date"
        },
        "versions.appSumo": {
          "type": "string"
        },
        "crm.logActivityAfterMeeting": {
          "type": "string"
        },
        "crm.defaultProviderId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "rooms.favourite": {
          "$ref": "#/definitions/categoryType"
        },
        "rooms.buildings": {
          "$ref": "#/definitions/categoryType"
        },
        "ticket.defaultProviderId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "hideNegativeWhoIs": {
          "type": "boolean"
        },
        "collaborators": {
          "$ref": "#/definitions/categoryType"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date"
        },
        "dateAdded": {
          "type": "string",
          "format": "date"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "email": {
      "type": "array",
      "description": "Contact Emails",
      "minItems": 1,
      "items": {
        "type": "string"
      }
    },
    "telephone": {
      "type": "array",
      "description": "Contact Phone Numbers",
      "items": {
        "type": "string"
      }
    },
    "providerId": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{24}$"
      }
    },
    "Model4": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Contact Name: \"First Last\""
        },
        "title": {
          "type": "string",
          "description": "Contact Title"
        },
        "organization": {
          "type": "string",
          "description": "Contact Company/Organization"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "defaultEmail": {
          "type": "string",
          "description": "Contact Default Email"
        },
        "telephone": {
          "$ref": "#/definitions/telephone"
        },
        "userId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "providerId": {
          "$ref": "#/definitions/providerId"
        }
      },
      "required": [
        "email"
      ]
    },
    "Model5": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "meetingType": {
          "$ref": "#/definitions/auth"
        }
      }
    },
    "meetingTypes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model5"
      }
    },
    "Model6": {
      "type": "object",
      "properties": {
        "meetingTypes": {
          "$ref": "#/definitions/meetingTypes"
        }
      },
      "required": [
        "meetingTypes"
      ]
    },
    "Model7": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "Model8": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model7"
      }
    },
    "Model9": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "googleTrackingIds": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model9"
      }
    },
    "directory": {
      "type": "object",
      "properties": {
        "directoryId": {
          "type": "string"
        },
        "directoryName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "meetingTypes": {
          "$ref": "#/definitions/Model8"
        },
        "isDefault": {
          "type": "boolean"
        },
        "instructions": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "googleTrackingIds": {
          "$ref": "#/definitions/googleTrackingIds"
        }
      },
      "required": [
        "directoryId",
        "directoryName",
        "meetingTypes"
      ]
    },
    "Model10": {
      "type": "object",
      "properties": {
        "directory": {
          "$ref": "#/definitions/directory"
        }
      },
      "required": [
        "directory"
      ]
    },
    "Model11": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Contact Name: \"First Last\""
        },
        "title": {
          "type": "string",
          "description": "Contact Title"
        },
        "organization": {
          "type": "string",
          "description": "Contact Company/Organization"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "defaultEmail": {
          "type": "string",
          "description": "Contact Default Email"
        },
        "telephone": {
          "$ref": "#/definitions/telephone"
        }
      },
      "required": [
        "email"
      ]
    },
    "Model12": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "locations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model12"
      }
    },
    "Model13": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The contact's ID as returned from GET /contact",
          "pattern": "^[0-9a-fA-F]{24}$"
        }
      },
      "required": [
        "id"
      ]
    },
    "contacts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model13"
      }
    },
    "room": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "number",
          "description": "The number of seats required for a meeting room.  If zero, then no meeting room will be booked."
        }
      }
    },
    "Model14": {
      "type": "object",
      "properties": {
        "locations": {
          "$ref": "#/definitions/locations"
        },
        "capacity": {
          "type": "number",
          "description": "The number of seats required for a meeting room.  If zero, then no meeting room will be booked."
        },
        "contacts": {
          "$ref": "#/definitions/contacts"
        },
        "contactEmails": {
          "$ref": "#/definitions/categoryType"
        },
        "subject": {
          "type": "string",
          "description": "The meeting topic/subject"
        },
        "type": {
          "type": "string",
          "description": "The meeting type.  Must be one of the user's defined meeting types returned from GET /user/meeting"
        },
        "dateStart": {
          "type": "string",
          "format": "date",
          "description": "The requested timeframe's start date/time (YYYY-MM-DDTHH:mm:ssZ). The date component (YYYY-MM-DD) represents the start of the availability range while the time component (HH:mm:ssZ) represents the start time for each day of the availability range.",
          "example": "2022-02-22T04:00:00Z"
        },
        "dateEnd": {
          "type": "string",
          "format": "date",
          "description": "The requested timeframe's ending date/time (YYYY-MM-DDTHH:mm:ssZ). The date component (YYYY-MM-DD) represents the end of the availability range while the time component (HH:mm:ssZ) represents the end time for each day of the availability range.",
          "example": "2022-04-22T12:00:00Z"
        },
        "meetingLength": {
          "type": "number",
          "description": "The number of minutes of the requested meeting.  If omited, the meeting type's meeting duration will be used.",
          "default": 60
        },
        "location": {
          "type": "string"
        },
        "room": {
          "$ref": "#/definitions/room"
        },
        "roomCapacity": {
          "type": "number"
        },
        "description": {
          "type": "string",
          "description": "The agenda/description of the meeting"
        }
      },
      "required": [
        "subject",
        "dateStart",
        "dateEnd"
      ]
    },
    "Model15": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        }
      }
    },
    "Model16": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model15"
      }
    },
    "Model17": {
      "type": "object",
      "properties": {
        "directoryName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "meetingTypes": {
          "$ref": "#/definitions/Model16"
        },
        "isDefault": {
          "type": "boolean"
        },
        "instructions": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "googleTrackingIds": {
          "$ref": "#/definitions/googleTrackingIds"
        }
      },
      "required": [
        "directoryName",
        "meetingTypes"
      ]
    },
    "Model18": {
      "type": "object",
      "properties": {
        "directory": {
          "$ref": "#/definitions/Model17"
        }
      },
      "required": [
        "directory"
      ]
    },
    "Model19": {
      "type": "object",
      "properties": {
        "hookUrl": {
          "type": "string"
        }
      }
    },
    "Model20": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "with-all-users",
            "with-all-and-new-users"
          ]
        }
      }
    }
  },
  "x-alt-definitions": {
    "Model1": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "with-all-users",
            "with-all-and-new-users"
          ]
        }
      }
    },
    "shareWithUserIds": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{24}$"
      }
    },
    "Model2": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "with-some"
          ]
        },
        "shareWithUserIds": {
          "$ref": "#/x-alt-definitions/shareWithUserIds"
        }
      },
      "required": [
        "shareWithUserIds"
      ]
    }
  }
}