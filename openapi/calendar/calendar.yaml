openapi: 3.0.1
info:
  title: CalendarHero API
  termsOfService: 'https://calendarhero.com/terms-of-use'
  contact:
    name: CalendarHero
    url: 'https://faq.calendarhero.com'
    email: hello@calendarhero.com
  version: '1.0'
servers:
  - url: 'https://prod.apigateway.co/products/calendar'
    description: Production
  - url: 'https://demo.apigateway.co/products/calendar'
    description: Demo
  - url: '{local}/products/calendar'
    description: Local
  - url: 'http://localhost:11001/products/calendar'
    description: Localhost
tags: []
paths:
  /contact:
    get:
      tags:
        - contact
      summary: List Contacts
      operationId: getContact
      parameters:
        - name: search
          in: query
          description: 'searches for contacts with a specific email (name@domain.com), domain (@domain.com) or name (first last)'
          schema:
            type: string
        - name: filter
          in: query
          description: searches for a specific set of contacts. can not be used with search
          schema:
            type: string
            enum:
              - popular
              - recent
              - a
              - b
              - c
              - d
              - e
              - f
              - g
              - h
              - i
              - j
              - k
              - l
              - m
              - 'n'
              - o
              - p
              - q
              - r
              - s
              - t
              - u
              - v
              - w
              - x
              - 'y'
              - z
        - name: all
          in: query
          description: do not remove duplicate contacts
          schema:
            type: boolean
            enum:
              - false
              - false
        - name: includeTeams
          in: query
          description: include results for teams that match search parameter
          schema:
            type: boolean
            enum:
              - false
              - false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      description: searches for contacts that match search/filter criteria
    post:
      tags:
        - contact
      summary: creates a new contact
      operationId: postContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model11'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    email:
                      - fred@example.com
                      - fredrick@example.com
                    domains:
                      - example.com
                    telephone: []
                    gtalk: []
                    providerId: []
                    _id: 63332b59bed29d0013e836ab
                    defaultEmail: fred@example.com
                    name: Test 5611777c-2be8-48f4-851f-07e1907275f7
                    userId: 63332470c4f7e6ffae21ff4e
                    dateData: '2022-09-27T16:56:57.738Z'
                    manuallyCreated: true
                    lname: test 5611777c-2be8-48f4-851f-07e1907275f7
                    firstName: test
                    lastName: ''
                    dateUpdated: '2022-09-27T16:56:57.781Z'
                    dateAdded: '2022-09-27T16:56:57.781Z'
                    organization: Fred's Fish
                    title: Director
                    id: 63332b59bed29d0013e836ab
                properties:
                  email:
                    type: array
                    items:
                      type: string
                  domains:
                    type: array
                    items:
                      type: string
                  telephone:
                    type: array
                    items:
                      type: object
                  gtalk:
                    type: array
                    items:
                      type: object
                  providerId:
                    type: array
                    items:
                      type: object
                  _id:
                    type: string
                  defaultEmail:
                    type: string
                  name:
                    type: string
                    description: |
                      Full name
                  userId:
                    type: string
                  dateData:
                    type: string
                  manuallyCreated:
                    type: boolean
                  lname:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  dateUpdated:
                    type: string
                  dateAdded:
                    type: string
                  organization:
                    type: string
                  title:
                    type: string
                  id:
                    type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
  /meeting:
    get:
      tags:
        - meeting
      summary: return the user's meetings within a timeframe
      operationId: getMeeting
      parameters:
        - name: start
          in: query
          description: start date/time
          required: true
          schema:
            type: string
        - name: end
          in: query
          description: end date/time
          required: true
          schema:
            type: string
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /provider:
    get:
      tags:
        - provider
      operationId: getProvider
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - calendar
              - contacts
              - messaging
              - social
              - email
              - search
              - files
              - groups
              - faq
              - crm
              - ticket
              - rooms
              - video
              - ats
              - payment
        - name: org
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model2'
      security:
        - OAuth2:
            - calendar
  /search:
    get:
      tags:
        - search
      summary: searches all of the user's integrations for a query term
      operationId: getSearch
      parameters:
        - name: dateStart
          in: query
          description: 'The requested timeframe''s start date/time (YYYY-MM-DDTHH:mm:ssZ)'
          schema:
            type: string
        - name: dateEnd
          in: query
          description: 'The requested timeframe''s ending date/time (YYYY-MM-DDTHH:mm:ssZ)'
          schema:
            type: string
        - name: query
          in: query
          description: The query term to search for
          required: true
          schema:
            type: string
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /user:
    get:
      tags:
        - user
      summary: returns the user object
      operationId: getUser
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model3'
      security:
        - OAuth2:
            - calendar
    put:
      tags:
        - user
      summary: updates the user's object
      operationId: putUser
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model3'
      security:
        - OAuth2:
            - calendar
  /contact/count:
    get:
      tags:
        - contact
      summary: returns the number of contacts
      operationId: getContactCount
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  '/contact/{id}':
    parameters:
      - name: id
        in: path
        description: contact's ID
        required: true
        schema:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
    get:
      tags:
        - contact
      summary: returns a contact
      operationId: getContactId
      parameters:
        - name: basic
          in: query
          description: 'just return the contact''s information stored in CalendarHero.  when false, contact insights will also be returned.'
          schema:
            type: boolean
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    put:
      tags:
        - contact
      summary: updates a contact
      operationId: putContactId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model4'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
    delete:
      tags:
        - contact
      summary: deletes a contact
      operationId: deleteContactId
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /meeting/categories:
    get:
      tags:
        - meeting
      summary: retrieves the user's meeting categories' stats
      operationId: getMeetingCategories
      parameters:
        - name: month
          in: query
          description: YYYY-MM
          schema:
            type: string
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /meeting/tasks:
    get:
      tags:
        - meeting
      summary: returns the user's requests/tasks
      operationId: getMeetingTasks
      parameters:
        - name: state
          in: query
          schema:
            type: string
            enum:
              - active
              - upcoming
              - closed
        - name: tally
          in: query
          schema:
            type: boolean
        - name: skip
          in: query
          schema:
            type: number
        - name: take
          in: query
          schema:
            type: number
        - name: type
          in: query
          schema:
            type: string
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    post:
      tags:
        - meeting
      summary: create a meeting request
      operationId: postMeetingTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model14'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
  /msg/web:
    get:
      tags:
        - msg
      summary: returns a reply message for the user
      operationId: getMsgWeb
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    post:
      tags:
        - msg
      summary: send a user's message into the assistant
      operationId: postMsgWeb
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  '/search/{id}':
    parameters:
      - name: id
        in: path
        description: the ID the of the search result returned from /search
        required: true
        schema:
          type: string
    get:
      tags:
        - search
      summary: Gets the search result
      operationId: getSearchId
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /user/calendly:
    get:
      tags:
        - user
      summary: imports user's Calendly event types
      operationId: getUserCalendly
      parameters:
        - name: token
          in: query
          description: Calendly's API token
          schema:
            type: string
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /user/directories:
    get:
      tags:
        - user
      summary: get user's directories
      operationId: getUserDirectories
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    post:
      tags:
        - user
      summary: add a new directory
      operationId: postUserDirectories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model18'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
  /user/meeting:
    get:
      tags:
        - user
      summary: get user's meeting types
      operationId: getUserMeeting
      parameters:
        - name: onlyTypes
          in: query
          schema:
            type: boolean
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    put:
      tags:
        - user
      summary: updates the user's meeting type
      operationId: putUserMeeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model6'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
  /user/org:
    get:
      tags:
        - user
      summary: returns the user's organization
      operationId: getUserOrg
      parameters:
        - name: returnBillingUserInfo
          in: query
          schema:
            type: boolean
            default: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  /user/savings:
    get:
      tags:
        - user
      summary: returns the user's savings information
      operationId: getUserSavings
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
  '/webhook/{event}':
    parameters:
      - name: event
        in: path
        required: true
        schema:
          type: string
          enum:
            - meeting_request_success
            - new_meeting_request
            - meeting_request_expired
            - meeting_request_cancelled
            - meeting_rescheduled
            - new_contact_added
            - meeting_completed
            - meeting_started
    get:
      tags:
        - webhook
      operationId: getWebhookEvent
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    post:
      tags:
        - webhook
      operationId: postWebhookEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model19'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
    delete:
      tags:
        - webhook
      operationId: deleteWebhookEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model19'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
  '/user/directories/{uuid}':
    get:
      tags:
        - user
      summary: get user's directory by directory id
      operationId: getUserDirectoriesUuid
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    put:
      tags:
        - user
      summary: update the user's directory
      operationId: putUserDirectoriesUuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model10'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
    delete:
      tags:
        - user
      summary: delete a directory
      operationId: deleteUserDirectoriesUuid
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
  '/webhook/{event}/sample':
    get:
      tags:
        - webhook
      operationId: getWebhookEventSample
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    parameters:
      - schema:
          type: string
          enum:
            - meeting_request_success
            - new_meeting_request
            - meeting_request_expired
            - meeting_request_cancelled
            - meeting_rescheduled
            - new_contact_added
            - meeting_completed
            - meeting_started
        name: event
        in: path
        required: true
  '/meeting/tasks/{id}/remind':
    put:
      tags:
        - meeting
      summary: remind the contact(s) about the meeting
      operationId: putMeetingTasksIdRemind
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    parameters:
      - name: id
        in: path
        description: task's ID
        required: true
        schema:
          type: string
  '/user/meeting/{name}':
    post:
      tags:
        - user
      summary: add a new meeting type
      operationId: postUserMeetingName
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2: []
    delete:
      tags:
        - user
      summary: delete a meeting type
      operationId: deleteUserMeetingName
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
  '/user/meeting/{name}/share':
    post:
      tags:
        - user
      summary: share a meeting type
      operationId: postUserMeetingNameShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model20'
        required: false
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
      x-codegen-request-body-name: body
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
  '/meeting/tasks/{id}':
    delete:
      tags:
        - meeting
      summary: deletes a task/request
      operationId: deleteMeetingTasksId
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                type: string
      security:
        - OAuth2:
            - calendar
    parameters:
      - name: id
        in: path
        description: task's ID
        required: true
        schema:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
components:
  schemas:
    categoryType:
      type: array
      items:
        type: string
    auth:
      type: object
    Model1:
      required:
        - categoryType
        - name
        - providerType
      type: object
      properties:
        userId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        orgId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        categoryType:
          $ref: '#/components/schemas/categoryType'
        providerType:
          type: string
        name:
          type: string
        dateLastImport:
          type: string
          format: date
        auth:
          $ref: '#/components/schemas/auth'
        calendar:
          $ref: '#/components/schemas/auth'
        contacts:
          $ref: '#/components/schemas/auth'
        faq:
          $ref: '#/components/schemas/auth'
        group:
          $ref: '#/components/schemas/auth'
        mail:
          $ref: '#/components/schemas/auth'
        rooms:
          $ref: '#/components/schemas/auth'
        xref:
          type: string
        dateUpdated:
          type: string
          format: date
        dateAdded:
          type: string
          format: date
        e_auth:
          type: string
    Model2:
      type: array
      items:
        $ref: '#/components/schemas/Model1'
    location:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/auth'
    stats:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/auth'
        historical:
          $ref: '#/components/schemas/categoryType'
    named:
      type: object
      properties:
        lunch:
          type: boolean
        coffee:
          type: boolean
        breakfast:
          type: boolean
        dinner:
          type: boolean
        drinks:
          type: boolean
        call:
          type: boolean
    managed:
      type: object
      properties:
        named:
          $ref: '#/components/schemas/named'
        timezone:
          type: boolean
        meeting_length:
          type: boolean
        days:
          type: boolean
        workday:
          type: boolean
        hourly_offsets:
          type: boolean
        cc_meeting:
          type: boolean
    meeting:
      type: object
      properties:
        emailHour:
          type: number
        defaultMeetingMinutes:
          type: number
        startOffsets:
          $ref: '#/components/schemas/auth'
        days:
          $ref: '#/components/schemas/auth'
        defaultTimes:
          $ref: '#/components/schemas/auth'
        workDay:
          $ref: '#/components/schemas/auth'
        dailyFreeRatio:
          type: number
        notifyForOverlap:
          type: boolean
        disableTravelTime:
          type: boolean
        ondemand:
          $ref: '#/components/schemas/auth'
        noticePeriod:
          $ref: '#/components/schemas/auth'
        meetingCalendarDisplay:
          $ref: '#/components/schemas/auth'
    showcontact:
      type: object
      properties:
        twitter_posts:
          type: number
        photos:
          type: boolean
        websites:
          type: boolean
        organizations:
          type: boolean
        socialProfiles:
          type: boolean
        location:
          type: boolean
        email:
          type: boolean
        crunchbase:
          type: boolean
    weather:
      type: object
      properties:
        unit:
          type: string
    Model3:
      required:
        - name
      type: object
      properties:
        vendastaLegacyUserId:
          type: string
        vendastaUserId:
          type: string
        vendastaTopNavUrl:
          type: string
        name:
          type: string
        email:
          type: string
          x-format:
            email: true
        dateLastLogin:
          type: string
          format: date
        timezone:
          type: string
        country:
          type: string
        currency:
          type: string
        language:
          type: string
        hideAutomatedAssistant:
          type: boolean
        email_footer:
          type: string
        location:
          $ref: '#/components/schemas/location'
        avatar:
          type: string
        telephones:
          $ref: '#/components/schemas/categoryType'
        preferredNotificationType:
          type: string
        preferredNotificationIndex:
          type: number
        logoUrl:
          type: string
        branding:
          $ref: '#/components/schemas/auth'
        templates:
          $ref: '#/components/schemas/auth'
        plan:
          type: string
        datePlanChanged:
          type: string
          format: date
        tags:
          $ref: '#/components/schemas/categoryType'
        stats:
          $ref: '#/components/schemas/stats'
        restrictedApps:
          $ref: '#/components/schemas/categoryType'
        managed:
          $ref: '#/components/schemas/managed'
        messaging:
          $ref: '#/components/schemas/categoryType'
        directories:
          $ref: '#/components/schemas/auth'
        meeting:
          $ref: '#/components/schemas/meeting'
        showcontact:
          $ref: '#/components/schemas/showcontact'
        weather:
          $ref: '#/components/schemas/weather'
        inactiveUntilDate:
          type: string
          format: date
        orgId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        associatedOrgId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        extraEmails:
          $ref: '#/components/schemas/categoryType'
        inCodeTrial:
          type: boolean
        versions.nlp:
          type: string
        versions.beta:
          type: boolean
        versions.trial.expiry:
          type: string
          format: date
        versions.trial.trialPeriodDuration:
          type: number
        versions.plan.isDowngrading:
          type: boolean
        versions.plan.billingCycleDate:
          type: string
          format: date
        versions.appSumo:
          type: string
        crm.logActivityAfterMeeting:
          type: string
        crm.defaultProviderId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        rooms.favourite:
          $ref: '#/components/schemas/categoryType'
        rooms.buildings:
          $ref: '#/components/schemas/categoryType'
        ticket.defaultProviderId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        hideNegativeWhoIs:
          type: boolean
        collaborators:
          $ref: '#/components/schemas/categoryType'
        dateUpdated:
          type: string
          format: date
        dateAdded:
          type: string
          format: date
        password:
          type: string
        address:
          type: string
    email:
      minItems: 1
      type: array
      description: Contact Emails
      items:
        type: string
    telephone:
      type: array
      description: Contact Phone Numbers
      items:
        type: string
    providerId:
      type: array
      items:
        pattern: '^[0-9a-fA-F]{24}$'
        type: string
    Model4:
      required:
        - email
      type: object
      properties:
        name:
          type: string
          description: 'Contact Name: "First Last"'
        title:
          type: string
          description: Contact Title
        organization:
          type: string
          description: Contact Company/Organization
        email:
          $ref: '#/components/schemas/email'
        defaultEmail:
          type: string
          description: Contact Default Email
        telephone:
          $ref: '#/components/schemas/telephone'
        userId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
        providerId:
          $ref: '#/components/schemas/providerId'
    Model5:
      type: object
      properties:
        name:
          type: string
        meetingType:
          $ref: '#/components/schemas/auth'
    meetingTypes:
      type: array
      items:
        $ref: '#/components/schemas/Model5'
    Model6:
      required:
        - meetingTypes
      type: object
      properties:
        meetingTypes:
          $ref: '#/components/schemas/meetingTypes'
    Model7:
      type: object
      properties:
        name:
          type: string
        userId:
          type: string
    Model8:
      type: array
      items:
        $ref: '#/components/schemas/Model7'
    Model9:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
    googleTrackingIds:
      type: array
      items:
        $ref: '#/components/schemas/Model9'
    directory:
      required:
        - directoryId
        - directoryName
        - meetingTypes
      type: object
      properties:
        directoryId:
          type: string
        directoryName:
          type: string
        title:
          type: string
        code:
          type: string
        meetingTypes:
          $ref: '#/components/schemas/Model8'
        isDefault:
          type: boolean
        instructions:
          type: string
        locked:
          type: boolean
        googleTrackingIds:
          $ref: '#/components/schemas/googleTrackingIds'
    Model10:
      required:
        - directory
      type: object
      properties:
        directory:
          $ref: '#/components/schemas/directory'
    Model11:
      required:
        - email
      type: object
      properties:
        name:
          type: string
          description: 'Contact Name: "First Last"'
        title:
          type: string
          description: Contact Title
        organization:
          type: string
          description: Contact Company/Organization
        email:
          $ref: '#/components/schemas/email'
        defaultEmail:
          type: string
          description: Contact Default Email
        telephone:
          $ref: '#/components/schemas/telephone'
    Model12:
      type: object
      properties:
        name:
          type: string
    locations:
      type: array
      items:
        $ref: '#/components/schemas/Model12'
    Model13:
      required:
        - id
      type: object
      properties:
        id:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
          description: The contact's ID as returned from GET /contact
    contacts:
      type: array
      items:
        $ref: '#/components/schemas/Model13'
    room:
      type: object
      properties:
        capacity:
          type: number
          description: 'The number of seats required for a meeting room.  If zero, then no meeting room will be booked.'
    Model14:
      required:
        - dateEnd
        - dateStart
        - subject
      type: object
      properties:
        locations:
          $ref: '#/components/schemas/locations'
        capacity:
          type: number
          description: 'The number of seats required for a meeting room.  If zero, then no meeting room will be booked.'
        contacts:
          $ref: '#/components/schemas/contacts'
        contactEmails:
          $ref: '#/components/schemas/categoryType'
        subject:
          type: string
          description: The meeting topic/subject
        type:
          type: string
          description: The meeting type.  Must be one of the user's defined meeting types returned from GET /user/meeting
        dateStart:
          type: string
          description: 'The requested timeframe''s start date/time (YYYY-MM-DDTHH:mm:ssZ). The date component (YYYY-MM-DD) represents the start of the availability range while the time component (HH:mm:ssZ) represents the start time for each day of the availability range.'
          format: date
        dateEnd:
          type: string
          description: 'The requested timeframe''s ending date/time (YYYY-MM-DDTHH:mm:ssZ). The date component (YYYY-MM-DD) represents the end of the availability range while the time component (HH:mm:ssZ) represents the end time for each day of the availability range.'
          format: date
        meetingLength:
          type: number
          description: 'The number of minutes of the requested meeting.  If omited, the meeting type''s meeting duration will be used.'
        location:
          type: string
        room:
          $ref: '#/components/schemas/room'
        roomCapacity:
          type: number
        description:
          type: string
          description: The agenda/description of the meeting
    Model15:
      type: object
      properties:
        name:
          type: string
        userId:
          pattern: '^[0-9a-fA-F]{24}$'
          type: string
    Model16:
      type: array
      items:
        $ref: '#/components/schemas/Model15'
    Model17:
      required:
        - directoryName
        - meetingTypes
      type: object
      properties:
        directoryName:
          type: string
        title:
          type: string
        code:
          type: string
        meetingTypes:
          $ref: '#/components/schemas/Model16'
        isDefault:
          type: boolean
        instructions:
          type: string
        locked:
          type: boolean
        googleTrackingIds:
          $ref: '#/components/schemas/googleTrackingIds'
    Model18:
      required:
        - directory
      type: object
      properties:
        directory:
          $ref: '#/components/schemas/Model17'
    Model19:
      type: object
      properties:
        hookUrl:
          type: string
    Model20:
      type: object
      properties:
        type:
          type: string
          enum:
            - with-all-users
            - with-all-and-new-users
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          refreshUrl: ''
          scopes:
            calendar: Access to the Calendar REST API
x-alt-definitions:
  Model1:
    type: object
    properties:
      type:
        type: string
        enum:
          - with-all-users
          - with-all-and-new-users
  shareWithUserIds:
    type: array
    items:
      type: string
      pattern: '^[0-9a-fA-F]{24}$'
  Model2:
    type: object
    properties:
      type:
        type: string
        enum:
          - with-some
      shareWithUserIds:
        $ref: '#/x-alt-definitions/shareWithUserIds'
    required:
      - shareWithUserIds
