{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation EXTERNAL",
    "version": "1.0.0"
  },
  "paths": {
    "/v1beta/widgets": {
      "get": {
        "summary": "List widgets",
        "operationId": "ConversationService_ListWidgets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWidgetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "The namespace of the widget e.g. \"ABC\", \"AG-123\"\nUse either namespace or options.namespaces",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagingOptions.cursor",
            "description": "cursor can be passed to retrieve the next page of results keyed by the cursor",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagingOptions.pageSize",
            "description": "page_size specifies the number of items to return in the next page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "options.namespaces",
            "description": "The namespaces of the widgets e.g. \"ABC\", \"AG-123\"\nUse either namespace or options.namespaces",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "options.widgetTypes",
            "description": "The types of the widget e.g. \"inbox-pro\", \"my-listings\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ConversationService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1GetAttributesResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetAttributesResponse informs the caller of the values of the fields requested for a site identified by a site ID"
    },
    "v1GetPHPVersionResponse": {
      "type": "object",
      "properties": {
        "phpVersion": {
          "type": "integer",
          "format": "int32",
          "title": "the value the flag is set to"
        }
      }
    },
    "v1GetSiteIDFromDomainResponse": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      },
      "title": "GetSiteIDFromDomainResponse is the response containing the site ID mapped from the domain of the request"
    },
    "v1GetSiteResourceUsagesAttributesResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetSiteResourceUsagesAttributesResponse informs the caller of the values of the fields requested for a site identified by a site ID"
    },
    "v1GetSiteResponse": {
      "type": "object",
      "properties": {
        "site": {
          "type": "string",
          "title": "The site struct returned"
        }
      }
    },
    "v1GetStagingPHPVersionResponse": {
      "type": "object",
      "properties": {
        "stagingPhpVersion": {
          "type": "integer",
          "format": "int32",
          "title": "the value the flag is set to"
        }
      }
    },
    "v1GetTrackingIDResponse": {
      "type": "object",
      "properties": {
        "trackingId": {
          "type": "string"
        }
      },
      "title": "GetTrackingIDResponse gives the caller the Google Analytics tracking ID that is injected into the WordPress\ninstance of a given Website site"
    },
    "v1IsCDNEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "IsCDNEnabledResponse informs the caller about whether or not the CDN of a site is enabled"
    },
    "v1IsDeactivatedResponse": {
      "type": "object",
      "properties": {
        "deactivated": {
          "type": "boolean"
        }
      },
      "title": "IsDeactivatedResponse informs the caller of whether a specified site, identified by a site ID, is deactivated"
    },
    "v1IsGoogleAnalyticsEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "the value the flag is set to"
        }
      }
    },
    "v1IsMultiSiteEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "IsMultiSiteEnabledResponse informs the caller of whether the multi-site field of a site is enabled or not"
    },
    "v1IsObjectCacheEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "IsObjectCacheEnabledResponse informs the caller of whether Object Cache is enabled for a given site"
    },
    "v1IsSkipUpgradeHTTPEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "IsSkipUpgradeHTTPEnabledResponse informs the caller of whether the skip upgrade HTTP is enabled or not"
    },
    "v1IsStagingEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "IsStagingEnabledResponse informs the caller of whether the staging environment of a site is enabled or not"
    },
    "v1IsTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "type": "boolean"
        }
      },
      "title": "IsTemplateResponse is the response that informs whether a site is a template or not"
    },
    "v1IsWPDebugEnabledResponse": {
      "type": "object",
      "properties": {
        "live": {
          "type": "boolean",
          "title": "indicator of whether the live site has WP debug enabled"
        },
        "staging": {
          "type": "boolean",
          "title": "indicator of whether the staging site has WP debug enabled"
        }
      },
      "title": "IsWPDebugEnabledResponse informs the caller of whether the WP debug field of a site is enabled or not"
    },
    "v1IsWPLoginExposedResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "the value the flag is set to"
        }
      }
    },
    "v1ListResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Business"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1Site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID represents the unique 64 characters identifier of the site"
        },
        "uid": {
          "type": "integer",
          "format": "int32",
          "title": "UID is the unique identifier of the site"
        },
        "domain": {
          "type": "string",
          "title": "domain is the primary domain of the site"
        },
        "alternateDomains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "alternate_domains is a list of alternate domains for the site"
        },
        "dbName": {
          "type": "string",
          "title": "db_name is the main database name of the site from CloudSQL"
        },
        "dbHost": {
          "type": "string",
          "title": "db_host is the IP of the CloudSQL database of the site"
        },
        "dbUser": {
          "type": "string",
          "title": "db_user is the main user of the database"
        },
        "dbPass": {
          "type": "string",
          "title": "db_pass is the password of the main user of the database"
        },
        "partnerId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "stagingDbName": {
          "type": "string",
          "title": "staging_db_name is the database name for the staging instance of the site"
        },
        "stagingDomain": {
          "type": "string",
          "title": "staging_domain is the primary domain of the staging site"
        },
        "userId": {
          "type": "string",
          "title": "user_id is the identifier of the user performing site actions"
        },
        "mountPath": {
          "type": "string",
          "title": "mount_path is the filesystem mount path where the site files are located"
        },
        "editionId": {
          "type": "string",
          "title": "edition_id is the edition indicator, express (has an ID) or pro"
        },
        "wpDebugEnabled": {
          "type": "boolean",
          "title": "wp_debug_enabled is the boolean indicator of whether WP debug is enabled or not"
        },
        "stagingWpDebugEnabled": {
          "type": "boolean",
          "title": "staging_wp_debug_enabled is the boolean indicator of whether WP debug is enabled or not for a site"
        },
        "cdnVersion": {
          "type": "string",
          "title": "cdn_version is the version of the CDN for the site"
        },
        "objectCacheVersion": {
          "type": "string",
          "title": "object_cache_version is the version of the object cache, similar to CDN"
        },
        "deactivated": {
          "type": "boolean",
          "title": "deactivated is an indicator of whether the site is deactivated"
        },
        "template": {
          "type": "boolean",
          "title": "template is an indicator of whether the site is a template or not"
        },
        "ignoreCacheHeaders": {
          "type": "boolean",
          "title": "ignore_cache_headers is an indicator of whether the cache headers of requests issued to the site identified\nby the site ID should be ignored"
        },
        "gaTrackingId": {
          "type": "string",
          "title": "ga_tracking_id is the Google Analytics tracking ID injected into the site to be used for GA traffic tracking"
        },
        "skipUpgradingHttp": {
          "type": "boolean",
          "title": "skip_upgrading_http is an indicator of whether the site should skip upgrading HTTP requests to HTTPS"
        },
        "exposeWpLogin": {
          "type": "boolean",
          "title": "expose_wp_login is a boolean indicator of whether the site should expose its WP Login page"
        },
        "multiSite": {
          "type": "boolean",
          "title": "multi_site is an indicator of whether the site is a multi-site (structured with subdomains)"
        },
        "version": {
          "type": "string",
          "title": "version is used for versioning sites that are templates (template = true)"
        },
        "phpVersion": {
          "type": "integer",
          "format": "int32",
          "title": "PHP version used for running the site"
        },
        "wpOption": {
          "type": "string",
          "title": "WpOption allows a caller to set the wp option value of the site identified by the site ID specified"
        },
        "googleAnalyticsEnabled": {
          "type": "boolean",
          "title": "GoogleAnalyticsEnabled is used for enabling/Disabling the GoogleANalytics by the siteID specified"
        },
        "stagingPhpVersion": {
          "type": "integer",
          "format": "int32",
          "title": "Staging PHP version used for running the site"
        },
        "isObjectCache": {
          "type": "string",
          "title": "Redis object cache enable/disable via support tools"
        },
        "subsites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubsiteInfo"
          },
          "title": "subsite_info contains subsite details for multi_site"
        },
        "developerModeEnabled": {
          "type": "boolean",
          "title": "Enable developer mode toggle in support tools"
        }
      },
      "title": "Site is the canonical representation of a site"
    },
    "v1SiteType": {
      "type": "string",
      "enum": [
        "SITE_TYPE_LIVE",
        "SITE_TYPE_STAGING"
      ],
      "default": "SITE_TYPE_LIVE",
      "title": "SiteType is an enum that indicates the types of sites that options can be set on"
    },
    "v1SubsiteInfo": {
      "type": "object",
      "properties": {
        "blogId": {
          "type": "string",
          "format": "int64",
          "description": "blog_id represents the unique integer id of the subsite."
        },
        "blogName": {
          "type": "string",
          "title": "blog_name represents the title description of the subsite added by user"
        },
        "path": {
          "type": "string",
          "title": "path represents the path of the subsite in url after domain"
        },
        "status": {
          "type": "string",
          "title": "status represents the status of the subsite"
        }
      }
    },
    "v1AddressComponent": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "AddressComponent represents a piece of an address were the available label options are:\n\"house\", \"category\", \"near\", \"house_number\", \"road\", \"unit\", \"level\", \"staircase\", \"entrance\", \"po_box\", \"postcode\",\n\"suburb\", \"city_district\", \"city\", \"island\", \"state_district\", \"state\", \"country_region\", \"country\", \"world_region\""
    },
    "v1ExpandBatchResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ExpandResponse"
          }
        }
      },
      "title": "ExpandBatchResponse is the response message for LibPostal.ExpandBatch"
    },
    "v1ExpandRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "title": "ExpandRequest is the request message for LibPostal.Expand"
    },
    "v1ExpandResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ExpandResponse is the response message for LibPostal.Expand"
    },
    "v1ParseBatchResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ParseResponse"
          }
        }
      },
      "title": "ParseBatchResponse is the response message for LibPostal.ParseBatch"
    },
    "v1ParseRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "title": "ParseRequest is the request message for LibPostal.Parse"
    },
    "v1ParseResponse": {
      "type": "object",
      "properties": {
        "addressComponents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressComponent"
          }
        }
      },
      "title": "ParseResponse is the response message for LibPostal.Parse"
    },
    "v1Location": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id that represents the location within the underlying service"
        },
        "companyName": {
          "type": "string",
          "title": "The name of the location"
        },
        "address": {
          "type": "string",
          "title": "The postal address of the location"
        },
        "locality": {
          "type": "string",
          "title": "This typically refers to a city, but may refer to a suburb or a neighborhood in certain countries"
        },
        "state": {
          "type": "string",
          "title": "The state or territory abbreviation"
        },
        "country": {
          "type": "string",
          "title": "The country code"
        },
        "zipCode": {
          "type": "string",
          "title": "A string specifying the zip code or postal code"
        },
        "point": {
          "$ref": "#/definitions/v1Geo",
          "title": "A location on the Earth specified by a latitude and longitude"
        },
        "website": {
          "type": "string",
          "title": "The website of the location"
        },
        "phone": {
          "type": "string",
          "title": "The primary phone number of the location"
        },
        "url": {
          "type": "string",
          "title": "The url location of where you can find the location on the internet"
        }
      },
      "title": "Location is a holder for search results from the corresponding api that a search is for"
    },
    "v1SearchResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Business"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalResults": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetProductConfigurationResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner ID the business is in"
        },
        "businessId": {
          "type": "string",
          "title": "The ID of the business that activated that product"
        },
        "cloudblueProductId": {
          "type": "string",
          "title": "The ID of the product in CloudBlue"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SingleValueAttribute"
          },
          "title": "The list of key/value configurations"
        },
        "tierAccountExternalUid": {
          "type": "string",
          "title": "The External UID of the tier account in CloudBlue"
        }
      },
      "title": "Response from getting a specific ProductConfiguration"
    },
    "v1SingleValueAttribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "Represents a key-value pair for adding/removing values in mutate, as well as filtering results in IAM.SearchSubject."
    },
    "astbev1LineStatus": {
      "type": "string",
      "enum": [
        "LINE_STATUS_UNDEFINED",
        "LINE_STATUS_IDLE",
        "LINE_STATUS_INUSE",
        "LINE_STATUS_BUSY",
        "LINE_STATUS_UNAVAILABLE",
        "LINE_STATUS_RINGING",
        "LINE_STATUS_INUSE_RINGING",
        "LINE_STATUS_HOLD",
        "LINE_STATUS_INUSE_HOLD"
      ],
      "default": "LINE_STATUS_UNDEFINED",
      "title": "Values are from the AMI definitions + 1 as a workaround for omitonempty"
    },
    "v1CallResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1CreateConfigResponse": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "title": "Unique client id this configuration is keyed by"
        },
        "clientSecret": {
          "type": "string",
          "title": "Secret to be used along with the client id"
        }
      },
      "title": "Response for creating a new configuration. Only 1 configuration per-app"
    },
    "v1Extension": {
      "type": "object",
      "properties": {
        "extension": {
          "type": "string",
          "format": "int64"
        },
        "user": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/astbev1LineStatus"
        }
      }
    },
    "v1GetConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1Config"
        }
      }
    },
    "v1GetRecordingUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "expires": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1LineStatusResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "extension": {
          "$ref": "#/definitions/v1Extension"
        },
        "queuestatus": {
          "$ref": "#/definitions/v1MemberStatus"
        }
      }
    },
    "v1LiveStatusResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v1MemberStatus": {
      "type": "string",
      "enum": [
        "MEMBER_STATUS_UNKNOWN",
        "MEMBER_STATUS_OFFLINE",
        "MEMBER_STATUS_ONLINE",
        "MEMBER_STATUS_PAUSED"
      ],
      "default": "MEMBER_STATUS_UNKNOWN"
    },
    "v1PrivateConfig": {
      "type": "object",
      "properties": {
        "public": {
          "$ref": "#/definitions/v1PublicConfig"
        },
        "amikey": {
          "type": "string"
        }
      }
    },
    "v1PublicConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "createddate": {
          "type": "string",
          "format": "date-time"
        },
        "asteriskip": {
          "type": "string"
        },
        "amiuser": {
          "type": "string"
        },
        "zendeskintegration": {
          "type": "boolean"
        },
        "activequeues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpdateConfigResponse": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "title": "the timezone associated with the campaign"
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Days that the emails are able to be sent out"
        },
        "rateLimited": {
          "type": "boolean",
          "title": "Whether or not a buffer is enabled to limit the amount emails sent per sales person per day"
        },
        "rateLimit": {
          "type": "string",
          "format": "int64",
          "title": "The size of the buffer for limiting the amount of emails sent"
        }
      }
    },
    "v1IntegrationConnectionResponse": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string"
        },
        "integrationName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lastAttempt": {
          "type": "string",
          "format": "date-time"
        },
        "lastSuccess": {
          "type": "string",
          "format": "date-time"
        },
        "lastDataReceived": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1IntegrationConnectionResponseList": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IntegrationConnectionResponse"
          }
        }
      }
    },
    "AddPipelineStagesRequestAddPipelineStage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Display name of the pipeline stage"
        },
        "probability": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Pipeline stage information for the pipeline"
    },
    "CreateOpportunityRequestCreateOpportunityPackage": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string",
          "title": "Unique ID of package"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "Quantity of package"
        }
      },
      "title": "Package information for the opportunity"
    },
    "CreatePipelineRequestCreatePipelineStage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Display name of the pipeline stage"
        },
        "probability": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Pipeline stage information for the pipeline"
    },
    "LineItemAppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        },
        "packageId": {
          "type": "string",
          "description": "A package id is optional, it is used to group line items together in a package."
        },
        "packageInstanceId": {
          "type": "string",
          "description": "A package instance id keeps track of the package instance that a line item belongs to. For example, if the customer purchases two packages that contain the same product,\nthis will identify which package the product belongs to.\n\nThis must be provided if a package id is provided, and should not be provided if there is no package id provided. The ID should be a uuid."
        }
      }
    },
    "ScoringScore": {
      "type": "object",
      "properties": {
        "sectionId": {
          "type": "string",
          "title": "Deprecated: use section instead"
        },
        "scoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "notes": {
          "type": "string"
        },
        "section": {
          "$ref": "#/definitions/v1MEDDICSection"
        }
      }
    },
    "salesopportunitiesv1SortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING",
      "description": "The directions that a result set can be sorted in."
    },
    "v1AddOpportunityPackagesResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1AddPipelineStagesResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Attachment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the attachment"
        },
        "url": {
          "type": "string",
          "title": "The url to the attachment"
        }
      },
      "title": "Represents an attachment on an order"
    },
    "v1BillingPeriod": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of the billing period"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of the billing period"
        },
        "duration": {
          "$ref": "#/definitions/v1Duration",
          "title": "Value representing the duration to bill for (use instead of end date)"
        }
      },
      "title": "The Time frame to bill for"
    },
    "v1CSVExports": {
      "type": "object",
      "properties": {
        "opportunities": {
          "type": "boolean"
        },
        "opportunityHistory": {
          "type": "boolean"
        }
      }
    },
    "v1CSVFormatOptions": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1ClientOrigin": {
      "type": "string",
      "enum": [
        "CLIENT_ORIGIN_UNSET",
        "CLIENT_ORIGIN_SALES_CENTER",
        "CLIENT_ORIGIN_PARTNER_CENTER"
      ],
      "default": "CLIENT_ORIGIN_UNSET"
    },
    "v1CloseAsLostOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity",
          "title": "The opportunity's new state"
        }
      },
      "title": "Response to a request to close an opportunity which has been lost"
    },
    "v1CloseAsWonOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity",
          "title": "The opportunity's new state"
        }
      },
      "title": "Response to a request to close an opportunity which has been won"
    },
    "v1ClosedLostReason": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1ClosedLostReasonOption",
          "title": "The reason the opportunity was lost"
        }
      },
      "title": "A message containing the reason why the opportunity was lost"
    },
    "v1ClosedLostReasonOption": {
      "type": "string",
      "enum": [
        "PRICE",
        "NO_BUDGET",
        "LOST_TO_COMPETITOR",
        "NOT_READY",
        "OTHER"
      ],
      "default": "PRICE",
      "title": "Reasons an opportunity was lost"
    },
    "v1Cost": {
      "type": "object",
      "properties": {
        "customPrice": {
          "type": "string",
          "format": "int64",
          "title": "The custom price of the order item. Can only be changed if the application supports custom pricing"
        }
      },
      "title": "Cost represents the wholesale cost of an order"
    },
    "v1CreateOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      },
      "title": "*******************\nOpportunity Responses\n*******************"
    },
    "v1CreatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string"
        }
      }
    },
    "v1Currency": {
      "type": "string",
      "enum": [
        "USD",
        "CAD",
        "EUR",
        "AUD",
        "GBP",
        "NZD",
        "ZAR"
      ],
      "default": "USD",
      "title": "- ZAR: Do not add to this list. If more currencies are required currency_code should be used instead"
    },
    "v1CurrentOpportunityPoint": {
      "type": "object",
      "properties": {
        "day": {
          "type": "string",
          "format": "date-time"
        },
        "openOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "partnerId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1CustomPriceMapping": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "title": "The ID of the product"
        },
        "customPrice": {
          "type": "string",
          "format": "int64",
          "title": "The custom price value of the product"
        }
      },
      "title": "Representing custom prices for variable priced products in a package"
    },
    "v1DateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time",
          "title": "Start date of range"
        },
        "endRange": {
          "type": "string",
          "format": "date-time",
          "title": "End date of range"
        }
      },
      "title": "The start and end of date range (inclusive)"
    },
    "v1DeletePipelineResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Duration": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64",
          "description": "Value for duration of time of a given operation."
        },
        "duration": {
          "$ref": "#/definitions/v1DurationPeriod",
          "description": "Unit for measuring time."
        }
      }
    },
    "v1DurationPeriod": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "MONTH",
        "YEAR",
        "DAY",
        "WEEK"
      ],
      "default": "UNSPECIFIED"
    },
    "v1Forecasting": {
      "type": "object",
      "properties": {
        "revenueInMonth": {
          "$ref": "#/definitions/v1RevenueInMonth"
        }
      }
    },
    "v1GetMEDDICScoresResponse": {
      "type": "object",
      "properties": {
        "scores": {
          "$ref": "#/definitions/v1MEDDICScores"
        }
      }
    },
    "v1GetMEDDICSectionsResponse": {
      "type": "object",
      "properties": {
        "sections": {
          "$ref": "#/definitions/v1Scoring"
        }
      }
    },
    "v1GetOpportunityCountByAccountGroupsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OpportunityCount"
          }
        }
      }
    },
    "v1GetOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1GetOpportunityValueByAccountGroupsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OpportunityValue"
          }
        }
      }
    },
    "v1GetTagsForOpportunitiesResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Goal": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Deprecated"
    },
    "v1GoalResponse": {
      "type": "object",
      "properties": {
        "goal": {
          "$ref": "#/definitions/v1Goal",
          "title": "The resulting goal"
        }
      }
    },
    "v1GoalType": {
      "type": "string",
      "enum": [
        "GOAL_TYPE_UNSPECIFIED",
        "REVENUE",
        "NEW_REVENUE",
        "EXPANSION_REVENUE",
        "EMAIL",
        "CALL",
        "MEETING",
        "OPPORTUNITY"
      ],
      "default": "GOAL_TYPE_UNSPECIFIED",
      "title": "- REVENUE: Won Revenue\n - NEW_REVENUE: Closed Won Revenue (new)\n - EXPANSION_REVENUE: Closed Won Revenue (existing)\n - EMAIL: Emails Sent\n - CALL: Calls Made\n - MEETING: Meetings booked\n - OPPORTUNITY: Opportunities created"
    },
    "v1InitiateOpportunityExportResponse": {
      "type": "object",
      "properties": {
        "exportId": {
          "type": "string",
          "title": "The unique identifier for the file generation that can be used to check its status"
        }
      },
      "title": "Defines the response body from InitiateOpportunityExport"
    },
    "v1LineItem": {
      "type": "object",
      "properties": {
        "appKey": {
          "$ref": "#/definitions/LineItemAppKey"
        },
        "packageId": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "While this is not deprecated, more currencies than the value of the enum are supported. To use those currencies use currency_code instead"
        },
        "initialRevenue": {
          "$ref": "#/definitions/v1Revenue",
          "title": "DEPRECATED: not important now that there is a draft state for sales orders, history of the order should be used instead"
        },
        "currentRevenue": {
          "$ref": "#/definitions/v1Revenue"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "isTrial": {
          "type": "boolean",
          "title": "Only used when AppKey is the identifier"
        },
        "currencyCode": {
          "type": "string",
          "description": "The 3-letter currency code defined in ISO 4217."
        },
        "cost": {
          "$ref": "#/definitions/v1Cost"
        },
        "customPrices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomPriceMapping"
          },
          "title": "The custom price mapping for variable priced products in a package in the order"
        },
        "billingPeriod": {
          "$ref": "#/definitions/v1BillingPeriod",
          "title": "The billing period of the line item"
        },
        "autoBillable": {
          "type": "boolean",
          "title": "DEPRECATED: use non_billable instead"
        },
        "nonBillable": {
          "type": "boolean",
          "title": "Indicates whether this line item should be billable or not\nIf true, the item will not be billed"
        },
        "taxRateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The tax rate ids that apply to this line item"
        }
      }
    },
    "v1ListGoalsRequestFilters": {
      "type": "object",
      "properties": {
        "contributorId": {
          "type": "string"
        },
        "contributorType": {
          "type": "string"
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListGoalsRequestSortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING"
    },
    "v1ListGoalsRequestSortField": {
      "type": "string",
      "enum": [
        "SORT_FIELD_UNSET",
        "SORT_FIELD_CREATED"
      ],
      "default": "SORT_FIELD_UNSET"
    },
    "v1ListGoalsRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1ListGoalsRequestSortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1ListGoalsRequestSortField",
          "title": "Field to sort on"
        }
      }
    },
    "v1ListGoalsResponse": {
      "type": "object",
      "properties": {
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Goal"
          },
          "title": "The resulting goals"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListOpportunitiesRequestFilters": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "id of an account group (deprecated - use filter property account_group_ids instead)"
        },
        "salesPersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of sales person ids"
        },
        "pipelineStages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of pipeline statuses"
        },
        "createdDateFilter": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Create date range filter"
        },
        "expectedCloseDateFilter": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Expected close date range filter"
        },
        "probabilityRangeFilter": {
          "$ref": "#/definitions/v1ProbabilityRangeFilter",
          "title": "Probability range filter"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of package ids"
        },
        "actualCloseDateFilter": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Actual close date range filter"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Opportunities may have zero-to-many tags that can be used for lookup"
        },
        "pipelineId": {
          "type": "string",
          "title": "Deprecated: use pipeline_ids. The Pipeline ID that the opp is associated with"
        },
        "accountGroupIdsForTag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Deprecated: A list of account group ids for opportunity tag filter"
        },
        "lineItemProductIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of product ids"
        },
        "revenuePeriodFilter": {
          "$ref": "#/definitions/v1RevenuePeriodFilter",
          "title": "Period to retrieve revenue for opportunities (recurring + any initial)"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The Pipeline IDs that the opp is associated with at least one"
        },
        "assignedDate": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "The date that the opportunity was assigned to the current salesperson"
        },
        "opportunityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The types of the opportunities (new-business, existing-business, etc)"
        }
      },
      "title": "Filters to list opportunities based on given filter criterias"
    },
    "v1ListOpportunitiesRequestSortField": {
      "type": "string",
      "enum": [
        "PROJECTED_FIRST_YEAR_VALUE",
        "PROBABILITY",
        "CREATED",
        "EXPECTED_CLOSE",
        "NAME",
        "LAST_ACTIVITY",
        "LAST_CONNECTED",
        "ACTUAL_CLOSE",
        "PIPELINE_STAGE",
        "MEDDIC",
        "ASSIGNED_DATE"
      ],
      "default": "PROJECTED_FIRST_YEAR_VALUE",
      "description": "The field to sort a result set on."
    },
    "v1ListOpportunitiesRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/salesopportunitiesv1SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1ListOpportunitiesRequestSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1ListOpportunitiesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Opportunity"
          },
          "title": "List of opportunities"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        },
        "totalProjectedFirstYearValue": {
          "type": "string",
          "format": "int64",
          "title": "The sum total number of projected first year values for this query across all pages"
        },
        "totalRevenueForRevenuePeriod": {
          "type": "string",
          "format": "int64",
          "title": "The total revenue for the period"
        }
      }
    },
    "v1ListPipelinesResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pipeline"
          }
        }
      }
    },
    "v1MEDDICScores": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "integer",
          "format": "int64"
        },
        "economicBuyer": {
          "type": "integer",
          "format": "int64"
        },
        "decisionCriteria": {
          "type": "integer",
          "format": "int64"
        },
        "decisionProcess": {
          "type": "integer",
          "format": "int64"
        },
        "identifyPain": {
          "type": "integer",
          "format": "int64"
        },
        "champion": {
          "type": "integer",
          "format": "int64"
        },
        "competition": {
          "type": "integer",
          "format": "int64"
        },
        "paperProcess": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "https://docs.google.com/document/d/1csMxEOXs2IXAz9tBHVTcG7DvCxX9dfAN5HOcztMI2nc/"
    },
    "v1MEDDICSection": {
      "type": "string",
      "enum": [
        "MEDDIC_SECTION_UNDEFINED",
        "MEDDIC_SECTION_METRICS",
        "MEDDIC_SECTION_ECONOMIC_BUYER",
        "MEDDIC_SECTION_DECISION_CRITERIA",
        "MEDDIC_SECTION_DECISION_PROCESS",
        "MEDDIC_SECTION_IDENTIFY_PAIN",
        "MEDDIC_SECTION_CHAMPION_SCORE",
        "MEDDIC_SECTION_COMPETITION",
        "MEDDIC_SECTION_PAPER_PROCESS"
      ],
      "default": "MEDDIC_SECTION_UNDEFINED"
    },
    "v1Opportunity": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "miscellaneous data about what the lead is interested in. Will most likely be fleshed out in the future"
        }
      },
      "title": "represents additional information as to what the lead has presented interest in, whether that is product or service or simply a status"
    },
    "v1OpportunityCount": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1OpportunityRevenuePeriod": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SELECTED_MONTH"
      ],
      "default": "UNSPECIFIED"
    },
    "v1OpportunityValue": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Package": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string",
          "title": "Unique identifier of a package"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "Type of currency the revenue of a package is in"
        },
        "revenue": {
          "$ref": "#/definitions/v1Revenue",
          "title": "Revenue of a package"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "How many of the package is being requested"
        },
        "productIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of unique identifiers for the products that belong to the package\nDEPRECATED: get the products that are in a package from marketplace"
        },
        "addonKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddonKey"
          },
          "title": "DEPRECATED: get the addons that are in a package from marketplace"
        },
        "customPrices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomPriceMapping"
          },
          "title": "The custom price mapping of the order"
        }
      },
      "title": "Representing a package in an order"
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "Options for how to page the response for a List request"
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Metadata related to the paged response from a List request"
    },
    "v1Pipeline": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stage"
          }
        }
      }
    },
    "v1PipelineClosePoint": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "format": "date-time"
        },
        "wonOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "lostOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "totalOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "partnerId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1PipelineCreationPoint": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "format": "date-time"
        },
        "createdOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "partnerId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1ProbabilityRangeFilter": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "maximum": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Minimum and maximum probability range to filter on"
    },
    "v1RemoveOpportunityPackagesResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1RemovePipelineStagesResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1RestoreDeletedPipelineResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Revenue": {
      "type": "object",
      "properties": {
        "revenueComponents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RevenueComponent"
          }
        }
      },
      "title": "Revenue represents the retail price of an order"
    },
    "v1RevenueComponent": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64",
          "description": "The value in the smallest common currency unit i.e. cents. Therefore 4000 would represent $40.00."
        },
        "period": {
          "$ref": "#/definitions/v1RevenuePeriod",
          "description": "The frequency this revenue occurs."
        },
        "isStartingRevenue": {
          "type": "boolean",
          "title": "The indication if this is only the starting price or the actual price"
        }
      }
    },
    "v1RevenueInMonth": {
      "type": "object",
      "properties": {
        "initialRevenue": {
          "type": "string",
          "format": "int64"
        },
        "recurringRevenue": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1RevenuePeriod": {
      "type": "string",
      "enum": [
        "ONETIME",
        "DAILY",
        "WEEKLY",
        "BIWEEKLY",
        "MONTHLY",
        "YEARLY"
      ],
      "default": "ONETIME"
    },
    "v1RevenuePeriodFilter": {
      "type": "object",
      "properties": {
        "revenueDate": {
          "type": "string",
          "format": "date-time"
        },
        "revenuePeriod": {
          "$ref": "#/definitions/v1OpportunityRevenuePeriod"
        }
      }
    },
    "v1SalespersonStatsResponse": {
      "type": "object",
      "properties": {
        "pipelineCloseRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PipelineClosePoint"
          }
        },
        "pipelineCreationRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PipelineCreationPoint"
          }
        },
        "currentOpporunities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CurrentOpportunityPoint"
          }
        }
      }
    },
    "v1Scoring": {
      "type": "object",
      "properties": {
        "scores": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ScoringScore"
          }
        }
      }
    },
    "v1SetPipelineStagesResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Stage": {
      "type": "string",
      "enum": [
        "STAGE_NOT_SPECIFIED",
        "STAGE_WORKFLOW_STEP",
        "STAGE_WORKFLOW_COMPLETED",
        "STAGE_WORKFLOW_CANCELED",
        "STAGE_WORKFLOW_COMPLETED_FROM_ERROR",
        "STAGE_WORKFLOW_DID_NOT_RUN",
        "STAGE_WORKFLOW_CONTINUED_FROM_ERROR",
        "STAGE_WORKFLOW_CONTINUED",
        "STAGE_WORKFLOW_COMPLETED_FROM_GOAL"
      ],
      "default": "STAGE_NOT_SPECIFIED",
      "description": " - STAGE_WORKFLOW_DID_NOT_RUN: WORKFLOW_DID_NOT_RUN indicates that an event was received for an entity but that event did not pass the trigger filters so the\nworkflow portion of the automation did not start.\n - STAGE_WORKFLOW_CONTINUED_FROM_ERROR: marks an activity as having continued from a step that errored\n - STAGE_WORKFLOW_CONTINUED: marks an activity as continuing the workflow\n - STAGE_WORKFLOW_COMPLETED_FROM_GOAL: The goal evaluated as having been met, ending the automation."
    },
    "v1Target": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64",
          "title": "The numerical value for this target (e.g. USD cents amount if goal type is revenue)"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this target"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this target"
        }
      }
    },
    "v1UpdateLastActivityDateResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateLastConnectedDateResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateLineItemsResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityDurationResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityExpectedCloseDateResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityMarketResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityNameResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityNotesResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityPackageResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityPackageRevenueResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityProbabilityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunitySalespersonResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityTagsResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityTypeResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdatePipelineNameResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdatePipelineStageNameResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdatePipelineStageProbabilityResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    },
    "ChildRuleIndexToTake": {
      "type": "string",
      "enum": [
        "CHILD_RULE_INDEX_TO_TAKE_TAKE_ALL",
        "CHILD_RULE_INDEX_TO_TAKE_TAKE_INDEX"
      ],
      "default": "CHILD_RULE_INDEX_TO_TAKE_TAKE_ALL",
      "title": "Whether we want to use the json array index or take all values within a JSON array"
    },
    "GetMultiKeyMetricsListResponseSourceAndEvents": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          }
        }
      }
    },
    "GetMultiMostRecentLockdownRequestGetMultiMostRecentLockdownFilters": {
      "type": "object",
      "properties": {
        "scraperType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/web_crawlerv1Type"
          }
        }
      }
    },
    "ListCollectorRequestListCollectorFilters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        }
      }
    },
    "ListIncidentRequestListIncidentFilters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "scraperType": {
          "$ref": "#/definitions/web_crawlerv1Type"
        }
      }
    },
    "ListLockdownRequestListLockdownFilters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "scraperType": {
          "$ref": "#/definitions/web_crawlerv1Type"
        }
      }
    },
    "ListProxyAddressesResponseProxyGroup": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "proxyAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListScraperRequestListScraperFilters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        }
      }
    },
    "ListingGeo": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LockdownLevel": {
      "type": "string",
      "enum": [
        "LOCKDOWN_LEVEL_ERROR",
        "LOCKDOWN_LEVEL_WARNING"
      ],
      "default": "LOCKDOWN_LEVEL_ERROR"
    },
    "LockdownState": {
      "type": "string",
      "enum": [
        "STATE_UNSET",
        "STATE_AUTO",
        "STATE_MANUAL"
      ],
      "default": "STATE_UNSET"
    },
    "OptionsTransportWaitUntil": {
      "type": "string",
      "enum": [
        "OPTIONS_TRANSPORT_WAIT_UNTIL_NETWORK_IDLE_0",
        "OPTIONS_TRANSPORT_WAIT_UNTIL_NETWORK_IDLE_2",
        "OPTIONS_TRANSPORT_WAIT_UNTIL_DOM_CONTENT_LOADED",
        "OPTIONS_TRANSPORT_WAIT_UNTIL_LOAD"
      ],
      "default": "OPTIONS_TRANSPORT_WAIT_UNTIL_NETWORK_IDLE_0"
    },
    "RegexPatternMatchType": {
      "type": "string",
      "enum": [
        "REGEX_PATTERN_MATCH_TYPE_NOT_SPECIFIED",
        "REGEX_PATTERN_MATCH_TYPE_MATCH",
        "REGEX_PATTERN_MATCH_TYPE_GROUP"
      ],
      "default": "REGEX_PATTERN_MATCH_TYPE_NOT_SPECIFIED"
    },
    "ScrapeListingsRequestTimeFrame": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "description": "Date in the format YYYY-MM-DD, eg. 2020-01-25. Must be before end_date."
        },
        "endDate": {
          "type": "string",
          "description": "Date in the format YYYY-MM-DD, eg. 2020-01-25. Must be after start_date."
        }
      }
    },
    "ScrapingStatusIsScraping": {
      "type": "string",
      "enum": [
        "SCRAPING_STATUS_IS_SCRAPING_UNSPECIFIED",
        "SCRAPING_STATUS_IS_SCRAPING_NOT_SCRAPING",
        "SCRAPING_STATUS_IS_SCRAPING_SCRAPING"
      ],
      "default": "SCRAPING_STATUS_IS_SCRAPING_UNSPECIFIED"
    },
    "SubmitListingURLRequestPriority": {
      "type": "string",
      "enum": [
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_UNSPECIFIED",
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_LOW",
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_HIGH",
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_REFRESH",
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_USER_SUBMIT",
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_LISTING_SYNC_PRO",
        "SUBMIT_LISTING_URL_REQUEST_PRIORITY_BING_SEARCH"
      ],
      "default": "SUBMIT_LISTING_URL_REQUEST_PRIORITY_UNSPECIFIED"
    },
    "ToTakeNodePosition": {
      "type": "string",
      "enum": [
        "TO_TAKE_NODE_POSITION_NOT_SPECIFIED",
        "TO_TAKE_NODE_POSITION_PARENT",
        "TO_TAKE_NODE_POSITION_PARENT_PREVIOUS",
        "TO_TAKE_NODE_POSITION_PARENT_NEXT"
      ],
      "default": "TO_TAKE_NODE_POSITION_NOT_SPECIFIED",
      "title": "What nodes to select relative to the identified one"
    },
    "ToTakeTake": {
      "type": "string",
      "enum": [
        "TO_TAKE_TAKE_FIRST",
        "TO_TAKE_TAKE_ALL",
        "TO_TAKE_TAKE_PREVIOUS",
        "TO_TAKE_TAKE_NEXT",
        "TO_TAKE_TAKE_LAST",
        "TO_TAKE_TAKE_FIRST_CHILD",
        "TO_TAKE_TAKE_LAST_CHILD"
      ],
      "default": "TO_TAKE_TAKE_FIRST",
      "title": "What nodes we want to take"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Action": {
      "type": "string",
      "enum": [
        "ACTION_UNSPECIFIED",
        "ACTION_CREATE_SNAPSHOT_REPORT",
        "ACTION_CREATE_SNAPSHOT_REPORT_BULK",
        "ACTION_ACTIVATE_RM",
        "ACTION_ACTIVATE_DEMO_RM",
        "ACTION_ACTIVATE_SM",
        "ACTION_ACTIVATE_MS",
        "ACTION_CONVERT_DEMO_RM",
        "ACTION_ACTIVATE_MARKETPLACE_PRODUCT",
        "ACTION_REFRESH_SNAPSHOT_REPORT",
        "ACTION_ACTIVATE_LISTING_DISTRIBUTION",
        "ACTION_ACTIVATE_LISTING_SYNC_PRO",
        "ACTION_ACTIVATE_CUSTOM_PRODUCT",
        "ACTION_ACCESS_SNAPSHOT_WIDGET",
        "ACTION_ACTIVATE_ADDON"
      ],
      "default": "ACTION_UNSPECIFIED"
    },
    "v1Callback": {
      "type": "string",
      "enum": [
        "CALLBACK_NOT_SPECIFIED",
        "CALLBACK_PARSE_ADDRESS",
        "CALLBACK_PARSE_JSON",
        "CALLBACK_REGEX_MATCH",
        "CALLBACK_PARSE_MULTI_TELEPHONE_NUMBERS",
        "CALLBACK_REGION_SHORTENER",
        "CALLBACK_PARSE_URL",
        "CALLBACK_OUTER_HTML_REGEX",
        "CALLBACK_COUNT_STARS",
        "CALLBACK_FOLLOW_URL",
        "CALLBACK_WORD_TO_NUMBER",
        "CALLBACK_PARSE_ADDRESS_OPENAI",
        "CALLBACK_PARSE_ADDRESS_SUB_PREMISE"
      ],
      "default": "CALLBACK_NOT_SPECIFIED"
    },
    "v1Callbacks": {
      "type": "object",
      "properties": {
        "onXml": {
          "$ref": "#/definitions/v1OnXML"
        },
        "onScraped": {
          "$ref": "#/definitions/v1OnScraped"
        },
        "onResponse": {
          "$ref": "#/definitions/v1OnResponse"
        },
        "onHtml": {
          "$ref": "#/definitions/v1OnHTML"
        }
      },
      "title": "Callbacks that will be fired on the collector\nThe available callbacks that can be registered on a collector: http://go-colly.org/docs/introduction/start/"
    },
    "v1ChildRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "selector": {
          "type": "string"
        },
        "attribute": {
          "type": "string"
        },
        "jsonSchema": {
          "type": "string"
        },
        "callback": {
          "$ref": "#/definitions/v1Callback"
        },
        "regexp": {
          "$ref": "#/definitions/v1Regex",
          "title": "Pass regex selector"
        },
        "selectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Selector"
          }
        },
        "jsonArrayIndex": {
          "type": "string",
          "format": "int64",
          "title": "The element number within a json list that you want to scrape when running the PARSE_JSON callback"
        },
        "indexToTake": {
          "$ref": "#/definitions/ChildRuleIndexToTake"
        },
        "countStarsConfig": {
          "$ref": "#/definitions/v1CountStarsConfig",
          "description": "Config for counting stars that appear as individual elements on the page, rather than having a number."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChildRule"
          },
          "title": "A child rule can also have its own rules where again we are scraping nested content"
        }
      },
      "title": "Used to parse nested content from an html fragment"
    },
    "v1CleanupReviewsResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      }
    },
    "v1Collector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of a collector"
        },
        "name": {
          "type": "string",
          "title": "name of the collector"
        },
        "options": {
          "$ref": "#/definitions/v1Options",
          "title": "gocolly collector options"
        },
        "callbacks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Callbacks"
          },
          "title": "the callbacks that will be applied to the collector when running"
        },
        "startUrl": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "optional start url for the collector to start with"
        },
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "the source id the collector is for"
        },
        "urlValidationRegex": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "regex that validates this is a valid listing url"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Header"
          },
          "title": "Headers to use to fetch the sitemaps"
        },
        "disallowedUrlFilters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "regex restricts visiting urls that matches it (opposite behavior of url_validation_regex)"
        },
        "collectorType": {
          "$ref": "#/definitions/v1CollectorType",
          "title": "collector_type is the type of collector this is"
        },
        "status": {
          "$ref": "#/definitions/v1CollectorStatus",
          "title": "status is the current run status of the collector"
        }
      },
      "title": "Collector is the representation of a gocolly collector"
    },
    "v1CollectorStatus": {
      "type": "string",
      "enum": [
        "COLLECTOR_STATUS_NOT_SPECIFIED",
        "COLLECTOR_STATUS_ABORT",
        "COLLECTOR_STATUS_ABLE_TO_RUN"
      ],
      "default": "COLLECTOR_STATUS_NOT_SPECIFIED"
    },
    "v1CollectorType": {
      "type": "string",
      "enum": [
        "COLLECTOR_TYPE_NOT_SPECIFIED",
        "COLLECTOR_TYPE_HTML",
        "COLLECTOR_TYPE_SITEMAP"
      ],
      "default": "COLLECTOR_TYPE_NOT_SPECIFIED"
    },
    "v1CountStarsConfig": {
      "type": "object",
      "properties": {
        "itemToCount": {
          "$ref": "#/definitions/v1Selector",
          "description": "item_to_count is a selector to identify the repeated thing that needs to be counted."
        },
        "maximumExpectedItems": {
          "type": "string",
          "format": "int64",
          "description": "maximum_expected_items is the largest possible umber of things, eg 5/5 stars could have 5 star images to count."
        },
        "maximumStarValue": {
          "type": "string",
          "format": "int64",
          "description": "maximum_star_value is used to normalize the number of counted things down to a star value.\neg. there are a max of 10 images, each of 1/2 stars, with a maximum star value of 5, it will normalise 7/10 to 3.5/5."
        }
      },
      "description": "CountStarsConfig contains configuration necessary to run the CALLBACK_COUNT_STARS callback.\nThe selector on the rule should select the element that contains the elements that need to be counted."
    },
    "v1CreateCollectorResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the newly created collector"
        }
      }
    },
    "v1DeleteScraperRequestType": {
      "type": "string",
      "enum": [
        "DELETE_SCRAPER_REQUEST_TYPE_UNSPECIFIED",
        "DELETE_SCRAPER_REQUEST_TYPE_LISTING",
        "DELETE_SCRAPER_REQUEST_TYPE_REVIEW",
        "DELETE_SCRAPER_REQUEST_TYPE_LISTING_JSON",
        "DELETE_SCRAPER_REQUEST_TYPE_REVIEW_COMMENTS",
        "DELETE_SCRAPER_REQUEST_TYPE_REVIEW_JSON",
        "DELETE_SCRAPER_REQUEST_TYPE_REVIEW_RAW"
      ],
      "default": "DELETE_SCRAPER_REQUEST_TYPE_UNSPECIFIED"
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string"
        },
        "eventId": {
          "type": "string"
        },
        "happenedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labelKey": {
          "type": "string"
        },
        "initiatorId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/v1ConversationChannel"
        },
        "originatedAt": {
          "$ref": "#/definitions/v1PlatformLocation"
        },
        "type": {
          "$ref": "#/definitions/v1EventType"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValuePair"
          }
        }
      }
    },
    "v1GetListingScrapingStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1ScrapingStatus"
        }
      }
    },
    "v1GetMultiKeyMetricsListResponse": {
      "type": "object",
      "properties": {
        "sourceAndEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiKeyMetricsListResponseSourceAndEvents"
          }
        }
      }
    },
    "v1GetMultiMostRecentLockdownResponse": {
      "type": "object",
      "properties": {
        "lockdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Lockdown"
          }
        }
      }
    },
    "v1GetMultiSourceTierResponse": {
      "type": "object",
      "properties": {
        "tiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceTier"
          }
        }
      }
    },
    "v1GetSourceTierResponse": {
      "type": "object",
      "properties": {
        "tier": {
          "$ref": "#/definitions/v1SourceTier"
        }
      }
    },
    "v1Header": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "A key/value Header"
    },
    "v1Incident": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of an incident"
        },
        "scraperType": {
          "$ref": "#/definitions/web_crawlerv1Type",
          "title": "type of scraper that caused the incident"
        },
        "sourceId": {
          "type": "string",
          "title": "source_id of the listing/review source"
        },
        "listingUrl": {
          "type": "string",
          "title": "URL of webpage being scraped"
        },
        "error": {
          "type": "string",
          "title": "Error message"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when the incident was created"
        },
        "workflowId": {
          "type": "string",
          "title": "ID of Temporal Workflow during which the incident was created"
        },
        "content": {
          "type": "string",
          "title": "Content scraped when the incident was created"
        }
      },
      "title": "Incident is the representation of an error that occurred while scraping a webpage"
    },
    "v1ListCollectorResponse": {
      "type": "object",
      "properties": {
        "collector": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Collector"
          },
          "title": "The collectors matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListIncidentResponse": {
      "type": "object",
      "properties": {
        "incidents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Incident"
          },
          "title": "The incidents matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListLockdownResponse": {
      "type": "object",
      "properties": {
        "lockdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Lockdown"
          },
          "title": "The lockdowns matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListProxyAddressesResponse": {
      "type": "object",
      "properties": {
        "proxyGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListProxyAddressesResponseProxyGroup"
          }
        }
      }
    },
    "v1ListScraperResponse": {
      "type": "object",
      "properties": {
        "scraper": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Scraper"
          },
          "title": "The scrapers matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListSourceTiersForTierIDResponse": {
      "type": "object",
      "properties": {
        "sourceTiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceTier"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1Listing": {
      "type": "object",
      "properties": {
        "listingIdentifier": {
          "$ref": "#/definitions/v1ListingIdentifier",
          "title": "Unique identifier of the listing"
        },
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "The source that the listing belongs to"
        },
        "nap": {
          "$ref": "#/definitions/v1NAP",
          "title": "NAP data of the listing"
        },
        "url": {
          "type": "string",
          "title": "The URL of the listing"
        },
        "domain": {
          "type": "string",
          "title": "The domain of the listing URL"
        },
        "matchQuality": {
          "$ref": "#/definitions/ListingMatchQuality",
          "title": "Match quality details about the listing"
        },
        "score": {
          "type": "string",
          "format": "int64",
          "title": "The score of the listing"
        },
        "userSubmitted": {
          "type": "boolean",
          "title": "Indicates if the listing was submitted by the user"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicates if the listing was marked verified by the user"
        },
        "missing": {
          "type": "boolean",
          "title": "Indicates if the listing is missing from the sources site"
        },
        "matches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of which fields match the businesses NAP data (companyName, city, state)"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the listing was created in the system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the listing was last modified by the system"
        },
        "lastScraped": {
          "type": "string",
          "format": "date-time",
          "title": "When the listing was last scraped by the system"
        },
        "lastUserRefresh": {
          "type": "string",
          "format": "date-time",
          "title": "When the listing was refreshed by the user"
        },
        "missingOn": {
          "type": "string",
          "format": "date-time",
          "title": "When the listing was found missing by the system"
        },
        "externalId": {
          "type": "string",
          "title": "The external ID of the listing"
        }
      }
    },
    "v1Lockdown": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the lockdown"
        },
        "scraperType": {
          "$ref": "#/definitions/web_crawlerv1Type",
          "title": "type of scraper that caused the incident"
        },
        "sourceId": {
          "type": "string",
          "title": "source_id of the listing/review source"
        },
        "level": {
          "$ref": "#/definitions/LockdownLevel",
          "title": "the lockdown level"
        },
        "userId": {
          "type": "string",
          "title": "the user that created the lockdown"
        },
        "message": {
          "type": "string",
          "title": "the error message or reason that resulted in the lockdown"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when the lockdown was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when the lockdown was updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when the lockdown was deleted"
        },
        "state": {
          "$ref": "#/definitions/LockdownState",
          "title": "state of a lockdown creation"
        }
      }
    },
    "v1OnHTML": {
      "type": "object",
      "properties": {
        "selector": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "handler": {
          "$ref": "#/definitions/v1OnHTMLHandler"
        },
        "action": {
          "$ref": "#/definitions/v1Action"
        },
        "attribute": {
          "type": "string"
        }
      },
      "description": "OnHTML callback is handled just after onResponse. Used for custom handling of html selectors."
    },
    "v1OnHTMLHandler": {
      "type": "string",
      "enum": [
        "ON_HTML_HANDLER_NOT_SPECIFIED",
        "ON_HTML_HANDLER_IS_VALID_LISTING",
        "ON_HTML_HANDLER_FOLLOW_URL",
        "ON_HTML_HANDLER_URL",
        "ON_HTML_HANDLER_CRAWL_FOLLOW"
      ],
      "default": "ON_HTML_HANDLER_NOT_SPECIFIED"
    },
    "v1OnResponse": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "handler": {
          "$ref": "#/definitions/v1OnResponseHandler"
        },
        "action": {
          "$ref": "#/definitions/v1Action"
        }
      },
      "title": "OnResponse callback is the first callback to fire. Used for custom handling of scrape events"
    },
    "v1OnResponseHandler": {
      "type": "string",
      "enum": [
        "ON_RESPONSE_HANDLER_NOT_SPECIFIED",
        "ON_RESPONSE_HANDLER_URL"
      ],
      "default": "ON_RESPONSE_HANDLER_NOT_SPECIFIED"
    },
    "v1OnScraped": {
      "type": "object",
      "properties": {
        "handler": {
          "$ref": "#/definitions/v1OnScrapedHandler"
        },
        "action": {
          "$ref": "#/definitions/v1Action"
        }
      },
      "title": "OnScraped callback is the last callback to fire. The Storage handler allows the raw response to be uploaded to\na cloud storage bucket"
    },
    "v1OnScrapedHandler": {
      "type": "string",
      "enum": [
        "ON_SCRAPED_HANDLER_NOT_SPECIFIED",
        "ON_SCRAPED_HANDLER_STORAGE"
      ],
      "default": "ON_SCRAPED_HANDLER_NOT_SPECIFIED"
    },
    "v1OnXML": {
      "type": "object",
      "properties": {
        "xpathQuery": {
          "type": "string"
        },
        "regexpMatch": {
          "type": "string"
        },
        "handler": {
          "$ref": "#/definitions/v1OnXMLHandler"
        },
        "action": {
          "$ref": "#/definitions/v1Action"
        }
      },
      "title": "OnXMl callback would typically be used for handling a sitemap"
    },
    "v1OnXMLHandler": {
      "type": "string",
      "enum": [
        "ON_XML_HANDLER_NOT_SPECIFIED",
        "ON_XML_HANDLER_SITEMAP",
        "ON_XML_HANDLER_URL"
      ],
      "default": "ON_XML_HANDLER_NOT_SPECIFIED"
    },
    "v1Options": {
      "type": "object",
      "properties": {
        "maxDepth": {
          "type": "string",
          "format": "int64"
        },
        "allowedDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parseHttpErrorResponse": {
          "type": "boolean"
        },
        "disallowedDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "urlFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowUrlRevisit": {
          "type": "boolean"
        },
        "maxBodySize": {
          "type": "string",
          "format": "int64"
        },
        "cacheDir": {
          "type": "string"
        },
        "ignoreRobotsTxt": {
          "type": "boolean"
        },
        "async": {
          "type": "boolean"
        },
        "detectCharset": {
          "type": "boolean"
        },
        "disableCompression": {
          "type": "boolean",
          "description": "disable_compression is used to set the DisableCompression on the http.Transport object for when a collector makes requests to get site maps."
        },
        "concurrentRequestLimit": {
          "type": "number",
          "format": "double",
          "title": "ConcurrentRequestLimit limits the requests per second that can be made to a source"
        },
        "waitUntil": {
          "$ref": "#/definitions/OptionsTransportWaitUntil"
        },
        "disableImages": {
          "type": "boolean",
          "title": "When true the chrome proxy will skip image resources"
        },
        "allowCors": {
          "type": "boolean",
          "title": "When true proxy will allow CORS requests"
        },
        "windowDataSelector": {
          "type": "string",
          "title": "window_data_selector lets us grab data (usually JSON) from the window object instead of return HTML this will return the data you select"
        },
        "sitemapUsePuppeteer": {
          "type": "boolean",
          "title": "sitemap_use_puppeteer tells the colly collector to use a puppeteer transport when we are running with a COLLECT action"
        },
        "disableAdblock": {
          "type": "boolean",
          "title": "Disable Adblock when creating puppeteer browser"
        },
        "waitForSelector": {
          "type": "string",
          "title": "Wait for a selector to render before downloading a webpage"
        },
        "waitSecondsAfterLoad": {
          "type": "string",
          "format": "int64",
          "title": "The number of seconds to wait after the webpage is loaded so that more information could be loaded and saved"
        },
        "selectorToClick": {
          "type": "string",
          "title": "The selector of button or field that will be clicked on the webpage to load more information"
        },
        "hasRedirection": {
          "type": "boolean",
          "title": "Indicates the webpage will redirect"
        },
        "navigationTimeout": {
          "type": "string",
          "format": "int64",
          "title": "The number of seconds to wait for the webpage to timeout"
        },
        "openShadowDom": {
          "type": "boolean",
          "title": "Allows scraping from closed shadow DOM"
        },
        "waitSecondsAfterClick": {
          "type": "string",
          "format": "int64",
          "title": "The number of seconds to wait after clicking selector"
        },
        "waitSecondsAfterBeingBlocked": {
          "type": "string",
          "format": "int64",
          "title": "The number of seconds to wait after being blocked"
        }
      },
      "title": "Options to be used when registering a new collector"
    },
    "v1Regex": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/RegexPatternMatchType"
        },
        "groupIndex": {
          "type": "string",
          "format": "int64",
          "title": "Only set group index when pattern match type is group"
        }
      }
    },
    "v1Review": {
      "type": "object",
      "properties": {
        "reviewId": {
          "$ref": "#/definitions/v1ReviewIdentifier",
          "title": "Identifier of the review"
        },
        "listingId": {
          "type": "string",
          "title": "The listing id that the review belongs to"
        },
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "The source that the review belongs to"
        },
        "externalId": {
          "type": "string",
          "title": "The sources identifier of the review"
        },
        "content": {
          "type": "string",
          "title": "The author's review content body"
        },
        "title": {
          "type": "string",
          "title": "A short description of the review"
        },
        "rating": {
          "type": "string",
          "title": "The rating of the review"
        },
        "scaledStars": {
          "type": "string",
          "format": "int64",
          "title": "The scaled stars of the review"
        },
        "originalStars": {
          "type": "number",
          "format": "double",
          "title": "The original stars of the review"
        },
        "url": {
          "type": "string",
          "title": "The URL of the review"
        },
        "domain": {
          "type": "string",
          "title": "The domain of the review URL"
        },
        "reviewer": {
          "$ref": "#/definitions/v1Reviewer",
          "title": "Details about the reviewer"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "When the review was published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the review was created in the system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the review was last modified by the system"
        },
        "actionStatus": {
          "$ref": "#/definitions/v1ReviewActionStatus",
          "title": "Indicates whether any action is required or has been taken on the review"
        },
        "isPublished": {
          "type": "boolean",
          "title": "Indicates if the review is published"
        },
        "isSharedByReviewer": {
          "type": "boolean",
          "title": "Indicates if the review has been shared by the reviewer"
        },
        "newComment": {
          "type": "boolean",
          "title": "Indicates if there is a new comment on the review"
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewComment"
          },
          "title": "Comments on the review"
        },
        "hasAccuratePublished": {
          "type": "boolean",
          "title": "Core puts the published time in the middle of the UTC day if it's unsure"
        },
        "recommendation": {
          "$ref": "#/definitions/v1Recommendation",
          "title": "The review's facebook recommendation value"
        },
        "lastFailedReviewCommentCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp for a failed review response"
        },
        "lastFailedReviewCommentReason": {
          "type": "string",
          "title": "Reason why failed review response failed to post"
        },
        "lastFailedReviewCommentText": {
          "type": "string",
          "title": "The review response text that failed to post"
        },
        "edited": {
          "type": "string",
          "format": "date-time",
          "title": "The time a review was edited"
        },
        "deletedStatus": {
          "$ref": "#/definitions/v1ReviewDeletedStatus",
          "title": "The deleted status of a review"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The time a review was deleted"
        },
        "thirdPartyPublishedStatus": {
          "$ref": "#/definitions/v1ThirdPartyPublishedStatus",
          "title": "The status of whether the review is a third party published review"
        },
        "sourceName": {
          "type": "string",
          "title": "The review source name"
        }
      },
      "title": "Represents a Review in the ReviewService"
    },
    "v1ReviewComment": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "string",
          "title": "Identifier of the comment"
        },
        "name": {
          "type": "string",
          "title": "Name of the commenter"
        },
        "text": {
          "type": "string",
          "title": "Text of the comment"
        },
        "email": {
          "type": "string",
          "title": "Email address of the person making the comment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Creation date of the comment"
        },
        "externalId": {
          "type": "string",
          "title": "External id of the comment"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "Modified date of the comment"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "Published date of the comment"
        },
        "postedByOwner": {
          "type": "boolean",
          "title": "Whether this comment is a post by the owner of the listing being reviewed"
        },
        "postedByDigitAgent": {
          "type": "boolean",
          "title": "Whether this comment is a post by the owner of the listing being reviewed"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Business identifier of the comment"
        },
        "reviewId": {
          "type": "string",
          "title": "Review identifier of the comment"
        }
      },
      "title": "Represents a ReviewComment in the ReviewService"
    },
    "v1Rule": {
      "type": "object",
      "properties": {
        "variablePath": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "comparison": {
          "type": "string"
        }
      }
    },
    "v1SchemaSelector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Essentially the \"key\" of a json document. For structured data this typically corresponds with @type"
        },
        "value": {
          "type": "string",
          "title": "The string value of the key field that we are looking for, eg. @type: \"Hotel\""
        }
      },
      "title": "SchemaSelector is used to select data from a JSON document"
    },
    "v1ScrapeListingResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      }
    },
    "v1ScrapeListingsResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string",
          "description": "The ID of the cadence workflow that was started."
        }
      }
    },
    "v1ScrapeReviewsResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      }
    },
    "v1Scraper": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/web_crawlerv1Type"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Rule"
          }
        },
        "status": {
          "$ref": "#/definitions/v1ScraperStatus",
          "description": "The current status of the scraper."
        },
        "reviewResetTime": {
          "type": "string",
          "format": "date-time",
          "description": "When specified, all reviews for listings last scraped before this date will be deleted and re-scraped from scratch."
        }
      },
      "title": "Scraper contains the rules to apply to an html fragment to extract information"
    },
    "v1ScraperStatus": {
      "type": "string",
      "enum": [
        "SCRAPER_STATUS_ACTIVE",
        "SCRAPER_STATUS_MANUALLY_STOPPED"
      ],
      "default": "SCRAPER_STATUS_ACTIVE",
      "title": "- SCRAPER_STATUS_ACTIVE: Status when a scraper is ready to scrape things\n - SCRAPER_STATUS_MANUALLY_STOPPED: Status when a scraper has been deliberately stopped by a person"
    },
    "v1ScrapingStatus": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64",
          "description": "The source that this status is for."
        },
        "isScraping": {
          "$ref": "#/definitions/ScrapingStatusIsScraping",
          "title": "Is the source currently being re-scraped?"
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "title": "When did this action start?"
        },
        "finished": {
          "type": "string",
          "format": "date-time",
          "title": "When did this action finish?"
        },
        "startedBy": {
          "type": "string",
          "title": "Who started the re-scrape of all the listings?"
        }
      }
    },
    "v1SearchForListingResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      }
    },
    "v1Selector": {
      "type": "object",
      "properties": {
        "selector": {
          "type": "string",
          "title": "The path to the piece of data you want to get from the page, eg. \"div[class=\\\"bold\\\"]\""
        },
        "attribute": {
          "type": "string",
          "description": "The name of the attribute on the selector you want to get data out of.\nExample:\n<div class=\"bold\" data=\"Interesting stuff to scrape\">Other stuff</div>\nPassing in an attribute of \"data\" would get \"Interesting stuff to scrape\" out of the page."
        },
        "toTake": {
          "$ref": "#/definitions/v1ToTake",
          "title": "what nodes we want to take"
        }
      },
      "title": "Selector is used to select data from an html fragment"
    },
    "v1SourceTier": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "tierId": {
          "type": "string"
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "v1StartCollectorResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      }
    },
    "v1SubmitPotentialListingResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        }
      }
    },
    "v1TestScraperResponse": {
      "type": "object",
      "properties": {
        "review": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Review"
          }
        },
        "listing": {
          "$ref": "#/definitions/v1Listing"
        },
        "responseMessage": {
          "type": "string",
          "title": "TestScraper message"
        }
      }
    },
    "v1ToTake": {
      "type": "object",
      "properties": {
        "take": {
          "$ref": "#/definitions/ToTakeTake",
          "title": "What node we want to take"
        },
        "seperator": {
          "type": "string",
          "title": "If we are taking all how we want to separate them"
        },
        "node": {
          "$ref": "#/definitions/ToTakeNodePosition",
          "title": "Node to select"
        }
      },
      "title": "ToTake is what node returned from the selector we want to take"
    },
    "web_crawlerv1Type": {
      "type": "string",
      "enum": [
        "TYPE_NOT_SPECIFIED",
        "TYPE_LISTING",
        "TYPE_REVIEW",
        "TYPE_LISTING_JSON",
        "TYPE_REVIEW_COMMENTS",
        "TYPE_REVIEW_JSON",
        "TYPE_REVIEW_RAW"
      ],
      "default": "TYPE_NOT_SPECIFIED",
      "title": "Type for differentiation between review and listing scrapers"
    },
    "NamespaceAccountGroupNamespace": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "NamespacePartnerNamespace": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "NamespaceSystemNamespace": {
      "type": "object",
      "title": "SystemNamespace is a namespace used to set the resource as belonging to the system (can't be overridden)\nonly Vendasta admins can create and modify assistants/connections in this namespace"
    },
    "OpenAIRealtimeConfigTurnDetection": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "number",
          "format": "double",
          "description": "How loud the human must speak to trigger the assistant. Valid values are between 0.0 and 1.0. Higher values indicate the human must speak louder."
        },
        "prefixPadding": {
          "type": "integer",
          "format": "int32",
          "description": "The number of milliseconds prior to the human party speaking which are included in the audio passed to the assistant."
        },
        "silenceDuration": {
          "type": "integer",
          "format": "int32",
          "description": "The number of milliseconds of silence which indicates the end of the human party speaking."
        }
      },
      "title": "TurnDetection contains settings for fine tuning VAD (Turn Detection) when using OpenAI's realtime model"
    },
    "v1alpha1CallRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the goal"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the goal belongs to"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the creation of the call record"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the last update to the call record"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the deletion of the call record"
        },
        "transcript": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1TranscriptMessage"
          },
          "title": "The transcript of the call"
        },
        "audioRecordingUrl": {
          "type": "string",
          "title": "A URL to an audio recording of the call"
        },
        "callType": {
          "$ref": "#/definitions/v1alpha1CallType",
          "title": "The type of the call"
        },
        "fromPhoneNumber": {
          "type": "string",
          "title": "The phone number of the participant who placed the phone call"
        },
        "toPhoneNumber": {
          "type": "string",
          "title": "The phone number of the participant who received the phone call"
        },
        "callDuration": {
          "type": "string",
          "format": "int64",
          "title": "The duration of the call in nanoseconds"
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1Metadata",
          "title": "Metadata associated with the call"
        }
      }
    },
    "v1alpha1CallType": {
      "type": "string",
      "enum": [
        "CALL_TYPE_INVALID",
        "CALL_TYPE_INBOUND",
        "CALL_TYPE_OUTBOUND"
      ],
      "default": "CALL_TYPE_INVALID"
    },
    "v1alpha1DeepgramConfig": {
      "type": "object",
      "properties": {
        "voice": {
          "type": "string"
        }
      }
    },
    "v1alpha1FunctionCall": {
      "type": "object",
      "properties": {
        "functionId": {
          "type": "string",
          "title": "The ID of the function which was called"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the called function belongs to"
        },
        "name": {
          "type": "string",
          "title": "The name of the function which was called"
        },
        "arguments": {
          "type": "string",
          "title": "The arguments which were passed to the function, as stringified JSON"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "The metadata response by the model provider"
        },
        "calledAt": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of when the function was called"
        }
      },
      "title": "A record of a function called by an AI"
    },
    "v1alpha1GetCallRecordResponse": {
      "type": "object",
      "properties": {
        "callRecord": {
          "$ref": "#/definitions/v1alpha1CallRecord",
          "title": "The call record that matches the supplied ID"
        }
      }
    },
    "v1alpha1GetCallUsageResponse": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "The starting time of the range of the usage"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "title": "The ending time of the range of the usage"
        },
        "totalDuration": {
          "type": "string",
          "format": "int64",
          "title": "The duration of all calls within the response range in nanoseconds"
        }
      }
    },
    "v1alpha1KeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1Metadata": {
      "type": "object",
      "properties": {
        "voiceConfig": {
          "$ref": "#/definitions/v1alpha1VoiceConfig",
          "title": "The configuration used by the ai-assistant that handled the call (if any)"
        },
        "assistantId": {
          "type": "string",
          "title": "The ID of the ai-assistant that handled the call (if any)"
        },
        "functionCalls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FunctionCall"
          },
          "title": "A record of the functions that were called during the call"
        }
      }
    },
    "v1alpha1Namespace": {
      "type": "object",
      "properties": {
        "accountGroupNamespace": {
          "$ref": "#/definitions/NamespaceAccountGroupNamespace"
        },
        "partnerNamespace": {
          "$ref": "#/definitions/NamespacePartnerNamespace"
        },
        "adminNamespace": {
          "$ref": "#/definitions/NamespaceAdminNamespace"
        }
      }
    },
    "v1alpha1OpenAIRealtimeConfig": {
      "type": "object",
      "properties": {
        "voice": {
          "type": "string",
          "description": "The voice ID to use for OpenAI text-to-speech."
        },
        "turnDetection": {
          "$ref": "#/definitions/OpenAIRealtimeConfigTurnDetection"
        }
      }
    },
    "v1alpha1Participant": {
      "type": "string",
      "enum": [
        "PARTICIPANT_INVALID",
        "PARTICIPANT_FROM",
        "PARTICIPANT_TO"
      ],
      "default": "PARTICIPANT_INVALID"
    },
    "v1alpha1TranscriptMessage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the transcript message. Note: This may include the full text response of an AI response even if it was actually interrupted during the call."
        },
        "itemId": {
          "type": "string",
          "description": "The ID of the OpenAI conversation message item that the transcript message is associated with."
        },
        "participant": {
          "$ref": "#/definitions/v1alpha1Participant",
          "description": "The participant that the transcript message is associated with."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the transcript of the message was created."
        }
      }
    },
    "v1alpha1VendorModel": {
      "type": "string",
      "enum": [
        "VENDOR_MODEL_UNSPECIFIED",
        "VENDOR_MODEL_OPEN_AI_REALTIME",
        "VENDOR_MODEL_DEEPGRAM"
      ],
      "default": "VENDOR_MODEL_UNSPECIFIED"
    },
    "v1alpha1VoiceConfig": {
      "type": "object",
      "properties": {
        "vendorModel": {
          "$ref": "#/definitions/v1alpha1VendorModel"
        },
        "openaiRealtimeConfig": {
          "$ref": "#/definitions/v1alpha1OpenAIRealtimeConfig"
        },
        "deepgramConfig": {
          "$ref": "#/definitions/v1alpha1DeepgramConfig"
        }
      }
    },
    "CreateSecondaryCategoryRequestMode": {
      "type": "string",
      "enum": [
        "CREATE_SECONDARY_CATEGORY_REQUEST_MODE_ADD_MAPPING_TO_PRIMARY_REQUIRED",
        "CREATE_SECONDARY_CATEGORY_REQUEST_MODE_ADD_MAPPING_TO_PRIMARY_IF_NONE_EXIST",
        "CREATE_SECONDARY_CATEGORY_REQUEST_MODE_DO_NOT_ADD_MAPPING_TO_PRIMARY"
      ],
      "default": "CREATE_SECONDARY_CATEGORY_REQUEST_MODE_ADD_MAPPING_TO_PRIMARY_REQUIRED"
    },
    "v1AuditFields": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": {
          "type": "string"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "deletedBy": {
          "type": "string"
        }
      }
    },
    "v1CategorySource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "ID of Secondary Business Category Source like Vendasta, Factual, Uberall..."
        }
      },
      "title": "Definition of Secpondary Category Source"
    },
    "v1CreatePrimaryCategoryResponse": {
      "type": "object",
      "properties": {
        "primaryCategoryId": {
          "type": "string",
          "title": "ID (key field) (always required) (cannot be updated)"
        }
      }
    },
    "v1CreateSecondaryCategoryResponse": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "Source ID (required)"
        },
        "secondaryCategoryId": {
          "type": "string",
          "title": "Secondary Category ID (required)"
        }
      }
    },
    "v1FieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    },
    "v1GetAllSourcesResponse": {
      "type": "object",
      "properties": {
        "source": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CategorySource"
          }
        }
      }
    },
    "v1GetPrimaryCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1PrimaryCategory"
        }
      }
    },
    "v1GetSecondaryCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1SecondaryCategory"
        }
      }
    },
    "v1ListPrimaryCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PrimaryCategory"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListSecondaryCategoriesResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SecondaryCategory"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1PrimaryCategory": {
      "type": "object",
      "properties": {
        "primaryCategoryId": {
          "type": "string",
          "title": "ID (key field) (always required) (cannot be updated)"
        },
        "name": {
          "type": "string",
          "title": "Human readable name category (required)"
        },
        "description": {
          "type": "string",
          "description": "Additional information or notes about the category to help people know when to use it."
        },
        "isSelectable": {
          "type": "boolean",
          "description": "If the category is selectable for new accounts. Some categories are only verticles, and some will be depricated."
        },
        "isVertical": {
          "type": "boolean",
          "description": "If the category is a top level vertical, that other categories can reference."
        },
        "verticalId": {
          "type": "string",
          "title": "The ID of the vertical the category is in (optional)"
        },
        "categoryMappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SecondaryCategoryMappings"
          },
          "description": "Mappings to all of the Secondary Categories by source. Can only have one entry per source."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Is soft deleted, cannot be added, and in general will not be shown."
        },
        "auditFields": {
          "$ref": "#/definitions/v1AuditFields",
          "title": "Audit fields"
        },
        "verticalName": {
          "type": "string",
          "title": "Looked up value of the vertical (read only, cannot be updated)"
        }
      }
    },
    "v1PrimaryCategoryCreateUpdate": {
      "type": "object",
      "properties": {
        "primaryCategoryId": {
          "type": "string",
          "title": "ID (key field) (always required) (cannot be updated)"
        },
        "name": {
          "type": "string",
          "title": "Human readable name category (required on create)"
        },
        "description": {
          "type": "string",
          "description": "Additional information or notes about the category to help people know when to use it."
        },
        "isSelectable": {
          "type": "boolean",
          "description": "If the category is selectable for new accounts. Some categories are only verticles, and some will be depricated."
        },
        "isVertical": {
          "type": "boolean",
          "description": "If the category is a top level vertical, that other categories can reference."
        },
        "verticalId": {
          "type": "string",
          "title": "The ID of the vertical the category is in, may be blank"
        }
      },
      "title": "The fields of the primary category availiable in create or update calls"
    },
    "v1SecondaryCategory": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "ID of source (key field) (required) (cannot be updated)"
        },
        "secondaryCategoryId": {
          "type": "string",
          "title": "ID of secondary category (key field) (required) (cannot be updated)"
        },
        "name": {
          "type": "string",
          "title": "Human readable name of secondary category (required)"
        },
        "primaryCategoryId": {
          "type": "string",
          "description": "Which primary category it maps back to, can only be one."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Is soft deleted, cannot be added, and in general will not be shown."
        },
        "auditFields": {
          "$ref": "#/definitions/v1AuditFields",
          "title": "Audit fields"
        },
        "primaryCategoryName": {
          "type": "string",
          "title": "Looked up value of the primary category (read only, cannot be updated)"
        }
      },
      "title": "Secondary Category"
    },
    "v1SecondaryCategoryMappings": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "ID of secondary business category source (key field on SecondaryCategory)"
        },
        "secondaryCategoryId": {
          "type": "string",
          "title": "ID of secondary business category (key field on SecondaryCategory)"
        },
        "secondaryCategoryName": {
          "type": "string",
          "title": "Looked up value of the secondary category name (read only, cannot be updated)"
        }
      }
    },
    "v1SecondarySortField": {
      "type": "string",
      "enum": [
        "SECONDARY_SORT_FIELD_NAME",
        "SECONDARY_SORT_FIELD_SECONDARY_CATEGORY_ID"
      ],
      "default": "SECONDARY_SORT_FIELD_NAME",
      "description": "The field to sort a result set on."
    },
    "v1SecondarySortOptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1SecondarySortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_UNSET",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_UNSET"
    },
    "v1SortField": {
      "type": "string",
      "enum": [
        "SORT_FIELD_UNSET",
        "SORT_FIELD_NAME",
        "SORT_FIELD_FULL_NAME",
        "SORT_FIELD_SCORE",
        "SORT_FIELD_EXTERNAL_ID",
        "SORT_FIELD_CREATED",
        "SORT_FIELD_UPDATED"
      ],
      "default": "SORT_FIELD_UNSET"
    },
    "v1SortOptions": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1SortField"
        },
        "direction": {
          "$ref": "#/definitions/v1SortDirection"
        }
      }
    },
    "GetProfitAndLossResponseSection": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetProfitAndLossResponseSectionRow"
          },
          "title": "A list of rows"
        },
        "total": {
          "type": "string",
          "title": "The total value for all rows"
        }
      },
      "title": "Section of data in the profit and loss report"
    },
    "GetProfitAndLossResponseSectionRow": {
      "type": "object",
      "properties": {
        "column": {
          "$ref": "#/definitions/RowColumnData"
        }
      },
      "title": "A row of data for the section"
    },
    "RowColumnData": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "product/service name"
        },
        "value": {
          "type": "string",
          "title": "income/expense values"
        }
      },
      "title": "The values in the row for the section"
    },
    "v1Company": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "Company information from QuickBooks"
    },
    "v1ConnectionInfo": {
      "type": "object",
      "properties": {
        "facebook": {
          "type": "boolean"
        },
        "instagram": {
          "type": "boolean"
        },
        "linkedin": {
          "type": "boolean"
        },
        "twitter": {
          "type": "boolean"
        }
      }
    },
    "v1GetAgingSummaryResponse": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "title": "Currency the report is in"
        },
        "row": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetAgingSummaryResponseRow"
          },
          "title": "A list of rows"
        }
      },
      "title": "Returns the data from the aging summary"
    },
    "v1GetAgingSummaryResponseRow": {
      "type": "object",
      "properties": {
        "columnValue": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The values in the row for the customer\ne.g., customer name, owing values for aging periods, owing total"
        }
      },
      "title": "A row of data for a QB customer"
    },
    "v1GetAuthorizationCodeRedirectURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The URL to redirect the user to  acquire authorization"
        }
      }
    },
    "v1GetConnectedCompanyResponse": {
      "type": "object",
      "properties": {
        "company": {
          "$ref": "#/definitions/v1Company"
        },
        "connectionInfo": {
          "$ref": "#/definitions/v1ConnectionInfo",
          "title": "The connection info for this company"
        }
      },
      "title": "Returns the QuickBooks Company information"
    },
    "v1GetProfitAndLossResponse": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "title": "Currency the report is in"
        },
        "income": {
          "$ref": "#/definitions/GetProfitAndLossResponseSection",
          "title": "Section of data for the income"
        },
        "expenses": {
          "$ref": "#/definitions/GetProfitAndLossResponseSection",
          "title": "Section of data for the expenses"
        }
      },
      "title": "Returns the data from the profit and loss report"
    },
    "v1AppConfig": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "showAdvancedFeatures": {
          "type": "boolean"
        },
        "showIncludedTemplates": {
          "type": "boolean"
        }
      }
    },
    "v1BackfillResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1GetAppConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1AppConfig"
        }
      }
    },
    "v1GetDiscrepancyDataResponse": {
      "type": "object",
      "properties": {
        "discrepancyData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetHealthCheckResponse": {
      "type": "object",
      "properties": {
        "siteHealths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteHealths"
          },
          "title": "The cursor to use for the next healthcheckData"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        }
      }
    },
    "v1GetMultiSiteResponse": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WordPressSite"
          }
        }
      }
    },
    "v1GetPluginUpdatesCountResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1HealthCheckValues": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SearchFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pluginUpdating": {
          "type": "boolean",
          "title": "filter sites when its plugins are not the latest version"
        },
        "themeUpdating": {
          "type": "boolean",
          "title": "filter sites when its theme is not the latest version"
        },
        "coreUpdating": {
          "type": "boolean",
          "title": "filter sites when its core is not the latest version"
        },
        "multisite": {
          "type": "boolean",
          "title": "filter the multisites"
        }
      }
    },
    "v1SearchPidHealthResponse": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteHealth"
          }
        },
        "totalResults": {
          "type": "string",
          "format": "int64"
        },
        "totalUpSites": {
          "type": "string",
          "format": "int64"
        },
        "totalDownSites": {
          "type": "string",
          "format": "int64"
        },
        "totalDeactivatedSites": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1SearchableField": {
      "type": "string",
      "enum": [
        "SEARCHABLE_FIELD_ACCOUNT_ID",
        "SEARCHABLE_FIELD_ACCOUNT_GROUP_NAME",
        "SEARCHABLE_FIELD_PRIMARY_DOMAIN"
      ],
      "default": "SEARCHABLE_FIELD_ACCOUNT_ID",
      "description": "All of the possible fields that can be searched against the search term."
    },
    "v1SiteHealth": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "currentHealth": {
          "type": "string"
        },
        "siteActivationStatus": {
          "type": "boolean"
        }
      }
    },
    "v1SiteHealths": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "primaryDomain": {
          "type": "string"
        },
        "healthCheckValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HealthCheckValues"
          }
        }
      }
    },
    "v1SubSiteInfo": {
      "type": "object",
      "properties": {
        "blogId": {
          "type": "string",
          "format": "int64",
          "description": "blog_id represents the unique integer id of the subsite."
        },
        "blogName": {
          "type": "string",
          "title": "blog_name represents the title description of the subsite added by user"
        },
        "path": {
          "type": "string",
          "title": "path represents the path of the subsite in url after domain"
        },
        "status": {
          "type": "string",
          "title": "subsite status"
        },
        "createdAt": {
          "type": "string",
          "title": "subsite created time"
        },
        "lastUpdated": {
          "type": "string",
          "title": "subsite last updated time"
        },
        "metadata": {
          "type": "string",
          "title": "subsite metadata"
        }
      }
    },
    "v1WordPressAddon": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "currentVersion": {
          "type": "string"
        },
        "latestVersion": {
          "type": "string"
        }
      }
    },
    "v1WordPressSite": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountGroupName": {
          "type": "string"
        },
        "primaryDomain": {
          "type": "string"
        },
        "pluginUpdates": {
          "type": "integer",
          "format": "int32",
          "title": "how many plugins are not the latest version"
        },
        "currentTheme": {
          "$ref": "#/definitions/v1WordPressAddon"
        },
        "currentCoreVersion": {
          "type": "string"
        },
        "latestCoreVersion": {
          "type": "string"
        },
        "filestoreSize": {
          "type": "integer",
          "format": "int32"
        },
        "databaseSize": {
          "type": "integer",
          "format": "int32"
        },
        "bandwidth": {
          "type": "integer",
          "format": "int32"
        },
        "visitors": {
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1Address": {
      "type": "object",
      "properties": {
        "firstLineAddress": {
          "type": "string",
          "title": "Address first line of the participant"
        },
        "secondLineAddress": {
          "type": "string",
          "title": "Address second line of the participant"
        },
        "city": {
          "type": "string",
          "title": "City of the participant"
        },
        "state": {
          "type": "string",
          "title": "State of the participant"
        },
        "country": {
          "type": "string",
          "title": "Country of the participant"
        },
        "zipCode": {
          "type": "string",
          "title": "Zip code of the participant"
        }
      }
    },
    "v1AssociatedUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "title": "The IAM.UserID for the user"
        }
      }
    },
    "v1BusinessData": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/v1Address"
        },
        "businessCategory": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "websiteUrl": {
          "type": "string"
        },
        "facebookUrl": {
          "type": "string"
        },
        "twitterUrl": {
          "type": "string"
        }
      }
    },
    "v1Connection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVerified": {
          "type": "boolean"
        },
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Connection"
          }
        },
        "ssid": {
          "type": "string"
        },
        "tokenIsBroken": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "mapsUri": {
          "type": "string"
        },
        "deleteUrl": {
          "type": "string"
        }
      }
    },
    "v1Contact": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string",
          "title": "A unique id for the contact"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The account group this contact belongs to"
        },
        "firstName": {
          "type": "string",
          "title": "The first name of the contact"
        },
        "lastName": {
          "type": "string",
          "title": "The last name of the contact"
        },
        "address": {
          "type": "string",
          "title": "The street address of where the contact is"
        },
        "city": {
          "type": "string",
          "title": "The city where the contact is"
        },
        "state": {
          "type": "string",
          "title": "The state where the contact is"
        },
        "country": {
          "type": "string",
          "title": "The country where the contact is"
        },
        "phone": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The phone number of the contact"
        },
        "email": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The email address of the contact"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the contact was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the contact was last modified"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The time the contact was deleted. Will be nil if the contact has not been deleted"
        },
        "origin": {
          "type": "string",
          "title": "The ID of the application that created the contact"
        },
        "originalId": {
          "type": "string",
          "title": "The customer specified ID from the origin system"
        },
        "syncedAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of appIDs that the contact can be synced with"
        },
        "permissionToContact": {
          "type": "boolean",
          "title": "This flag is true if the contact has explicitly opted-in to receive communication from the Business"
        }
      }
    },
    "v1CreateAndAssociateResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "Subject ID of the associated user (UID-)"
        },
        "unifiedUserId": {
          "type": "string",
          "title": "Unified User ID of the associated user (U-)"
        }
      }
    },
    "v1GetConnectionsInfoResponse": {
      "type": "object",
      "properties": {
        "connectionInfo": {
          "$ref": "#/definitions/v1ConnectionInfo"
        }
      }
    },
    "v1GetConnectionsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gmbv1Location"
          }
        }
      },
      "title": "Response for GetConnections"
    },
    "v1GetCreatePasswordUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The url to send the user to so that they can create their password"
        }
      }
    },
    "v1GetFacebookAppCheckerResponse": {
      "type": "object",
      "properties": {
        "reconnectGroup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReconnectGroup"
          }
        },
        "totalConnections": {
          "type": "string",
          "format": "int64"
        },
        "reconnectNeeded": {
          "type": "boolean"
        }
      }
    },
    "v1GetTrackerResponse": {
      "type": "object",
      "properties": {
        "trackers": {
          "$ref": "#/definitions/v1Trackers"
        }
      }
    },
    "v1GetTwitterAppCheckerResponse": {
      "type": "object",
      "properties": {
        "totalConnections": {
          "type": "string",
          "format": "int64"
        },
        "reconnectGroup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReconnectGroup"
          }
        }
      }
    },
    "v1GetWelcomeEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "templateHtml": {
          "type": "string",
          "description": "The welcome email template for user preview."
        }
      }
    },
    "v1ListUsersForBusinessResponse": {
      "type": "object",
      "properties": {
        "associatedUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssociatedUser"
          }
        }
      }
    },
    "v1ListUsersForBusinessesResponse": {
      "type": "object",
      "properties": {
        "associatedUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssociatedUser"
          }
        }
      }
    },
    "v1ReconnectGroup": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tokenBroken": {
          "type": "boolean"
        }
      }
    },
    "v1RegisterResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "v1RepeatedConnection": {
      "type": "object",
      "properties": {
        "connection": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Connection"
          }
        }
      },
      "title": "Based off of https://github.com/vendasta/galaxy/blob/a0745834c969fdc4f8d149aae3de830e69573ac9/apps/business-center-client/src/app/social-connections/social-connections.service.ts#L40-L49"
    },
    "v1SendReviewRequestToContactsFilters": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1SendReviewRequestToContactsResponse": {
      "type": "object"
    },
    "v1SetTrackerResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1Trackers": {
      "type": "object",
      "properties": {
        "welcomeVideo": {
          "type": "boolean"
        },
        "academy": {
          "type": "boolean"
        },
        "skippedGbpConnection": {
          "type": "boolean"
        },
        "skippedIntegrationConnection": {
          "type": "boolean"
        },
        "skippedWebchatSetup": {
          "type": "boolean"
        },
        "skippedSmsRegistration": {
          "type": "boolean"
        },
        "skippedMobileNotification": {
          "type": "boolean"
        }
      }
    },
    "CanActivateResponseInvalidResponse": {
      "type": "object",
      "properties": {
        "invalidAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "a list of the app ids that cannot be activated"
    },
    "CanActivateResponseSuccessResponse": {
      "type": "object",
      "title": "an empty success response if all of the app_ids in the request can be activated"
    },
    "GetMultiOrderFormsResponseOrderFormContainer": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "orderForm": {
          "$ref": "#/definitions/v1OrderForm"
        }
      },
      "title": "An order form container to associate an order form with a app_id"
    },
    "ListAuxiliaryDataFieldSchemaRequestFilters": {
      "type": "object",
      "properties": {
        "onlyArchived": {
          "type": "boolean"
        }
      }
    },
    "ListByMultiAppResponseAppEditions": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The app the editions belong to"
        },
        "editions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1Edition"
          },
          "title": "The list of editions for the app"
        }
      }
    },
    "LmiLmiCategories": {
      "type": "string",
      "enum": [
        "NOT_SET",
        "WEBSITE",
        "CONTENT_AND_EXPERIENCE",
        "LISTINGS",
        "REPUTATION",
        "SEO",
        "SOCIAL",
        "ADVERTISING"
      ],
      "default": "NOT_SET"
    },
    "OrderFormFieldOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Stores the valid set of options with display text and internal value. Both fields will always be populated"
    },
    "ProductProductCategories": {
      "type": "string",
      "enum": [
        "NOT_SET",
        "DIGITAL",
        "WEBSITE",
        "PRINT",
        "YELLOW_PAGES",
        "RADIO",
        "TELEVISION",
        "SEM",
        "SEO",
        "COMBINATION",
        "SOCIAL",
        "VENDASTA_APP",
        "OTHER",
        "VENDOR_APP"
      ],
      "default": "NOT_SET"
    },
    "RequiredParentDetails": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v2AppKey",
          "title": "An indentifier for the parent application"
        },
        "iconUrl": {
          "type": "string",
          "title": "The icon for the parent application"
        },
        "name": {
          "type": "string",
          "title": "The name for the parent application"
        },
        "tagline": {
          "type": "string",
          "title": "The tagline for the parent application"
        }
      },
      "title": "A struct representing basic information about a parent application"
    },
    "UpdateMultiEditionRequestEditionData": {
      "type": "object",
      "properties": {
        "editionId": {
          "type": "string",
          "title": "The edition to update"
        },
        "name": {
          "type": "string",
          "title": "The new name of the edition"
        },
        "pricing": {
          "$ref": "#/definitions/v1EditionPricing",
          "title": "The pricing information for the edition"
        }
      }
    },
    "marketplaceappsv1AppType": {
      "type": "string",
      "enum": [
        "APP_TYPE_APP",
        "APP_TYPE_ADDON",
        "APP_TYPE_UNSPECIFIED"
      ],
      "default": "APP_TYPE_APP"
    },
    "marketplaceappsv1Commitment": {
      "type": "object",
      "properties": {
        "initial": {
          "type": "string",
          "format": "int64",
          "title": "The initial commitment required (i.e. 12 month commitment at activation)"
        },
        "recurring": {
          "type": "string",
          "format": "int64",
          "title": "The commitment required after the initial commitment period (i.e. repeated periods of 6 month commitments after renewal)"
        }
      },
      "title": "Holds information about the commitment required by the vendor"
    },
    "marketplaceappsv1DeliveryMethod": {
      "type": "string",
      "enum": [
        "DELIVERY_METHOD_INVALID",
        "DELIVERY_METHOD_PRODUCT",
        "DELIVERY_METHOD_SERVICE"
      ],
      "default": "DELIVERY_METHOD_INVALID",
      "description": "- DELIVERY_METHOD_INVALID: DELIVERY_METHOD_INVALID means the delivery method has not been set\n - DELIVERY_METHOD_PRODUCT: DELIVERY_METHOD_PRODUCT is when the app provides a product to the customer\n - DELIVERY_METHOD_SERVICE: DELIVERY_METHOD_SERVICE is when the app providers a service to the customer",
      "title": "DeliverMethod tells us how the customer gets the app (e.g., product or service)"
    },
    "marketplaceappsv1Edition": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The app ID that the edition is for"
        },
        "editionId": {
          "type": "string",
          "title": "The unique ID of the edition"
        },
        "name": {
          "type": "string",
          "title": "The name of the edition"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the edition was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the edition was updated"
        },
        "billingId": {
          "type": "string",
          "title": "The Billing ID (SKU) of the edition"
        },
        "pricing": {
          "$ref": "#/definitions/v1EditionPricing",
          "title": "The pricing information for the edition"
        },
        "currency": {
          "type": "string",
          "title": "The currency of the edition"
        },
        "billingFrequency": {
          "type": "string",
          "title": "The billing frequency of the edition"
        },
        "release": {
          "$ref": "#/definitions/v1Release",
          "title": "The release (e.g. draft, published) of the edition"
        }
      },
      "title": "A representation of a specific edition of an app"
    },
    "marketplaceappsv1EditionIdentifier": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "the app id that the edition appears in"
        },
        "editionId": {
          "type": "string",
          "title": "id of the edition"
        }
      },
      "title": "EditionIdentifier is an identifier for an edition"
    },
    "marketplaceappsv1EndOfTrialActions": {
      "type": "string",
      "enum": [
        "DO_NOTHING"
      ],
      "default": "DO_NOTHING",
      "description": "- DO_NOTHING: Do nothing once trial ends",
      "title": "Indicating what to do once the trial has ended"
    },
    "marketplaceappsv1FrequentlyAskedQuestions": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      },
      "title": "Frequently asked questions"
    },
    "marketplaceappsv1GetMultiAppResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1MarketplaceApp"
          },
          "title": "A collection of apps"
        }
      }
    },
    "marketplaceappsv1MarketplaceApp": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the app"
        },
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version of the app"
        },
        "name": {
          "type": "string",
          "title": "The name of the app"
        },
        "icon": {
          "type": "string",
          "title": "Icon for the product"
        },
        "allowWhitelabel": {
          "type": "boolean",
          "title": "Allow white labelling"
        },
        "inDevelopment": {
          "type": "boolean",
          "title": "The app is currently in development"
        },
        "trialSupport": {
          "type": "boolean",
          "title": "Supports a trial state of the application"
        },
        "usesOrderForm": {
          "type": "boolean",
          "title": "Order form: the product uses order form"
        },
        "tagline": {
          "type": "string",
          "title": "Product information: tagline"
        },
        "signInUrl": {
          "type": "string",
          "title": "Product information: sign_in_url"
        },
        "currency": {
          "type": "string",
          "title": "Product information: currency"
        },
        "price": {
          "type": "string",
          "format": "int64",
          "title": "Product information: price stored as cents"
        },
        "billingFrequency": {
          "type": "string",
          "title": "Product information: billing_frequency"
        },
        "serviceModel": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product information: service_model"
        },
        "screenshot": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product information: screenshot"
        },
        "websiteUrl": {
          "type": "string",
          "title": "Product information: website_url"
        },
        "headerImage": {
          "type": "string",
          "title": "Product information: header_image"
        },
        "productCategory": {
          "$ref": "#/definitions/ProductProductCategories",
          "title": "Category of the app"
        },
        "lmiCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LmiLmiCategories"
          },
          "title": "Local marketing index category of the app"
        },
        "integration": {
          "$ref": "#/definitions/v1Integration",
          "title": "Integration with vendor center"
        },
        "orderForm": {
          "$ref": "#/definitions/v1OrderForm",
          "title": "Order form fields"
        },
        "resellerMarketing": {
          "$ref": "#/definitions/v1MarketingInformation",
          "title": "Reseller marketing information"
        },
        "endUserMarketing": {
          "$ref": "#/definitions/v1MarketingInformation",
          "title": "End user marketing information"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the app was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the app was last updated"
        },
        "allowPriceNegotiation": {
          "type": "boolean",
          "description": "Whether or not a partner can negotiate the price of the app\nFrom apps: Partner Vendor Communication replaced the need for this field."
        },
        "restrictions": {
          "$ref": "#/definitions/v1Restrictions",
          "title": "List of restrictions for the app"
        },
        "billingId": {
          "type": "string",
          "title": "The sku for the Marketplace App with billing"
        },
        "gdprCompliant": {
          "type": "boolean",
          "title": "Whether or not the app is gdpr compliant"
        },
        "preventPriceConversionBetweenCurrencies": {
          "type": "boolean",
          "title": "Indicates whether or not we should undergo conversion with currency or stay constant (I.e. convert USD to CAD, or use same price regardless)"
        },
        "suggestedRetailPrice": {
          "type": "string",
          "format": "int64",
          "title": "suggested retail price: stored as cents, is the price the Vendor thinks a partner should sell their product at"
        },
        "commitment": {
          "$ref": "#/definitions/marketplaceappsv1Commitment",
          "title": "Information about the required commitment for the app"
        },
        "vendorId": {
          "type": "string",
          "title": "The id of the vendor this app belongs to"
        },
        "multipleActivations": {
          "type": "boolean",
          "title": "Indicates whether or not the app supports multiple activations per account"
        },
        "usesActivationSpecificEntryUrl": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses an activation specific entry url for fullfillment"
        },
        "usesResellerMarketing": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses reseller marketing"
        },
        "usesIntegration": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses integration settings"
        },
        "usesEditions": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses editions"
        },
        "usesSsoIntegration": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses sso integration settings"
        },
        "editionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the edition IDs this app is associated with. This field having values should not indicate if the application\nuses editions or not, please use the `uses_edition` flag for that decision."
        },
        "discoverable": {
          "type": "boolean",
          "title": "discoverable determines whether or not the app is featured in the discovery page in partner center"
        },
        "trialConfiguration": {
          "$ref": "#/definitions/marketplaceappsv1TrialConfiguration",
          "title": "Indicates various configurations regarding trials"
        },
        "applicationUrl": {
          "type": "string",
          "description": "Application URL to be used when the application gets launched in business center."
        },
        "state": {
          "$ref": "#/definitions/v1State",
          "title": "State tells which state (i.e., draft or published) of an app"
        },
        "type": {
          "$ref": "#/definitions/marketplaceappsv1AppType",
          "title": "type describes how to categorize the app (i.e., app or add-on)"
        },
        "cost": {
          "$ref": "#/definitions/v1Cost",
          "title": "Cost to the vendor for provisioning of the App"
        },
        "billingProcess": {
          "$ref": "#/definitions/v1BillingProcess",
          "description": "billing process of the app."
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "Setup fee in cents"
        },
        "suspended": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the app was suspended"
        },
        "usesCustomPricing": {
          "type": "boolean",
          "title": "Indicates whether or not the app supports custom pricing"
        },
        "usesFulfillmentIntegration": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses fulfillment integration settings"
        },
        "deliveryMethod": {
          "$ref": "#/definitions/marketplaceappsv1DeliveryMethod",
          "title": "Indicates how the customer uses the app (e.g., product/service)"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of category IDs"
        }
      },
      "title": "MarketplaceApp is an item that represents a vendor application in the marketplace"
    },
    "marketplaceappsv1PermissionLists": {
      "type": "object",
      "properties": {
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A white and black list used for defining country restrictions"
    },
    "marketplaceappsv1ReleaseType": {
      "type": "string",
      "enum": [
        "RELEASE_TYPE_PUBLISH",
        "RELEASE_TYPE_DRAFT"
      ],
      "default": "RELEASE_TYPE_PUBLISH"
    },
    "marketplaceappsv1RequiredBusinessData": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "boolean"
        },
        "descriptionLong": {
          "type": "boolean"
        },
        "descriptionShort": {
          "type": "boolean"
        },
        "services": {
          "type": "boolean"
        },
        "brands": {
          "type": "boolean"
        }
      },
      "title": "RequiredBusinessData is used to indicate profile fields that must have a value before activating an app"
    },
    "marketplaceappsv1TrialConfiguration": {
      "type": "object",
      "properties": {
        "trialEnabled": {
          "type": "boolean",
          "title": "boolean indicating whether on not trials are enabled for the app"
        },
        "trialDuration": {
          "type": "integer",
          "format": "int32",
          "title": "default duration of the trial, in days"
        },
        "endOfTrialAction": {
          "$ref": "#/definitions/marketplaceappsv1EndOfTrialActions",
          "title": "action to take at end of trial"
        }
      },
      "title": "Trial Configuration"
    },
    "marketplaceappsv2AppType": {
      "type": "string",
      "enum": [
        "APP_TYPE_ALL",
        "APP_TYPE_APP",
        "APP_TYPE_ADDON"
      ],
      "default": "APP_TYPE_ALL"
    },
    "marketplaceappsv2Commitment": {
      "type": "object",
      "properties": {
        "initial": {
          "type": "string",
          "format": "int64",
          "title": "The initial commitment required (i.e. 12 month commitment at activation)"
        },
        "recurring": {
          "type": "string",
          "format": "int64",
          "title": "The commitment required after the initial commitment period (i.e. repeated periods of 6 month commitments after renewal)"
        }
      },
      "title": "Holds information about the commitment required by the vendor"
    },
    "marketplaceappsv2DeliveryMethod": {
      "type": "string",
      "enum": [
        "DELIVERY_METHOD_INVALID",
        "DELIVERY_METHOD_PRODUCT",
        "DELIVERY_METHOD_SERVICE"
      ],
      "default": "DELIVERY_METHOD_INVALID"
    },
    "marketplaceappsv2Edition": {
      "type": "object",
      "properties": {
        "appKey": {
          "$ref": "#/definitions/v2AppKey",
          "title": "The app key to identify this edition of the app"
        },
        "name": {
          "type": "string",
          "title": "The name of the edition"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the edition was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the edition was updated"
        },
        "billingId": {
          "type": "string",
          "title": "The Billing ID (SKU) of the edition"
        }
      },
      "title": "A representation of a specific edition of an app"
    },
    "marketplaceappsv2EditionIdentifier": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      },
      "description": "Identifies an edition with the app and edition IDs."
    },
    "marketplaceappsv2EndOfTrialActions": {
      "type": "string",
      "enum": [
        "END_OF_TRIAL_ACTIONS_DO_NOTHING"
      ],
      "default": "END_OF_TRIAL_ACTIONS_DO_NOTHING",
      "description": "- END_OF_TRIAL_ACTIONS_DO_NOTHING: Do nothing once trial ends",
      "title": "Indicating what to do once the trial has ended"
    },
    "marketplaceappsv2FrequentlyAskedQuestions": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "marketplaceappsv2GetMultiAppResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2App"
          }
        }
      }
    },
    "marketplaceappsv2MarketplaceApp": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "ID of the app"
        },
        "scope": {
          "type": "string",
          "title": "scope of the data, ie: /VUNI/default-market"
        },
        "appData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KindValues"
          },
          "title": "List of the data for the app"
        }
      },
      "title": "the app data"
    },
    "marketplaceappsv2PermissionLists": {
      "type": "object",
      "properties": {
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "An include and exclude list used for defining country restrictions"
    },
    "marketplaceappsv2ReleaseType": {
      "type": "string",
      "enum": [
        "RELEASE_TYPE_DRAFT",
        "RELEASE_TYPE_PUBLISHED"
      ],
      "default": "RELEASE_TYPE_DRAFT"
    },
    "marketplaceappsv2RequiredBusinessData": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "boolean"
        },
        "descriptionLong": {
          "type": "boolean"
        },
        "descriptionShort": {
          "type": "boolean"
        },
        "services": {
          "type": "boolean"
        },
        "brands": {
          "type": "boolean"
        }
      },
      "title": "RequiredBusinessData is used to indicate profile fields that must have a value before activating an app"
    },
    "marketplaceappsv2TrialConfiguration": {
      "type": "object",
      "properties": {
        "trialEnabled": {
          "type": "boolean",
          "title": "boolean indicating whether on not trials are enabled for the app"
        },
        "trialDuration": {
          "type": "integer",
          "format": "int32",
          "title": "default duration of the trial, in days"
        },
        "endOfTrialAction": {
          "$ref": "#/definitions/marketplaceappsv2EndOfTrialActions",
          "title": "action to take at end of trial"
        }
      },
      "title": "Trial Configuration"
    },
    "v1ActiveAppEditionIdentifier": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "the id of the app"
        },
        "editionId": {
          "type": "string",
          "title": "(optional) the id of the edition\nan empty edition_id is meaningful for some O&O apps (such as RM Pro)"
        }
      }
    },
    "v1AddAppIDResponse": {
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/v1AppVendor",
          "title": "The vendor object"
        }
      },
      "title": "AddAppIDResponse shows the final state of the vendor after the add operation is completed"
    },
    "v1Addon": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string",
          "title": "The id of the addon, unique within the scope of the app the addon is for"
        },
        "appId": {
          "type": "string",
          "title": "The id of the app which the addon is for"
        },
        "tagline": {
          "type": "string",
          "title": "A tagline for an addon"
        },
        "title": {
          "type": "string",
          "title": "The title of the addon"
        },
        "approved": {
          "type": "boolean",
          "title": "Is the addon approved to be shown publicly within marketplace"
        },
        "icon": {
          "type": "string",
          "title": "Icon url for the addon"
        },
        "bannerImage": {
          "type": "string",
          "title": "The banner image of an addon"
        },
        "endUserMarketing": {
          "$ref": "#/definitions/v1MarketingInformation",
          "title": "DEPRECATED"
        },
        "serviceModel": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Addon service_model"
        },
        "discoverable": {
          "type": "boolean",
          "title": "Is the addon discoverable within marketplace"
        },
        "screenshots": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of screenshots for an addon"
        },
        "multipleActivations": {
          "type": "boolean",
          "title": "Can the addon support multiple activations"
        },
        "usesOrderForm": {
          "type": "boolean",
          "title": "Indicates if the addon uses an order form during activation"
        },
        "billingFrequency": {
          "type": "string",
          "title": "Addon billing_frequency"
        },
        "resellerMarketing": {
          "$ref": "#/definitions/v1MarketingInformation",
          "title": "DEPRECATED"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the addon was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the addon was last updated"
        },
        "orderForm": {
          "$ref": "#/definitions/v1OrderForm",
          "title": "Order form fields"
        },
        "price": {
          "type": "string",
          "format": "int64",
          "title": "The wholesale price of the addon, in cents, the currency is inherited from the base product"
        },
        "restrictions": {
          "$ref": "#/definitions/v1Restrictions",
          "title": "List of restrictions for the addon"
        },
        "activationRequiresApproval": {
          "type": "boolean",
          "title": "Does the addon require vendor approval to be activated"
        },
        "billingId": {
          "type": "string",
          "title": "The sku for the Add-On with billing"
        },
        "currency": {
          "type": "string",
          "title": "currency of the addon"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "The setup fee for the addon"
        },
        "suspended": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the addon was suspended"
        },
        "usesCustomPricing": {
          "type": "boolean",
          "title": "Indicates whether or not the addon supports custom pricing"
        }
      },
      "description": "Addon is a item that can be purchased to enable additional features within a marketplace app.\nThese can be either Consumables, Non-Consumables or Subscriptions."
    },
    "v1AddonResponse": {
      "type": "object",
      "properties": {
        "addon": {
          "$ref": "#/definitions/v1Addon"
        }
      },
      "title": "Response message for requests that return a single addon"
    },
    "v1AddonsListResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Addon"
          },
          "title": "A list of addons"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        }
      },
      "title": "Response message for a request that returns multiple addons"
    },
    "v1AppEditionsMarketing": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The app ID that the edition is for"
        },
        "editionId": {
          "type": "string",
          "title": "The unique ID of the edition"
        },
        "name": {
          "type": "string",
          "title": "The name of the edition"
        },
        "billingId": {
          "type": "string",
          "title": "The Billing ID (SKU) of the edition"
        },
        "usesResellerMarketing": {
          "type": "boolean",
          "title": "Indicates whether or not the edition uses reseller marketing"
        },
        "resellerMarketing": {
          "$ref": "#/definitions/v1EditionMarketingInformation",
          "title": "Reseller marketing information"
        },
        "endUserMarketing": {
          "$ref": "#/definitions/v1EditionMarketingInformation",
          "title": "End user marketing information"
        },
        "releaseType": {
          "$ref": "#/definitions/v1Release",
          "title": "The release state of the marketing data"
        }
      }
    },
    "v1AppRequirement": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Rule"
          },
          "title": "A list of rules, if one of the rules returns true the requirement is satisfied"
        },
        "childrenAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of child apps that are dependant on this app"
        }
      },
      "title": "If an app is deactivated all of its add-ons (children) and dependent products will have to be checked to see if they still have an\napp that satisfies their requirements, otherwise the dependent apps might also have to be deactivated \nas part of the original deactivation [see `GetAppsToDeactivateUponDeactivation` rpc]\nif ONE of the rules is satisfied any errors will be tossed out and [the `CanActivate` rpc] will return nil\nif ALL of the rules return errors, [the `CanActivate` rpc] response will list the app_ids that failed the requirement"
    },
    "v1AppResponse": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/marketplaceappsv1MarketplaceApp"
        }
      },
      "title": "General container for returning an application"
    },
    "v1AppVendor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The primary identifier for a AppVendor."
        },
        "name": {
          "type": "string",
          "description": "The AppVendor's name."
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Deprecated, use the ListAppsForVendorIDs call"
        },
        "partnerId": {
          "type": "string",
          "title": "The associated Partner ID (optional)"
        },
        "reportingCode": {
          "type": "string",
          "title": "The financial reporting code associated to an AppVendor"
        }
      },
      "description": "AppVendor represents the Basic data to unify vendors items."
    },
    "v1ApprovalProcess": {
      "type": "string",
      "enum": [
        "APPROVAL_PROCESS_INVALID",
        "APPROVAL_PROCESS_VENDASTA",
        "APPROVAL_PROCESS_VENDOR"
      ],
      "default": "APPROVAL_PROCESS_INVALID",
      "description": "- APPROVAL_PROCESS_VENDASTA: Vendasta Marketplace Admin must approve changes to an app before they are visible throughout the platform\nThis is intended for Vendasta Quality gating items that are visible to a large number of partners\n - APPROVAL_PROCESS_VENDOR: A vendor can approve changes to an app without Vendasta intervention. This allows a vendor to push their edits\nthroughout the platform. This is intended for apps distributed to a smaller subset of partners, to avoid the delay\nof waiting for Vendasta Quality gating",
      "title": "The types of Approval Processes for an app"
    },
    "v1AuxiliaryDataFieldSchema": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/v1AuxiliaryDataFieldType"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldDescription": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "dropdownOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DropdownOption"
          }
        },
        "currencyCode": {
          "type": "string",
          "title": "currency code according to ISO-4217, e.g. 'USD', 'CAD', 'BRL', etc"
        },
        "archived": {
          "type": "string",
          "format": "date-time"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "v1AuxiliaryDataFieldType": {
      "type": "string",
      "enum": [
        "AUXILIARY_DATA_FIELD_TYPE_INVALID",
        "AUXILIARY_DATA_FIELD_TYPE_STRING",
        "AUXILIARY_DATA_FIELD_TYPE_INTEGER",
        "AUXILIARY_DATA_FIELD_TYPE_DATE",
        "AUXILIARY_DATA_FIELD_TYPE_DROPDOWN",
        "AUXILIARY_DATA_FIELD_TYPE_CURRENCY"
      ],
      "default": "AUXILIARY_DATA_FIELD_TYPE_INVALID"
    },
    "v1AuxiliaryDataObjectID": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        }
      }
    },
    "v1BillingProcess": {
      "type": "string",
      "enum": [
        "BILLING_PROCESS_INVALID",
        "BILLING_PROCESS_NO_BILLING",
        "BILLING_PROCESS_VENDASTA_BILLING"
      ],
      "default": "BILLING_PROCESS_INVALID",
      "description": "- BILLING_PROCESS_NO_BILLING: App is not billed for in the billing system\n - BILLING_PROCESS_VENDASTA_BILLING: App is billed for in the billing system",
      "title": "The types of Billing Process for an app"
    },
    "v1CanActivateResponse": {
      "type": "object",
      "properties": {
        "invalidResponse": {
          "$ref": "#/definitions/CanActivateResponseInvalidResponse"
        },
        "successResponse": {
          "$ref": "#/definitions/CanActivateResponseSuccessResponse"
        }
      }
    },
    "v1CreateEditionResponse": {
      "type": "object",
      "properties": {
        "edition": {
          "$ref": "#/definitions/marketplaceappsv1Edition",
          "title": "The newly created edition"
        }
      },
      "title": "Response containing the newly created edition"
    },
    "v1CreateVendorResponse": {
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/v1AppVendor",
          "title": "The vendor that was just created"
        }
      },
      "title": "CreateVendorResponse returns the full vendor object as it exists after creation"
    },
    "v1DistributionSetting": {
      "type": "string",
      "enum": [
        "DISTRIBUTION_SETTING_INVALID",
        "DISTRIBUTION_SETTING_ALL",
        "DISTRIBUTION_SETTING_SELF"
      ],
      "default": "DISTRIBUTION_SETTING_INVALID",
      "description": "- DISTRIBUTION_SETTING_ALL: Distribute the App to be used across Partners\n - DISTRIBUTION_SETTING_SELF: Only Distribute the App to the Persona that create it",
      "title": "The type of Distribution to use for the app (how the app should be distributed)"
    },
    "v1DropdownOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1DuplicateAppResponse": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The app ID of the new app"
        }
      },
      "title": "response of the duplicate app request"
    },
    "v1EditionBillingFrequency": {
      "type": "string",
      "enum": [
        "EDITION_BILLING_FREQUENCY_INVALID",
        "EDITION_BILLING_FREQUENCY_MONTHLY",
        "EDITION_BILLING_FREQUENCY_YEARLY",
        "EDITION_BILLING_FREQUENCY_ONETIME"
      ],
      "default": "EDITION_BILLING_FREQUENCY_INVALID"
    },
    "v1EditionMarketingInformation": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Reseller marketing information: description"
        },
        "keySellingPoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Reseller marketing information: key selling points"
        }
      },
      "title": "Reseller marketing information"
    },
    "v1EditionPricing": {
      "type": "object",
      "properties": {
        "wholesalePrice": {
          "type": "string",
          "format": "int64",
          "title": "The wholesale price of the edition"
        },
        "suggestedRetailPrice": {
          "type": "string",
          "format": "int64",
          "title": "The suggested retail price of the edition"
        },
        "billingFrequency": {
          "$ref": "#/definitions/v1EditionBillingFrequency",
          "title": "The billing frequency"
        }
      }
    },
    "v1Fee": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "float",
          "title": "Amount can be in percentage or in cents depending on the amount type"
        },
        "amountType": {
          "$ref": "#/definitions/v1FeeAmountType",
          "title": "Type of Amount. Examples: fixed and percentage"
        },
        "feeType": {
          "$ref": "#/definitions/v1FeeType",
          "title": "Type of fee. Example: Management"
        }
      },
      "title": "Represents the fee to be added to a product pricing"
    },
    "v1FeeAmountType": {
      "type": "string",
      "enum": [
        "FEE_AMOUNT_TYPE_INVALID",
        "FEE_AMOUNT_TYPE_FIXED",
        "FEE_AMOUNT_TYPE_PERCENTAGE"
      ],
      "default": "FEE_AMOUNT_TYPE_INVALID"
    },
    "v1FeeType": {
      "type": "string",
      "enum": [
        "FEE_TYPE_INVALID",
        "FEE_TYPE_MANAGEMENT"
      ],
      "default": "FEE_TYPE_INVALID"
    },
    "v1FieldDataUpsertOperation": {
      "type": "object",
      "properties": {
        "fieldDataId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "integer": {
          "type": "string",
          "format": "int64"
        },
        "string": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dropdownValue": {
          "type": "string"
        },
        "currencyValue": {
          "type": "string",
          "format": "int64"
        },
        "deleteValue": {
          "type": "boolean",
          "title": "deletes the field's current value from the object"
        }
      }
    },
    "v1FieldSchemaIdentifier": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1GetAppIDFromSkuResponse": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "addonId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      },
      "title": "The app id and addon id (if applicable) for the app/addon matching the requested sku"
    },
    "v1GetAppResponse": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/marketplaceappsv1MarketplaceApp",
          "title": "The requested marketplace app"
        }
      },
      "title": "GetAppResponse"
    },
    "v1GetAppsToDeactivateUponDeactivationResponse": {
      "type": "object",
      "properties": {
        "appIdsToBeDeactivated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A list of app ids that will also have to be deactivated if the app ids in the request are deactivated"
    },
    "v1GetAppsWithUnpublishedChangesResponse": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Holds a list of app ids"
    },
    "v1GetAuxiliaryDataFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchema": {
          "$ref": "#/definitions/v1AuxiliaryDataFieldSchema"
        }
      }
    },
    "v1GetBillingIDResponse": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The app the edition belongs to"
        },
        "editionId": {
          "type": "string",
          "title": "The edition the billing ID is for"
        },
        "billingId": {
          "type": "string",
          "title": "The billing ID of the edition"
        }
      },
      "title": "Response containing the requested billing ID"
    },
    "v1GetByPartnerIDResponse": {
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/v1AppVendor"
        }
      }
    },
    "v1GetEditionRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The app the edition belongs to"
        },
        "editionId": {
          "type": "string",
          "title": "The edition to get"
        }
      },
      "title": "Request to get a published edition"
    },
    "v1GetEditionResponse": {
      "type": "object",
      "properties": {
        "edition": {
          "$ref": "#/definitions/marketplaceappsv1Edition",
          "title": "The requested edition"
        }
      },
      "title": "Response containing the requested edition"
    },
    "v1GetMultiAuxiliaryDataFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AuxiliaryDataFieldSchema"
          }
        }
      }
    },
    "v1GetMultiAuxiliaryDataResponse": {
      "type": "object",
      "properties": {
        "jsonSchema": {
          "type": "string"
        },
        "jsonData": {
          "type": "string"
        }
      }
    },
    "v1GetMultiDraftEditionResponse": {
      "type": "object",
      "properties": {
        "editions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1Edition"
          },
          "title": "The requested draft editions"
        }
      },
      "title": "Response containing the requested draft editions"
    },
    "v1GetMultiEditionResponse": {
      "type": "object",
      "properties": {
        "editions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1Edition"
          },
          "title": "The requested published editions"
        }
      },
      "title": "Response containing the requested published editions"
    },
    "v1GetMultiOrderFormsResponse": {
      "type": "object",
      "properties": {
        "orderFormContainer": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiOrderFormsResponseOrderFormContainer"
          },
          "title": "A list of order forms with associated app_ids"
        }
      }
    },
    "v1GetMultiProductCostResponse": {
      "type": "object",
      "properties": {
        "productCost": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ProductCost"
          },
          "title": "a map of product cost keyed by sku"
        }
      },
      "title": "DEPRECATED: This response is associated with a deprecated RPC"
    },
    "v1GetMultiVendorResponse": {
      "type": "object",
      "properties": {
        "vendors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppVendor"
          },
          "description": "vendor objects from the input list."
        }
      },
      "title": "GetMultiVendorResponse is the result set of requested vendors"
    },
    "v1GetOwnedAppIDsByPartnerIDResponse": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetPublicKeysResponse": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "The default public key for the app."
        },
        "identifiedPublicKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IdentifiedPublicKey"
          },
          "description": "The identified public keys for the app."
        }
      },
      "title": "GetPublicKeysResponse"
    },
    "v1GetSSOUrlsResponse": {
      "type": "object",
      "properties": {
        "entryUrl": {
          "type": "string",
          "description": "The entry URL of the app."
        },
        "sessionUrl": {
          "type": "string",
          "description": "The session transfer URL of the app."
        }
      },
      "title": "GetSSOUrlsResponse"
    },
    "v1IdentifiedPublicKey": {
      "type": "object",
      "properties": {
        "publicKeyId": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        }
      },
      "description": "IdentifiedPublicKey The identified public keys are considered \"identified\" because they have an id/key\nassociated with them that identifies a user or purpose for using that particular key instead of the default one,\nfor being  able to identify the callers of the API. It could be a backend service, a particular user or admin\nfor an app, etc."
    },
    "v1IncludedCommonFormFields": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "boolean"
        },
        "businessAddress": {
          "type": "boolean"
        },
        "businessPhoneNumber": {
          "type": "boolean"
        },
        "businessAccountGroupId": {
          "type": "boolean"
        },
        "salespersonName": {
          "type": "boolean"
        },
        "salespersonPhoneNumber": {
          "type": "boolean"
        },
        "salespersonEmail": {
          "type": "boolean"
        },
        "contactName": {
          "type": "boolean"
        },
        "contactPhoneNumber": {
          "type": "boolean"
        },
        "contactEmail": {
          "type": "boolean"
        }
      },
      "title": "Common form fields among apps, can be autofilled"
    },
    "v1Integration": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "objectSubtype": {
          "type": "string"
        },
        "lookupMappingIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldMappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldMapping"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1IsVendorDistributedByPartnerIDResponse": {
      "type": "object",
      "properties": {
        "isDistributed": {
          "type": "boolean"
        }
      }
    },
    "v1ListAppsForVendorIDsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1MarketplaceApp"
          },
          "title": "The list of apps (including addons) that were requested"
        },
        "cursor": {
          "type": "string",
          "title": "A pointer to the next set of responses. For use in a subsequent call to ListAppsForVendors"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if there are more results available. If true, cursor should be used in the next ListAppsForVendorsRequest to ensure\nyou get the correct set of results"
        }
      },
      "title": "ListAppsForVendorIDsResponse is the response for ListAppsForVendors"
    },
    "v1ListAppsRequestListAppsFilter": {
      "type": "object",
      "properties": {
        "appType": {
          "$ref": "#/definitions/marketplaceappsv1AppType",
          "description": "The type of the applications to return in the final set."
        },
        "releaseType": {
          "$ref": "#/definitions/marketplaceappsv1ReleaseType",
          "title": "The release of the applications to return in the final set"
        },
        "partnerId": {
          "type": "string"
        },
        "filterTerm": {
          "type": "string",
          "description": "filter_term is the used as a regular expression pattern to filter applications against names and appIds.\nIf the filter term isn't specified, no filtering is performed."
        },
        "state": {
          "$ref": "#/definitions/v1StateFilterOptions",
          "description": "The app state to be included in the returned results. Will default to Published (filtering out those in Draft)."
        }
      }
    },
    "v1ListAuxiliaryDataFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AuxiliaryDataFieldSchema"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListAuxiliaryDataResponse": {
      "type": "object",
      "properties": {
        "jsonSchema": {
          "type": "string"
        },
        "jsonData": {
          "type": "string"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListByMultiAppResponse": {
      "type": "object",
      "properties": {
        "appEditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListByMultiAppResponseAppEditions"
          },
          "title": "The list of requested app editions"
        }
      },
      "title": "Response containing the requested app editions"
    },
    "v1ListDraftEditionsForAppResponse": {
      "type": "object",
      "properties": {
        "editions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1Edition"
          },
          "title": "The list of requested draft editions"
        },
        "cursor": {
          "type": "string",
          "title": "Cursor to use to request the next page"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if there is more items on a subsequent page"
        }
      },
      "title": "Response containing the requested draft editions"
    },
    "v1ListEditionsForAppResponse": {
      "type": "object",
      "properties": {
        "editions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1Edition"
          },
          "title": "The list of requested published editions"
        },
        "cursor": {
          "type": "string",
          "title": "Cursor to use to request the next page"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if there is more items on a subsequent page"
        }
      },
      "title": "Response containing the requested published editions"
    },
    "v1ListEditionsMarketingForAppResponse": {
      "type": "object",
      "properties": {
        "appEditionsMarketing": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppEditionsMarketing"
          },
          "title": "The list of requested app editions"
        },
        "cursor": {
          "type": "string",
          "title": "Cursor to use to request the next page"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if there is more items on a subsequent page"
        }
      }
    },
    "v1ListRequiredAppSummariesFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "description": "The search term by which to filter the results."
        }
      }
    },
    "v1ListRequiredAppSummariesResponse": {
      "type": "object",
      "properties": {
        "requiredAppSummaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RequiredAppSummary"
          },
          "description": "The results of the list."
        },
        "nextCursor": {
          "type": "string",
          "description": "The cursor for the next list request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "The flag indicating if there are more results to list."
        }
      }
    },
    "v1ListVendorResponse": {
      "type": "object",
      "properties": {
        "vendors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppVendor"
          },
          "title": "The vendor objects"
        },
        "cursor": {
          "type": "string",
          "title": "cursor to use to request the next page"
        },
        "hasMore": {
          "type": "boolean",
          "description": "has_more indicates if there is more items on a subsequent page."
        }
      },
      "title": "ListVendorResponse is the vendors asked about in the list call"
    },
    "v1MarketingInformation": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Reseller marketing information: description"
        },
        "keySellingPoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Reseller marketing information: key selling points"
        },
        "faqs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FrequentlyAskedQuestions"
          },
          "title": "Reseller marketing information: faqs"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Reseller marketing information: pdf upload"
        }
      },
      "title": "Marketing information about the addon"
    },
    "v1OrderForm": {
      "type": "object",
      "properties": {
        "orderForm": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrderFormField"
          },
          "title": "Order form: fields in the order form"
        },
        "commonForm": {
          "$ref": "#/definitions/v1IncludedCommonFormFields",
          "title": "Order form: common form fields"
        },
        "activationMessage": {
          "type": "string",
          "title": "Order form: message shown to users upon activating the app"
        },
        "separateOrderForms": {
          "type": "boolean",
          "title": "Order form: should a multi-activatable app/addon use a separate order form for each activation"
        }
      },
      "title": "Order form fields"
    },
    "v1OrderFormField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Deprecated: Replaced by options_with_labels"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "uploadUrl": {
          "type": "string",
          "title": "Deprecated: For file upload fields this is where we upload and store the file"
        },
        "prefix": {
          "type": "string",
          "title": "For textbox fields, this string will be displayed in front of the textbox"
        },
        "suffix": {
          "type": "string",
          "title": "For textbox fields, this string will be displayed behind the textbox"
        },
        "regexValidator": {
          "type": "string",
          "title": "A regex string used to validate a fields answer"
        },
        "regexErrorMessage": {
          "type": "string",
          "title": "The error message displayed if the regex_validator does not match the answer"
        },
        "useWebhookValidator": {
          "type": "boolean",
          "title": "Indicates if this field will call out to the order_form_validator_webhook_url under Integration"
        },
        "allowMultiples": {
          "type": "boolean",
          "description": "The following 3 options are for dropdowns that allow you to choose multiple options\nWhether or not to allow multiple choices."
        },
        "allowDuplicates": {
          "type": "boolean",
          "description": "If you should be able to choose the same option twice."
        },
        "maxChoices": {
          "type": "string",
          "format": "int64",
          "title": "The maximum number of choices you can make"
        },
        "forOfficeUseOnly": {
          "type": "boolean",
          "title": "if this is true the field will not be shown to end users"
        },
        "optionsWithLabels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/OrderFormFieldOption"
          }
        },
        "officeEditableOnly": {
          "type": "boolean",
          "title": "if this is true the field will not be editable by end users"
        }
      },
      "title": "Field asking user for information when they try to activate the app"
    },
    "v1PagedAppResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv1MarketplaceApp"
          }
        },
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ProductCost": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "frequency": {
          "type": "string"
        },
        "cost": {
          "type": "string",
          "format": "int64"
        },
        "commitment": {
          "$ref": "#/definitions/marketplaceappsv1Commitment"
        },
        "isWholesale": {
          "type": "boolean"
        },
        "editionCost": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ProductCost"
          }
        }
      },
      "title": "DEPRECATED: This message is associated with a deprecated RPC"
    },
    "v1Release": {
      "type": "string",
      "enum": [
        "RELEASE_PUBLISH",
        "RELEASE_DRAFT"
      ],
      "default": "RELEASE_PUBLISH"
    },
    "v1RemoveAppIDResponse": {
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/v1AppVendor",
          "title": "The vendor object"
        }
      },
      "description": "RemoveAppIDResponse shows the final state of the vendor after the remove operation is completed."
    },
    "v1RequiredAppSummary": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        }
      }
    },
    "v1RequiredFeatures": {
      "type": "object",
      "properties": {
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Features that this app requires to be activated"
        }
      },
      "title": "RequiredFeatures holds a list of features a partner needs before activating an app"
    },
    "v1Restrictions": {
      "type": "object",
      "properties": {
        "country": {
          "$ref": "#/definitions/v1PermissionLists",
          "title": "Allowed or not allowed countries for this product/addon"
        }
      },
      "title": "Restictions is used to specify any restrictions on an app/addon for a given field"
    },
    "v1State": {
      "type": "string",
      "enum": [
        "STATE_INVALID",
        "STATE_DRAFT",
        "STATE_PUBLISHED"
      ],
      "default": "STATE_INVALID",
      "description": "- STATE_INVALID: STATE_INVALID means that the state has not been set\nfor legacy purposes, we'll set state default to STATE_PUBLISHED\n - STATE_DRAFT: STATE_DRAFT means that the app is not visible in Partner Center\n - STATE_PUBLISHED: STATE_PUBLISHED means that the app is now visible in Partner Center",
      "title": "State tells which state (i.e., draft or published) of an app"
    },
    "v1StateFilterOptions": {
      "type": "string",
      "enum": [
        "STATE_FILTER_OPTIONS_PUBLISHED",
        "STATE_FILTER_OPTIONS_DRAFT",
        "STATE_FILTER_OPTIONS_ALL"
      ],
      "default": "STATE_FILTER_OPTIONS_PUBLISHED",
      "title": "- STATE_FILTER_OPTIONS_PUBLISHED: filter for published\n - STATE_FILTER_OPTIONS_DRAFT: filter for draft\n - STATE_FILTER_OPTIONS_ALL: No filter, return all states"
    },
    "v1UpdateVendorResponse": {
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/v1AppVendor",
          "title": "The vendor object"
        }
      },
      "title": "UpdateVendorResponse returns the final state of teh vendor after updates are performed"
    },
    "v2ActivatableItemSummary": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "unique primary identifier of the item"
        },
        "defaultName": {
          "type": "string",
          "title": "owner set item name"
        },
        "sellerWhitelabelName": {
          "type": "string",
          "title": "whitelabel item name set by seller"
        },
        "tagline": {
          "type": "string",
          "title": "short description of item"
        },
        "iconUrl": {
          "type": "string",
          "title": "url pointing to owner set icon"
        },
        "sellerWhitelabelIconUrl": {
          "type": "string",
          "title": "url pointing to whitelabel icon set by seller"
        },
        "isSuspended": {
          "type": "boolean",
          "title": "flag indicating whether the item has been suspended in the marketplace"
        },
        "isMultiactivatable": {
          "type": "boolean",
          "title": "flag indicating whether or not the item can be activated on a single account more than once"
        },
        "requiredCountries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of countries the item is available in, if the item can only be purchased for a consumer in certain countries"
        },
        "requiredItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2RequiredItem"
          },
          "title": "list of items required for the purchase of this item"
        },
        "ownerName": {
          "type": "string",
          "title": "name of the owner"
        },
        "itemType": {
          "$ref": "#/definitions/v2ItemType",
          "title": "type of item (App or Addon)"
        },
        "deliveryMethod": {
          "$ref": "#/definitions/marketplaceappsv2DeliveryMethod",
          "title": "method by which the item is delivered (ie SaaS product or service)"
        },
        "enabledDate": {
          "type": "string",
          "format": "date-time",
          "title": "date at which the item was enabled by the seller"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the categories that the item has been added to"
        },
        "usesEditions": {
          "type": "boolean",
          "title": "flag indicating if the item uses editions"
        }
      }
    },
    "v2ActivationInformation": {
      "type": "object",
      "properties": {
        "orderFormEnabled": {
          "type": "boolean",
          "title": "order_form_enabled determines whether or not the application requires an order form submission to be successfully activated\non an account"
        },
        "multipleActivationsEnabled": {
          "type": "boolean",
          "title": "allows_multiple_activations determines whether or not multiple instance of this app can be active at the same time for a user"
        },
        "activationSpecificUrlEnabled": {
          "type": "boolean",
          "title": "activation_specific_url_enabled determines whether or not the application requires an activation specific entry url"
        },
        "separateOrderForms": {
          "type": "boolean",
          "title": "separate_order_forms determines whether or not the application requires separate order forms for each activation"
        },
        "requiredBusinessData": {
          "$ref": "#/definitions/marketplaceappsv2RequiredBusinessData",
          "title": "Business profile fields that this app requires to populated before activation"
        },
        "suspended": {
          "type": "string",
          "format": "date-time",
          "title": "suspended is a timestamp after which the app is suspended, and cannot be activated"
        },
        "countryRestrictions": {
          "$ref": "#/definitions/marketplaceappsv2PermissionLists",
          "title": "Allowed or not allowed countries for this app/addon"
        },
        "appRestrictions": {
          "$ref": "#/definitions/v2AppRestrictions",
          "description": "The apps and (potentially) their editions that must be active for this app."
        }
      }
    },
    "v2App": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v2AppKey"
        },
        "sharedMarketingInformation": {
          "$ref": "#/definitions/v2SharedMarketingInformation"
        },
        "endUserMarketingInformation": {
          "$ref": "#/definitions/v2EndUserMarketingInformation"
        },
        "parentRequirements": {
          "$ref": "#/definitions/v2RequiredParent"
        },
        "ssoIntegration": {
          "$ref": "#/definitions/v2SSOIntegration"
        },
        "activationInformation": {
          "$ref": "#/definitions/v2ActivationInformation"
        },
        "trialConfiguration": {
          "$ref": "#/definitions/marketplaceappsv2TrialConfiguration"
        },
        "basicIntegration": {
          "$ref": "#/definitions/v2BasicIntegration"
        },
        "editionInformation": {
          "$ref": "#/definitions/v2EditionInformation"
        },
        "externalIdentifiers": {
          "$ref": "#/definitions/v2ExternalIdentifiers"
        },
        "price": {
          "$ref": "#/definitions/v2Price"
        },
        "appType": {
          "$ref": "#/definitions/marketplaceappsv2AppType"
        },
        "appLevelAdminDashboardEnabled": {
          "$ref": "#/definitions/v2AppLevelAdminDashboardEnabled"
        },
        "childApps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ChildApp"
          }
        }
      },
      "description": "The base application definition. Note that the data for the different sections will be represented based on passed.\nprojection filters for the App Service RPC set."
    },
    "v2AppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      },
      "description": "The full identifier for a marketplace app. Note that if the edition_id is left empty, the application that is requested (or fetched)\nwill just be the base app configuration with no edition overrides."
    },
    "v2AppKeyWithQuantity": {
      "type": "object",
      "properties": {
        "appKey": {
          "$ref": "#/definitions/v2AppKey",
          "title": "required - The app identifier"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "Optional - default is 1. It is expected only apps / addons capable of multi activation will be given a quantity"
        }
      }
    },
    "v2AppLevelAdminDashboard": {
      "type": "object",
      "properties": {
        "allowSelfServeForPartner": {
          "type": "boolean",
          "title": "The partner can SSO directly into the app"
        }
      },
      "title": "The settings to control how an app can be accessed directly"
    },
    "v2AppLevelAdminDashboardEnabled": {
      "type": "object",
      "properties": {
        "appLevelAdminDashboardEnabledForPartnerCenter": {
          "type": "boolean",
          "title": "boolean indicating whether on not AppLevelAdminDashboardEnabled are enabled for the app"
        }
      },
      "title": "AppLevelAdminDashboardEnabled Configuration"
    },
    "v2AppPrice": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "id of App prices were returned for"
        },
        "displayOverride": {
          "$ref": "#/definitions/v2PriceDisplayOverride",
          "title": "options for display prices (ie \"Contact Sales\" rather than a price amount)"
        },
        "billingConfiguration": {
          "$ref": "#/definitions/v2BillingConfiguration",
          "title": "additional options for handling certain billing scenarios"
        },
        "pricesForEditions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2UnitPrice"
          },
          "title": "map of prices to editionIDs (one element for non-editioned apps)"
        }
      }
    },
    "v2AppPrices": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "id of App prices were returned for"
        },
        "pricesForContexts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2AppPrice"
          },
          "title": "map of app prices for pricing contexts"
        }
      }
    },
    "v2AppRestrictions": {
      "type": "object",
      "properties": {
        "requiredAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of apps that must be active, and is not edition specific."
        },
        "requiredEditionIds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv2EditionIdentifier"
          },
          "description": "A set of apps that must be active, and is edition specific."
        }
      },
      "description": "A set of conditions that must be satisfied for the app to be activated."
    },
    "v2AppSettings": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the partner"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market"
        },
        "appId": {
          "type": "string",
          "title": "ID of the app"
        },
        "autoActivation": {
          "$ref": "#/definitions/v2AutoActivation",
          "title": "Auto Activation details"
        },
        "editionChange": {
          "$ref": "#/definitions/v2EditionChange",
          "title": "Edition Change settings"
        },
        "trial": {
          "$ref": "#/definitions/v2Trial",
          "title": "Trial settings"
        },
        "branding": {
          "$ref": "#/definitions/v2Branding",
          "title": "Branding settings"
        },
        "appLevelAdminDashboard": {
          "$ref": "#/definitions/v2AppLevelAdminDashboard",
          "title": "AppLevelAdminDashboard settings"
        }
      },
      "title": "AppSettings are the partner configurable settings of an app"
    },
    "v2AppTag": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "title": "scope of the tag, ie:\nscope = /             global data\nscope = /<pid>        partner-specific data\nscope = /<pid>/<mid>  market/storefront-specific data"
        },
        "kind": {
          "type": "string",
          "title": "tag kind, ie: tag/lmi"
        },
        "value": {
          "type": "string",
          "title": "tag id or name, ie: reputation, SEO"
        },
        "data": {
          "type": "string",
          "title": "additional info of the tag"
        },
        "appId": {
          "type": "string",
          "title": "id of the app"
        }
      },
      "title": "App Tag record"
    },
    "v2AutoActivation": {
      "type": "object",
      "properties": {
        "autoActivateByDefault": {
          "type": "boolean",
          "title": "Should the app be activated on account create"
        },
        "editionId": {
          "type": "string",
          "title": "Edition that should be auto activated on account create"
        }
      },
      "title": "Auto Activation details of an app"
    },
    "v2BasicIntegration": {
      "type": "object",
      "properties": {
        "applicationUrl": {
          "type": "string",
          "description": "The URL the user would be redirected to, when launching the product from business center.\nIt would be the frontend's logic that will determine the precedence among the three URLs\nto be used when launching an app (application url, sso url or activation url)."
        },
        "allowWhiteLabeling": {
          "type": "boolean",
          "title": "Indicates the Vendor is allowing the app to be white labelled"
        },
        "appLevelHasAdminDashboard": {
          "type": "boolean",
          "title": "Indicates to the user if the app has a vendor dashboard\nWhen enabled the reseller will be able to choose to let their admins access the vendor dashboard"
        },
        "hideFromClientDashboard": {
          "type": "boolean",
          "title": "When enabled the product will not appear within the client's dashboard\nThis can be used in conjunction with the app_level_has_admin_dashboard to only allow the resellers users to access the vendor dashboard"
        }
      },
      "description": "Basic integration settings/information for an app."
    },
    "v2BillingConfiguration": {
      "type": "object",
      "properties": {
        "usesVariablePricing": {
          "type": "boolean"
        },
        "usesComponentPricing": {
          "type": "boolean"
        },
        "usesEditions": {
          "type": "boolean"
        }
      }
    },
    "v2Branding": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name override"
        },
        "iconUrl": {
          "type": "string",
          "title": "IconURL override"
        },
        "enabled": {
          "type": "boolean",
          "title": "Indicate whether the override should be used"
        }
      },
      "title": "The settings to control partner configurable app information"
    },
    "v2ChildApp": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "description": "The app ID of the dependent child."
        }
      }
    },
    "v2DependentItems": {
      "type": "object",
      "properties": {
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "itemIDs of all the dependent items"
        }
      }
    },
    "v2Discount": {
      "type": "object",
      "properties": {
        "discountType": {
          "$ref": "#/definitions/v2DiscountType",
          "description": "Discount type eg. fixed_amount, percent_amount, etc."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Discounted dollar amount in cents"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The date the discount starts/started"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The date the discount ends/ended"
        },
        "customerId": {
          "type": "string",
          "title": "(OPTIONAL) The identifier of the customer the discount is applied to"
        }
      }
    },
    "v2DiscountType": {
      "type": "string",
      "enum": [
        "DISCOUNT_TYPE_FIXED_AMOUNT",
        "DISCOUNT_TYPE_PERCENT_AMOUNT",
        "DISCOUNT_TYPE_FIXED_NUMBER_OF_UNITS",
        "DISCOUNT_TYPE_FIXED_AMOUNT_PER_UNIT"
      ],
      "default": "DISCOUNT_TYPE_FIXED_AMOUNT"
    },
    "v2EditionChange": {
      "type": "object",
      "properties": {
        "editionUpgradeAction": {
          "$ref": "#/definitions/v2EditionUpgradeAction"
        },
        "customUpgradePackageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priceReferencePackageId": {
          "type": "string"
        },
        "hideUpgradeCta": {
          "type": "boolean"
        }
      },
      "description": "The settings to control what to do on edition change."
    },
    "v2EditionInformation": {
      "type": "object",
      "properties": {
        "editions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv2Edition"
          },
          "title": "The possible editions for this app"
        },
        "usesEditions": {
          "type": "boolean",
          "title": "Indicates whether or not the app uses editions"
        }
      }
    },
    "v2EditionRequirement": {
      "type": "object",
      "properties": {
        "editionId": {
          "type": "string",
          "title": "The ID of the edition"
        },
        "editionRequired": {
          "type": "boolean",
          "title": "Indicates if the requirement can be satisfied by the specified edition or any edition"
        }
      }
    },
    "v2EditionUpgradeAction": {
      "type": "string",
      "enum": [
        "EDITION_UPGRADE_ACTION_UNSET",
        "EDITION_UPGRADE_ACTION_CREATE_ORDER",
        "EDITION_UPGRADE_ACTION_CONTACT_SALES",
        "EDITION_UPGRADE_ACTION_CUSTOM_ORDER"
      ],
      "default": "EDITION_UPGRADE_ACTION_UNSET",
      "description": " - EDITION_UPGRADE_ACTION_UNSET: If left unset it will default to create order."
    },
    "v2EndUserMarketingInformation": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the application. This field could contain HTML/CSS tags/selectors."
        },
        "keySellingPoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of specific points used to entice an enduser to purchase the application."
        },
        "faqs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv2FrequentlyAskedQuestions"
          },
          "description": "A list of enqueries an enduser might ask."
        },
        "fileUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of urls for different files containing additional marketing information for the applications.\nThe intended use for this field is to surface urls for document file types like .pdf and .doc, however\nthis field can be used for any file type."
        },
        "screenshotUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of urls for different screenshots showcasing things like how the application is used and\nits value proposition."
        },
        "needHelp": {
          "type": "string",
          "title": "Need Help section information"
        },
        "videos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Videos for EndUserMarketingInformation"
        }
      }
    },
    "v2ExternalIdentifiers": {
      "type": "object",
      "properties": {
        "billingId": {
          "type": "string",
          "title": "The billing id of the app (sku)"
        }
      }
    },
    "v2FrequencyPrice": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/v2UnitBillingFrequency",
          "title": "billing frequency for this price"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "additional setup fee for this price"
        },
        "commitment": {
          "$ref": "#/definitions/marketplaceappsv2Commitment",
          "title": "commitment for this price"
        },
        "pricingRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PricingRule"
          },
          "title": "rules for how to price this unit"
        },
        "instancePrice": {
          "$ref": "#/definitions/v2InstancePrice",
          "title": "instance price is related to the product's effective cost, considering quantity and possible discounts or tiered pricing"
        },
        "fees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Fee"
          },
          "title": "fees are the fees that are applied as part of the price"
        }
      }
    },
    "v2FrequencyPrices": {
      "type": "object",
      "properties": {
        "pricesForFrequencies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2FrequencyPrice"
          },
          "title": "list of prices for frequencies (ie monthly, yearly)"
        }
      }
    },
    "v2FulfillmentOrderConfig": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The Application ID"
        },
        "release": {
          "$ref": "#/definitions/marketplaceappsv2ReleaseType",
          "title": "Release State of the Config"
        },
        "defaultExternalFormUrl": {
          "type": "string",
          "title": "Form to include on the fulfillment order"
        },
        "isEnabled": {
          "type": "boolean",
          "title": "flag controlling if a config is enabled or not"
        },
        "fulfillmentForm": {
          "$ref": "#/definitions/v1OrderForm",
          "description": "Shared Proto from MarketplaceApp to store a legacy Form Builder config."
        },
        "usesFulfillmentForm": {
          "type": "boolean",
          "description": "flag controlling if a Fulfillment Order has a Fulfillment Order Form attached to it when created."
        }
      }
    },
    "v2FulfillmentOrderConfigProjectionFilter": {
      "type": "object",
      "properties": {
        "includeExternalFormUrl": {
          "type": "boolean"
        },
        "includeFormConfig": {
          "type": "boolean"
        }
      }
    },
    "v2GetAppSettingsResponse": {
      "type": "object",
      "properties": {
        "appSettings": {
          "$ref": "#/definitions/v2AppSettings",
          "title": "The App Settings"
        }
      }
    },
    "v2GetCategoriesResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MarketplaceCategory"
          }
        }
      }
    },
    "v2GetFulfillmentOrderConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v2FulfillmentOrderConfig"
        }
      }
    },
    "v2GetItemDependencyTreeResponse": {
      "type": "object",
      "properties": {
        "dependencyTree": {
          "$ref": "#/definitions/v2ItemDependencyNode",
          "title": "The dependency tree for the given item"
        }
      }
    },
    "v2GetMultiAppDataResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/marketplaceappsv2MarketplaceApp"
          },
          "title": "List of the apps asked for"
        }
      },
      "title": "List the appIds data asked for"
    },
    "v2GetMultiDependentItemsResponse": {
      "type": "object",
      "properties": {
        "dependentItems": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2DependentItems"
          },
          "title": "The dependencies for the given items"
        }
      }
    },
    "v2GetMultiPricingResponse": {
      "type": "object",
      "properties": {
        "appPrices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2AppPrices"
          },
          "title": "list of pricing context prices for apps"
        }
      }
    },
    "v2GetPurchaseLinkResponse": {
      "type": "object",
      "properties": {
        "purchaseLink": {
          "type": "string",
          "description": "The purchase_link that can be used to direct the user to the purchase page.\nWill only be provided if purchase_allowed is true."
        },
        "purchaseAllowed": {
          "type": "boolean",
          "title": "Whether the user can actually perform the purchase.\nIf this returns false, the client should display generic \"contact admin\" content\nReasons a user may not be able to perform the purchase can be found here:\n https://vendasta.jira.com/wiki/spaces/RD/pages/1609597263/Purchase+Link+Exposed+to+Vendors#Implementation"
        }
      }
    },
    "v2GetUpgradeDialogContentResponse": {
      "type": "object",
      "properties": {
        "upgradeDialogContent": {
          "$ref": "#/definitions/v2UpgradeDialogContent",
          "title": "The upgrade dialog content that was just got"
        }
      }
    },
    "v2InstancePrice": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total instance price of the given product"
        }
      }
    },
    "v2Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the item."
        },
        "name": {
          "type": "string",
          "description": "The name of the item."
        }
      }
    },
    "v2ItemDependencyNode": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "The ID of the item"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ItemDependencyNode"
          },
          "title": "The children of the item"
        }
      }
    },
    "v2ItemIdentifier": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "The ID of the item"
        },
        "editionId": {
          "type": "string",
          "title": "The ID of the edition of the item"
        }
      }
    },
    "v2ItemType": {
      "type": "string",
      "enum": [
        "ITEM_TYPE_NOT_SPECIFIED",
        "ITEM_TYPE_APP",
        "ITEM_TYPE_ADDON",
        "ITEM_TYPE_PACKAGE"
      ],
      "default": "ITEM_TYPE_NOT_SPECIFIED"
    },
    "v2KindValues": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "data kind, ie: /tag/lmi"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of values for the kind"
        }
      },
      "title": "list of the kind/values of the app"
    },
    "v2ListActivatableItemsFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "description": "The search term by which to filter the results."
        },
        "ownerPartnerId": {
          "type": "string",
          "description": "The partner ID of the owner."
        },
        "includeSuspended": {
          "type": "boolean",
          "description": "Whether suspended items should be included.\nDefaults to false."
        },
        "country": {
          "type": "string",
          "title": "A country that an ActivatableItem must be available in\nIf not specificed, no country restriction is applied"
        },
        "itemType": {
          "$ref": "#/definitions/v2ItemType",
          "title": "The type of items to return\nIf not specified, app and add-on types are returned\nDeprecated, use item_types instead"
        },
        "requiredItemId": {
          "type": "string",
          "title": "A required item that an ActivatableItem must have\nIf not specified, no required item is applied"
        },
        "hasOrderForm": {
          "$ref": "#/definitions/v2OrderFormFilter",
          "title": "The ActivatableItem has a custom order form\nIf not specified, no order form filter is applied"
        },
        "itemTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2ItemType"
          },
          "title": "The types of items to return\nIf item_types is an empty list, all item types are returned"
        }
      }
    },
    "v2ListActivatableItemsResponse": {
      "type": "object",
      "properties": {
        "activatableItemSummaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ActivatableItemSummary"
          },
          "title": "The results returned"
        },
        "nextCursor": {
          "type": "string",
          "title": "The next cursor from which to fetch the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "A flag indicating whether there is another page of results"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results across all pages"
        }
      }
    },
    "v2ListActivatableItemsSortField": {
      "type": "string",
      "enum": [
        "LIST_ACTIVATABLE_ITEMS_SORT_FIELD_NOT_SPECIFIED",
        "LIST_ACTIVATABLE_ITEMS_SORT_FIELD_DEFAULT_NAME"
      ],
      "default": "LIST_ACTIVATABLE_ITEMS_SORT_FIELD_NOT_SPECIFIED",
      "title": "Enumeration of the possible fields by which to sort"
    },
    "v2ListActivatableItemsSortOptions": {
      "type": "object",
      "properties": {
        "sortField": {
          "$ref": "#/definitions/v2ListActivatableItemsSortField",
          "description": "The field by which to sort."
        },
        "sortDirection": {
          "$ref": "#/definitions/v2SortDirection",
          "description": "The direction by which to sort."
        }
      },
      "title": "Manage product's sort options"
    },
    "v2ListAppIDsByMultiTagResponse": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of app IDs matching the query terms provided"
        },
        "nextCursor": {
          "type": "string",
          "title": "next record index offset in pagination"
        },
        "hasMore": {
          "type": "boolean",
          "title": "indicates if more data is available"
        }
      }
    },
    "v2ListAppSettingsResponse": {
      "type": "object",
      "properties": {
        "appSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2AppSettings"
          },
          "title": "List of AppSettings"
        },
        "nextCursor": {
          "type": "string",
          "title": "Next position in pagination"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if more data is available"
        }
      }
    },
    "v2ListByMultiTagResponse": {
      "type": "object",
      "properties": {
        "appTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2AppTag"
          },
          "title": "App Tag information"
        },
        "nextCursor": {
          "type": "string",
          "title": "Next position in pagination"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if more data is available"
        }
      }
    },
    "v2ListDependenciesRequiredItem": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "The ID of the required item"
        },
        "editionRequirement": {
          "$ref": "#/definitions/v2EditionRequirement",
          "title": "Indicates which edition can satisfy the requirement"
        },
        "enabled": {
          "type": "boolean",
          "title": "Whether the required item is enabled"
        }
      }
    },
    "v2ListDependenciesRequiredItems": {
      "type": "object",
      "properties": {
        "requiredItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ListDependenciesRequiredItem"
          },
          "title": "The required items"
        }
      }
    },
    "v2ListDependenciesResponse": {
      "type": "object",
      "properties": {
        "missingItems": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2ListDependenciesRequiredItems"
          },
          "title": "The requirements for the given items"
        }
      }
    },
    "v2ListOwnedItemsFilterOptions": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "description": "The search term by which to filter the results."
        },
        "appType": {
          "$ref": "#/definitions/v2ListOwnedItemsFilterOptionsAppType"
        }
      }
    },
    "v2ListOwnedItemsFilterOptionsAppType": {
      "type": "string",
      "enum": [
        "NOT_SPECIFIED",
        "ALL",
        "APPLICATION",
        "ADDON"
      ],
      "default": "NOT_SPECIFIED"
    },
    "v2ListOwnedItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Item"
          },
          "description": "The items owned by the owner."
        },
        "nextCursor": {
          "type": "string",
          "description": "The next cursor for which to fetch the next page."
        },
        "hasMore": {
          "type": "boolean",
          "description": "The flag indicating whether there is another page."
        }
      }
    },
    "v2ListPartnerEnabledAppsRequestListAppsFilter": {
      "type": "object",
      "properties": {
        "appType": {
          "$ref": "#/definitions/marketplaceappsv2AppType",
          "description": "The type of the applications to return in the final set."
        },
        "filterTerm": {
          "type": "string",
          "description": "filter_term is the used as a regular expression pattern to filter applications against names and appIds.\nIf the filter term isn't specified, no filtering is performed."
        }
      }
    },
    "v2ListPartnerEnabledAppsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2App"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v2ListValuesByMultiKindResponse": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "title": "Slash-delimited scope path, determines whitelabeling and access privileges\nscope = /             global data\nscope = /<pid>        partner-specific data\nscope = /<pid>/<mid>  market/storefront-specific data"
        },
        "tagValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KindValues"
          },
          "title": "Possible values for each kind in the request"
        }
      },
      "title": "list of the kinds with their respective values"
    },
    "v2LmiCategory": {
      "type": "string",
      "enum": [
        "LMI_CATEGORY_NOT_SET",
        "LMI_CATEGORY_WEBSITE",
        "LMI_CATEGORY_CONTENT_AND_EXPERIENCE",
        "LMI_CATEGORY_LISTINGS",
        "LMI_CATEGORY_REPUTATION",
        "LMI_CATEGORY_SEO",
        "LMI_CATEGORY_SOCIAL",
        "LMI_CATEGORY_ADVERTISING"
      ],
      "default": "LMI_CATEGORY_NOT_SET",
      "description": "Definition of the local marketing indices supported by the marketplace. Note that this field\nis only intended for marketing information. It does not define the functionality an application\nwould provide."
    },
    "v2MarketplaceCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subCategories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MarketplaceCategory"
          }
        }
      }
    },
    "v2OrderFormFilter": {
      "type": "string",
      "enum": [
        "ORDER_FORM_FILTER_UNSPECIFIED",
        "ORDER_FORM_FILTER_HAS_ORDER_FORM",
        "ORDER_FORM_FILTER_NO_ORDER_FORM"
      ],
      "default": "ORDER_FORM_FILTER_UNSPECIFIED"
    },
    "v2Price": {
      "type": "object",
      "properties": {
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "Setup fee in cents"
        },
        "usesCustomPricing": {
          "type": "boolean",
          "title": "Indicates whether or not the app supports custom pricing"
        }
      }
    },
    "v2PriceDisplayOverride": {
      "type": "string",
      "enum": [
        "PRICE_DISPLAY_OVERRIDE_NONE",
        "PRICE_DISPLAY_OVERRIDE_CONTACT_SALES",
        "PRICE_DISPLAY_OVERRIDE_STARTING_AT"
      ],
      "default": "PRICE_DISPLAY_OVERRIDE_NONE"
    },
    "v2PricingRule": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string",
          "format": "int64",
          "title": "price for the unit"
        },
        "max": {
          "type": "string",
          "format": "int64",
          "title": "maximum number of units to get this price (-1 represents no limit)"
        },
        "min": {
          "type": "string",
          "format": "int64",
          "title": "minimum number of units to get this price"
        }
      },
      "title": "pricing rules (ie normal, stairstep)"
    },
    "v2ProductSuggestion": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productWebsiteUrl": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/v2SuggestionReason"
        },
        "otherReasonText": {
          "type": "string"
        }
      }
    },
    "v2ReplaceAppSettingsResponse": {
      "type": "object",
      "properties": {
        "appSettings": {
          "$ref": "#/definitions/v2AppSettings",
          "title": "The App Settings that was just created"
        }
      }
    },
    "v2RequestedApp": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "(app/addon/package) id of App prices to be hydrated"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "app/addon/package quantity to calculate the effective cost"
        }
      },
      "title": "TODO: rename this to RequestedItem once we've replaced all usages of requested_apps field"
    },
    "v2RequiredItem": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "unique identifier of the required item"
        },
        "name": {
          "type": "string",
          "title": "whitelabel name of the required item set by seller"
        }
      }
    },
    "v2RequiredParent": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "enabled determines whether or not the application requires the pre-condition of an active parent on an\naccount before the activation of itself."
        },
        "parentDetails": {
          "$ref": "#/definitions/RequiredParentDetails"
        }
      }
    },
    "v2SSOIntegration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "enabled determines whether or not the applicaiton requires sso for end users to access its' functionality."
        },
        "entryUrl": {
          "type": "string",
          "description": "The URL the user would be redirected to, when launching the product from business center client. Please note that\nnot all applications have sso configuration."
        }
      },
      "description": "The integration required for SSOing into the application."
    },
    "v2ScopedTag": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "title": "scope of the tag, ie:\nscope = /             global data\nscope = /<pid>        partner-specific data\nscope = /<pid>/<mid>  market/storefront-specific data"
        },
        "kind": {
          "type": "string",
          "title": "tag kind, ie: tag/lmi"
        },
        "value": {
          "type": "string",
          "title": "tag id or name, ie: reputation, SEO"
        },
        "data": {
          "type": "string",
          "title": "additional info of the tag"
        }
      }
    },
    "v2SharedMarketingInformation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the application."
        },
        "editionName": {
          "type": "string",
          "description": "The name of the edition for the application. This field is only applicable if the AppKey\ncontains an edition id."
        },
        "iconUrl": {
          "type": "string",
          "description": "A url for the icon representing the app."
        },
        "tagline": {
          "type": "string",
          "description": "A short and snappy slogan to represent what the app does."
        },
        "bannerImageUrl": {
          "type": "string",
          "description": "The URL for a banner image. This image is intended to represent the application in certain types of visualizations."
        },
        "lmiCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2LmiCategory"
          },
          "description": "The local marketing index categories the product falls in. For example if the lmi category is `advertising`, that\nmeans that the app will provide services or functionality that effects the advertising of a SMB."
        }
      },
      "description": "SharedMarketingInformation is to be consumed by all user types in the platform."
    },
    "v2SortDirection": {
      "type": "string",
      "enum": [
        "DESCENDING",
        "ASCENDING"
      ],
      "default": "DESCENDING",
      "description": "The directions that a result set can be sorted in."
    },
    "v2SuggestionReason": {
      "type": "string",
      "enum": [
        "SUGGESTION_REASON_INVALID",
        "SUGGESTION_REASON_START_OFFERING",
        "SUGGESTION_REASON_ALREADY_OFFER",
        "SUGGESTION_REASON_WORK_WELL_WITH_OTHER_PRODUCTS",
        "SUGGESTION_REASON_WANT_TO_USE_MYSELF",
        "SUGGESTION_REASON_OTHER"
      ],
      "default": "SUGGESTION_REASON_INVALID"
    },
    "v2Tag": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "tag kind, ie: tag/lmi"
        },
        "value": {
          "type": "string",
          "title": "tag id or name, ie: reputation, SEO"
        }
      }
    },
    "v2Trial": {
      "type": "object",
      "properties": {
        "allowSelfServe": {
          "type": "boolean",
          "title": "The SMB can, without Partner approval, activate this App as a trial"
        }
      },
      "title": "The settings to control how trials behave"
    },
    "v2UnitBillingFrequency": {
      "type": "string",
      "enum": [
        "UNIT_BILLING_FREQUENCY_INVALID",
        "UNIT_BILLING_FREQUENCY_MONTHLY",
        "UNIT_BILLING_FREQUENCY_YEARLY",
        "UNIT_BILLING_FREQUENCY_ONETIME"
      ],
      "default": "UNIT_BILLING_FREQUENCY_INVALID"
    },
    "v2UnitPrice": {
      "type": "object",
      "properties": {
        "pricesForCurrencies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2FrequencyPrices"
          },
          "title": "map of prices for currency codes"
        },
        "discount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Discount"
          },
          "title": "Discounts applied for the edition"
        }
      }
    },
    "v2UpgradeDialogContent": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the partner"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market"
        },
        "appId": {
          "type": "string",
          "title": "ID of the app"
        },
        "titleText": {
          "type": "string",
          "description": "The title text of the upgrade dialog."
        },
        "sellingPoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The selling points of the upgrade dialog."
        },
        "imageUrl": {
          "type": "string",
          "description": "The image URL of the upgrade dialog."
        },
        "buttonText": {
          "type": "string",
          "description": "The button text of the upgrade dialog."
        },
        "imageFileName": {
          "type": "string",
          "description": "The image file name of the upgrade dialog."
        }
      },
      "description": "UpgradeDialogContent are the partner configurable content of the upgrade dialog."
    },
    "v2UpsertResponse": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        }
      }
    },
    "vendastatypesPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "vendastatypesPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results. This is not supported on all paged apis and will be 0 if it is not supported"
        }
      }
    },
    "CallToActionCallToActionType": {
      "type": "string",
      "enum": [
        "LEARN_MORE",
        "BOOK",
        "ORDER",
        "SHOP",
        "SIGN_UP",
        "GET_OFFER",
        "CALL"
      ],
      "default": "LEARN_MORE",
      "title": "The type of the CTA"
    },
    "PartnerListScheduledSocialPostsRequestFilters": {
      "type": "object",
      "properties": {
        "dateRange": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Scheduled posts that are scheduled to be posted between begin and end\nOnly one of scheduled_date_filter or created_date_filter can be provided"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "SocialPostDeletionStatus": {
      "type": "string",
      "enum": [
        "NONE",
        "FAILED",
        "IN_PROGRESS"
      ],
      "default": "NONE"
    },
    "SocialPostService": {
      "type": "string",
      "enum": [
        "TWITTER",
        "FACEBOOK",
        "LINKED_IN",
        "GOOGLE_PLUS",
        "GOOGLE_MY_BUSINESS",
        "UNKNOWN",
        "INSTAGRAM",
        "CURATED_CONTENT",
        "YOUTUBE",
        "TIKTOK",
        "WORDPRESS"
      ],
      "default": "TWITTER"
    },
    "YoutubeCustomizationPrivacyStatus": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "STATUS_PUBLIC",
        "STATUS_PRIVATE",
        "STATUS_UNLISTED"
      ],
      "default": "STATUS_INVALID"
    },
    "YoutubeCustomizationV2PrivacyStatusV2": {
      "type": "string",
      "enum": [
        "YOUTUBE_PRIVACY_STATUS_INVALID",
        "YOUTUBE_PRIVACY_STATUS_PUBLIC",
        "YOUTUBE_PRIVACY_STATUS_PRIVATE",
        "YOUTUBE_PRIVACY_STATUS_UNLISTED"
      ],
      "default": "YOUTUBE_PRIVACY_STATUS_INVALID"
    },
    "socialpostsv1Author": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the author"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "The id of the author"
        }
      }
    },
    "socialpostsv1Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "The categoryId"
        },
        "name": {
          "type": "string",
          "title": "The category name"
        }
      }
    },
    "socialpostsv1Location": {
      "type": "object",
      "properties": {
        "socialServiceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of SSID for the location"
        },
        "accountGroupId": {
          "type": "string",
          "title": "AGID for the location"
        }
      }
    },
    "socialpostsv2Author": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "socialpostsv2Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "This is the categoryId"
        },
        "name": {
          "type": "string",
          "title": "This is the category name"
        }
      }
    },
    "socialpostsv2Post": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "title": "Topic to which the post generated"
        },
        "postContent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PostContent"
          },
          "title": "Post content by topic"
        }
      }
    },
    "v1BlogPostCustomization": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/v1Author"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Categories"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "siteType": {
          "type": "string"
        }
      }
    },
    "v1BulkCreateMultilocationPostResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1BulkPostStatus",
          "title": "The status of each post creation"
        },
        "error": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MultilocationPostError"
          },
          "title": "Array of MultilocationPostError"
        }
      }
    },
    "v1BulkPostStatus": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "default": "SUCCESS",
      "title": "Enum to indicate the status of each post creation"
    },
    "v1BulkUploadMultilocation": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "Original post text"
        },
        "media": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original media links"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date that the original post was scheduled to go"
        },
        "gifs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original gif links"
        },
        "videos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original video links"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Array of media content when uploading multiple media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Metadata about the post, could be anything"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags required to differentiate posts"
        },
        "customization": {
          "$ref": "#/definitions/v1PostCustomization",
          "title": "Extra specific configurations for the post"
        },
        "linkShortCode": {
          "type": "string",
          "description": "The short code of the link in this post."
        },
        "postTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SSIDPostType"
          },
          "title": "The type of post for each SSID e.g., Image/video/reel/gif etc"
        },
        "multilocationId": {
          "type": "string",
          "title": "Multilocation ID is the key for bulk upload post in multilocation"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv1Location"
          },
          "title": "Locations for each uploaded post"
        }
      },
      "title": "This message for create BulkUpload in Multilocation"
    },
    "v1CallToAction": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The url for the CTA"
        },
        "actionType": {
          "$ref": "#/definitions/CallToActionCallToActionType"
        }
      }
    },
    "v1CreateMultilocationPostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1MultilocationPost",
          "title": "The successfully created Multilocation post"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MultilocationPostError"
          },
          "title": "Multilocation posts with errors"
        }
      }
    },
    "v1CreatePostTemplateResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "A brand new unique internal identifier for a PostTemplate object"
        }
      }
    },
    "v1EditMultilocationPostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1MultilocationPost",
          "title": "The successfully created Multilocation post"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MultilocationPostError"
          },
          "title": "Any errors that may have occured on individual posts"
        }
      }
    },
    "v1Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1FacebookPostStats": {
      "type": "object",
      "properties": {
        "commentCount": {
          "type": "string",
          "format": "int64"
        },
        "shareCount": {
          "type": "string",
          "format": "int64"
        },
        "likeCount": {
          "type": "string",
          "format": "int64"
        },
        "hasLike": {
          "type": "boolean"
        },
        "canLike": {
          "type": "boolean"
        },
        "reactions": {
          "type": "string",
          "format": "int64"
        },
        "peopleReached": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GenerateCSVForPerformanceStatsResponse": {
      "type": "object",
      "properties": {
        "generatedId": {
          "type": "string",
          "title": "returns just a url string for now\nreason for calling it a generated id is so\nthat in future if we are supporting caching,\nwe can use a id instead of URL"
        }
      }
    },
    "v1GetGeneratedCSVForPerformanceStatsResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The csv storage url from google storage (or any other)"
        }
      }
    },
    "v1GetMultiSocialPostStatsResponse": {
      "type": "object",
      "properties": {
        "socialPostStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialPostStats"
          },
          "title": "Post stats entity"
        }
      }
    },
    "v1GetMultiSocialPostsResponse": {
      "type": "object",
      "properties": {
        "socialPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialPost"
          },
          "title": "The requested social posts"
        }
      }
    },
    "v1GetMultilocationPostResponse": {
      "type": "object",
      "properties": {
        "multilocationPost": {
          "$ref": "#/definitions/v1MultilocationPost",
          "title": "The requested multilocation post"
        }
      }
    },
    "v1GetPostTemplateResponse": {
      "type": "object",
      "properties": {
        "postTemplate": {
          "$ref": "#/definitions/v1PostTemplate",
          "title": "The obtained PostTemplate"
        }
      }
    },
    "v1GetScheduledPostCountResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The total count of scheduled posts"
        }
      }
    },
    "v1GetTenorAnonymousIdResponse": {
      "type": "object",
      "properties": {
        "anonymousId": {
          "type": "string",
          "title": "Anonyous id to be used for calling tenor"
        },
        "deprecated": {
          "type": "string"
        }
      }
    },
    "v1Hashtag": {
      "type": "object",
      "properties": {
        "hashTagId": {
          "type": "string",
          "title": "The id of hash tag"
        },
        "keyword": {
          "type": "string",
          "title": "The keyword"
        },
        "usedCount": {
          "type": "string",
          "format": "int64",
          "title": "Used count"
        },
        "businessId": {
          "type": "string",
          "title": "The business id of the account"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner id of the account"
        }
      }
    },
    "v1ListMultilocationPostsForBrandResponse": {
      "type": "object",
      "properties": {
        "multilocationPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MultilocationPost"
          },
          "title": "List of MultilocationPost"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "failedSocialPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialPost"
          },
          "title": "A list of failed social posts in this range"
        }
      }
    },
    "v1ListPixabayImagesResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total number"
        },
        "totalHits": {
          "type": "string",
          "format": "int64",
          "title": "hit number"
        },
        "hits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PixabayImage"
          },
          "title": "Hit pixabay images response list"
        },
        "deprecated": {
          "type": "string"
        }
      }
    },
    "v1ListPostTemplatesResponse": {
      "type": "object",
      "properties": {
        "postTemplate": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PostTemplate"
          },
          "title": "List of obtained Templates"
        },
        "nextCursor": {
          "type": "string",
          "title": "Cursor to more templates if it is greater then the page size"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Boolean if there are more templates to get"
        }
      }
    },
    "v1ListSocialPostsResponse": {
      "type": "object",
      "properties": {
        "socialPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialPost"
          },
          "title": "A page of social posts"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1ListTenorGifsResponse": {
      "type": "object",
      "properties": {
        "next": {
          "type": "string",
          "title": "next cursor"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TenorGif"
          },
          "title": "resulting list of tenor gifs"
        },
        "deprecated": {
          "type": "string"
        }
      }
    },
    "v1MediaEntry": {
      "type": "object",
      "properties": {
        "mediaEntryId": {
          "type": "string"
        },
        "mediaUrl": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "containerId": {
          "type": "string"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          }
        }
      }
    },
    "v1MessageLength": {
      "type": "string",
      "enum": [
        "SHORT_FORM",
        "LONG_FORM"
      ],
      "default": "SHORT_FORM"
    },
    "v1MetaData": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        }
      },
      "title": "Metadata message type for saving properties in instagram \u00b5service"
    },
    "v1MultilocationPost": {
      "type": "object",
      "properties": {
        "brandId": {
          "type": "string",
          "title": "BrandID for the post"
        },
        "multilocationId": {
          "type": "string",
          "title": "MultilocationID"
        },
        "originalText": {
          "type": "string",
          "title": "Original post text"
        },
        "originalScheduledDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date that the original post was scheduled to go"
        },
        "originalMedia": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original media links (images only)"
        },
        "originalLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv1Location"
          },
          "title": "List of locations in the original post"
        },
        "editedLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv1Location"
          },
          "title": "List of edited(in SL) locations"
        },
        "deletedLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv1Location"
          },
          "title": "List of deleted(in SL) locations"
        },
        "originalGifs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original gif links"
        },
        "originalVideos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original video links"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Array of media content when uploading multiple media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Metadata about the post, could be anything"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags required to differentiate posts"
        },
        "customization": {
          "$ref": "#/definitions/v1PostCustomization",
          "title": "Extra specific configurations for the post"
        },
        "linkShortCode": {
          "type": "string",
          "description": "The short code of the link in this post."
        },
        "postTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SSIDPostType"
          },
          "title": "The PostType for each of the SSIDs associated with this post"
        }
      }
    },
    "v1MultilocationPostError": {
      "type": "object",
      "properties": {
        "socialServiceId": {
          "type": "string",
          "title": "SSID for which the error happened"
        },
        "accountGroupId": {
          "type": "string",
          "title": "AGID for which the error happened"
        },
        "errorReason": {
          "type": "string",
          "title": "Actual error message"
        }
      }
    },
    "v1PartnerListScheduledPostsResponse": {
      "type": "object",
      "properties": {
        "socialPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialPost"
          },
          "title": "A page of social posts"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1PixabayImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "The id of pixabay image"
        },
        "pageUrl": {
          "type": "string",
          "title": "pixabay image page URL"
        },
        "type": {
          "type": "string",
          "title": "pixabay image type"
        },
        "tags": {
          "type": "string",
          "title": "pixabay image tag"
        },
        "previewUrl": {
          "type": "string",
          "title": "pixabay image preview"
        },
        "previewWidth": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image preview width"
        },
        "previewHeight": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image preview height"
        },
        "webformatUrl": {
          "type": "string",
          "title": "pixabay image webformat URL"
        },
        "webformatWidth": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image webformat wdith"
        },
        "webformatHeight": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image webformat height"
        },
        "largeImageUrl": {
          "type": "string",
          "title": "pixabay image large image URL"
        },
        "fullHdUrl": {
          "type": "string",
          "title": "pixabay image full HD URL"
        },
        "imageUrl": {
          "type": "string",
          "title": "pixabay image image URL"
        },
        "imageWidth": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image image width"
        },
        "imageHeight": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image image height"
        },
        "imageSize": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image image size"
        },
        "views": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image count of view"
        },
        "downloads": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image count of download"
        },
        "favorites": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image count of favorite"
        },
        "likes": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image count of like"
        },
        "comments": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image count of comment"
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "pixabay image user Id"
        },
        "user": {
          "type": "string",
          "title": "pixabay image user"
        },
        "userImageUrl": {
          "type": "string",
          "title": "pixabay image user image URL"
        }
      }
    },
    "v1PostAction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Represents the type of the CTA"
        },
        "linkUrl": {
          "type": "string",
          "title": "The link where the CTA will lead to"
        }
      },
      "title": "Represents the action associated with the post when the network allows CTA"
    },
    "v1PostCustomization": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1PostEvent",
          "title": "Event associated with this post. For example, a GMB event that should be created with the post"
        },
        "action": {
          "$ref": "#/definitions/v1PostAction",
          "title": "Actions that can be triggered within the posts when the network allows CTA"
        }
      },
      "title": "Contains extra configurations of a post, like events and actions"
    },
    "v1PostData": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "string"
        },
        "reach": {
          "type": "string",
          "format": "int64"
        },
        "engagement": {
          "type": "number",
          "format": "float"
        },
        "views": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "comments": {
          "type": "string",
          "format": "int64"
        },
        "shares": {
          "type": "string",
          "format": "int64"
        },
        "reactions": {
          "type": "string",
          "format": "int64"
        },
        "saves": {
          "type": "string",
          "format": "int64"
        },
        "likes": {
          "type": "string",
          "format": "int64"
        },
        "videoViews": {
          "type": "string",
          "format": "int64"
        },
        "retweets": {
          "type": "string",
          "format": "int64"
        },
        "favourites": {
          "type": "string",
          "format": "int64"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "commentsCount": {
          "type": "string",
          "format": "int64"
        },
        "likeCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1PostEvent": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "Title of the event related to the post"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the event will start"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the event will end"
        }
      },
      "title": "Represents an event that should be associated/created with a post"
    },
    "v1PostTemplate": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "description": "Unique id signifying account group this belongs to."
        },
        "templateId": {
          "type": "string",
          "description": "Unique id signifying template this is."
        },
        "title": {
          "type": "string",
          "description": "Title of Template."
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "postText": {
          "type": "string",
          "description": "Text contained in template."
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "gmbPostCustomization": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "imageSize": {
          "type": "string"
        },
        "previews": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "videoUrl": {
          "type": "string"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Array of media content when uploading multiple media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Metadata about the media, could be anything"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType",
          "title": "The type of post e.g., Image/video/reel/gif etc"
        },
        "youtubeCustomization": {
          "$ref": "#/definitions/v1YoutubeCustomization",
          "title": "Youtube customization"
        },
        "tiktokCustomization": {
          "$ref": "#/definitions/v1TikTokCustomization",
          "title": "Tiktok customization"
        }
      }
    },
    "v1PostType": {
      "type": "string",
      "enum": [
        "POST_TYPE_INVALID",
        "POST_TYPE_IMAGE",
        "POST_TYPE_VIDEO",
        "POST_TYPE_GIF",
        "POST_TYPE_REEL",
        "POST_TYPE_CAROUSEL",
        "POST_TYPE_STORIES"
      ],
      "default": "POST_TYPE_INVALID"
    },
    "v1PostingStatus": {
      "type": "string",
      "enum": [
        "POSTING_IN_PROGRESS",
        "POSTING_FAILED",
        "POSTING_COMPLETED"
      ],
      "default": "POSTING_IN_PROGRESS"
    },
    "v1RemoveReason": {
      "type": "string",
      "enum": [
        "REMOVE_REASON_EDIT",
        "REMOVE_REASON_DELETE"
      ],
      "default": "REMOVE_REASON_EDIT",
      "description": " - REMOVE_REASON_EDIT: Used if the post is edited.\n - REMOVE_REASON_DELETE: Used if the post is deleted."
    },
    "v1SSIDPostType": {
      "type": "object",
      "properties": {
        "socialServiceId": {
          "type": "string"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType"
        }
      },
      "title": "SSIDPostType represents the post type for each social service id"
    },
    "v1SchedulePostResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SchedulePostStatus"
          },
          "title": "The statuses of the posts that were attempted to be scheduled"
        }
      }
    },
    "v1SchedulePostStatus": {
      "type": "object",
      "properties": {
        "socialPostId": {
          "type": "string",
          "title": "The ID of this post that can be used to get it again"
        },
        "socialServiceId": {
          "type": "string",
          "title": "The ID of the social page this post was posted to"
        },
        "socialServiceLabel": {
          "type": "string",
          "title": "The Name or Username of the social page this post was posted to (may not\nalways be populated)"
        },
        "error": {
          "$ref": "#/definitions/v1Error",
          "title": "The reason why there was an error scheduling the post. Error will be nil if\nit was successful"
        }
      }
    },
    "v1ScheduleToAllPagesResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SchedulePostStatus"
          },
          "title": "The statuses of the posts that were attempted to be scheduled"
        }
      }
    },
    "v1SearchHashtagResponse": {
      "type": "object",
      "properties": {
        "hashtags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Hashtag"
          },
          "title": "Hashtag response list"
        }
      }
    },
    "v1SocialCampaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        },
        "id": {
          "type": "string",
          "title": "Unique ID of the campaign"
        }
      }
    },
    "v1SocialPost": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The unique identifier of the business this post is related to"
        },
        "socialPostId": {
          "type": "string"
        },
        "postText": {
          "type": "string"
        },
        "posted": {
          "type": "string",
          "format": "date-time",
          "title": "The date time that this post was posted to it's corresponding social\naccount"
        },
        "isError": {
          "type": "boolean"
        },
        "deletionStatus": {
          "$ref": "#/definitions/SocialPostDeletionStatus"
        },
        "service": {
          "$ref": "#/definitions/SocialPostService"
        },
        "permalink": {
          "type": "string",
          "title": "The link to the post on the social page (e.g. an actual link to Facebook)"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date time that this entity was created in our system (not the time that\nit was posted)"
        },
        "profileUrl": {
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "scheduled": {
          "type": "string",
          "format": "date-time",
          "title": "The date time that this post is scheduled to be posted. If it's in the past\nthat means it we have or are attempting to post this You can see if it was\nsuccessful based on the status"
        },
        "status": {
          "$ref": "#/definitions/v1PostingStatus",
          "title": "The status of attempting to post this social post to the social account"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image posted"
        },
        "name": {
          "type": "string",
          "title": "The name of the social account (may not always be populated)"
        },
        "username": {
          "type": "string",
          "title": "The username of the social account (may not always be populated)"
        },
        "parentId": {
          "type": "string",
          "title": "The correlation id for posts that have been posted as a group"
        },
        "socialServiceId": {
          "type": "string",
          "title": "The id of the social service this post was created with"
        },
        "event": {
          "$ref": "#/definitions/v1Event",
          "title": "The event for a Google My Business post"
        },
        "callToAction": {
          "$ref": "#/definitions/v1CallToAction",
          "title": "The call to action for a Google My Busines post"
        },
        "videoUrl": {
          "type": "string",
          "title": "The video posted"
        },
        "error": {
          "$ref": "#/definitions/v1Error",
          "title": "The reason why there was an error scheduling the post. Error will be nil if\nit was successful"
        },
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of images for this post"
        },
        "linkPreviewImageUrl": {
          "type": "string",
          "description": "An image that appears as a preview to a URL link."
        },
        "brandId": {
          "type": "string",
          "title": "A unique identifer for a brand (if this is a multilocation post)"
        },
        "multilocationPostId": {
          "type": "string",
          "title": "A unique identifer if this is a multilocation post"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType",
          "title": "The type of post e.g., Image/video/reel/gif etc"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Array of media content when uploading multiple media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Metadata about the media, could be anything"
        },
        "title": {
          "type": "string",
          "title": "The title of the post"
        },
        "youtubeCustomization": {
          "$ref": "#/definitions/v1YoutubeCustomization",
          "title": "Customization for youtube posts"
        },
        "tiktokCustomization": {
          "$ref": "#/definitions/v1TikTokCustomization",
          "title": "Customization for tiktok posts"
        },
        "blogPostCustomization": {
          "$ref": "#/definitions/v1BlogPostCustomization",
          "title": "Customization for blog posts"
        },
        "campaign": {
          "$ref": "#/definitions/v1SocialCampaign",
          "title": "Campaign details of a post"
        }
      },
      "title": "The information about a social post. It does not necessarily need to have\nbeen posted yet"
    },
    "v1SocialPostData": {
      "type": "object",
      "properties": {
        "postText": {
          "type": "string",
          "title": "The text to post, must be provided for all twitter and google plus page\nposts"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image to post"
        },
        "scheduleFor": {
          "type": "string",
          "format": "date-time",
          "title": "When this social post should be posted. If not provided the social  will be\nposted asap"
        }
      }
    },
    "v1SocialPostStats": {
      "type": "object",
      "properties": {
        "internalPostId": {
          "type": "string"
        },
        "facebookPostStats": {
          "$ref": "#/definitions/v1FacebookPostStats"
        },
        "twitterPostStats": {
          "$ref": "#/definitions/v1TwitterPostStats"
        }
      }
    },
    "v1SuggestMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1TemplateType": {
      "type": "string",
      "enum": [
        "TEMPLATE_TYPE_UNSPECIFIED",
        "TEMPLATE_TYPE_REVIEW_REQUEST",
        "TEMPLATE_TYPE_NPS_REQUEST",
        "TEMPLATE_TYPE_REVIEW_AND_NPS_REQUEST"
      ],
      "default": "TEMPLATE_TYPE_UNSPECIFIED"
    },
    "v1TenorGif": {
      "type": "object",
      "properties": {
        "media": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1TenorMediaObject"
          },
          "title": "The gif in various file types"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Gif tags"
        },
        "hasAudio": {
          "type": "boolean",
          "title": "If the gif has audio"
        },
        "title": {
          "type": "string",
          "title": "Gif name"
        },
        "id": {
          "type": "string",
          "title": "Gif id"
        },
        "created": {
          "type": "number",
          "format": "float",
          "title": "Gif created time"
        }
      }
    },
    "v1TenorMediaObject": {
      "type": "object",
      "properties": {
        "preview": {
          "type": "string",
          "title": "Preview url"
        },
        "url": {
          "type": "string",
          "title": "Gif url"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "Gif dimensions"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Gif file size"
        }
      }
    },
    "v1TikTokCustomization": {
      "type": "object",
      "properties": {
        "allowComment": {
          "type": "boolean"
        },
        "allowDuet": {
          "type": "boolean"
        },
        "allowStitch": {
          "type": "boolean"
        }
      }
    },
    "v1TwitterPostStats": {
      "type": "object",
      "properties": {
        "favourites": {
          "type": "string",
          "format": "int64"
        },
        "hasFavourited": {
          "type": "boolean"
        },
        "retweets": {
          "type": "string",
          "format": "int64"
        },
        "hasRetweeted": {
          "type": "boolean"
        }
      }
    },
    "v1YoutubeCustomization": {
      "type": "object",
      "properties": {
        "privacyStatus": {
          "$ref": "#/definitions/YoutubeCustomizationPrivacyStatus"
        }
      }
    },
    "v2Action": {
      "type": "object",
      "properties": {
        "actionType": {
          "$ref": "#/definitions/v2ActionType",
          "description": "Action type represent what type content needed from AI."
        },
        "actionPayload": {
          "type": "string",
          "title": "action payload is the param which hold the text to be modified"
        }
      }
    },
    "v2ActionType": {
      "type": "string",
      "enum": [
        "RESPOND",
        "CHANGE_TONE"
      ],
      "default": "RESPOND"
    },
    "v2AiInstructions": {
      "type": "object",
      "properties": {
        "commonAiInstructions": {
          "type": "string"
        },
        "dataUsageStatus": {
          "type": "boolean"
        },
        "aiBlogInstructions": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2Ancestry": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v2SubAncestry"
        },
        "category": {
          "$ref": "#/definitions/v2SubAncestry"
        },
        "subcategory": {
          "$ref": "#/definitions/v2SubAncestry"
        }
      }
    },
    "v2AuthorsResponse": {
      "type": "object",
      "properties": {
        "authors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv2Author"
          },
          "title": "List of available authors"
        }
      }
    },
    "v2BlogConnection": {
      "type": "object",
      "properties": {
        "socialServiceId": {
          "type": "string",
          "title": "The unique identifier of the blog post connection"
        },
        "name": {
          "type": "string",
          "title": "The name of the blog post connection"
        },
        "businessId": {
          "type": "string",
          "title": "The business id of the blog post connection"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner id of the blog post connection"
        },
        "apiKey": {
          "type": "string",
          "title": "The api key of the blog post connection"
        },
        "logo": {
          "type": "string",
          "title": "The logo of the blog post connection"
        },
        "pluginStatus": {
          "type": "boolean",
          "title": "The plugin status of the blog post connection"
        },
        "version": {
          "type": "string",
          "title": "The version of the wordpress plugin"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Connection created date time"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Connection updated date time"
        },
        "siteUrl": {
          "type": "string",
          "title": "The root url of the website"
        }
      }
    },
    "v2BlogImage": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "The path of the image"
        },
        "publicUrl": {
          "type": "string",
          "title": "The public url of the image"
        }
      }
    },
    "v2BlogPost": {
      "type": "object",
      "properties": {
        "internalPostId": {
          "type": "string",
          "title": "Internal post Id of Blog"
        },
        "socialServiceId": {
          "type": "string",
          "title": "Social service Id for blog"
        },
        "businessId": {
          "type": "string",
          "title": "Business ID"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID"
        },
        "postId": {
          "type": "string",
          "title": "Blog Post Id"
        },
        "title": {
          "type": "string",
          "title": "Blog Title"
        },
        "content": {
          "type": "string",
          "title": "Blog Content"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MediaProperty"
          },
          "title": "Image property for Blog"
        },
        "video": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MediaProperty"
          },
          "title": "Video property for Blog"
        },
        "permalink": {
          "type": "string",
          "title": "Permalink for a blog"
        },
        "siteType": {
          "type": "string",
          "title": "Site Type"
        },
        "author": {
          "$ref": "#/definitions/socialpostsv2Author",
          "title": "Author for a blog"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv2Category"
          },
          "title": "Category for a blog"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags for a blog"
        },
        "error": {
          "type": "string",
          "title": "Holds the error message from blog"
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Blog post date time"
        },
        "postedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Blog posted date time"
        },
        "userId": {
          "type": "string",
          "title": "User Id"
        },
        "userName": {
          "type": "string",
          "title": "User Name"
        },
        "pageViews": {
          "type": "string",
          "format": "int64",
          "title": "Blog post visitor count"
        },
        "commentsCount": {
          "type": "string",
          "format": "int64",
          "title": "Blog comment count"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created Time"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated Time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted Time"
        }
      }
    },
    "v2BlogPostCampaign": {
      "type": "object",
      "properties": {
        "blogPostId": {
          "type": "string",
          "title": "Unique identifier for the blog post"
        },
        "blogPostType": {
          "$ref": "#/definitions/v2PostCategory",
          "title": "Type of the blog post"
        },
        "noOfPosts": {
          "type": "integer",
          "format": "int64",
          "title": "No. of posts to generate"
        }
      }
    },
    "v2BlogVideo": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "The path of the video"
        },
        "publicUrl": {
          "type": "string",
          "title": "The public url of the video"
        }
      }
    },
    "v2Campaign": {
      "type": "object",
      "properties": {
        "campaignName": {
          "type": "string",
          "title": "Name of the campaign"
        },
        "businessId": {
          "type": "string",
          "title": "The business id of the campaign post"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner id of the campaign post"
        },
        "id": {
          "type": "string",
          "title": "The unique id of the campaign"
        }
      }
    },
    "v2CategoryResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv2Category"
          },
          "title": "This Categories is give us the Array of response"
        }
      }
    },
    "v2ChatMessage": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v2Role"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "v2Collection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "publishedAt": {
          "type": "string"
        },
        "lastCollectedAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "coverPhoto": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "v2ContentLength": {
      "type": "string",
      "enum": [
        "SHORT_FORM",
        "MEDIUM_FORM",
        "LONG_FORM",
        "OPTIMIZED_FORM"
      ],
      "default": "SHORT_FORM",
      "title": "The length of the content to be generated"
    },
    "v2CreateBlogConnectionResponse": {
      "type": "object",
      "properties": {
        "socialServiceId": {
          "type": "string",
          "title": "Unique identifier of the connection"
        }
      }
    },
    "v2CreateCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "This is identifier for the campaign"
        }
      }
    },
    "v2CreateCommonAiInstructionsResponse": {
      "type": "object",
      "properties": {
        "aiInstructions": {
          "$ref": "#/definitions/v2AiInstructions"
        }
      }
    },
    "v2CreateImageResponse": {
      "type": "object",
      "properties": {
        "createdId": {
          "type": "string",
          "format": "uint64",
          "title": "request id from DALLE"
        },
        "generatedImages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ImageCreated"
          },
          "title": "List of images"
        }
      }
    },
    "v2CuratedContentPost": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Unique identifier of the post"
        },
        "text": {
          "type": "string",
          "title": "The message of the post"
        },
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2UploadedMedia"
          },
          "title": "Both the image and video details are stored in this field"
        },
        "errors": {
          "type": "string",
          "title": "The error message if the post is an error"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID of the post"
        },
        "createdAt": {
          "type": "string",
          "title": "The date the post was created"
        },
        "postedAt": {
          "type": "string",
          "title": "The date the post was posted"
        }
      }
    },
    "v2FetchLibraryImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ImageResponse"
          },
          "title": "List of images fetched"
        }
      }
    },
    "v2GenerateAiResponse": {
      "type": "object",
      "properties": {
        "multiResult": {
          "$ref": "#/definitions/v2MultiResponse",
          "title": "(For TITLE and OUTLINE)"
        },
        "result": {
          "$ref": "#/definitions/v2Response",
          "title": "(For BLOG)"
        }
      },
      "title": "This is Wrapper message for multiple response types"
    },
    "v2GenerateContentMetaDataResponse": {
      "type": "object",
      "properties": {
        "generatedTitle": {
          "type": "string",
          "title": "Generated title suggestion"
        },
        "generatedKeywords": {
          "$ref": "#/definitions/v2KeywordList",
          "description": "deprected use FetchLibraryImagesResponse endpoint",
          "title": "List of generated keywords"
        }
      }
    },
    "v2GeneratePostCampaignResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/socialpostsv2Post"
          },
          "title": "List of posts generated"
        }
      }
    },
    "v2GeneratePostsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2GeneratePostsResponsePost"
          }
        },
        "keyword": {
          "type": "string"
        }
      }
    },
    "v2GeneratePostsResponsePost": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "v2GenerateType": {
      "type": "string",
      "enum": [
        "TITLE",
        "OUTLINE",
        "BLOG"
      ],
      "default": "TITLE",
      "title": "This request and response for AI purpose"
    },
    "v2GetBlogConnectionResponse": {
      "type": "object",
      "properties": {
        "blogConnection": {
          "$ref": "#/definitions/v2BlogConnection",
          "title": "The blog post connection"
        }
      }
    },
    "v2GetCampaignResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v2Campaign"
        }
      }
    },
    "v2GetCommonAiInstructionsResponse": {
      "type": "object",
      "properties": {
        "aiInstructions": {
          "$ref": "#/definitions/v2AiInstructions"
        }
      }
    },
    "v2GetMultiBlogPostsResponse": {
      "type": "object",
      "properties": {
        "blogPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2BlogPost"
          },
          "title": "A list of BlogPost"
        }
      }
    },
    "v2GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Campaign"
          },
          "title": "A array of campaigns"
        }
      }
    },
    "v2Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The internal ID of the image"
        },
        "url": {
          "type": "string",
          "title": "The image public url"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav2Tag"
          },
          "title": "The tags for the image"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the image was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the image was updated"
        }
      },
      "description": "A model representing an image."
    },
    "v2ImageBlob": {
      "type": "object",
      "properties": {
        "blob": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v2ImageCreated": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "b64Json": {
          "type": "string"
        },
        "revisedPrompt": {
          "type": "string"
        }
      }
    },
    "v2ImageResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "pixabay image type"
        },
        "webformatUrl": {
          "type": "string",
          "title": "pixabay image webformat URL"
        },
        "fullHdUrl": {
          "type": "string",
          "title": "pixabay image full HD URL"
        }
      }
    },
    "v2KeywordGeneration": {
      "type": "object",
      "properties": {
        "blogPostId": {
          "type": "string",
          "title": "Unique identifier for the blog post"
        },
        "keywordCount": {
          "type": "integer",
          "format": "int64",
          "title": "Number of keywords to generate"
        },
        "postType": {
          "$ref": "#/definitions/v2PostCategory",
          "title": "Type of the blog post"
        }
      }
    },
    "v2KeywordList": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2LinkV2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the link preview"
        },
        "picture": {
          "type": "string",
          "description": "The preview image associated with the link."
        },
        "description": {
          "type": "string",
          "title": "The description of the link"
        },
        "title": {
          "type": "string",
          "title": "The title for the link"
        },
        "url": {
          "type": "string",
          "title": "The URL of the link"
        },
        "shortcode": {
          "type": "string",
          "title": "The shortcode of the link"
        }
      },
      "title": "Represents all the information of a post's link"
    },
    "v2Links": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "html": {
          "type": "string"
        },
        "download": {
          "type": "string"
        },
        "downloadLocation": {
          "type": "string"
        }
      }
    },
    "v2ListBlogConnectionResponse": {
      "type": "object",
      "properties": {
        "blogConnections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2BlogConnection"
          },
          "title": "List of connections under a business id"
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v2ListCuratedContentResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2CuratedContentPost"
          }
        },
        "externalId": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextCursor": {
          "type": "string"
        }
      }
    },
    "v2ListUnsplashImagesResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64"
        },
        "totalPages": {
          "type": "string",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Photo"
          }
        }
      }
    },
    "v2Media": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "locationPath": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "v2MediaProperty": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path of media"
        },
        "publicUrl": {
          "type": "string",
          "title": "Public Url for the blog media"
        }
      }
    },
    "v2MediaType": {
      "type": "string",
      "enum": [
        "MEDIA_TYPE_INVALID",
        "MEDIA_TYPE_IMAGE",
        "MEDIA_TYPE_VIDEO",
        "MEDIA_TYPE_GIF",
        "MEDIA_TYPE_CAROUSEL"
      ],
      "default": "MEDIA_TYPE_INVALID"
    },
    "v2MediaUploadResponse": {
      "type": "object",
      "properties": {
        "uploadUrns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "upload_urn would be a resouce identifier returned by LinkedIn service which\nwould be needed to add iamge/video in a post"
        }
      }
    },
    "v2MetadataV2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The property name or key"
        },
        "value": {
          "type": "string",
          "title": "The property value associated with the name/key"
        }
      },
      "title": "Stored as key/value pairs can contain generic metadata information"
    },
    "v2MultiResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Response message for Title and Outline(Array of string)"
    },
    "v2Network": {
      "type": "string",
      "enum": [
        "INVALID_NETWORK",
        "FACEBOOK",
        "INSTAGRAM",
        "LINKEDIN",
        "TWITTER",
        "GMB",
        "TIKTOK",
        "YOUTUBE",
        "CUSTOM_FEED",
        "WORDPRESS"
      ],
      "default": "INVALID_NETWORK"
    },
    "v2Photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "promotedAt": {
          "type": "string"
        },
        "width": {
          "type": "string",
          "format": "int64"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "color": {
          "type": "string"
        },
        "blurHash": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "altDescription": {
          "type": "string"
        },
        "breadcrumbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "urls": {
          "$ref": "#/definitions/v2Urls"
        },
        "links": {
          "$ref": "#/definitions/v2Links"
        },
        "likes": {
          "type": "string",
          "format": "int64"
        },
        "likedByUser": {
          "type": "boolean"
        },
        "currentUserCollections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Collection"
          }
        },
        "sponsorship": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "$ref": "#/definitions/v2User"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Tags"
          }
        },
        "storageUrl": {
          "type": "string",
          "title": "Local storage url"
        }
      }
    },
    "v2PostActionV2": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Represents the type of the CTA"
        },
        "linkUrl": {
          "type": "string",
          "title": "The link where the CTA will lead to"
        }
      },
      "title": "Represents the action associated with the post when the network allows CTA"
    },
    "v2PostCategory": {
      "type": "string",
      "enum": [
        "INVALID_CATEGORY",
        "DRAFT",
        "SCHEDULED",
        "PUBLISHED"
      ],
      "default": "INVALID_CATEGORY"
    },
    "v2PostContent": {
      "type": "object",
      "properties": {
        "socialNetwork": {
          "$ref": "#/definitions/v2Network",
          "title": "Network to which the post generated"
        },
        "post": {
          "type": "string",
          "title": "Post generated"
        }
      }
    },
    "v2PostContentV2": {
      "type": "object",
      "properties": {
        "postText": {
          "type": "string",
          "title": "The text of the post"
        },
        "medias": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PostMediaV2"
          },
          "title": "All media associated with the post"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LinkV2"
          },
          "title": "Contains the information of a post's link if any"
        },
        "description": {
          "type": "string",
          "title": "Description : Added specifically for linkedin"
        },
        "title": {
          "type": "string",
          "title": "Title: Not required for all social networks"
        }
      },
      "title": "Represents all the content of a post: text, media, links, etc"
    },
    "v2PostCustomizationV2": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v2PostEventV2",
          "title": "Event associated with this post. For example, a GMB event that should be created with the post"
        },
        "action": {
          "$ref": "#/definitions/v2PostActionV2",
          "title": "Actions that can be triggered within the posts when the network allows CTA"
        }
      },
      "title": "Contains extra configurations of a post, like events and actions"
    },
    "v2PostEventV2": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "Title of the event related to the post"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the event will start"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the event will end"
        }
      },
      "title": "Represents an event that should be associated/created with a post"
    },
    "v2PostMediaV2": {
      "type": "object",
      "properties": {
        "mediaId": {
          "type": "string",
          "title": "Identifier of all the media associated to a post"
        },
        "mediaUrl": {
          "type": "string",
          "title": "The URL where the media is stored"
        },
        "mediaType": {
          "type": "string",
          "title": "Type of the media: 'IMAGE' or 'VIDEO', etc"
        },
        "containerId": {
          "type": "string",
          "title": "Represents the container identifier, if the network requires it"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MetadataV2"
          },
          "title": "Contains metadata if any associated with each media of the post"
        }
      },
      "title": "Represents the media used on a post"
    },
    "v2PostStatusV2": {
      "type": "string",
      "enum": [
        "POST_STATUS_INVALID",
        "POST_STATUS_SUCCESS",
        "POST_STATUS_ERROR"
      ],
      "default": "POST_STATUS_INVALID",
      "title": "Represents the status of a post"
    },
    "v2PostTypeV2": {
      "type": "string",
      "enum": [
        "POST_TYPE_INVALID",
        "POST_TYPE_IMAGE",
        "POST_TYPE_VIDEO",
        "POST_TYPE_GIF",
        "POST_TYPE_MULTI_MEDIA",
        "POST_TYPE_TEXT",
        "POST_TYPE_STORIES"
      ],
      "default": "POST_TYPE_INVALID",
      "title": "Represents the type of a post"
    },
    "v2PostsGeneration": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The topic the posts should be about"
        },
        "goal": {
          "type": "string",
          "title": "The goal of the post"
        },
        "tone": {
          "$ref": "#/definitions/v2Tone",
          "title": "Tone of the post"
        },
        "contentLength": {
          "$ref": "#/definitions/v2ContentLength",
          "title": "Length of the post"
        },
        "noOfPosts": {
          "type": "integer",
          "format": "int64",
          "title": "No. of posts to generate"
        },
        "useCommonInstr": {
          "type": "boolean",
          "title": "Whether or not use common instructions"
        }
      }
    },
    "v2PublishPostResponse": {
      "type": "object",
      "properties": {
        "internalPostId": {
          "type": "string",
          "title": "Internal ID of the post"
        }
      }
    },
    "v2Response": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "title": "Response message for BLOG (String)"
    },
    "v2Role": {
      "type": "string",
      "enum": [
        "INVALID",
        "USER",
        "AI_BOT"
      ],
      "default": "INVALID"
    },
    "v2SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageResponse": {
          "type": "string",
          "description": "Message Response is Text where it holds the actual text model received from AI based on our input."
        },
        "threadId": {
          "type": "string",
          "title": "Thread Id used to get the conversation details of Thread"
        }
      }
    },
    "v2SendMessageV2Response": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "The Vendasta internal message id"
        }
      }
    },
    "v2Social": {
      "type": "object",
      "properties": {
        "instagramUsername": {
          "type": "string"
        },
        "portfolioUrl": {
          "type": "string"
        },
        "twitterUsername": {
          "type": "string"
        },
        "paypalEmail": {
          "type": "string"
        }
      }
    },
    "v2SocialPostOutput": {
      "type": "object",
      "properties": {
        "internalPostId": {
          "type": "string",
          "title": "Internal identifier of the post"
        },
        "socialPost": {
          "$ref": "#/definitions/v2SocialPostV2",
          "title": "All the post content and information"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MetadataV2"
          },
          "title": "Contains metadata if any associated with the post"
        },
        "status": {
          "$ref": "#/definitions/v2PostStatusV2",
          "title": "Represents the status of each post, since we allow partial schedule for bundles"
        },
        "statusMessage": {
          "type": "string",
          "title": "A message related to the post. Can be the error message in case of an error status, for example"
        }
      },
      "title": "Contains all the information of a post plus internal identifier and metadata"
    },
    "v2SocialPostResponse": {
      "type": "object",
      "properties": {
        "socialPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2SocialPostOutput"
          },
          "title": "List of the created/scheduled posts containing internal identifiers"
        }
      },
      "title": "The complete response of the ScheduleSocialPosts RPC"
    },
    "v2SocialPostV2": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id that owes this post"
        },
        "socialServiceId": {
          "type": "string",
          "title": "Social service id represents specific networks ids. Indicates the network in which the post will be published"
        },
        "postContent": {
          "$ref": "#/definitions/v2PostContentV2",
          "description": "Stores the content of the post: text, media, links, etc."
        },
        "scheduled": {
          "type": "string",
          "format": "date-time",
          "title": "The time to schedule the post at"
        },
        "customization": {
          "$ref": "#/definitions/v2PostCustomizationV2",
          "title": "Extra specific configurations for the post"
        },
        "postType": {
          "$ref": "#/definitions/v2PostTypeV2",
          "title": "Represents the type of the post"
        },
        "internalPostId": {
          "type": "string",
          "title": "Internal post id, we need it as  a fail-safe"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MetadataV2"
          },
          "title": "Metadata to hold any additional details related to the post"
        },
        "partnerId": {
          "type": "string",
          "title": "partner_id of the business_id for this post"
        },
        "brandId": {
          "type": "string",
          "title": "brand_id related to this post (multilocation only)"
        },
        "multilocationPostId": {
          "type": "string",
          "title": "multi_location_post_id related to this post (multilocation only)"
        },
        "youtubeCustomization": {
          "$ref": "#/definitions/v2YoutubeCustomizationV2",
          "title": "Youtube specific customization"
        },
        "userId": {
          "type": "string",
          "title": "Adding UserId, for TikTok"
        },
        "shareId": {
          "type": "string",
          "title": "Adding share_id for TikTok"
        },
        "tiktokCustomization": {
          "$ref": "#/definitions/v2TikTokCustomizationV2",
          "title": "TikTok customization"
        },
        "campaignId": {
          "type": "string",
          "title": "Campaign ID , Used to store Control social posts for Campaign"
        }
      },
      "title": "Represents all the structure needed to create a post"
    },
    "v2Source": {
      "type": "object",
      "properties": {
        "ancestry": {
          "$ref": "#/definitions/v2Ancestry"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "metaTitle": {
          "type": "string"
        },
        "metaDescription": {
          "type": "string"
        },
        "coverPhoto": {
          "$ref": "#/definitions/v2Photo"
        }
      }
    },
    "v2StartChatResponse": {
      "type": "object",
      "properties": {
        "assistantId": {
          "type": "string",
          "description": "Assistant-ID used for start Thread."
        },
        "threadId": {
          "type": "string",
          "title": "Thread ID used for message conversation"
        }
      }
    },
    "v2StatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "title": "The status of the wordpress site"
        },
        "version": {
          "type": "string",
          "title": "The version of the wordpress plugin"
        },
        "logo": {
          "type": "string",
          "title": "logo of the wordpress site"
        },
        "name": {
          "type": "string",
          "title": "The name of the wordpress site"
        }
      }
    },
    "v2SubAncestry": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string"
        },
        "prettySlug": {
          "type": "string"
        }
      }
    },
    "v2Tags": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v2Source"
        }
      }
    },
    "v2TikTokCustomizationV2": {
      "type": "object",
      "properties": {
        "allowComment": {
          "type": "boolean"
        },
        "allowDuet": {
          "type": "boolean"
        },
        "allowStitch": {
          "type": "boolean"
        }
      }
    },
    "v2TitleGeneration": {
      "type": "object",
      "properties": {
        "blogTitle": {
          "type": "string",
          "description": "Title of the blog."
        }
      }
    },
    "v2Tone": {
      "type": "string",
      "enum": [
        "INVALID_TONE",
        "DEFAULT",
        "FRIENDLY",
        "LUXURIOUS",
        "PROFESSIONAL",
        "RELAXED",
        "BOLD",
        "ADVENTUROUS",
        "WITTY",
        "PERSUASIVE",
        "EMPATHETIC"
      ],
      "default": "INVALID_TONE"
    },
    "v2UpdateCommonAiInstructionsResponse": {
      "type": "object",
      "properties": {
        "aiInstructions": {
          "$ref": "#/definitions/v2AiInstructions"
        }
      }
    },
    "v2UpdateSocialPostResponse": {
      "type": "object",
      "properties": {
        "socialPost": {
          "$ref": "#/definitions/v2SocialPostV2",
          "title": "Social post to update"
        },
        "isError": {
          "type": "boolean",
          "title": "is post is an error"
        },
        "errors": {
          "type": "string",
          "title": "errors in case any"
        },
        "errorCategory": {
          "type": "string",
          "title": "error description"
        },
        "postId": {
          "type": "string",
          "title": "post id, e.g. urn:share:12345"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MetadataV2"
          },
          "title": "Contains metadata if any associated with the post"
        }
      }
    },
    "v2UploadToStorageResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "v2UploadedMedia": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v2Urls": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string"
        },
        "full": {
          "type": "string"
        },
        "regular": {
          "type": "string"
        },
        "small": {
          "type": "string"
        },
        "thumb": {
          "type": "string"
        },
        "smallS3": {
          "type": "string"
        }
      }
    },
    "v2User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "twitterUsername": {
          "type": "string"
        },
        "portfolioUrl": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/v2UserLink"
        },
        "profileImage": {
          "$ref": "#/definitions/v2Image"
        },
        "instagramUsername": {
          "type": "string"
        },
        "totalCollections": {
          "type": "string",
          "format": "int64"
        },
        "totalLikes": {
          "type": "string",
          "format": "int64"
        },
        "totalPhotos": {
          "type": "string",
          "format": "int64"
        },
        "totalPromotedPhotos": {
          "type": "string",
          "format": "int64"
        },
        "acceptedTos": {
          "type": "boolean"
        },
        "forHire": {
          "type": "boolean"
        },
        "social": {
          "$ref": "#/definitions/v2Social"
        }
      }
    },
    "v2UserLink": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        },
        "html": {
          "type": "string"
        },
        "photos": {
          "type": "string"
        },
        "likes": {
          "type": "string"
        },
        "portfolio": {
          "type": "string"
        },
        "following": {
          "type": "string"
        },
        "followers": {
          "type": "string"
        }
      }
    },
    "v2YoutubeCustomizationV2": {
      "type": "object",
      "properties": {
        "privacyStatus": {
          "$ref": "#/definitions/YoutubeCustomizationV2PrivacyStatusV2"
        }
      }
    },
    "GetMetricsRequestMetricRequest": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1Metric",
          "title": "The metric to be returned"
        },
        "filters": {
          "$ref": "#/definitions/v1GetMetricsFilters",
          "title": "Fields that can be used to control and narrow the data used for metrics"
        },
        "name": {
          "type": "string",
          "title": "Name of the metric request"
        }
      }
    },
    "KeyValueValue": {
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string"
        },
        "int64Value": {
          "type": "string",
          "format": "int64"
        },
        "boolValue": {
          "type": "boolean"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "timeValue": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "title": "The type of the value chosen. e.g. \"string\""
        }
      }
    },
    "KeyValuesKeyValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/KeyValueValue"
          },
          "description": "List of values associated with the key."
        },
        "key": {
          "type": "string",
          "title": "String key associated with the values"
        }
      }
    },
    "MetricResponsesMetricResponse": {
      "type": "object",
      "properties": {
        "count": {
          "$ref": "#/definitions/v1CountMetricResponse"
        },
        "value": {
          "$ref": "#/definitions/v1ValueMetricResponse"
        },
        "subMetricResponses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricResponses"
          }
        }
      },
      "title": "The result for an individual metric request"
    },
    "MultiCommandRequestEvent": {
      "type": "object",
      "properties": {
        "generate": {
          "$ref": "#/definitions/v1GenerateTaskRequest"
        },
        "addSubtask": {
          "$ref": "#/definitions/v1AddSubtaskRequest"
        },
        "setTitle": {
          "$ref": "#/definitions/v1SetTitleRequest"
        },
        "setType": {
          "$ref": "#/definitions/v1SetTypeRequest"
        },
        "addAssignee": {
          "$ref": "#/definitions/v1AddAssigneeRequest"
        },
        "removeAssignee": {
          "$ref": "#/definitions/v1RemoveAssigneeRequest"
        },
        "setDueDate": {
          "$ref": "#/definitions/v1SetDueDateRequest"
        },
        "setStatus": {
          "$ref": "#/definitions/v1SetStatusRequest"
        },
        "setKeyValue": {
          "$ref": "#/definitions/v1SetKeyValue"
        },
        "addHistory": {
          "$ref": "#/definitions/v1AddHistoryRequest"
        },
        "addConversation": {
          "$ref": "#/definitions/v1AddConversationRequest"
        },
        "addTags": {
          "$ref": "#/definitions/v1AddTagsRequest"
        },
        "removeTags": {
          "$ref": "#/definitions/v1RemoveTagsRequest"
        },
        "setNotes": {
          "$ref": "#/definitions/v1SetNotesRequest"
        },
        "setDescription": {
          "$ref": "#/definitions/v1SetDescriptionRequest"
        },
        "delete": {
          "$ref": "#/definitions/v1DeleteTaskRequest"
        },
        "restore": {
          "$ref": "#/definitions/v1RestoreTaskRequest"
        },
        "reorder": {
          "$ref": "#/definitions/v1ReorderSubtaskRequest"
        },
        "addAttachment": {
          "$ref": "#/definitions/v1AddAttachmentRequest"
        },
        "removeAttachment": {
          "$ref": "#/definitions/v1RemoveAttachmentRequest"
        },
        "addCustomTags": {
          "$ref": "#/definitions/v1AddCustomTagsRequest"
        },
        "removeCustomTags": {
          "$ref": "#/definitions/v1RemoveCustomTagsRequest"
        }
      }
    },
    "MultiCommandResponsesMultiCommandResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The latest task version after the command was processed"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "Information about the task that that was passed into the request"
        }
      }
    },
    "v1AccessPermissions": {
      "type": "object",
      "properties": {
        "read": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "write": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A generic message for storing who has permissions to whatever it's attached to"
    },
    "v1AddAssigneeRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "assignee": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1AddAttachmentRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are removing an attachment on"
        },
        "attachment": {
          "$ref": "#/definitions/v1Attachment",
          "title": "The details of the file being attached to the task"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1AddConversationRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "message": {
          "type": "string"
        },
        "sendFrom": {
          "type": "string"
        },
        "sendTo": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        },
        "isPublic": {
          "type": "boolean",
          "title": "determines if conversation is private or public"
        },
        "persona": {
          "$ref": "#/definitions/v1PersonaType",
          "title": "persona type of user who added the conversation"
        }
      }
    },
    "v1AddCustomTagsRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "User defined tags that can be used to filter tasks"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1AddHistoryRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "message": {
          "type": "string",
          "title": "The message that will show up on task history"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1AddSubtaskRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are adding the subtask to"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the parent task"
        },
        "taskId": {
          "type": "string",
          "title": "The task id of the new task"
        },
        "title": {
          "type": "string",
          "title": "Name of task"
        },
        "status": {
          "type": "string",
          "title": "The initial state of the task"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the task should be done by"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Who should complete this task"
        },
        "description": {
          "type": "string",
          "title": "Task details"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Task label used to organize or convey information about a task. e.g. \"Approved\", \"Feedback Provided\""
        },
        "notes": {
          "type": "string",
          "title": "Free form information about the task"
        },
        "taskType": {
          "type": "string",
          "title": "The what type of task this is. e.g. \"Review\", \"Social Post\""
        },
        "data": {
          "$ref": "#/definitions/v1KeyValues",
          "title": "Extra data to store on the task"
        },
        "metadata": {
          "$ref": "#/definitions/v1KeyValues",
          "description": "Data about the task. The subtask's namespace will automatically be split apart and stored in this field."
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "title": "Details about the tasks attachments"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "User defined tags used to filter task searches"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1AddTagsRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Task labels used to organize or convey information about a task. e.g. \"Approved\", \"Feedback Provided\""
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1CommandResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The latest task version after the command was processed"
        }
      }
    },
    "v1Conversation": {
      "type": "object",
      "properties": {
        "senderId": {
          "type": "string",
          "title": "The id of sender"
        },
        "recipientId": {
          "type": "string",
          "title": "The id of recipient"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner that the conversation belongs to"
        },
        "conversationId": {
          "type": "string",
          "title": "The unique id of the conversation"
        },
        "participantIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The id of participants"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time when the conversation was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time when the conversation was updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Time when the conversation was deleted"
        }
      },
      "title": "Conversation represents an conversation model"
    },
    "v1CountMetricResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "The value of a field for a given metric"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The number of tasks with a field value that matches key"
        }
      },
      "title": "A metric response that contains the number of tasks with a given value for a field"
    },
    "v1DeleteTaskRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are deleting"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are deleting"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1GenerateTaskRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The task's scope. Should be contextual, separated by '/'. e.g. partner/ABC/account-group/AG-123"
        },
        "taskId": {
          "type": "string",
          "title": "The unique id of the new task"
        },
        "title": {
          "type": "string",
          "title": "Name of task"
        },
        "status": {
          "type": "string",
          "title": "The initial state of the task"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the task should be done by"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Who should complete this task"
        },
        "description": {
          "type": "string",
          "title": "Task details"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Task label used to organize or convey information about a task. e.g. \"Approved\", \"Feedback Provided\""
        },
        "notes": {
          "type": "string",
          "title": "Free form information about the task"
        },
        "taskType": {
          "type": "string",
          "title": "The what type of task this is. e.g. \"Review\", \"Social Post\""
        },
        "data": {
          "$ref": "#/definitions/v1KeyValues",
          "title": "Extra data to store on the task"
        },
        "metadata": {
          "$ref": "#/definitions/v1KeyValues",
          "description": "Data about the task. The task's namespace will automatically be split apart and stored in this field."
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "title": "Details about the tasks attachments"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "User defined tags used to filter task searches"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1GetMetricsFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Exact match namespace"
        },
        "parentPathFuzzy": {
          "type": "string",
          "description": "Fuzzy match parent path."
        },
        "parentPathExact": {
          "type": "string",
          "title": "Exact match parent path"
        },
        "titleFuzzy": {
          "type": "string",
          "title": "Fuzzy match task title"
        },
        "titleExact": {
          "type": "string",
          "title": "Exact match task title"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Assignee to search on. Multiple assignees will return tasks that have at least one of the specified assignees"
        },
        "rangeStart": {
          "type": "string",
          "format": "date-time",
          "title": "Search tasks that have a due date or completion_date after the specified time"
        },
        "rangeEnd": {
          "type": "string",
          "format": "date-time",
          "title": "Search tasks that have a due date or completion_date before the specified time"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Type of tasks to return. Returns tasks that match at least one of the specified types."
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exact match task status"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Search tasks tagged with these tags. Returns tasks that match at least one tag"
        },
        "metadata": {
          "$ref": "#/definitions/v1KeyValues",
          "description": "Search on key value metadata. Useful for searching on part of your namespace or task scope."
        },
        "dateRangeField": {
          "$ref": "#/definitions/v1RangeField",
          "title": "Which field to range over for range_start and range_end"
        },
        "access": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Which users have access to a task"
        },
        "metadataGroups": {
          "$ref": "#/definitions/v1GroupedMetadata",
          "title": "Groups of metadata that will OR together (all data within each group will be AND'ed)"
        }
      }
    },
    "v1GetMetricsResponse": {
      "type": "object",
      "properties": {
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceId"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Metric"
          }
        },
        "resourceResponses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceMetricsResponse"
          },
          "title": "Interpreted in order of the resources in the request"
        },
        "timeBucketStarts": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "v1GetTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1Task"
        }
      }
    },
    "v1GetTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        }
      },
      "title": "GetTasksResponse is the response message for GetMulti"
    },
    "v1GetTreeResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "$ref": "#/definitions/v1TaskTree"
        }
      }
    },
    "v1GroupedMetadata": {
      "type": "object",
      "properties": {
        "metadataGroup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValues"
          }
        }
      }
    },
    "v1GroupedTags": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TagGroup"
          }
        }
      }
    },
    "v1History": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "When the event happened"
        },
        "user": {
          "type": "string",
          "title": "The user that did the action"
        },
        "message": {
          "type": "string",
          "title": "The action taken"
        }
      }
    },
    "v1KeyValueField": {
      "type": "string",
      "enum": [
        "KEY_VALUE_FIELD_UNSET",
        "KEY_VALUE_FIELD_DATA",
        "KEY_VALUE_FIELD_METADATA"
      ],
      "default": "KEY_VALUE_FIELD_UNSET"
    },
    "v1KeyValues": {
      "type": "object",
      "properties": {
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/KeyValuesKeyValue"
          }
        }
      }
    },
    "v1Metric": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        },
        "timeDimension": {
          "$ref": "#/definitions/v1TimeDimension"
        }
      }
    },
    "v1MetricResponses": {
      "type": "object",
      "properties": {
        "metricResponses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MetricResponsesMetricResponse"
          }
        }
      },
      "title": "The results for all metrics requested in GetMetrics"
    },
    "v1MultiCommandResponses": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MultiCommandResponsesMultiCommandResponse"
          }
        }
      }
    },
    "v1PersonaType": {
      "type": "string",
      "enum": [
        "PERSONA_TYPE_PARTNER",
        "PERSONA_TYPE_SALES_PERSON",
        "PERSONA_TYPE_DIGITAL_AGENT",
        "PERSONA_TYPE_SMB"
      ],
      "default": "PERSONA_TYPE_PARTNER"
    },
    "v1RangeField": {
      "type": "string",
      "enum": [
        "RANGE_FIELD_DUE_DATE",
        "RANGE_FIELD_COMPLETION_DATE",
        "RANGE_FIELD_CREATED_DATE"
      ],
      "default": "RANGE_FIELD_DUE_DATE"
    },
    "v1RemoveAssigneeRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "assignee": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1RemoveAttachmentRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are removing an attachment on"
        },
        "attachment": {
          "$ref": "#/definitions/v1Attachment",
          "title": "The details of the file being removed from the task"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1RemoveCustomTagsRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "User defined tags to be removed from a task"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1RemoveTagsRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1ReorderSubtaskRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are reordering"
        },
        "currentPosition": {
          "type": "string",
          "format": "int64",
          "title": "The current index of the subtask in the parent task's list of subtasks"
        },
        "newPosition": {
          "type": "string",
          "format": "int64",
          "title": "The new index of the subtask in the parent task's list of subtasks"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1RestoreTaskRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are restoring"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are restoring"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1SearchTaskRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Exact match namespace"
        },
        "parentPathFuzzy": {
          "type": "string",
          "description": "Fuzzy match parent path."
        },
        "parentPathExact": {
          "type": "string",
          "title": "Exact match parent path"
        },
        "titleFuzzy": {
          "type": "string",
          "title": "Fuzzy match task title"
        },
        "titleExact": {
          "type": "string",
          "title": "Exact match task title"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Assignee to search on. Multiple assignees will return tasks that have at least one of the specified assignees"
        },
        "rangeStart": {
          "type": "string",
          "format": "date-time",
          "title": "Search tasks that have a due date after the specified time"
        },
        "rangeEnd": {
          "type": "string",
          "format": "date-time",
          "title": "Search tasks that have a due date before the specified time"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Type of tasks to return. Returns tasks that match at least one of the specified types."
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exact match task status"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Search tasks tagged with these tags. Returns tasks that match at least one tag"
        },
        "metadata": {
          "$ref": "#/definitions/v1KeyValues",
          "description": "Search on key value metadata. Useful for searching on part of your namespace or task scope."
        },
        "cursor": {
          "type": "string",
          "title": "An offset to start returning tasks from"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "The number of tasks to be returned"
        },
        "sortField": {
          "type": "string",
          "title": "What field to sort results on"
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "Whether or not to sort results ascending or descending"
        },
        "dateRangeField": {
          "$ref": "#/definitions/v1RangeField",
          "title": "Which field to range over for range_start and range_end"
        },
        "access": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Which users have access to a task"
        },
        "sorts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Sort"
          },
          "title": "The fields and directions to sort the results on. List order will be used for precedence"
        },
        "excludeHistory": {
          "type": "boolean",
          "description": "Whether or not to exclude history from the search response. This can help with large message size issues."
        },
        "deletedOnly": {
          "type": "boolean",
          "title": "Whether to show only deleted tasks in the search response"
        },
        "tagGroups": {
          "$ref": "#/definitions/v1GroupedTags",
          "title": "Groups of tags to OR together (the tags within each group are AND'ed)"
        },
        "metadataGroups": {
          "$ref": "#/definitions/v1GroupedMetadata",
          "title": "Groups of metadata that will OR together (all data within each group will be AND'ed)"
        },
        "taskId": {
          "type": "string",
          "title": "Exact match task ID. Useful if the ID is known but the namespace or parent path are uncertain"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "User defined custom tags. If specified will return tasks that match ALL provided tags"
        }
      },
      "title": "Request to search tasks with optional fields to search on"
    },
    "v1SearchTaskResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          },
          "title": "The list of tasks returned from this search request"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next search request"
        },
        "hasMore": {
          "type": "boolean",
          "title": "If there is another batch of results to be returned"
        },
        "hits": {
          "type": "string",
          "format": "int64",
          "title": "Total number of tasks that match the search criteria"
        }
      }
    },
    "v1SetDescriptionRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "description": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1SetDueDateRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1SetKeyValue": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity"
        },
        "keyValueData": {
          "$ref": "#/definitions/v1KeyValues",
          "title": "Map like data with string keys and values of type string|int64|bool|double|Timestamp"
        },
        "field": {
          "$ref": "#/definitions/v1KeyValueField",
          "title": "The field to set the KeyValues on"
        }
      }
    },
    "v1SetNotesRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "notes": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1SetStatusRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "status": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1SetTitleRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "title": {
          "type": "string"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1SetTypeRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The most up to date version you have of the task you are operating on"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task you are operating on"
        },
        "taskType": {
          "type": "string",
          "title": "The type you wish to set the task to"
        },
        "callerSubjectId": {
          "type": "string",
          "title": "The subject id of the user performing this action"
        }
      }
    },
    "v1Sort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "title": "The field to sort on"
        },
        "direction": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "Whether to sort ascending or descending"
        }
      },
      "title": "A sort to be used when searching"
    },
    "v1TagGroup": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Task": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskTitle": {
          "type": "string"
        },
        "taskDesc": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1TaskIdentity": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The scope of the task. e.g. \"partner/ABC/account-group/AG-123\""
        },
        "parentPath": {
          "type": "string",
          "title": "The tasks parent(s). e.g. \"/TK-1/\" if this is a subtask of task TK-1 or \"/\" if this is a top level task"
        },
        "taskId": {
          "type": "string",
          "title": "The tasks unique id"
        }
      }
    },
    "v1TaskTree": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The task's current version"
        },
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity",
          "title": "The namespace, parent path, and task id of the task"
        },
        "title": {
          "type": "string",
          "title": "The name of the task"
        },
        "status": {
          "type": "string",
          "title": "The state of the task"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the task is due"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Who is working on the task"
        },
        "notes": {
          "type": "string",
          "title": "User added details about the task"
        },
        "description": {
          "type": "string",
          "title": "Task details"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Labels given to the task"
        },
        "history": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1History"
          },
          "title": "The events that have happened on this task"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time"
        },
        "subtasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskTree"
          },
          "title": "Namespace, parent path, and task id of all the task's subtasks"
        },
        "taskType": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1KeyValues",
          "title": "Arbitrary data stored on the task"
        },
        "metadata": {
          "$ref": "#/definitions/v1KeyValues",
          "title": "Data about the task. Includes each part of task's namespace"
        },
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Conversation"
          }
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "attachment": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "title": "Information about uploaded files associated with this task"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ValueMetricResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "The field for the metric calculation"
        },
        "value": {
          "type": "number",
          "format": "double",
          "title": "The value of the metric i.e. min"
        }
      },
      "title": "A metric response that contains the value of aggregated data for a given field"
    },
    "v1CollectRecordsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response"
    },
    "v1ConnectedSite": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID the site is associated with"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID the site is associated with (aka the account group ID)"
        },
        "gscSiteUrl": {
          "type": "string",
          "title": "The URL of the site associated with the GSC account"
        },
        "gscUserId": {
          "type": "string",
          "title": "The user id on the account"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the site was first created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The last time a site was updated"
        },
        "isBroken": {
          "type": "boolean",
          "title": "A flag to show whether or not the site is working properly"
        },
        "deleted": {
          "type": "boolean",
          "title": "if the site is deleted"
        }
      }
    },
    "v1DeleteSiteResponse": {
      "type": "object",
      "properties": {
        "deleteSiteTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeleteSiteTask"
          }
        }
      }
    },
    "v1GetAvailableGSCSitesResponse": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Site object to which this user has access"
        }
      },
      "title": "List of sites available to the connected Google Search Console account"
    },
    "v1GetKeywordsResponse": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of keywords to be tracked"
        }
      },
      "title": "GetKeywordsResponse returns list of keywords to be tracked using google search console"
    },
    "v1LookupSitesResponse": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedSite"
          },
          "title": "List of sites that's connected with the business"
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        }
      },
      "title": "LookupSitesResponse is the response of getting all connected sites for a given business"
    },
    "v1SetInitialKeywordsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1SetKeywordsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "SetKeywordsResponse returns success: true on successful setting of keywords"
    },
    "v1SetSiteResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response when setting a site"
    },
    "DomainContactAdmin": {
      "type": "object",
      "properties": {
        "addressMailing": {
          "$ref": "#/definitions/v1DomainAddressMailing"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "nameFirst": {
          "type": "string"
        },
        "nameLast": {
          "type": "string"
        },
        "nameMiddle": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "DomainContactBilling": {
      "type": "object",
      "properties": {
        "addressMailing": {
          "$ref": "#/definitions/v1DomainAddressMailing"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "nameFirst": {
          "type": "string"
        },
        "nameLast": {
          "type": "string"
        },
        "nameMiddle": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "DomainContactRegistrant": {
      "type": "object",
      "properties": {
        "addressMailing": {
          "$ref": "#/definitions/v1DomainAddressMailing"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "nameFirst": {
          "type": "string"
        },
        "nameLast": {
          "type": "string"
        },
        "nameMiddle": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "DomainContactTech": {
      "type": "object",
      "properties": {
        "addressMailing": {
          "$ref": "#/definitions/v1DomainAddressMailing"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "nameFirst": {
          "type": "string"
        },
        "nameLast": {
          "type": "string"
        },
        "nameMiddle": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "DomainDomainName": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "DomainRealName": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "DomainVerifications": {
      "type": "object",
      "properties": {
        "domainName": {
          "$ref": "#/definitions/DomainDomainName"
        },
        "realName": {
          "$ref": "#/definitions/DomainRealName"
        }
      }
    },
    "GetDomainAgreementsResponseAgreement": {
      "type": "object",
      "properties": {
        "agreementKey": {
          "type": "string",
          "title": "The key which identifies the agreement when purchase happens"
        },
        "content": {
          "type": "string",
          "title": "The HTML content of the agreement"
        },
        "title": {
          "type": "string",
          "title": "The title of the agreement"
        },
        "url": {
          "type": "string",
          "title": "A link to the agreement"
        }
      },
      "title": "An agreement for a TLD which must be accepts before purchase"
    },
    "GetDomainSuggestionAndPriceResponseSuggestion": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "A domain, ex google.com"
        },
        "price": {
          "type": "string",
          "format": "int64",
          "title": "The price of the domain"
        }
      },
      "title": "Suggestion is an available domain and the price for that domain"
    },
    "ValidateDomainContactResponseField": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "The description of the problem, ex. \"Your phone number cannot contain more than 10 digits after the country code (CA)\""
        },
        "path": {
          "type": "string",
          "title": "The path to the part of the body this message relates to, ex. \"body.contactAdmin.phone\""
        }
      },
      "title": "Field is a field that failed validation by GoDaddy with information about that failure"
    },
    "v1ContactAddressMailing": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string",
          "title": "The first address line, ex. 220 3 Ave S"
        },
        "address2": {
          "type": "string",
          "title": "The second address line, ex. Suite 405"
        },
        "city": {
          "type": "string",
          "title": "The city of the address"
        },
        "country": {
          "type": "string",
          "title": "The country of the address"
        },
        "postalCode": {
          "type": "string",
          "title": "The postal code of the address"
        },
        "state": {
          "type": "string",
          "title": "The state of the address"
        }
      },
      "title": "Physical mailing address for a contact"
    },
    "v1DNSRecord": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "The type of a DNS record, ex. TXT"
        },
        "name": {
          "type": "string",
          "title": "A given name for a DNS record, ex. @ or www"
        },
        "data": {
          "type": "string",
          "title": "The information stored in the DNS record (ex. MS=262B3C0BB63077947E38D7B3AB081D70F4C87055)"
        },
        "ttl": {
          "type": "string",
          "format": "int64",
          "title": "The Time To Live for a DNS record"
        },
        "priority": {
          "type": "string",
          "format": "int64",
          "title": "The priority of for the record wrt other records, for example used on MX records"
        }
      },
      "title": "A Domain Name System record"
    },
    "v1DNSRecordType": {
      "type": "string",
      "enum": [
        "A_RECORD",
        "CNAME_RECORD",
        "CAA_RECORD",
        "TXT_RECORD",
        "AAAA_RECORD"
      ],
      "default": "A_RECORD",
      "title": "Enum for DNS record types"
    },
    "v1Domain": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "secure": {
          "type": "boolean"
        }
      },
      "description": "Provides the domain name and additional metadata."
    },
    "v1DomainAddressMailing": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "v1GetDomainAgreementsResponse": {
      "type": "object",
      "properties": {
        "agreements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetDomainAgreementsResponseAgreement"
          },
          "title": "A list of agreements for a set of TLDs"
        }
      },
      "title": "Returns the agreement and key to accept the agreement for the TLD"
    },
    "v1GetDomainAvailableResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        }
      },
      "title": "Returns if the domain is available"
    },
    "v1GetDomainResponse": {
      "type": "object",
      "properties": {
        "primary": {
          "$ref": "#/definitions/v1Domain"
        }
      },
      "title": "Response for GetDomain"
    },
    "v1GetDomainSuggestionAndPriceResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetDomainSuggestionAndPriceResponseSuggestion"
          },
          "title": "List of suggestions"
        }
      },
      "title": "Returns domain suggestions and prices"
    },
    "v1ListDNSRecordsResponse": {
      "type": "object",
      "properties": {
        "dnsRecords": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DNSRecord"
          },
          "title": "A list of DNS records for a given domain"
        }
      },
      "title": "ListDNSRecordsResponse returns a list of DNSRecords for a given domain"
    },
    "v1ListDomainsByBusinessIDResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The domains purchased by the business"
        }
      },
      "title": "The domains that have been purchased by a business"
    },
    "v1RenewDomainResponse": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "itemCount": {
          "type": "string",
          "format": "int64"
        },
        "orderId": {
          "type": "string",
          "format": "int64"
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "The response for renewing a domain. These properties are from the GoDaddy API response, see https://developer.godaddy.com/doc/endpoint/domains#/v1/renew."
    },
    "v1ValidateDomainContactResponse": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ValidateDomainContactResponseField"
          },
          "title": "A list of validation errors returned from GoDaddy"
        }
      },
      "title": "Returns a list of validation problems, if any"
    },
    "GetOpportunityValueSummaryResponseAmounts": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/v1Currency"
        },
        "estimated": {
          "$ref": "#/definitions/v1Currency"
        }
      }
    },
    "GetOpportunityValueSummaryResponseStageAmounts": {
      "type": "object",
      "properties": {
        "stageId": {
          "type": "string"
        },
        "amounts": {
          "$ref": "#/definitions/GetOpportunityValueSummaryResponseAmounts"
        }
      }
    },
    "ValidateCrmObjectResponseFieldUniqueness": {
      "type": "string",
      "enum": [
        "FIELD_UNIQUENESS_INVALID",
        "FIELD_UNIQUENESS_NONE",
        "FIELD_UNIQUENESS_WARNING",
        "FIELD_UNIQUENESS_ENFORCED"
      ],
      "default": "FIELD_UNIQUENESS_INVALID"
    },
    "ValidateCrmObjectResponseUniquenessCheck": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "existingCrmObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueness": {
          "$ref": "#/definitions/ValidateCrmObjectResponseFieldUniqueness"
        }
      }
    },
    "ValidateCrmObjectResponseValidationErrorDetails": {
      "type": "object",
      "properties": {
        "uniquenessCheck": {
          "$ref": "#/definitions/ValidateCrmObjectResponseUniquenessCheck"
        }
      }
    },
    "ValidateCrmObjectResponseValidationErrorSeverity": {
      "type": "string",
      "enum": [
        "VALIDATION_ERROR_SEVERITY_UNKNOWN",
        "VALIDATION_ERROR_SEVERITY_INVALID",
        "VALIDATION_ERROR_SEVERITY_WARNING"
      ],
      "default": "VALIDATION_ERROR_SEVERITY_UNKNOWN"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v1Activity": {
      "type": "object",
      "properties": {
        "activityType": {
          "$ref": "#/definitions/v1ActivityTypes"
        },
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "creatorUserId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "taskId": {
          "type": "string"
        },
        "dateHappenedKey": {
          "type": "string"
        },
        "dateHappened": {
          "type": "string",
          "format": "date-time"
        },
        "activityId": {
          "type": "string"
        },
        "receivers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ActivityAssociation": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "crmObjectSubtype": {
          "type": "string",
          "title": "only used by custom objects at the moment"
        }
      }
    },
    "v1Association": {
      "type": "object",
      "properties": {
        "associationId": {
          "type": "string"
        },
        "associationType": {
          "type": "string"
        },
        "fromId": {
          "type": "string"
        },
        "toId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Tag"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "fromCrmObjectSubtype": {
          "type": "string",
          "title": "these properties are only needed for\nassociations that include custom object types"
        },
        "toCrmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1CSVFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Header"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "size": {
          "$ref": "#/definitions/v1CSVSize"
        },
        "mappingSuggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVHeaderMapping"
          }
        }
      }
    },
    "v1CSVHeaderMapping": {
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1CSVSize": {
      "type": "object",
      "properties": {
        "totalRows": {
          "type": "string"
        },
        "isEstimate": {
          "type": "boolean"
        }
      }
    },
    "v1CreateActivityResponse": {
      "type": "object",
      "properties": {
        "activityId": {
          "type": "string"
        }
      },
      "title": "Respond with activity ID of newly created activity"
    },
    "v1CreateAssociationResponse": {
      "type": "object",
      "properties": {
        "associationId": {
          "type": "string"
        }
      }
    },
    "v1CreateCrmObjectResponse": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomObjectTypeResponse": {
      "type": "object",
      "properties": {
        "customObjectTypeId": {
          "type": "string"
        }
      }
    },
    "v1CreateFieldExtensionResponse": {
      "type": "object",
      "properties": {
        "extensionId": {
          "type": "string"
        }
      }
    },
    "v1CreateFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1CreateScoringDefinitionResponse": {
      "type": "object",
      "properties": {
        "scoringDefinitionId": {
          "type": "string"
        }
      }
    },
    "v1CrmChangeLogIdentifiers": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmChangeId": {
          "type": "string"
        }
      }
    },
    "v1CrmObject": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "groupId": {
          "type": "string"
        },
        "idempotencyId": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string",
          "title": "only used by CustomObject entities at this time"
        },
        "namespace": {
          "type": "string",
          "title": "This is going to be used for multi response, ignore it on requests"
        }
      }
    },
    "v1CrmObjectChangeLog": {
      "type": "object",
      "properties": {
        "crmChangeId": {
          "type": "string"
        },
        "crmChangeSubtype": {
          "type": "string"
        },
        "crmObjectId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "createdByUserId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "updatedByUserId": {
          "type": "string"
        }
      }
    },
    "v1CrmObjectSearch": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        }
      },
      "title": "CrmObjectSearch represents the possible ways to search\ndata in the CRM"
    },
    "v1CrmPITExtraFields": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        }
      }
    },
    "v1CrmSearchPITParams": {
      "type": "object",
      "properties": {
        "pitId": {
          "type": "string"
        },
        "lastSortResponse": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tiebreaker": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1CustomObjectType": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "customObjectTypeId": {
          "type": "string"
        },
        "singularObjectName": {
          "type": "string"
        },
        "pluralObjectName": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DateDefault": {
      "type": "string",
      "enum": [
        "DATE_DEFAULT_INVALID",
        "DATE_DEFAULT_TODAY",
        "DATE_DEFAULT_YESTERDAY",
        "DATE_DEFAULT_TOMORROW",
        "DATE_DEFAULT_THIS_WEEK",
        "DATE_DEFAULT_LAST_WEEK",
        "DATE_DEFAULT_NEXT_WEEK",
        "DATE_DEFAULT_THIS_MONTH",
        "DATE_DEFAULT_LAST_MONTH",
        "DATE_DEFAULT_NEXT_MONTH",
        "DATE_DEFAULT_THIS_QUARTER",
        "DATE_DEFAULT_LAST_QUARTER",
        "DATE_DEFAULT_NEXT_QUARTER",
        "DATE_DEFAULT_THIS_YEAR",
        "DATE_DEFAULT_LAST_YEAR",
        "DATE_DEFAULT_NEXT_YEAR"
      ],
      "default": "DATE_DEFAULT_INVALID"
    },
    "v1DuplicateHandlingType": {
      "type": "string",
      "enum": [
        "DUPLICATE_HANDLING_TYPE_INVALID",
        "DUPLICATE_HANDLING_TYPE_SKIP",
        "DUPLICATE_HANDLING_TYPE_UPDATE"
      ],
      "default": "DUPLICATE_HANDLING_TYPE_INVALID"
    },
    "v1FieldExtension": {
      "type": "object",
      "properties": {
        "extensionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "FieldExtension holds the description of a namespace\nthat will be used to extend one or more CRM namespace instances\ne.g.:\nextension_id = standard\nname = Standard fields\ndescription = Default set of fields available for all CRMs"
    },
    "v1FieldGroup": {
      "type": "object",
      "properties": {
        "fieldGroupId": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "this can be a translation key"
        },
        "fieldIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1FieldSchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldDescription": {
          "type": "string"
        },
        "dropdownOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DropdownOption"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "archived": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "readonly": {
          "type": "boolean"
        },
        "crmObjectType": {
          "type": "string",
          "title": "crm_object_type and crm_object_subtype are only used for responses, ignoring it on requests"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1FieldSchemaCustomization": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "For create or update requests, this should be omitted."
        },
        "fieldId": {
          "type": "string"
        },
        "restrictedFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1FieldType": {
      "type": "string",
      "enum": [
        "FIELD_TYPE_NOT_SPECIFIED",
        "FIELD_TYPE_TEXT",
        "FIELD_TYPE_TEXT_AREA",
        "FIELD_TYPE_DROPDOWN",
        "FIELD_TYPE_CHECKBOX",
        "FIELD_TYPE_FILE",
        "FIELD_TYPE_VBCUSER"
      ],
      "default": "FIELD_TYPE_NOT_SPECIFIED"
    },
    "v1FieldValue": {
      "type": "object",
      "properties": {
        "invalid": {
          "type": "boolean"
        },
        "integer": {
          "type": "string",
          "format": "int64",
          "title": "used for integer and currency"
        },
        "string": {
          "type": "string",
          "title": "used for string, date, dropdown and radio"
        },
        "stringValues": {
          "$ref": "#/definitions/v1StringList",
          "title": "used for tags"
        },
        "boolean": {
          "type": "boolean",
          "title": "used for boolean"
        }
      }
    },
    "v1Filter": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1ExtractedValue"
        },
        "label": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterOption"
          }
        }
      }
    },
    "v1FilterDefinition": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "hasFilterOptions": {
          "type": "boolean",
          "description": "If set, the filter has specific options that may be shown in a dropdown."
        },
        "fieldName": {
          "type": "string"
        },
        "typeV2": {
          "$ref": "#/definitions/v1FilterType"
        },
        "supportedOperatorsV2": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FilterOperator"
          }
        }
      }
    },
    "v1FilterGroup": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/v1FilterGroupOperator"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Filter"
          }
        }
      }
    },
    "v1FilterGroupOperator": {
      "type": "string",
      "enum": [
        "FILTER_GROUP_OPERATOR_INVALID",
        "FILTER_GROUP_OPERATOR_AND",
        "FILTER_GROUP_OPERATOR_OR"
      ],
      "default": "FILTER_GROUP_OPERATOR_INVALID"
    },
    "v1FilterOperator": {
      "type": "string",
      "enum": [
        "FILTER_OPERATOR_INVALID",
        "FILTER_OPERATOR_IS_EMPTY",
        "FILTER_OPERATOR_IS_NOT_EMPTY",
        "FILTER_OPERATOR_IS",
        "FILTER_OPERATOR_IS_NOT",
        "FILTER_OPERATOR_IS_ANY",
        "FILTER_OPERATOR_IS_NOT_ANY",
        "FILTER_OPERATOR_IS_ALL",
        "FILTER_OPERATOR_IS_NOT_ALL",
        "FILTER_OPERATOR_CONTAINS",
        "FILTER_OPERATOR_DOES_NOT_CONTAIN",
        "FILTER_OPERATOR_IS_EQUAL_TO",
        "FILTER_OPERATOR_IS_NOT_EQUAL_TO",
        "FILTER_OPERATOR_IS_GREATER_THAN",
        "FILTER_OPERATOR_IS_GREATER_THAN_OR_EQUAL_TO",
        "FILTER_OPERATOR_IS_LESS_THAN",
        "FILTER_OPERATOR_IS_LESS_THAN_OR_EQUAL_TO",
        "FILTER_OPERATOR_IS_BEFORE",
        "FILTER_OPERATOR_IS_BEFORE_OR_ON",
        "FILTER_OPERATOR_IS_AFTER",
        "FILTER_OPERATOR_IS_AFTER_OR_ON",
        "FILTER_OPERATOR_IS_BETWEEN",
        "FILTER_OPERATOR_IS_NOT_BETWEEN",
        "FILTER_OPERATOR_IS_VALID",
        "FILTER_OPERATOR_IS_NOT_VALID"
      ],
      "default": "FILTER_OPERATOR_INVALID"
    },
    "v1FilterType": {
      "type": "string",
      "enum": [
        "FILTER_TYPE_INVALID",
        "FILTER_TYPE_STRING",
        "FILTER_TYPE_INTEGER",
        "FILTER_TYPE_DATE",
        "FILTER_TYPE_FLOAT",
        "FILTER_TYPE_BOOLEAN",
        "FILTER_TYPE_TAG",
        "FILTER_TYPE_PHONE"
      ],
      "default": "FILTER_TYPE_INVALID"
    },
    "v1FilterValue": {
      "type": "object",
      "properties": {
        "boolean": {
          "type": "boolean"
        },
        "integer": {
          "type": "string",
          "format": "int64"
        },
        "float": {
          "type": "number",
          "format": "float"
        },
        "string": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dateDefault": {
          "$ref": "#/definitions/v1DateDefault"
        },
        "phone": {
          "$ref": "#/definitions/v1Phone"
        }
      }
    },
    "v1FindAssociationsResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Association"
          }
        }
      }
    },
    "v1Geopoint": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1GetActivityMetricsResponse": {
      "type": "object",
      "properties": {
        "ownerMetricCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OwnerMetricCounts"
          }
        },
        "summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricSummary"
          }
        }
      }
    },
    "v1GetMultiActivityResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        }
      }
    },
    "v1GetMultiAssociationResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Association"
          }
        },
        "statusCode": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "HTTP style status codes for each association_id in the request, usually 200, 403, or 404"
        }
      }
    },
    "v1GetMultiCrmObjectChangeLogResponse": {
      "type": "object",
      "properties": {
        "changeLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObjectChangeLog"
          }
        }
      }
    },
    "v1GetMultiCrmObjectResponse": {
      "type": "object",
      "properties": {
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        },
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        }
      }
    },
    "v1GetMultiCustomObjectTypeResponse": {
      "type": "object",
      "properties": {
        "customObjectTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomObjectType"
          }
        }
      }
    },
    "v1GetMultiFieldExtensionResponse": {
      "type": "object",
      "properties": {
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldExtension"
          }
        }
      }
    },
    "v1GetMultiFieldSchemaCustomizationResponse": {
      "type": "object",
      "properties": {
        "fieldSchemaCustomizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchemaCustomization"
          }
        }
      }
    },
    "v1GetMultiFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        }
      }
    },
    "v1GetMultiFileUploadDataResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVFile"
          }
        }
      }
    },
    "v1GetMultiParentNamespaceResponse": {
      "type": "object",
      "properties": {
        "parentNamespace": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ParentNamespace"
          }
        }
      }
    },
    "v1GetMultiPipelineResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pipeline"
          }
        }
      }
    },
    "v1GetMultiScoringDefinitionResponse": {
      "type": "object",
      "properties": {
        "scoringDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringDefinition"
          }
        }
      }
    },
    "v1GetOpportunityValueSummaryResponse": {
      "type": "object",
      "properties": {
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetOpportunityValueSummaryResponseStageAmounts"
          }
        },
        "pipeline": {
          "$ref": "#/definitions/GetOpportunityValueSummaryResponseAmounts"
        }
      }
    },
    "v1GetScoreResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "success informs the caller whether the score was set successfully or not"
        },
        "response": {
          "type": "string",
          "title": "google pagespeed insight api response"
        }
      },
      "title": "SetScoreResponse defines the response for calling the SetScore API. The response contains a success flag, which\nindicates whether the call to SetScore was executed successfully"
    },
    "v1ListActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListAddedExtensionsResponse": {
      "type": "object",
      "properties": {
        "extensionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListAssociationFieldOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListAssociationsResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Association"
          }
        },
        "statusCode": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "HTTP style status codes for each association_id in the request, usually 200, 403, or 404"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListChangeLogsResponse": {
      "type": "object",
      "properties": {
        "changeLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObjectChangeLog"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListCrmObjectsResponse": {
      "type": "object",
      "properties": {
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListCustomObjectTypesResponse": {
      "type": "object",
      "properties": {
        "customObjectTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomObjectType"
          }
        }
      }
    },
    "v1ListFieldGroupsResponse": {
      "type": "object",
      "properties": {
        "fieldGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldGroup"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListFieldOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListFieldSchemaRequestFilters": {
      "type": "object",
      "properties": {
        "onlyArchived": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace may be used to filter the results for specific namespaces that are included automatically or through field extensions."
        }
      }
    },
    "v1ListFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListFileUploadsResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVFile"
          }
        }
      }
    },
    "v1ListFiltersResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterDefinition"
          }
        }
      }
    },
    "v1ListMultiLocationActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationCrmObjectsResponse": {
      "type": "object",
      "properties": {
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationFieldGroupsResponse": {
      "type": "object",
      "properties": {
        "fieldGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldGroup"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationFieldOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListMultiLocationFieldSchemaRequestFilters": {
      "type": "object",
      "properties": {
        "onlyArchived": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListMultiLocationFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationFiltersResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterDefinition"
          }
        }
      }
    },
    "v1ListOptions": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        }
      }
    },
    "v1ListScoringDefinitionsResponse": {
      "type": "object",
      "properties": {
        "scoringDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringDefinition"
          }
        }
      }
    },
    "v1MetricCount": {
      "type": "object",
      "properties": {
        "metricType": {
          "$ref": "#/definitions/v1MetricType"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1MetricSummary": {
      "type": "object",
      "properties": {
        "metricType": {
          "$ref": "#/definitions/v1MetricType"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "average": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1MetricType": {
      "type": "string",
      "enum": [
        "NONE",
        "QUERIES_DIRECT",
        "QUERIES_INDIRECT",
        "VIEWS_MAPS",
        "VIEWS_SEARCH",
        "ACTIONS_WEBSITE",
        "ACTIONS_PHONE",
        "ACTIONS_DRIVING_DIRECTIONS",
        "QUERIES_CHAIN",
        "PHOTOS_VIEWS_MERCHANT",
        "PHOTOS_VIEWS_CUSTOMERS",
        "PHOTOS_COUNT_MERCHANT",
        "PHOTOS_COUNT_CUSTOMERS",
        "LOCAL_POST_VIEWS_SEARCH",
        "LOCAL_POST_ACTIONS_CALL_TO_ACTION"
      ],
      "default": "NONE",
      "description": "- NONE: Dummy default value\n - QUERIES_DIRECT: The number of times the listing was shown when searching for it directly.\n - QUERIES_INDIRECT: The number of times the listing was shown as a result of a categorical search (for example, restaurant \"restaurant\").\n - VIEWS_MAPS: The number of times the listing was viewed on Google Maps.\n - VIEWS_SEARCH: The number of times the listing was viewed on Google Search.\n - ACTIONS_WEBSITE: The number of times the website was clicked on the listing.\n - ACTIONS_PHONE: The number of times the phone number was clicked on the listing.\n - ACTIONS_DRIVING_DIRECTIONS: The number of times driving directions were requested for the listing.\n - QUERIES_CHAIN: The number of times a resource was shown as a result of a search for the chain it belongs to, or a brand it sells. For example, Starbucks, Adidas. This is a subset of QUERIES_INDIRECT.\n - PHOTOS_VIEWS_MERCHANT: The number of views on media items uploaded by the merchant.\n - PHOTOS_VIEWS_CUSTOMERS: The number of views on media items uploaded by customers.\n - PHOTOS_COUNT_MERCHANT: The total number of media items that are currently live that have been uploaded by the merchant.\n - PHOTOS_COUNT_CUSTOMERS: The total number of media items that are currently live that have been uploaded by customers.\n - LOCAL_POST_VIEWS_SEARCH: The number of times the local post was viewed on Google Search.\n - LOCAL_POST_ACTIONS_CALL_TO_ACTION: The number of times the call to action button was clicked on Google.",
      "title": "These are defined by Google's API for insight data:\nhttps://developers.google.com/my-business/reference/rest/v4/Metric"
    },
    "v1ObjectProjectionFilter": {
      "type": "object",
      "properties": {
        "filterType": {
          "$ref": "#/definitions/v1ProjectionFilterType"
        },
        "fromFieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "toFieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1OwnerMetricCounts": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string"
        },
        "metricCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricCount"
          }
        }
      }
    },
    "v1ParentNamespace": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "parentNamespace": {
          "type": "string"
        }
      }
    },
    "v1Phone": {
      "type": "object",
      "properties": {
        "isoCountryCode": {
          "type": "string",
          "title": "ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada"
        },
        "nationalNumber": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        }
      },
      "title": "This follows the E164 international standard specification for phone numbers"
    },
    "v1PhoneFields": {
      "type": "object",
      "properties": {
        "isoCountryCode": {
          "type": "string",
          "title": "ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada"
        },
        "nationalNumber": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "e164Compliant": {
          "type": "boolean"
        }
      }
    },
    "v1ProjectionFilterType": {
      "type": "string",
      "enum": [
        "PROJECTION_FILTER_TYPE_INVALID",
        "PROJECTION_FILTER_TYPE_FIELD_TYPE",
        "PROJECTION_FILTER_TYPE_INCLUDE_DELETED"
      ],
      "default": "PROJECTION_FILTER_TYPE_INVALID"
    },
    "v1ScoringDefinition": {
      "type": "object",
      "properties": {
        "crmObjectType": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "title": "Deprecated: Use field_id instead"
        },
        "scoringRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringRule"
          }
        },
        "contribution": {
          "type": "number",
          "format": "float"
        },
        "scoringDefinitionId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1ScoringIdentifier": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "title": "Label refers to a custom field ID that represents a unique score such as \"Lead Score\" or \"Account Health Score\"\nDeprecated: Use field_id instead"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1ScoringObjectRule": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/v1Filter"
        }
      }
    },
    "v1ScoringRule": {
      "type": "object",
      "properties": {
        "crmObjectType": {
          "type": "string"
        },
        "objectRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringObjectRule"
          }
        }
      }
    },
    "v1SearchPITCrmObjectsResponse": {
      "type": "object",
      "properties": {
        "crmObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pitParams": {
          "$ref": "#/definitions/v1CrmSearchPITParams"
        },
        "hasMore": {
          "type": "boolean"
        },
        "extraFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmPITExtraFields"
          }
        }
      }
    },
    "v1SortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_NOT_SPECIFIED",
        "SORT_BY_UPDATED_AT",
        "SORT_BY_CREATED_AT",
        "SORT_BY_PRIORITY",
        "SORT_BY_STATUS",
        "SORT_BY_TICKET_TYPE"
      ],
      "default": "SORT_BY_NOT_SPECIFIED"
    },
    "v1StartBulkCompanyCreateResponse": {
      "type": "object",
      "properties": {
        "filterTag": {
          "type": "string"
        }
      }
    },
    "v1StringList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Tag": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "kind of tag, ie: tag/lmi, tag/feature, etc."
        },
        "value": {
          "type": "string",
          "description": "value of tag, ie: seo, reputation, etc."
        }
      }
    },
    "v1ValidateActivityResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidateActivityResponseValidationError"
          }
        }
      }
    },
    "v1ValidateActivityResponseValidationError": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "title": "this can be a translation key"
        }
      }
    },
    "v1ValidateCrmObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidateCrmObjectResponseValidationError"
          }
        }
      }
    },
    "v1ValidateCrmObjectResponseValidationError": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "title": "this can be a translation key"
        },
        "severity": {
          "$ref": "#/definitions/ValidateCrmObjectResponseValidationErrorSeverity"
        },
        "details": {
          "$ref": "#/definitions/ValidateCrmObjectResponseValidationErrorDetails"
        }
      }
    },
    "MergeConfigDateOverwriteConfig": {
      "type": "object",
      "properties": {
        "dateCriteriaFieldId": {
          "type": "string",
          "title": "field ID that should be used to compare dates for MERGE_STRATEGY_OVERWRITE_IF_NEWER"
        }
      }
    },
    "MergeStrategyMergeConfig": {
      "type": "object",
      "properties": {
        "dateOverwriteConfig": {
          "$ref": "#/definitions/MergeConfigDateOverwriteConfig",
          "title": "add combine strategy config, and others here in the future if necessary"
        }
      }
    },
    "StartManualAutomationsRequestStartAutomationCriteria": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "searchTerm": {
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "StartManualAutomationsRequestStartAutomationPayload": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "The extra data to start the automation with"
        }
      }
    },
    "UpsertObjectResponseMultiIngestionResponse": {
      "type": "object",
      "properties": {
        "workflowStatus": {
          "$ref": "#/definitions/v1WorkflowStatus"
        },
        "result": {
          "$ref": "#/definitions/UpsertObjectResponseMultiIngestionResult"
        },
        "workflowId": {
          "type": "string"
        }
      }
    },
    "UpsertObjectResponseMultiIngestionResult": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "nestedObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UpsertObjectResponseNestedObject"
          }
        }
      }
    },
    "UpsertObjectResponseNestedObject": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        }
      }
    },
    "v1AddContactAsIamUserForCompanyStatus": {
      "type": "string",
      "enum": [
        "ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_INVALID",
        "ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_IN_PROGRESS",
        "ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_SUCCEEDED",
        "ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_FAILED"
      ],
      "default": "ADD_CONTACT_AS_IAM_USER_FOR_COMPANY_STATUS_INVALID"
    },
    "v1AddContactAsIamUserForCompanyStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AddContactAsIamUserForCompanyStatus"
        }
      }
    },
    "v1CreateAccountGroupForCompanyStatus": {
      "type": "string",
      "enum": [
        "CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_UNSPECIFIED",
        "CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_IN_PROGRESS",
        "CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_SUCCEEDED",
        "CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_FAILED"
      ],
      "default": "CREATE_ACCOUNT_GROUP_FOR_COMPANY_STATUS_UNSPECIFIED"
    },
    "v1CreateIntegrationResponse": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        }
      }
    },
    "v1FieldMapping": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1MappingType"
        },
        "jsonPath": {
          "type": "string"
        },
        "mergeStrategy": {
          "$ref": "#/definitions/v1MergeStrategy"
        },
        "nestedIntegration": {
          "$ref": "#/definitions/v1NestedIntegration"
        }
      }
    },
    "v1GetAISummaryForCRMObjectResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      }
    },
    "v1GetAccountGroupForCompanyResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "Company is related to zero to many Account Groups\nThis API will return the Account Group assigned on the Company itself\nThis Account Group should be the same as CreateAccountGroupForCompanyStatusResponse"
        }
      }
    },
    "v1GetCreateAccountGroupForCompanyStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1CreateAccountGroupForCompanyStatus"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1GetMultiIntegrationResponse": {
      "type": "object",
      "properties": {
        "integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Integration"
          }
        }
      }
    },
    "v1GetWebsiteActivityForVisitorResponse": {
      "type": "object",
      "properties": {
        "pageView": {
          "$ref": "#/definitions/v1PageView"
        }
      }
    },
    "v1ImportFromJSONResponse": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string",
          "title": "CRM Object ID"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          },
          "title": "Objects fields based on the request"
        }
      }
    },
    "v1IsContactIamUserForCompanyResponse": {
      "type": "object",
      "properties": {
        "isIamUser": {
          "type": "boolean"
        }
      }
    },
    "v1MappingType": {
      "type": "string",
      "enum": [
        "MAPPING_TYPE_UNSPECIFIED",
        "MAPPING_TYPE_LOOKUP_CUSTOM_FIELD",
        "MAPPING_TYPE_CUSTOM_FIELD",
        "MAPPING_TYPE_SYSTEM_FIELD"
      ],
      "default": "MAPPING_TYPE_UNSPECIFIED"
    },
    "v1MergeStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MergeStrategyType"
        },
        "config": {
          "$ref": "#/definitions/MergeStrategyMergeConfig"
        }
      }
    },
    "v1MergeStrategyType": {
      "type": "string",
      "enum": [
        "MERGE_STRATEGY_UNSPECIFIED",
        "MERGE_STRATEGY_ALWAYS_OVERWRITE",
        "MERGE_STRATEGY_OVERWRITE_IF_EMPTY",
        "MERGE_STRATEGY_OVERWRITE_IF_NEWER",
        "MERGE_STRATEGY_COMBINE"
      ],
      "default": "MERGE_STRATEGY_UNSPECIFIED"
    },
    "v1NestedIntegration": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        }
      }
    },
    "v1PageView": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "utmAttributes": {
          "$ref": "#/definitions/v1UTMAttributes"
        },
        "referrer": {
          "type": "string"
        },
        "referringDomain": {
          "type": "string"
        }
      }
    },
    "v1UTMAttributes": {
      "type": "object",
      "properties": {
        "utmCampaign": {
          "type": "string"
        },
        "utmMedium": {
          "type": "string"
        },
        "utmSource": {
          "type": "string"
        },
        "utmContent": {
          "type": "string"
        },
        "utmTerm": {
          "type": "string"
        }
      }
    },
    "v1UpsertObjectResponse": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string",
          "title": "ID for the modified/created object in the CRM\nif it was a single ingestion operation"
        },
        "multiIngestionResponse": {
          "$ref": "#/definitions/UpsertObjectResponseMultiIngestionResponse"
        }
      }
    },
    "v1WorkflowStatus": {
      "type": "string",
      "enum": [
        "WORKFLOW_STATUS_INVALID",
        "WORKFLOW_STATUS_IN_PROGRESS",
        "WORKFLOW_STATUS_SUCCEEDED",
        "WORKFLOW_STATUS_FAILED"
      ],
      "default": "WORKFLOW_STATUS_INVALID"
    },
    "ConfigInboxConfig": {
      "type": "object",
      "properties": {
        "leadCaptureEnabled": {
          "type": "boolean",
          "description": "The lead_capture_enabled is a boolean that indicates if the assistant is able to capture leads."
        },
        "additionalInstructions": {
          "type": "string",
          "description": "Additional instructions for the assistant."
        }
      }
    },
    "ConfigVoiceConfig": {
      "type": "object",
      "properties": {
        "vendorModel": {
          "$ref": "#/definitions/v1alpha1VendorModel"
        },
        "modelConfig": {
          "$ref": "#/definitions/v1alpha1ModelConfig"
        }
      }
    },
    "FunctionAuthStrategyPlatformManagedFunctionAuthStrategy": {
      "type": "object",
      "properties": {
        "requiredScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The scopes required to use the function"
        }
      }
    },
    "FunctionAuthStrategyUnspecifiedFunctionAuthStrategy": {
      "type": "object"
    },
    "FunctionParameterParameterLocation": {
      "type": "string",
      "enum": [
        "LOCATION_BODY",
        "LOCATION_QUERY_PARAM"
      ],
      "default": "LOCATION_BODY",
      "description": "The location of the parameter in the function call.\n\n - LOCATION_BODY: Parameter is set on the request body\n - LOCATION_QUERY_PARAM: Parameter is set in the URL as a query parameter"
    },
    "NamespaceGlobalNamespace": {
      "type": "object",
      "title": "GlobalNamespace is a namespace used to set the resource as default for the entire system, unless overridden by a child (partner, group or account group)"
    },
    "SetAssistantConnectionsRequestConnectionState": {
      "type": "object",
      "properties": {
        "connectionKey": {
          "$ref": "#/definitions/v1alpha1ConnectionKey",
          "title": "The key of the Connection that is being associated/disassociated with the Assistant"
        },
        "isAssociated": {
          "type": "boolean",
          "title": "Whether the Assistant should be associated or disassociated with the Connection"
        }
      }
    },
    "v1alpha1Assistant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the assistant.\nMust be unique within the namespace."
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "Namespace that the assistant belongs to. Can be set only on create."
        },
        "name": {
          "type": "string",
          "title": "Name is the name of the assistant.\nThis is the name that will show in the ui whenever the assistant is interacting with something and must be identified.\nFor example: \"Aurora\", \"Jamie\", \"Siri\""
        },
        "type": {
          "$ref": "#/definitions/v1alpha1AssistantType",
          "description": "The type of the assistant."
        },
        "avatarUrl": {
          "type": "string",
          "description": "The avatar url for the assistant. Rendered in UIs and shown to users.\nIf not provided, a default one will be chosen. Can be modified later."
        },
        "config": {
          "$ref": "#/definitions/v1alpha1Config",
          "description": "The configuration for the assistant."
        },
        "configurableGoals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ConfigurableGoal"
          },
          "title": "The goals that the assistant is associated with and their configuration"
        },
        "userId": {
          "type": "string",
          "description": "The IAM user ID of the service account that is associated with the assistant. Used to authenticate platform requests made by the assistant."
        }
      }
    },
    "v1alpha1AssistantKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the assistant"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "Namespace that the assistant belongs to"
        }
      }
    },
    "v1alpha1AssistantType": {
      "type": "string",
      "enum": [
        "ASSISTANT_TYPE_UNSPECIFIED",
        "ASSISTANT_TYPE_SYSTEM",
        "ASSISTANT_TYPE_INBOX",
        "ASSISTANT_TYPE_SOCIAL_MARKETING",
        "ASSISTANT_TYPE_VOICE_RECEPTIONIST",
        "ASSISTANT_TYPE_CUSTOM",
        "ASSISTANT_TYPE_SALES_COACH",
        "ASSISTANT_TYPE_REPUTATION_MANAGEMENT_REVIEW_AGENT"
      ],
      "default": "ASSISTANT_TYPE_UNSPECIFIED",
      "title": "- ASSISTANT_TYPE_SYSTEM: Admin assistant. Eg. the current Aurora\n - ASSISTANT_TYPE_INBOX: Inbox assistant. Eg. Jamie\n - ASSISTANT_TYPE_SOCIAL_MARKETING: Social marketing assistant. Eg. Simone\n - ASSISTANT_TYPE_VOICE_RECEPTIONIST: Voice receptionist assistant.\n - ASSISTANT_TYPE_CUSTOM: Custom assistant\n - ASSISTANT_TYPE_SALES_COACH: Sales Coach/Assistant\n - ASSISTANT_TYPE_REPUTATION_MANAGEMENT_REVIEW_AGENT: Reputation management Review assistant"
    },
    "v1alpha1BuildDefaultAssistantResponse": {
      "type": "object",
      "properties": {
        "assistant": {
          "$ref": "#/definitions/v1alpha1Assistant"
        }
      }
    },
    "v1alpha1ChatAnswerFunctionExecutionJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the function execution job"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ChatAnswerFunctionExecutionJobStatus",
          "title": "The status of the function execution job"
        },
        "result": {
          "$ref": "#/definitions/v1alpha1ChatAnswerFunctionExecutionJobResult",
          "title": "The result of the function execution job"
        },
        "nextJobId": {
          "type": "string",
          "title": "The ID of the next job in the sequence"
        }
      }
    },
    "v1alpha1ChatAnswerFunctionExecutionJobResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "title": "The content is a progress update message or final answer from a chat answer function execution job"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "The metadata associated with the progress update message or final answer"
        }
      }
    },
    "v1alpha1ChatAnswerFunctionExecutionJobStatus": {
      "type": "string",
      "enum": [
        "FUNCTION_EXECUTION_JOB_STATUS_INVALID",
        "FUNCTION_EXECUTION_JOB_STATUS_QUEUED",
        "FUNCTION_EXECUTION_JOB_STATUS_RUNNING",
        "FUNCTION_EXECUTION_JOB_STATUS_COMPLETE"
      ],
      "default": "FUNCTION_EXECUTION_JOB_STATUS_INVALID",
      "title": "- FUNCTION_EXECUTION_JOB_STATUS_QUEUED: FUNCTION_EXECUTION_JOB_STATUS_QUEUED indicates that the job is queued to run\n - FUNCTION_EXECUTION_JOB_STATUS_RUNNING: FUNCTION_EXECUTION_JOB_STATUS_QUEUED indicates a currently running job\n - FUNCTION_EXECUTION_JOB_STATUS_COMPLETE: FUNCTION_EXECUTION_JOB_STATUS_COMPLETE indicates that the job is complete"
    },
    "v1alpha1ChatChannel": {
      "type": "string",
      "enum": [
        "CHAT_CHANNEL_INVALID",
        "CHAT_CHANNEL_UNSPECIFIED",
        "CHAT_CHANNEL_WEB",
        "CHAT_CHANNEL_SMS",
        "CHAT_CHANNEL_WHATSAPP",
        "CHAT_CHANNEL_FACEBOOK",
        "CHAT_CHANNEL_INSTAGRAM",
        "CHAT_CHANNEL_AUTOMATION",
        "CHAT_CHANNEL_PLATFORM"
      ],
      "default": "CHAT_CHANNEL_INVALID",
      "description": " - CHAT_CHANNEL_UNSPECIFIED: CHAT_CHANNEL_UNSPECIFIED indicates that no special considerations need to be taken for the method in which this chat has been conducted\n - CHAT_CHANNEL_WEB: CHAT_CHANNEL_WEB indicates that the chat is being conducted in a browser or mobile app. This allows for certain formatting, such as markdown.\n - CHAT_CHANNEL_SMS: CHAT_CHANNEL_SMS indicates that the chat is being conducted over SMS text messages. This will enforce shorter messages and not allow markdown.\n - CHAT_CHANNEL_WHATSAPP: CHAT_CHANNEL_WHATSAPP indicates that the chat is being conducted over WhatsApp. This allows for certain formatting, such as a subset of markdown.\n - CHAT_CHANNEL_FACEBOOK: CHAT_CHANNEL_FACEBOOK indicates that the chat is being conducted over Facebook Messenger. This allows for certain formatting, such as a subset of markdown.\n - CHAT_CHANNEL_INSTAGRAM: CHAT_CHANNEL_INSTAGRAM indicates that the chat is being conducted over Instagram. This allows for certain formatting, such as a subset of markdown.\n - CHAT_CHANNEL_AUTOMATION: CHAT_CHANNEL_AUTOMATION indicates that the chat request is being made by an Automation. This does not allow for a back and forth chat.\n - CHAT_CHANNEL_PLATFORM: CHAT_CHANNEL_PLATFORM_CHAT indicates that the chat is being conducted over the platform chat."
    },
    "v1alpha1ChatMessage": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1alpha1ChatMessageRole",
          "title": "The role of the chat message sender"
        },
        "content": {
          "type": "string",
          "title": "The content of the chat message"
        }
      }
    },
    "v1alpha1ChatMessageRole": {
      "type": "string",
      "enum": [
        "CHAT_MESSAGE_ROLE_INVALID",
        "CHAT_MESSAGE_ROLE_USER",
        "CHAT_MESSAGE_ROLE_ASSISTANT"
      ],
      "default": "CHAT_MESSAGE_ROLE_INVALID"
    },
    "v1alpha1ChatUserInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the user"
        },
        "email": {
          "type": "string",
          "title": "The email of the user"
        },
        "phone": {
          "type": "string",
          "title": "The phone number of the user"
        },
        "address1": {
          "type": "string",
          "title": "The address of the user"
        },
        "address2": {
          "type": "string",
          "title": "The additional address line of the user (i.e. Suite or Apt number)"
        },
        "city": {
          "type": "string",
          "title": "The city of the user"
        },
        "state": {
          "type": "string",
          "title": "The state of the user"
        },
        "country": {
          "type": "string",
          "title": "The country of the user"
        },
        "zipCode": {
          "type": "string",
          "title": "The zip/postal code of the user"
        },
        "timezone": {
          "type": "string",
          "title": "The timezone of the user"
        }
      }
    },
    "v1alpha1Config": {
      "type": "object",
      "properties": {
        "inboxConfig": {
          "$ref": "#/definitions/ConfigInboxConfig"
        },
        "voiceConfig": {
          "$ref": "#/definitions/ConfigVoiceConfig"
        }
      },
      "description": "The configuration for the assistant.\nThis is a object that can be used to store any configuration that the assistant uses when interacting with the user of a determined service."
    },
    "v1alpha1ConfigurableGoal": {
      "type": "object",
      "properties": {
        "goal": {
          "$ref": "#/definitions/v1alpha1Goal",
          "title": "The goal that is configurable\nOnly the goal key needs to be set on writes and the entire goal will be returned on fetches"
        },
        "configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "The configuration is a list of key-value pairs that are used to configure the goal\nConfiguring the goal means injecting variables to the prompt(s) associated with the goal on runtime"
        }
      }
    },
    "v1alpha1Connection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the connection.\nMust be unique within the namespace and connection_type.\nClients choose their own IDs, but are encouraged to use UUIDs,\nparticularly if its possible to have more than one Connection for a namespace+connection_type."
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "Namespace that the connection belongs to. Can be set only on create."
        },
        "name": {
          "type": "string",
          "description": "Name is the human-readable name of the connection. Shown to users.\nThis is different from connection type name in that you may have multiple connections of the same type and need to differentiate them.\nFor example: \"Twilio 3065556666\" vs \"Twilio 4155557777\" which are both of the \"Inbox Voice\" connection type."
        },
        "configurationUrl": {
          "type": "string",
          "title": "ConfigurationURL is the url for where this connection can be configured\nContinuing with the Inbox Voice example, this would be the configuration screen for that Twilio number in Business App.\nFor example: \"https://colin-gooding-inc-dot-vbc-demo.appspot.com/account/location/AG-ZVTV5THTQK/settings/inbox\""
        },
        "assistantKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1AssistantKey"
          },
          "title": "the assistants that the connection is associated with"
        },
        "connectionType": {
          "type": "string",
          "description": "Connection Type is the type of connection. This is not shown to user but can be used for filtering or display purposes.\nThis is often a product identifier like \"sm\" for social marketing or \"webchat\" for inbox webchat."
        },
        "connectionTypeName": {
          "type": "string",
          "description": "ConnectionTypeName is the human-readable name of the connection type - eg \"Inbox\" or \"Twilio\" or \"Social Marketing\". Shown to users.\nRead-only. Set based on the connection type. If you add a connection type, also add a corresponding connection type name in the `ai-assistants` microservice."
        },
        "iconUrl": {
          "type": "string",
          "description": "The url to an icon for the connection. Rendered in UIs and shown to users.\nIf not provided, the product will choose a default icon.\nRead-only. Set based on the connection type. If you add a connection type, also add a corresponding icon url in the `ai-assistants` microservice."
        },
        "isConnectionLocked": {
          "type": "boolean",
          "description": "IsConnectionLocked is a boolean that indicates if the connection with assistants is locked from being modified by the user.\nIf true, the connection with the participant is locked and cannot be modified by the user."
        },
        "supportedAssistantTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AssistantType"
          },
          "description": "SupportedAssistantTypes is a list of assistant types that this connection supports."
        }
      }
    },
    "v1alpha1ConnectionKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the connection"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "Namespace that the connection belongs to"
        },
        "connectionType": {
          "type": "string",
          "title": "The type of connection"
        }
      }
    },
    "v1alpha1ContextInfo": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "Variables can include any additional context information that will be used in building the Context Goal"
        }
      },
      "title": "ContextInfo holds additional context information for the AI assistant"
    },
    "v1alpha1CreateAssistantRequestOptions": {
      "type": "object",
      "properties": {
        "applyDefaults": {
          "type": "boolean",
          "description": "Automatically apply default configurations for the assistant."
        }
      }
    },
    "v1alpha1CreateAssistantResponse": {
      "type": "object",
      "properties": {
        "assistant": {
          "$ref": "#/definitions/v1alpha1Assistant"
        }
      }
    },
    "v1alpha1CreateGoalResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the created goal"
        }
      }
    },
    "v1alpha1CreatePromptModuleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the prompt module that was created"
        }
      }
    },
    "v1alpha1CreatePromptModuleVersionRequestOptions": {
      "type": "object",
      "properties": {
        "shouldDeploy": {
          "type": "boolean",
          "title": "Whether to deploy the prompt module version after it is created"
        }
      }
    },
    "v1alpha1ExecuteFunctionResponse": {
      "type": "object",
      "properties": {
        "output": {
          "type": "string",
          "description": "The generated output of the function\nFor functions that generate answers, this will be a full answer. For other functions, this may be a status update message."
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "Metadata can include any additional information that a function builds\nThere can also be an entry for `result` which is the data that should be given as a toolCall response to open ai"
        }
      }
    },
    "v1alpha1Function": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the function"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the function belongs to"
        },
        "description": {
          "type": "string",
          "title": "The description of the function"
        },
        "url": {
          "type": "string",
          "title": "The URL that the function will call"
        },
        "methodType": {
          "type": "string",
          "title": "The method type that the function call will use to call the URL"
        },
        "functionParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FunctionParameter"
          },
          "title": "The parameters that the function accepts"
        },
        "generatesAnswer": {
          "type": "boolean",
          "title": "Functions that generate an answer are not actually executed, instead the request parameters are used as the generated answer"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the function was last updated"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FunctionHeader"
          },
          "title": "The headers that the function call will use to call the URL"
        },
        "managed": {
          "type": "boolean",
          "title": "Whether the function is managed outside of its namespace\nA managed function cannot be edited, it is only updated by the managed configuration"
        },
        "authStrategy": {
          "$ref": "#/definitions/v1alpha1FunctionAuthStrategy",
          "title": "The auth strategy to use when calling this function"
        }
      }
    },
    "v1alpha1FunctionAuthStrategy": {
      "type": "object",
      "properties": {
        "unspecified": {
          "$ref": "#/definitions/FunctionAuthStrategyUnspecifiedFunctionAuthStrategy",
          "title": "The function does not use a defined auth strategy (may be unauthed, or may provide an api key via parameters, headers, etc)"
        },
        "platformManaged": {
          "$ref": "#/definitions/FunctionAuthStrategyPlatformManagedFunctionAuthStrategy",
          "title": "The function uses the platform managed auth strategy"
        }
      }
    },
    "v1alpha1FunctionHeader": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1FunctionKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the function"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the function belongs to"
        }
      }
    },
    "v1alpha1FunctionParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the parameter"
        },
        "description": {
          "type": "string",
          "title": "The description of the parameter"
        },
        "type": {
          "type": "string",
          "title": "The type of the parameter"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FunctionParameter"
          },
          "title": "The properties that the parameter contains (if the type is an object)"
        },
        "items": {
          "$ref": "#/definitions/v1alpha1FunctionParameter",
          "title": "The definition of the items that the array contains (only used if type is array)"
        },
        "value": {
          "type": "string",
          "title": "The value of the parameter - used only when the parameters is filled automatically by the system"
        },
        "location": {
          "$ref": "#/definitions/FunctionParameterParameterLocation"
        }
      }
    },
    "v1alpha1GenerateChatAnswerRequestOptions": {
      "type": "object",
      "properties": {
        "includeAllCitations": {
          "type": "boolean",
          "description": "When this option is true, all possible citations for knowledge given to the AI will be given. When false, only citations deemed relevant by the AI will be included."
        },
        "enableAsyncFunctions": {
          "type": "boolean",
          "title": "When this option is true, the request may return with a pending_job_id that can be used to poll GetChatAnswerFunctionExecutionJob for progress results of functions being called until the final answer is given.\nWhen this option is false, the response will wait until all functions have been completed before returning a response"
        },
        "maxTokens": {
          "type": "string",
          "format": "int64",
          "description": "the max tokens to generate in the answer. If zero, the default will be used instead."
        }
      }
    },
    "v1alpha1GenerateChatAnswerResponse": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "title": "The generated answer"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "The metadata associated with the answer"
        },
        "pendingJobId": {
          "type": "string",
          "title": "If pending_job_id is empty, the answer can just be used directly\nIf enable_async_functions is true, a pending_job_id will be returned if an answer is not yet ready\nIt should be used to poll GetChatAnswerFunctionExecutionJob for progress updates through to the final answer"
        }
      }
    },
    "v1alpha1GetAssistantResponse": {
      "type": "object",
      "properties": {
        "assistant": {
          "$ref": "#/definitions/v1alpha1Assistant"
        }
      }
    },
    "v1alpha1GetChatAnswerFunctionExecutionJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/v1alpha1ChatAnswerFunctionExecutionJob",
          "title": "The function execution job"
        }
      }
    },
    "v1alpha1GetConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1alpha1Connection"
        }
      }
    },
    "v1alpha1GetDeployedPromptModuleVersionResponse": {
      "type": "object",
      "properties": {
        "promptModule": {
          "$ref": "#/definitions/v1alpha1PromptModule",
          "title": "The requested prompt module"
        },
        "deployedPromptModuleVersion": {
          "$ref": "#/definitions/v1alpha1PromptModuleVersion",
          "title": "The deployed version of the requested prompt module"
        }
      }
    },
    "v1alpha1GetDeployedPromptVersionResponse": {
      "type": "object",
      "properties": {
        "prompt": {
          "$ref": "#/definitions/v1alpha1Prompt",
          "title": "The requested prompt"
        },
        "deployedPromptVersion": {
          "$ref": "#/definitions/v1alpha1PromptVersion",
          "title": "The deployed version of the requested prompt"
        }
      }
    },
    "v1alpha1GetFunctionResponse": {
      "type": "object",
      "properties": {
        "function": {
          "$ref": "#/definitions/v1alpha1Function",
          "title": "The function that matches the supplied ID"
        }
      }
    },
    "v1alpha1GetGoalResponse": {
      "type": "object",
      "properties": {
        "goal": {
          "$ref": "#/definitions/v1alpha1Goal",
          "title": "The goal that matches the supplied ID"
        }
      }
    },
    "v1alpha1GetHydratedDeployedPromptModuleVersionResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "title": "The requested hydrated content from the deployed prompt module version"
        }
      }
    },
    "v1alpha1GetMultiDeployedPromptVersionResponse": {
      "type": "object",
      "properties": {
        "prompts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Prompt"
          },
          "title": "The requested prompts"
        },
        "deployedPromptVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptVersion"
          },
          "title": "The deployed versions of the requested prompts"
        }
      }
    },
    "v1alpha1GetMultiFunctionResponse": {
      "type": "object",
      "properties": {
        "functions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Function"
          },
          "title": "The functions that match the supplied keys"
        }
      }
    },
    "v1alpha1GetMultiGoalResponse": {
      "type": "object",
      "properties": {
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Goal"
          },
          "title": "The goals that match the supplied keys"
        }
      }
    },
    "v1alpha1GetMultiHydratedDeployedPromptModuleVersionResponse": {
      "type": "object",
      "properties": {
        "contents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The requested hydrated content from the deployed prompt module versions"
        }
      }
    },
    "v1alpha1GetPromptModuleResponse": {
      "type": "object",
      "properties": {
        "promptModule": {
          "$ref": "#/definitions/v1alpha1PromptModule",
          "title": "The prompt module that matches the supplied ID"
        }
      }
    },
    "v1alpha1GetPromptModuleVersionResponse": {
      "type": "object",
      "properties": {
        "promptModuleVersion": {
          "$ref": "#/definitions/v1alpha1PromptModuleVersion",
          "title": "The prompt version that matches the supplied ID and version"
        }
      }
    },
    "v1alpha1GetPromptResponse": {
      "type": "object",
      "properties": {
        "prompt": {
          "$ref": "#/definitions/v1alpha1Prompt",
          "title": "The prompt that matches the supplied ID"
        }
      }
    },
    "v1alpha1GetPromptVersionResponse": {
      "type": "object",
      "properties": {
        "promptVersion": {
          "$ref": "#/definitions/v1alpha1PromptVersion",
          "title": "The prompt version that matches the supplied ID and version"
        }
      }
    },
    "v1alpha1Goal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the goal"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the goal belongs to"
        },
        "name": {
          "type": "string",
          "title": "The name of the goal"
        },
        "description": {
          "type": "string",
          "title": "The description of the goal"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1GoalType",
          "title": "The type of the goal"
        },
        "promptModules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptModule"
          },
          "title": "The prompt modules associated with the goal"
        },
        "functions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Function"
          },
          "title": "The functions associated with the goal"
        },
        "updatedBy": {
          "type": "string",
          "title": "The IAM user ID who last updated the goal"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the last goal update"
        },
        "supportedChannels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GoalChannel"
          },
          "title": "The supported channels for the goal, if empty, the goal is supported on all channels"
        },
        "managed": {
          "type": "boolean",
          "title": "Whether the goal is managed outside of its namespace\nA managed goal cannot be edited, it is only updated by the managed configuration"
        }
      }
    },
    "v1alpha1GoalChannel": {
      "type": "string",
      "enum": [
        "GOAL_CHANNEL_INVALID",
        "GOAL_CHANNEL_SMS",
        "GOAL_CHANNEL_EMAIL",
        "GOAL_CHANNEL_PLATFORM",
        "GOAL_CHANNEL_WEBCHAT",
        "GOAL_CHANNEL_VOICE",
        "GOAL_CHANNEL_WHATSAPP",
        "GOAL_CHANNEL_INSTAGRAM",
        "GOAL_CHANNEL_FACEBOOK",
        "GOAL_CHANNEL_AUTOMATION"
      ],
      "default": "GOAL_CHANNEL_INVALID",
      "title": "- GOAL_CHANNEL_INVALID: GOAL_CHANNEL_INVALID is an invalid channel\n - GOAL_CHANNEL_SMS: GOAL_CHANNEL_SMS is a channel that supports SMS\n - GOAL_CHANNEL_EMAIL: GOAL_CHANNEL_EMAIL is a channel that supports email\n - GOAL_CHANNEL_PLATFORM: GOAL_CHANNEL_PLATFORM is a channel that supports platform\n - GOAL_CHANNEL_WEBCHAT: GOAL_CHANNEL_WEBCHAT is a channel that supports webchat\n - GOAL_CHANNEL_VOICE: GOAL_CHANNEL_VOICE is a channel that supports voice\n - GOAL_CHANNEL_WHATSAPP: GOAL_CHANNEL_WHATSAPP is a channel that supports whatsapp\n - GOAL_CHANNEL_INSTAGRAM: GOAL_CHANNEL_INSTAGRAM is a channel that supports instagram\n - GOAL_CHANNEL_FACEBOOK: GOAL_CHANNEL_FACEBOOK is a channel that supports facebook\n - GOAL_CHANNEL_AUTOMATION: GOAL_CHANNEL_AUTOMATION is a channel that supports automations"
    },
    "v1alpha1GoalKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the goal"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the goal belongs to"
        }
      }
    },
    "v1alpha1GoalType": {
      "type": "string",
      "enum": [
        "GOAL_TYPE_INVALID",
        "GOAL_TYPE_GOAL",
        "GOAL_TYPE_KNOWLEDGE",
        "GOAL_TYPE_PERSONALITY",
        "GOAL_TYPE_CUSTOM"
      ],
      "default": "GOAL_TYPE_INVALID",
      "title": "- GOAL_TYPE_INVALID: GOAL_TYPE_INVALID is an invalid goal type\n - GOAL_TYPE_GOAL: GOAL_TYPE_GOAL is a goal that contains the assistant goal\n - GOAL_TYPE_KNOWLEDGE: GOAL_TYPE_KNOWLEDGE is a goal that contains the assistant knowledge\n - GOAL_TYPE_PERSONALITY: GOAL_TYPE_PERSONALITY is a goal that describes the assistant personality\n - GOAL_TYPE_CUSTOM: GOAL_TYPE_CUSTOM is a goal that is customized for a specific use case"
    },
    "v1alpha1GoalsDisabledForAccountGroupResponse": {
      "type": "object",
      "properties": {
        "goalsDisabled": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1ListAllAssistantsAssociatedToConnectionRequestFilters": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1AssistantType"
        }
      }
    },
    "v1alpha1ListAllAssistantsAssociatedToConnectionResponse": {
      "type": "object",
      "properties": {
        "assistants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Assistant"
          }
        }
      }
    },
    "v1alpha1ListAssistantRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1AssistantType"
        }
      }
    },
    "v1alpha1ListAssistantResponse": {
      "type": "object",
      "properties": {
        "assistants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Assistant"
          }
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListConnectionsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        },
        "assistantType": {
          "$ref": "#/definitions/v1alpha1AssistantType"
        }
      }
    },
    "v1alpha1ListConnectionsResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Connection"
          }
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListFunctionRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      }
    },
    "v1alpha1ListFunctionResponse": {
      "type": "object",
      "properties": {
        "functions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Function"
          },
          "title": "The list of functions"
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The metadata for paging through the list of functions"
        }
      }
    },
    "v1alpha1ListGoalsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1GoalType"
        },
        "supportedChannels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GoalChannel"
          }
        }
      }
    },
    "v1alpha1ListGoalsResponse": {
      "type": "object",
      "properties": {
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Goal"
          },
          "title": "The list of goals"
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The metadata for paging through the list of goals"
        }
      }
    },
    "v1alpha1ListPromptModuleRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      }
    },
    "v1alpha1ListPromptModuleResponse": {
      "type": "object",
      "properties": {
        "promptModules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptModule"
          },
          "title": "The list of prompt modules"
        },
        "deployedPromptModuleVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptModuleVersion"
          },
          "title": "The deployed version of each prompt module"
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The metadata for paging through the list of prompt module"
        }
      }
    },
    "v1alpha1ListPromptModuleVersionsResponse": {
      "type": "object",
      "properties": {
        "promptModuleVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptModuleVersion"
          },
          "title": "The list of prompt module versions"
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The metadata for paging through the list of prompt module versions"
        }
      }
    },
    "v1alpha1ListPromptResponse": {
      "type": "object",
      "properties": {
        "prompts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Prompt"
          },
          "title": "The list of prompts"
        },
        "deployedPromptVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptVersion"
          },
          "title": "The deployed version of each prompt"
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The metadata for paging through the list of prompts"
        }
      }
    },
    "v1alpha1ListPromptVersionsResponse": {
      "type": "object",
      "properties": {
        "promptVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1PromptVersion"
          },
          "title": "The list of prompt versions"
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The metadata for paging through the list of prompt versions"
        }
      }
    },
    "v1alpha1ModelConfig": {
      "type": "object",
      "properties": {
        "openaiRealtimeConfig": {
          "$ref": "#/definitions/v1alpha1OpenAIRealtimeConfig"
        },
        "deepgramConfig": {
          "$ref": "#/definitions/v1alpha1DeepgramConfig"
        }
      }
    },
    "v1alpha1Prompt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the prompt"
        },
        "deployedVersion": {
          "type": "string",
          "title": "The version of the prompt that is currently deployed"
        },
        "deployedBy": {
          "type": "string",
          "title": "The IAM user ID who last deployed the prompt"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the last update to the prompt data, either description or a deployment"
        },
        "description": {
          "type": "string",
          "title": "A human-readable description of the purpose or use of the prompt"
        },
        "deployed": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the last prompt deployment"
        }
      }
    },
    "v1alpha1PromptModule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the prompt module"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "Namespace that the prompt module belongs to. Can be set only on create."
        },
        "name": {
          "type": "string",
          "title": "The name of the prompt module that will be displayed on the UI"
        },
        "description": {
          "type": "string",
          "title": "The description of the prompt module"
        },
        "deployedVersion": {
          "type": "string",
          "title": "The version of the prompt module that is currently deployed"
        },
        "deployedBy": {
          "type": "string",
          "title": "The IAM user ID who last deployed the prompt module"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the last prompt module update"
        },
        "deployed": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the last prompt module deployment"
        },
        "managed": {
          "type": "boolean",
          "title": "Whether the prompt module is managed outside of its namespace\nA managed prompt module cannot be edited, it is only updated by the managed configuration"
        }
      }
    },
    "v1alpha1PromptModuleKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the prompt module"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "title": "The namespace that the prompt module belongs to"
        }
      }
    },
    "v1alpha1PromptModuleVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the prompt module associated with this version"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "Namespace that the prompt module belongs to. Can be set only on create."
        },
        "version": {
          "type": "string",
          "title": "The version of the prompt module - a unix epoch timestamp"
        },
        "content": {
          "type": "string",
          "title": "The content of the prompt module version"
        },
        "createdBy": {
          "type": "string",
          "title": "The IAM user ID who created the prompt module version"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the prompt module version creation"
        }
      }
    },
    "v1alpha1PromptVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the prompt associated with this version"
        },
        "version": {
          "type": "string",
          "title": "The version of the prompt - a unix epoch timestamp"
        },
        "content": {
          "type": "string",
          "title": "The content of the prompt version"
        },
        "createdBy": {
          "type": "string",
          "title": "The IAM user ID who created the prompt version"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp of the prompt version creation"
        }
      }
    },
    "v1alpha1UpsertAssistantRequestOptions": {
      "type": "object",
      "properties": {
        "applyDefaults": {
          "type": "boolean",
          "description": "Automatically apply default configurations for the assistant."
        }
      }
    },
    "v1alpha1UpsertAssistantResponse": {
      "type": "object",
      "properties": {
        "assistant": {
          "$ref": "#/definitions/v1alpha1Assistant"
        }
      }
    },
    "CurrenciesCurrency": {
      "type": "string",
      "enum": [
        "USD",
        "AUD",
        "BRL",
        "CAD",
        "CHF",
        "CNY",
        "CZK",
        "EUR",
        "GBP",
        "HKD",
        "INR",
        "JPY",
        "KHR",
        "KRW",
        "MXN",
        "NOK",
        "NZD",
        "RUB",
        "SEK",
        "SGD",
        "TRY",
        "ZAR",
        "DZD",
        "AWG",
        "FJD",
        "KYD"
      ],
      "default": "USD"
    },
    "FrequenciesFrequency": {
      "type": "string",
      "enum": [
        "MONTHLY",
        "DAILY",
        "ONCE",
        "YEARLY",
        "WEEKLY",
        "OTHER"
      ],
      "default": "MONTHLY"
    },
    "v1AccountRichData": {
      "type": "object",
      "properties": {
        "brandsCarried": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callTrackingNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "commonName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deletedFlag": {
          "type": "boolean"
        },
        "contactFirstName": {
          "type": "string"
        },
        "images": {
          "$ref": "#/definitions/v1Images"
        },
        "timezone": {
          "type": "string"
        },
        "workNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "float"
        },
        "foursquareUrl": {
          "type": "string"
        },
        "serviceAreaBusinessFlag": {
          "type": "boolean"
        },
        "seoCategory": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string"
        },
        "taxIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "website": {
          "type": "string"
        },
        "rssUrl": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "twitterUrl": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "hoursOfOperation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HoursOfOperationSpan"
          }
        },
        "faxNumber": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "serviceAvailability": {
          "$ref": "#/definitions/v1ServiceAvailability"
        },
        "youtubeUrl": {
          "type": "string"
        },
        "instagramUrl": {
          "type": "string"
        },
        "keyPerson": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facebookUrl": {
          "type": "string"
        },
        "pinterestUrl": {
          "type": "string"
        },
        "contactLastName": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "customerIdentifier": {
          "type": "string"
        },
        "cellNumber": {
          "type": "string"
        },
        "linkedinUrl": {
          "type": "string"
        },
        "longitude": {
          "type": "number",
          "format": "float"
        },
        "salesPersonId": {
          "type": "string"
        },
        "tollFreeNumber": {
          "type": "string"
        },
        "googleplusUrl": {
          "type": "string"
        },
        "servicesOffered": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string"
        },
        "landmark": {
          "type": "string"
        },
        "paymentMethods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1AccountSettings": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The id for the account"
        },
        "partnerId": {
          "type": "string",
          "title": "The id for the Partner (the vendor may know this as the reseller)"
        },
        "marketId": {
          "type": "string",
          "title": "The id for the Market the account is in"
        },
        "platformSettings": {
          "$ref": "#/definitions/v1PlatformSettings",
          "description": "The set of structured settings Vendasta has defined."
        },
        "whitelabelActive": {
          "type": "boolean",
          "title": "Whether or not whitelabeling is currently enabled for this account"
        }
      }
    },
    "v1AddonActivation": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string",
          "title": "Unique identifier of a single addon that is going through the activation process"
        },
        "appId": {
          "type": "string",
          "title": "Unique identifier of the parent app for the addon that is going through the activation process"
        },
        "activationStatus": {
          "$ref": "#/definitions/v1ActivationStatus",
          "title": "The activation status of a single product"
        }
      },
      "title": "Represents a single addon with its corresponding activation status"
    },
    "v1BusinessMetric": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The businessID of the SMB this data will correspond to"
        },
        "label": {
          "type": "string",
          "title": "A human readable label for the data being collected"
        },
        "points": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Point"
          },
          "title": "One or more distinct data points that should be collected"
        }
      },
      "title": "Data expected from the client. Is composed of a header and at least one point\nof data"
    },
    "v1ChangeSpendRequestStatus": {
      "type": "string",
      "enum": [
        "CHANGE_SPEND_REQUEST_STATUS_INVALID",
        "CHANGE_SPEND_REQUEST_STATUS_CREATED",
        "CHANGE_SPEND_REQUEST_STATUS_APPROVED",
        "CHANGE_SPEND_REQUEST_STATUS_REJECTED",
        "CHANGE_SPEND_REQUEST_STATUS_OVERRIDDEN"
      ],
      "default": "CHANGE_SPEND_REQUEST_STATUS_INVALID"
    },
    "v1CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "internalCustomerId": {
          "type": "string"
        }
      }
    },
    "v1DateRange": {
      "type": "string",
      "enum": [
        "DATE_RANGE_UNSET",
        "DATE_RANGE_LAST_7_DAYS",
        "DATE_RANGE_LAST_30_DAYS",
        "DATE_RANGE_LAST_90_DAYS",
        "DATE_RANGE_LAST_6_MONTHS",
        "DATE_RANGE_LAST_YEAR"
      ],
      "default": "DATE_RANGE_UNSET"
    },
    "v1DeleteBusinessMetricRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteBusinessMetricResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/v1Error"
        }
      }
    },
    "v1DeleteMultiBusinessMetricsResponse": {
      "type": "object",
      "properties": {
        "businessMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeleteBusinessMetricResponse"
          }
        }
      }
    },
    "v1Filters": {
      "type": "object",
      "properties": {
        "source": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The source of the contacts the user want to filter for"
        },
        "syncedAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter with the appIDs that the contacts are synced with"
        }
      },
      "title": "Option for controlling the filter of the contacts list"
    },
    "v1GetAccountRichDataResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1AccountRichData"
        }
      }
    },
    "v1GetAccountSettingsResponse": {
      "type": "object",
      "properties": {
        "accountSettings": {
          "$ref": "#/definitions/v1AccountSettings"
        }
      }
    },
    "v1GetBusinessMetricPointResponse": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "int64"
        },
        "dateHappened": {
          "type": "string",
          "format": "date-time"
        },
        "dateHappenedKey": {
          "type": "string"
        },
        "aggregationKey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        }
      },
      "title": "https://github.com/vendasta/vanalytics/blob/9f3930d9e66a4959624a1e73abcf2a1e0b24dfdc/internal/business-metrics/model.go#L15\nGetBusinessMetricPointResponse - A single business metric point"
    },
    "v1GetBusinessMetricResponse": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/v1BusinessMetric",
          "title": "A metric containing multiple points, the number of which is limited by page size"
        },
        "cursor": {
          "type": "string",
          "description": "A cursor to provide to GetBusinessMetricRequest to get additional points. If empty there are no more points."
        }
      }
    },
    "v1GetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "Google Workspace Customer model"
        }
      },
      "title": "A response for getting a Customer"
    },
    "v1GetOAuthTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "The token to use to authenticate all other API's with (set in the Authorization header)."
        },
        "tokenType": {
          "type": "string",
          "description": "The type of token returned."
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "A timestamp indicating when the access token is good until."
        }
      },
      "title": "GetOAuthTokenResponse"
    },
    "v1GetRetailPriceResponse": {
      "type": "object",
      "properties": {
        "retailPrice": {
          "$ref": "#/definitions/v1RetailPrice",
          "title": "price to sell the application at from the SMB perspective"
        }
      }
    },
    "v1GetSessionFromTokenResponse": {
      "type": "object",
      "properties": {
        "session": {
          "$ref": "#/definitions/v1Session",
          "title": "The Session associated with the specified token"
        }
      }
    },
    "v1GetSessionTransferURLResponse": {
      "type": "object",
      "properties": {
        "sessionTransferUrl": {
          "type": "string",
          "description": "The session transfer URL to send the user to (which may result in a redirect to a login screen)."
        }
      }
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "The pinterest User"
        }
      },
      "title": "GetUser returns a pinterestUser"
    },
    "v1HoursOfOperationSpan": {
      "type": "object",
      "properties": {
        "closes": {
          "type": "string"
        },
        "dayOfWeek": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Use repeated for an array"
        },
        "description": {
          "type": "string"
        },
        "opens": {
          "type": "string"
        }
      }
    },
    "v1Images": {
      "type": "object",
      "properties": {
        "logo": {
          "type": "string"
        },
        "primary": {
          "type": "string"
        }
      }
    },
    "v1ListActiveAddonsResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddonActivation"
          },
          "description": "The active addons for the specified business on the app."
        }
      }
    },
    "v1ListAssociatedUsersResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserAssociations"
          },
          "title": "The user associations"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "The paging metadata"
        }
      }
    },
    "v1ListCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "The customers matching the list request"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to list the next page of customers"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether there are more customers to list"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total number of customers for account group"
        }
      }
    },
    "v1PartnerMarketContainer": {
      "type": "object",
      "properties": {
        "marketId": {
          "type": "string",
          "title": "market_id is a sub group nested under the partner corresponding to partner_id"
        },
        "partnerId": {
          "type": "string",
          "title": "partner_id is the id of the partner that has the associated retail price for a app"
        }
      }
    },
    "v1PlatformSettings": {
      "type": "object",
      "properties": {
        "partnerName": {
          "type": "string",
          "title": "Partner's name, meant to be used for whitelabeling"
        },
        "partnerLogoUrl": {
          "type": "string",
          "title": "Partner's logo meant to be used for whitelabeling"
        },
        "partnerPrimaryBrandingHexColor": {
          "type": "string",
          "title": "Partner's primary brand colour"
        }
      }
    },
    "v1Point": {
      "type": "object",
      "properties": {
        "dateHappened": {
          "type": "string",
          "format": "date-time",
          "title": "Date the value happened"
        },
        "aggregationKey": {
          "type": "string",
          "title": "Human readable tag that can be used to aggregate otherwise similar values"
        },
        "intval": {
          "type": "string",
          "format": "int64"
        },
        "strval": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Defines a single point of data"
    },
    "v1RetailPrice": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string",
          "format": "int64",
          "title": "the price of the app"
        },
        "billingFrequency": {
          "$ref": "#/definitions/FrequenciesFrequency",
          "title": "the frequency in which the purchaser should be billed for the app"
        },
        "currency": {
          "$ref": "#/definitions/CurrenciesCurrency",
          "title": "the currency in which the purchaser would make payment(s) in"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "the setup fee in cents"
        }
      },
      "title": "RetailPrice is the price that an app should be sold to a business at"
    },
    "v1ServiceAvailability": {
      "type": "object",
      "properties": {
        "delivery": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "noContactDelivery": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "inStorePickup": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "curbsidePickup": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "appointmentsOnly": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "ecommerceOnly": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "closedStatus": {
          "$ref": "#/definitions/v1ClosedStatus"
        },
        "closedStatusDate": {
          "type": "string",
          "format": "date-time"
        },
        "reopeningDate": {
          "type": "string",
          "format": "date-time"
        },
        "servesDineIn": {
          "$ref": "#/definitions/v1IsAvailable"
        }
      }
    },
    "v1Session": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The App ID from the session information"
        },
        "issued": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the token was first issued"
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the token is valid until"
        }
      }
    },
    "v1UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The updated customer"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner owning this account group"
        },
        "businessId": {
          "type": "string",
          "title": "The ID of the business authing this user"
        },
        "userId": {
          "type": "string",
          "title": "The unique internal ID for a pinterest user"
        },
        "pinterestUserId": {
          "type": "string",
          "title": "The unique external ID for a pinterest user"
        },
        "username": {
          "type": "string",
          "title": "The username for a pinterest user"
        },
        "imageUrl": {
          "type": "string",
          "title": "The URL to the user's profile picture"
        },
        "fullName": {
          "type": "string",
          "title": "The full name of this pinterest user"
        },
        "bio": {
          "type": "string",
          "title": "The bio set by the user in pinterest"
        },
        "accessToken": {
          "type": "string",
          "title": "The access token for this user"
        },
        "tokenBroken": {
          "type": "boolean",
          "title": "Is the access token broken"
        }
      },
      "title": "A model representing a pinterest user connected through oauth"
    },
    "v1ValidateOrderFormResponse": {
      "type": "object",
      "properties": {
        "invalidReason": {
          "type": "string",
          "title": "Why the field is invalid"
        }
      },
      "title": "Response of the Vendor stating the validity of the order form field\nIf invalid_reason is empty, it means it is valid"
    },
    "GetMultiTemplateResponseGetOrError": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1Template"
        },
        "errorDescription": {
          "type": "string"
        }
      },
      "title": "Template or error message"
    },
    "ListSubstitutionParametersRequestFilters": {
      "type": "object",
      "properties": {
        "includeHtml": {
          "type": "boolean"
        },
        "includeDeprecated": {
          "type": "boolean"
        },
        "forRequiredOptions": {
          "$ref": "#/definitions/v1SubstitutionParameterOptions",
          "title": "With Required Options will filter out the SubstitutionParameters that have required options that are left blank. This way if you don't provide\nan `account_group_id` SubstitutionParameters that required `account_group_id` will not be returned. The values aren't used, other than to check if it's empty.\nIf this structure is nil then this filter is ignored and all of the SubstitutionParameters will be returned (while respecting the other filters)"
        }
      }
    },
    "RenderMultiResponseRenderOrError": {
      "type": "object",
      "properties": {
        "renderedTemplate": {
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        }
      },
      "title": "Rendered template"
    },
    "RenderTemplateMultiRequestParameterizedTemplates": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "Template ID to render (without locale section)"
        },
        "parameters": {
          "type": "object",
          "title": "Substitution parameters\nSupports dot pathing in the template content; for example, given `productName['.Workflow.Step1.ProductId']` will go Workflow > Step1 > ProductId into\nparameters and get the associated value"
        },
        "locale": {
          "type": "string",
          "description": "(Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code."
        },
        "substitutionParameterOptions": {
          "$ref": "#/definitions/v1SubstitutionParameterOptions",
          "description": "Options to hydrate user friendly parameters provided on render to previously defined replacement tags. This is a less powerful, but more user friendly way for\ndynamic content replacement."
        }
      }
    },
    "v1AccountGroupsHydrationOption": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "string",
          "title": "The name of the parameter that will contain account group ids"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the list of account groups"
        }
      }
    },
    "v1AppsHydrationOption": {
      "type": "object",
      "properties": {
        "appKeys": {
          "type": "string",
          "description": "The name of the parameter that will contain app_keys. They should be in the format of the AppKey message."
        },
        "partnerId": {
          "type": "string",
          "title": "The name of the parameter that will contain the partner id (used for whitelabeling)"
        },
        "marketId": {
          "type": "string",
          "title": "The name of the parameter that will contain the market id (used for whitelabeling)"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the list of apps"
        }
      }
    },
    "v1BrandingHydrationOption": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The name of the parameter that will contain the partner id"
        },
        "marketId": {
          "type": "string",
          "title": "The name of the parameter that will contain the market id"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the branding"
        }
      }
    },
    "v1GetAllSubstitutionParametersResponse": {
      "type": "object",
      "properties": {
        "substitutionParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubstitutionParameter"
          }
        }
      }
    },
    "v1GetMultiTemplateResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiTemplateResponseGetOrError"
          },
          "description": "A list of templates, or an error if a template could not be found.\nThe order of the list is the same as the order of the request."
        }
      }
    },
    "v1GetTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1Template"
        }
      }
    },
    "v1HydrationOptions": {
      "type": "object",
      "properties": {
        "accountGroups": {
          "$ref": "#/definitions/v1AccountGroupsHydrationOption"
        },
        "apps": {
          "$ref": "#/definitions/v1AppsHydrationOption"
        },
        "packages": {
          "$ref": "#/definitions/v1PackagesHydrationOption"
        },
        "branding": {
          "$ref": "#/definitions/v1BrandingHydrationOption"
        },
        "users": {
          "$ref": "#/definitions/v1UsersHydrationOption"
        },
        "salesActivities": {
          "$ref": "#/definitions/v1SalesActivitiesHydrationOption"
        },
        "partnerConfig": {
          "$ref": "#/definitions/v1PartnerConfigHydrationOption"
        },
        "task": {
          "$ref": "#/definitions/v1TasksHydrationOption"
        }
      }
    },
    "v1ListSubstitutionParametersResponse": {
      "type": "object",
      "properties": {
        "substitutionParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubstitutionParameter"
          }
        }
      }
    },
    "v1ListTemplateResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Template"
          },
          "title": "All templates for a given business ID"
        },
        "cursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not there are more results to list"
        }
      }
    },
    "v1PackagesHydrationOption": {
      "type": "object",
      "properties": {
        "packageIds": {
          "type": "string",
          "title": "The name of the parameter that will contain package ids"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the list of apps"
        }
      }
    },
    "v1PartnerConfigHydrationOption": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The name of the parameter that will contain the partner id of the sales config"
        },
        "marketId": {
          "type": "string",
          "title": "The name of the parameter that will contain the market id of the sales config (empty for all markets)"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the list of sales config"
        }
      }
    },
    "v1RawTemplate": {
      "type": "object",
      "properties": {
        "templateContent": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1TemplateType"
        }
      }
    },
    "v1RenderMultiRequestRender": {
      "type": "object",
      "properties": {
        "templateContent": {
          "type": "string",
          "title": "Template content to render"
        },
        "parameters": {
          "type": "object",
          "title": "Substitution parameters\nSupports dot pathing in the template content; for example, given `productName['.Workflow.Step1.ProductId']` will go Workflow > Step1 > ProductId into\nparameters and get the associated value"
        },
        "errorOnMissingParam": {
          "type": "boolean",
          "title": "should return an error if parameters are missing keys. This is only an option for golang templates. Django templates wont return an error for missing keys"
        },
        "type": {
          "$ref": "#/definitions/v1TemplateType",
          "title": "The type of template so the correct templating engine can be used"
        },
        "hydrationOptions": {
          "$ref": "#/definitions/v1HydrationOptions",
          "title": "Options to hydrate parameters provided on render to inflated structures"
        },
        "substitutionParameterOptions": {
          "$ref": "#/definitions/v1SubstitutionParameterOptions",
          "description": "Options to hydrate user friendly parameters provided on render to previously defined replacement tags. This is a less powerful, but more user friendly way for\ndynamic content replacement."
        },
        "locale": {
          "type": "string",
          "description": "(Optional) An IETF Language Tag composed of a two-letter ISO 639-1 language code joined with a two-letter ISO 3166-1 alpha-2 country code."
        },
        "renderFakeData": {
          "type": "boolean",
          "title": "(Optional) True if fake data should be rendered when real data cannot be"
        },
        "disableAutoEscape": {
          "type": "boolean",
          "title": "(Optional) True if automatic character escaping should be disabled"
        },
        "preserveUnhydratedPlaceholders": {
          "type": "boolean",
          "title": "(Optional) True if non hydrated fields are wished to be displayed"
        }
      }
    },
    "v1RenderMultiResponse": {
      "type": "object",
      "properties": {
        "renders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RenderMultiResponseRenderOrError"
          },
          "description": "a list of the rendered templates, or an error if a template could not be rendered.\nThe order of the list is the same as the order in the request."
        }
      }
    },
    "v1RenderResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "v1SalesActivitiesHydrationOption": {
      "type": "object",
      "properties": {
        "salesActivityKeys": {
          "type": "string",
          "title": "The name of the parameter that will contain the sales activity keys"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the list of sales activities"
        }
      }
    },
    "v1SubstitutionParameter": {
      "type": "object",
      "properties": {
        "replacementTag": {
          "type": "string",
          "title": "the tag that will be looked for in the template content to replace"
        },
        "requiredOptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "isDeprecated": {
          "type": "boolean"
        }
      }
    },
    "v1SubstitutionParameterError": {
      "type": "object",
      "properties": {
        "replacementTag": {
          "type": "string",
          "title": "the tag that will be looked for in the template content to replace"
        },
        "reason": {
          "type": "string",
          "title": "the reason this tag caused an error when verifying the substitution parameters"
        }
      }
    },
    "v1SubstitutionParameterOptions": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "title": "SubstitutionParameterOptions signals the template renderer to scan the template content for specific replacement tags.\nIf those tags are found (and the relevant parameters are supplied) the values will be provided in the data dictionary while rendering the template.\nSee GetAllSubstitutionParameters for the full list of replacement tags when turning on these options"
    },
    "v1TasksHydrationOption": {
      "type": "object",
      "properties": {
        "taskKeys": {
          "type": "string",
          "title": "The name of the parameter that will contain the task keys"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the tasks"
        }
      }
    },
    "v1Template": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the template_id of an existing template stored in the templates microservice"
        },
        "inline": {
          "$ref": "#/definitions/TemplateInlineTemplate",
          "title": "an template whose content is defined in-line with this request"
        }
      }
    },
    "v1TemplateIdentifier": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1UsersHydrationOption": {
      "type": "object",
      "properties": {
        "userIds": {
          "type": "string",
          "title": "The name of the parameter that will contain the user ids"
        },
        "inflatedPropertyName": {
          "type": "string",
          "title": "The name of the property to inflate with the list of users"
        }
      }
    },
    "v1VerifySubstitutionParametersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubstitutionParameterError"
          }
        }
      }
    },
    "InitiateCampaignHistoryExportRequestOrderBy": {
      "type": "string",
      "enum": [
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_INVALID",
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_ASC",
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_DESC"
      ],
      "default": "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_INVALID"
    },
    "InitiateCampaignHistoryExportRequestSortBy": {
      "type": "string",
      "enum": [
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_SORT_BY_INVALID",
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_SORT_BY_EVENT_DATE"
      ],
      "default": "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_SORT_BY_INVALID"
    },
    "prospectv1Status": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "STATUS_UNREAD_ACTIVITY",
        "STATUS_ACCOUNT_CREATED",
        "STATUS_READY_TO_SELL",
        "STATUS_IN_PROGRESS",
        "STATUS_FOLLOW_UP_NEEDED",
        "STATUS_CLOSED_WON",
        "STATUS_CLOSED_LOST"
      ],
      "default": "STATUS_INVALID"
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "format": "int64",
          "title": "The Account's ID; i.e. CID"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "isManager": {
          "type": "boolean",
          "title": "Is this a manager account (i.e. MCC)?"
        },
        "isTestAccount": {
          "type": "boolean",
          "title": "Is this a test account?"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "timeZone": {
          "type": "string",
          "title": "List of timezones here: https://developers.google.com/adwords/api/docs/appendix/codes-formats#timezone-ids"
        }
      },
      "title": "An Adwords Account description"
    },
    "v1AccountAttributeFilters": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/prospectv1Status"
          }
        },
        "state": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "archivedFilter": {
          "$ref": "#/definitions/v1ArchivedFilter"
        }
      }
    },
    "v1AccountAttributes": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/prospectv1Status"
        },
        "unreadActivity": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "lastSalesActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "facebookPageId": {
          "type": "string"
        },
        "googleMyBusinessPlaceId": {
          "type": "string"
        },
        "isArchived": {
          "type": "boolean"
        }
      },
      "title": "Attributes are unaffected by the date range for the request, and returns the most recent value"
    },
    "v1AccountFilters": {
      "type": "object",
      "properties": {
        "marketId": {
          "type": "string",
          "title": "The id of the market to filter by"
        },
        "serviceProvider": {
          "$ref": "#/definitions/v1ServiceProvider",
          "title": "The service provider to filter by"
        },
        "errorCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ErrorCode"
          },
          "title": "The error codes to filter by"
        },
        "syncingStatus": {
          "$ref": "#/definitions/v1SyncingStatus",
          "title": "The syncing status of the account"
        }
      },
      "title": "Options for querying with filters"
    },
    "v1AccountMetrics": {
      "type": "object",
      "properties": {
        "lockHitCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times a locked page due to subscription type was visited"
        },
        "contactSalesCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the contact salesperson button was clicked in vbc"
        },
        "updateBusinessProfileCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times business profile was updated in vbc"
        },
        "viewExecReportCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the executive report was viewed in vbc"
        },
        "createSingleCustomerCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times a single customer was added in vbc"
        },
        "createBulkCustomerCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times a bulk upload of customers was done in vbc"
        },
        "viewStoreCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the store page was visited in vbc"
        },
        "interestInPackageOrProduct": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the add product button was clicked in vbc"
        },
        "numberOfDaysUserWasActive": {
          "type": "string",
          "format": "int64",
          "title": "Number of unique days a user performed an event in vbc"
        }
      },
      "title": "AccountMetrics contains the Heimdall events being captured in business center"
    },
    "v1AccountsCreatedRange": {
      "type": "string",
      "enum": [
        "ACCOUNTS_CREATED_RANGE_UNKNOWN",
        "ACCOUNTS_CREATED_RANGE_1",
        "ACCOUNTS_CREATED_RANGE_1_2",
        "ACCOUNTS_CREATED_RANGE_3_49",
        "ACCOUNTS_CREATED_RANGE_50_99",
        "ACCOUNTS_CREATED_RANGE_100_249",
        "ACCOUNTS_CREATED_RANGE_250_499",
        "ACCOUNTS_CREATED_RANGE_500PLUS"
      ],
      "default": "ACCOUNTS_CREATED_RANGE_UNKNOWN"
    },
    "v1Affiliate": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string",
          "title": "the partner ID of the Affiliate"
        },
        "name": {
          "type": "string",
          "title": "name of the person who will be the affiliate"
        },
        "email": {
          "type": "string",
          "title": "email for contact with the affiliate"
        },
        "paypalEmail": {
          "type": "string",
          "title": "paypal email used to pay the affiliate"
        },
        "jobTitle": {
          "type": "string",
          "title": "jobtitle of the affiliate"
        },
        "websiteUrl": {
          "type": "string",
          "title": "website for the affiliate"
        },
        "howWillYouPromoteVendasta": {
          "type": "string",
          "title": "Quick description on how the affiliate will help to promote vendasta"
        },
        "status": {
          "$ref": "#/definitions/v1StatusType",
          "title": "Status of the affiliate request (pending, approved or rejected)"
        },
        "userHasSigningAuthority": {
          "type": "boolean",
          "title": "represents that the person applying to be a affiliate has the power to sign in behalf of the partner"
        },
        "acceptedTermsOfServiceVersion": {
          "type": "integer",
          "format": "int32",
          "title": "Deprecated: the terms of service will be automatically fetched from whatever the current terms of service is\nrepresents that they agreed with the term of service (the version is based on the date time of the apply)"
        },
        "acceptedTermsOfService": {
          "type": "boolean",
          "title": "represents that they agreed with the term of service. The Affiliate will be automatically associated with the most current version of the Terms of Service"
        }
      }
    },
    "v1AffiliatePaymentAmounts": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "freeMonthlyUsdCents": {
          "type": "integer",
          "format": "int32",
          "title": "Represents the payment amount that the affiliate will receive when a prospect sign with their affiliate id"
        },
        "freeYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "startupMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "startupYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "essentialsMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "essentialsYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "growthMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "growthYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "scaleMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "scaleYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1AffiliatePaymentReportLineItem": {
      "type": "object",
      "properties": {
        "subscriptionTier": {
          "type": "string"
        },
        "subscriptionStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentAmount": {
          "$ref": "#/definitions/v1Money"
        },
        "firstPayByDate": {
          "type": "string",
          "format": "date-time"
        },
        "secondPayByDate": {
          "type": "string",
          "format": "date-time"
        },
        "subscriptionContractLength": {
          "type": "string"
        }
      }
    },
    "v1AnalyticsPresetView": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        },
        "viewName": {
          "type": "string"
        },
        "viewDescription": {
          "type": "string"
        },
        "attributeFiltersJson": {
          "type": "string"
        },
        "sortingJson": {
          "type": "string"
        }
      }
    },
    "v1ArchivedFilter": {
      "type": "string",
      "enum": [
        "ARCHIVED_FILTER_NOT_ARCHIVED",
        "ARCHIVED_FILTER_IS_ARCHIVED",
        "ARCHIVED_FILTER_ANY"
      ],
      "default": "ARCHIVED_FILTER_NOT_ARCHIVED"
    },
    "v1AttributeFilters": {
      "type": "object",
      "properties": {
        "qualifications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple qualification are treated as \"OR\""
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple goals are treated as \"OR\""
        },
        "countryCode": {
          "type": "string"
        },
        "emailType": {
          "$ref": "#/definitions/v1EmailType"
        },
        "hasWebsite": {
          "$ref": "#/definitions/v1WebsiteFilter"
        },
        "isSelfSignup": {
          "type": "boolean"
        },
        "tagFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple tag filters are treated as \"OR\""
        },
        "isAmountOwing": {
          "$ref": "#/definitions/v1BooleanFilter"
        },
        "subscriptionTier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubscriptionTier"
          },
          "description": "Deprecated: Multiple subscription tier filters are treated as \"OR\". Use subscription_tier_id."
        },
        "subscriptionChanged": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubscriptionChangeFilter"
          }
        },
        "conversionPoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "leadSources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ContractStatus"
          }
        },
        "isReengagingAccount": {
          "type": "boolean"
        },
        "anySnapshotsGenerated": {
          "type": "boolean"
        },
        "anyPaidProductsActivated": {
          "type": "boolean"
        },
        "anyAccountsCreated": {
          "type": "boolean"
        },
        "anyPaymentCard": {
          "type": "boolean"
        },
        "marketingClassifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "leadProgramDescriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emptyMarketingClassification": {
          "type": "boolean"
        },
        "subscriptionTierId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Multiple subscription tier id filters are treated as \"OR\"."
        },
        "numberOfEmployees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Multiple choices like \"1-2\", \"3-49\" are treated like \"OR\"."
        },
        "leadTier": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "companySizeCohort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "utmInfo": {
          "$ref": "#/definitions/v1UtmFilters"
        },
        "adName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "segment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainVertical": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerServiceLevel": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inboundOutbound": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isMultiLocation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfDigitalSalespeople": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfSalespeople": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archivedFilter": {
          "$ref": "#/definitions/v1ArchivedFilter"
        },
        "billedClients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1BilledClientsRange"
          }
        },
        "accountsCreated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccountsCreatedRange"
          }
        },
        "paidProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaidProductsRange"
          }
        },
        "hasPid": {
          "type": "boolean",
          "title": "Deprecated: Replaced by has_pid_filter"
        },
        "hasPidFilter": {
          "$ref": "#/definitions/v1HasPidFilter"
        }
      }
    },
    "v1Attributes": {
      "type": "object",
      "properties": {
        "numberOfEmployees": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "emailType": {
          "$ref": "#/definitions/v1EmailType"
        },
        "qualification": {
          "type": "string"
        },
        "goal": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "lastVisit": {
          "type": "string",
          "format": "date-time"
        },
        "lastSalesActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentInfo": {
          "$ref": "#/definitions/v1PaymentInfo"
        },
        "subscriptionTier": {
          "$ref": "#/definitions/v1SubscriptionTier",
          "title": "Deprecated: Use subscription_tier_id"
        },
        "contractSignedDate": {
          "type": "string",
          "format": "date-time"
        },
        "previousSubscriptionTier": {
          "$ref": "#/definitions/v1SubscriptionTier",
          "title": "Deprecated: Use previous_subscription_tier_id"
        },
        "dunningAttempts": {
          "type": "string",
          "format": "int64"
        },
        "conversionPoint": {
          "type": "string"
        },
        "leadSource": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "contractStatus": {
          "$ref": "#/definitions/v1ContractStatus"
        },
        "hasPaymentCard": {
          "type": "boolean"
        },
        "marketingClassification": {
          "type": "string"
        },
        "leadProgramDescription": {
          "type": "string"
        },
        "subscriptionTierId": {
          "type": "string"
        },
        "previousSubscriptionTierId": {
          "type": "string"
        },
        "lastMonthRecognizedRevenue": {
          "$ref": "#/definitions/v1Money"
        },
        "isArchived": {
          "type": "boolean"
        }
      },
      "title": "Attributes are unaffected by the date range for the request, and returns the most recent value"
    },
    "v1BilledClientsRange": {
      "type": "string",
      "enum": [
        "BILLED_CLIENTS_RANGE_UNKNOWN",
        "BILLED_CLIENTS_RANGE_0",
        "BILLED_CLIENTS_RANGE_1_4",
        "BILLED_CLIENTS_RANGE_5_19",
        "BILLED_CLIENTS_RANGE_20_99",
        "BILLED_CLIENTS_RANGE_100_249",
        "BILLED_CLIENTS_RANGE_250_999",
        "BILLED_CLIENTS_RANGE_1000_4999",
        "BILLED_CLIENTS_RANGE_5000PLUS"
      ],
      "default": "BILLED_CLIENTS_RANGE_UNKNOWN"
    },
    "v1BooleanFilter": {
      "type": "string",
      "enum": [
        "BOOLEAN_FILTER_UNSET",
        "BOOLEAN_FILTER_FALSE",
        "BOOLEAN_FILTER_TRUE"
      ],
      "default": "BOOLEAN_FILTER_UNSET"
    },
    "v1Business": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "description": "A unique business identifier.  This is a universally unique ID that is\nused throughout the platform to identify a single business location."
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID that this business has a relationship"
        },
        "marketId": {
          "type": "string",
          "description": "The market ID that the business has a relationship with.  Note that\n\"\" can be a valid market ID."
        },
        "basicData": {
          "$ref": "#/definitions/v1BasicData",
          "description": "Stores the basic data on the account.  This field should never be\nnull."
        },
        "suspended": {
          "type": "boolean",
          "description": "Indicates whether the business has been suspended due to billing\nissues."
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "description": "When the business was deleted.  If the the timestamp is zero, then the\nbusiness has not been deleted."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "When the business was first created.  This field is automatically\nassigned by the system and can not be specified on creation or\nupdate operations."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "When any fields on the business were last modified.  This field i9s\nautomatically assigned by the system and can not be specified on\ncreation or update operations."
        },
        "inferredAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of attributes that have been inferred.  This field uses a\nsyntax equivalent to the FieldMask."
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Product"
          },
          "title": "A list of the products currently provisioned for the business"
        },
        "externalIdentifiers": {
          "$ref": "#/definitions/v1ExternalIdentifiers",
          "description": "External Identifiers on the account.  Because these fields are all\noptional, this field can be null, but any good business will have\na taxonomhy specified, so in practice it should not be null."
        },
        "socialUrls": {
          "$ref": "#/definitions/v1SocialURLs",
          "description": "The list of social URLs associated with the business.  This field\ncan be null."
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/v1HoursOfOperation",
          "description": "The hours of operation of the business.  This field can be null."
        },
        "richData": {
          "$ref": "#/definitions/v1RichData",
          "description": "Extra data about the business.  Much of this data may be specific\nto certain types of business.  This field can be null."
        },
        "administration": {
          "$ref": "#/definitions/v1Administration",
          "description": "Data about the administration of this business. This field can be null."
        }
      },
      "description": "Describes all of the details about a single location of a business.  For\nmulti-location businesses, one Business for each location in the platform\nis required."
    },
    "v1CampaignEventType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_EVENT_TYPE_INVALID",
        "CAMPAIGN_EVENT_TYPE_PROCESSED",
        "CAMPAIGN_EVENT_TYPE_DROPPED",
        "CAMPAIGN_EVENT_TYPE_DELIVERED",
        "CAMPAIGN_EVENT_TYPE_DEFERRED",
        "CAMPAIGN_EVENT_TYPE_BOUNCE",
        "CAMPAIGN_EVENT_TYPE_OPEN",
        "CAMPAIGN_EVENT_TYPE_CLICK",
        "CAMPAIGN_EVENT_TYPE_SPAM_REPORT",
        "CAMPAIGN_EVENT_TYPE_UNSUBSCRIBE",
        "CAMPAIGN_EVENT_TYPE_CREATED",
        "CAMPAIGN_EVENT_TYPE_NOT_REQUIRED",
        "CAMPAIGN_EVENT_TYPE_REFRESHED"
      ],
      "default": "CAMPAIGN_EVENT_TYPE_INVALID"
    },
    "v1CheckDisposableEmailResponse": {
      "type": "object",
      "properties": {
        "isDisposable": {
          "type": "boolean",
          "title": "answer if a domain belonging to an email is disposable"
        }
      },
      "title": "CheckDisposableEmailResponse check if a email if disposable"
    },
    "v1ContractStatus": {
      "type": "string",
      "enum": [
        "CONTRACT_STATUS_UNKNOWN",
        "CONTRACT_STATUS_ACTIVE",
        "CONTRACT_STATUS_CANCELLED",
        "CONTRACT_STATUS_DRAFT",
        "CONTRACT_STATUS_HOLD",
        "CONTRACT_STATUS_SUSPENDED"
      ],
      "default": "CONTRACT_STATUS_UNKNOWN"
    },
    "v1CreateAccountGroupFromLeadResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1CreateAffiliateResponse": {
      "type": "object"
    },
    "v1CreatePartnerAccountResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The ID of the account group (prospect) created"
        }
      },
      "title": "the response to creating a partner account"
    },
    "v1CreateTermsOfServiceResponse": {
      "type": "object"
    },
    "v1CreateTrackerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CriteriaMatchType": {
      "type": "string",
      "enum": [
        "CRITERIA_MATCH_TYPE_ALL",
        "CRITERIA_MATCH_TYPE_ANY"
      ],
      "default": "CRITERIA_MATCH_TYPE_ALL",
      "description": " - CRITERIA_MATCH_TYPE_ALL: Accounts matching all of the criteria will match this rule.\n - CRITERIA_MATCH_TYPE_ANY: Accounts matching any of the criteria will match this rule."
    },
    "v1CustomField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the custom field should be meaningful to users"
        },
        "value": {
          "type": "string",
          "title": "The value of the custom field for a particular business"
        }
      },
      "title": "CustomField allows partners to extend the metrics stored on a business to\nsuit their own use cases"
    },
    "v1DuplicateAccount": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1DuplicateCriteria": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the partner which the dupe criteria will apply to"
        },
        "useEmail": {
          "type": "boolean",
          "title": "whether to include the email field in the dupe check"
        },
        "usePhoneNumber": {
          "type": "boolean",
          "title": "whether to include the phonenumber field in the dupe check"
        },
        "criteriaMatchType": {
          "$ref": "#/definitions/v1CriteriaMatchType",
          "title": "how to combine the different field checks"
        }
      },
      "title": "the set of data a partner can choose to look for when checking for dupes"
    },
    "v1EarlyWin": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "v1EmailType": {
      "type": "string",
      "enum": [
        "EMAIL_TYPE_INVALID",
        "EMAIL_TYPE_UNKNOWN",
        "EMAIL_TYPE_GENERIC_PROVIDER",
        "EMAIL_TYPE_BRANDED_TO_THEIR_DOMAIN"
      ],
      "default": "EMAIL_TYPE_INVALID"
    },
    "v1FindDuplicateAccountsResponse": {
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "account ids of the accounts that match the search criteria given"
        },
        "hasDuplicateInDifferentMarket": {
          "type": "boolean",
          "title": "a boolean which tells the caller if there are duplicates present in markets different than the given market, which the caller does not have permission to see"
        },
        "duplicateAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DuplicateAccount"
          },
          "title": "duplicate_accounts represent info about accountgroups that are considered as duplicates by the duplicate criteria"
        }
      }
    },
    "v1FindDuplicatePartnerProspectsResponse": {
      "type": "object",
      "properties": {
        "prospectBusinessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetAffiliatePaymentAmountsResponse": {
      "type": "object",
      "properties": {
        "affiliatePaymentAmmounts": {
          "$ref": "#/definitions/v1AffiliatePaymentAmounts"
        }
      }
    },
    "v1GetAffiliatePaymentReportResponse": {
      "type": "object",
      "properties": {
        "paymentReport": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AffiliatePaymentReportLineItem"
          }
        }
      }
    },
    "v1GetAffiliateResponse": {
      "type": "object",
      "properties": {
        "affiliate": {
          "$ref": "#/definitions/v1Affiliate"
        }
      }
    },
    "v1GetAutomationResponse": {
      "type": "object",
      "properties": {
        "automation": {
          "$ref": "#/definitions/v1Automation"
        }
      }
    },
    "v1GetDuplicateCriteriaResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1DuplicateCriteria",
          "title": "the dupe detection configuration found for the given partner"
        }
      }
    },
    "v1GetEarlyWinForProspectResponse": {
      "type": "object",
      "properties": {
        "earlyWin": {
          "$ref": "#/definitions/v1EarlyWin"
        }
      }
    },
    "v1GetGoalForProspectResponse": {
      "type": "object",
      "properties": {
        "goalId": {
          "type": "string",
          "title": "Deprecated: use description instead"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1GetLeadQualificationSettingsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "leadQualificationSettings": {
          "$ref": "#/definitions/v1LeadQualificationSettings"
        }
      },
      "title": "the lead qualification settings that are saved for a specific market, if no market settings defined, then fall back to partner's"
    },
    "v1GetLeadResponse": {
      "type": "object",
      "properties": {
        "lead": {
          "$ref": "#/definitions/v1Lead",
          "title": "the lead matching the requested ID"
        }
      }
    },
    "v1GetPriorityResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "v1GetTermsOfServiceResponse": {
      "type": "object",
      "properties": {
        "termsOfService": {
          "$ref": "#/definitions/v1TermsOfService"
        }
      }
    },
    "v1GetUTMAttributesResponse": {
      "type": "object",
      "properties": {
        "utmAttributes": {
          "$ref": "#/definitions/v1UTMAttributes"
        }
      }
    },
    "v1HasPidFilter": {
      "type": "string",
      "enum": [
        "HAS_PID_FILTER_UNKNOWN",
        "HAS_PID_FILTER_NO_PID",
        "HAS_PID_FILTER_WITH_PID"
      ],
      "default": "HAS_PID_FILTER_UNKNOWN"
    },
    "v1InitiateCampaignHistoryExportResponse": {
      "type": "object",
      "properties": {
        "exportId": {
          "type": "string",
          "title": "The unique identifier for the file generation that can be used to check its status"
        }
      },
      "title": "Defines the response body from InitiateExport"
    },
    "v1LatestSalesActivityOption": {
      "type": "string",
      "enum": [
        "LATEST_SALES_ACTIVITY_OPTION_ALL_TIME",
        "LATEST_SALES_ACTIVITY_OPTION_WITHIN_THE_LAST_30_DAYS",
        "LATEST_SALES_ACTIVITY_OPTION_OLDER_THAN_30_DAYS"
      ],
      "default": "LATEST_SALES_ACTIVITY_OPTION_ALL_TIME"
    },
    "v1Lead": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the id of the partner to which this lead belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "the id of the market that the lead belongs to"
        },
        "leadId": {
          "type": "string",
          "title": "the unique ID of the lead"
        },
        "person": {
          "$ref": "#/definitions/v1Person"
        },
        "business": {
          "$ref": "#/definitions/v1Business"
        },
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "title": "the time when this lead was generated (provided by fb)"
        },
        "deletedTime": {
          "type": "string",
          "format": "date-time",
          "title": "the time when this lead was deleted"
        },
        "campaignName": {
          "type": "string",
          "title": "the campaign name from which the lead came"
        },
        "adName": {
          "type": "string",
          "title": "the ad name from which the lead came"
        }
      }
    },
    "v1LeadAdsAutomation": {
      "type": "object",
      "properties": {
        "automationStatus": {
          "type": "boolean",
          "description": "will return on/off to know if we will handle the partner facebook webhook leads or not."
        },
        "pageId": {
          "type": "string",
          "description": "the page that contains the ads that will be automated. All ads on this page will have their formfills generate leads."
        }
      },
      "description": "TODO: rename to LeadAdsPageConnectionSettings for consistency",
      "title": "An automation is a configuration that will automatically listen to form fills on a specific facebook page and generate leads for each form fill"
    },
    "v1LeadAdsFormConnectionSettings": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The partner which controls this form."
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource",
          "description": "The external source for the leads."
        },
        "formId": {
          "type": "string",
          "description": "The external ID for the form, for example on Facebook."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to generate leads from this form's fills, or not."
        },
        "destinationMarketId": {
          "type": "string",
          "description": "What market the new leads will be put in."
        }
      }
    },
    "v1LeadQualificationSettings": {
      "type": "object",
      "properties": {
        "createAccountGroup": {
          "type": "boolean",
          "title": "if this option is true then any lead that passes the dupe check will automatically create an account group"
        },
        "logActivityAndReassign": {
          "type": "boolean",
          "title": "if this option is true then any lead that fails the dupe check will automatically log an activity on the \"first/best\" dupe found and will attempt to reassign that account if no salesperson is currently assigned"
        }
      },
      "title": "settings that determine actions for auto processing incoming leads"
    },
    "v1LeadQualificationType": {
      "type": "string",
      "enum": [
        "LEAD_QUALIFICATION_TYPE_UNKNOWN",
        "LEAD_QUALIFICATION_TYPE_QUALIFIED",
        "LEAD_QUALIFICATION_TYPE_UNQUALIFIED"
      ],
      "default": "LEAD_QUALIFICATION_TYPE_UNKNOWN",
      "title": "- LEAD_QUALIFICATION_TYPE_UNKNOWN: reserved for error state\n - LEAD_QUALIFICATION_TYPE_QUALIFIED: leads that have an action taken on them like creating an account from them or associating them to an account\n - LEAD_QUALIFICATION_TYPE_UNQUALIFIED: new leads that have not yet had actions taken on them"
    },
    "v1LeadSource": {
      "type": "string",
      "enum": [
        "LEAD_SOURCE_NOT_SET",
        "LEAD_SOURCE_FACEBOOK"
      ],
      "default": "LEAD_SOURCE_NOT_SET"
    },
    "v1ListAccountAnalyticsResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        }
      }
    },
    "v1ListAccountGroupsAssociatedToLeadResponse": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListAffiliatesResponse": {
      "type": "object",
      "properties": {
        "affiliates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Affiliate"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalResults": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListAnalyticsPresetViewResponse": {
      "type": "object",
      "properties": {
        "analyticsPresetView": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AnalyticsPresetView"
          }
        }
      }
    },
    "v1ListGoalsForPartnerResponse": {
      "type": "object",
      "properties": {
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Goal"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined constants for goals."
    },
    "v1ListLeadAdsFormConnectionSettingsResponse": {
      "type": "object",
      "properties": {
        "formAutomations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeadAdsFormConnectionSettings"
          }
        }
      }
    },
    "v1ListLeadsAssociatedToAccountGroupResponse": {
      "type": "object",
      "properties": {
        "leadIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListLeadsForPartnerResponse": {
      "type": "object",
      "properties": {
        "leads": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Lead"
          },
          "title": "all the fb leads the partner holds"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging options response including if there is more data to return, the cursor for the next page and the total result number"
        }
      }
    },
    "v1ListPartnerLeadAdAutomationsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "automations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeadAdsAutomation"
          }
        }
      },
      "title": "List a partner lead gen ads automations"
    },
    "v1ListPartnerProspectsResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "partnerProspects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerProspect"
          }
        }
      }
    },
    "v1ListPartnersConnectedToPageResponse": {
      "type": "object",
      "properties": {
        "partnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListPrioritiesForPartnerResponse": {
      "type": "object",
      "properties": {
        "priorities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Priority"
          }
        }
      },
      "title": "Deprecated: priorities are user defined now"
    },
    "v1ListPrioritiesForProspectResponse": {
      "type": "object",
      "properties": {
        "priorityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined priorities. Use GetPriorityResponse instead."
    },
    "v1Metrics": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricResult"
          }
        }
      }
    },
    "v1Money": {
      "type": "object",
      "properties": {
        "valueInCents": {
          "type": "string",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1MultiSortingOptions": {
      "type": "object",
      "properties": {
        "sortingOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortingOptions"
          }
        }
      }
    },
    "v1PaidProductsRange": {
      "type": "string",
      "enum": [
        "PAID_PRODUCTS_RANGE_UNKNOWN",
        "PAID_PRODUCTS_RANGE_1_2",
        "PAID_PRODUCTS_RANGE_3",
        "PAID_PRODUCTS_RANGE_4_5",
        "PAID_PRODUCTS_RANGE_6_10",
        "PAID_PRODUCTS_RANGE_11_20",
        "PAID_PRODUCTS_RANGE_21_50",
        "PAID_PRODUCTS_RANGE_51_100",
        "PAID_PRODUCTS_RANGE_100PLUS"
      ],
      "default": "PAID_PRODUCTS_RANGE_UNKNOWN"
    },
    "v1PartnerFacebookLeadAdsConnectionStatusResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "hasGrantedAccessToken": {
          "type": "boolean"
        },
        "isConnected": {
          "type": "boolean"
        },
        "connectedPageId": {
          "type": "string"
        },
        "connectedPageName": {
          "type": "string"
        },
        "tokenIsValid": {
          "type": "boolean"
        }
      },
      "description": "Check if a partner has connected their lead-ads account to our system."
    },
    "v1PartnerProspect": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "businessId": {
          "type": "string",
          "title": "The account group ID of the prospect (which is under the partner VMF)"
        },
        "name": {
          "type": "string",
          "title": "The company name of the prospect"
        },
        "hotness": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/prospectv1Status"
        },
        "unreadActivity": {
          "type": "boolean"
        },
        "assignee": {
          "type": "string",
          "title": "The assigned salesperson of the prospect"
        },
        "metrics": {
          "$ref": "#/definitions/v1Metrics"
        },
        "attributes": {
          "$ref": "#/definitions/v1Attributes"
        }
      }
    },
    "v1PaymentInfo": {
      "type": "object",
      "properties": {
        "lastFailedPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstFailedPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalAmountOwing": {
          "$ref": "#/definitions/v1Money"
        },
        "lastSuccessfulPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstSuccessfulPaymentDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PaymentInfo only is captured for instant billed partners"
    },
    "v1Person": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "the first name of the contact that filled out the form"
        },
        "lastName": {
          "type": "string",
          "title": "the last name of the contact that filled out the form"
        },
        "email": {
          "type": "string",
          "title": "the lead's email address, might be either the contact's or the company's email"
        },
        "phoneNumber": {
          "type": "string",
          "title": "the lead's phone number, might be either the contact's or the company's phone number"
        }
      },
      "title": "represents the person that has indicated an interest in being sold to/ presents an opportunity to sell to. Could be a Contact or a registered user"
    },
    "v1Priority": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Deprecated"
    },
    "v1PutAffiliatePaymentAmountsResponse": {
      "type": "object"
    },
    "v1PutAnalyticsPresetViewResponse": {
      "type": "object"
    },
    "v1SortingOptions": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "direction": {
          "$ref": "#/definitions/v1SortDirection"
        }
      }
    },
    "v1StatusType": {
      "type": "string",
      "enum": [
        "STATUS_TYPE_UNKNOWN",
        "STATUS_TYPE_PENDING",
        "STATUS_TYPE_APPROVED",
        "STATUS_TYPE_REJECTED"
      ],
      "default": "STATUS_TYPE_UNKNOWN"
    },
    "v1SubscriptionChangeFilter": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_CHANGE_FILTER_UNSET",
        "SUBSCRIPTION_CHANGE_FILTER_UPGRADED",
        "SUBSCRIPTION_CHANGE_FILTER_DOWNGRADED"
      ],
      "default": "SUBSCRIPTION_CHANGE_FILTER_UNSET"
    },
    "v1SubscriptionTier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of subscription"
        },
        "partnerModelLevel": {
          "type": "string",
          "description": "Subscription Level used in AA (partner center legacy), formatted like FREE, STARTER, VBP_BASIC, etc..."
        },
        "name": {
          "type": "string",
          "title": "Name of subscription, for use by developers to track common name of subscription, use I18N when displayed to users"
        },
        "pricingPlanId": {
          "type": "string",
          "title": "Pricing plan ID for subscription used in billing"
        },
        "tierVersion": {
          "type": "string",
          "title": "Tier Version is logical grouping to classify sets of subscriptions like the original 4 subscription vs the VBP subscriptions"
        },
        "archived": {
          "type": "boolean",
          "description": "Archived for subscription types that are no longer in use, and should not be allowed for any new or existing partner to be set to."
        },
        "enabledFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of enabled features"
        },
        "allowTrials": {
          "type": "boolean",
          "title": "If subscription allows trials"
        },
        "rank": {
          "type": "string",
          "format": "int64",
          "description": "Rank of tier to identify if tier if you compare two tiers if X > Y then X is an upgrade over Y, and if X < Y then X is a downgrade."
        },
        "usageLimits": {
          "$ref": "#/definitions/v1TierUsageLimits",
          "description": "usage the amount of free instances of a service the tier is allowed before being charged."
        },
        "subscriptionUpdate": {
          "$ref": "#/definitions/v1SubscriptionUpdate",
          "description": "Subscription updated info."
        },
        "allowSelfUpgrade": {
          "type": "boolean",
          "description": "Allow partner to self upgrade to this subscription tier."
        },
        "allowFreeTrials": {
          "type": "boolean",
          "title": "Allow free 14 day trials. Not the same as old allow_trials value"
        }
      }
    },
    "v1TermsOfService": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence to describe what they are agreeing to."
        },
        "termsOfServiceUrl": {
          "type": "string",
          "title": "The url to show. Intended to be a PDF, but as it's just a url to a file it could also be a web page"
        },
        "linkTitle": {
          "type": "string",
          "title": "The text that will be hyper linked to the url"
        },
        "required": {
          "type": "boolean",
          "title": "Whether or not the user must agree to these TOS before submitting the order"
        }
      }
    },
    "v1UpdateAffiliateStatusResponse": {
      "type": "object"
    },
    "v1UpdateAutomationResponse": {
      "type": "object"
    },
    "v1UtmFilters": {
      "type": "object",
      "properties": {
        "campaign": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "term": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1WebsiteFilter": {
      "type": "string",
      "enum": [
        "WEBSITE_FILTER_UNSET",
        "WEBSITE_FILTER_NO_WEBSITE",
        "WEBSITE_FILTER_HAS_WEBSITE"
      ],
      "default": "WEBSITE_FILTER_UNSET"
    },
    "v1AccountData": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryCode": {
          "type": "string"
        }
      }
    },
    "v1AccountStatus": {
      "type": "string",
      "enum": [
        "ACCOUNT_STATUS_INVALID",
        "ACCOUNT_STATUS_TRIAL",
        "ACCOUNT_STATUS_OPEN",
        "ACCOUNT_STATUS_CANCELLED",
        "ACCOUNT_STATUS_PENDING_CANCELLATION",
        "ACCOUNT_STATUS_TRIAL_END"
      ],
      "default": "ACCOUNT_STATUS_INVALID",
      "title": "Possible statuses of a constant contact account"
    },
    "v1Activation": {
      "type": "object",
      "properties": {
        "appKey": {
          "$ref": "#/definitions/v1AppKey"
        },
        "isTrial": {
          "type": "boolean"
        }
      },
      "title": "The information needed to activate an app"
    },
    "v1ActivationMetrics": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "The ID of the item"
        },
        "currentlyActiveCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of instances of the item currently active"
        },
        "activationsInRangeCount": {
          "type": "string",
          "format": "int64",
          "title": "Number times the item was activated in the given range"
        },
        "deactivationsInRangeCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the item was deactivated in the given range"
        },
        "pendingDeactivationsInRangeCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the item had a pending deactivation created in the given range"
        }
      },
      "title": "comments"
    },
    "v1ActivationStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "ACTIVATED",
        "ERRORED",
        "ALREADY_ACTIVATED",
        "IGNORED_ERRORS",
        "CANCELED",
        "DEACTIVATED",
        "UNKNOWN",
        "SCHEDULED",
        "UNSCHEDULED"
      ],
      "default": "PENDING",
      "description": "- PENDING: The product is in the process of being activated\n - ACTIVATED: The product was successfully activated via the order\n - ERRORED: An error occured while activating the product during the activation step\n - ALREADY_ACTIVATED: The product was already active prior to fulfilling the order\n - IGNORED_ERRORS: An error occurred while activating the product during the activation step but then the item was marked as ignored errors\n - CANCELED: The product was requested to be deactivated at a time in the future (awaiting a deactivation date)\n - DEACTIVATED: The product has been deactivated/turned off\n - UNKNOWN: The product activation status is in an unknown status. Otherwise a client will inaccurately assume the default status is Pending.\n - SCHEDULED: The product activation has been scheduled\n - UNSCHEDULED: The product activation has been unscheduled",
      "title": "The different statuses representing any given state that a product can be in during the activation process"
    },
    "v1Alert": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "description": "The ID of the app the Alert is for."
        },
        "activationId": {
          "type": "string",
          "description": "The ID of the activation the Alert is for."
        },
        "alertType": {
          "$ref": "#/definitions/v1AlertType",
          "description": "The alert type of this Alert."
        }
      }
    },
    "v1AlertType": {
      "type": "string",
      "enum": [
        "ALERT_TYPE_INVALID",
        "ALERT_TYPE_CHANGE_SPEND_REQUESTED_ALERT",
        "ALERT_TYPE_PENDING_ACTIVATION_ALERT",
        "ALERT_TYPE_PENDING_DEACTIVATION_ALERT"
      ],
      "default": "ALERT_TYPE_INVALID"
    },
    "v1AppType": {
      "type": "string",
      "enum": [
        "NOT_SPECIFIED",
        "APP",
        "ADDON",
        "CUSTOM_PRODUCT"
      ],
      "default": "NOT_SPECIFIED",
      "title": "AppType refers to the type of app (one of app, addon, custom product)"
    },
    "v1GetMultiActivationMetricsResponse": {
      "type": "object",
      "properties": {
        "activationMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivationMetrics"
          },
          "title": "The activation metrics"
        }
      }
    },
    "v1GetMultiVendorResellerMetricsResponse": {
      "type": "object",
      "properties": {
        "vendorResellerMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorResellerMetrics"
          },
          "title": "The reseller metrics"
        }
      }
    },
    "v1GetPartnerEngagementResponse": {
      "type": "object",
      "properties": {
        "partnerEngagement": {
          "$ref": "#/definitions/v1PartnerEngagement"
        }
      }
    },
    "v1ListPartnerEngagementResponse": {
      "type": "object",
      "properties": {
        "partnerEngagement": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerEngagement"
          }
        }
      }
    },
    "v1ListVendorAccountMetricsFilterOptions": {
      "type": "object",
      "properties": {
        "resellerPartnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of Reseller Partner IDs to filter by.\nThe list specifies an OR filter, so each Reseller returned will match one of these Partner IDs."
        },
        "searchTerm": {
          "type": "string",
          "description": "The search term to apply to the search.\nOnly Accounts with names or Account Group IDs that match this search term will be returned."
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of App IDs to filter by.\nOnly activations with AppType \"app\" that are \"active\" (not deactivated or rejected) will be returned.\nThe list specifies an OR filter, so each App returned will match one of these App IDs."
        },
        "activationStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ActivationStatus"
          },
          "description": "The list of Activation Status's to filter by.\nThe list specifies an OR filter, so each App returned will match one of these Statuses."
        },
        "trimActivationsByFilters": {
          "type": "boolean",
          "description": "[Optional] This flag is used to indicate if only the Activations matching the provided filters\nshould be returned with their Account."
        }
      }
    },
    "v1ListVendorAccountMetricsResponse": {
      "type": "object",
      "properties": {
        "vendorAccountMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorAccountMetrics"
          },
          "description": "The page of VendorAccountMetrics returned."
        },
        "nextCursor": {
          "type": "string",
          "description": "The next cursor from which to continue paging."
        },
        "hasMore": {
          "type": "boolean",
          "description": "True if there is another page that can be fetched. Otherwise, false."
        }
      }
    },
    "v1ListVendorAccountMetricsSortField": {
      "type": "string",
      "enum": [
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_UNSPECIFIED",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_CREATED",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_ACCOUNT_COMPANY_NAME",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_RESELLER_NAME",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_TOTAL_ACTIVE_ACTIVATIONS"
      ],
      "default": "VENDOR_ACCOUNT_METRICS_SORT_FIELD_UNSPECIFIED"
    },
    "v1ListVendorAccountMetricsSortOptions": {
      "type": "object",
      "properties": {
        "sortField": {
          "$ref": "#/definitions/v1ListVendorAccountMetricsSortField",
          "description": "The field by which to sort."
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "description": "The direction by which to sort."
        }
      }
    },
    "v1ListVendorResellerMetricsFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "description": "The search_term to search by Reseller name/PID."
        }
      }
    },
    "v1ListVendorResellerMetricsResponse": {
      "type": "object",
      "properties": {
        "vendorResellerMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorResellerMetrics"
          },
          "description": "The results of the list."
        },
        "nextCursor": {
          "type": "string",
          "description": "The next cursor from which to fetch the next page of results."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A flag indicating whether there is another page of results."
        }
      }
    },
    "v1ListVendorResellerMetricsSortField": {
      "type": "string",
      "enum": [
        "VENDOR_RESELLER_METRICS_SORT_FIELD_UNSPECIFIED",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_RESELLER_NAME",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_TOTAL_ACTIVATIONS",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_TOTAL_ACTIVE_ACCOUNTS",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_RESELLING_SINCE"
      ],
      "default": "VENDOR_RESELLER_METRICS_SORT_FIELD_UNSPECIFIED"
    },
    "v1ListVendorResellerMetricsSortOptions": {
      "type": "object",
      "properties": {
        "sortField": {
          "$ref": "#/definitions/v1ListVendorResellerMetricsSortField",
          "description": "The field by which to sort."
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "description": "The direction by which to sort."
        }
      }
    },
    "v1PartnerEngagement": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner"
        },
        "appId": {
          "type": "string",
          "title": "The id of the app"
        },
        "partnerName": {
          "type": "string",
          "title": "The name of the partner"
        },
        "enabledOn": {
          "type": "string",
          "format": "date-time",
          "title": "The date a partner enabled the vendor app"
        },
        "selling": {
          "type": "boolean",
          "title": "True if a partner has the vendor app in at least one published package"
        },
        "totalStoreViews": {
          "type": "string",
          "format": "int64",
          "title": "The amount of times a product has been viewed in business center and marketplace public store,"
        },
        "totalStoreCallToActionEvents": {
          "type": "string",
          "format": "int64",
          "title": "The number of times a user has clicked the call to action in business center and the marketplace public store"
        },
        "totalActivations": {
          "type": "string",
          "format": "int64",
          "title": "The total number of times a vendor app has been activated"
        },
        "totalDeactivations": {
          "type": "string",
          "format": "int64",
          "title": "The total number of times a vendor app has been deactivated"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the engagement entry was created"
        },
        "salesContactEmail": {
          "type": "string",
          "title": "The account executive email for a given date"
        },
        "totalPartnerViews": {
          "type": "string",
          "format": "int64",
          "title": "The total number of times a partner viewed an app"
        }
      }
    },
    "v1ResellerServiceTier": {
      "type": "string",
      "enum": [
        "RESELLER_SERVICE_TIER_INVALID",
        "RESELLER_SERVICE_TIER_PRE_SALES",
        "RESELLER_SERVICE_TIER_CHURNED_PARTNER",
        "RESELLER_SERVICE_TIER_SILVER",
        "RESELLER_SERVICE_TIER_GOLD",
        "RESELLER_SERVICE_TIER_PLATINUM",
        "RESELLER_SERVICE_TIER_DIAMOND"
      ],
      "default": "RESELLER_SERVICE_TIER_INVALID",
      "description": "Deprecated: This enum is no longer supported."
    },
    "v1ResellingProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product."
        }
      },
      "description": "A representation of a product being resold."
    },
    "v1Salesperson": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      },
      "title": "A User is the information about a user"
    },
    "v1VendorAccountMetrics": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "businessId": {
          "type": "string",
          "description": "The ID of the business Account."
        },
        "accountData": {
          "$ref": "#/definitions/v1AccountData",
          "description": "The business' NAP data."
        },
        "resellerPartnerId": {
          "type": "string",
          "description": "The Partner ID of the Reseller."
        },
        "resellerName": {
          "type": "string",
          "description": "The name of the Reseller."
        },
        "activations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activation"
          },
          "description": "The activations of this Account."
        },
        "totalActiveActivations": {
          "type": "string",
          "format": "int64",
          "description": "The number of active activations for this Account."
        },
        "accountStatus": {
          "$ref": "#/definitions/v1AccountStatus",
          "description": "The account status of this Account."
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Alert"
          },
          "description": "The relevant alerts for this Account."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this Account was created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this Account was updated."
        }
      }
    },
    "v1VendorResellerMetrics": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "resellerPartnerId": {
          "type": "string",
          "description": "The Partner ID of the Reseller."
        },
        "resellerName": {
          "type": "string",
          "description": "The name of the Reseller."
        },
        "resellingProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResellingProduct"
          },
          "description": "The Vendor's products the Reseller is reselling."
        },
        "resellingSince": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the Reseller first started reselling the Vendor's products."
        },
        "totalActivations": {
          "type": "string",
          "format": "int64",
          "description": "The total number of activations the Reseller has for the Vendor."
        },
        "totalActiveAccounts": {
          "type": "string",
          "format": "int64",
          "description": "The total number of active accounts the Reseller has for the Vendor."
        },
        "salespersonAssignedToReseller": {
          "$ref": "#/definitions/v1Salesperson",
          "title": "The salesperson assigned to the Reseller"
        },
        "resellerServiceTier": {
          "$ref": "#/definitions/v1ResellerServiceTier",
          "description": "Deprecated: This property is no longer supported.\nThe Reseller's service tier, determine by the sales team of their assigned salesperson."
        }
      },
      "description": "A representation of the metrics for a Vendor-Reseller relationship."
    },
    "AddContactToCampaignRequestSender": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        }
      }
    },
    "AutoAssignCriteriaAccountOriginCriteria": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        }
      },
      "title": "Matches accounts based on the \"origin\" to check if they were created from the self sign up in public store"
    },
    "AutoAssignCriteriaCategoryCriteria": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Matches accounts based on the business categories (also known as the business taxonomy)."
    },
    "AutoAssignCriteriaConversionPointCriteria": {
      "type": "object",
      "properties": {
        "conversionPoint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Matches accounts based on the conversion_point custom field applied. (VMF Only as of Sep 2019)"
    },
    "AutoAssignCriteriaLocationCriteria": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      },
      "description": "Matches accounts based on their geographical location."
    },
    "AutoAssignCriteriaTagCriteria": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchType": {
          "$ref": "#/definitions/v1TagMatchType"
        }
      },
      "description": "Matches accounts based on the generic tags applied."
    },
    "BusinessListResponseSalestoolBusiness": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "contactFirstName": {
          "type": "string"
        },
        "contactLastName": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetMultiSalesActivityResponseSalesActivityContainer": {
      "type": "object",
      "properties": {
        "salesActivity": {
          "$ref": "#/definitions/v1SalesActivity"
        }
      }
    },
    "GetTeamsBySalespersonsResponseTeamsForSalesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "salesTeams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesTeam"
          }
        }
      }
    },
    "ListContactsForPhoneNumberRequestListOptions": {
      "type": "object",
      "properties": {
        "includeDeleted": {
          "type": "boolean",
          "title": "Will return deleted contacts; default is false"
        },
        "phoneNumberFormat": {
          "type": "string",
          "title": "Option to provide a hint on how to treat phone number\nPossible options are either unset or \"e164\""
        }
      },
      "title": "Options for listing contcats given a phone number"
    },
    "ListSalesTeamsRequestListSalesTeamsFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "ListSalespersonsRequestListSalespersonsFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "onlySalesManagers": {
          "type": "boolean"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "salesv1AddContactToCampaignRequestRecipient": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "salesv1Business": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "hotness": {
          "type": "string",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        },
        "lastSalesActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastCustomerActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "salesStatus": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "salesPersonAction": {
          "type": "string"
        },
        "latestSnapshotExpiry": {
          "type": "string",
          "format": "date-time"
        },
        "snapshotOrCampaignEmailStatus": {
          "type": "boolean"
        },
        "activityType": {
          "type": "string"
        },
        "lastConnectedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lifecycleStage": {
          "type": "string"
        }
      }
    },
    "salesv1Contact": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneExtension": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "vbcUserId": {
          "type": "string"
        },
        "deleted": {
          "type": "string"
        },
        "deletedDate": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead\n Salestool contact - The new contact object is available in the v2 APIs"
    },
    "salesv1GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1SalesCampaign"
          }
        }
      }
    },
    "salesv1LookupCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1SalesCampaign"
          }
        }
      }
    },
    "salesv1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "To provide options for the paged request"
    },
    "salesv1SalesCampaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "campaignStatus": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1ScheduleStep"
          }
        }
      }
    },
    "salesv1Salesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "title": "Refers to the iam user.User"
        },
        "countryCode": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "photoUrlHttps": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "jobTitle": {
          "type": "string"
        },
        "isSalesManager": {
          "type": "boolean"
        },
        "meetingBookingUrl": {
          "type": "string"
        }
      },
      "title": "Deprecated: Define your salesperson RPCs in v2 and use the v2 salesperson"
    },
    "salesv1ScheduleStep": {
      "type": "object",
      "properties": {
        "stepType": {
          "type": "string"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "salesv2beta1AddContactToCampaignRequestRecipient": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "salesv2beta1Business": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "salesv2beta1Contact": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneExtension": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "phoneNumberCountry": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "salesv2beta1GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1SalesCampaign"
          }
        }
      }
    },
    "salesv2beta1LookupCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1SalesCampaign"
          }
        }
      }
    },
    "salesv2beta1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the requested page"
        }
      },
      "title": "paging using cursors"
    },
    "salesv2beta1SalesCampaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "campaignStatus": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1ScheduleStep"
          }
        }
      }
    },
    "salesv2beta1Salesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unifiedUserId": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "photoUrlHttps": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "salesv2beta1ScheduleStep": {
      "type": "object",
      "properties": {
        "stepType": {
          "type": "string"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1ActionCategory": {
      "type": "string",
      "enum": [
        "ACTION_CATEGORY_UNKNOWN",
        "ACTION_CATEGORY_CLICK",
        "ACTION_CATEGORY_VIEW",
        "ACTION_CATEGORY_LINGER",
        "ACTION_CATEGORY_TYPED",
        "ACTION_CATEGORY_PURCHASED",
        "ACTION_CATEGORY_ADDED_TO_CART"
      ],
      "default": "ACTION_CATEGORY_UNKNOWN"
    },
    "v1Archived": {
      "type": "string",
      "enum": [
        "ARCHIVED_ANY",
        "ARCHIVED_YES",
        "ARCHIVED_NO"
      ],
      "default": "ARCHIVED_ANY"
    },
    "v1AutoAssignCriteria": {
      "type": "object",
      "properties": {
        "locationCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaLocationCriteria"
        },
        "categoryCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaCategoryCriteria"
        },
        "tagCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaTagCriteria"
        },
        "conversionPointCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaConversionPointCriteria"
        },
        "accountOriginCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaAccountOriginCriteria"
        }
      }
    },
    "v1AutoAssignRule": {
      "type": "object",
      "properties": {
        "criteria": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignCriteria"
          },
          "description": "The criteria that defines what accounts match this rule.\nMore than one criteria can be defined.\nThe account must match all or any of them to be a match for the rule, depending on the criteria match type."
        },
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The salespeople that are eligible to be assigned accounts that meet the criteria."
        },
        "criteriaMatchType": {
          "$ref": "#/definitions/v1CriteriaMatchType",
          "description": "Controls whether we must match all ot any of the criteria, default behavior is to match all criteria."
        },
        "campaignId": {
          "type": "string",
          "title": "If filled will add to the campaign"
        },
        "appKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignRuleAppKey"
          }
        }
      }
    },
    "v1AutoAssignRuleAppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      }
    },
    "v1BusinessListResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BusinessListResponseSalestoolBusiness"
          }
        }
      }
    },
    "v1BusinessPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1BusinessSearchFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "salesStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "salesAction": {
          "type": "string"
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "archived": {
          "$ref": "#/definitions/v1Archived"
        },
        "accountTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "businessCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onCampaign": {
          "$ref": "#/definitions/v1Campaign"
        },
        "snapshotSent": {
          "$ref": "#/definitions/v1Snapshot"
        },
        "query": {
          "type": "string"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "goal": {
          "type": "string"
        },
        "trainingPriorities": {
          "type": "string"
        },
        "customFieldPartnerId": {
          "type": "string",
          "description": "DEPRECATED. Will no longer function."
        },
        "lifecycleStage": {
          "$ref": "#/definitions/v1LifecycleStage"
        }
      }
    },
    "v1BusinessSearchResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Business"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1BusinessPagedResponseMetadata"
        }
      }
    },
    "v1BusinessSearchSortOptions": {
      "type": "object",
      "properties": {
        "sortKey": {
          "type": "string"
        },
        "sortAscending": {
          "type": "boolean"
        }
      }
    },
    "v1Campaign": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "stepCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ContactCreateResponse": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v1CreateSalesActivityResponse": {
      "type": "object",
      "properties": {
        "salesActivity": {
          "$ref": "#/definitions/v1SalesActivity"
        }
      }
    },
    "v1CreateSalesTaskResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskNamespace": {
          "type": "string"
        }
      }
    },
    "v1ExternalIdentifierGetByInternalIDResponse": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        }
      }
    },
    "v1GetAssignedSalespersonForPartnerResponse": {
      "type": "object",
      "properties": {
        "salesperson": {
          "$ref": "#/definitions/salesv1Salesperson"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1GetAutoAssignConfigResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The unique partner ID."
        },
        "marketId": {
          "type": "string",
          "description": "The unique market ID."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignRule"
          },
          "description": "The rules the define which accounts get assigned to which salespeople."
        }
      }
    },
    "v1GetConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1Config",
          "title": "Config is the order configuration options set by the partner"
        }
      },
      "title": "Response of the configuration partner/market's order configuration"
    },
    "v1GetContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v1GetMembersResponse": {
      "type": "object",
      "properties": {
        "salesPeople": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          }
        }
      }
    },
    "v1GetMultiSalesActivityResponse": {
      "type": "object",
      "properties": {
        "salesActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiSalesActivityResponseSalesActivityContainer"
          }
        }
      }
    },
    "v1GetMultiSalesTeamResponse": {
      "type": "object",
      "properties": {
        "salesTeams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesTeam"
          }
        }
      }
    },
    "v1GetMultiSalespersonResponse": {
      "type": "object",
      "properties": {
        "salespersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          },
          "title": "salespersons are the list of sales person information"
        }
      }
    },
    "v1GetTeamsBySalespersonsResponse": {
      "type": "object",
      "properties": {
        "teamMapping": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetTeamsBySalespersonsResponseTeamsForSalesperson"
          },
          "title": "The sales teams that the provided members belong to"
        }
      }
    },
    "v1GetZoomMeetingInfoResponse": {
      "type": "object",
      "properties": {
        "zoomMeeting": {
          "$ref": "#/definitions/v1ZoomMeeting"
        }
      }
    },
    "v1LifecycleStage": {
      "type": "string",
      "enum": [
        "LIFECYCLE_STAGE_UNSET",
        "LIFECYCLE_STAGE_LEAD",
        "LIFECYCLE_STAGE_PROSPECT",
        "LIFECYCLE_STAGE_CUSTOMER"
      ],
      "default": "LIFECYCLE_STAGE_UNSET",
      "description": "Where an account is at in the lifecycle stage\nThe sales domain has the same concept of a lifecycle stage. Updating this enum\nmost likely means you need to update the one in sales as well."
    },
    "v1ListSalesTeamsResponse": {
      "type": "object",
      "properties": {
        "salesTeams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesTeam"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListSalespersonsResponse": {
      "type": "object",
      "properties": {
        "salespersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1LookupSalespersonsResponse": {
      "type": "object",
      "properties": {
        "salespersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "cursor": {
          "type": "string"
        }
      }
    },
    "v1PartnerSalesDomainResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        }
      }
    },
    "v1SalesActivity": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v1SalesActivityKey"
        },
        "opportunityId": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "salesStatus": {
          "type": "string"
        },
        "previousSalesStatus": {
          "type": "string"
        },
        "salespersonAction": {
          "type": "string"
        },
        "customActionName": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productPrice": {
          "type": "number",
          "format": "double"
        },
        "connected": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "closedLostReason": {
          "type": "string"
        },
        "audioKey": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "lastEdited": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "opportunityName": {
          "type": "string"
        },
        "salesPersonName": {
          "type": "string"
        }
      }
    },
    "v1SalesActivityKey": {
      "type": "object",
      "properties": {
        "salesActivityId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1SalesTeam": {
      "type": "object",
      "properties": {
        "salesTeamIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SearchTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Ticket"
          },
          "title": "The tickets of the organization"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The list of users that were sideloaded from zendesk"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "Count of tickets associated to the organization"
        }
      }
    },
    "v1Snapshot": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "The unique id of this snapshot"
        },
        "businessId": {
          "type": "string",
          "title": "The id of the buisness this report was generated for"
        },
        "config": {
          "$ref": "#/definitions/v1GlobalConfig",
          "title": "The configuration of this snapshot"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When this snapshot was created"
        },
        "expired": {
          "type": "string",
          "format": "date-time",
          "title": "When this snapshot has expired or will expire"
        },
        "data": {
          "$ref": "#/definitions/v1SnapshotData",
          "title": "Data belonging to the snapshot"
        },
        "salesPerson": {
          "$ref": "#/definitions/v1SalesPerson",
          "title": "The sales person of this snapshot"
        },
        "createdBy": {
          "type": "string",
          "title": "The id of the user that created the report"
        },
        "isPartnerConfig": {
          "type": "boolean",
          "title": "Whether the snapshot is a PARTNER_CONFIG snapshot"
        }
      },
      "title": "Snapshot is the parent entity that represents the snapshot as a whole"
    },
    "v1TagMatchType": {
      "type": "string",
      "enum": [
        "TAG_MATCH_TYPE_ALL",
        "TAG_MATCH_TYPE_ANY"
      ],
      "default": "TAG_MATCH_TYPE_ALL",
      "description": " - TAG_MATCH_TYPE_ALL: Accounts containing all of the tags will match this rule.\n - TAG_MATCH_TYPE_ANY: Accounts containing any of the tags will match this rule."
    },
    "v1Ticket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned upon creation"
        },
        "url": {
          "type": "string",
          "title": "The API url of this ticket"
        },
        "status": {
          "type": "string",
          "title": "The state of the ticket. Possible values: \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\""
        },
        "priority": {
          "type": "string",
          "title": "The urgency with which the ticket should be addressed. Possible values: \"urgent\", \"high\", \"normal\", \"low\""
        },
        "type": {
          "type": "string",
          "title": "The type of this ticket. Possible values: \"problem\", \"incident\", \"question\" or \"task\""
        },
        "subject": {
          "type": "string",
          "title": "The value of the subject field for this ticket"
        },
        "description": {
          "type": "string",
          "title": "The first comment on the ticket"
        },
        "organizationId": {
          "type": "string",
          "format": "int64",
          "description": "The organization of the requester. You can only specify the ID of an organization associated with the requester."
        },
        "requester": {
          "$ref": "#/definitions/v1User",
          "title": "The user who requested this ticket"
        },
        "collaborators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The users currently cc'ed on the ticket"
        },
        "dueAt": {
          "type": "string",
          "format": "date-time",
          "description": "If this is a ticket of type \"task\" it has a due date."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "When this record was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "When this record last got updated"
        },
        "recipient": {
          "type": "string",
          "title": "The original recipient e-mail address of the ticket"
        },
        "followupSourceId": {
          "type": "string",
          "format": "int64",
          "title": "Agents currently following the ticket"
        },
        "assignee": {
          "$ref": "#/definitions/v1User",
          "title": "The agent currently assigned to the ticket"
        },
        "group": {
          "$ref": "#/definitions/v1Group",
          "title": "The group this ticket is assigned to"
        },
        "via": {
          "$ref": "#/definitions/v1Via",
          "title": "This object explains how the ticket was created"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The optional tags that describe the ticket"
        },
        "comment": {
          "$ref": "#/definitions/v1TicketComment",
          "description": "ONLY used for ticket creation."
        }
      }
    },
    "v1TicketPriority": {
      "type": "string",
      "enum": [
        "TICKET_PRIORITY_UNSET",
        "TICKET_PRIORITY_LOW",
        "TICKET_PRIORITY_MEDIUM",
        "TICKET_PRIORITY_HIGH",
        "TICKET_PRIORITY_URGENT"
      ],
      "default": "TICKET_PRIORITY_UNSET"
    },
    "v1UserAction": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The account group that the action is associated with"
        },
        "category": {
          "$ref": "#/definitions/v1ActionCategory",
          "title": "The category that the action is included in"
        },
        "description": {
          "type": "string",
          "title": "The description of the event that occurred"
        }
      }
    },
    "v1UserActionsPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total results found by the operation"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1UserActionsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group that the action is associated with"
        },
        "category": {
          "$ref": "#/definitions/v1ActionCategory",
          "title": "The category that the action is included in"
        },
        "description": {
          "type": "string",
          "title": "The description of the event that occurred"
        }
      }
    },
    "v1UserActionsResponse": {
      "type": "object",
      "properties": {
        "userActions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserAction"
          },
          "title": "A collection of UserActions returned"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1UserActionsPagedResponseMetadata",
          "title": "Contains paging data returned from the query"
        }
      }
    },
    "v1ViewTicketIncludeFields": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "boolean"
        },
        "requester": {
          "type": "boolean"
        },
        "company": {
          "type": "boolean"
        },
        "stats": {
          "type": "boolean"
        }
      }
    },
    "v1ViewTicketResponse": {
      "type": "object",
      "properties": {
        "baseTicket": {
          "$ref": "#/definitions/v1Ticket"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Conversation"
          }
        },
        "priority": {
          "$ref": "#/definitions/v1TicketPriority"
        },
        "description": {
          "type": "string"
        },
        "dueBy": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ZoomMeeting": {
      "type": "object",
      "properties": {
        "meetingId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v2beta1AccountLatestSalesActivity": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "lastActivityDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2beta1ActionList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accounts": {
          "type": "string",
          "format": "int64"
        },
        "inProgress": {
          "type": "boolean"
        }
      }
    },
    "v2beta1AddAccountsToActionListResponse": {
      "type": "object",
      "properties": {
        "actionListId": {
          "type": "string",
          "title": "the ID of the action list that was appended or created"
        }
      }
    },
    "v2beta1CancellationRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "cancellationRequestId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "lineItemId": {
          "type": "string"
        },
        "requestingUserId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2beta1CancellationRequestStatus"
        },
        "reason": {
          "$ref": "#/definitions/v2beta1CancellationRequestReason"
        },
        "message": {
          "type": "string"
        },
        "requestCreatedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2beta1CancellationRequestReason": {
      "type": "string",
      "enum": [
        "CANCELLATION_REQUEST_REASON_UNSET",
        "CANCELLATION_REQUEST_REASON_OTHER"
      ],
      "default": "CANCELLATION_REQUEST_REASON_UNSET"
    },
    "v2beta1CancellationRequestStatus": {
      "type": "string",
      "enum": [
        "CANCELLATION_REQUEST_STATUS_UNSET",
        "CANCELLATION_REQUEST_STATUS_REQUESTED",
        "CANCELLATION_REQUEST_STATUS_RESOLVED",
        "CANCELLATION_REQUEST_STATUS_DECLINED"
      ],
      "default": "CANCELLATION_REQUEST_STATUS_UNSET"
    },
    "v2beta1CreateContactResponse": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/salesv2beta1Contact"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1CreateSalespersonForUserResponse": {
      "type": "object"
    },
    "v2beta1EffortAggregate": {
      "type": "object",
      "properties": {
        "efforts": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "title": "Number of sales efforts mapped to the effort type"
    },
    "v2beta1GetAccountPrimaryContactResponse": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetContactResponse": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/salesv2beta1Contact"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetContactsForAccountsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetMultiOpportunityEffortsResponse": {
      "type": "object",
      "properties": {
        "opportunityEfforts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2beta1EffortAggregate"
          },
          "title": "Effort aggregates mapped to the opportunity"
        }
      }
    },
    "v2beta1GetSalesActivityForAccountsResponse": {
      "type": "object",
      "properties": {
        "accountsLatestSalesActivity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1AccountLatestSalesActivity"
          }
        }
      }
    },
    "v2beta1GetSalespersonByEmailResponse": {
      "type": "object",
      "properties": {
        "salesperson": {
          "$ref": "#/definitions/salesv2beta1Salesperson"
        }
      }
    },
    "v2beta1GetSalespersonByUserIdResponse": {
      "type": "object",
      "properties": {
        "salesperson": {
          "$ref": "#/definitions/salesv2beta1Salesperson"
        }
      }
    },
    "v2beta1IsConfigValidResponse": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        }
      }
    },
    "v2beta1ListActionListsResponse": {
      "type": "object",
      "properties": {
        "actionLists": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1ActionList"
          }
        },
        "nextPage": {
          "type": "string",
          "format": "int64"
        },
        "totalActionListsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v2beta1ListContactsForBusinessResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListResponse": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1CancellationRequest"
          }
        }
      }
    },
    "v2beta1PageIndexedRequestOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the requested page"
        },
        "pageIndex": {
          "type": "string",
          "format": "int64",
          "title": "page_index specifies the page number of the first result to return"
        }
      },
      "title": "paging using page size+page index"
    },
    "v2beta1ResendUserWelcomeEmailResponse": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "string"
        }
      }
    },
    "v2beta1SearchResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Business"
          }
        }
      }
    },
    "v1Author": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1Categories": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1CreateDraftRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "description": "Unique id signifying account group this belongs to."
        },
        "draftText": {
          "type": "string",
          "description": "Raw text of the draft."
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time the draft is set to be posted at."
        },
        "gmbPostCustomization": {
          "$ref": "#/definitions/v1GMBPostCustomization",
          "description": "Customization options for Google My Business drafts."
        },
        "previews": {
          "type": "string",
          "description": "Preview link for shortened URL Links."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Special configurations options for the composer."
        },
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "description": "List of the media attached to the draft."
        },
        "ssids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Social Service ids used in this draft."
        },
        "draftType": {
          "$ref": "#/definitions/v1DraftType",
          "title": "Indicate what is the draft type related to this entity (image, video, text, etc.)"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Any metadata associated with this draft (source, last raised exception, etc)"
        },
        "youtubeCustomization": {
          "$ref": "#/definitions/v1YoutubeCustomization",
          "description": "Youtube customization options for drafts."
        },
        "ssidDraftTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SSIDDraftType"
          },
          "description": "The ssid draft type map."
        },
        "isHidden": {
          "type": "boolean"
        },
        "tiktokCustomization": {
          "$ref": "#/definitions/v1TikTokCustomization"
        },
        "blogPostCustomization": {
          "$ref": "#/definitions/v1BlogPostCustomization",
          "title": "Customization options for BlogPost drafts"
        }
      }
    },
    "v1CreateDraftResponse": {
      "type": "object",
      "properties": {
        "draft": {
          "$ref": "#/definitions/v1Draft",
          "description": "The newly made Draft."
        }
      }
    },
    "v1CreateMultiDraftsResponse": {
      "type": "object",
      "properties": {
        "drafts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Draft"
          }
        }
      }
    },
    "v1Draft": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "description": "Unique id signifying account group this draft belongs to."
        },
        "draftId": {
          "type": "string",
          "description": "Unique id for the draft."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the draft was created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the draft was updated."
        },
        "draftText": {
          "type": "string",
          "description": "Raw text of the draft."
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time the draft is set to be posted at."
        },
        "gmbPostCustomization": {
          "$ref": "#/definitions/v1GMBPostCustomization",
          "description": "Customization options for Google My Business drafts."
        },
        "previews": {
          "type": "string",
          "description": "Preview link for shortened URL Links."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Special configuration options for the composer."
        },
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "description": "A list of media attached to this draft."
        },
        "ssids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Social Service ids used in this draft."
        },
        "draftType": {
          "$ref": "#/definitions/v1DraftType",
          "title": "Indicate what is the draft type related to this entity (image, video, text, etc.)"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Any metadata associated with this draft (source, last raised exception, etc)"
        },
        "youtubeCustomization": {
          "$ref": "#/definitions/v1YoutubeCustomization",
          "description": "Customization options for Youtube drafts."
        },
        "ssidDraftTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SSIDDraftType"
          },
          "title": "SSID Draft Type"
        },
        "isHidden": {
          "type": "boolean",
          "title": "If this draft is hidden"
        },
        "tiktokCustomization": {
          "$ref": "#/definitions/v1TikTokCustomization",
          "description": "Customization options for TikTok drafts."
        },
        "blogPostCustomization": {
          "$ref": "#/definitions/v1BlogPostCustomization",
          "title": "Customization options for BlogPost drafts"
        }
      },
      "description": "All the information used to create a draft."
    },
    "v1DraftType": {
      "type": "string",
      "enum": [
        "DRAFT_TYPE_INVALID",
        "DRAFT_TYPE_IMAGE",
        "DRAFT_TYPE_VIDEO",
        "DRAFT_TYPE_GIF",
        "DRAFT_TYPE_REEL",
        "DRAFT_TYPE_CAROUSEL",
        "DRAFT_TYPE_TEXT",
        "DRAFT_TYPE_STORIES"
      ],
      "default": "DRAFT_TYPE_INVALID"
    },
    "v1GMBPostCustomization": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "eventStart": {
          "type": "string",
          "format": "date-time"
        },
        "eventEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ctaType": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        }
      }
    },
    "v1GetDraftResponse": {
      "type": "object",
      "properties": {
        "draft": {
          "$ref": "#/definitions/v1Draft",
          "title": "The obtained draft"
        }
      }
    },
    "v1ListDraftsResponse": {
      "type": "object",
      "properties": {
        "drafts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Draft"
          },
          "description": "List of obtained drafts."
        },
        "nextCursor": {
          "type": "string",
          "title": "Cursor to more drafts if it is greater then the page size"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Boolean if there are more drafts to get"
        }
      }
    },
    "v1Media": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier of the user who posted this media"
        },
        "instagramUserId": {
          "type": "string",
          "title": "A unique identifier of the instagram user who posted this media"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier of instagram media"
        },
        "instagramMediaId": {
          "type": "string",
          "title": "A unique external identifier for instagram media"
        },
        "name": {
          "type": "string",
          "title": "The real name of the poster"
        },
        "username": {
          "type": "string",
          "title": "External username of the user who posted this media"
        },
        "postText": {
          "type": "string",
          "title": "The text body of the media"
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The indicated post date of the media"
        },
        "imageUrl": {
          "type": "string",
          "title": "The url belonging to this media image\nMulti-image support will be added as a repeated message in future\ninterations"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Internal tags for this media"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Client tags for this media"
        },
        "permalink": {
          "type": "string",
          "title": "A deep link to the media on instagram"
        },
        "error": {
          "type": "string",
          "title": "An error returned from posting"
        },
        "postedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The actual posted date time of a media"
        },
        "profilePictureUrl": {
          "type": "string",
          "title": "The profile picture url of the user who posted this media"
        },
        "hasScheduledTask": {
          "type": "boolean",
          "title": "The flag for if a task has been scheduled for this media"
        },
        "instagramCreationId": {
          "type": "string",
          "title": "The instagram media creation ID returned during media posting"
        },
        "commentsCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of comments on this media"
        },
        "likeCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of liked on this media"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the media was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the media was last updated"
        },
        "videoUrl": {
          "type": "string",
          "title": "The video_url for this media"
        },
        "postedByOwner": {
          "type": "boolean",
          "title": "The flag indicating if this media entity was created from a mention"
        },
        "linkShortcodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The shortcodes for links used in this media"
        },
        "reach": {
          "type": "string",
          "format": "int64",
          "title": "The number of unique users who have seen this post"
        },
        "saves": {
          "type": "string",
          "format": "int64",
          "title": "The number of unique users who have saved this post"
        },
        "videoViews": {
          "type": "string",
          "format": "int64",
          "title": "The number of times the video has been viewed"
        },
        "insightsUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "The last time post insights were updated"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType",
          "title": "The type of post e.g., Image/video/reel/gif etc"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Tracking the time the media was deleted"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Array of media content when uploading multiple media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Metadata about the media, could be anything"
        },
        "multilocationPostId": {
          "type": "string",
          "title": "Multilocation post id for a social post if posted on multilocation context"
        },
        "brandId": {
          "type": "string",
          "title": "Brand id for a social post if posted on multilocation context"
        },
        "campaignId": {
          "type": "string",
          "title": "Campaign ID , Used to manage the campaign posts"
        }
      },
      "title": "A model representing instagram media"
    },
    "v1SSIDDraftType": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string"
        },
        "draftType": {
          "$ref": "#/definitions/v1DraftType"
        }
      }
    },
    "v1UpdateDraftResponse": {
      "type": "object",
      "properties": {
        "draft": {
          "$ref": "#/definitions/v1Draft",
          "description": "The newly updated Draft."
        }
      }
    },
    "v1VisibilityType": {
      "type": "string",
      "enum": [
        "VISIBILITY_TYPE_INVALID",
        "VISIBILITY_TYPE_ALL",
        "VISIBILITY_TYPE_HIDDEN",
        "VISIBILITY_TYPE_VISIBLE"
      ],
      "default": "VISIBILITY_TYPE_INVALID"
    },
    "BookingFailureCause": {
      "type": "string",
      "enum": [
        "CAUSE_UNSPECIFIED",
        "SLOT_UNAVAILABLE",
        "SLOT_ALREADY_BOOKED_BY_USER",
        "LEASE_EXPIRED",
        "OUTSIDE_CANCELLATION_WINDOW",
        "PAYMENT_ERROR_CARD_TYPE_REJECTED",
        "PAYMENT_ERROR_CARD_DECLINED",
        "PAYMENT_OPTION_NOT_VALID",
        "PAYMENT_ERROR",
        "USER_CANNOT_USE_PAYMENT_OPTION",
        "BOOKING_ALREADY_CANCELLED",
        "BOOKING_NOT_CANCELLABLE",
        "OVERLAPPING_RESERVATION",
        "USER_OVER_BOOKING_LIMIT",
        "OFFER_UNAVAILABLE",
        "DEAL_UNAVAILABLE",
        "PAYMENT_REQUIRES_3DS1"
      ],
      "default": "CAUSE_UNSPECIFIED",
      "description": " - CAUSE_UNSPECIFIED: Default value: Don't use; amounts to an \"unknown error\"\n - SLOT_UNAVAILABLE: The referenced availability slot is not available any longer.\n - SLOT_ALREADY_BOOKED_BY_USER: The user has already booked an appointment for the referenced\navailability slot.\n - LEASE_EXPIRED: The lease (if provided) has expired and cannot be used any longer to\ncomplete the requested booking.\n - OUTSIDE_CANCELLATION_WINDOW: The requested cancellation cannot be performed at the current time due\nto time restrictions in the merchant's cancellation policy.\n - PAYMENT_ERROR_CARD_TYPE_REJECTED: An error was encountered while processing the payment because the\nprovided credit card type was not accepted by the merchant. The credit\ncard type must be supplied in rejected_card_type.\n - PAYMENT_ERROR_CARD_DECLINED: An error was encountered while processing the payment because the\nprovided credit card was declined.\n - PAYMENT_OPTION_NOT_VALID: An error was encountered with the pack/membership used to pay for the\nbooking. There could be no valid uses left, it could have expired, etc.\n - PAYMENT_ERROR: An error was encountered while processing the payment for this booking.\nUse this value to indicate a general payment related error, only if the\nerror does not match to a specific payment error above.\n - USER_CANNOT_USE_PAYMENT_OPTION: User cannot use the given payment option (e.g. user trying to use a\nfirst time price for the second time).\n - BOOKING_ALREADY_CANCELLED: A booking that the user tried to cancel has already been cancelled.\n - BOOKING_NOT_CANCELLABLE: A booking that the user tried to cancel is not cancellable.\n - OVERLAPPING_RESERVATION: User has an existing reservation too close to this time.\n - USER_OVER_BOOKING_LIMIT: Booking failed due to the user being over the aggregator's per-user\nbookings limit.\n - OFFER_UNAVAILABLE: Offer (previously \"Deal\") is unavailable for the provided slot. If the\nslot itself is unavailable, use SLOT_UNAVAILABLE instead.\n - PAYMENT_REQUIRES_3DS1: Set when payment is rejected because you are requesting that the\ntransaction be tried again, but this time after undergoing 3DS1\nchallenge/response.  Note that the current transaction's failure state\nwill stay failed.  The retry will be completely separate.\n\nWhen this is the failure reason, payment_failure.3DS1_parameters\nMUST be set.  If it is not, then the current cause will be treated as\nif it were PAYMENT_ERROR."
    },
    "PaymentInformationPaymentProcessedBy": {
      "type": "string",
      "enum": [
        "PAYMENT_PROCESSED_BY_UNSPECIFIED",
        "PROCESSED_BY_GOOGLE",
        "PROCESSED_BY_PARTNER"
      ],
      "default": "PAYMENT_PROCESSED_BY_UNSPECIFIED",
      "description": "Who handles payment processing?\nIf payment is processed by the partner, CreateBooking request will\ninclude additional parameters (PaymentProcessingParameters) indicating\nthe payment method to be used to process the payment."
    },
    "PaymentProcessingParametersPaymentProcessor": {
      "type": "string",
      "enum": [
        "PAYMENT_PROCESSOR_UNSPECIFIED",
        "PROCESSOR_STRIPE",
        "PROCESSOR_BRAINTREE"
      ],
      "default": "PAYMENT_PROCESSOR_UNSPECIFIED"
    },
    "TokenizationConfigAuthMethod": {
      "type": "string",
      "enum": [
        "AUTH_METHOD_UNSPECIFIED",
        "PAN_ONLY",
        "CRYPTOGRAM_3DS"
      ],
      "default": "AUTH_METHOD_UNSPECIFIED",
      "description": "Fields supported to authorize a card transaction.\n\nSee the GPay documentation at\nhttps://developers.google.com/pay/api/web/reference/object#CardParameters\n\n - PAN_ONLY: This authentication method is associated with payment cards stored on\nfile with the user's Google Account. Returned payment data includes\npersonal account number (PAN) with the expiration month and the\nexpiration year.\n - CRYPTOGRAM_3DS: This authentication method is associated with cards stored as Android\ndevice tokens. Returned payment data includes a 3-D Secure (3DS)\ncryptogram generated on the device."
    },
    "TokenizationConfigBillingInformationFormat": {
      "type": "string",
      "enum": [
        "BILLING_INFORMATION_FORMAT_UNSPECIFIED",
        "MIN",
        "FULL"
      ],
      "default": "BILLING_INFORMATION_FORMAT_UNSPECIFIED",
      "description": "How much of the Billing Address to require of the user and include in the\ntoken. The enum values correspond to parameters in the Google Pay API (see\nhttps://developers.google.com/pay/api/web/reference/object\\\n #BillingAddressParameters).\n\n - MIN: name, country code, and postal code (GPay default setting).\n - FULL: name, street address, locality, region, country code, and postal code"
    },
    "TokenizationConfigCardNetworkParameters": {
      "type": "object",
      "properties": {
        "cardNetwork": {
          "$ref": "#/definitions/v3CreditCardRestrictionsCreditCardType",
          "title": "The Card Network that these parameters are about"
        },
        "acquirerBin": {
          "type": "string",
          "description": "The Bank Identification Number of the acquiring bank used for processing\nof the card.\n\nIf this value is not known to you, you should ask your acquirer or\nmerchant processor representative."
        },
        "acquirerMerchantId": {
          "type": "string",
          "description": "The merchant identifier assigned by the acquirer to the merchant for use\nin transaction authorization (for Visa and American Express\ntransactions).\n\nIf this value is not known to you, you should ask the acquirer or\nmerchant processor representative."
        }
      },
      "description": "Per CardNetwork Processing information."
    },
    "partnerv3CreditCardType": {
      "type": "string",
      "enum": [
        "CREDIT_CARD_TYPE_UNSPECIFIED",
        "VISA",
        "MASTERCARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "JCB"
      ],
      "default": "CREDIT_CARD_TYPE_UNSPECIFIED",
      "description": "Used when booking/order failure cause is PAYMENT_ERROR_CARD_TYPE_REJECTED to\nindicate the type of credit card that was rejected.\n\n - CREDIT_CARD_TYPE_UNSPECIFIED: Default value. Used if credit card type does not match to one below."
    },
    "typeDayOfWeek": {
      "type": "string",
      "enum": [
        "DAY_OF_WEEK_UNSPECIFIED",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "default": "DAY_OF_WEEK_UNSPECIFIED",
      "description": "Represents a day of the week.\n\n - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.\n - MONDAY: Monday\n - TUESDAY: Tuesday\n - WEDNESDAY: Wednesday\n - THURSDAY: Thursday\n - FRIDAY: Friday\n - SATURDAY: Saturday\n - SUNDAY: Sunday"
    },
    "typeTimeOfDay": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "minutes": {
          "type": "integer",
          "format": "int32",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        }
      },
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are [google.type.Date][google.type.Date] and\n`google.protobuf.Timestamp`."
    },
    "typeTimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "description": "Represents a time zone from the\n[IANA Time Zone Database](https://www.iana.org/time-zones)."
    },
    "v1Answer": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID"
        },
        "locationId": {
          "type": "string",
          "title": "Google Location ID"
        },
        "questionId": {
          "type": "string",
          "title": "Question ID"
        },
        "version": {
          "type": "string",
          "title": "Version of answer"
        },
        "locationPathName": {
          "type": "string",
          "title": "Google Location Path Name"
        },
        "text": {
          "type": "string",
          "title": "Answer Content"
        },
        "author": {
          "type": "string",
          "title": "Author Name"
        },
        "authorPhotoUrl": {
          "type": "string",
          "title": "Author profile photo url"
        },
        "authorType": {
          "type": "string",
          "title": "Author type"
        },
        "answerId": {
          "type": "string",
          "title": "Answer ID"
        },
        "upVoteCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of up votes"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The datatime when the answer is published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the answer is created in our system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the answer is modified in our system"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the answer is deleted in our system"
        },
        "previousVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Answer"
          },
          "title": "Previous versions of this answer"
        }
      }
    },
    "v1Answers": {
      "type": "object",
      "properties": {
        "formAnswers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Answer"
          },
          "title": "The order of fields specified here is the order they will be displayed in"
        }
      }
    },
    "v1Attendee": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "the first name of the attendee"
        },
        "lastName": {
          "type": "string",
          "title": "the last name of the attendee"
        },
        "email": {
          "type": "string",
          "title": "email of the attendee"
        },
        "phoneNumber": {
          "type": "string",
          "title": "phone number of the attendee"
        },
        "timeZone": {
          "type": "string"
        },
        "isPrimary": {
          "type": "boolean"
        }
      },
      "title": "TODO: For v2 of API, we'd like to merge Contact and Attendee into one message type"
    },
    "v1AvailabilityRule": {
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string"
        },
        "meetingTypeId": {
          "type": "string"
        },
        "day": {
          "$ref": "#/definitions/typeDayOfWeek"
        },
        "timeSlot": {
          "$ref": "#/definitions/v1TimeRange"
        },
        "timeZone": {
          "$ref": "#/definitions/typeTimeZone"
        }
      }
    },
    "v1BookMeetingResponse": {
      "type": "object",
      "properties": {
        "meetingId": {
          "type": "string"
        },
        "hostId": {
          "type": "string"
        }
      }
    },
    "v1BuildHostIdResponse": {
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "The host_id you can use for the rest of the APIs.\nThis is also suitable to use in the booking url (but prefer slugs from the host's preferences)."
        }
      }
    },
    "v1Calendar": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The immutable, generated, globally unique identifier of a calendar\nAttempting to set or mutate this will have no effect, use external_id"
        },
        "displayName": {
          "type": "string",
          "title": "The name of the calendar"
        },
        "displayProfileUrl": {
          "type": "string",
          "title": "Squared image for the calendar to be used as an icon"
        },
        "displayLogoUrl": {
          "type": "string",
          "title": "Larger image to be used as a banner for example"
        },
        "bookingUrl": {
          "type": "string",
          "title": "A valid, public URL to book a time slot on this calendar"
        },
        "slug": {
          "type": "string",
          "title": "A mutable namespaced identifier of this calendar for the purposes of building memorable URLs"
        },
        "externalId": {
          "type": "string",
          "title": "A mutable namespaced identifier of this calendar that has meaning to whoever created it\nThis is effectively the result of BuildHostId at this time"
        },
        "creatorUserId": {
          "type": "string",
          "title": "Who created the calendar"
        },
        "hostUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Who is a possible, but not necessarily available, host of the calendar (at least 1)"
        },
        "applicationContext": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Key-value pairs that provide context to the use of the calendar.\nThere is currently inflexible support for a handful of backend\nintegrations with other Vendasta data models to derive some of\nthe fields of the calendar. These known pairs are:\n  - external_integration: [v_sales_team, v_business]\n  - sales_team_id: G-123\n  - business_id: AG-123\nFor example, if you wanted to contextualize a sales team's calendar you would use:\n  {'external_integration': 'v_sales_team', 'sales_team_id': 'G-123'}\nIf you wanted to contextualize a business calendar you would use:\n  {'external_integration': 'v_business', 'business_id': 'AG-123'}\nIf you wanted to contextualize and individual salesperson you would use:\n  {'user_context': 'sales', 'partner_id': 'ABC', 'market_id': 'DEFAULT'}"
        },
        "calendarType": {
          "$ref": "#/definitions/v1CalendarType"
        },
        "encodedApplicationContext": {
          "type": "string"
        }
      }
    },
    "v1CalendarMigrationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        }
      }
    },
    "v1CalendarType": {
      "type": "string",
      "enum": [
        "CALENDAR_TYPE_INVALID",
        "CALENDAR_TYPE_PERSONAL",
        "CALENDAR_TYPE_GROUP"
      ],
      "default": "CALENDAR_TYPE_INVALID"
    },
    "v1CheckGroupOrServiceSlugExistResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAvailabilityResponse": {
      "type": "object"
    },
    "v1CreateCalendarResponse": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string"
        }
      }
    },
    "v1CreateGroupResponse": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        }
      }
    },
    "v1CreateMeetingTypeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateServiceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateZoomMeetingResponse": {
      "type": "object",
      "properties": {
        "iamUserId": {
          "type": "string"
        },
        "meetingId": {
          "type": "string",
          "format": "int64"
        },
        "topic": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ZoomMeetingType"
        },
        "startTime": {
          "type": "string",
          "description": "Start time in UTC."
        },
        "duration": {
          "type": "string",
          "format": "int64",
          "description": "Duration in minutes."
        },
        "timezone": {
          "type": "string",
          "title": "See: https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones"
        },
        "createdAt": {
          "type": "string"
        },
        "agenda": {
          "type": "string"
        },
        "startUrl": {
          "type": "string"
        },
        "joinUrl": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "h323Password": {
          "type": "string",
          "description": "H.323/SIP room system password."
        },
        "pmi": {
          "type": "string",
          "format": "int64"
        },
        "trackingFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZoomMeetingTrackingField"
          }
        },
        "occurrences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZoomOccurrence"
          }
        },
        "settings": {
          "$ref": "#/definitions/v1ZoomMeetingSettings"
        },
        "recurrence": {
          "$ref": "#/definitions/v1ZoomMeetingRecurrence"
        }
      },
      "description": "The response body for creating a zoom meeting.\nPlease check https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate for more details."
    },
    "v1DoesCalendarExistResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "title": "Whether a calendar with the given identifer exists already"
        }
      }
    },
    "v1EnsureGroupCalendarsExistResponse": {
      "type": "object",
      "properties": {
        "calendarIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The calendar_ids belonging to the calendars with the given external_ids.\nThe order of the returned calendar_ids is guaranteed to match the order the external_ids were given in.\nFor every calendar_id, calendar_ids[i] is the calendar_id for external_ids[i]\nOn subsequent calls this response is guaranteed to be the same."
        }
      }
    },
    "v1EnsurePersonalCalendarExistsResponse": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The calendar_id belonging to the user having the given application_context_properties\nsubsequence with the same user_id and application_context_properties will return the same calendar_id.\nA single property change in application_context_properties will result in a new calendar."
        }
      }
    },
    "v1EventGroupAndServiceAssociations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "title": "group or event"
        },
        "isEditable": {
          "type": "boolean"
        },
        "creatorUserName": {
          "type": "string"
        },
        "calendarId": {
          "type": "string"
        },
        "hexColor": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "bookingUrl": {
          "type": "string"
        }
      }
    },
    "v1Field": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string",
          "title": "Unique identifier of a custom or common field"
        },
        "answer": {
          "type": "string",
          "title": "Response related to the question of the field_id"
        },
        "fieldType": {
          "$ref": "#/definitions/v1FieldType",
          "title": "The type of field"
        },
        "label": {
          "type": "string",
          "title": "The question for the custom or common field"
        },
        "description": {
          "type": "string",
          "title": "The description of the field"
        },
        "prefix": {
          "type": "string",
          "title": "For textbox fields, this string will be displayed in front of the textbox"
        },
        "suffix": {
          "type": "string",
          "title": "For textbox fields, this string will be displayed behind the textbox"
        },
        "regexValidator": {
          "type": "string",
          "title": "A regex string used to validate a fields answer"
        },
        "regexErrorMessage": {
          "type": "string",
          "title": "The error message displayed if the regex_validator does not match the answer"
        }
      }
    },
    "v1Form": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Field"
          },
          "title": "The order of fields specified here is the order they will be displayed in"
        }
      }
    },
    "v1FormFieldType": {
      "type": "string",
      "enum": [
        "FORM_FIELD_TYPE_INVALID",
        "FORM_FIELD_TYPE_TEXT",
        "FORM_FIELD_TYPE_EMAIL",
        "FORM_FIELD_TYPE_PHONE_NUMBER",
        "FORM_FIELD_TYPE_SELECT"
      ],
      "default": "FORM_FIELD_TYPE_INVALID"
    },
    "v1GetCalendarResponse": {
      "type": "object",
      "properties": {
        "calendar": {
          "$ref": "#/definitions/v1Calendar"
        }
      }
    },
    "v1GetEntityAssociationResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Contains names of services and groups which has linked to the entity (event_type or group)"
    },
    "v1GetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        },
        "businessDisplayLogoUrl": {
          "type": "string"
        }
      }
    },
    "v1GetHostMeetingResponse": {
      "type": "object",
      "properties": {
        "meeting": {
          "$ref": "#/definitions/v1Meeting"
        }
      }
    },
    "v1GetHostPreferencesResponse": {
      "type": "object",
      "properties": {
        "preferences": {
          "$ref": "#/definitions/v1Preferences"
        }
      }
    },
    "v1GetHostResponse": {
      "type": "object",
      "properties": {
        "host": {
          "$ref": "#/definitions/v1Host"
        }
      }
    },
    "v1GetHostsForCalendarResponse": {
      "type": "object",
      "properties": {
        "hostUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HostUser"
          }
        }
      }
    },
    "v1GetMeetingTypeResponse": {
      "type": "object",
      "properties": {
        "meetingType": {
          "$ref": "#/definitions/v1MeetingType"
        }
      }
    },
    "v1GetMeetingTypesForCalendarsResponse": {
      "type": "object",
      "properties": {
        "calendarMeetingTypesMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1MeetingTypeList"
          },
          "title": "map is from string to list of meeting types\nEach calendar_id passed in the request is in the map - even if there are no meeting types for the calendar"
        }
      }
    },
    "v1GetServiceResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "businessDisplayLogoUrl": {
          "type": "string"
        }
      }
    },
    "v1GoogleMeetConferenceData": {
      "type": "object",
      "properties": {
        "conferenceId": {
          "type": "string"
        },
        "conferenceSolution": {
          "$ref": "#/definitions/v1GoogleMeetConferenceSolution"
        },
        "createRequest": {
          "$ref": "#/definitions/v1GoogleMeetCreateConferenceRequest"
        },
        "entryPoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleMeetEntryPoint"
          }
        },
        "notes": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L829"
    },
    "v1GoogleMeetConferenceRequestStatus": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L990"
    },
    "v1GoogleMeetConferenceSolution": {
      "type": "object",
      "properties": {
        "iconUri": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/v1GoogleMeetConferenceSolutionKey"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1025"
    },
    "v1GoogleMeetConferenceSolutionKey": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "title": "https://github.com/googleapis/google-api-go-client/blob/master/calendar/v3/calendar-gen.go#L1059"
    },
    "v1GoogleMeetCreateConferenceRequest": {
      "type": "object",
      "properties": {
        "conferenceSolutionKey": {
          "$ref": "#/definitions/v1GoogleMeetConferenceSolutionKey"
        },
        "requestId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1GoogleMeetConferenceRequestStatus"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1096"
    },
    "v1GoogleMeetCreateMeetingResponse": {
      "type": "object",
      "properties": {
        "iamUserId": {
          "type": "string"
        },
        "calenderId": {
          "type": "string"
        },
        "meeting": {
          "$ref": "#/definitions/v1GoogleMeetMeeting"
        }
      },
      "description": "Request body of creating a google-mmet meeting."
    },
    "v1GoogleMeetEntryPoint": {
      "type": "object",
      "properties": {
        "accessCode": {
          "type": "string"
        },
        "entryPointFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entryPointType": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "meetingCode": {
          "type": "string"
        },
        "passcode": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "regionCode": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1135"
    },
    "v1GoogleMeetMeeting": {
      "type": "object",
      "properties": {
        "anyoneCanAddSelf": {
          "type": "boolean"
        },
        "attendees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleMeetMeetingAttendee"
          }
        },
        "attendeesOmitted": {
          "type": "boolean"
        },
        "colorId": {
          "type": "string"
        },
        "conferenceData": {
          "$ref": "#/definitions/v1GoogleMeetConferenceData"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "$ref": "#/definitions/v1GoogleMeetMeetingDateTime"
        },
        "endTimeUnspecified": {
          "type": "boolean"
        },
        "etag": {
          "type": "string"
        },
        "icalUid": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "originalStartTime": {
          "$ref": "#/definitions/v1GoogleMeetMeetingDateTime"
        },
        "recurrence": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurringMeetingId": {
          "type": "string"
        },
        "reminders": {
          "$ref": "#/definitions/v1GoogleMeetMeetingReminders"
        },
        "sequence": {
          "type": "string",
          "format": "int64"
        },
        "start": {
          "$ref": "#/definitions/v1GoogleMeetMeetingDateTime"
        },
        "status": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "transparency": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "hangoutLink": {
          "type": "string",
          "title": "Read only properties"
        },
        "htmlLink": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/v1GoogleMeetMeetingCreator"
        },
        "updated": {
          "type": "string"
        }
      },
      "description": "Google meet meetings (a.k.a events of google calendar)\nCheck https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1289 for more details of parameters."
    },
    "v1GoogleMeetMeetingAttendee": {
      "type": "object",
      "properties": {
        "additionalGuests": {
          "type": "string",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "organizer": {
          "type": "boolean"
        },
        "resource": {
          "type": "boolean"
        },
        "responseStatus": {
          "type": "string"
        },
        "self": {
          "type": "boolean"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1842"
    },
    "v1GoogleMeetMeetingCreator": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "self": {
          "type": "boolean"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1556"
    },
    "v1GoogleMeetMeetingDateTime": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1914"
    },
    "v1GoogleMeetMeetingReminder": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "minutes": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1961"
    },
    "v1GoogleMeetMeetingReminders": {
      "type": "object",
      "properties": {
        "overrides": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleMeetMeetingReminder"
          }
        },
        "useDefault": {
          "type": "boolean"
        }
      },
      "title": "https://github.com/google/google-api-go-client/tree/master/calendar/v3/calendar-gen.go#L1734"
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "Group Identifier"
        },
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to this specific group"
        },
        "name": {
          "type": "string",
          "title": "The name of the group"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The members of the group"
        }
      }
    },
    "v1GuestGetBookedMeetingResponse": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "The time at which the meeting was scheduled to start"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "title": "The time at which the meeting was scheduled to end"
        },
        "timeZone": {
          "$ref": "#/definitions/typeTimeZone",
          "title": "The timezone the meeting was booked in for the contact"
        },
        "meetingTypeId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locationType": {
          "$ref": "#/definitions/v1MeetingLocationType"
        },
        "locationGuideline": {
          "type": "string"
        }
      }
    },
    "v1GuestIsHostConfiguredResponse": {
      "type": "object",
      "properties": {
        "isConfigured": {
          "type": "boolean"
        }
      }
    },
    "v1Host": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayProfileUrl": {
          "type": "string"
        },
        "displayLogoUrl": {
          "type": "string"
        }
      }
    },
    "v1HostBookMeetingResponse": {
      "type": "object",
      "properties": {
        "meetingId": {
          "type": "string"
        }
      }
    },
    "v1HostGetCalendarResponse": {
      "type": "object",
      "properties": {
        "calendar": {
          "$ref": "#/definitions/v1Calendar"
        }
      }
    },
    "v1HostGetMeetingTypeResponse": {
      "type": "object",
      "properties": {
        "meetingType": {
          "$ref": "#/definitions/v1MeetingType"
        }
      }
    },
    "v1HostListMeetingTypesResponse": {
      "type": "object",
      "properties": {
        "meetingTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MeetingType"
          }
        }
      }
    },
    "v1HostUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "isConfigured": {
          "type": "boolean"
        }
      }
    },
    "v1IsCalendarConfiguredResponse": {
      "type": "object",
      "properties": {
        "isConfigured": {
          "type": "boolean"
        },
        "calendarIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1IsHostConfiguredResponse": {
      "type": "object",
      "properties": {
        "isConfigured": {
          "type": "boolean"
        }
      }
    },
    "v1ListAvailabilityRequestFilters": {
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string"
        },
        "meetingTypeId": {
          "type": "string",
          "title": "meeting type for the availability. OPTIONAL - empty will return all"
        }
      }
    },
    "v1ListAvailabilityResponse": {
      "type": "object",
      "properties": {
        "availabilityRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AvailabilityRule"
          }
        },
        "metadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListAvailableTimeSlotsResponse": {
      "type": "object",
      "properties": {
        "timeSlots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vendastatypesDateRange"
          },
          "title": "Ordered by start time UTC and reflects the requested TimeZone"
        }
      }
    },
    "v1ListBookedMeetingsRequestFilters": {
      "type": "object",
      "properties": {
        "meetingTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The identifiers of a meeting types to be filtered on"
        },
        "hostId": {
          "type": "string",
          "title": "The identifier of the host to list the meetings for"
        },
        "timeSpan": {
          "$ref": "#/definitions/vendastatypesDateRange",
          "title": "The date range of meetings to filter for - this range must be specific to the client's time zone"
        }
      }
    },
    "v1ListBookedMeetingsResponse": {
      "type": "object",
      "properties": {
        "meetings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Meeting"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          },
          "title": "A list of groups"
        }
      }
    },
    "v1ListMeetingTypesResponse": {
      "type": "object",
      "properties": {
        "meetingTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MeetingType"
          }
        }
      }
    },
    "v1ListServicesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Service"
          }
        }
      }
    },
    "v1Meeting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "eventTypeId": {
          "type": "string"
        },
        "hostId": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "attendees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attendee"
          }
        },
        "description": {
          "type": "string"
        },
        "joinMeetingUrl": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "formAnswers": {
          "$ref": "#/definitions/v1Answers"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "metadata will include additional fields from the url during the booking process (msm_business, utm_campaign)\nhttps://vendasta.jira.com/wiki/spaces/BOOKME/pages/227836157/Terminology#Meeting-Metadata"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        },
        "location": {
          "type": "string"
        },
        "calendarId": {
          "type": "string"
        }
      }
    },
    "v1MeetingLocationType": {
      "type": "string",
      "enum": [
        "VIDEO",
        "IN_PERSON_USER_SITE",
        "IN_PERSON_CLIENT_SITE"
      ],
      "default": "VIDEO"
    },
    "v1MeetingSource": {
      "type": "string",
      "enum": [
        "MEETING_SOURCE_INVALID",
        "MEETING_SOURCE_ZOOM",
        "MEETING_SOURCE_GOOGLE_MEET",
        "MEETING_SOURCE_MICROSOFT"
      ],
      "default": "MEETING_SOURCE_INVALID"
    },
    "v1MeetingSourceInfo": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1MeetingSource",
          "description": "meeting source. e.g. zoom."
        },
        "status": {
          "$ref": "#/definitions/v1MeetingSourceStatus"
        },
        "connectDisconnectUrl": {
          "type": "string",
          "description": "It will be a connect URL if the user is not connected yet. Otherwise, it will be a disconnected URL."
        }
      }
    },
    "v1MeetingSourceListResponse": {
      "type": "object",
      "properties": {
        "iamUserId": {
          "type": "string"
        },
        "sourceInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MeetingSourceInfo"
          }
        }
      }
    },
    "v1MeetingSourceQuery": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1MeetingSource",
          "description": "meeting source. e.g. zoom."
        },
        "connectNextUrl": {
          "type": "string",
          "description": "This URL is used to constuct a connect URL of the meeting source."
        },
        "disconnectNextUrl": {
          "type": "string",
          "description": "This URL is used to constuct a disconnect URL of the meeting source."
        }
      },
      "description": "MeetingSourceQuery is used to query the status of a meeting source."
    },
    "v1MeetingSourceStatus": {
      "type": "string",
      "enum": [
        "MEETING_SOURCE_STATUS_INVALID",
        "MEETING_SOURCE_STATUS_CONNECTED",
        "MEETING_SOURCE_STATUS_DISCONNECTED",
        "MEETING_SOURCE_STATUS_BROKEN"
      ],
      "default": "MEETING_SOURCE_STATUS_INVALID"
    },
    "v1MeetingType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "calendarId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hexColor": {
          "type": "string"
        },
        "meetingTypeSlug": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "form": {
          "$ref": "#/definitions/v1Form"
        },
        "isReserveWithGoogleService": {
          "type": "boolean"
        },
        "hostUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bookingUrl": {
          "type": "string",
          "title": "Derived booking_url of the form https://bookmenow.info/book/calendar-slug/meeting-type-slug for responses"
        },
        "availabilityIncrement": {
          "type": "string",
          "format": "int64"
        },
        "bufferDurationAfterMeeting": {
          "type": "string",
          "format": "int64"
        },
        "noticeTime": {
          "type": "string",
          "format": "int64"
        },
        "location": {
          "type": "string"
        },
        "locationType": {
          "$ref": "#/definitions/v1MeetingLocationType"
        },
        "locationGuidelines": {
          "type": "string"
        },
        "isClientChoice": {
          "type": "boolean"
        },
        "emailSubject": {
          "type": "string"
        },
        "emailDescription": {
          "type": "string"
        },
        "isPinned": {
          "type": "boolean"
        },
        "calendarType": {
          "type": "string"
        },
        "hostUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HostUser"
          }
        },
        "teamName": {
          "type": "string"
        },
        "isVideoLinkDisabled": {
          "type": "boolean"
        },
        "bufferDurationBeforeMeeting": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1MeetingTypeList": {
      "type": "object",
      "properties": {
        "meetingTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MeetingType"
          }
        }
      },
      "description": "This message is necessary as a map of string to repeated property is not supported in proto3 at this time."
    },
    "v1Preferences": {
      "type": "object",
      "properties": {
        "timezone": {
          "$ref": "#/definitions/typeTimeZone"
        },
        "meetingIntegration": {
          "$ref": "#/definitions/v1MeetingSource"
        },
        "availabilityIncrement": {
          "type": "string",
          "format": "int64",
          "title": "How availability is split into smaller pieces - specified in seconds.\nhttps://vendasta.jira.com/wiki/spaces/BOOKME/pages/227836157/Terminology#Availability-Increments"
        },
        "bufferDurationAfterMeeting": {
          "type": "string",
          "format": "int64",
          "title": "The length of time that should be left unscheduled after a meeting - specified in seconds.\nSee https://vendasta.jira.com/wiki/spaces/BOOKME/pages/227836157/Terminology#Meeting-Buffer-Time"
        },
        "noticeTime": {
          "type": "string",
          "format": "int64",
          "title": "The minimum required duration from now that a meeting can be scheduled - specified in seconds.\nSee https://vendasta.jira.com/wiki/spaces/BOOKME/pages/227836157/Terminology#Meeting-Notice-Time"
        },
        "calendarSlug": {
          "type": "string",
          "title": "The slug that can be used for routing to the booking client for this calendar.\nI.e., if this was vendasta the link https://bookmenow.info/vendasta would link to this calendar.\nslugs are unique to a calendar.\nDANGER: Changing this slug may BREAK existing links under the previous slug.\nSee https://vendasta.jira.com/wiki/spaces/BOOKME/pages/227836157/Terminology#Calendar-Slug"
        },
        "bufferDurationBeforeMeeting": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        },
        "rpcs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RPC"
          }
        }
      }
    },
    "v1TimeRange": {
      "type": "string",
      "enum": [
        "TIME_RANGE_SEVEN_DAYS",
        "TIME_RANGE_THIRTY_DAYS",
        "TIME_RANGE_NINETY_DAYS",
        "TIME_RANGE_SIX_MONTHS",
        "TIME_RANGE_TWELVE_MONTHS",
        "TIME_RANGE_UNSPECIFIED"
      ],
      "default": "TIME_RANGE_SEVEN_DAYS"
    },
    "v1WeekdayAvailability": {
      "type": "object",
      "properties": {
        "day": {
          "$ref": "#/definitions/typeDayOfWeek"
        },
        "timeSlots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TimeRange"
          }
        }
      }
    },
    "v1ZoomApprovalType": {
      "type": "string",
      "enum": [
        "ZOOM_APPROVAL_TYPE_INVALID",
        "ZOOM_APPROVAL_TYPE_ATUO_APPROVE",
        "ZOOM_APPROVAL_TYPE_MANUALLY_APPROVE",
        "ZOOM_APPROVAL_TYPE_NO_REGISTRATION_REQUIRED"
      ],
      "default": "ZOOM_APPROVAL_TYPE_INVALID"
    },
    "v1ZoomMeetingRecurrence": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1ZoomMeetingRecurrenceType"
        },
        "repeatInterval": {
          "type": "string",
          "format": "int64",
          "description": "Define the internal at which the meeting should recur. For instance, if you would like to schedule a meeting that\nrecurs every two months, you must set the value of this field as 2 and the value of type parameter as 3.\nMax daily meeting: 90 days\nMax weekly meeting: 12 weeks.\nMax monthly meeting: 3 months."
        },
        "weeklyDays": {
          "type": "string",
          "title": "Use this field only if you are scheduling a recurring meeting of type 2 to state which day(s) of the week the meeting\nshould repeat.\nIf you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field.\nFor example \"1,2,3\""
        },
        "monthlyDay": {
          "type": "string",
          "format": "int64",
          "description": "Use this field only if you are scheduling a recurring meeting of type 3 to state which day in a month, the meeting\nshould recurd. The value range is from 1 to 31."
        },
        "monthlyWeek": {
          "$ref": "#/definitions/v1ZoomMonthlyWeek",
          "description": "Use this field only if you are scheduling a recurring metting of type 3 to state the week of the month when the meeting\nshould recur. If you use this field, you must also use the monthly_week_day field to state the day of the week when\nthe meeting should occur."
        },
        "monthlyWeekDay": {
          "$ref": "#/definitions/v1ZoomMonthlyWeekDay",
          "description": "Use this field only if you are scheduling a recurring meeting of type 3 to state a specific day in a week when\nthe monthly meeting should recur. To use this field, you must also use the monthly_week field."
        },
        "endTimes": {
          "type": "string",
          "format": "int64",
          "title": "Select how many times the meeting should recur before it is cancelled. (Cannot be used with `end_date_time`)"
        },
        "endDateTime": {
          "type": "string",
          "title": "Select the final data on which the meeting will recur before it is cancelled. Should be in UTC time and cannot\nbe used with `end_times`"
        }
      }
    },
    "v1ZoomMeetingRecurrenceType": {
      "type": "string",
      "enum": [
        "ZOOM_MEETING_RECURRENCE_TYPE_INVALID",
        "ZOOM_MEETING_RECURRENCE_TYPE_DAILY",
        "ZOOM_MEETING_RECURRENCE_TYPE_WEEKLY",
        "ZOOM_MEETING_RECURRENCE_TYPE_MONTHLY"
      ],
      "default": "ZOOM_MEETING_RECURRENCE_TYPE_INVALID"
    },
    "v1ZoomMeetingSettings": {
      "type": "object",
      "properties": {
        "hostVideo": {
          "type": "boolean"
        },
        "participantVideo": {
          "type": "boolean"
        },
        "cnMeeting": {
          "type": "boolean"
        },
        "inMeeting": {
          "type": "boolean"
        },
        "joinBeforeHost": {
          "type": "boolean"
        },
        "muteUponEntry": {
          "type": "boolean"
        },
        "watermark": {
          "type": "boolean"
        },
        "usePmi": {
          "type": "boolean"
        },
        "approvalType": {
          "$ref": "#/definitions/v1ZoomApprovalType"
        },
        "registrationType": {
          "$ref": "#/definitions/v1ZoomRegistrationType"
        },
        "audio": {
          "type": "string"
        },
        "autoRecording": {
          "type": "string"
        },
        "alternativeHosts": {
          "type": "string"
        },
        "closeRegistration": {
          "type": "boolean"
        },
        "waitingRoom": {
          "type": "boolean"
        },
        "globalDialInCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactName": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "registrationEmailNotification": {
          "type": "boolean"
        },
        "meetingAuthentication": {
          "type": "boolean"
        },
        "authenticationOptions": {
          "type": "string"
        },
        "authenticationDomains": {
          "type": "string"
        },
        "enforceLogin": {
          "type": "boolean",
          "description": "The following fields are reponse only."
        },
        "enforceLoginDomains": {
          "type": "string"
        }
      }
    },
    "v1ZoomMeetingTrackingField": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1ZoomMeetingType": {
      "type": "string",
      "enum": [
        "ZOOM_MEETING_TYPE_INVALID",
        "ZOOM_MEETING_TYPE_INSTANT",
        "ZOOM_MEETING_TYPE_SCHEDULED",
        "ZOOM_MEETING_TYPE_RECURRING_NO_FIXED",
        "ZOOM_MEETING_TYPE_RECURRING_FIXED"
      ],
      "default": "ZOOM_MEETING_TYPE_INVALID",
      "description": " - ZOOM_MEETING_TYPE_INVALID: Invalid meeting type.\n - ZOOM_MEETING_TYPE_INSTANT: Instant meeting.\n - ZOOM_MEETING_TYPE_SCHEDULED: Scheduled meeting.\n - ZOOM_MEETING_TYPE_RECURRING_NO_FIXED: Recurring meeting with no fixed tiem.\n - ZOOM_MEETING_TYPE_RECURRING_FIXED: Recurring meeting with fixed time."
    },
    "v1ZoomMonthlyWeek": {
      "type": "string",
      "enum": [
        "ZOOM_MONTHLY_WEEK_INVALD",
        "ZOOM_MONTHLY_WEEK_LAST_WEEK",
        "ZOOM_MONTHLY_WEEK_FIRST_WEEK",
        "ZOOM_MONTHLY_WEEK_SECOND_WEEK",
        "ZOOM_MONTHLY_WEEK_THIRD_WEEK",
        "ZOOM_MONTHLY_WEEK_FOURTH_WEEK"
      ],
      "default": "ZOOM_MONTHLY_WEEK_INVALD"
    },
    "v1ZoomMonthlyWeekDay": {
      "type": "string",
      "enum": [
        "ZOOM_MONTHLY_WEEK_DAY_INVALID",
        "ZOOM_MONTHLY_WEEK_DAY_SUNDAY",
        "ZOOM_MONTHLY_WEEK_DAY_MONDAY",
        "ZOOM_MONTHLY_WEEK_DAY_TUESDAY",
        "ZOOM_MONTHLY_WEEK_DAY_WEDNESDAY",
        "ZOOM_MONTHLY_WEEK_DAY_THURSDAY",
        "ZOOM_MONTHLY_WEEK_DAY_FRIDAY",
        "ZOOM_MONTHLY_WEEK_DAY_SATURDAY"
      ],
      "default": "ZOOM_MONTHLY_WEEK_DAY_INVALID"
    },
    "v1ZoomOccurrence": {
      "type": "object",
      "properties": {
        "occurrenceId": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1ZoomRegistrationType": {
      "type": "string",
      "enum": [
        "ZOOM_REGISTRATION_TYPE_INVALID",
        "ZOOM_REGISTRATION_TYPE_RESGITER_ONCE_FOR_ALL",
        "ZOOM_REGISTRATION_TYPE_REGISTER_FOR_EACH",
        "ZOOM_REGISTRATION_TYPE_RESGITER_ONCE_FOR_ONE_OR_MORE"
      ],
      "default": "ZOOM_REGISTRATION_TYPE_INVALID"
    },
    "v3BatchAvailabilityLookupResponse": {
      "type": "object",
      "properties": {
        "slotTimeAvailability": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3SlotTimeAvailability"
          },
          "description": "The availabilities for the requested SlotTime entries. There must be\nexactly one slot_time_availability for each SlotTime entry in the\n[ext.maps.booking.partner.v3.BatchAvailabilityLookupRequest]."
        }
      },
      "description": "Response for the [ext.maps.booking.partner.v3.BatchAvailabilityLookupRequest]\nRPC with the availabilities of the appointment slots."
    },
    "v3Booking": {
      "type": "object",
      "properties": {
        "bookingId": {
          "type": "string",
          "title": "ID of this booking (required)"
        },
        "slot": {
          "$ref": "#/definitions/v3Slot",
          "title": "The appointment slot of this booking\n(required for CreateBooking and UpdateBooking:modify,\nbut not UpdateBooking:cancel)"
        },
        "userInformation": {
          "$ref": "#/definitions/v3UserInformation",
          "title": "Personal information of the user making the appointment (required for\nCreateBooking)"
        },
        "status": {
          "$ref": "#/definitions/v3BookingStatus",
          "title": "Status of the booking (required for CreateBooking and UpdateBooking:cancel,\nbut not UpdateBooking:modify)"
        },
        "paymentInformation": {
          "$ref": "#/definitions/v3PaymentInformation",
          "title": "Information about payment transactions that relate to the booking.\n(optional)"
        },
        "virtualSessionInfo": {
          "$ref": "#/definitions/v3VirtualSessionInfo",
          "title": "Information about virtual session related to this booking. (optional)"
        },
        "offerInfo": {
          "$ref": "#/definitions/v3OfferInfo",
          "description": "Information about the Offer applied to this booking.\n\nRequired in CreateBookingResponse if an offer_id was set on the\nCreateBookingRequest that created the Booking."
        }
      },
      "title": "A booking for an inventory slot"
    },
    "v3BookingFailure": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/BookingFailureCause",
          "title": "The reason why the booking failed. (required)"
        },
        "rejectedCardType": {
          "$ref": "#/definitions/partnerv3CreditCardType",
          "title": "(required only if cause is PAYMENT_ERROR_CARD_TYPE_REJECTED)"
        },
        "description": {
          "type": "string",
          "title": "This optional field is used for the partner to include additional\ninformation for debugging purpose only. (optional)"
        },
        "paymentFailure": {
          "$ref": "#/definitions/v3BookingFailurePaymentFailureInformation"
        }
      },
      "description": "Status data that conveys why (1) creating a lease or (2) creating or updating\na booking fails.\nBookingFailure is intended to primarily capture business logic errors."
    },
    "v3BookingFailurePaymentFailureInformation": {
      "type": "object",
      "properties": {
        "threeds1Parameters": {
          "$ref": "#/definitions/v3BookingFailurePaymentFailureInformationThreeDS1Parameters",
          "description": "Parameters used by a RwG aggregator to initiate a 3DS1 authentication\nprotocol with the user.  Will be ignored unless BookingFailure.cause\nis set to PAYMENT_REQUIRES_3DS1."
        }
      },
      "description": "Information about payment failures."
    },
    "v3BookingFailurePaymentFailureInformationThreeDS1Parameters": {
      "type": "object",
      "properties": {
        "acsUrl": {
          "type": "string",
          "description": "The URL from which to load a form to present to the User for\nauthentication."
        },
        "paReq": {
          "type": "string",
          "description": "A PaymentAuthentication Request.  To be posted to the ACSUrl form if\nsupplied."
        },
        "transactionId": {
          "type": "string",
          "description": "An identifier used by the ACS provider.  To be posted to the ACSUrl\nform if supplied."
        },
        "mdMerchantData": {
          "type": "string",
          "description": "Merchant data.  To be posted to the ACSUrl form if supplied."
        }
      },
      "description": "Parameters requesting that RwG perform a 3DS1 challenge.\n\nThe parameters are set by EMVCo's description of the 3DS1 protocol."
    },
    "v3BookingStatus": {
      "type": "string",
      "enum": [
        "BOOKING_STATUS_UNSPECIFIED",
        "CONFIRMED",
        "PENDING_MERCHANT_CONFIRMATION",
        "CANCELED",
        "NO_SHOW",
        "NO_SHOW_PENALIZED",
        "FAILED",
        "DECLINED_BY_MERCHANT"
      ],
      "default": "BOOKING_STATUS_UNSPECIFIED",
      "description": "Status of a booking.\n\nUpdating booking status does not change the status of the associated payment.\nPrepayment status updates should be done using the PrepaymentStatus enum.\n\n - BOOKING_STATUS_UNSPECIFIED: Not specified.\n - CONFIRMED: Booking has been confirmed\n - PENDING_MERCHANT_CONFIRMATION: Booking is awaiting confirmation by the merchant before it can transition\ninto CONFIRMED status. Only applicable to non-payments Dining or\nBeauty verticals.\n - CANCELED: Booking has been canceled on behalf of the user.\nThe merchant can still trigger a manual refund.\n - NO_SHOW: User did not show for the appointment\n - NO_SHOW_PENALIZED: User did not show for the appointment in violation of the cancellation\npolicy.\n - FAILED: Booking could not be completed by the async backend due to a failure.\n - DECLINED_BY_MERCHANT: Booking was asynchronously declined by the merchant. Only applicable to\nnon-payments Dining or Beauty verticals."
    },
    "v3ConfirmationMode": {
      "type": "string",
      "enum": [
        "CONFIRMATION_MODE_UNSPECIFIED",
        "CONFIRMATION_MODE_SYNCHRONOUS",
        "CONFIRMATION_MODE_ASYNCHRONOUS"
      ],
      "default": "CONFIRMATION_MODE_UNSPECIFIED",
      "description": "Mode by which bookings for an availability slot are confirmed.\n\n - CONFIRMATION_MODE_UNSPECIFIED: The confirmation mode was not specified.\nSynchronous confirmation will be assumed.\n - CONFIRMATION_MODE_SYNCHRONOUS: Bookings for this availability will be confirmed synchronously.\n - CONFIRMATION_MODE_ASYNCHRONOUS: Bookings for this availability will be confirmed asynchronously."
    },
    "v3CreateBookingResponse": {
      "type": "object",
      "properties": {
        "booking": {
          "$ref": "#/definitions/v3Booking",
          "title": "The created booking (required)"
        },
        "userPaymentOption": {
          "$ref": "#/definitions/v3UserPaymentOption",
          "title": "The updated user payment option used in this booking.\nIf a new payment option was purchased to pay for the booking, this should\nbe a newly created user payment option.\nIf an already purchased user payment option was used for this booking,\nthis should reflect an updated version of that user payment option.\n(optional)"
        },
        "bookingFailure": {
          "$ref": "#/definitions/v3BookingFailure",
          "title": "If creating a booking fails, this field should reflect the business logic\nerror (e.g., slot has become unavailable) and all other fields in the\nCreateBookingResponse message are expected to be unset. (required if\nfailure occurs)"
        }
      },
      "description": "Response with the created Booking for an inventory slot."
    },
    "v3CreditCardRestrictionsCreditCardType": {
      "type": "string",
      "enum": [
        "CREDIT_CARD_TYPE_UNSPECIFIED",
        "VISA",
        "MASTERCARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "JCB"
      ],
      "default": "CREDIT_CARD_TYPE_UNSPECIFIED",
      "description": "A credit card type.\n\n - CREDIT_CARD_TYPE_UNSPECIFIED: Unused.\n - VISA: A Visa credit card.\n - MASTERCARD: A Mastercard credit card.\n - AMERICAN_EXPRESS: An American Express credit card.\n - DISCOVER: A Discover credit card.\n - JCB: A JCB credit card."
    },
    "v3Deposit": {
      "type": "object",
      "properties": {
        "deposit": {
          "$ref": "#/definitions/v3Price",
          "description": "Deposit amount."
        },
        "minAdvanceCancellationSec": {
          "type": "string",
          "format": "int64",
          "description": "Minimum advance cancellation for the deposit."
        },
        "depositType": {
          "$ref": "#/definitions/v3PriceType",
          "description": "Defines how the deposit is determined from the availability."
        }
      },
      "description": "A deposit that the user may be charged or have a hold on their credit card\nfor."
    },
    "v3GetBookingStatusResponse": {
      "type": "object",
      "properties": {
        "bookingId": {
          "type": "string",
          "title": "ID of the booking (required)"
        },
        "bookingStatus": {
          "$ref": "#/definitions/v3BookingStatus",
          "title": "Status of the booking (required)"
        },
        "prepaymentStatus": {
          "$ref": "#/definitions/v3PrepaymentStatus",
          "title": "Prepayment status of the booking (required)"
        }
      },
      "description": "Response for the GetBookingStatus RPC with booking status and prepayment\nstatus."
    },
    "v3LeaseReference": {
      "type": "object",
      "properties": {
        "leaseId": {
          "type": "string",
          "title": "Lease ID (required)"
        }
      },
      "description": "Reference to a Lease that has been created via CreateLease."
    },
    "v3ListBookingsResponse": {
      "type": "object",
      "properties": {
        "bookings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Booking"
          },
          "title": "All bookings of the user (required)"
        }
      },
      "description": "Response for the ListBookings RPC with all bookings for the requested user."
    },
    "v3NoShowFee": {
      "type": "object",
      "properties": {
        "fee": {
          "$ref": "#/definitions/v3Price",
          "description": "The amount the user may be charged if they do not show up for their\nreservation."
        },
        "feeType": {
          "$ref": "#/definitions/v3PriceType",
          "description": "Defines how the fee is determined from the availability."
        }
      },
      "description": "A fee that a user may be charged if they have made a booking but do not\nshow up."
    },
    "v3OfferInfo": {
      "type": "object",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "The ID of the Offer."
        }
      },
      "description": "Information about an Offer applied to a booking."
    },
    "v3PaymentInformation": {
      "type": "object",
      "properties": {
        "prepaymentStatus": {
          "$ref": "#/definitions/v3PrepaymentStatus",
          "title": "Prepayment status of the transaction.\nIf the prepayment_status is PREPAYMENT_PROVIDED, then\npayment_transaction_id contains the associated unique transaction id for\nthe purchase.\nIf the prepayment status is PREPAYMENT_REFUNDED, then\npayment_transaction_id contains the associated unique transaction id for\nthe refund. (required)"
        },
        "paymentTransactionId": {
          "type": "string",
          "description": "Unique identifier for a payment transaction associated with the booking.\nIf the payment is PROCESSED_BY_GOOGLE, this field will be set by Google.\nIf the payment is PROCESSED_BY_PARTNER, this field will be left empty in\nGoogle's CreateBooking or CreateOrder requests to the partner, and it must\nbe set by the partner in their responses."
        },
        "price": {
          "$ref": "#/definitions/v3Price",
          "description": "For bookings or orders, these fields must match the service price\n(specified in the Services feed) or the PaymentOption corresponding with\nthis service. They are included in the booking request and response to\nverify that the price indicated in the feed has not changed since the last\nfeed update.\n\nThe price of the transaction, exclusive of any taxes and fees.\nExistence of price or taxes does not imply that they have been paid,\nprepayment_state should be used for that purpose. (required)"
        },
        "taxAmount": {
          "$ref": "#/definitions/v3Price",
          "title": "Taxes that are calculated to be paid for this transaction.\nThis field can only be absent in one of the following cases:\n(1) the price is exempt from or already inclusive of applicable taxes; or\n(2) the break down between taxes and fees is not available.\n(required when neither of the above holds)"
        },
        "fees": {
          "$ref": "#/definitions/v3Price",
          "description": "Additional fees associated with this transaction, if any.\n\nThe use of this field should be consistent with other pricing related\nfields:\n - if a {price, tax, fees} breakdown is provided for service or\n availability, use the same breakdown {price, tax, fees} here.\n - if the price field for service or availability already includes taxes\n or fees, keep using price field to includes taxes or fees and avoid\n setting the tax_amount or fees fields here.\nNote: this is only supported for non-order based transactions."
        },
        "feesAndTaxes": {
          "$ref": "#/definitions/v3Price",
          "description": "Total processing fees & taxes that the user needs to pay for the order;\nonly applicable to partners that handle order based transactions.\nIf the order would incur non-zero fees based on\nthe partner's response during CheckOrderFulfillability, Google would set\nthis field during CreateOrder; otherwise, the field would be unset.\nThe partner should verify this value, in addition to the `price` value,\nbefore charging the user."
        },
        "deposit": {
          "$ref": "#/definitions/v3Deposit",
          "title": "Defines how a deposit may be charged to the user. If there is a deposit,\nthis field should be set. (optional)"
        },
        "noShowFee": {
          "$ref": "#/definitions/v3NoShowFee",
          "title": "Defines a no show fee that may be charged to the user. If the user can be\ncharged a no show fee, this field should be set. (optional)"
        },
        "paymentProcessedBy": {
          "$ref": "#/definitions/PaymentInformationPaymentProcessedBy",
          "title": "Whether the partner or Google processed the payment. (required)"
        },
        "paymentOptionId": {
          "type": "string",
          "description": "The id of the payment option associated with this booking. If this field\nis populated, price (and tax_amount, if applicable) must be  populated as\nwell."
        },
        "userPaymentOptionId": {
          "type": "string",
          "description": "The id of the user payment option used to pay for this booking."
        },
        "fraudSignals": {
          "type": "string",
          "description": "Fraud signals that are sent to the partner as per agreement with Google.\nThe signals are sent via a serialized JSON blob."
        },
        "paResponse": {
          "type": "string",
          "description": "After we engage in a 3DS1 protocol gaining further authentication\ninformation from a user, this payload is returned to us from an ACS\nprovider, and it should be used by the partner to complete the 3DS1\nprotocol."
        },
        "mdMerchantData": {
          "type": "string",
          "description": "After we engage in a 3DS1 protocol gaining further authentication\ninformation from a user, this payload may be returned to us from an ACS\nprovider, and if provided, it should be used by the partner to complete the\n3DS1 protocol."
        }
      },
      "description": "Payment details that are sent when creating a new transaction (which could be\na booking, order, or parking session)."
    },
    "v3PaymentOptionType": {
      "type": "string",
      "enum": [
        "PAYMENT_OPTION_TYPE_UNSPECIFIED",
        "PAYMENT_OPTION_SINGLE_USE",
        "PAYMENT_OPTION_MULTI_USE",
        "PAYMENT_OPTION_UNLIMITED_USE"
      ],
      "default": "PAYMENT_OPTION_TYPE_UNSPECIFIED"
    },
    "v3PaymentProcessingParameters": {
      "type": "object",
      "properties": {
        "processor": {
          "$ref": "#/definitions/PaymentProcessingParametersPaymentProcessor",
          "description": "Replaced by the payment_processor field.",
          "title": "The payment processor used to process payment for a given booking.\n(required)"
        },
        "paymentMethodToken": {
          "type": "string",
          "description": "The token representing the payment method that will be used to pay\nfor this booking. This token can be only used once. This token can be\nonly used for the merchant associated with this booking.\n\nEach processor may choose its own format for this field.\nAn example of Stripe's token is \"tok_1C3orL2eZvKYlo2CxReMgS4K\".\n\nReplaced by unparsed_payment_method_token, which contains\npayment_method_token as one of its fields.\nFor example, for Stripe, unparsed_payment_method_token is a serialized\nJSON object documented at https://stripe.com/docs/api#token_object.\npayment_method_token is the 'id' field parsed out of that."
        },
        "unparsedPaymentMethodToken": {
          "type": "string",
          "description": "This token can only be used once, and only for the merchant associated with\nthis booking.\n\n[(datapol.semantic_type) = ST_PAYMENTS_INFO];",
          "title": "The full token received from Google Payments.  This is typically a\nserialized JSON object.  See documentation from Google Payments and your\npayment processor for the JSON format of the token for your processor.\nhttps://developers.google.com/pay/api/#participating-google-pay-processors"
        },
        "version": {
          "type": "string",
          "description": "The payment processor API version that the given payment token is valid\nfor.\n\nEach processor may choose its own format for this field.\nStripe uses a date (e.g. \"2017-06-15\"). (required if and only if the\npayment processor has a tokenization parameter for version)\nThis is deprecated in favor of tokenization_parameters."
        },
        "paymentProcessor": {
          "type": "string",
          "description": "The payment processor whose configuration was used to generate this token.\n(required)\nThis is deprecated in favor of tokenization_parameters."
        },
        "tokenizationConfig": {
          "$ref": "#/definitions/v3TokenizationConfig",
          "description": "The tokenization_config supplied in the Merchant feed that was used\nto generate unparsed_payment_method_token."
        }
      }
    },
    "v3PostalAddress": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "title": "The country, e.g. \"US\". (required)"
        },
        "locality": {
          "type": "string",
          "title": "The locality/city, e.g. \"Mountain View\". (required)"
        },
        "region": {
          "type": "string",
          "title": "The region/state/province, e.g. \"CA\". This field is only required in\ncountries where region is commonly a part of the address. (optional)"
        },
        "postalCode": {
          "type": "string",
          "title": "The postal code, e.g. \"94043\". (required)"
        },
        "streetAddress": {
          "type": "string",
          "title": "The street address, e.g. \"1600 Amphitheatre Pkwy\". (required)"
        }
      },
      "description": "The postal address for a merchant."
    },
    "v3PrepaymentStatus": {
      "type": "string",
      "enum": [
        "PREPAYMENT_STATUS_UNSPECIFIED",
        "PREPAYMENT_PROVIDED",
        "PREPAYMENT_NOT_PROVIDED",
        "PREPAYMENT_REFUNDED",
        "PREPAYMENT_CREDITED"
      ],
      "default": "PREPAYMENT_STATUS_UNSPECIFIED",
      "description": "Prepayment status of a booking.\nUpdating payment status will trigger an update on the payment status of the\nassociated booking (if applicable).\nCurrently, the only supported transition is from PREPAYMENT_PROVIDED to\nPREPAYMENT_REFUNDED, which will initiate a non-reversible refund on the\nassociated payment transaction.\n\n - PREPAYMENT_STATUS_UNSPECIFIED: Not specified, defaults to PREPAYMENT_NOT_PROVIDED.\n - PREPAYMENT_PROVIDED: The fee for the booking has been paid in advance.\n - PREPAYMENT_NOT_PROVIDED: The fee for the booking has not been paid in advance.\n - PREPAYMENT_REFUNDED: The fee was previously PREPAYMENT_PROVIDED but has now been refunded.\n - PREPAYMENT_CREDITED: The fee was previously PREPAYMENT_PROVIDED but now has been credited\n(user given a UserPaymentOption as a voucher for the booking).\nIf this is set, the response should also include the updated\nUserPaymentOption."
    },
    "v3Price": {
      "type": "object",
      "properties": {
        "priceMicros": {
          "type": "string",
          "format": "int64",
          "title": "The price in micro-units of the currency.\nFor example: 1.95 USD is 1950000 in micro-units.\nIf your price contains fractions of the smallest currency unit, then it\nwill be rounded using nearest even rounding (e.g. 2.5 cents rounded\nto 2 cents, 3.5 cents rounded to 4 cents, 0.5 cents rounded to 0 cents,\n2.51 cents rounded to 3 cents). (required)"
        },
        "currencyCode": {
          "type": "string",
          "title": "The currency of the price that is defined in ISO 4217. (required)"
        },
        "pricingOptionTag": {
          "type": "string",
          "title": "An optional and opaque string that identifies the pricing option that is\nassociated with the extended price. (optional)"
        }
      },
      "description": "The price of a service or a fee."
    },
    "v3PriceType": {
      "type": "string",
      "enum": [
        "FIXED_RATE_DEFAULT",
        "PER_PERSON"
      ],
      "default": "FIXED_RATE_DEFAULT",
      "description": "Defines how a total price is determined from an availability.\n\n - FIXED_RATE_DEFAULT: The price is for a fixed amount. This is the default value if the field is\nnot set.\n\nExamples:\n  $50 deposit to reserve a table; $20 no show fee for a yoga class\n - PER_PERSON: The price specified is per person, and the total price is calculated\naccording to the party size specified in Resources as price_micros *\nparty_size. A PER_PERSON price must be accompanied by a party size in the\navailability resources. If it is not, a party size of one is used.\n\nExamples:\n  $10 each for tickets to a museum"
    },
    "v3ResourceIds": {
      "type": "object",
      "properties": {
        "staffId": {
          "type": "string",
          "title": "The staff ID as provided in the feed or empty if not applicable or no staff\nwas selected. (optional)"
        },
        "roomId": {
          "type": "string",
          "title": "The room ID as provided in the feed or empty if not applicable or no room\nwas selected. (optional)"
        },
        "partySize": {
          "type": "integer",
          "format": "int32",
          "title": "For Dining Reservations only: the number of seats requested in the booking.\n(optional)"
        }
      },
      "title": "Resource specification that disambiguates an appointment slot"
    },
    "v3Slot": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "ID of the merchant for the slot (required for CreateBooking)"
        },
        "serviceId": {
          "type": "string",
          "title": "ID of the merchant Service (required for CreateBooking)"
        },
        "startSec": {
          "type": "string",
          "format": "int64",
          "title": "Start time of the appointment slot in seconds of UTC time since Unix epoch.\n(required for CreateBooking)"
        },
        "durationSec": {
          "type": "string",
          "format": "int64",
          "title": "Duration of the appointment slot (required for CreateBooking)"
        },
        "availabilityTag": {
          "type": "string",
          "title": "Opaque tag that identifies the availability slot and matches the value\nprovided in the availability feed (optional)"
        },
        "resources": {
          "$ref": "#/definitions/v3ResourceIds",
          "title": "The set of resources that disambiguates the appointment slot, e.g. by\nindicating the staff member and room selected by the user (optional)"
        },
        "confirmationMode": {
          "$ref": "#/definitions/v3ConfirmationMode",
          "description": "Indicates whether bookings of this slot will be confirmed\nsynchronously or asynchronously. (optional)\nAn UNSPECIFIED value will be interpreted as synchronous."
        }
      },
      "title": "An inventory slot"
    },
    "v3SlotTime": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string",
          "title": "ID of the service. (required)"
        },
        "startSec": {
          "type": "string",
          "format": "int64",
          "title": "Start time of the appointment slot in seconds of UTC time since Unix epoch\n(required)"
        },
        "durationSec": {
          "type": "string",
          "format": "int64",
          "title": "Duration of the appointment slot in seconds (optional)"
        },
        "availabilityTag": {
          "type": "string",
          "title": "Opaque tag that identifies the availability slot and matches the value\nprovided in the availability feed (optional)"
        },
        "resourceIds": {
          "$ref": "#/definitions/v3ResourceIds",
          "title": "The set of resources that specifies the appointment slot, e.g. by\nindicating the staff member and room selected by the user, or party size\nfor dining slots (optional)"
        },
        "confirmationMode": {
          "$ref": "#/definitions/v3ConfirmationMode",
          "description": "Indicates whether bookings of this slot will be confirmed\nsynchronously or asynchronously. (optional)\nAn UNSPECIFIED value will be interpreted as synchronous."
        }
      },
      "description": "Identifies a Slot service_id and start time and optionally, the Slot duration\nand resources, for a specific merchant. Note that this differs from the\ndefinition of Slot, as it does not include merchant_id identifier."
    },
    "v3SlotTimeAvailability": {
      "type": "object",
      "properties": {
        "slotTime": {
          "$ref": "#/definitions/v3SlotTime",
          "description": "The SlotTime for which availability was checked."
        },
        "available": {
          "type": "boolean",
          "title": "Whether the requested SlotTime is available"
        }
      }
    },
    "v3TokenizationConfig": {
      "type": "object",
      "properties": {
        "tokenizationParameter": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A tokenization configuration will typically have one\ntokenization_parameter whose key is \"gateway\" and whose value is the\nname of the processor.\n\nThe rest of the parameters are dependent on the processor.  See\ndocumentation from Google Pay and your processor for further information.\nhttps://developers.google.com/pay/api/web/object-reference# \\\n  PaymentMethodTokenizationSpecification\nhttps://developers.google.com/pay/api/#participating-google-pay-processors\n\nBraintree example:\ntokenization_parameter { key: \"gateway\" value: \"braintree\" }\ntokenization_parameter { key: \"braintree:apiVersion\" value: \"v1\" }\ntokenization_parameter { key: \"braintree:sdkVersion\" value: \"2.30.0\" }\ntokenization_parameter { key: \"braintree:merchantId\" value: \"abcdef\" }\ntokenization_parameter { key: \"braintree:clientKey\"\n                         value: \"production_xxx_yyy\" }\n\nStripe example:\ntokenization_parameter { key: \"gateway\" value: \"stripe\" }\ntokenization_parameter { key: \"stripe:version\" value: \"2018-02-28\" }\ntokenization_parameter { key: \"stripe:publishableKey\" value: \"pk_1234\" }\n\nAdyen example:\ntokenization_parameter { key: \"gateway\" value: \"adyen\" }\ntokenization_parameter { key: \"gatewayMerchantId\" value: \"yourId\" }"
        },
        "billingInformationFormat": {
          "$ref": "#/definitions/TokenizationConfigBillingInformationFormat",
          "description": "Include in the payment token the user's billing information as entered into\nGoogle Pay with their FOP (see above)."
        },
        "merchantOfRecordName": {
          "type": "string",
          "description": "Name of the Merchant Of Record (MOR).  This user-visible name will be shown\nin 3DS2 challenges.  In some cases, this is the Merchant, in others this is\nthe Aggregator."
        },
        "paymentCountryCode": {
          "type": "string",
          "description": "Country where transaction will be processed, in ISO 3166-1 alpha-2 form."
        },
        "cardNetworkParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TokenizationConfigCardNetworkParameters"
          },
          "description": "Per-Card Network processing parameters.\n\nThese are currently only required for PSD2\n(https://en.wikipedia.org/wiki/Payment_Services_Directive)\nprocessing when payment_country_code is a European country where PSD2 is in\neffect.  They are also only currently required for VISA and\nAMERICAN_EXPRESS."
        },
        "allowedAuthMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenizationConfigAuthMethod"
          },
          "description": "Defines types of cardholder data that are accepted by the gateway.\nIf not specified, no restrictions are applied.\n\nNote that partners who use commercial gateways should leave this\nempty unless their gateway provider has specified otherwise.  Restricting\nallowed_auth_methods is most useful in the scenario that a partner\nintegrates with GPay as a gateway themselves."
        }
      },
      "description": "A configuration for payment-processor tokenization, set up on a per-Merchant\nbasis."
    },
    "v3UpdateBookingResponse": {
      "type": "object",
      "properties": {
        "booking": {
          "$ref": "#/definitions/v3Booking",
          "title": "The updated booking (required)"
        },
        "userPaymentOption": {
          "$ref": "#/definitions/v3UserPaymentOption",
          "title": "The updated user payment option originally used to pay for this booking.\nThis should be set if the UpdateBookingRequest results in a change to\nthe UserPaymentOption.\nFor instance, if the booking is canceled, the UserPaymentOption should\nreflect an additional credit to the user. In the case of a multi-use\npayment option, the current_count should be increased by one to\nallow the user to create another booking with this payment option. In the\ncase of a single-use payment option, a new single-use user payment option\nshould be returned. (required if altered in update)"
        },
        "bookingFailure": {
          "$ref": "#/definitions/v3BookingFailure",
          "title": "If updating a booking fails, this field should reflect the business logic\nerror (e.g., booking is not cancellable) (required if failure occurs)"
        }
      },
      "description": "Response with the updated Booking."
    },
    "v3UserInformation": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "Unique ID of the user to the partner, chosen by Reserve with Google.\n(required)"
        },
        "givenName": {
          "type": "string",
          "title": "Given name of the user (maximum 40 characters) (required)"
        },
        "familyName": {
          "type": "string",
          "title": "Family name of the user (maximum 40 characters) (required)"
        },
        "address": {
          "$ref": "#/definitions/v3PostalAddress",
          "title": "Address of the user (optional)"
        },
        "telephone": {
          "type": "string",
          "title": "Phone number of the user (required)\nConsistent with the international definition in ITU-T E.123 recommendation.\nHowever, local conventions are also followed, such as using '-' instead of\na space as separator. For example, a phone number in the US can be\nwritten as '+1 415-736-0000'"
        },
        "email": {
          "type": "string",
          "title": "Email address of the user (required except for waitlists)"
        },
        "languageCode": {
          "type": "string",
          "title": "User's language code, in IETF BCP 47 format. It is sent only if a partner\nis allowed to use this feature. Please contact Reserve with Google team\nto be added to the allowlist and receive this code. (optional)"
        }
      },
      "description": "Personal information about the person taking action (e.g. making a\nbooking, an order, or creates a parking session)."
    },
    "v3UserPaymentOption": {
      "type": "object",
      "properties": {
        "userPaymentOptionId": {
          "type": "string",
          "title": "A unique identifier for the user payment option. This Id MUST be unique\nfor all UserPaymentOptions across all merchants and users. (required)"
        },
        "validStartTimeSec": {
          "type": "string",
          "format": "int64",
          "title": "The user payment option will be valid (usable) between start_time and\nend_time set in UTC. Attempts to use a user payment option to make a\nbooking outside of this interval will fail. (both optional)"
        },
        "validEndTimeSec": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v3PaymentOptionType",
          "title": "The type of the payment option associated with this user payment option.\nThis can be unlimited for a membership or subscription, multi-use for a\npack, or single-use. (required)"
        },
        "originalCount": {
          "type": "integer",
          "format": "int32",
          "title": "The original number of uses for this user payment option when it was\npurchased. This value is ignored for unlimited payment options. (required)"
        },
        "currentCount": {
          "type": "integer",
          "format": "int32",
          "title": "The number of uses remaining for this user payment option. If this number\nis 0 for a pack, attempts to use this payment option to make a booking will\nfail. (required)"
        },
        "paymentOptionId": {
          "type": "string",
          "title": "The id of the payment option that has been used to purchase this user\npayment option. (required)"
        }
      },
      "description": "This describes a payment option, such as a pack, membership, or\nsingle-session pass after it has been purchased by a user. It includes an\nidentifier for the user payment option, as well as some information about\nthe payment option with which it is associated."
    },
    "v3VirtualSessionInfo": {
      "type": "object",
      "properties": {
        "sessionUrl": {
          "type": "string",
          "title": "URL which was created for the virtual session. (optional)"
        },
        "meetingId": {
          "type": "string",
          "title": "The meeting id which was created for the virtual session. (optional)"
        },
        "password": {
          "type": "string",
          "title": "Password required to access the session. (optional)"
        }
      },
      "description": "Information related to the virtual session which was booked."
    },
    "vendastatypesDateRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BackupConfigBackupFrequency": {
      "type": "string",
      "enum": [
        "BACKUP_CONFIG_BACKUP_FREQUENCY_WEEKLY",
        "BACKUP_CONFIG_BACKUP_FREQUENCY_DAILY",
        "BACKUP_CONFIG_BACKUP_FREQUENCY_MONTHLY"
      ],
      "default": "BACKUP_CONFIG_BACKUP_FREQUENCY_WEEKLY"
    },
    "Elasticsearch7AnalysisCustomAnalyzer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the analyzer. This must be unique per index."
        },
        "analyzerJson": {
          "type": "string",
          "title": "The serialized JSON containing the configuration of the analyzer.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-custom-analyzer.html\nExample value:\n{\n  \"type\": \"custom\",\n  \"tokenizer\": \"standard\",\n  \"char_filter\": [\n    \"html_strip\"\n  ],\n  \"filter\": [\n    \"lowercase\",\n    \"asciifolding\"\n  ]\n}"
        }
      },
      "title": "CustomAnalyzer lets you set a custom analyzer on an index"
    },
    "Elasticsearch7AnalysisCustomCharFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the charFilter. This must be unique per index."
        },
        "charFilterJson": {
          "type": "string",
          "title": "The serialized JSON containing the configuration of the charFilter.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-charfilters.html\nExample value:\n{\n  \"type\": \"mapping\",\n  \"mappings\": [\n    \":) => _happy_\",\n    \":( => _sad_\"\n  ]\n}"
        }
      },
      "title": "CustomCharFilter lets you set a custom charFilter on an index"
    },
    "Elasticsearch7AnalysisCustomFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the filter. This must be unique per index."
        },
        "filterJson": {
          "type": "string",
          "title": "The serialized JSON containing the configuration of the filter.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-tokenfilters.html\nExample value:\n{\n  \"type\": \"stop\",\n  \"stopwords\": \"_english_\"\n}"
        }
      },
      "title": "CustomFilter lets you set a custom filter on an index"
    },
    "Elasticsearch7AnalysisCustomNormalizer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the normalizer. This must be unique per index."
        },
        "normalizerJson": {
          "type": "string",
          "title": "The serialized JSON containing the configuration of the normalizer.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/7.17/normalizer.html\nExample value:\n{\n  \"type\": \"custom\",\n  \"char_filter\": [],\n  \"filter\": [\"lowercase\", \"asciifolding\"]\n}"
        }
      },
      "title": "CustomNormalizer lets you set a normalizer on an index"
    },
    "Elasticsearch7AnalysisCustomTokenizer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the tokenizer. This must be unique per index."
        },
        "tokenizerJson": {
          "type": "string",
          "title": "The serialized JSON containing the configuration of the tokenizer.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-tokenizers.html\nExample value:\n{\n  \"type\": \"pattern\",\n  \"pattern\": \"[ .,!?]\"\n}"
        }
      },
      "title": "CustomTokenizer lets you set a custom tokenizer on an index"
    },
    "PropertyPIITag": {
      "type": "string",
      "enum": [
        "PROPERTY_PII_TAG_CLEAN",
        "PROPERTY_PII_TAG_PII",
        "PROPERTY_PII_TAG_PD"
      ],
      "default": "PROPERTY_PII_TAG_CLEAN",
      "description": "PIITag defines potential PII tags.\n\n - PROPERTY_PII_TAG_CLEAN: clean means the data is not PII or PD.\n - PROPERTY_PII_TAG_PII: PII means Personally Identifiable Information. It is information that can be used to retrieve personal data, such as IAM user ID.\n - PROPERTY_PII_TAG_PD: PD means personal data, such as name, email and address. They are sensitive data we need to protect in our system."
    },
    "PropertyType": {
      "type": "string",
      "enum": [
        "STRING",
        "INT64",
        "DOUBLE",
        "BOOL",
        "TIMESTAMP",
        "GEOPOINT",
        "STRUCT"
      ],
      "default": "STRING"
    },
    "SecondaryIndexPropertyConfigCloudSQL": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "exclude": {
          "type": "boolean"
        }
      }
    },
    "SecondaryIndexPropertyConfigElasticsearch": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "exclude": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecondaryIndexPropertyConfigElasticsearchField"
          },
          "title": "Allows fields to be stored multiple times with different analyzers"
        }
      },
      "title": "Elasticsearch Property Config"
    },
    "SecondaryIndexPropertyConfigElasticsearch7": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Name of the property being stored"
        },
        "index": {
          "type": "boolean",
          "description": "Index controls whether field values are indexed. It accepts true or false and defaults to true. Fields that are not indexed are not queryable."
        },
        "exclude": {
          "type": "boolean",
          "title": "Exclude keeps field from being synced to elasticsearch"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecondaryIndexPropertyConfigElasticsearch7Field"
          },
          "title": "Allows fields to be stored multiple times with different analyzers"
        },
        "ignoreAbove": {
          "type": "string",
          "format": "int64",
          "title": "Ignore_above specifies that strings longer than the ignore_above setting will not be indexed or stored.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/ignore-above.html"
        }
      },
      "title": "Elasticsearch7 Property Config"
    },
    "SecondaryIndexPropertyConfigElasticsearch7Field": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the property being stored"
        },
        "type": {
          "type": "string",
          "title": "Type is what kind of data the field contains, for more https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html"
        },
        "index": {
          "type": "boolean",
          "description": "Index controls whether field values are indexed. It accepts true or false and defaults to true. Fields that are not indexed are not queryable."
        },
        "analyzer": {
          "type": "string",
          "title": "Analyzer lets you specify how you want to process text fields for searching at index time, see https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html\nfor more about the built in analyzers or specifying custom analyzers"
        },
        "searchAnalyzer": {
          "type": "string",
          "title": "Search Analyzer lets you specify the analyzer you want to use for processing a text field for searching at query time, see https://www.elastic.co/guide/en/elasticsearch/reference/current/search-analyzer.html\nfor more about available search analyzer"
        },
        "normalizer": {
          "type": "string",
          "title": "Normalizer specifies which normalizer the field should use, see https://www.elastic.co/guide/en/elasticsearch/reference/7.17/normalizer.html"
        },
        "ignoreAbove": {
          "type": "string",
          "format": "int64",
          "title": "Ignore_above specifies that strings longer than the ignore_above setting will not be indexed or stored.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/ignore-above.html"
        }
      }
    },
    "SecondaryIndexPropertyConfigElasticsearchField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "analyzer": {
          "type": "string"
        }
      }
    },
    "SecondaryIndexPropertyConfigPostgreSQL": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "exclude": {
          "type": "boolean"
        }
      }
    },
    "vstorepbBackupConfig": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/BackupConfigBackupFrequency"
        }
      }
    },
    "vstorepbBigQueryConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The key and value pairs of labels that will be added to the BigQuery table and view\nKeys and values can have a maximum length of 63 characters.\nKeys must begin with a lowercase letter, and contain only lowercase letters, numeric characters, underscores, and dashes."
        }
      }
    },
    "vstorepbCloudSQLConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        },
        "instanceIp": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "clientKey": {
          "type": "string",
          "format": "byte"
        },
        "clientCert": {
          "type": "string",
          "format": "byte"
        },
        "serverCertificateAuthority": {
          "type": "string",
          "format": "byte"
        },
        "projectId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        }
      }
    },
    "vstorepbElasticsearch7Analysis": {
      "type": "object",
      "properties": {
        "analyzers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomAnalyzer"
          }
        },
        "tokenizers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomTokenizer"
          }
        },
        "charFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomCharFilter"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomFilter"
          }
        },
        "normalizers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomNormalizer"
          }
        }
      }
    },
    "vstorepbElasticsearch7Cluster": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "kibanaHost": {
          "type": "string"
        }
      },
      "title": "Elasticsearch7Cluster contains information necessary for VStore to communicate with an arbitrary ES Cluster\nVStore needs to be authed as a user with full CRUD permissions to this cluster"
    },
    "vstorepbElasticsearch7Config": {
      "type": "object",
      "properties": {
        "numberOfShards": {
          "type": "string",
          "format": "int64"
        },
        "numberOfReplicas": {
          "type": "string",
          "format": "int64"
        },
        "refreshInterval": {
          "type": "string"
        },
        "indexName": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/vstorepbElasticsearch7Cluster"
        },
        "analysis": {
          "$ref": "#/definitions/vstorepbElasticsearch7Analysis",
          "description": "Analysis lets you configure custom analyzers, tokenizer, character filters, and token filters on an index.\nAdding a new analyzer/tokenizer/charfilter/filter to an existing index is possible, but referencing the analyzer from fields with existing values or from analyzers who are configured on fields with existing values is not - you need to reindex your data to do that.\nWhenever you are writing a custom analyzer, you should use the Elastic API/Sense to test your analyzer with example values before registering it with VStore. If you do not provide valid JSON configuration, VStore will not be able to update your index."
        },
        "maxNgramDiff": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vstorepbElasticsearchAnalysis": {
      "type": "object",
      "properties": {
        "analyzers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbElasticsearchAnalyzer"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbElasticsearchFilter"
          }
        },
        "charFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbElasticsearchCharFilter"
          }
        },
        "tokenizers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbElasticsearchTokenizer"
          }
        }
      },
      "title": "https://www.elastic.co/guide/en/elasticsearch/guide/current/custom-analyzers.html"
    },
    "vstorepbElasticsearchAnalyzer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "stemExclusion": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stopWords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "charFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenizer": {
          "type": "string"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ElasticsearchAnalyzer configures a custom analyzer that can be built to transform your data into a\nconfiguration that suites your particular needs."
    },
    "vstorepbElasticsearchCharFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        }
      },
      "description": "Character filters are used to \u201ctidy up\u201d a string before it is tokenized."
    },
    "vstorepbElasticsearchCluster": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "ElasticsearchCluster contains information necessary for VStore to communicate with an arbitrary ES Cluster\nVStore needs to be authed as a user with full CRUD permissions"
    },
    "vstorepbElasticsearchConfig": {
      "type": "object",
      "properties": {
        "numberOfShards": {
          "type": "string",
          "format": "int64"
        },
        "numberOfReplicas": {
          "type": "string",
          "format": "int64"
        },
        "refreshInterval": {
          "type": "string"
        },
        "analysis": {
          "$ref": "#/definitions/vstorepbElasticsearchAnalysis"
        },
        "indexName": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/vstorepbElasticsearchCluster"
        }
      },
      "description": "ElasticsearchConfig uses our proprietary clusters as a destination for your indices.\nIf you specify an ElasticsearchCluster, VStore will instead use that cluster as a destination."
    },
    "vstorepbElasticsearchFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        },
        "synonyms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Token filters may change, add, or remove tokens."
    },
    "vstorepbElasticsearchRawConfig": {
      "type": "object",
      "properties": {
        "mappingJson": {
          "type": "string"
        },
        "settingsJson": {
          "type": "string"
        },
        "indexName": {
          "type": "string"
        }
      },
      "description": "ElasticsearchRawConfig is deprecated and will be removed in a future release."
    },
    "vstorepbElasticsearchTokenizer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        }
      },
      "description": "The tokenizer breaks up the string into individual terms or tokens."
    },
    "vstorepbEntity": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/protobufAny"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "values": {
          "$ref": "#/definitions/vstorepbStruct"
        },
        "v1KindId": {
          "type": "string",
          "title": "v1 fields for pubsub forward compatability"
        },
        "v1Values": {
          "type": "object"
        },
        "v1Version": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "vstorepbEntityResult": {
      "type": "object",
      "properties": {
        "keySet": {
          "$ref": "#/definitions/vstorepbKeySet"
        },
        "entity": {
          "$ref": "#/definitions/vstorepbEntity"
        }
      }
    },
    "vstorepbGeoPoint": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "vstorepbGetKindResponse": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of fields that compose of the primary key. The order is important as it is used for building keysets,\nas well as lookups can be done by the leading pieces of a keyset."
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbProperty"
          },
          "description": "Schema for the kind. Indexing of any entities into this namespace/kind requires that a type has been set\nfor every field being indexed.  No inference is done and explicit types are required. Fields also are not\nable to have their types changed or deleted, and only additive changes are allowed once a kind has been created."
        },
        "secondaryIndexes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbSecondaryIndex"
          },
          "description": "Configured set of secondary indexes VStore is replicating to."
        },
        "backupConfig": {
          "$ref": "#/definitions/vstorepbBackupConfig",
          "title": "Backup configuration"
        },
        "extendedKeyLength": {
          "type": "boolean",
          "title": "Allows longer keys, but restricts Secondary Index options (CloudSQL)"
        },
        "description": {
          "type": "string",
          "description": "Description for the kind."
        }
      }
    },
    "vstorepbGetResponse": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbEntityResult"
          }
        }
      }
    },
    "vstorepbKeyFilter": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Keys to filter by. You must always provide parent key components if you provide any children.\neg: keys = [PID, AG-123], rows PID:AG-123:* are matches, but if keys = [AG-123] or [\"\", AG-123], you will not get any matches."
        },
        "prefix": {
          "type": "boolean",
          "title": "if prefix is set to True, the filter will match an incomplete prefix on the last specified key\neg: keys = [PID, AG-4], row PID:AG-456 is a match with partial == true, not a match otherwise"
        }
      }
    },
    "vstorepbKeySet": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "vstorepbListValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbValue"
          }
        }
      }
    },
    "vstorepbLookupFilter": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Deprecated: use `filters` instead"
        },
        "keyFilter": {
          "$ref": "#/definitions/vstorepbKeyFilter"
        },
        "rangeFilter": {
          "$ref": "#/definitions/vstorepbRangeFilter"
        }
      }
    },
    "vstorepbLookupResponse": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbEntityResult"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "vstorepbProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Unique identifier for this property. Must be in snake case format.\nExample(s): account_group_id, listing_id, company_name"
        },
        "type": {
          "$ref": "#/definitions/PropertyType",
          "title": "Type for this property"
        },
        "repeated": {
          "type": "boolean",
          "description": "Indicates if the field is repeated."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates if the field is required. Only validates that the field has been supplied in create/update requests,\nand not the actual value.\nExample(s):\n1) A required string field would allow an empty string if the field was passed, but would fail if the field\nwas not present in the request.\n2) A required int property would allow 0 as a value, but would fail if the field was not supplied in the request."
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vstorepbProperty"
          },
          "description": "Can only be specified if the Type supplied is a STRUCT.\nIs the schema of the structured property."
        },
        "secondaryIndexConfigs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/vstorepbSecondaryIndexPropertyConfig"
          }
        },
        "piiTag": {
          "$ref": "#/definitions/PropertyPIITag"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "vstorepbPubSubConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        }
      }
    },
    "vstorepbRangeFilter": {
      "type": "object",
      "properties": {
        "begin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Key set to start filtering from."
        },
        "end": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Key set to stop filtering at."
        }
      },
      "title": "RangeFilter will bound results by [begin, end)"
    },
    "vstorepbSecondaryIndex": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the secondary index, this name must be unique from other secondary indexes"
        },
        "esRawConfig": {
          "$ref": "#/definitions/vstorepbElasticsearchRawConfig",
          "description": "Deprecated."
        },
        "esConfig": {
          "$ref": "#/definitions/vstorepbElasticsearchConfig"
        },
        "cloudSqlConfig": {
          "$ref": "#/definitions/vstorepbCloudSQLConfig",
          "title": "mysql"
        },
        "pubsubConfig": {
          "$ref": "#/definitions/vstorepbPubSubConfig"
        },
        "bigQueryConfig": {
          "$ref": "#/definitions/vstorepbBigQueryConfig"
        },
        "postgresqlConfig": {
          "$ref": "#/definitions/vstorepbCloudSQLConfig"
        },
        "es7Config": {
          "$ref": "#/definitions/vstorepbElasticsearch7Config"
        }
      }
    },
    "vstorepbSecondaryIndexPropertyConfig": {
      "type": "object",
      "properties": {
        "elasticsearchPropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigElasticsearch"
        },
        "cloudsqlPropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigCloudSQL"
        },
        "postgresqlPropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigPostgreSQL"
        },
        "elasticsearch7PropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigElasticsearch7"
        }
      }
    },
    "vstorepbStruct": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/vstorepbValue"
          }
        }
      }
    },
    "vstorepbValue": {
      "type": "object",
      "properties": {
        "intValue": {
          "type": "string",
          "format": "int64",
          "title": "Represents a int64 value"
        },
        "doubleValue": {
          "type": "number",
          "format": "double",
          "description": "Represents a double value."
        },
        "stringValue": {
          "type": "string",
          "description": "Represents a string value."
        },
        "boolValue": {
          "type": "boolean",
          "description": "Represents a boolean value."
        },
        "structValue": {
          "$ref": "#/definitions/vstorepbStruct",
          "description": "Represents a structured value."
        },
        "timestampValue": {
          "type": "string",
          "format": "date-time",
          "description": "Represents a timestamp value."
        },
        "listValue": {
          "$ref": "#/definitions/vstorepbListValue",
          "description": "Represents a repeated `Value`."
        },
        "geopointValue": {
          "$ref": "#/definitions/vstorepbGeoPoint"
        },
        "bytesValue": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GetMultiCampaignsResponseCampaign": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID"
        },
        "businessId": {
          "type": "string",
          "title": "Business ID"
        },
        "campaignId": {
          "type": "string",
          "title": "Campaign ID"
        },
        "campaignName": {
          "type": "string",
          "title": "Campaign Name"
        }
      }
    },
    "ListPricingTiersResponsePricingTier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID of a pricing tier"
        },
        "minContact": {
          "type": "string",
          "format": "int64",
          "title": "The minimum contact list size of a tier (inclusive)"
        },
        "maxContact": {
          "type": "string",
          "format": "int64",
          "title": "The maximum contact list size of a tier (inclusive)"
        },
        "contactRangeDisplayString": {
          "type": "string",
          "title": "The string for displaying the contact range"
        },
        "wholesalePriceInCents": {
          "type": "string",
          "format": "int64",
          "title": "The wholesale price in USD"
        },
        "retailPriceInCents": {
          "type": "string",
          "format": "int64",
          "title": "The retail price in USD"
        },
        "plan": {
          "$ref": "#/definitions/v1AccountPlan",
          "title": "The corresponding plan (Email/Email Plus) of the pricing tier"
        }
      },
      "title": "PricingTier stands for a single tier"
    },
    "v1AccountPlan": {
      "type": "string",
      "enum": [
        "ACCOUNT_PLAN_INVALID",
        "ACCOUNT_PLAN_EMAIL",
        "ACCOUNT_PLAN_EMAIL_PLUS",
        "ACCOUNT_PLAN_LITE",
        "ACCOUNT_PLAN_STANDARD",
        "ACCOUNT_PLAN_PREMIUM"
      ],
      "default": "ACCOUNT_PLAN_INVALID",
      "title": "The plan of a constant contact account"
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1Account"
        }
      }
    },
    "v1GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetterCampaignData"
          },
          "title": "Thee corresponding campaign data"
        }
      },
      "title": "Response when getting multiple campaigns"
    },
    "v1ListAccountsResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountGroup"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListPricingTiersResponse": {
      "type": "object",
      "properties": {
        "pricingTiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListPricingTiersResponsePricingTier"
          },
          "title": "List of pricing tiers"
        }
      },
      "title": "ListPricingTiersResponse returns the pricing tiers of a partner"
    },
    "v1ListStatsResponse": {
      "type": "object",
      "properties": {
        "statsMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1StatsEntry"
          },
          "title": "Map returning with key with division identifier, team identifiers or 'ALL' developers"
        }
      }
    },
    "v1Stats": {
      "type": "object",
      "properties": {
        "deploymentAverage": {
          "type": "number",
          "format": "double",
          "title": "Deployment average based on aggregation of divisions or teams"
        },
        "deploymentTotalAverage": {
          "type": "number",
          "format": "double",
          "title": "Deployment total average based on aggregation of divisions or teams"
        },
        "currentChangeFailsAverage": {
          "type": "number",
          "format": "double",
          "title": "Current change fails average based on aggregation of divisions or teams"
        },
        "currentLeadTimesAverage": {
          "type": "number",
          "format": "double",
          "title": "Current lead times average based on aggregation of divisions or teams"
        },
        "currentMttrsAverage": {
          "type": "number",
          "format": "double",
          "title": "Current mean time to restore stats average based on aggregation of divisions or teams"
        }
      }
    },
    "v1StatsEntry": {
      "type": "object",
      "properties": {
        "timedStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TimedStats"
          },
          "title": "List of statistics grouped by time period"
        }
      }
    },
    "v1TimedStats": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/v1Stats",
          "title": "Grouping of common statistics"
        },
        "period": {
          "type": "string",
          "title": "Period that the stats were grouped by: last 90, 60, or 30 days"
        }
      }
    },
    "v1CreateLinkResponse": {
      "type": "object",
      "properties": {
        "shortCode": {
          "type": "string",
          "title": "The unique code for a link"
        },
        "domain": {
          "type": "string",
          "title": "The domain for a link"
        }
      },
      "title": "Response returns a short_code"
    },
    "v1GetLinkResponse": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1Link",
          "title": "The link object"
        }
      },
      "title": "Response returns a link"
    },
    "v1GetMultiLinkMetricsResponse": {
      "type": "object",
      "properties": {
        "linkMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkMetrics"
          },
          "title": "A list of metrics for links"
        }
      },
      "title": "Reponse returns a list of metrics for links and paging meta data"
    },
    "v1Link": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the link preview"
        },
        "picture": {
          "type": "string",
          "description": "The preview image associated with the link."
        },
        "description": {
          "type": "string",
          "title": "The description of the link"
        },
        "title": {
          "type": "string",
          "title": "The title for the link"
        }
      }
    },
    "v1LinkMetrics": {
      "type": "object",
      "properties": {
        "totalHits": {
          "type": "string",
          "format": "int64",
          "title": "number of hits for a link"
        },
        "referers": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "number of hits originating from each referer"
        },
        "shortCode": {
          "type": "string",
          "title": "The unique code for a link"
        },
        "longUrl": {
          "type": "string",
          "title": "The url that is shortened"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the shortened link was created"
        },
        "description": {
          "type": "string",
          "title": "Description of the link"
        }
      },
      "title": "Metrics measuring a link's performance"
    },
    "v1ListAllLinkMetricsResponse": {
      "type": "object",
      "properties": {
        "linkMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkMetrics"
          },
          "title": "A list of metrics for links"
        }
      },
      "title": "Reponse returns a list of metrics for links and paging meta data"
    },
    "v1ListLinksResponse": {
      "type": "object",
      "properties": {
        "link": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Link"
          },
          "title": "a match of longUrl and shortCode"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "Reponse for getting all matches of longUrl and shortCode associate with business id"
    },
    "v1Owner": {
      "type": "string",
      "enum": [
        "OWNER_NOT_SPECIFIED",
        "OWNER_SOCIAL_MARKETING",
        "OWNER_CUSTOMER_VOICE",
        "OWNER_CORE_SERVICES",
        "OWNER_EMAIL_VERIFICATION",
        "OWNER_SMB_REFERRAL",
        "OWNER_UNTRACKED",
        "OWNER_INBOX_BUSINESS",
        "OWNER_REPUTATION_MANAGEMENT"
      ],
      "default": "OWNER_NOT_SPECIFIED",
      "description": "- OWNER_UNTRACKED: The UNTRACKED owner is for simple \"CreateLink\" calls that aren't associated to a business.\nThis owner does not support listing links or list metrics, and does not require links to be associated to a\nbusiness ID.\nThis is useful for one-off links like password reset links or email verification links,\nbut shouldn't be used for anything that requires click tracking like links in marketing emails, etc.",
      "title": "Different link owners"
    },
    "v1GetCodeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "A code that can be exchanged for a session"
        }
      },
      "title": "a response containg a code"
    },
    "v1GoogleCredentials": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string",
          "title": "The identity token"
        }
      },
      "title": "login with a google identity token"
    },
    "v1LinkedInCredentials": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "The LinkedIn access token"
        }
      },
      "title": "login with a linkedin access token"
    },
    "v1LoginCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "a user's email"
        },
        "password": {
          "type": "string",
          "title": "a user's password"
        }
      },
      "title": "login with username and password credentials"
    },
    "v1MicrosoftCredentials": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string"
        }
      }
    },
    "v1TokenCredentials": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string",
          "title": "The identity token"
        },
        "provider": {
          "type": "string",
          "description": "Who is the provider of the token, e.g. Google, Facebook, etc."
        }
      },
      "title": "login with an identity token"
    },
    "GetPartnerImportWorkflowInfoRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Filter by partner ID"
        },
        "startedAfter": {
          "type": "string",
          "format": "date-time",
          "title": "Filter by import entity workflow started after this time"
        }
      }
    },
    "GetPartnerImportWorkflowInfoResponseWorkflowInfo": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner ID for Vendasta and Yext"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The account group ID for the import workflow"
        },
        "yextAccountId": {
          "type": "string",
          "title": "The Yext account ID, which starts different than the account group ID"
        },
        "stage": {
          "type": "string",
          "title": "The stage of the import workflow"
        },
        "hasWarnings": {
          "type": "boolean",
          "title": "Whether expected inconsistencies were found during the import (e.g. too many keywords)"
        },
        "errorMessage": {
          "type": "string",
          "title": "The error message if the import workflow failed"
        }
      }
    },
    "PartnerConfigIdentityFederationConfig": {
      "type": "object",
      "properties": {
        "createUsers": {
          "type": "boolean",
          "description": "Whether or not we will create Yext users JIT."
        },
        "updateUsers": {
          "type": "boolean",
          "description": "Whether or not we will update Yext users JIT."
        },
        "addRoles": {
          "type": "boolean",
          "description": "Whether or not we will add roles to a Yext user JIT."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deprecated: What roles to add to a Yext user, if add_roles is true, and the user is missing any of these roles."
        },
        "accountLinkMethod": {
          "$ref": "#/definitions/v1UserConnectionMethod",
          "title": "How should the Yext user account be linked to the Vendasta user account?"
        }
      }
    },
    "PartnerConfigLocationFederationConfig": {
      "type": "object",
      "properties": {
        "processYextToVendasta": {
          "type": "boolean",
          "title": "Whether or not we sync location data from Yext to Vendasta"
        },
        "processVendastaToYext": {
          "type": "boolean",
          "title": "Whether or not we sync location data from Vendasta to Yext"
        },
        "createLocation": {
          "type": "boolean",
          "title": "Whether or not location is enabled in Yext when LSP is activated"
        },
        "removeLocation": {
          "type": "boolean",
          "title": "Whether or not location is disabled in Yext when LSP addon is deactivated"
        }
      }
    },
    "v1Entity": {
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/v1TableReference"
        },
        "values": {
          "$ref": "#/definitions/tesseractv1Struct"
        }
      }
    },
    "v1GetPartnerConfigResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1Configuration",
          "title": "The configuration for the requested partner"
        }
      },
      "title": "Response with configuration for the requested partner"
    },
    "v1GetPartnerImportWorkflowInfoResponse": {
      "type": "object",
      "properties": {
        "workflowInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetPartnerImportWorkflowInfoResponseWorkflowInfo"
          },
          "title": "The stages of the import workflows"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "The total number of import workflows"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there are more import workflows to list"
        },
        "cursor": {
          "type": "string",
          "title": "The cursor to get the next page of import workflows"
        }
      }
    },
    "v1GetResponse": {
      "type": "object",
      "properties": {
        "servers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Server"
          }
        }
      }
    },
    "v1IDFallBackSource": {
      "type": "string",
      "enum": [
        "ID_FALL_BACK_SOURCE_UNKNOWN",
        "ID_FALL_BACK_SOURCE_ACCOUNT_GROUP_CUSTOMER_ID",
        "ID_FALL_BACK_SOURCE_ACCOUNT_GROUP_ID",
        "ID_FALL_BACK_SOURCE_PARTNER_ID",
        "ID_FALL_BACK_SOURCE_BRAND_ID"
      ],
      "default": "ID_FALL_BACK_SOURCE_UNKNOWN",
      "description": "An enumerated constant specifying what the Yext specific fields on the order form can fall back to if not\nspecified."
    },
    "v1IsBusinessReferralResponse": {
      "type": "object",
      "properties": {
        "isReferralAccount": {
          "type": "boolean"
        }
      }
    },
    "v1ListActiveAccountsResponse": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "account_group_ids are the location/entities with an active service on Yext"
        }
      }
    },
    "v1LookupResponse": {
      "type": "object",
      "properties": {
        "record": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Record"
          },
          "title": "A snapshot record"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1PartnerConfig": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "defaultMarkup": {
          "$ref": "#/definitions/v1Markup"
        }
      }
    },
    "v1UserConnectionMethod": {
      "type": "string",
      "enum": [
        "USER_CONNECTION_METHOD_UNKNOWN",
        "USER_CONNECTION_METHOD_EMAIL",
        "USER_CONNECTION_METHOD_USERNAME"
      ],
      "default": "USER_CONNECTION_METHOD_UNKNOWN",
      "title": "- USER_CONNECTION_METHOD_EMAIL: Default: Accounts with the same email address will be linked\n - USER_CONNECTION_METHOD_USERNAME: Accounts in Yext with the username format {yextAccountID}@{vendastaEmail} will be connected"
    },
    "v1YextAPIVersion": {
      "type": "string",
      "enum": [
        "YEXT_API_VERSION_UNKNOWN",
        "YEXT_API_VERSION_NOTSET",
        "YEXT_API_VERSION_V1",
        "YEXT_API_VERSION_V2"
      ],
      "default": "YEXT_API_VERSION_UNKNOWN",
      "title": "An enumerated constant specifying Yext API version to use"
    },
    "v1YextIds": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The Yext account ID. In the Vendasta instance of Yext, this is seen in the user interface as the \"Partner Customer ID\"."
        },
        "entityId": {
          "type": "string",
          "description": "The Yext entity ID. In the Vendasta instance of Yext, this is seen in the suer interface as the \"Partner Location ID\"."
        }
      },
      "description": "YextIDs are the IDs used by Yext to store an entity."
    },
    "GetMultiConfigResponseConfigContainer": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1Oauth2Config"
        }
      }
    },
    "GetMultiScopeResponseScopeContainer": {
      "type": "object",
      "properties": {
        "scope": {
          "$ref": "#/definitions/v1Scope"
        }
      }
    },
    "MutationOAuth2ConfigurationMutation": {
      "type": "object",
      "properties": {
        "authorizationEndpoint": {
          "type": "string"
        },
        "tokenEndpoint": {
          "type": "string"
        },
        "userinfoEndpoint": {
          "type": "string"
        }
      }
    },
    "MutationOpenIDConnectConfigurationMutation": {
      "type": "object",
      "properties": {
        "discoveryEndpoint": {
          "type": "string"
        }
      }
    },
    "ServiceContextAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        }
      }
    },
    "ServiceContextBrand": {
      "type": "object",
      "properties": {
        "groupPath": {
          "type": "string"
        }
      }
    },
    "ServiceContextPartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "ServiceContextSuperAdmin": {
      "type": "object"
    },
    "v1AcsUrl": {
      "type": "object",
      "properties": {
        "binding": {
          "type": "string",
          "description": "Binding defines the transport protocol that will be used to convey SAML messages to service providers."
        },
        "location": {
          "type": "string",
          "description": "Location is the URL of the service provider's assertion consumer service."
        }
      }
    },
    "v1AutoImpersonation": {
      "type": "object",
      "title": "Automatically use the impersonation information from the calling token"
    },
    "v1CreateSamlServiceProviderConfigResponse": {
      "type": "object",
      "properties": {
        "serviceProviderConfigId": {
          "type": "string"
        }
      },
      "description": "Response for the SAML metadata file entry of a service provider.\nservice_provider_config_id is the unique identifier for this metadata file entry for a service provider as the service provider can have multiple metadata file entries."
    },
    "v1GetEntryURLResponse": {
      "type": "object",
      "properties": {
        "entryUrl": {
          "type": "string",
          "title": "The entry URL"
        }
      }
    },
    "v1GetEntryURLWithCodeResponse": {
      "type": "object",
      "properties": {
        "entryUrl": {
          "type": "string",
          "title": "The entry URL, containing the code in the query params"
        }
      }
    },
    "v1GetIdentityProviderConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1IdentityProviderConfiguration"
        }
      }
    },
    "v1GetLogoutURLResponse": {
      "type": "object",
      "properties": {
        "logoutUrl": {
          "type": "string",
          "description": "The url to redirect to for logging out."
        }
      }
    },
    "v1GetMultiConfigResponse": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiConfigResponseConfigContainer"
          },
          "title": "list of configurations"
        }
      },
      "title": "Response for getting multiple configuration entities"
    },
    "v1GetMultiEntryURLResponse": {
      "type": "object",
      "properties": {
        "entryUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An ordered list of entry urls. Order corresponds to the service provider id request order."
        }
      }
    },
    "v1GetMultiScopeResponse": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiScopeResponseScopeContainer"
          }
        }
      }
    },
    "v1GetSAMLIdentityProviderMetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "string"
        }
      },
      "title": "Message definition for SAML identity provider metadata response.\nExample response body:\n{\n  \"metadata\": \"xml string representation of IDP metadata\"\n}"
    },
    "v1GetServiceProviderResponse": {
      "type": "object",
      "properties": {
        "serviceProvider": {
          "$ref": "#/definitions/v1ServiceProviderConfig"
        }
      }
    },
    "v1HasCustomIdentityProviderResponse": {
      "type": "object",
      "properties": {
        "hasCustomIdp": {
          "type": "boolean"
        }
      }
    },
    "v1IdentityProviderConfiguration": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "clientId": {
          "type": "string"
        },
        "openId": {
          "$ref": "#/definitions/v1OpenIDConnectConfiguration"
        },
        "oauth2": {
          "$ref": "#/definitions/v1OAuth2Configuration"
        }
      }
    },
    "v1ListConfigsResponse": {
      "type": "object",
      "properties": {
        "clientConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Oauth2Config"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListSAMLServiceProviderConfigsResponse": {
      "type": "object",
      "properties": {
        "serviceProviderConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SamlServiceProviderConfig"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "description": "Response Message definition for List SAML Service Provider Configurations for particular service provider id."
    },
    "v1ListScopesResponse": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Scope"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListServiceProvidersResponse": {
      "type": "object",
      "properties": {
        "serviceProviders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceProviderConfig"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1NoImpersonation": {
      "type": "object",
      "title": "Don't use any impersonation at all"
    },
    "v1OAuth2Configuration": {
      "type": "object",
      "properties": {
        "authorizationEndpoint": {
          "type": "string",
          "description": "The URL of the authorization server's authorization endpoint."
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "The URL of the authorization server's token endpoint."
        },
        "userinfoEndpoint": {
          "type": "string",
          "description": "The URL of the user info endpoint. The user info endpoint returns the claims requested by SSO."
        }
      }
    },
    "v1Oauth2Config": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "title": "Unique client id this configuration is keyed by"
        },
        "serviceProviderId": {
          "type": "string",
          "title": "The service provider this configuration belongs to"
        },
        "name": {
          "type": "string",
          "title": "Human-readable name for this configuration"
        },
        "redirectUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized redirect URIs"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "logoutUri": {
          "type": "string",
          "title": "The logout uri will be used during the OpenID Connect logout workflow.\nThis must be an absolute uri. The logout uri will be iFramed into the sso logout page if a user has visited\nthis client's application"
        }
      },
      "title": "Configuration for oauth2"
    },
    "v1OpenIDConnectConfiguration": {
      "type": "object",
      "properties": {
        "discoveryEndpoint": {
          "type": "string",
          "description": "The wellknown OpenID Connect discovery endpoint URL."
        }
      }
    },
    "v1RegenerateSAMLServiceProviderConfigCertificateResponse": {
      "type": "object",
      "properties": {
        "certificate": {
          "type": "string",
          "title": "The new certificate"
        }
      }
    },
    "v1SamlServiceProviderConfig": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string",
          "title": "Unique identifier of a SAML service provider"
        },
        "acsUrls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AcsUrl"
          },
          "title": "SAML Assertion Consumer Service URL is the Base URL of the service provider to construct SAML endpoints from,\nneeds to be a URL with protocol, server, port and context path"
        },
        "signedAuthRequest": {
          "type": "boolean",
          "title": "Flag indicating whether this SAML service provider signs authentication requests"
        },
        "wantSignedAssertion": {
          "type": "boolean",
          "title": "Flag indicating whether this SAML service provider requires signed assertions in the SAML response message"
        },
        "wantEncryptedAssertion": {
          "type": "boolean",
          "title": "Flag indicating whether this SAML service provider requires encrypted assertions in the SAML response message"
        },
        "nameIdFormats": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Aligns the expectations between the identity provider and the service provider on format the authenticated user identity that is\ncommunicated through the NameID attribute in the assertion. Like persistence, email address, unspecified or transient.\n\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\""
        },
        "signingCertificate": {
          "type": "string",
          "title": "Signing certificate of a SAML service provider"
        },
        "encryptionCertificate": {
          "type": "string",
          "title": "Encryption certificate of a SAML service provider"
        },
        "serviceProviderConfigId": {
          "type": "string",
          "title": "Primary key of a SAML service provider"
        },
        "serviceProviderId": {
          "type": "string",
          "title": "Unique Identifier of a service provider"
        }
      },
      "description": "Service provider metadata contains keys, services and URLs defining SAML endpoints of your application (here Comporium).\nMetadata can be either generated automatically upon first request to the service, or it can be pre-created .\nOnce created metadata needs to be provided to the identity providers (here Vendasta) with whom we want to establish trust."
    },
    "v1Scope": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Unique ID of the scope. For example: partner.accountGroup.editBusinessProfile"
        },
        "displayName": {
          "type": "string",
          "title": "Display name of the scope. For example: Edit Business Profile"
        }
      },
      "description": "Scope is associated to 1 or many resources. They describe an action that can be taken against that specific\nresource. A scope can be granted by a higher resource level, if applicable."
    },
    "v1ServiceContext": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/ServiceContextAccount"
        },
        "partner": {
          "$ref": "#/definitions/ServiceContextPartner"
        },
        "superAdmin": {
          "$ref": "#/definitions/ServiceContextSuperAdmin"
        },
        "brand": {
          "$ref": "#/definitions/ServiceContextBrand"
        }
      },
      "description": "The service context is used to determine which identity provider to use. This context is used in conjunction with\nthe identity context, provided by the identity provider. The two contexts require domain logic to be glued together;\nfor example, when the service provider provides an account, we can determine the partner from that account, then\nmatch that up to an identity provider Partner context."
    },
    "v1ServiceProviderConfig": {
      "type": "object",
      "properties": {
        "serviceProviderId": {
          "type": "string",
          "title": "Identifier of a service provider"
        },
        "entryUrl": {
          "type": "string",
          "description": "The entry url of the application, must handle a code on the request."
        },
        "sessionUrl": {
          "type": "string",
          "title": "The url to be called to get a code for entering the application"
        },
        "primaryDomain": {
          "type": "string",
          "title": "The base url for the service provider"
        },
        "alternativeDomains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Alternative domains for a service provider"
        },
        "ownedAndOperated": {
          "type": "boolean",
          "title": "Denotes whether or not a service provider is owned and operated by Vendasta"
        },
        "logoutUrl": {
          "type": "string",
          "description": "The back-channel logout webhook URL for the service provider."
        },
        "serviceProviderType": {
          "$ref": "#/definitions/v1ServiceProviderType",
          "title": "Service Provider Type denotes which login screen SSO should use for this service"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID this service provider will belong to"
        },
        "preApprovedScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The scopes that are pre-approved for this service provider.\nIf owned_and_operated is set to true, these scopes will be automatically approved, however, scopes not in this list will fail the auth flow or require user consent for the scopes not in the list."
        }
      },
      "title": "ServiceProviderConfig for service provider for OAuth2"
    },
    "v1ServiceProviderType": {
      "type": "string",
      "enum": [
        "SERVICE_PROVIDER_TYPE_PRODUCT",
        "SERVICE_PROVIDER_TYPE_PLATFORM"
      ],
      "default": "SERVICE_PROVIDER_TYPE_PRODUCT",
      "title": "- SERVICE_PROVIDER_TYPE_PRODUCT: The Service Provider should use the configured Product login page for the partner\nBy default this would use VBC\n - SERVICE_PROVIDER_TYPE_PLATFORM: The Service Provider should use the configured Platform login page for the partner\nBy default this would use VLC"
    },
    "v1UpdateConfigRequestMutation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the client"
        },
        "redirectUris": {
          "$ref": "#/definitions/v1UpdateConfigRequestMutationRepeatedStringMutation",
          "title": "Authorized redirect URIs"
        },
        "logoutUri": {
          "type": "string",
          "description": "Logout uri of a client configuration\nDeprecated: set a back-channel logout URL on your service-provider-id instead.\nThis field is ignored."
        }
      }
    },
    "v1UpdateConfigRequestMutationRepeatedStringMutation": {
      "type": "object",
      "properties": {
        "repeatedString": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpdateIdentityProviderConfigurationRequestMutation": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "openId": {
          "$ref": "#/definitions/MutationOpenIDConnectConfigurationMutation"
        },
        "replaceOpenId": {
          "$ref": "#/definitions/v1OpenIDConnectConfiguration"
        },
        "oauth2": {
          "$ref": "#/definitions/MutationOAuth2ConfigurationMutation"
        },
        "replaceOauth2": {
          "$ref": "#/definitions/v1OAuth2Configuration"
        }
      }
    },
    "v1UpdateScopeRequestMutation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1UpdateServiceProviderRequestMutation": {
      "type": "object",
      "properties": {
        "entryUrl": {
          "type": "string",
          "title": "The entry url of the service provider"
        },
        "sessionUrl": {
          "type": "string",
          "title": "The url to be called to get a code for entering the application"
        },
        "primaryDomain": {
          "type": "string",
          "title": "The base url for the service provider"
        },
        "alternativeDomains": {
          "$ref": "#/definitions/v1UpdateServiceProviderRequestMutationRepeatedStringMutation",
          "title": "Alternative domains for a service provider"
        },
        "ownedAndOperated": {
          "type": "boolean",
          "title": "Denotes whether or not a service provider is owned and operated by Vendasta"
        },
        "logoutUrl": {
          "type": "string",
          "title": "The url to be called when a user logs out"
        },
        "serviceProviderType": {
          "$ref": "#/definitions/v1ServiceProviderType",
          "title": "Service Provider Type denotes which login screen SSO should use for this service"
        },
        "preApprovedScopes": {
          "$ref": "#/definitions/v1UpdateServiceProviderRequestMutationRepeatedStringMutation",
          "title": "Pre approved scopes for the service provider; should only be set for service providers owned by Vendasta"
        }
      }
    },
    "v1UpdateServiceProviderRequestMutationRepeatedStringMutation": {
      "type": "object",
      "properties": {
        "repeatedString": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ActivationState": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "Account ID (AGID) of the activation state"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID of the activation state"
        },
        "marketId": {
          "type": "string",
          "title": "Market ID of the activation state"
        },
        "activationId": {
          "type": "string",
          "title": "Activation ID of the activation state"
        },
        "editionId": {
          "type": "string",
          "title": "Edition ID of the activation state"
        },
        "status": {
          "type": "string",
          "title": "Status of the activation state"
        }
      }
    },
    "v1ActivationStateResponse": {
      "type": "object",
      "properties": {
        "activationState": {
          "$ref": "#/definitions/v1ActivationState"
        }
      }
    },
    "FilterValue": {
      "type": "object",
      "properties": {
        "boolean": {
          "type": "boolean"
        },
        "integer": {
          "type": "string",
          "format": "int64"
        },
        "float": {
          "type": "number",
          "format": "float"
        },
        "string": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dateDefault": {
          "$ref": "#/definitions/v1DateDefault"
        },
        "phone": {
          "$ref": "#/definitions/v1Phone"
        }
      }
    },
    "RecipientClickStatsAccount": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "the account group id"
        }
      }
    },
    "RecipientClickStatsRecipient": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "title": "recipient email address"
        }
      }
    },
    "campaignsv1Focuses": {
      "type": "string",
      "enum": [
        "FOCUSES_UNSPECIFIED",
        "FOCUSES_ACQUIRE",
        "FOCUSES_UPSELL",
        "FOCUSES_ADOPT",
        "FOCUSES_NONE"
      ],
      "default": "FOCUSES_UNSPECIFIED",
      "title": "Enumeration of possible focus types a campaign can be"
    },
    "campaignsv1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "Cursor and page size for paging request"
    },
    "campaignsv1Statuses": {
      "type": "string",
      "enum": [
        "STATUSES_UNSPECIFIED",
        "STATUSES_DRAFT",
        "STATUSES_PUBLISHED",
        "STATUSES_ACTIVE",
        "STATUSES_ARCHIVED"
      ],
      "default": "STATUSES_UNSPECIFIED",
      "title": "Enumeration of possible statuses a campaign can have"
    },
    "v1AddContactToCampaignResponse": {
      "type": "object",
      "properties": {
        "contactCampaignId": {
          "type": "string"
        }
      }
    },
    "v1AsyncWorkStatus": {
      "type": "string",
      "enum": [
        "ASYNC_WORK_STATUS_INVALID",
        "ASYNC_WORK_STATUS_IN_PROGRESS",
        "ASYNC_WORK_STATUS_COMPLETE",
        "ASYNC_WORK_STATUS_ERROR"
      ],
      "default": "ASYNC_WORK_STATUS_INVALID"
    },
    "v1CampaignDetailStats": {
      "type": "object",
      "properties": {
        "active": {
          "type": "string",
          "format": "int64",
          "title": "Number of active accounts on a campaign"
        },
        "clicksPerOpenedEmail": {
          "type": "string",
          "format": "int64",
          "title": "Click through rate of opened emails"
        },
        "completed": {
          "type": "string",
          "format": "int64",
          "title": "How may recipient campaigns have completed"
        },
        "delivered": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been delivered on the campaign"
        },
        "opened": {
          "type": "string",
          "format": "int64",
          "title": "Open rate of a campaign"
        },
        "sent": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been sent"
        },
        "stopped": {
          "type": "string",
          "format": "int64",
          "title": "How may recipient campaigns have stopped"
        },
        "totalAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Total number of accounts on this campaign"
        },
        "totalLeads": {
          "type": "string",
          "format": "int64",
          "title": "Total number of unique accounts with opened emails"
        },
        "totalRecipients": {
          "type": "string",
          "format": "int64",
          "title": "Total number of recipients"
        },
        "undeliverable": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been undelivered"
        },
        "waitingOnRateLimit": {
          "type": "string",
          "format": "int64",
          "title": "How may recipient campaigns are waiting on rate limit"
        }
      }
    },
    "v1CampaignQuotaCategory": {
      "type": "string",
      "enum": [
        "CAMPAIGN_QUOTA_TYPE_INVALID",
        "CAMPAIGN_QUOTA_TYPE_EMAIL",
        "CAMPAIGN_QUOTA_TYPE_SMS"
      ],
      "default": "CAMPAIGN_QUOTA_TYPE_INVALID"
    },
    "v1CampaignRecipient": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1CampaignScheduleStatus": {
      "type": "string",
      "enum": [
        "CAMPAIGN_SCHEDULE_STATUS_UNSPECIFIED",
        "CAMPAIGN_SCHEDULE_STATUS_ACTIVE",
        "CAMPAIGN_SCHEDULE_STATUS_WAITING_ON_RATE_LIMIT",
        "CAMPAIGN_SCHEDULE_STATUS_STOPPED",
        "CAMPAIGN_SCHEDULE_STATUS_COMPLETED"
      ],
      "default": "CAMPAIGN_SCHEDULE_STATUS_UNSPECIFIED",
      "title": "Enumeration of possible campaign schedule statuses"
    },
    "v1CampaignState": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STATE_UNSPECIFIED",
        "CAMPAIGN_STATE_ACTIVE",
        "CAMPAIGN_STATE_IDLE"
      ],
      "default": "CAMPAIGN_STATE_UNSPECIFIED",
      "title": "Enumeration of possible campaign states"
    },
    "v1CampaignStepEvent": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/v1CampaignStepEventType",
          "title": "The event type of the step"
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date for the event"
        }
      }
    },
    "v1CampaignStepEventType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STEP_EVENT_TYPE_UNSPECIFIED",
        "CAMPAIGN_STEP_EVENT_TYPE_PROCESSED",
        "CAMPAIGN_STEP_EVENT_TYPE_DROPPED",
        "CAMPAIGN_STEP_EVENT_TYPE_DELIVERED",
        "CAMPAIGN_STEP_EVENT_TYPE_DEFERRED",
        "CAMPAIGN_STEP_EVENT_TYPE_BOUNCE",
        "CAMPAIGN_STEP_EVENT_TYPE_OPEN",
        "CAMPAIGN_STEP_EVENT_TYPE_CLICK",
        "CAMPAIGN_STEP_EVENT_TYPE_SPAM_REPORT",
        "CAMPAIGN_STEP_EVENT_TYPE_UNSUBSCRIBE",
        "CAMPAIGN_STEP_EVENT_TYPE_CREATED",
        "CAMPAIGN_STEP_EVENT_TYPE_NOT_REQUIRED",
        "CAMPAIGN_STEP_EVENT_TYPE_REFRESHED"
      ],
      "default": "CAMPAIGN_STEP_EVENT_TYPE_UNSPECIFIED",
      "title": "Enumeration of possible campaign step event types"
    },
    "v1CampaignStepInterface": {
      "type": "object",
      "properties": {
        "campaignStepId": {
          "type": "string",
          "title": "Identifier of the campaign step"
        },
        "stepType": {
          "$ref": "#/definitions/v1CampaignStepType",
          "title": "Whether the step is an email or a snapshot creation event"
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template for the step"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64",
          "title": "Delay between this step and the previous one"
        },
        "name": {
          "type": "string",
          "title": "Name of the step"
        }
      }
    },
    "v1CampaignStepSendStatusType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_UNSPECIFIED",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_UNSENT",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_QUEUED",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_SENDING",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_SENT"
      ],
      "default": "CAMPAIGN_STEP_SEND_STATUS_TYPE_UNSPECIFIED",
      "title": "Enumeration of possible campaign step send status types"
    },
    "v1CampaignStepStats": {
      "type": "object",
      "properties": {
        "campaignStepId": {
          "type": "string"
        },
        "delivered": {
          "type": "string",
          "format": "int64"
        },
        "opens": {
          "type": "string",
          "format": "int64"
        },
        "openRate": {
          "type": "number",
          "format": "double"
        },
        "clickToOpenRate": {
          "type": "number",
          "format": "double"
        },
        "bounced": {
          "type": "string",
          "format": "int64"
        },
        "spam": {
          "type": "string",
          "format": "int64"
        },
        "unsubscribed": {
          "type": "string",
          "format": "int64"
        },
        "dropped": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "pending": {
          "type": "string",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "refreshed": {
          "type": "string",
          "format": "int64"
        },
        "notRequired": {
          "type": "string",
          "format": "int64"
        },
        "sent": {
          "type": "string",
          "format": "int64"
        },
        "stopped": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CampaignStepType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STEP_TYPE_UNSPECIFIED",
        "CAMPAIGN_STEP_TYPE_EMAIL",
        "CAMPAIGN_STEP_TYPE_SNAPSHOT_CREATION",
        "CAMPAIGN_STEP_TYPE_SMS"
      ],
      "default": "CAMPAIGN_STEP_TYPE_UNSPECIFIED",
      "title": "Enumeration of possible campaign step types"
    },
    "v1CampaignTag": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        }
      }
    },
    "v1CheckDuplicateCampaignStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AsyncWorkStatus"
        },
        "campaignId": {
          "type": "string",
          "description": "ID of the new campaign ID. Should only be provided when status is \"success\"."
        }
      }
    },
    "v1CheckDuplicateCampaignStepStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1DuplicateCampaignStepStatus"
        }
      }
    },
    "v1Colors": {
      "type": "object",
      "properties": {
        "textColor": {
          "type": "string"
        },
        "titleColor": {
          "type": "string"
        },
        "subtitleColor": {
          "type": "string"
        },
        "linkColor": {
          "type": "string"
        },
        "footerTextColor": {
          "type": "string"
        },
        "textBackground": {
          "type": "string"
        },
        "pageBackground": {
          "type": "string"
        }
      }
    },
    "v1ContactType": {
      "type": "string",
      "enum": [
        "CONTACT_TYPE_INVALID",
        "CONTACT_TYPE_EMAIL"
      ],
      "default": "CONTACT_TYPE_INVALID"
    },
    "v1ConvertLegacyTemplateResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1CreateCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        }
      }
    },
    "v1CreateResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1CreateTagResponse": {
      "type": "object",
      "properties": {
        "campaignTag": {
          "$ref": "#/definitions/v1CampaignTag"
        }
      }
    },
    "v1DateFilter": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1DateField",
          "title": "Which task date field the date filter applies to"
        },
        "rangeStart": {
          "type": "string",
          "format": "date-time",
          "title": "Search tasks that have a date after the specified time"
        },
        "rangeEnd": {
          "type": "string",
          "format": "date-time",
          "title": "Search tasks that have a date before the specified time"
        }
      },
      "title": "Filter tasks based on date ranges"
    },
    "v1DaysOfTheWeek": {
      "type": "string",
      "enum": [
        "DAYS_OF_THE_WEEK_MONDAY",
        "DAYS_OF_THE_WEEK_TUESDAY",
        "DAYS_OF_THE_WEEK_WEDNESDAY",
        "DAYS_OF_THE_WEEK_THURSDAY",
        "DAYS_OF_THE_WEEK_FRIDAY",
        "DAYS_OF_THE_WEEK_SATURDAY",
        "DAYS_OF_THE_WEEK_SUNDAY"
      ],
      "default": "DAYS_OF_THE_WEEK_MONDAY"
    },
    "v1DeletedTagsPolicy": {
      "type": "string",
      "enum": [
        "DELETED_TAGS_POLICY_EXCLUDE_FROM_RESPONSE"
      ],
      "default": "DELETED_TAGS_POLICY_EXCLUDE_FROM_RESPONSE",
      "title": "- DELETED_TAGS_POLICY_EXCLUDE_FROM_RESPONSE: If a campaign is associated to a tag ID that has been deleted or is\notherwise missing, that tag will be excluded from the response"
    },
    "v1DuplicateCampaignDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the duplicated campaign"
        }
      }
    },
    "v1DuplicateCampaignResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string",
          "title": "An ID which can be fed into the"
        }
      }
    },
    "v1DuplicateCampaignStepResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string",
          "title": "An ID which can be fed into the"
        }
      }
    },
    "v1DuplicateCampaignStepStatus": {
      "type": "string",
      "enum": [
        "DUPLICATE_CAMPAIGN_STEP_STATUS_INVALID",
        "DUPLICATE_CAMPAIGN_STEP_STATUS_IN_PROGRESS",
        "DUPLICATE_CAMPAIGN_STEP_STATUS_COMPLETE"
      ],
      "default": "DUPLICATE_CAMPAIGN_STEP_STATUS_INVALID",
      "title": "Deprecated: use AsyncWorkStatus"
    },
    "v1EmailBuilderConfiguration": {
      "type": "object",
      "properties": {
        "googleAnalyticsOptions": {
          "$ref": "#/definitions/v1GoogleAnalyticsOptions"
        },
        "pageSetup": {
          "$ref": "#/definitions/v1PageSetup"
        },
        "topLogo": {
          "$ref": "#/definitions/v1TopLogo"
        },
        "footer": {
          "$ref": "#/definitions/v1Footer"
        },
        "contentBlocks": {
          "type": "string"
        },
        "colors": {
          "$ref": "#/definitions/v1Colors"
        }
      }
    },
    "v1EmailBuilderTemplate": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "The unique identifier for fetching this template"
        },
        "templateDisplayName": {
          "type": "string",
          "title": "The display name for the template"
        },
        "templateJson": {
          "type": "string",
          "description": "The JSON data which comprises the email content, layout, etc. when loaded by the Email Builder."
        },
        "previewUrl": {
          "type": "string",
          "title": "The URL where the image preview of the template is stored"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the template was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the template was updated"
        },
        "templateHtml": {
          "type": "string",
          "title": "The HTML data which comprises the email content, layout, etc"
        },
        "templateSubject": {
          "type": "string",
          "title": "the subject of the template"
        }
      }
    },
    "v1EmailBuilderTemplateFocuses": {
      "type": "string",
      "enum": [
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_UNSPECIFIED",
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_ACQUIRE",
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_UPSELL",
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_ADOPT"
      ],
      "default": "EMAIL_BUILDER_TEMPLATE_FOCUSES_UNSPECIFIED",
      "title": "Enumeration of possible focus types a campaign can be"
    },
    "v1EmailBuilderTemplateStatuses": {
      "type": "string",
      "enum": [
        "EMAIL_BUILDER_TEMPLATE_STATUSES_UNSPECIFIED",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_DRAFT",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_PUBLISHED",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_ACTIVE",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_ARCHIVED"
      ],
      "default": "EMAIL_BUILDER_TEMPLATE_STATUSES_UNSPECIFIED",
      "title": "Enumeration of possible statuses a campaign can have"
    },
    "v1EmailTemplateStruct": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "Unique identifier of the template"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique identifier of the partner that owns this template"
        },
        "marketId": {
          "type": "string",
          "title": "Unique identifier of the market that this template belongs to"
        },
        "name": {
          "type": "string",
          "title": "Name of the template"
        },
        "campaignFocus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The focus of the campaign that this template belongs to"
        },
        "status": {
          "$ref": "#/definitions/v1TemplateStatus",
          "title": "The status of the template (Draft, Published)"
        },
        "isEditable": {
          "type": "boolean",
          "title": "Whether the template is editable or not"
        },
        "updatedByUserEmail": {
          "type": "string",
          "title": "User that last updated the template"
        },
        "createdByUserEmail": {
          "type": "string",
          "title": "User that created the template"
        },
        "publishedByUserEmail": {
          "type": "string",
          "title": "User that published the template"
        },
        "subject": {
          "type": "string",
          "title": "The subject of the template"
        },
        "htmlBody": {
          "type": "string",
          "title": "The html body of the template"
        },
        "useFullHtml": {
          "type": "boolean",
          "title": "Whether full html should be used or not"
        },
        "fullHtml": {
          "type": "string",
          "title": "The full html body of the template"
        },
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version number of the template"
        }
      }
    },
    "v1ExtractLinkTrackingDataForTemplateResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkTrackingData"
          },
          "title": "List of clickable links found in template"
        }
      }
    },
    "v1Feature": {
      "type": "string",
      "enum": [
        "SEND_UNKNOWN",
        "SEND_SMS",
        "SEND_EMAIL",
        "SEND_SNAPSHOT",
        "SEND_EMAIL_ADDONS"
      ],
      "default": "SEND_UNKNOWN"
    },
    "v1Footer": {
      "type": "object",
      "properties": {
        "disclaimer": {
          "type": "string"
        },
        "showContactInfo": {
          "type": "boolean"
        },
        "showUnsubscribeLinks": {
          "type": "boolean"
        }
      }
    },
    "v1GetAggregatedCampaignStatsResponse": {
      "type": "object",
      "properties": {
        "totalAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Sum of all unique accounts for campaign(s) after filtering"
        },
        "averageClickThroughRate": {
          "type": "number",
          "format": "double",
          "title": "Average click through rate of filtered campaign(s)"
        },
        "averageOpenRate": {
          "type": "number",
          "format": "double",
          "title": "Average open rate of filtered campaign(s)"
        },
        "totalActiveCampaigns": {
          "type": "string",
          "format": "int64",
          "title": "Sum of active campaigns"
        }
      }
    },
    "v1GetAvailableStepTypesForSenderResponse": {
      "type": "object",
      "properties": {
        "availableStepTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Feature"
          },
          "title": "The available step types for the sender"
        }
      }
    },
    "v1GetCampaignDetailsStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/v1CampaignDetailStats",
          "title": "The overall stats for a given campaign"
        }
      }
    },
    "v1GetCampaignQuotaResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The count of the quota"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "The limit of the quota"
        },
        "quotaStartDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of the quota"
        },
        "quotaEndDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of the quota"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The last updated date of the quota"
        }
      }
    },
    "v1GetCampaignResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1Campaign",
          "title": "Campaign to get"
        }
      }
    },
    "v1GetCampaignStepContentResponse": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string",
          "title": "The HTML for the campaign step"
        },
        "subject": {
          "type": "string",
          "title": "The subject line for the campaign step"
        }
      }
    },
    "v1GetCampaignStepStatsResponse": {
      "type": "object",
      "properties": {
        "stepStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepStats"
          }
        }
      }
    },
    "v1GetEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1EmailTemplateStruct"
        }
      }
    },
    "v1GetEmailTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailTemplateStruct"
          }
        }
      }
    },
    "v1GetLinkStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkStats"
          },
          "title": "a LinkStats item per link in template"
        },
        "totalClicksOnCampaignStep": {
          "type": "string",
          "format": "int64",
          "title": "Total clicks across all links on this campaign step"
        }
      }
    },
    "v1GetRecipientCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "$ref": "#/definitions/v1RecipientCampaignStruct",
          "title": "Recipient campaign"
        }
      }
    },
    "v1GetRecipientLinkClickStatsRequestPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "v1GetRecipientLinkClickStatsResponse": {
      "type": "object",
      "properties": {
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientClickStats"
          }
        }
      }
    },
    "v1GetRecipientResponse": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string",
          "title": "Unique ID associated to the recipient"
        },
        "email": {
          "type": "string",
          "title": "The email address associated with the Recipient"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The type of the sender (partner, business), and the associated ID"
        },
        "recipient": {
          "$ref": "#/definitions/v1RecipientV2",
          "title": "The type of the recipient (business, crm) and the associated ID"
        }
      }
    },
    "v1GetterCampaignData": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner"
        },
        "marketId": {
          "type": "string",
          "title": "ID for market that the stats pertain to"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepInterface"
          },
          "title": "Details of the steps in the campaign"
        },
        "campaignScheduleVersion": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign schedule"
        },
        "eventsCount": {
          "type": "string",
          "format": "int64",
          "title": "Numerical count for number of events/steps in the campaign"
        },
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        },
        "status": {
          "$ref": "#/definitions/campaignsv1Statuses",
          "title": "Status of the campaign"
        },
        "locale": {
          "type": "string",
          "title": "The localization code for the campaign"
        },
        "isEnabled": {
          "type": "boolean",
          "title": "If the campaign is enabled or not"
        },
        "isEditable": {
          "type": "boolean",
          "title": "If the campaign can be edited"
        },
        "hiddenForPartners": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Which partners this campaign is hidden for"
        },
        "isPremade": {
          "type": "boolean",
          "title": "If a campaign is premade/recommended or not"
        },
        "parentCampaignId": {
          "type": "string",
          "description": "If duplicated, the campaign id of the campaign which this campaign was directly duplicated from."
        },
        "rootCampaignId": {
          "type": "string",
          "description": "If duplicated, the campaign id of the campaign which this campaign was ultimately duplicated from."
        },
        "createdUser": {
          "type": "string",
          "title": "User that created the campaign"
        },
        "updatedUser": {
          "type": "string",
          "title": "User that last updated the campaign"
        },
        "publishedUser": {
          "type": "string",
          "title": "User that published the campaign"
        },
        "emailCategoryId": {
          "type": "string",
          "title": "email_category_id is the category identifier of the campaign"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The date that the campaign was published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time the campaign was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time the campaign was updated"
        }
      }
    },
    "v1GoogleAnalyticsOptions": {
      "type": "object",
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "campaignSource": {
          "type": "string"
        }
      }
    },
    "v1ImageAlign": {
      "type": "string",
      "enum": [
        "IMAGE_ALIGN_UNSPECIFIED",
        "IMAGE_ALIGN_LEFT",
        "IMAGE_ALIGN_CENTER",
        "IMAGE_ALIGN_RIGHT"
      ],
      "default": "IMAGE_ALIGN_UNSPECIFIED"
    },
    "v1IsFeatureActiveForSenderResponse": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "title": "Whether the feature is active for the sender"
        }
      }
    },
    "v1IsProductActiveForSenderResponse": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "title": "Whether the product is active for the sender"
        }
      }
    },
    "v1LegacyGetRecipientCampaignsByAgidResponse": {
      "type": "object",
      "properties": {
        "recipientCampaignPairs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientCampaignPair"
          }
        }
      }
    },
    "v1LegacyRateLimitedAddToCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string"
        }
      }
    },
    "v1LinkStats": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The normalized url"
        },
        "totalClicks": {
          "type": "string",
          "format": "int64",
          "title": "Total number of times this link has been clicked"
        },
        "uniqueClicks": {
          "type": "string",
          "format": "int64",
          "title": "Number of unique clicks on this link"
        },
        "clickRate": {
          "type": "number",
          "format": "double",
          "title": "Rate of clicks per delivered email"
        }
      }
    },
    "v1LinkTrackingData": {
      "type": "object",
      "properties": {
        "normalizedUrl": {
          "type": "string",
          "title": "Normalized (i.e. unhydrated) version of the link to track"
        },
        "hydratedUrl": {
          "type": "string",
          "title": "Hydrated version of the link to track"
        }
      }
    },
    "v1ListCampaignStatsForSenderResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCampaignStatsStruct"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListCampaignStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCampaignStatsStruct"
          },
          "title": "Repeated values defining the list's response"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      }
    },
    "v1ListCampaignStatsStruct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        },
        "totalAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Sum of all unique accounts for on a campaign"
        },
        "activeAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Number of active accounts on a campaign"
        },
        "emailsDelivered": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been delivered on the campaign"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double",
          "title": "Click through rate of a campaign"
        },
        "openRate": {
          "type": "number",
          "format": "double",
          "title": "Open rate of a campaign"
        },
        "status": {
          "$ref": "#/definitions/campaignsv1Statuses",
          "title": "The status of the campaign"
        },
        "state": {
          "$ref": "#/definitions/v1CampaignState",
          "title": "The state the campaign is in"
        },
        "automations": {
          "type": "boolean",
          "title": "If the campaign has automations on it or not"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "eventsCount": {
          "type": "string",
          "format": "int64",
          "title": "How many events have/will occur on a campaign"
        },
        "isEditable": {
          "type": "boolean",
          "title": "If a campaign is editable or not"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCampaignTagDetails"
          },
          "title": "Any non-deleted tags on the"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time the campaign was updated"
        }
      }
    },
    "v1ListCampaignTagDetails": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "v1ListCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetterCampaignData"
          },
          "title": "List of campaign data"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      },
      "title": "Response from getting a list of campaigns"
    },
    "v1ListCampaignsV2Response": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetterCampaignData"
          },
          "title": "list of campaigns for a sender"
        },
        "metadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging meta data"
        }
      }
    },
    "v1ListLinksInTemplateResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of clickable links found in template"
        }
      }
    },
    "v1ListRecipientCampaignsResponse": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientCampaignStruct"
          }
        }
      }
    },
    "v1ListRecipientsResponse": {
      "type": "object",
      "properties": {
        "recipients": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientV2"
          },
          "title": "List of recipients found"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      }
    },
    "v1ListTagsForCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignTag"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListTagsForSenderResponse": {
      "type": "object",
      "properties": {
        "campaignTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignTag"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1LookupRecipientCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "$ref": "#/definitions/v1RecipientCampaignStruct"
        }
      }
    },
    "v1LookupRecipientCampaignsResponse": {
      "type": "object",
      "properties": {
        "recipientCampaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientCampaignStruct"
          }
        }
      }
    },
    "v1PageSetup": {
      "type": "object",
      "properties": {
        "outerWidth": {
          "type": "string",
          "format": "int64"
        },
        "innerWidth": {
          "type": "string",
          "format": "int64"
        },
        "topPadding": {
          "type": "string",
          "format": "int64"
        },
        "bottomContentPadding": {
          "type": "string",
          "format": "int64"
        },
        "innerHorizontalPadding": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Period": {
      "type": "string",
      "enum": [
        "DAY",
        "WEEK",
        "MONTH"
      ],
      "default": "DAY"
    },
    "v1PreviewEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "templateHtml": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1RecipientCampaignPair": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "$ref": "#/definitions/v1RecipientCampaignStruct"
        },
        "recipient": {
          "$ref": "#/definitions/v1CampaignRecipient"
        }
      }
    },
    "v1RecipientCampaignStatus": {
      "type": "string",
      "enum": [
        "RECIPIENT_CAMPAIGN_STATUS_UNSPECIFIED",
        "RECIPIENT_CAMPAIGN_STATUS_ACTIVE",
        "RECIPIENT_CAMPAIGN_STATUS_PAUSED",
        "RECIPIENT_CAMPAIGN_STATUS_COMPLETED"
      ],
      "default": "RECIPIENT_CAMPAIGN_STATUS_UNSPECIFIED",
      "title": "Enumeration of possible campaign states"
    },
    "v1RecipientCampaignStepEventStruct": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version number of the recipient campaign step"
        },
        "eventId": {
          "type": "string",
          "title": "Unique identifier of the event"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique identifier of the partner that this campaign step event belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "Unique identifier of the market that this campaign step event belongs to"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Unique identifier of the account group that this campaign step event belongs to"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "campaignStepId": {
          "type": "string",
          "title": "Unique identifier of the campaign step"
        },
        "recipientId": {
          "type": "string",
          "title": "Unique identifier created for the recipient"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign"
        },
        "recipientCampaignStepId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign step"
        },
        "eventType": {
          "$ref": "#/definitions/v1CampaignStepEventType",
          "title": "The event type of the step"
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date for the event"
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template for the step"
        },
        "probablyBot": {
          "type": "boolean",
          "title": "Bot or not"
        },
        "url": {
          "type": "string",
          "title": "The url for a click event"
        },
        "normalizedUrl": {
          "type": "string",
          "title": "The normalized url for a click event"
        }
      }
    },
    "v1RecipientCampaignStruct": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the recipient campaign"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        },
        "recipientId": {
          "type": "string",
          "title": "Unique identifier of the recipient"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID that this recipient campaign belongs to"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account group that this recipient campaign belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market for the recipient campaign"
        },
        "fromId": {
          "type": "string",
          "title": "Unique ID of the user that initiated the recipient campaign"
        },
        "fromEmail": {
          "type": "string",
          "title": "Email of the user that initiated the recipient campaign"
        },
        "fromName": {
          "type": "string",
          "title": "Name of the user that initiated the recipient campaign"
        },
        "isActive": {
          "type": "boolean",
          "title": "Whether the recipient campaign is active or not"
        },
        "isCompleted": {
          "type": "boolean",
          "title": "Whether the recipient campaign is completed or not"
        },
        "status": {
          "$ref": "#/definitions/v1CampaignScheduleStatus",
          "title": "Status of the recipient campaign"
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScheduledCampaignStepInterface"
          },
          "title": "Scheduled campaign steps"
        },
        "scheduleStep": {
          "type": "string",
          "format": "int64",
          "title": "Current step in the schedule that the campaign is on"
        },
        "errorMessage": {
          "type": "string",
          "title": "Error message"
        },
        "pausedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Date/time when the recipient campaign was paused"
        }
      }
    },
    "v1RecipientClickStats": {
      "type": "object",
      "properties": {
        "recipient": {
          "$ref": "#/definitions/RecipientClickStatsRecipient",
          "title": "The recipient of the campaign"
        },
        "account": {
          "$ref": "#/definitions/RecipientClickStatsAccount",
          "title": "The account the campaign was sent to"
        },
        "recentDate": {
          "type": "string",
          "format": "date-time",
          "title": "The recent click date"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The number  of clicks"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID"
        }
      }
    },
    "v1RecipientCriteria": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "filterGroupV2": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1RecipientType": {
      "type": "string",
      "enum": [
        "RECIPIENT_TYPE_INVALID",
        "RECIPIENT_TYPE_CRM_CONTACT",
        "RECIPIENT_TYPE_BUSINESS"
      ],
      "default": "RECIPIENT_TYPE_INVALID"
    },
    "v1RecipientV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "E.g. Partner ID, Account Group ID, Etc.\nDEPRECATED: Use external_id instead"
        },
        "type": {
          "$ref": "#/definitions/v1RecipientType",
          "description": "E.g. Partner, Business, Etc."
        },
        "contact": {
          "$ref": "#/definitions/v1Contact",
          "title": "contact info for the recipient\nDEPRECATED: Use phone_number and email_address instead"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The phone number of the recipient"
        },
        "emailAddress": {
          "type": "string",
          "title": "The email address of the recipient"
        },
        "recipientId": {
          "type": "string",
          "title": "The unique ID of the recipient"
        },
        "externalId": {
          "type": "string",
          "title": "The Id that identifies the recipient outside the campaigns service"
        }
      }
    },
    "v1ScheduledCampaignStepInterface": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign step"
        },
        "campaignStepId": {
          "type": "string",
          "title": "Unique identifier of the campaign step"
        },
        "templateId": {
          "type": "string",
          "title": "Unique identifier of the template for the step"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign"
        },
        "stepId": {
          "type": "string",
          "title": "Unique identifier of the scheduled step"
        },
        "campaignStepType": {
          "$ref": "#/definitions/v1CampaignStepType",
          "title": "Whether the step is an email or a snapshot creation event"
        },
        "name": {
          "type": "string",
          "title": "Name of the scheduled campaign step"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date the campaign step is scheduled"
        },
        "dateSent": {
          "type": "string",
          "format": "date-time",
          "title": "The date the campaign step is sent"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64",
          "title": "Delay between this step and the previous one"
        },
        "sendStatus": {
          "$ref": "#/definitions/v1CampaignStepSendStatusType",
          "title": "Send status of the step"
        },
        "completed": {
          "type": "boolean",
          "title": "Whether the scheduled campaign step has been completed"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepEvent"
          },
          "title": "The events that have occurred for the scheduled campaign step"
        }
      }
    },
    "v1SendCampaignStepTestEmailResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "title": "The ID of the email that was sent"
        }
      }
    },
    "v1Sender": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1SenderType",
          "title": "E.g. Partner, Business"
        },
        "id": {
          "type": "string",
          "title": "E.g. Partner ID, Account Group ID"
        },
        "appNamespace": {
          "type": "string",
          "title": "E.g. conversation"
        }
      }
    },
    "v1SenderOptions": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The custom user name for the email address. ie; `hello` in `Jane Miles <hello@world.com>`"
        },
        "name": {
          "type": "string",
          "title": "The display name. ie; `Jane Miles` in `Jane Miles <hello@world.com>`"
        },
        "replyTo": {
          "type": "string",
          "title": "The reply to address"
        },
        "salespersonId": {
          "type": "string",
          "title": "the salesperson's id (company's or contact's)"
        },
        "sendFromAssignedSalesperson": {
          "type": "boolean",
          "title": "To check whether to send from the assigned salesperson's email"
        }
      }
    },
    "v1SenderType": {
      "type": "string",
      "enum": [
        "SENDER_TYPE_INVALID",
        "SENDER_TYPE_PARTNER",
        "SENDER_TYPE_BUSINESS"
      ],
      "default": "SENDER_TYPE_INVALID"
    },
    "v1StepDataResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "The ID of the template on the returned step"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID of the returned step"
        }
      }
    },
    "v1TemplateReference": {
      "type": "object",
      "properties": {
        "appNamespace": {
          "type": "string",
          "title": "The namespace of the parent template"
        },
        "templateId": {
          "type": "string",
          "title": "The template_id of the parent template"
        }
      }
    },
    "v1TemplateStatus": {
      "type": "string",
      "enum": [
        "TEMPLATE_STATUS_INVALID",
        "TEMPLATE_STATUS_DRAFT",
        "TEMPLATE_STATUS_PUBLISHED"
      ],
      "default": "TEMPLATE_STATUS_INVALID"
    },
    "v1TopLogo": {
      "type": "object",
      "properties": {
        "showLogo": {
          "type": "boolean"
        },
        "customImageUrl": {
          "type": "string"
        },
        "width": {
          "type": "string",
          "format": "int64"
        },
        "align": {
          "$ref": "#/definitions/v1ImageAlign"
        },
        "topPadding": {
          "type": "string",
          "format": "int64"
        },
        "bottomPadding": {
          "type": "string",
          "format": "int64"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ServiceLevelSearchRequestSearchOptions": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "statusFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/srereportingv1Status"
          }
        }
      }
    },
    "srereportingv1Status": {
      "type": "string",
      "enum": [
        "STATUS_UNSET",
        "STATUS_INVALID",
        "STATUS_ARCHIVED",
        "STATUS_ACTIVE",
        "STATUS_MAINTENANCE"
      ],
      "default": "STATUS_UNSET"
    },
    "v1AvailabilityData": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the service, e.g. accounts or account-group."
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "description": "The environment of the service, e.g. demo or prod."
        },
        "target": {
          "type": "number",
          "format": "float",
          "description": "The availability target of the service."
        },
        "pointList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AvailabilityPoint"
          },
          "description": "The series of avalability data within a time range."
        }
      }
    },
    "v1AvailabilityGetMultiResponse": {
      "type": "object",
      "properties": {
        "availability": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AvailabilityData"
          }
        }
      }
    },
    "v1AvailabilityGetResponse": {
      "type": "object",
      "properties": {
        "target": {
          "type": "number",
          "format": "float"
        },
        "pointList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AvailabilityPoint"
          }
        }
      }
    },
    "v1AvailabilityPoint": {
      "type": "object",
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1Environment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetAggregateSLOHistoryResponse": {
      "type": "object",
      "properties": {
        "dateBucket": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1SLOHistoryDataList"
          },
          "title": "The map's Key is string representation of the Date of start of the Period\neg, Oct 1 is start of Q4, so a key of \"2022-10-1\" would give you a List of all quarterly SLO histories from that quarter\nTODO Finalize how we are going to handle this date string logic, should we use timestamps trimmed to \"start of Day\"?"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1GetLiveSLOHistoryResponse": {
      "type": "object",
      "properties": {
        "history": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LiveSLOHistoryData"
          }
        }
      }
    },
    "v1InvalidDataMarker": {
      "type": "string",
      "enum": [
        "INVALID_DATA_MARKER_UNSET",
        "INVALID_DATA_MARKER_ZERO_DENOMINATOR",
        "INVALID_DATA_MARKER_OUT_OF_BOUND"
      ],
      "default": "INVALID_DATA_MARKER_UNSET",
      "title": "- INVALID_DATA_MARKER_UNSET: UNSET indicates there was no issue fetching the SLO History\n - INVALID_DATA_MARKER_ZERO_DENOMINATOR: A Zero denominator indicates no traffic in the case of availability SLOs, (good requests divided by total requests)\n - INVALID_DATA_MARKER_OUT_OF_BOUND: Out of bound errors will occur when the SLI is > 100 or < 0. Likely means some aspect of the SLO is being counted incorrectly"
    },
    "v1ListSLOResponse": {
      "type": "object",
      "properties": {
        "slo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SLOData"
          }
        }
      }
    },
    "v1LiveSLOHistoryData": {
      "type": "object",
      "properties": {
        "sloName": {
          "type": "string"
        },
        "objective": {
          "$ref": "#/definitions/v1Objective"
        },
        "slis": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SLI"
          }
        }
      },
      "title": "Representation of the live SLI history of a given SLO"
    },
    "v1Objective": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "title": "The Objective's unit. E.g. \"%\" or \"ms\""
        },
        "value": {
          "type": "number",
          "format": "float",
          "description": "The Objective's value."
        }
      },
      "description": "Service Level Objective target representation."
    },
    "v1SLI": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "the date the SLI measure is from"
        },
        "value": {
          "type": "number",
          "format": "float",
          "title": "the value of the SLI measure"
        }
      },
      "title": "Representation of an SLI measure. I expect there to be large volumes of SLIs, which is why I've \nexcluded any information about the unit of measure"
    },
    "v1SLOData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the SLO. E.g. \"performance\"."
        },
        "objective": {
          "$ref": "#/definitions/v1Objective",
          "description": "The SLO's objective."
        },
        "sloId": {
          "type": "string",
          "title": "SLOID is the SLO's Datadog SLO id"
        },
        "pathExclusions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Paths to exclude when evaluating a performance SLO"
        }
      },
      "description": "Service Level Objective representation."
    },
    "v1SLOHistoryData": {
      "type": "object",
      "properties": {
        "sloHistoryId": {
          "type": "string",
          "title": "ID is a unique ID of the SLOHistory instance"
        },
        "serviceName": {
          "type": "string",
          "title": "ServiceName is the service the SLOHistory corresponds to"
        },
        "owner": {
          "type": "string",
          "title": "Owner is the owner of the service. Normally a team, occasionally an individual"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of the SLO. E.g. \"availability\", \"performance\""
        },
        "sloId": {
          "type": "string",
          "title": "SLOID is the SLO's Datadog SLO id"
        },
        "period": {
          "$ref": "#/definitions/v1Period",
          "title": "Period is the time period the SLOHistory is for. E.g. week, month, quarter\""
        },
        "periodStartDate": {
          "type": "string",
          "format": "date-time",
          "title": "PeriodStartDate is the first day the SLOHistory period includes"
        },
        "periodEndDate": {
          "type": "string",
          "format": "date-time",
          "title": "PeriodEndDate is the last day the SLOHistory period includes"
        },
        "objective": {
          "type": "number",
          "format": "float",
          "title": "Objective is the SLO target as a percentage. Indicator is measured against Objective to determine if the SLO is passing or failing"
        },
        "indicator": {
          "type": "number",
          "format": "float",
          "title": "Indicator is the SLI measurement for the time period as a percentage. Either the uptime percentage, or percentage of time the service was above PerformanceTarget"
        },
        "performanceTarget": {
          "type": "string",
          "description": "PerformanceTarget is the performance target the service tries to meet.\nPerformanceTarget is non-zero only for performance SLIs."
        },
        "errorBudget": {
          "type": "number",
          "format": "float",
          "title": "ErrorBudget is the percentage of error budget remaining during the period. Negative indicates error budget was exceeded"
        },
        "passed": {
          "type": "boolean",
          "title": "Passed denotes whether the SLO passed or failed the Objective during the period"
        },
        "invalidDataMarker": {
          "$ref": "#/definitions/v1InvalidDataMarker",
          "title": "Invalid data marker is used to indicate the reason a history scrape failed"
        }
      }
    },
    "v1SLOHistoryDataList": {
      "type": "object",
      "properties": {
        "sloHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SLOHistoryData"
          }
        }
      }
    },
    "v1ServiceLevelData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the service, e.g. executive-report. No environment, as this is env-agnostic"
        },
        "platform": {
          "type": "string",
          "title": "The platform of the service, e.g. GKE, GAE, vstatic, npm"
        },
        "language": {
          "type": "string",
          "title": "The language of the service, e.g. go or python"
        },
        "availability": {
          "type": "number",
          "format": "float",
          "title": "The percentage of availability the service is targeting. E.g. 99.9, 99.95"
        },
        "owner": {
          "type": "string",
          "title": "The GitHub team that owns this service, e.g. sre"
        },
        "hardDependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The hard dependencies this service relies on, e.g. vstore, IAM"
        },
        "apiCatalogue": {
          "type": "string",
          "description": "The location of the api catalogue json file for this service."
        },
        "gaeYaml": {
          "type": "string",
          "description": "The location of the yaml file that specifies the application layout."
        },
        "cloudProjects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The Google Cloud projects that this service lives in, e.g. repcore-demo and repcore-prod"
        },
        "nonServiceType": {
          "type": "string",
          "description": "Some repositories are a library, so if this string is present it should say what type of service this is."
        },
        "status": {
          "$ref": "#/definitions/srereportingv1Status",
          "description": "Repositories can be 'active'ly worked on, in 'maintenance' mode, or 'archived' completely.\nGenerally 'archived' may come from the state of the GitHub repo rather than the service-level.yaml itself, but\nit could also be defined in the yaml."
        },
        "issueTrackerProjectId": {
          "type": "string",
          "description": "Issue tracker project id identifies which project issues can be filed against in the current issue tracker of choice for\nthis service."
        },
        "description": {
          "type": "string",
          "description": "A description of the service this service level is for."
        },
        "slos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SLOData"
          },
          "description": "The service's service level objectives."
        }
      },
      "description": "Analogous to the service-level.yaml file in a GitHub repository. It holds information about the\nowner, platform, and dependencies of the service."
    },
    "v1ServiceLevelGetMultiResponse": {
      "type": "object",
      "properties": {
        "serviceLevels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceLevelData"
          }
        }
      }
    },
    "v1ServiceLevelListResponse": {
      "type": "object",
      "properties": {
        "serviceLevels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceLevelData"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ServiceLevelSearchResponse": {
      "type": "object",
      "properties": {
        "serviceLevels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceLevelData"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1UserData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "googleId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "team": {
          "type": "string"
        },
        "githubId": {
          "type": "string"
        },
        "extractedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1UserGetMultiResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserData"
          }
        }
      }
    },
    "v1UserListResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "type": "integer",
          "format": "int32"
        },
        "totalResults": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserData"
          }
        }
      }
    },
    "v1UserReplaceResponse": {
      "type": "object",
      "properties": {
        "unchangedCount": {
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetResourceResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValueList"
          }
        }
      },
      "description": "GetResourceResponse includes the expression of a resource as a map of attributes. Only attributes relevant to access control and used by\npolicies defined by this resource need to be includes in this map."
    },
    "v1GetResourcesResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Identifiers"
          }
        }
      },
      "description": "GetResourcesResponse includes the expression of a resource as a map of attributes. Only attributes relevant to access control and used by\npolicies defined by the set of resources need to be includes in this map."
    },
    "v1Identifiers": {
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValueList"
          },
          "description": "identifiers is a set of parameters that a resource owner needs to identify a resource."
        }
      },
      "description": "Identifiers is a set of identifiers for retreiving resources and identifying resource data."
    },
    "v1ValueList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ValueList is a holder for multiple string values in order to be compatible with map declarations"
    },
    "GetBusinessDataFromPlaceIdResponseGoogleIdentifiers": {
      "type": "object",
      "properties": {
        "googlePlaceId": {
          "type": "string"
        },
        "googleCustomerId": {
          "type": "string"
        }
      }
    },
    "HoursOfOperationSpan": {
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HoursOfOperationDayOfWeek"
          },
          "title": "The days of the week (a list of days as text) this span applies to"
        },
        "opens": {
          "type": "string",
          "title": "A description of when the business opens in military time:\n\"16:40\" is 4:30 PM?"
        },
        "closes": {
          "type": "string",
          "title": "A descriptoin of when the business closes in military time:\n\"13:00\" is 1:00 PM?"
        },
        "description": {
          "type": "string",
          "title": "A description accompanying the span.  Use this field for\ndescribing holiday hours?"
        }
      },
      "title": "Stores information about a particular timespan that the business\nis open"
    },
    "SearchCategoryMigrationRequestReviewStatus": {
      "type": "string",
      "enum": [
        "UNSET",
        "UNDER_REVIEW",
        "REVIEWED"
      ],
      "default": "UNSET"
    },
    "UpdateAccountWithExternalBusinessDataRequestFields": {
      "type": "string",
      "enum": [
        "TAXONOMY",
        "NAPW"
      ],
      "default": "TAXONOMY"
    },
    "accountgroupv1Location": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "placeId": {
          "type": "string",
          "description": "The Place ID for a place in the Google Places database and on Google Maps.\nSee https://developers.google.com/places/place-id for more about Place IDs."
        }
      }
    },
    "v1AddressInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "Address line 1"
        },
        "address2": {
          "type": "string",
          "title": "Address line 2"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "footnotes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of Human readable changes SmartyStreets made to the address"
        }
      }
    },
    "v1AddressValidationResult": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The id of the business"
        },
        "businessName": {
          "type": "string",
          "title": "The name of the business"
        },
        "currentAddress": {
          "$ref": "#/definitions/v1AddressInfo",
          "title": "The business's current address info"
        },
        "suggestedAddresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressInfo"
          },
          "title": "List of SmartyStreets suggested valid addresses"
        },
        "addressErrors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Problems with the current address in human readable format"
        }
      }
    },
    "v1AuxiliaryDataFilter": {
      "type": "object",
      "properties": {
        "searchFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AuxiliaryDataSearchFilter"
          }
        }
      }
    },
    "v1AuxiliaryDataRange": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string"
        },
        "endRange": {
          "type": "string"
        }
      }
    },
    "v1AuxiliaryDataSearchDateOperation": {
      "type": "string",
      "enum": [
        "DATE_UNDEFINED",
        "DATE_RANGE"
      ],
      "default": "DATE_UNDEFINED"
    },
    "v1AuxiliaryDataSearchFilter": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "operation": {
          "$ref": "#/definitions/v1AuxiliaryDataSearchOperation"
        },
        "stringFilterValue": {
          "type": "string"
        },
        "filterRange": {
          "$ref": "#/definitions/v1AuxiliaryDataRange"
        }
      }
    },
    "v1AuxiliaryDataSearchIntegerOperation": {
      "type": "string",
      "enum": [
        "INT_UNDEFINED",
        "INT_RANGE"
      ],
      "default": "INT_UNDEFINED"
    },
    "v1AuxiliaryDataSearchOperation": {
      "type": "object",
      "properties": {
        "stringOperation": {
          "$ref": "#/definitions/v1AuxiliaryDataSearchStringOperation"
        },
        "dateOperation": {
          "$ref": "#/definitions/v1AuxiliaryDataSearchDateOperation"
        },
        "integerOperation": {
          "$ref": "#/definitions/v1AuxiliaryDataSearchIntegerOperation"
        },
        "dropdownOperation": {
          "$ref": "#/definitions/v1AuxiliaryDataSearchStringOperation"
        },
        "currencyOperation": {
          "$ref": "#/definitions/v1AuxiliaryDataSearchIntegerOperation"
        }
      }
    },
    "v1AuxiliaryDataSearchStringOperation": {
      "type": "string",
      "enum": [
        "STRING_UNDEFINED",
        "STRING_EQUALS",
        "STRING_DOES_NOT_EQUAL"
      ],
      "default": "STRING_UNDEFINED"
    },
    "v1Candidate": {
      "type": "object",
      "properties": {
        "googlePlaceId": {
          "type": "string"
        }
      }
    },
    "v1CategoryData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "v1CategoryMigrationData": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "reviewed": {
          "type": "boolean"
        },
        "currentTaxonomies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "newCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "napData": {
          "$ref": "#/definitions/v1NAPData"
        }
      },
      "title": "Deprecated: this message is not longer used for the migration"
    },
    "v1Circular": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1LocationPoint"
        },
        "radius": {
          "type": "string"
        }
      }
    },
    "v1ClaimStatus": {
      "type": "object",
      "properties": {
        "gbpIsClaimed": {
          "type": "boolean"
        }
      }
    },
    "v1Competitor": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The id of the business"
        },
        "competitorId": {
          "type": "string",
          "title": "The competitor id of the competitor"
        },
        "location": {
          "$ref": "#/definitions/accountgroupv1Location"
        }
      }
    },
    "v1CreateCompetitorResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "competitorId": {
          "type": "string"
        }
      }
    },
    "v1DayOfWeek": {
      "type": "string",
      "enum": [
        "DAY_OF_WEEK_UNSPECIFIED",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "default": "DAY_OF_WEEK_UNSPECIFIED",
      "description": "Represents a day of the week.\n\n - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.\n - MONDAY: Monday\n - TUESDAY: Tuesday\n - WEDNESDAY: Wednesday\n - THURSDAY: Thursday\n - FRIDAY: Friday\n - SATURDAY: Saturday\n - SUNDAY: Sunday"
    },
    "v1Geo": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "The latitude of the point is the north/south angle the point makes with\nthe equator it ranges from -90\u00b0 at the south pole, through 0\u00b0 at the\nequator, and to +90\u00b0 at the north pole"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "The longitude of the point is the west/east angle the point makes with\nthe Prime Meridian (The Royal Observatory in Greenwich, England) it\nranges from -180\u00b0, though 0\u00b0 at the Royal Observatory, and to +180\u00b0.\nNote that there is a discontinuity at \u00b1180\u00b0 as they describe the same\nangle."
        }
      },
      "title": "Geo stores a geographic point for marking locations"
    },
    "v1GetAccountsToReviewByPartnerIdResponse": {
      "type": "object",
      "properties": {
        "totalAccountsToReview": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Deprecated: this response is not longer required"
    },
    "v1GetBusinessDataByNapDataResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CategoryData"
          }
        }
      }
    },
    "v1GetBusinessDataFromPlaceIdResponse": {
      "type": "object",
      "properties": {
        "googleIdentifiers": {
          "$ref": "#/definitions/GetBusinessDataFromPlaceIdResponseGoogleIdentifiers"
        },
        "napData": {
          "$ref": "#/definitions/v1NAPData"
        },
        "taxonomyId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/v1HoursOfOperation"
        }
      }
    },
    "v1GetBusinessDataFromTextSearchResponse": {
      "type": "object",
      "properties": {
        "candidates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Candidate"
          }
        }
      }
    },
    "v1GetCompetitorsResponse": {
      "type": "object",
      "properties": {
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Competitor"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1GetMultiBusinessDataFromPlaceIdResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1GetBusinessDataFromPlaceIdResponse"
          }
        }
      }
    },
    "v1GetProspectDataResponse": {
      "type": "object",
      "properties": {
        "placeId": {
          "type": "string"
        },
        "prospectData": {
          "$ref": "#/definitions/v1ProspectData"
        }
      }
    },
    "v1GetPublishedPartnerResponse": {
      "type": "object",
      "properties": {
        "lastPublishedBy": {
          "type": "string"
        },
        "publishStarted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Deprecated: This response is not longer required"
    },
    "v1GetWebSearchResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "addressInfo": {
          "$ref": "#/definitions/v1WebSearchAddressDetails"
        },
        "url": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "placeId": {
          "type": "string"
        },
        "checkUrl": {
          "type": "string"
        }
      }
    },
    "v1HoursOfOperation": {
      "type": "object",
      "properties": {
        "hoursOfOperation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HoursOfOperationSpan"
          },
          "title": "The list of time spans that describe the business's hours"
        }
      },
      "description": "Stores information about the hours that a business is open in the form of\na list of time-spans describing the business's hours."
    },
    "v1InferBusinessCategoryResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the external id of inferred categories"
        },
        "taskStatus": {
          "$ref": "#/definitions/v1TaskStatus",
          "title": "whether the task is completed, in progress or failed. Completed if valid categories is returned"
        },
        "taskId": {
          "type": "string",
          "title": "Task id if the task is in progress so the results could be polled with it"
        },
        "businessData": {
          "$ref": "#/definitions/v1NAPData",
          "title": "The business data that is fetched with the category"
        },
        "businessHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RegularHoursPeriod"
          },
          "title": "The regular working hours of the business"
        }
      }
    },
    "v1InferenceRequestMode": {
      "type": "string",
      "enum": [
        "NO_MODE",
        "LIVE",
        "PRIORITY",
        "STANDARD"
      ],
      "default": "NO_MODE"
    },
    "v1ListAuxiliaryDataFieldSchemaRequestFilters": {
      "type": "object",
      "properties": {
        "onlyArchived": {
          "type": "boolean"
        }
      }
    },
    "v1LocationPoint": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      },
      "title": "Google Places Query Results"
    },
    "v1NAPData": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "workNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callTrackingNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timezone": {
          "type": "string"
        },
        "serviceAreaBusiness": {
          "type": "boolean"
        }
      }
    },
    "v1NAPWData": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      }
    },
    "v1ProspectData": {
      "type": "object",
      "properties": {
        "gbpClaimStatus": {
          "$ref": "#/definitions/v1ClaimStatus"
        },
        "websiteStatus": {
          "$ref": "#/definitions/v1WebsiteStatus"
        },
        "napwData": {
          "$ref": "#/definitions/v1NAPWData"
        }
      }
    },
    "v1ProspectIdentifier": {
      "type": "object",
      "properties": {
        "placeId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/v1Geo"
        }
      }
    },
    "v1Rectangular": {
      "type": "object",
      "properties": {
        "southwest": {
          "$ref": "#/definitions/v1LocationPoint"
        },
        "northeast": {
          "$ref": "#/definitions/v1LocationPoint"
        }
      }
    },
    "v1RegularHoursPeriod": {
      "type": "object",
      "properties": {
        "openDay": {
          "$ref": "#/definitions/v1DayOfWeek",
          "description": "open_day indicates the day of the week that this period starts on."
        },
        "openTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "title": "open_time valid values are 00:00-23:59"
        },
        "closeDay": {
          "$ref": "#/definitions/v1DayOfWeek",
          "description": "close_day indicates the day of the week that this period ends on. It should be the same as\nopenDay except when the period goes over midnight."
        },
        "closeTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "description": "close_time valid values are 00:00-24:00, where 24:00 represents midnight at the end of the\nspecified day field."
        }
      }
    },
    "v1SearchByAuxiliaryDataResponse": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1SearchCategoryMigrationResponse": {
      "type": "object",
      "properties": {
        "categoryMigrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CategoryMigrationData"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      },
      "title": "Deprecated: This response is not longer required"
    },
    "v1TaskStatus": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "statusId": {
          "type": "string"
        },
        "textColour": {
          "type": "string"
        },
        "backgroundColour": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1TimeOfDay": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "minutes": {
          "type": "integer",
          "format": "int32",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        }
      },
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are [google.type.Date][google.type.Date] and\n`google.protobuf.Timestamp`."
    },
    "v1ValidateAddressMultiResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddressValidationResult"
          }
        }
      }
    },
    "v1WebSearchAddressDetails": {
      "type": "object",
      "properties": {
        "borough": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        }
      }
    },
    "v1WebsiteStatus": {
      "type": "object",
      "properties": {
        "hasWebsite": {
          "type": "boolean"
        }
      }
    },
    "v1CreateOrUpdateSubscriberResponse": {
      "type": "object",
      "properties": {
        "subscriberId": {
          "type": "string"
        }
      }
    },
    "v1GetSubscriberResponse": {
      "type": "object",
      "properties": {
        "subscriber": {
          "$ref": "#/definitions/v1Subscriber"
        }
      }
    },
    "v1Subscriber": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The identifier of the subscriber"
        },
        "location": {
          "$ref": "#/definitions/v1SubscriptionLocation",
          "title": "Which location they have subscribed to"
        }
      }
    },
    "ScopeConfigDenyAll": {
      "type": "object",
      "title": "Indicates all scopes should be denied at this level"
    },
    "ScopeConfigGrantAll": {
      "type": "object",
      "title": "Indicates all scopes should be granted at this level (other levels can override this)"
    },
    "resourcev1ScopeSet": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A set of scopes"
    },
    "v1AttributeSet": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/v1AttributeSetIdentifier",
          "title": "Attribute Set ID"
        },
        "resource": {
          "$ref": "#/definitions/v1ResourceType",
          "title": "the resource name"
        },
        "schema": {
          "$ref": "#/definitions/vendastatypesSchema",
          "title": "the schema of the fields"
        },
        "displayName": {
          "type": "string",
          "title": "The display name of the attribute set"
        }
      },
      "description": "An AttributeSet is a child of a Resource. It defines a Schema of a list of attributes that\ncan be added onto each individual resource."
    },
    "v1AttributeSetIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the Attribute Set. This must be globally unique.\n\nFollows the restful identifier semantics.\n\n\u00b5Service naming would be: `application/brands` or might have additional components if necessary"
        }
      },
      "title": "Identifier of an Attribute Set"
    },
    "v1Binding": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Can optionally be provided, otherwise an id will be generated for you. Must be globally unique."
        },
        "parentResource": {
          "$ref": "#/definitions/v1Resource",
          "title": "The parent resource this binding is attached to"
        },
        "userId": {
          "type": "string",
          "title": "The User ID this policy is associated to"
        },
        "matchingUsers": {
          "$ref": "#/definitions/v1FilterAttributes",
          "title": "Matches resources by attributes on a resource"
        },
        "resource": {
          "$ref": "#/definitions/v1Resource",
          "title": "A specific resource"
        },
        "matchingResources": {
          "$ref": "#/definitions/v1FilterAttributes",
          "title": "Matches resources by attributes on a resource"
        },
        "scopeConfig": {
          "$ref": "#/definitions/v1ScopeConfig",
          "title": "Scopes being set by the binding"
        },
        "roleId": {
          "type": "string",
          "title": "Permissions inherited from a role"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Policy"
          }
        }
      },
      "description": "A Binding describes for a set of user(s) and set of resource(s), what set of permissions they have."
    },
    "v1EvaluationStepResult": {
      "type": "object",
      "properties": {
        "evaluatedPolicy": {
          "$ref": "#/definitions/v1Policy",
          "title": "The policy evaluated for this step"
        },
        "scopes": {
          "$ref": "#/definitions/resourcev1ScopeSet",
          "title": "The set of scopes available for this requested resource at this particular evaluation step"
        }
      },
      "title": "EvaluationStepResult describes the resulting scopes available from a step in the policy evaluation process"
    },
    "v1ExplainUserHasAccessResponse": {
      "type": "object",
      "properties": {
        "resourceEvaluationResult": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceEvaluationResult"
          },
          "title": "Evaluation result for each resource requested"
        }
      },
      "title": "Response message for providing an explanation of why a user receives a HasAccess response result"
    },
    "v1FilterAttributes": {
      "type": "object",
      "properties": {
        "attributeSetId": {
          "$ref": "#/definitions/v1AttributeSetIdentifier",
          "title": "Attribute Set id"
        },
        "filter": {
          "$ref": "#/definitions/vendastatypesMatcherNode",
          "title": "Matches resources by a specific criteria"
        }
      },
      "title": "FilterAttributes supports filtering on attributes of a resource"
    },
    "v1GetBindingResponse": {
      "type": "object",
      "properties": {
        "binding": {
          "$ref": "#/definitions/v1Binding",
          "title": "Binding retrieved"
        }
      },
      "title": "Response message for Resources.GetBinding"
    },
    "v1HasAccessRequest": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Resource"
          },
          "title": "The resource being requested access to"
        },
        "scopeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The scopes being requested access to"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Controls which fields come back on the response"
        }
      },
      "title": "Request message for Resources.HasAccess"
    },
    "v1HasAccessResponse": {
      "type": "object",
      "properties": {
        "scopeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deprecated\nThe list of scopes ids that the caller has access to. If there were many resources requested, this represents\nthe union of available scopes across all requested resources."
        },
        "unionScopes": {
          "$ref": "#/definitions/resourcev1ScopeSet",
          "description": "The set of scopes that are available across all requested resources."
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/resourcev1ScopeSet"
          },
          "description": "The set of scopes available for each requested resource."
        }
      },
      "title": "Response message for Resources.HasAccess"
    },
    "v1HydratedResource": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1Resource",
          "title": "The resource id"
        },
        "data": {
          "type": "object",
          "description": "The data of the resource."
        },
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the resource"
        }
      },
      "title": "A resource that has been hydrated with attributes that were chosen"
    },
    "v1ListPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Permission"
          }
        },
        "nextCursor": {
          "type": "string",
          "title": "To be provided to ListPermissions on a subsequent call to get the next page of results"
        }
      },
      "title": "Request message for Resources.ListPermissions"
    },
    "v1Permission": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1Resource",
          "title": "The resource id that this permission was granted for"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Scope"
          },
          "title": "the set of scopes granted"
        }
      },
      "title": "The list of available scopes for the specified resource"
    },
    "v1Policy": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The User ID this policy is associated to"
        },
        "resource": {
          "$ref": "#/definitions/v1Resource",
          "title": "A specific resource"
        },
        "matchingResources": {
          "$ref": "#/definitions/v1FilterAttributes",
          "title": "Deprecated\nMatches resources by attributes on a resource"
        },
        "resourceFilter": {
          "$ref": "#/definitions/v1ResourceFilter",
          "title": "Matches resources with a filter"
        },
        "scopeConfig": {
          "$ref": "#/definitions/v1ScopeConfig",
          "title": "Scopes being set by the binding"
        },
        "roleId": {
          "type": "string",
          "title": "Permissions inherited from a role"
        },
        "bindingId": {
          "type": "string",
          "title": "The id of the binding that this policy is within"
        }
      },
      "title": "Policy grants scopes to specific user(s) for a set of resources(s)"
    },
    "v1Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1ResourceEvaluationResult": {
      "type": "object",
      "properties": {
        "evaluatedPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Policy"
          },
          "title": "List of the policies that were evaluated for the given user"
        },
        "evaluationStepResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EvaluationStepResult"
          },
          "title": "List of the evaluation step results, in order of their evaluation"
        },
        "scopes": {
          "$ref": "#/definitions/resourcev1ScopeSet",
          "title": "The final set of allowed scopes for this requested resource"
        }
      },
      "title": "ResourceEvaluationResult describes the result of each requested resource's evaluation"
    },
    "v1ResourceFilter": {
      "type": "object",
      "properties": {
        "resourceSelector": {
          "$ref": "#/definitions/v1ResourceSelector",
          "title": "Selects which resource types to filter"
        },
        "filterAttributes": {
          "$ref": "#/definitions/v1FilterAttributes",
          "title": "The filter to narrow down the resources to"
        }
      },
      "title": "Filters resource by resource hierachy and attributes on the resources"
    },
    "v1ResourceKind": {
      "type": "string",
      "enum": [
        "RESOURCE_KIND_RESOURCE",
        "RESOURCE_KIND_USER"
      ],
      "default": "RESOURCE_KIND_RESOURCE",
      "title": "- RESOURCE_KIND_RESOURCE: The default resource kind\n - RESOURCE_KIND_USER: Indicates the resource is a user"
    },
    "v1ResourceSelector": {
      "type": "object",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/v1ResourceType",
          "title": "Selects the given resource type"
        },
        "children": {
          "$ref": "#/definitions/v1ResourceType",
          "title": "Selects the children of the specified resource types"
        }
      },
      "title": "ResourceSelector allows controlling which resource types to look at"
    },
    "v1ResourceType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The full restful name of the resource type. For example an Account Group resource:\n`/partner/*/accountGroup/*`.\nSee [Resource\nNames](https://cloud.google.com/apis/design/resource_names#full_resource_name)\nfor more information.\n\nIn the account group example, Account Group is a child resource of a Partner resource, and the Partner resource\nmust exist prior to being registered."
        }
      },
      "description": "ResourceType represents a resource type within the Vendasta platform. Examples are:\nPartner, Market, Account Group, Executive Report, Product Activations, Brands, Products, Packages, etc..."
    },
    "v1Role": {
      "type": "string",
      "enum": [
        "ROLE_UNSET",
        "ROLE_SYSTEM",
        "ROLE_USER",
        "ROLE_ASSISTANT"
      ],
      "default": "ROLE_UNSET"
    },
    "v1ScopeConfig": {
      "type": "object",
      "properties": {
        "blackList": {
          "$ref": "#/definitions/v1ScopeConfigScopeSet",
          "title": "Scopes explicitly removed"
        },
        "whiteList": {
          "$ref": "#/definitions/v1ScopeConfigScopeSet",
          "title": "Scopes explicitly added"
        },
        "grantAll": {
          "$ref": "#/definitions/ScopeConfigGrantAll",
          "title": "All scopes granted"
        },
        "denyAll": {
          "$ref": "#/definitions/ScopeConfigDenyAll",
          "title": "All scopes denied"
        },
        "canGrant": {
          "type": "boolean",
          "title": "Indicates if the user is given rights to grant equal scopes to other users"
        }
      },
      "title": "The set of available scopes"
    },
    "v1ScopeConfigScopeSet": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A set of scopes"
    },
    "vendastatypesBooleanOperator": {
      "type": "string",
      "enum": [
        "BOOLEAN_OPERATOR_AND",
        "BOOLEAN_OPERATOR_OR"
      ],
      "default": "BOOLEAN_OPERATOR_AND"
    },
    "vendastatypesMatcherNode": {
      "type": "object",
      "properties": {
        "equal": {
          "$ref": "#/definitions/vendastatypesPropertyValue",
          "description": "Validates that a property matches a specific value."
        },
        "operator": {
          "$ref": "#/definitions/vendastatypesOperator",
          "description": "Combines multiple operations with AND or OR operators."
        },
        "not": {
          "$ref": "#/definitions/vendastatypesMatcherNode",
          "description": "Not returns the opposite boolean value of the operator provided."
        },
        "missing": {
          "$ref": "#/definitions/vendastatypesPropertyName",
          "description": "Matches results which are not missing a specific property. This will not match out items which have the\nproperty set to a null value. The \"null\" operator can be used to match for properties which have null\nvalues."
        },
        "null": {
          "$ref": "#/definitions/vendastatypesPropertyName",
          "description": "Matches results which do not have the specified property set to the null value. This will also\ninclude events that are missing the property entirely."
        },
        "subset": {
          "$ref": "#/definitions/vendastatypesPropertyValue",
          "description": "Items may include repeated values for a specific property. It may be useful to receive items which have\na property in the list.\n\nFor example, an item might have some attributes describing a category that looks like:\n['Automotive', 'Car Dealers', 'Auto Repair']\n\nSubscribers may only care about Auto Repair. In this case they can provide \"Auto Repair\" as the value to\nonly receive those events. If the Subscriber only wants events with \"Auto Repair\" and \"Car Dealers\"\nthe value can be defined as ['Auto Repair', 'Car Dealers']. If you wish to receive events where it's\n\"Auto Repair\" OR \"Car Dealers\", you may use two subset operation and join them with an OR operator.\n\nOrder does not matter when checking if a list is a subset of an item's repeated property."
        },
        "prefix": {
          "$ref": "#/definitions/vendastatypesPropertyValue",
          "title": "Validates that a property has a given prefix"
        }
      }
    },
    "vendastatypesOperator": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/vendastatypesBooleanOperator"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vendastatypesMatcherNode"
          }
        }
      }
    },
    "vendastatypesProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Unique identifier for this property. Must be in snake case format.\nExample(s): account_group_id, listing_id, company_name"
        },
        "type": {
          "$ref": "#/definitions/vendastatypesPropertyType",
          "title": "Type for this property"
        },
        "repeated": {
          "type": "boolean",
          "description": "Indicates if the field is repeated."
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vendastatypesProperty"
          },
          "description": "Can only be specified if the Type supplied is a STRUCT.\nIs the schema of the structured property."
        },
        "piiTag": {
          "$ref": "#/definitions/PropertyPIITag"
        },
        "description": {
          "type": "string",
          "title": "Description of this property"
        }
      },
      "title": "Property defines a single property for a schema"
    },
    "vendastatypesPropertyName": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        }
      }
    },
    "vendastatypesPropertyValue": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        },
        "value": {}
      }
    },
    "vendastatypesSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vendastatypesProperty"
          }
        }
      },
      "title": "Schema describes the structure of data in a storage-agnostic way"
    },
    "citationsCitation": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "citationsRangeCitationsResponse": {
      "type": "object",
      "properties": {
        "citations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/citationsCitation"
          }
        }
      }
    },
    "vendastacitationsCitation": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "vendastacitationsRangeCitationsResponse": {
      "type": "object",
      "properties": {
        "citations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/vendastacitationsCitation"
          }
        }
      }
    },
    "CountryConfigurationFormatting": {
      "type": "object",
      "properties": {
        "show": {
          "type": "string",
          "title": "The templated format string for showing an address for this country"
        },
        "edit": {
          "type": "string",
          "title": "The templated format string for editing an address for this country"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The required address form fields for editing an address for this country"
        }
      }
    },
    "CountryConfigurationLabels": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string",
          "title": "The label for the first address line field"
        },
        "address2": {
          "type": "string",
          "title": "The label for the second address line field"
        },
        "city": {
          "type": "string",
          "title": "The label for the city field"
        },
        "company": {
          "type": "string",
          "title": "The label for the company name field"
        },
        "country": {
          "type": "string",
          "title": "The label for the country field"
        },
        "firstName": {
          "type": "string",
          "title": "The label for the first name field"
        },
        "lastName": {
          "type": "string",
          "title": "The label for the last name field"
        },
        "phone": {
          "type": "string",
          "title": "The label for the phone number field"
        },
        "postalCode": {
          "type": "string",
          "title": "The label for the postal code field"
        },
        "zone": {
          "type": "string",
          "title": "The label for the zone field"
        }
      }
    },
    "CountryConfigurationZone": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The code of this zone"
        },
        "name": {
          "type": "string",
          "title": "The localized name of this zone"
        }
      }
    },
    "v1CountryConfiguration": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The two-letter country code for this country"
        },
        "continent": {
          "type": "string",
          "title": "The localized name of the continent of this country"
        },
        "name": {
          "type": "string",
          "title": "The localized name of this country"
        },
        "phoneNumberPrefix": {
          "type": "string",
          "format": "int64",
          "title": "The phone number prefix this country uses"
        },
        "formatting": {
          "$ref": "#/definitions/CountryConfigurationFormatting",
          "title": "The formatting for displaying and editing an address for this country"
        },
        "labels": {
          "$ref": "#/definitions/CountryConfigurationLabels",
          "title": "The localized labels for address form fields"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CountryConfigurationZone"
          },
          "title": "A localized zone (province, state, etc.) for this country"
        },
        "locale": {
          "type": "string",
          "title": "The locale used for localizing this information"
        }
      },
      "title": "Information for displaying and editing an address in a given localization"
    },
    "v1CountryOption": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The two-letter country code for this country"
        },
        "name": {
          "type": "string",
          "title": "The localized name of this country"
        }
      },
      "title": "Shorthand information for displaying countries in form options"
    },
    "v1GetCountryConfigurationResponse": {
      "type": "object",
      "properties": {
        "country": {
          "$ref": "#/definitions/v1CountryConfiguration",
          "title": "The country configuration for a given country code and locale"
        }
      },
      "title": "GetCountryConfigurationResponse returns localized address information for a given country and locale"
    },
    "v1ListAllCountryOptionsResponse": {
      "type": "object",
      "properties": {
        "countryOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CountryOption"
          },
          "title": "The country options"
        }
      },
      "title": "Returns a list of country options"
    },
    "apiyextv1Status": {
      "type": "string",
      "enum": [
        "IN_PROGRESS",
        "FINISHED"
      ],
      "default": "IN_PROGRESS"
    },
    "v1Comment": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "string",
          "title": "The internal ID of the comment"
        },
        "parentId": {
          "type": "string",
          "description": "The parent ID of the comment. Can be a media ID or a comment ID."
        },
        "mediaId": {
          "type": "string",
          "description": "The ID of the Media this comment was made on."
        },
        "instagramCommentId": {
          "type": "string",
          "title": "The external ID of the comment"
        },
        "text": {
          "type": "string",
          "title": "The comment text"
        },
        "username": {
          "type": "string",
          "title": "The username of the commenter"
        },
        "instagramUserId": {
          "type": "string",
          "title": "The instagram user ID of the commenter"
        },
        "postedOn": {
          "type": "string",
          "format": "date-time",
          "title": "The time the comment was made"
        },
        "likeCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of likes on this comment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the comment was created in storage"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When comment was updated in storage"
        },
        "hasReplies": {
          "type": "boolean",
          "title": "Indicates if the comment has replies"
        }
      },
      "description": "A model representing an instagram Comment."
    },
    "v1CreateQuestionResponse": {
      "type": "object",
      "properties": {
        "question": {
          "$ref": "#/definitions/v1Question"
        }
      },
      "title": "Response from asking a question"
    },
    "v1GetCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Comment"
          }
        }
      }
    },
    "v1GetQuestionResponse": {
      "type": "object",
      "properties": {
        "question": {
          "$ref": "#/definitions/v1Question"
        }
      },
      "title": "Response for getting a questions with specific question id"
    },
    "v1GetTermResponse": {
      "type": "object",
      "properties": {
        "term": {
          "$ref": "#/definitions/v1Term"
        }
      }
    },
    "v1ListQuestionsResponse": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Question"
          }
        },
        "more": {
          "type": "boolean",
          "description": "Indicates that more questions were avaialable, but not returned due\nto the page size limit."
        },
        "cursor": {
          "type": "string",
          "description": "A cursor that can be passed to subsequent ListQuestionsRequest requests to\npage through the results."
        }
      },
      "title": "Response for listing questions for an account group"
    },
    "v1ListTermsResponse": {
      "type": "object",
      "properties": {
        "terms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Term"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1Question": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID"
        },
        "locationId": {
          "type": "string",
          "title": "Google Location ID"
        },
        "questionId": {
          "type": "string",
          "title": "Question ID"
        },
        "version": {
          "type": "string",
          "title": "Version of question"
        },
        "locationPathName": {
          "type": "string",
          "title": "Google Location Path Name"
        },
        "text": {
          "type": "string",
          "title": "Question Content"
        },
        "author": {
          "type": "string",
          "title": "Author Name"
        },
        "authorPhotoUrl": {
          "type": "string",
          "title": "Author profile photo url"
        },
        "authorType": {
          "type": "string",
          "title": "Author type"
        },
        "totalAnswerCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of answers"
        },
        "upVoteCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of up votes"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The datatime when the question is published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the question is created in our system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the question is modified in our system"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the question is deleted in our system"
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Answer"
          },
          "title": "Answers to the question"
        },
        "previousVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Question"
          },
          "title": "Previous versions of this question"
        }
      }
    },
    "v1Source": {
      "type": "string",
      "enum": [
        "SOURCE_INVALID",
        "SOURCE_SYSTEM",
        "SOURCE_SYSTEM_ADMIN"
      ],
      "default": "SOURCE_INVALID"
    },
    "v1Term": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ListConversationsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1ConversationSource"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sentiment": {
          "type": "string",
          "format": "int64"
        },
        "salesScore": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListConversationsRequestSort": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1ConversationSortField"
        },
        "direction": {
          "$ref": "#/definitions/v1SortDirection"
        }
      }
    },
    "v1ConversationSortField": {
      "type": "string",
      "enum": [
        "CONVERSATION_SORT_FIELD_UNSPECIFIED",
        "CONVERSATION_SORT_FIELD_CREATED",
        "CONVERSATION_SORT_FIELD_UPDATED",
        "CONVERSATION_SORT_FIELD_TITLE",
        "CONVERSATION_SORT_FIELD_SENTIMENT",
        "CONVERSATION_SORT_FIELD_SALES_SCORE"
      ],
      "default": "CONVERSATION_SORT_FIELD_UNSPECIFIED"
    },
    "v1ConversationSource": {
      "type": "string",
      "enum": [
        "CONVERSATION_SOURCE_UNSPECIFIED",
        "CONVERSATION_SOURCE_GOOGLE_MEET",
        "CONVERSATION_SOURCE_GONG",
        "CONVERSATION_SOURCE_TEAMS",
        "CONVERSATION_SOURCE_ZOOM"
      ],
      "default": "CONVERSATION_SOURCE_UNSPECIFIED"
    },
    "v1CreateConversationResponse": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          }
        }
      }
    },
    "v1EvaluationFeedback": {
      "type": "string",
      "enum": [
        "EVALUATION_FEEDBACK_UNDEFINED",
        "EVALUATION_FEEDBACK_POSITIVE",
        "EVALUATION_FEEDBACK_NEGATIVE"
      ],
      "default": "EVALUATION_FEEDBACK_UNDEFINED"
    },
    "v1EvaluationReason": {
      "type": "string",
      "enum": [
        "EVALUATION_REASON_UNDEFINED",
        "EVALUATION_REASON_INACCURATE_SUMMARY",
        "EVALUATION_REASON_INACCURATE_TAKEAWAYS",
        "EVALUATION_REASON_INACCURATE_ACTION_ITEMS",
        "EVALUATION_REASON_LACK_OF_DETAILS",
        "EVALUATION_REASON_WRONG_SPEAKERS",
        "EVALUATION_REASON_OTHER"
      ],
      "default": "EVALUATION_REASON_UNDEFINED"
    },
    "v1ExternalAttendee": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        }
      }
    },
    "v1GetConversationResponse": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        }
      }
    },
    "v1GetRecordingURLResponse": {
      "type": "object",
      "properties": {
        "recordingUrl": {
          "type": "string"
        }
      }
    },
    "v1ListConversationsResponse": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Conversation"
          },
          "title": "list of the requested conversation data"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Response to a request to get a list of conversations"
    },
    "v1TranscriptEntry": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "words": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Words"
          }
        }
      }
    },
    "v1Words": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "startTime": {
          "type": "number",
          "format": "float"
        },
        "endTime": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "BundleItemPrice": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Price amount"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "description": "The setup fee for the product."
        }
      },
      "title": "Price represent the price of a bundle item"
    },
    "BundlePricingPriceAndFrequency": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "The frequency for the price"
        },
        "effectivePrice": {
          "type": "string",
          "format": "int64",
          "description": "The price of the bundle at the specified frequency after bundle discounts."
        },
        "initialPrice": {
          "type": "string",
          "format": "int64",
          "title": "The initial or starting at price of the bundle (includes setup fee and accounts for any bundle discounts)"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "The setup fee of the bundle at the specified frequency"
        }
      }
    },
    "CalculateLineItemTaxesResponseLineItemTaxes": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "title": "The identifier of what products/subscription this item refers to"
        },
        "taxableAmount": {
          "type": "number",
          "format": "double",
          "title": "The taxable amount of the line item in cents and to however much precision we can get with floating point values\nin practice, that will be 10e(-4 - [# of decimal points in the rate percentage])"
        },
        "taxRateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The tax rate ids that applied to this line item"
        }
      }
    },
    "CanCreateSubscriptionsRequestSubscriptionItem": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The SKU of the product."
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "description": "The frequency the product is billed at."
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "The order quantity of this product."
        }
      }
    },
    "DateFilterDateField": {
      "type": "string",
      "enum": [
        "CREATED",
        "ISSUED"
      ],
      "default": "CREATED",
      "title": "- CREATED: Filter invoice by their created date\n - ISSUED: Filter invoice by their issued date"
    },
    "GetMultiSubscriptionsRequestKey": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "description": "The id of the merchant selling the product."
        },
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "customerId": {
          "type": "string",
          "title": "The reference to the owner in the external system"
        },
        "orderId": {
          "type": "string",
          "description": "Unique id for this instance of the sku."
        }
      }
    },
    "GetWholesaleComparisonRequestGetWholesaleComparisonFilters": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The unique identifier of products (Stock Keeping Unit)"
        },
        "currencyCode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Currencies, using the ISO 3 letter code"
        }
      }
    },
    "GetWholesaleComparisonResponseGetWholesaleComparisonResult": {
      "type": "object",
      "properties": {
        "pricingPlanId": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "productPricing": {
          "$ref": "#/definitions/v1ProductPricing"
        }
      }
    },
    "ListInvoicesRequestFiltersDateFilter": {
      "type": "object",
      "properties": {
        "dateField": {
          "$ref": "#/definitions/DateFilterDateField"
        },
        "dateLte": {
          "type": "string",
          "format": "date-time"
        },
        "dateGte": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ListPaymentRequestListPaymentFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "allocationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ListPricingPlanProductsRequestListPricingPlanProductsFilters": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "pricingPlanIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListProductsRequestListProductsFilters": {
      "type": "object",
      "properties": {
        "hasDiscount": {
          "type": "boolean",
          "title": "has discount filters only products that have discounts applied"
        },
        "hasPricingOverride": {
          "type": "boolean",
          "title": "has pricing override filters only on products that have an override for that merchant"
        },
        "productType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/billingv1ProductType"
          },
          "title": "the product types that should be returned"
        },
        "skus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the skus of products that should be returned"
        }
      }
    },
    "ListPurchaseItemsRequestListPurchaseItemsFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ListPurchaseRequestListPurchaseBillingStrategyFilter": {
      "type": "object",
      "properties": {
        "billingStrategy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/billingv1BillingStrategy"
          }
        }
      }
    },
    "ListPurchaseRequestListPurchaseFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "purchaseId": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "billingStrategyFilter": {
          "$ref": "#/definitions/ListPurchaseRequestListPurchaseBillingStrategyFilter"
        },
        "state": {
          "$ref": "#/definitions/ListPurchaseRequestState"
        },
        "minPrice": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/v1PurchaseStatus"
        },
        "includeVoided": {
          "type": "boolean"
        },
        "dunningPauseStart": {
          "type": "string",
          "format": "date-time"
        },
        "dunningPauseEnd": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ListPurchaseRequestState": {
      "type": "string",
      "enum": [
        "LIST_PURCHASE_REQUEST_STATE_ALL",
        "LIST_PURCHASE_REQUEST_STATE_OVERDUE"
      ],
      "default": "LIST_PURCHASE_REQUEST_STATE_ALL"
    },
    "ListRecurringInvoicesFiltersDetailedInterval": {
      "type": "object",
      "properties": {
        "interval": {
          "$ref": "#/definitions/v1Interval"
        },
        "intervalCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListRetailDisputesRequestListRetailDisputesFilters": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1DisputeStatus",
          "description": "Filter to disputes by specific status. We only support filtering by one status at a time."
        }
      },
      "title": "Filters to apply when listing disputes"
    },
    "ListRetailPaymentsRequestListRetailPaymentsFilters": {
      "type": "object",
      "properties": {
        "payoutId": {
          "type": "string",
          "title": "the payout ID you want to list purchases for"
        },
        "customerId": {
          "type": "string",
          "description": "Filter payments to a specific customer id."
        },
        "createdDateGte": {
          "type": "string",
          "format": "date-time",
          "title": "Filter to payments greater than or equal to the given timestamp"
        },
        "createdDateLte": {
          "type": "string",
          "format": "date-time",
          "title": "Filter to payments less than or equal to the given timestamp"
        }
      }
    },
    "ListRetailTransactionsRequestListRetailTransactionsFilters": {
      "type": "object",
      "properties": {
        "payoutId": {
          "type": "string",
          "description": "the payout ID you want to list purchases for."
        },
        "createdDateGte": {
          "type": "string",
          "format": "date-time",
          "title": "Filter to transactions greater than or equal to the given timestamp"
        },
        "createdDateLte": {
          "type": "string",
          "format": "date-time",
          "title": "Filter to transactions less than or equal to the given timestamp"
        },
        "type": {
          "$ref": "#/definitions/v1RetailTransactionType",
          "title": "Filters to transactions of the specified type"
        },
        "customerId": {
          "type": "string",
          "description": "Filter transactions to a specific customer id."
        },
        "invoiceId": {
          "type": "string",
          "title": "the invoice ID to list purchases for"
        }
      }
    },
    "ListSalesCreditNoteRequestListSalesCreditNoteFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "merchant to list credit notes for"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SalesCreditNoteStatus"
          },
          "title": "statuses to list credit notes for"
        }
      }
    },
    "ListSalesInvoiceRequestListSalesInvoiceFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "merchant to list invoices for"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SalesInvoiceStatus"
          },
          "title": "statuses to list invoices for"
        },
        "paymentStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentStatuses"
          },
          "title": "the payment statuses to list invoices for"
        },
        "invoiceId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the ids to filter by"
        }
      }
    },
    "ListSubscriptionRetentionByGroupResponseSubscriptionRetentionByGroup": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "The identifier for the subset of retail customers that the merchant is selling to"
        },
        "subscriptionMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetentionMetrics"
          },
          "title": "The subscription metrics for the group"
        }
      }
    },
    "PaymentCardCARD_TYPE": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "VISA",
        "MASTERCARD",
        "AMEX",
        "DISCOVER",
        "JCB",
        "DINERS_CLUB"
      ],
      "default": "UNKNOWN",
      "title": "the card type, ex. Visa, Mastercard, AMEX"
    },
    "PaymentCardFUNDING_TYPE": {
      "type": "string",
      "enum": [
        "FUNDING_TYPE_UNKNOWN",
        "FUNDING_TYPE_CREDIT",
        "FUNDING_TYPE_DEBIT",
        "FUNDING_TYPE_PREPAID"
      ],
      "default": "FUNDING_TYPE_UNKNOWN"
    },
    "PaymentPaymentAllocation": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string",
          "title": "Where this payment is allocated to"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount (in cents) of this payment that has been allocated"
        },
        "type": {
          "$ref": "#/definitions/v1PaymentAllocationType",
          "title": "A reference to the type of payment on the allocation"
        }
      }
    },
    "PrepareRetailPaymentRequestOrder": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "the oder identifier"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "the amount of the order in cents"
        },
        "currencyCode": {
          "type": "string",
          "title": "the currency_code to create the payment intent within"
        },
        "paymentMethodId": {
          "type": "string",
          "title": "The payment method to create the payment intent with"
        }
      }
    },
    "PricingRule": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "format": "int64",
          "title": "Minimum unit range"
        },
        "max": {
          "type": "string",
          "format": "int64",
          "title": "Maximum unit range"
        },
        "units": {
          "type": "string",
          "format": "int64",
          "title": "Number of units sold in range"
        },
        "unitPrice": {
          "type": "string",
          "format": "int64",
          "title": "Price per unit sold in range"
        },
        "totalAmount": {
          "type": "string",
          "format": "int64",
          "title": "Total dollar amount sold in range in cents"
        }
      }
    },
    "PricingRuleType": {
      "type": "string",
      "enum": [
        "STANDARD",
        "STAIRSTEP",
        "TIERED",
        "CUSTOM"
      ],
      "default": "STANDARD"
    },
    "ProductSummaryDiscountDiscountType": {
      "type": "string",
      "enum": [
        "FIXED_AMOUNT",
        "PERCENT_AMOUNT",
        "FIXED_NUMBER_OF_UNITS",
        "FIXED_AMOUNT_PER_UNIT"
      ],
      "default": "FIXED_AMOUNT"
    },
    "RetailPaymentACHDetails": {
      "type": "object",
      "properties": {
        "lastFourDigits": {
          "type": "string"
        }
      }
    },
    "RetailPaymentACSSDetails": {
      "type": "object",
      "properties": {
        "lastFourDigits": {
          "type": "string"
        }
      }
    },
    "RetailPaymentCardDetails": {
      "type": "object",
      "properties": {
        "cardType": {
          "$ref": "#/definitions/v1CardType"
        },
        "lastFourDigits": {
          "type": "string"
        }
      },
      "title": "Details about the credit card use for the payment"
    },
    "RetailPaymentPaymentMethodDetailsType": {
      "type": "string",
      "enum": [
        "PAYMENT_METHOD_DETAILS_TYPE_UNSET",
        "PAYMENT_METHOD_DETAILS_TYPE_CARD",
        "PAYMENT_METHOD_DETAILS_TYPE_ACH_DEBIT",
        "PAYMENT_METHOD_DETAILS_TYPE_ACSS_DEBIT"
      ],
      "default": "PAYMENT_METHOD_DETAILS_TYPE_UNSET"
    },
    "RetailStatusResponseVerificationError": {
      "type": "object",
      "properties": {
        "requirement": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "RetailStatusResponseVerificationRequirements": {
      "type": "object",
      "properties": {
        "due": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of requirements that are currently due before payments can be accepted"
        },
        "error": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RetailStatusResponseVerificationError"
          },
          "title": "List of errors that explain why the list of requirements haven't been met"
        },
        "currentDeadline": {
          "type": "string",
          "format": "date-time",
          "title": "Current deadline for when the 'currently due' requirements are due"
        },
        "eventuallyDue": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of requirements that are eventually due else the account may be disabled"
        }
      }
    },
    "SearchMerchantsRequestSortBy": {
      "type": "string",
      "enum": [
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_MERCHANT_ID",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_COMPANY_NAME",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_CONTACT_NAME",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_EMAIL_ADDRESS",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_COUNTRY",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_STATE",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_CREATED",
        "SEARCH_MERCHANTS_REQUEST_SORT_BY_UPDATED"
      ],
      "default": "SEARCH_MERCHANTS_REQUEST_SORT_BY_MERCHANT_ID",
      "title": "All supported columns we are prepared to sort by"
    },
    "TaxRuleProductProductIdentifier": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "title": "The unique identifier of the product"
        },
        "type": {
          "$ref": "#/definitions/billingv1ProductType",
          "title": "The type of product"
        },
        "groupId": {
          "type": "string",
          "title": "The identifier of the group the product belongs to\nIf this is empty, then it is assumed that the product is not part of a group"
        }
      }
    },
    "TaxRuleTaxRuleEntity": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1TaxRuleCustomer",
          "title": "Customer entity type"
        },
        "product": {
          "$ref": "#/definitions/v1TaxRuleProduct",
          "title": "Product entity type"
        }
      }
    },
    "UpdateContractRequestMutation": {
      "type": "object",
      "properties": {
        "netD": {
          "type": "string",
          "format": "int64",
          "title": "The grace period (in days) from the due date for an invoice to be paid"
        },
        "currencyCode": {
          "type": "string",
          "title": "The currency ISO code for the contract"
        },
        "status": {
          "type": "string",
          "title": "The status of the contract"
        },
        "dimension": {
          "type": "string",
          "title": "The revenue dimension on the contract"
        },
        "signed": {
          "type": "string",
          "format": "date-time",
          "title": "The time the contract was signed"
        },
        "activated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the contract was activated"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The time the contract will end"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The time of the last contract ammendment"
        },
        "creditLimit": {
          "type": "string",
          "format": "int64",
          "title": "The credit limit on the contract"
        },
        "subscriptionId": {
          "type": "string",
          "description": "The contract's new subscription id."
        }
      },
      "description": "Mutation mutates a subject in a MutateSubject request."
    },
    "billingv1BillingStrategy": {
      "type": "string",
      "enum": [
        "BILLING_STRATEGY_NONE",
        "BILLING_STRATEGY_END_OF_PERIOD",
        "BILLING_STRATEGY_START_OF_PERIOD",
        "BILLING_STRATEGY_INSTANTLY",
        "BILLING_STRATEGY_END_OF_DAY"
      ],
      "default": "BILLING_STRATEGY_NONE"
    },
    "billingv1Discount": {
      "type": "object",
      "properties": {
        "discountId": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: please use the id field as the replacement for this field.\ndiscount_id is a unique identifier for the discount"
        },
        "discountType": {
          "$ref": "#/definitions/billingv1DiscountType",
          "description": "Discount type eg. fixed_amount, percent_amount, etc."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Discounted dollar amount in cents"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The date the discount starts/started"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The date the discount ends/ended"
        },
        "resetEachPeriod": {
          "type": "boolean",
          "title": "Whether or not the discount's usage should reset each period"
        },
        "merchantId": {
          "type": "string",
          "title": "The unique identifier for the merchant"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the discount was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the discount was updated"
        },
        "sku": {
          "type": "string",
          "title": "The unique stock keeping unit the discount is applied to"
        },
        "id": {
          "type": "string",
          "title": "An identifier field scoped to a specific merchant (and customer, if customer_id is set)"
        },
        "description": {
          "type": "string",
          "title": "The description so we know what the discount is for"
        },
        "customerId": {
          "type": "string",
          "title": "(OPTIONAL) The identifier of the customer the discount is applied to"
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer",
          "title": "The consumer type of the discount"
        },
        "subscriptionId": {
          "type": "string",
          "title": "(OPTIONAL) The identifier of the subscription the discount is applied to"
        },
        "numberOfBillingPeriods": {
          "type": "string",
          "format": "int64",
          "title": "The number of billing periods the discount is applied to regardless of the Discount's `end` date"
        }
      }
    },
    "billingv1DiscountType": {
      "type": "string",
      "enum": [
        "DISCOUNT_TYPE_FIXED_AMOUNT",
        "DISCOUNT_TYPE_PERCENT_AMOUNT",
        "DISCOUNT_TYPE_FIXED_NUMBER_OF_UNITS",
        "DISCOUNT_TYPE_FIXED_AMOUNT_PER_UNIT"
      ],
      "default": "DISCOUNT_TYPE_FIXED_AMOUNT"
    },
    "billingv1DisputeEvidence": {
      "type": "object",
      "properties": {
        "customerCommunication": {
          "$ref": "#/definitions/v1File",
          "description": "File containing evidence of communication with the customer."
        },
        "customerSignature": {
          "$ref": "#/definitions/v1File",
          "description": "File containing the customer's signature."
        },
        "shippingDocumentation": {
          "$ref": "#/definitions/v1File",
          "description": "File containing evidence of the shipping information."
        },
        "receipt": {
          "$ref": "#/definitions/v1File",
          "description": "File containing the receipt."
        },
        "uncategorizedFile": {
          "$ref": "#/definitions/v1File",
          "title": "documents that don't fall into any other evidence category"
        },
        "billingAddress": {
          "type": "string",
          "title": "The customer's billing address"
        },
        "customerEmailAddress": {
          "type": "string",
          "title": "The customer's email"
        },
        "customerName": {
          "type": "string",
          "title": "The customer's name"
        },
        "productDescription": {
          "type": "string",
          "title": "The description of the product"
        }
      }
    },
    "billingv1LineItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identifier of an item"
        },
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount (in cents)"
        },
        "quantity": {
          "type": "number",
          "format": "float",
          "title": "The quantity of items"
        },
        "description": {
          "type": "string",
          "title": "The name or human readable description"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "calculated total which includes discounts and taxes"
        },
        "appliedTaxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "title": "The tax rates which apply to the line item"
        },
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The default tax rates to apply to the line item"
        },
        "subtotal": {
          "type": "string",
          "format": "int64",
          "title": "The subtotal of the line item"
        }
      }
    },
    "billingv1ProductType": {
      "type": "string",
      "enum": [
        "PRODUCT_TYPE_INVALID",
        "PRODUCT_TYPE_STANDARD_PRODUCT",
        "PRODUCT_TYPE_VENDASTA_PRODUCT",
        "PRODUCT_TYPE_SUBSCRIPTION",
        "PRODUCT_TYPE_FEE",
        "PRODUCT_TYPE_PRIVATE_PRODUCT",
        "PRODUCT_TYPE_PARTNER_SUPPORT_SALES",
        "PRODUCT_TYPE_PACKAGE"
      ],
      "default": "PRODUCT_TYPE_INVALID"
    },
    "billingv1Subscription": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "customerId": {
          "type": "string",
          "description": "The reference to the owner in the external system."
        },
        "orderId": {
          "type": "string",
          "description": "Unique ID for this instance of the sku."
        },
        "billingStart": {
          "type": "string",
          "format": "date-time",
          "title": "(Optional) the date at which billing should occur. This date can be in the past"
        },
        "renewalState": {
          "$ref": "#/definitions/v1RenewalState",
          "title": "The state that the subscription is getting created in"
        },
        "proratedTo": {
          "type": "string",
          "format": "date-time",
          "description": "DEPRECATED for using in subscription creation: use `align_with` instead\n(Optional) The date to prorate the subscription to. If billing_start is Jan 1 and prorated_to is Jan 15, the price should reflect the period from Jan 15 - Jan 31 but will renew for a full month on Feb 1 (assuming monthly frequency)."
        },
        "retailBundleId": {
          "type": "string",
          "title": "(Optional) the bundle that applies to calculating retail pricing"
        },
        "forResale": {
          "type": "boolean",
          "title": "indicates whether the subscription exists for resale by the merchant"
        },
        "customUnitPrice": {
          "type": "string",
          "format": "int64",
          "title": "The wholesale custom unit price to be set on the subscription"
        },
        "alignWith": {
          "$ref": "#/definitions/v1AlignmentSubscription",
          "title": "Used on subscription create to align the anniversary date of a new subscription with an existing subscription\ntriggers prorated billing on the new subscription"
        },
        "bundleInstanceId": {
          "type": "string",
          "description": "An ID that associated the subscription with others purchased as part of the same bundle. This is important when purchasing multiples of a bundle as part of the same transaction,\nas it allows the system to determine which subscriptions are part of which instance of the bundle.\nThis can be any string, as long as it is unique within the set of subscriptions created within the same RPC call."
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "the frequency at which the wholesale subscription will be billed"
        },
        "retailAmount": {
          "type": "string",
          "format": "int64",
          "title": "The retail amount for the subscription. This is in the smallest currency unit.\nDEPRECATED: this field is not used by the billing system. Prices must be set using PricingService.UpsertRetail"
        },
        "retailFrequency": {
          "$ref": "#/definitions/v1Frequency",
          "description": "The frequency at which the retail price will be billed."
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer",
          "title": "The billing relationship the subscription is being created for"
        },
        "renewalStart": {
          "type": "string",
          "format": "date-time",
          "description": "(Optional) The desired renewal start date. This should be used when the subscription is being created with a specific renewal start date in mind."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "(Optional) The desired expiry date. This should be used when the subscription is being created with a specific end date in mind."
        },
        "autoBillable": {
          "type": "boolean",
          "title": "Specifies whether the subscription should result in charges (ie. through invoices) to the customer"
        },
        "subscriptionId": {
          "type": "string",
          "title": "The identifier of the subscription\nThis id is meant to match with an existing SubscriptionPreset so fields can be hydrated from that preset\nIf there is no matching SubscriptionPreset, this id will be ignored and a new id will be auto-generated"
        },
        "billingCycleAnchor": {
          "type": "string",
          "format": "date-time",
          "description": "Acts as an anchor date for determining when a renewal is recorded or prepared to be charged.\nIt is called an anchor date because it does not reflect the actual date, but is used to compute future dates."
        }
      },
      "description": "A subscription connects a customer to products/services. It determines what your customer has signed up for and how often and if they're charged recurringly for it."
    },
    "billingv1SubscriptionStatus": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_STATUS_UNSET",
        "SUBSCRIPTION_STATUS_ACTIVE",
        "SUBSCRIPTION_STATUS_EXPIRED"
      ],
      "default": "SUBSCRIPTION_STATUS_UNSET"
    },
    "v1AccountBalance": {
      "type": "object",
      "properties": {
        "available": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BalanceAmount"
          },
          "title": "the balance by currency that is available to be transferred or paid out"
        }
      },
      "title": "AccountBalance represents an account's current balance"
    },
    "v1AddBundleResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1AddLineItemResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1Adjustment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fee": {
          "type": "string",
          "format": "int64"
        },
        "net": {
          "type": "string",
          "format": "int64"
        },
        "refund": {
          "$ref": "#/definitions/v1RetailRefund"
        },
        "dispute": {
          "$ref": "#/definitions/v1Dispute"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AlignmentSubscription": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "customerId": {
          "type": "string",
          "title": "The reference to the owner in the external system"
        },
        "orderId": {
          "type": "string",
          "description": "Unique id for this instance of the sku."
        }
      },
      "title": "an alignment subscription is specified in a create subscription request to align the new subscription to an existing subscription"
    },
    "v1AppliedBundle": {
      "type": "object",
      "properties": {
        "bundleId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "bundleItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedBundleItem"
          }
        },
        "hideBundleItems": {
          "type": "boolean"
        },
        "bundleInstanceId": {
          "type": "string"
        }
      }
    },
    "v1AppliedBundleItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "discountType": {
          "type": "string"
        },
        "discountAmount": {
          "type": "string",
          "format": "int64"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1AppliedCredit": {
      "type": "object",
      "properties": {
        "appliedAmount": {
          "type": "string",
          "format": "int64"
        },
        "referenceId": {
          "type": "string"
        },
        "referenceType": {
          "$ref": "#/definitions/v1CreditType"
        }
      }
    },
    "v1AppliedCreditNote": {
      "type": "object",
      "properties": {
        "creditNoteId": {
          "type": "string",
          "title": "The credit note id"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The credit amount applied in cents"
        },
        "creditNoteType": {
          "$ref": "#/definitions/v1CreditNoteType",
          "title": "The type of credit note"
        },
        "creditNoteNumber": {
          "type": "string",
          "title": "The credit note number"
        }
      }
    },
    "v1AppliedDiscount": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/billingv1DiscountType",
          "description": "Discount type eg. fixed_amount, percent_amount, etc."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "title": "Value of the discount"
        },
        "totalAmount": {
          "type": "string",
          "format": "int64",
          "title": "Discounted dollar amount in cents\nthis is computed on the server"
        },
        "description": {
          "type": "string",
          "title": "Full english description"
        },
        "referenceId": {
          "type": "string",
          "title": "reference_id could be a discount_id, or a bundle_id"
        }
      }
    },
    "v1AppliedFee": {
      "type": "object",
      "properties": {
        "appliedAmount": {
          "type": "string",
          "format": "int64",
          "title": "The resolved fee amount applied to the purchase"
        },
        "fee": {
          "$ref": "#/definitions/v1Fee",
          "title": "The Fee being applied"
        }
      },
      "title": "Includes the calculated amount of the fee, and the configuration of the Fee being applied on a purchase item"
    },
    "v1AppliedReferenceType": {
      "type": "string",
      "enum": [
        "APPLIED_REFERENCE_TYPE_UNSPECIFIED",
        "APPLIED_REFERENCE_TYPE_INVOICE"
      ],
      "default": "APPLIED_REFERENCE_TYPE_UNSPECIFIED"
    },
    "v1AppliedTaxRate": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "The amount, in cents, of the tax."
        },
        "taxRateId": {
          "type": "string",
          "description": "The tax rate that was applied to get this tax amount."
        },
        "name": {
          "type": "string",
          "title": "The tax name (e.g., \"PST\")"
        },
        "percentage": {
          "type": "number",
          "format": "float",
          "title": "This represents the tax rate percent from 1 to 100"
        },
        "description": {
          "type": "string",
          "title": "The description of the tax (e.g., \"Saskatchewan PST\")"
        }
      },
      "title": "AppliedTaxRate is the amount that was calculated for a given tax rate"
    },
    "v1AppliedTo": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string",
          "title": "The reference id of the item that the credit note is applied to"
        },
        "referenceType": {
          "$ref": "#/definitions/v1AppliedReferenceType",
          "title": "The type of reference that the credit note is applied to"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount (in cents) of the credit note that is applied to the item"
        },
        "creditNoteType": {
          "$ref": "#/definitions/v1CreditNoteType",
          "title": "The type of credit note"
        },
        "appliedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The date the credit note was applied"
        },
        "referenceNumber": {
          "type": "string",
          "title": "The reference number of the item that the credit note is applied to"
        },
        "shouldRefund": {
          "type": "boolean",
          "title": "Whether the applied credit should result in a refund (only applicable for request messages)"
        }
      }
    },
    "v1Balance": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "title": "the currency of the balance"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated the amount (in cents) of the balance"
        },
        "futurePayouts": {
          "type": "string",
          "format": "int64",
          "title": "the amount (in cents) of the future payouts"
        },
        "inTransit": {
          "type": "string",
          "format": "int64",
          "title": "the amount (in cents) of the in transit payouts"
        }
      }
    },
    "v1BalanceAmount": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "title": "The two letter ISO country code representing the currency of the balance amount"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "the amount of the balance in cents"
        }
      },
      "title": "BalanceAmount represents a balance's amount value and currency"
    },
    "v1BankAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountHolderName": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "routingNumber": {
          "type": "string"
        },
        "last4": {
          "type": "string"
        },
        "defaultForCurrency": {
          "type": "boolean"
        }
      }
    },
    "v1BillMultipleItemsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the temporary record that was created to group the items together"
        }
      }
    },
    "v1BillableItem": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "description": "The id of the merchant selling the product."
        },
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "customerId": {
          "type": "string",
          "title": "The reference to the owner in the external system"
        },
        "orderId": {
          "type": "string",
          "description": "Unique id for this instance of the sku."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the billable item will expire."
        },
        "billingStart": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the billable item starts wholesale billing."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the billable item was originally made"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the billable item was most recently modified"
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "The wholesale frequency this product is billed"
        },
        "nextRenewal": {
          "type": "string",
          "format": "date-time",
          "title": "The renewal date of the billable item where it is an anchor point value that may be set by users or calculated by the system"
        },
        "customerName": {
          "type": "string",
          "title": "The name of the customer"
        },
        "productName": {
          "type": "string",
          "title": "the name of the product"
        },
        "customerAddress": {
          "$ref": "#/definitions/v1BillableItemCustomerAddress",
          "title": "The address of the customer"
        },
        "customUnitPrice": {
          "type": "string",
          "format": "int64",
          "title": "The custom wholesale unit price of the subscription"
        },
        "retailFrequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "Deprecated: use `frequency` - the frequency field for both retail and wholesale BillableItems"
        },
        "nextRetailRenewal": {
          "type": "string",
          "format": "date-time",
          "title": "Deprecated: use `next_renewal` - the next_renewal field for both retail and wholesale BillableItems"
        },
        "retailUnitPrice": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use `price` to determine the pricing"
        },
        "status": {
          "$ref": "#/definitions/billingv1SubscriptionStatus",
          "title": "The current state of the subscription"
        },
        "price": {
          "$ref": "#/definitions/v1ProductPricing",
          "title": "The product pricing information"
        },
        "subscriptionId": {
          "type": "string",
          "title": "A unique identifier for the subscription"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The time the billable item was deleted"
        },
        "source": {
          "$ref": "#/definitions/v1Source",
          "title": "Who was responsible for the creation of the billable item"
        },
        "autoBillable": {
          "type": "boolean",
          "title": "Specifies whether the subscription should result in charges (ie. through invoices) to the customer\nIf unspecified, it will result in charges to the customer"
        },
        "description": {
          "type": "string",
          "title": "The description of the subscription. This is how the subscription will appear on invoices and is synonymous with a display name"
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer",
          "title": "The billing relationship the subscription is being created for"
        },
        "billingCycleAnchor": {
          "type": "string",
          "format": "date-time",
          "description": "The anchor date for determining when a renewal is recorded or prepared to be charged."
        },
        "nextServicePeriodStart": {
          "type": "string",
          "format": "date-time",
          "title": "The start of the next service period"
        },
        "nextServicePeriodEnd": {
          "type": "string",
          "format": "date-time",
          "title": "The end of the next service period"
        },
        "nextInvoiceDate": {
          "type": "string",
          "format": "date-time",
          "title": "The next day an invoice will be generated for the subscription"
        }
      },
      "description": "A proto representation of a billable item (also referred to as a subscription)."
    },
    "v1BillableItemCustomerAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The street address of the customer"
        },
        "city": {
          "type": "string",
          "title": "The city of the customer"
        },
        "state": {
          "type": "string",
          "title": "The state of the customer"
        },
        "zip": {
          "type": "string",
          "title": "The zip code of the customer"
        },
        "country": {
          "type": "string",
          "title": "The country of the customer"
        }
      }
    },
    "v1BulkReplaceTaxRulesResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The ids of the tax rules in the same order that they were sent in the request"
        }
      }
    },
    "v1Bundle": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "MerchantID is the merchant scope of the bundle"
        },
        "bundleId": {
          "type": "string",
          "title": "BundleID is the id of the bundle"
        },
        "name": {
          "type": "string",
          "title": "Name is the human-readable, non-unique name for this bundle"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BundleItem"
          },
          "title": "Items is the list of products and their corresponding discounts in a valid bundle"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created date of the bundle"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated date of the bundle"
        },
        "hideBundleDetails": {
          "type": "boolean",
          "title": "Specifies whether the items in the bundle should be shown on invoices"
        }
      },
      "title": "Bundle represents a group of products that are sold together"
    },
    "v1BundleItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "title": "product_id is the product that this bundle item is for. ProductID should not be confused with sku, as a single product could contain many skus"
        },
        "discountType": {
          "$ref": "#/definitions/billingv1DiscountType",
          "title": "discount_type is the type of discount to apply to this bundle item"
        },
        "discountAmount": {
          "type": "string",
          "format": "int64",
          "title": "discount_amount is the amount of the discount. This can represent a base-unit currency amount, percentage or quantity, depending on the discount type"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "quantity is the instances of this product that must be purchased in the bundle order for this bundle item to be valid and discounts applied"
        },
        "defaultSku": {
          "type": "string",
          "title": "default sku is the sku used when applying this item in a bundle without additional context"
        },
        "price": {
          "$ref": "#/definitions/BundleItemPrice",
          "description": "price for this item."
        }
      },
      "title": "BundleItem represents a single item in a bundle"
    },
    "v1BundlePricing": {
      "type": "object",
      "properties": {
        "bundleId": {
          "type": "string",
          "title": "The ID of the bundle the pricing is for"
        },
        "currency": {
          "type": "string",
          "title": "The ISO code of the resolved retail currency"
        },
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BundlePricingPriceAndFrequency"
          },
          "title": "A list of prices for each frequency in the bundle"
        }
      }
    },
    "v1CalculateCreditNoteResponse": {
      "type": "object",
      "properties": {
        "creditNote": {
          "$ref": "#/definitions/v1CreditNote",
          "title": "The calculated credit note"
        }
      }
    },
    "v1CalculateLineItemTaxesRequestLineItem": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "title": "The identifier of what products/subscription this item refers to. Does not conform to the SKU standard"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Total amount of the line item (in cents)"
        }
      }
    },
    "v1CalculateLineItemTaxesResponse": {
      "type": "object",
      "properties": {
        "lineItemTaxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CalculateLineItemTaxesResponseLineItemTaxes"
          },
          "title": "Tax information for each line item"
        },
        "totalTaxableAmount": {
          "type": "string",
          "format": "int64",
          "title": "Final rounded total for the line items taxes (in cents)"
        },
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "All of the taxes that were applied to various line items\nNot all tax rates apply to all line items due to potential tax rules that may apply\nEach line item contains a breakdown of the tax rate ids that apply to it"
        },
        "appliedTaxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "title": "The aggregate amounts calculated per tax rate for all line items"
        }
      }
    },
    "v1CalculateTaxResponse": {
      "type": "object",
      "properties": {
        "taxableAmount": {
          "type": "string",
          "format": "int64",
          "title": "The taxable amount (in cents)"
        },
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The taxes that applied to the order"
        }
      }
    },
    "v1CanCreateSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "validationResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidateResponse"
          }
        }
      }
    },
    "v1CardType": {
      "type": "string",
      "enum": [
        "CARD_TYPE_UNKNOWN",
        "CARD_TYPE_VISA",
        "CARD_TYPE_MASTERCARD",
        "CARD_TYPE_AMEX",
        "CARD_TYPE_DISCOVER",
        "CARD_TYPE_JCB",
        "CARD_TYPE_DINERS_CLUB"
      ],
      "default": "CARD_TYPE_UNKNOWN",
      "title": "the card type, ex. Visa, Mastercard, AMEX"
    },
    "v1CollectionMethod": {
      "type": "string",
      "enum": [
        "COLLECTION_METHOD_INVALID",
        "COLLECTION_METHOD_MANUAL",
        "COLLECTION_METHOD_EMAIL",
        "COLLECTION_METHOD_CHARGE_AUTOMATICALLY"
      ],
      "default": "COLLECTION_METHOD_INVALID",
      "description": "Collection method describes how the invoice should be collected.\n\n - COLLECTION_METHOD_INVALID: Invalid means there is no user defined value. This options is invalid.\n - COLLECTION_METHOD_MANUAL: Manual means the merchant will collect payments against the invoice externally.\n - COLLECTION_METHOD_EMAIL: The invoice will be emailed to the recipient user defined on the recurring invoice. The user can make their payment\ntowards the invoice from the page the email directs them to.\n - COLLECTION_METHOD_CHARGE_AUTOMATICALLY: Automatically charge the card on file."
    },
    "v1Commitment": {
      "type": "object",
      "properties": {
        "initial": {
          "type": "string",
          "format": "int64"
        },
        "recurring": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ComponentPricing": {
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string",
          "title": "id of the component"
        },
        "unitPrice": {
          "type": "string",
          "format": "int64",
          "title": "the price of a single unit of the component in cents"
        }
      },
      "description": "A Component represents some metered element or consumable which exists on a product.\nFor example, Google bills \"Instance Hours\" as a metered component.\nEach component is identified by an ID and has a 'Unit Price' which will be multiplied by\nthe quantity of component used to get the total cost of that component."
    },
    "v1ConfigureRetailPaymentProviderResponse": {
      "type": "object",
      "properties": {
        "stripeUrl": {
          "type": "string",
          "title": "the stripe url to the hosted on-boarding"
        },
        "error": {
          "type": "string",
          "title": "a contextual error informing the user of the failure"
        }
      }
    },
    "v1Consumer": {
      "type": "string",
      "enum": [
        "CONSUMER_UNSET",
        "CONSUMER_WHOLESALE",
        "CONSUMER_RETAIL"
      ],
      "default": "CONSUMER_UNSET",
      "description": "- CONSUMER_WHOLESALE: A wholesale consumer represents a billing relationship with Vendasta\n - CONSUMER_RETAIL: A retail consumer represents a billing relationship with a partner",
      "title": "Consumer represents the billing relationship"
    },
    "v1Contract": {
      "type": "object",
      "properties": {
        "availableSeats": {
          "type": "string",
          "format": "int64"
        },
        "totalSeats": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ContractDocument": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of a merchant"
        },
        "id": {
          "type": "string",
          "title": "The unique identifier of the document"
        },
        "filename": {
          "type": "string",
          "title": "The filename of the document"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the document was created"
        }
      }
    },
    "v1ContractSubscriptionStatus": {
      "type": "string",
      "enum": [
        "CONTRACT_SUBSCRIPTION_STATUS_UNSET",
        "CONTRACT_SUBSCRIPTION_STATUS_PENDING",
        "CONTRACT_SUBSCRIPTION_STATUS_SUCCEEDED",
        "CONTRACT_SUBSCRIPTION_STATUS_FAILED"
      ],
      "default": "CONTRACT_SUBSCRIPTION_STATUS_UNSET"
    },
    "v1CreateContractResponse": {
      "type": "object",
      "properties": {
        "contract": {
          "$ref": "#/definitions/v1Contract",
          "title": "The created contract"
        }
      }
    },
    "v1CreateCreditNoteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The identifier of the created credit note"
        }
      }
    },
    "v1CreateDiscountResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the discount that was created"
        }
      }
    },
    "v1CreateInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string",
          "title": "The ID of the invoice that was created. This id refers to a billing_v1.Invoice"
        }
      }
    },
    "v1CreateMerchantRequestIncludeInFinancialRecords": {
      "type": "object",
      "properties": {
        "includeInFinancialRecords": {
          "type": "boolean"
        }
      },
      "title": "Whether to include the merchant within financial records.\nthis bool is wrapped in a message to allow for an \"unset\" null state"
    },
    "v1CreatePaymentLinkResponse": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string",
          "title": "Invoice ID for payment link"
        }
      }
    },
    "v1CreatePricingPlanProductResponse": {
      "type": "object",
      "properties": {
        "pricingPlanId": {
          "type": "string",
          "title": "The unique identifier of the pricing plan"
        },
        "sku": {
          "type": "string",
          "title": "The unique identifier of the product (Stock Keeping Unit)"
        }
      }
    },
    "v1CreatePricingPlanResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The unique identifier of the pricing plan"
        }
      }
    },
    "v1CreateSubscriptionResponse": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "title": "The identifier of the subscription"
        }
      }
    },
    "v1CreateSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the temporary record that was created to group the items together"
        }
      }
    },
    "v1CreateTaxResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the tax rate."
        }
      }
    },
    "v1CreditBalance": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant"
        },
        "currency": {
          "type": "string",
          "title": "The currency that this balance is in"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the credit"
        }
      }
    },
    "v1CreditNote": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identifier for the credit note"
        },
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant"
        },
        "number": {
          "type": "string",
          "title": "The reference number assigned to the credit note"
        },
        "customerId": {
          "type": "string",
          "title": "Identifier of the customer who the credit note is for within Vendasta (AG-1234567890)"
        },
        "subtotal": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the credit note before taxes and discounts"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the credit note"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created date of the credit note"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Last updated date of the credit note"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingv1LineItem"
          },
          "title": "The line items of the credit note"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "The currency that this credit note is in"
        },
        "amountTax": {
          "type": "string",
          "format": "int64",
          "description": "The amount of tax on this credit note. This is the sum of all the tax amounts on this credit note."
        },
        "appliedTaxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "description": "The aggregate amounts calculated per tax rate for all line items."
        },
        "customerName": {
          "type": "string",
          "title": "The name of the customer"
        },
        "contactId": {
          "type": "string",
          "title": "The identifier of the contact who will receive credit note notification"
        },
        "memo": {
          "type": "string",
          "title": "An arbitrary note which appears on the credit note"
        },
        "notes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Note"
          },
          "title": "The internal notes on an credit note"
        },
        "additionalContactIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The user ids of any additional contacts who will receive credit note notifications"
        },
        "reason": {
          "$ref": "#/definitions/v1CreditNoteReason",
          "title": "The reason for the credit note"
        },
        "appliedTo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTo"
          },
          "title": "The financial documents that the credit note is applied to"
        }
      }
    },
    "v1CreditNoteReason": {
      "type": "string",
      "enum": [
        "CREDIT_NOTE_REASON_UNSPECIFIED",
        "CREDIT_NOTE_REASON_DUPLICATE_CHARGE",
        "CREDIT_NOTE_REASON_PRODUCT_UNSATISFACTORY",
        "CREDIT_NOTE_REASON_ORDER_CHANGE",
        "CREDIT_NOTE_REASON_OTHER"
      ],
      "default": "CREDIT_NOTE_REASON_UNSPECIFIED"
    },
    "v1CreditNoteType": {
      "type": "string",
      "enum": [
        "CREDIT_NOTE_UNSPECIFIED",
        "CREDIT_NOTE_PRE_PAYMENT",
        "CREDIT_NOTE_POST_PAYMENT"
      ],
      "default": "CREDIT_NOTE_UNSPECIFIED"
    },
    "v1CreditType": {
      "type": "string",
      "enum": [
        "CREDIT_TYPE_UNSET",
        "CREDIT_TYPE_CREDIT_NOTE",
        "CREDIT_TYPE_PROMOTIONAL"
      ],
      "default": "CREDIT_TYPE_UNSET"
    },
    "v1CustomerSummary": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The customer whose purchase item summary is being returned"
        },
        "purchaseItemQuantity": {
          "type": "string",
          "format": "int64",
          "title": "The number of purchase items associated to the customer"
        },
        "purchaseItemTotal": {
          "type": "string",
          "format": "int64",
          "title": "the summed total of purchase item costs"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "the currency in which the purchases were made in"
        }
      },
      "title": "A summary of the purchase items associated with a customer"
    },
    "v1DefaultCustomerConfiguration": {
      "type": "object",
      "properties": {
        "generateMethod": {
          "type": "string",
          "title": "Indicates how invoices will be automatically generated. Can be \"subscription\", \"template\" or empty (don't auto bill)"
        },
        "collectionMethod": {
          "type": "string",
          "title": "Indicates how we will attempt to collect for invoices on this customer. Can be \"email\", \"charge\" or empty (don't post)"
        },
        "invoiceDay": {
          "type": "string",
          "format": "int64",
          "title": "The day of the month in which renewal draft invoices will be issued; If 0, draft invoices will be issues as products renew"
        },
        "memo": {
          "type": "string",
          "title": "The memo to be added to an invoice"
        },
        "netD": {
          "type": "string",
          "format": "int64",
          "title": "The grace period (in days) from the due date for an invoice to be paid"
        },
        "autoGenerateRetailSubscriptions": {
          "type": "boolean",
          "title": "Indicates whether retail subscriptions should be automatically generated for the customer"
        }
      },
      "title": "DefaultCustomerConfiguration is the defaults for all new RetailCustomerConfiguration objects created under the RetailConfiguration"
    },
    "v1DeleteLineItemResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1Dispute": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "string",
          "title": "The identifier of the payment that was disputed"
        },
        "status": {
          "$ref": "#/definitions/v1DisputeStatus",
          "title": "The current status of the dispute"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the dispute."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount being disputed"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date the dispute was created."
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency the amount is represented in."
        },
        "evidence": {
          "$ref": "#/definitions/billingv1DisputeEvidence",
          "description": "Evidence provided for the dispute."
        },
        "evidenceDetails": {
          "$ref": "#/definitions/v1DisputeEvidenceDetails",
          "description": "Details about the evidence provided for the dispute."
        },
        "isChargeRefundable": {
          "type": "boolean",
          "title": "Whether or not the charge is refundable"
        },
        "reason": {
          "type": "string",
          "title": "The reason that the charge was disputed"
        },
        "fee": {
          "type": "string",
          "format": "int64",
          "title": "The amount of the dispute fee"
        },
        "feeCurrencyCode": {
          "type": "string",
          "title": "The currency of the dispute fee"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID that made the payment"
        },
        "paymentReferenceId": {
          "type": "string",
          "title": "The ID of the entity the payment was made against (i.e. an invoice or order)"
        },
        "paymentReferenceType": {
          "$ref": "#/definitions/v1RetailPaymentReferenceType",
          "title": "The type of object the reference ID is referring to"
        },
        "paymentDescription": {
          "type": "string",
          "title": "The description of the payment"
        },
        "paymentReceivedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The date the original charge was made"
        },
        "resolvedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The date the dispute was resolved"
        }
      },
      "title": "Dispute represents an issue a customer has raised regarding a charge against their credit card"
    },
    "v1DisputeEvidenceDetails": {
      "type": "object",
      "properties": {
        "dueBy": {
          "type": "string",
          "format": "date-time",
          "title": "The date that the evidence is due by"
        },
        "hasEvidence": {
          "type": "boolean",
          "title": "Whether or not a dispute has evidence"
        },
        "pastDue": {
          "type": "boolean",
          "title": "Whether or not the evidence is past due"
        },
        "submissionCount": {
          "type": "string",
          "format": "int64",
          "title": "How many times the evidence was submitted"
        }
      }
    },
    "v1DisputeStatus": {
      "type": "string",
      "enum": [
        "DISPUTE_STATUS_UNSET",
        "DISPUTE_STATUS_WARNING_NEEDS_RESPONSE",
        "DISPUTE_STATUS_WARNING_UNDER_REVIEW",
        "DISPUTE_STATUS_WARNING_CLOSED",
        "DISPUTE_STATUS_NEEDS_RESPONSE",
        "DISPUTE_STATUS_UNDER_REVIEW",
        "DISPUTE_STATUS_CHARGE_REFUNDED",
        "DISPUTE_STATUS_WON",
        "DISPUTE_STATUS_LOST"
      ],
      "default": "DISPUTE_STATUS_UNSET"
    },
    "v1DuplicateInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string",
          "title": "The invoice id"
        }
      }
    },
    "v1EntityType": {
      "type": "string",
      "enum": [
        "ENTITY_TYPE_UNKNOWN",
        "ENTITY_TYPE_CUSTOMER",
        "ENTITY_TYPE_CONFLICT"
      ],
      "default": "ENTITY_TYPE_UNKNOWN"
    },
    "v1ExportResponse": {
      "type": "object"
    },
    "v1File": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the file was created"
        },
        "id": {
          "type": "string",
          "title": "the file id"
        },
        "filename": {
          "type": "string",
          "title": "the name of the file"
        },
        "url": {
          "type": "string",
          "title": "the url to the file"
        }
      }
    },
    "v1Frequency": {
      "type": "string",
      "enum": [
        "FREQUENCY_INVALID",
        "FREQUENCY_MONTHLY",
        "FREQUENCY_YEARLY",
        "FREQUENCY_ONE_TIME"
      ],
      "default": "FREQUENCY_INVALID",
      "title": "Frequency for the billing of an order item"
    },
    "v1GenerateBillableItemsCSVResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The url linking to the generated CSV"
        }
      }
    },
    "v1GenerateVendorReportResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The url linking to the generated invoice"
        },
        "bucket": {
          "type": "string",
          "title": "The cloudstorage bucket the invoice resides in"
        },
        "filename": {
          "type": "string",
          "title": "The filename of the invoice"
        }
      },
      "title": "GenerateInvoiceResponse returns the resource information to access the Vendor Report"
    },
    "v1GetBalanceResponse": {
      "type": "object",
      "properties": {
        "creditBalance": {
          "$ref": "#/definitions/v1CreditBalance",
          "title": "The credit balance"
        }
      }
    },
    "v1GetBillableItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1BillableItem",
          "title": "The Billable Item"
        }
      },
      "title": "Response that has the billable item"
    },
    "v1GetContractResponse": {
      "type": "object",
      "properties": {
        "contract": {
          "$ref": "#/definitions/v1Contract",
          "title": "The contract"
        }
      }
    },
    "v1GetCreditNoteResponse": {
      "type": "object",
      "properties": {
        "creditNote": {
          "$ref": "#/definitions/v1CreditNote",
          "title": "The credit note retrieved"
        }
      }
    },
    "v1GetInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1GetMerchantResponse": {
      "type": "object",
      "properties": {
        "merchant": {
          "$ref": "#/definitions/v1Merchant",
          "title": "a get of the merchant data"
        }
      },
      "title": "GetMerchantResponse returns a merchant"
    },
    "v1GetMerchantWholesaleCurrencyResponse": {
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "The currency for the contract"
        }
      }
    },
    "v1GetMultiBundleResponse": {
      "type": "object",
      "properties": {
        "bundles": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Bundle"
          }
        }
      }
    },
    "v1GetMultiBundleRetailPricingResponse": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1BundlePricing"
          },
          "title": "A map of bundle ID to the corresponding pricing"
        }
      }
    },
    "v1GetMultiContractsResponse": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Contract"
          }
        }
      }
    },
    "v1GetMultiCreditNoteResponse": {
      "type": "object",
      "properties": {
        "creditNotes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreditNote"
          }
        }
      }
    },
    "v1GetMultiCustomerSummariesResponse": {
      "type": "object",
      "properties": {
        "customerSummaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerSummary"
          }
        }
      }
    },
    "v1GetMultiPricingPlanProductResponse": {
      "type": "object",
      "properties": {
        "pricingPlanProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PricingPlanProduct"
          },
          "title": "The multiple pricing plan products of the particular pricing plan"
        }
      }
    },
    "v1GetMultiPricingPlanResponse": {
      "type": "object",
      "properties": {
        "plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PricingPlan"
          },
          "title": "the list of pricing plans that were requested in the order of the request"
        }
      }
    },
    "v1GetMultiProductPricingResponse": {
      "type": "object",
      "properties": {
        "productPrices": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ProductPricing"
          },
          "title": "A map of product skus to their corresponding pricing information"
        },
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPrices"
          },
          "title": "A list of prices per product"
        }
      }
    },
    "v1GetMultiProductResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Product"
          }
        }
      }
    },
    "v1GetMultiRetailConfigurationsResponse": {
      "type": "object",
      "properties": {
        "retailConfigurations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1RetailConfiguration"
          }
        }
      }
    },
    "v1GetMultiRetailPricingResponse": {
      "type": "object",
      "properties": {
        "productPrices": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ProductPricing"
          },
          "title": "A map of product skus to their corresponding pricing information"
        },
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPrices"
          },
          "title": "A list of prices per product"
        }
      }
    },
    "v1GetMultiSubscriptionRelationshipsResponse": {
      "type": "object",
      "properties": {
        "subscriptionRelationships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubscriptionRelationship"
          }
        }
      }
    },
    "v1GetMultiSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BillableItem"
          },
          "title": "list of subscriptions"
        }
      },
      "description": "response structure for the requested billable items."
    },
    "v1GetMultiTaxResponse": {
      "type": "object",
      "properties": {
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The tax rates"
        }
      }
    },
    "v1GetMultiWholesaleCostResponse": {
      "type": "object",
      "properties": {
        "costs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetPurchaseCostResponse"
          }
        }
      }
    },
    "v1GetNextRetailInvoiceSequenceResponse": {
      "type": "object",
      "properties": {
        "nextRetailInvoiceSequence": {
          "type": "string",
          "format": "int64",
          "title": "the invoice sequence set on the merchant"
        },
        "nextInvoiceNumber": {
          "type": "string",
          "format": "int64",
          "title": "the actual number of the next generated invoice"
        }
      }
    },
    "v1GetOutstandingBalanceResponse": {
      "type": "object",
      "properties": {
        "outstandingBalance": {
          "type": "string",
          "format": "int64",
          "title": "The outstanding balance that the merchant owes"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "The currency for the outstanding balance"
        }
      }
    },
    "v1GetPayoutSummaryResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Balance"
          },
          "title": "the balances for the merchant's retail accounts"
        },
        "nextInTransitPayoutExpectedDate": {
          "type": "string",
          "format": "date-time",
          "description": "the time that the next in-transit payouts are expected to arrive in the bank."
        },
        "payoutInterval": {
          "type": "string",
          "title": "the amount of time after a payout is received by stripe, before it is transferred to the bank"
        },
        "payoutDelayDays": {
          "type": "string",
          "format": "int64",
          "title": "the number of days charges for the account will be held before being paid out"
        }
      }
    },
    "v1GetPricingPlanProductResponse": {
      "type": "object",
      "properties": {
        "pricingPlanProduct": {
          "$ref": "#/definitions/v1PricingPlanProduct"
        },
        "pricingPlanDefaultStrategy": {
          "$ref": "#/definitions/billingv1BillingStrategy",
          "title": "The billing strategy on the parent pricing plan of the pricing plan product"
        }
      }
    },
    "v1GetProductSummariesTotalResponse": {
      "type": "object",
      "properties": {
        "totalAmount": {
          "type": "string",
          "format": "int64",
          "title": "Total amount in cents of all the product summaries"
        }
      }
    },
    "v1GetPurchaseCostResponse": {
      "type": "object",
      "properties": {
        "billingFrequency": {
          "type": "string",
          "title": "The billing frequency of the cost"
        },
        "totalCost": {
          "type": "string",
          "format": "int64",
          "title": "The total cost for the upcoming purchases, before any discounts"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "The currency that the cost is in"
        },
        "strategy": {
          "$ref": "#/definitions/billingv1BillingStrategy",
          "title": "Billing strategy used for the product"
        },
        "commitment": {
          "$ref": "#/definitions/v1Commitment",
          "title": "Information about the required commitment for the product"
        },
        "isStartingPrice": {
          "type": "boolean",
          "title": "Indicates whether the price may be variable due to factors like in-product-purchases"
        },
        "discountAmount": {
          "type": "string",
          "format": "int64",
          "title": "The estimated discount amount that will be subtracted from total_cost"
        },
        "subtotalCost": {
          "type": "string",
          "format": "int64",
          "title": "The base cost of the purchase without any setup fee or discount included"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "The setup fee is an optional fee that can be charged on the start of a subscription"
        }
      }
    },
    "v1GetRetailAccountBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/v1AccountBalance",
          "title": "the balance of the merchant's retail account"
        }
      }
    },
    "v1GetRetailBalanceResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Balance"
          },
          "title": "the balances for the merchant's retail accounts"
        }
      }
    },
    "v1GetRetailCustomerConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1RetailCustomerConfiguration"
        }
      }
    },
    "v1GetRetailDisputeResponse": {
      "type": "object",
      "properties": {
        "dispute": {
          "$ref": "#/definitions/v1Dispute",
          "title": "A dispute for a payment"
        }
      }
    },
    "v1GetRetailPaymentProviderResponse": {
      "type": "object",
      "properties": {
        "statementDescriptor": {
          "type": "string",
          "title": "statement descriptor is the business name for the merchant that appears on a customer statement"
        },
        "stripeConnectId": {
          "type": "string",
          "title": "the ID of the stripe account to make the payment against"
        },
        "paymentFacilitatorType": {
          "$ref": "#/definitions/v1PaymentFacilitatorType",
          "title": "the type of payment facilitator account"
        },
        "countryCode": {
          "type": "string",
          "title": "the two letter ISO country code of the payment facilitator account"
        }
      }
    },
    "v1GetRetailPaymentResponse": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/v1RetailPayment",
          "description": "The retail payment."
        }
      }
    },
    "v1GetRetailPayoutResponse": {
      "type": "object",
      "properties": {
        "payout": {
          "$ref": "#/definitions/v1RetailPayout",
          "title": "the requested payout"
        }
      }
    },
    "v1GetRevenueStatsResponse": {
      "type": "object",
      "properties": {
        "totalRevenue": {
          "type": "string",
          "format": "int64",
          "description": "The total collected revenue in the specified timeframe. This number is in USD cents."
        }
      },
      "title": "GetRevenueStatsResponse contains the revenue stats for the requested SKUs and period"
    },
    "v1GetSalesInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1SalesInvoice",
          "title": "The invoice"
        }
      },
      "title": "GetSalesInvoiceResponse returns an invoice"
    },
    "v1GetStatisticsResponse": {
      "type": "object",
      "properties": {
        "totalBillableCustomers": {
          "type": "string",
          "format": "int64",
          "title": "Total number of billable customers for a merchant"
        },
        "currentBasketSize": {
          "type": "number",
          "format": "float",
          "title": "Current basket size of average billable product per customer"
        },
        "changeInBasketSize30Days": {
          "type": "number",
          "format": "float",
          "title": "Increase/decrease rate of basket size in last 30 days"
        }
      }
    },
    "v1GetTaxRuleResponse": {
      "type": "object",
      "properties": {
        "taxRule": {
          "$ref": "#/definitions/v1TaxRule",
          "title": "The tax rule"
        }
      }
    },
    "v1GetUpcomingInvoicePreviewResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice to preview\nThe following fields are not populated:\nid, number, amount_paid, issued, paid, origin, voided, customer_address, external_customer_identifier"
        }
      }
    },
    "v1GetWholesaleComparisonResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetWholesaleComparisonResponseGetWholesaleComparisonResult"
          }
        }
      }
    },
    "v1GetWholesaleProviderPublicKeyResponse": {
      "type": "object",
      "properties": {
        "publcApiKey": {
          "type": "string",
          "title": "The public API key for the payment provider of the corresponding subsidiary"
        }
      }
    },
    "v1Interval": {
      "type": "string",
      "enum": [
        "INTERVAL_UNSPECIFIED",
        "INTERVAL_MINUTES",
        "INTERVAL_HOURS",
        "INTERVAL_DAYS",
        "INTERVAL_WEEKS",
        "INTERVAL_MONTHS"
      ],
      "default": "INTERVAL_UNSPECIFIED",
      "title": "Interval of time as delay period for sending review requests"
    },
    "v1Invoice": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant"
        },
        "id": {
          "type": "string",
          "title": "Identifier for the invoice"
        },
        "number": {
          "type": "string",
          "title": "The reference number assigned to the invoice for use in the dashboard"
        },
        "customerId": {
          "type": "string",
          "title": "Identifier of the customer who the invoice is for within Vendasta (AG-1234567890)"
        },
        "status": {
          "$ref": "#/definitions/v1InvoiceStatus",
          "title": "Status of the invoice"
        },
        "subtotal": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the invoice before taxes and discounts"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the invoice"
        },
        "amountPaid": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents that has been paid on the invoice"
        },
        "issued": {
          "type": "string",
          "format": "date-time",
          "description": "Date when invoice is issued."
        },
        "due": {
          "type": "string",
          "format": "date-time",
          "title": "Due date of the invoice"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created date of the invoice"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Last updated date of the invoice"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InvoiceItem"
          },
          "title": "The line items of the invoice"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "The currency that this invoice is in"
        },
        "paid": {
          "type": "string",
          "format": "date-time",
          "title": "Paid date of the invoice"
        },
        "orderId": {
          "type": "string",
          "title": "The (optional) order that this invoice is based on. Refers to a sales_orders.v1 Order"
        },
        "amountTax": {
          "type": "string",
          "format": "int64",
          "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice."
        },
        "appliedTaxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "description": "The aggregate amounts calculated per tax rate for all line items."
        },
        "defaultTaxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The default tax rates to apply to the invoice"
        },
        "appliedBundles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedBundle"
          },
          "title": "The bundles that have been added to the invoice"
        },
        "amountDiscount": {
          "type": "string",
          "format": "int64",
          "title": "The total amount of all discounts"
        },
        "customerName": {
          "type": "string",
          "title": "The name of the customer"
        },
        "origin": {
          "type": "string",
          "title": "Indicates what triggered the invoice generation"
        },
        "collectionMethod": {
          "type": "string",
          "title": "Indicates how we will attempt to collect the invoice (attempt to automatically charge the invoice or send the invoice to the customer)"
        },
        "contactId": {
          "type": "string",
          "title": "The identifier of the contact who will receive invoice notification"
        },
        "memo": {
          "type": "string",
          "title": "An arbitrary note which appears on the invoice"
        },
        "voided": {
          "type": "string",
          "format": "date-time",
          "title": "Voided date of the invoice"
        },
        "defaultPaymentMethod": {
          "type": "string",
          "description": "The identifier of the default payment method for the invoice. It must belong to the customer associated with the invoice."
        },
        "customerAddress": {
          "$ref": "#/definitions/v1InvoiceCustomerAddress",
          "title": "the address of the customer"
        },
        "externalCustomerIdentifier": {
          "type": "string",
          "title": "the identifier of the customer that is in other systems (Non AG-1234567890)"
        },
        "notes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Note"
          },
          "title": "The internal notes on an invoice"
        },
        "additionalContactIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The user ids of any additional contacts who will receive invoice notifications"
        },
        "autoAdvance": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the invoice is set to be posted."
        },
        "paymentMethodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentMethodType"
          },
          "title": "payment_method_types define how a Customer can pay for the Invoice (defaults to card)"
        },
        "lastPaymentStatus": {
          "$ref": "#/definitions/v1LastPaymentStatus",
          "title": "The status of the last payment attempt"
        },
        "amountOwing": {
          "type": "string",
          "format": "int64",
          "title": "The amount owing on the invoice"
        },
        "appliedCreditNotes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedCreditNote"
          },
          "title": "The credit notes applied to the invoice"
        }
      }
    },
    "v1InvoiceCustomerAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The street address of the customer"
        },
        "city": {
          "type": "string",
          "title": "The city of the customer"
        },
        "state": {
          "type": "string",
          "title": "The state of the customer"
        },
        "zip": {
          "type": "string",
          "title": "The zip code of the customer"
        },
        "country": {
          "type": "string",
          "title": "The country of the customer"
        },
        "address2": {
          "type": "string",
          "title": "The second street address of the customer"
        }
      }
    },
    "v1InvoiceItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Random identifier of an invoice item"
        },
        "sku": {
          "type": "string",
          "title": "The identifier of what products/subscription this item refers to. Does not conform to the SKU standard"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount (in cents)"
        },
        "quantity": {
          "type": "number",
          "format": "float",
          "title": "The number of items purchased"
        },
        "description": {
          "type": "string",
          "title": "The name or human readable description of what is being purchased"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "calculated total which includes discounts and taxes"
        },
        "appliedTaxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "title": "The tax rates which apply to the line item"
        },
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The default tax rates to apply to the line item"
        },
        "bundleId": {
          "type": "string",
          "title": "the bundle this item belongs to"
        },
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedDiscount"
          },
          "title": "the discounts that have been applied to this invoice item"
        },
        "subtotal": {
          "type": "string",
          "format": "int64",
          "title": "Amount * Quantity"
        },
        "bundleInstanceId": {
          "type": "string",
          "title": "the instance of the bundle this item belongs to"
        },
        "servicePeriodStart": {
          "type": "string",
          "format": "date-time",
          "title": "The start of the service period associated with the line item"
        },
        "servicePeriodEnd": {
          "type": "string",
          "format": "date-time",
          "title": "The end of the service period associated with the line item"
        }
      }
    },
    "v1InvoiceStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "DUE",
        "PAID",
        "VOID"
      ],
      "default": "DRAFT"
    },
    "v1Item": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "customerId": {
          "type": "string",
          "description": "The reference to the owner in the external system."
        },
        "orderId": {
          "type": "string",
          "description": "Unique ID for this instance of the sku."
        },
        "billingStart": {
          "type": "string",
          "format": "date-time",
          "description": "(Optional) the date at which billing should occur. This date can be in the past."
        }
      },
      "title": "An Item to bill for"
    },
    "v1LastPaymentStatus": {
      "type": "string",
      "enum": [
        "PAYMENT_UNSET",
        "PAYMENT_SUCCESS",
        "PAYMENT_PENDING",
        "PAYMENT_FAILED"
      ],
      "default": "PAYMENT_UNSET"
    },
    "v1ListBankAccountsResponse": {
      "type": "object",
      "properties": {
        "bankAccount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BankAccount"
          }
        }
      }
    },
    "v1ListBillableItemsRequestFilters": {
      "type": "object",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unique ids representing products (Stock Keeping Unit)."
        },
        "merchantId": {
          "type": "string",
          "description": "The id of the merchant selling the product."
        },
        "customerId": {
          "type": "string",
          "title": "The reference to the owner in the external system"
        }
      }
    },
    "v1ListBillableItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BillableItem"
          },
          "title": "The Billable Item"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "Response that has the billable items"
    },
    "v1ListBundlesRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The merchant scope of the bundles"
        }
      }
    },
    "v1ListBundlesResponse": {
      "type": "object",
      "properties": {
        "bundles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Bundle"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListContractDocumentsRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of a merchant"
        }
      }
    },
    "v1ListContractDocumentsResponse": {
      "type": "object",
      "properties": {
        "contractDocuments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ContractDocument"
          },
          "title": "The contract documents matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListContractsResponse": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Contract"
          },
          "title": "The contracts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListCreditNotesRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The merchant the credit note is for"
        },
        "customerId": {
          "type": "string",
          "title": "The customer the credit note is for"
        },
        "number": {
          "type": "string",
          "title": "The reference number assigned to the credit note"
        },
        "createdLte": {
          "type": "string",
          "format": "date-time",
          "title": "The date the credit note was created"
        },
        "createdGte": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListCreditNotesResponse": {
      "type": "object",
      "properties": {
        "creditNotes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreditNote"
          },
          "title": "The credit notes"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListDiscountsRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The unique id of a merchant"
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "title": "The expiry date of a discount"
        },
        "skus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unique ids representing products (Stock Keeping Unit)."
        },
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The customer_ids a Discount can be scoped to"
        },
        "includeCustomerDiscounts": {
          "type": "boolean",
          "title": "Whether to discounts scoped to specific customers.\nIf customer_ids is not empty, then this is implicitly true"
        },
        "consumers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Consumer"
          },
          "title": "The consumer types of the discount"
        },
        "subscriptionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The subscription_ids a Discount can be scoped to"
        }
      }
    },
    "v1ListDiscountsResponse": {
      "type": "object",
      "properties": {
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingv1Discount"
          },
          "title": "The discounts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListInvoicesRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The merchant the invoice is for"
        },
        "customerId": {
          "type": "string",
          "title": "The customer the invoice was created for"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InvoiceStatus"
          },
          "title": "Invoice statuses"
        },
        "pastDue": {
          "type": "boolean",
          "title": "Invoices that are passed the due date and have not been paid"
        },
        "number": {
          "type": "string",
          "title": "Number will filter to a specific invoice number"
        },
        "dateFilter": {
          "$ref": "#/definitions/ListInvoicesRequestFiltersDateFilter",
          "title": "Filter invoices based on dates"
        },
        "origins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter invoices based on their origin (source)"
        },
        "collectionMethods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter invoices based on their collection method"
        },
        "lastPaymentStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1LastPaymentStatus"
          },
          "title": "Filter invoices based on their last payment status"
        }
      }
    },
    "v1ListInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Invoice"
          },
          "title": "The invoices"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListMerchantBillingReportsResponse": {
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MerchantReport"
          },
          "title": "The merchant reports to be returned to the client"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "ListMerchantBillingReportsResponse returns list of messages containing a single report record"
    },
    "v1ListPaymentCardsResponse": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PaymentCard"
          },
          "title": "A get of the configured payment cards for this merchant"
        }
      },
      "title": "GetPaymentMethodResponse returns the payment method configured for a merchant"
    },
    "v1ListPaymentMethodsResponse": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PaymentMethod"
          }
        }
      },
      "title": "ListPaymentMethodsResponse returns the payment method configured for a merchant"
    },
    "v1ListPaymentResponse": {
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Payment"
          },
          "title": "The payments matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListPayoutsRequestFilters": {
      "type": "object",
      "properties": {
        "arrivalDateRange": {
          "$ref": "#/definitions/vendastatypesDateRange"
        }
      }
    },
    "v1ListPayoutsResponse": {
      "type": "object",
      "properties": {
        "payouts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Payout"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListPricingPlanProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PricingPlanProduct"
          },
          "title": "The pricing plan products"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListProductSummariesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductSummary"
          },
          "title": "The list of product summary results"
        },
        "nextCursor": {
          "type": "string",
          "title": "Next position in pagination"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates if more data is available"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results across all pages"
        }
      }
    },
    "v1ListProductsResponse": {
      "type": "object",
      "properties": {
        "product": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Product"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListPurchaseItemsResponse": {
      "type": "object",
      "properties": {
        "purchaseItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PurchaseItem"
          },
          "title": "The purchase items matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "currency of all the purchase items (they must all match, or an error is thrown)"
        }
      }
    },
    "v1ListPurchaseResponse": {
      "type": "object",
      "properties": {
        "purchases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Purchase"
          },
          "title": "The purchases matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListRecurringInvoicesFilters": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RecurringInvoiceStatus"
          },
          "description": "Filter recurring invoices to specific statuses. If no statuses are provided, it will not filter by any statuses.\n\nThis is optional."
        },
        "intervals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListRecurringInvoicesFiltersDetailedInterval"
          },
          "title": "Filter by intervals of a recurring invoice with linked interval to interval_count"
        },
        "nextIssuedDate": {
          "$ref": "#/definitions/v1ListRecurringInvoicesFiltersDateFilter",
          "title": "Filter by next invoice issued date"
        }
      },
      "description": "Filters to apply to the list of recurring invoices."
    },
    "v1ListRecurringInvoicesFiltersDateFilter": {
      "type": "object",
      "properties": {
        "dateLte": {
          "type": "string",
          "format": "date-time"
        },
        "dateGte": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListRecurringInvoicesResponse": {
      "type": "object",
      "properties": {
        "recurringInvoices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecurringInvoice"
          },
          "description": "The current page of invoices for the customer."
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "description": "Information about additional pages of results."
        }
      },
      "description": "The response from listing recurring invoices."
    },
    "v1ListRefundsResponse": {
      "type": "object",
      "properties": {
        "refunds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Refund"
          },
          "title": "The refunds"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "ListRefundsResponse returns a page of refunds"
    },
    "v1ListRetailDisputesResponse": {
      "type": "object",
      "properties": {
        "disputes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Dispute"
          },
          "title": "The disputes matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListRetailPaymentsResponse": {
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetailPayment"
          },
          "title": "the payments for the merchant's retail accounts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "details on paging position"
        }
      }
    },
    "v1ListRetailPayoutsResponse": {
      "type": "object",
      "properties": {
        "payouts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetailPayout"
          },
          "title": "the payouts for the merchant's retail accounts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "details on paging position"
        }
      }
    },
    "v1ListRetailTransactionsResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetailTransaction"
          },
          "title": "the payments for the merchant's retail accounts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "details on paging position"
        }
      }
    },
    "v1ListSalesCreditNoteResponse": {
      "type": "object",
      "properties": {
        "creditNote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesCreditNote"
          },
          "title": "The credit note"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "ListSalesCreditNoteResponse returns repeated credit notes"
    },
    "v1ListSalesInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesInvoice"
          },
          "title": "The invoices"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "ListSalesInvoiceResponse returns an invoice"
    },
    "v1ListSubscriptionRelationshipsRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "originId": {
          "type": "string"
        },
        "originType": {
          "$ref": "#/definitions/v1EntityType"
        },
        "targetId": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1EntityType"
        },
        "relationshipType": {
          "$ref": "#/definitions/v1RelationshipType"
        }
      }
    },
    "v1ListSubscriptionRelationshipsResponse": {
      "type": "object",
      "properties": {
        "subscriptionRelationships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubscriptionRelationship"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListSubscriptionRetentionByGroupResponse": {
      "type": "object",
      "properties": {
        "metricsByGroup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListSubscriptionRetentionByGroupResponseSubscriptionRetentionByGroup"
          },
          "title": "A list of subscription metrics for the provided groups"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListSubscriptionRetentionBySKUResponse": {
      "type": "object",
      "properties": {
        "subscriptionMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetentionMetrics"
          },
          "title": "A list of subscription metrics grouped by SKU"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListSubscriptionRetentionRequestFilters": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of the time range"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of the time range"
        }
      }
    },
    "v1ListSubscriptionsRequestFilters": {
      "type": "object",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unique ids representing products (Stock Keeping Unit)."
        },
        "merchantId": {
          "type": "string",
          "description": "The id of the merchant selling the product."
        },
        "customerId": {
          "type": "string",
          "title": "The reference to the owner in the external system"
        },
        "searchTerm": {
          "type": "string",
          "title": "search term for pre and post fix matching on customer names"
        },
        "status": {
          "$ref": "#/definitions/billingv1SubscriptionStatus",
          "title": "Status for whether the product is activated or deactivated"
        },
        "expiredDateGte": {
          "type": "string",
          "format": "date-time",
          "title": "Filter to subscriptions greater than or equal to the given timestamp"
        },
        "expiredDateLte": {
          "type": "string",
          "format": "date-time",
          "title": "Filter to subscriptions less than or equal to the given timestamp"
        },
        "frequencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Frequency"
          },
          "title": "Frequencies that the subscriptions are billed at"
        }
      }
    },
    "v1ListSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Subscription"
          },
          "title": "List of subscriptions"
        },
        "nextPageToken": {
          "type": "string",
          "title": "Used to paginate through large result sets"
        }
      },
      "title": "response for getting subscriptions on a Google Workspace Customer"
    },
    "v1ListTaxRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant the tax rate is for"
        },
        "includeArchived": {
          "type": "boolean",
          "description": "Whether to include archived tax rates in the response. Defaults to false."
        },
        "countryCode": {
          "type": "string",
          "title": "The two digit iso country code of the tax rate"
        },
        "stateCode": {
          "type": "string",
          "title": "The state code of the tax rate"
        },
        "name": {
          "type": "string",
          "title": "The tax name eg: GST, PST, HST"
        }
      }
    },
    "v1ListTaxResponse": {
      "type": "object",
      "properties": {
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The tax rates"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListTaxRulesRequestFilters": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer"
        },
        "entityType": {
          "$ref": "#/definitions/v1TaxRuleEntityType"
        }
      }
    },
    "v1ListTaxRulesResponse": {
      "type": "object",
      "properties": {
        "taxRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRule"
          },
          "title": "The tax rules"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about paging"
        }
      }
    },
    "v1Merchant": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The unique id of the merchant"
        },
        "address": {
          "type": "string",
          "title": "The address of the merchant"
        },
        "city": {
          "type": "string",
          "title": "The city of the merchant"
        },
        "state": {
          "type": "string",
          "title": "The state of the merchant"
        },
        "country": {
          "type": "string",
          "title": "The country of the merchant"
        },
        "zipCode": {
          "type": "string",
          "title": "The zip code of the merchant"
        },
        "emailAddress": {
          "type": "string",
          "title": "The email address of the merchant"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The phone number of the merchant"
        },
        "contactName": {
          "type": "string",
          "title": "The contact name for the merchant"
        },
        "companyName": {
          "type": "string",
          "title": "The company name of the merchant"
        },
        "autoPostInvoices": {
          "type": "boolean",
          "title": "Whether to automatically post the invoice when it is generated"
        },
        "autoChargeInvoices": {
          "type": "boolean",
          "title": "Whether invoices will be charged automatically or not"
        },
        "includeInFinancialRecords": {
          "type": "boolean",
          "title": "Whether to include the merchant within financial records"
        },
        "additionalEmailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of additional email addresses for the merchant"
        },
        "hasAlternativePaymentMethod": {
          "type": "boolean",
          "title": "Whether merchant has an alternative payment method on file"
        },
        "stripeAccountId": {
          "type": "string",
          "title": "The stripe account id for the merchant"
        },
        "merchantType": {
          "$ref": "#/definitions/v1MerchantType",
          "title": "The merchant type"
        }
      }
    },
    "v1MerchantReport": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant the report is for"
        },
        "year": {
          "type": "string",
          "format": "int64",
          "title": "The year the report was generated for"
        },
        "month": {
          "$ref": "#/definitions/v1Month",
          "title": "The month the report was generated for"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the report was created"
        },
        "status": {
          "$ref": "#/definitions/v1MerchantReportStatus",
          "title": "The status of the report generation"
        }
      },
      "title": "A single Merchant report record"
    },
    "v1MerchantReportStatus": {
      "type": "string",
      "enum": [
        "FAILED",
        "PENDING",
        "COMPLETED"
      ],
      "default": "FAILED"
    },
    "v1MerchantServicesReportRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the report run."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "When the report run was created."
        },
        "reportType": {
          "$ref": "#/definitions/v1MerchantServicesReportRunType",
          "description": "The type of report."
        },
        "status": {
          "$ref": "#/definitions/v1MerchantServicesReportRunStatus",
          "description": "The status of the report run."
        },
        "error": {
          "type": "string",
          "description": "If there was a failure, the message will be included."
        }
      }
    },
    "v1MerchantServicesReportRunStatus": {
      "type": "string",
      "enum": [
        "MERCHANT_SERVICES_REPORT_RUN_STATUS_UNSPECIFIED",
        "MERCHANT_SERVICES_REPORT_RUN_STATUS_PENDING",
        "MERCHANT_SERVICES_REPORT_RUN_STATUS_SUCCEEDED",
        "MERCHANT_SERVICES_REPORT_RUN_STATUS_FAILED"
      ],
      "default": "MERCHANT_SERVICES_REPORT_RUN_STATUS_UNSPECIFIED",
      "description": " - MERCHANT_SERVICES_REPORT_RUN_STATUS_PENDING: The report run will be pending while the report is being generated.\n - MERCHANT_SERVICES_REPORT_RUN_STATUS_SUCCEEDED: The report run will be successful once the report has been generated, and is ready for download.\n - MERCHANT_SERVICES_REPORT_RUN_STATUS_FAILED: The report run will be failed if something went wrong generating the report."
    },
    "v1MerchantServicesReportRunType": {
      "type": "string",
      "enum": [
        "MERCHANT_SERVICES_REPORT_RUN_TYPE_UNSPECIFIED",
        "MERCHANT_SERVICES_REPORT_RUN_TYPE_BALANCE_ITEMIZED"
      ],
      "default": "MERCHANT_SERVICES_REPORT_RUN_TYPE_UNSPECIFIED"
    },
    "v1MerchantType": {
      "type": "string",
      "enum": [
        "MERCHANT_TYPE_INVALID",
        "MERCHANT_TYPE_WHOLESALE",
        "MERCHANT_TYPE_RETAIL"
      ],
      "default": "MERCHANT_TYPE_INVALID",
      "description": "- MERCHANT_TYPE_WHOLESALE: The wholesale merchant e.g. Partner\n - MERCHANT_TYPE_RETAIL: The retail merchant e.g. SMB",
      "title": "Merchant type"
    },
    "v1MeteredComponent": {
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string",
          "title": "The id of the metered billing component being created"
        },
        "name": {
          "type": "string",
          "description": "The name of the component when displayed in invoices etc."
        }
      },
      "description": "A Metered component identifies an individual resource which may be 'used'\ne.g. SMS messages, server instance hours, domain purchases, etc."
    },
    "v1Month": {
      "type": "string",
      "enum": [
        "INVALID_MONTH",
        "JANUARY",
        "FEBRUARY",
        "MARCH",
        "APRIL",
        "MAY",
        "JUNE",
        "JULY",
        "AUGUST",
        "SEPTEMBER",
        "OCTOBER",
        "NOVEMBER",
        "DECEMBER"
      ],
      "default": "INVALID_MONTH"
    },
    "v1Note": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1Origin": {
      "type": "string",
      "enum": [
        "SSC",
        "VBC",
        "PC",
        "IMPORT"
      ],
      "default": "SSC",
      "title": "Origin of the create request, whether a salesperson or smb created it"
    },
    "v1Payment": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "Identifier of the merchant that made this payment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created Date of the payment"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "Currency of the payment"
        },
        "paymentSource": {
          "$ref": "#/definitions/v1PaymentSource",
          "title": "The source of where this money came from"
        },
        "allocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PaymentPaymentAllocation"
          },
          "title": "The reference id and amount to which this payment is associated"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the payment"
        },
        "description": {
          "type": "string",
          "title": "The description of the payment"
        },
        "externalReferenceId": {
          "type": "string",
          "title": "The reference id of the payment method"
        },
        "status": {
          "$ref": "#/definitions/v1PaymentStatus",
          "title": "The status of the payment"
        }
      },
      "title": "A Payment represents money changing hands (or the attempt to do that)"
    },
    "v1PaymentACHDebit": {
      "type": "object",
      "properties": {
        "lastFourDigits": {
          "type": "string",
          "title": "last 4 digits of the bank account"
        },
        "id": {
          "type": "string",
          "title": "the id of the payment method"
        }
      }
    },
    "v1PaymentACSSDebit": {
      "type": "object",
      "properties": {
        "lastFourDigits": {
          "type": "string",
          "title": "last 4 digits of the bank account"
        },
        "id": {
          "type": "string",
          "title": "the id of the payment method"
        }
      }
    },
    "v1PaymentAllocationType": {
      "type": "string",
      "enum": [
        "PAYMENT_ALLOCATION_TYPE_UNSET",
        "PAYMENT_ALLOCATION_TYPE_PURCHASE",
        "PAYMENT_ALLOCATION_TYPE_INVOICE"
      ],
      "default": "PAYMENT_ALLOCATION_TYPE_UNSET"
    },
    "v1PaymentCard": {
      "type": "object",
      "properties": {
        "lastFourDigits": {
          "type": "string",
          "title": "last 4 digits of the credit card"
        },
        "cardType": {
          "$ref": "#/definitions/PaymentCardCARD_TYPE"
        },
        "address": {
          "type": "string",
          "title": "the billing address of the card"
        },
        "city": {
          "type": "string",
          "title": "city of the billing address of the card"
        },
        "state": {
          "type": "string",
          "title": "state of the billing address of the card"
        },
        "country": {
          "type": "string",
          "title": "country of the billing address of the card"
        },
        "zipCode": {
          "type": "string",
          "title": "zip/postal code of the billing address of the card"
        },
        "cardId": {
          "type": "string",
          "title": "card_id that stripe returns when creating a card"
        },
        "cardholderName": {
          "type": "string",
          "title": "name of the cardholder"
        },
        "expiryMonth": {
          "type": "integer",
          "format": "int32",
          "title": "The expiry month of the credit card"
        },
        "expiryYear": {
          "type": "integer",
          "format": "int32",
          "title": "The expiry year of the credit card"
        },
        "fundingType": {
          "$ref": "#/definitions/PaymentCardFUNDING_TYPE",
          "title": "The method of funding the card supports"
        },
        "default": {
          "type": "boolean",
          "title": "The default payment card for a specific merchant"
        }
      }
    },
    "v1PaymentErrorCode": {
      "type": "string",
      "enum": [
        "PAYMENT_ERROR_CODE_UNSET",
        "PAYMENT_ERROR_CODE_UNKNOWN",
        "PAYMENT_ERROR_CODE_NO_ACCOUNT",
        "PAYMENT_ERROR_CODE_INSUFFICIENT_FUNDS",
        "PAYMENT_ERROR_CODE_DEBIT_NOT_AUTHORIZED"
      ],
      "default": "PAYMENT_ERROR_CODE_UNSET",
      "title": "- PAYMENT_ERROR_CODE_UNKNOWN: to support returning an error that we don't yet handle"
    },
    "v1PaymentFacilitatorType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "CUSTOM_STRIPE",
        "STANDARD_STRIPE"
      ],
      "default": "UNSPECIFIED"
    },
    "v1PaymentIntent": {
      "type": "object",
      "properties": {
        "paymentIntentStatus": {
          "$ref": "#/definitions/v1PaymentIntentStatus",
          "title": "the latest status of the payment intent"
        },
        "paymentMethodType": {
          "$ref": "#/definitions/v1PaymentMethodType",
          "title": "the payment method used to make the latest payment"
        },
        "lastErrorCode": {
          "$ref": "#/definitions/v1PaymentErrorCode",
          "title": "the latest error code that occurred on the payment intent"
        }
      },
      "title": "PaymentIntent captures the latest data regarding the Payment Intent and its attempted Payment"
    },
    "v1PaymentIntentStatus": {
      "type": "string",
      "enum": [
        "PAYMENT_INTENT_STATUS_UNSET",
        "PAYMENT_INTENT_STATUS_PROCESSING",
        "PAYMENT_INTENT_STATUS_SUCCEEDED"
      ],
      "default": "PAYMENT_INTENT_STATUS_UNSET"
    },
    "v1PaymentLinkItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount (in cents)"
        },
        "quantity": {
          "type": "number",
          "format": "float",
          "title": "The number of items purchased"
        },
        "description": {
          "type": "string",
          "title": "The name or human readable description of what is being purchased"
        }
      }
    },
    "v1PaymentMethod": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1PaymentMethodType",
          "title": "type will determine what other properties are filled in (i.e., card, ach_debit)"
        },
        "card": {
          "$ref": "#/definitions/v1PaymentCard"
        },
        "achDebit": {
          "$ref": "#/definitions/v1PaymentACHDebit"
        },
        "acssDebit": {
          "$ref": "#/definitions/v1PaymentACSSDebit"
        },
        "default": {
          "type": "boolean",
          "title": "default whether this payment method is the default payment method set on the Stripe account"
        }
      }
    },
    "v1PaymentMethodType": {
      "type": "string",
      "enum": [
        "PAYMENT_METHOD_TYPE_UNSET",
        "PAYMENT_METHOD_TYPE_CARD",
        "PAYMENT_METHOD_TYPE_ACH_DEBIT",
        "PAYMENT_METHOD_TYPE_ACSS_DEBIT"
      ],
      "default": "PAYMENT_METHOD_TYPE_UNSET"
    },
    "v1PaymentProcessor": {
      "type": "string",
      "enum": [
        "PAYMENT_PROCESSOR_INVALID",
        "PAYMENT_PROCESSOR_UNSET",
        "PAYMENT_PROCESSOR_STRIPE"
      ],
      "default": "PAYMENT_PROCESSOR_INVALID",
      "description": "The payment processor used for handling payments.\n\n - PAYMENT_PROCESSOR_INVALID: An undefined valid. This is invalid."
    },
    "v1PaymentSource": {
      "type": "string",
      "enum": [
        "PAYMENT_SOURCE_NONE",
        "PAYMENT_SOURCE_STRIPE",
        "PAYMENT_SOURCE_VCASH"
      ],
      "default": "PAYMENT_SOURCE_NONE"
    },
    "v1PaymentStatus": {
      "type": "string",
      "enum": [
        "PAYMENT_STATUS_UNSET",
        "PAYMENT_STATUS_SUCCEEDED",
        "PAYMENT_STATUS_FAILED",
        "PAYMENT_STATUS_REFUNDED",
        "PAYMENT_STATUS_PARTIALLY_REFUNDED",
        "PAYMENT_STATUS_PENDING"
      ],
      "default": "PAYMENT_STATUS_UNSET"
    },
    "v1PaymentStatuses": {
      "type": "string",
      "enum": [
        "PAYMENT_STATUSES_NOT_SET",
        "PAYMENT_STATUSES_UNPAID",
        "PAYMENT_STATUSES_PAID",
        "PAYMENT_STATUSES_PART_PAID",
        "PAYMENT_STATUSES_NOT_APPLICABLE"
      ],
      "default": "PAYMENT_STATUSES_NOT_SET"
    },
    "v1Payout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date-time"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency"
        },
        "status": {
          "$ref": "#/definitions/v1PayoutStatus"
        },
        "type": {
          "$ref": "#/definitions/v1PayoutType"
        },
        "lastFourDigits": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "bankId": {
          "type": "string",
          "title": "bank_id is the stripe representation of the bank id"
        }
      }
    },
    "v1PayoutStatus": {
      "type": "string",
      "enum": [
        "PAYOUT_STATUS_NOT_SET",
        "PAYOUT_STATUS_PAID",
        "PAYOUT_STATUS_PENDING",
        "PAYOUT_STATUS_IN_TRANSIT",
        "PAYOUT_STATUS_CANCELED",
        "PAYOUT_STATUS_FAILED"
      ],
      "default": "PAYOUT_STATUS_NOT_SET"
    },
    "v1PayoutType": {
      "type": "string",
      "enum": [
        "PAYOUT_TYPE_NOT_SET",
        "PAYOUT_TYPE_BANK_ACCOUNT",
        "PAYOUT_TYPE_CARD"
      ],
      "default": "PAYOUT_TYPE_NOT_SET"
    },
    "v1PrepareRetailPaymentResponse": {
      "type": "object",
      "properties": {
        "stripeClientSecret": {
          "type": "string",
          "title": "stripe payment intent secret is used to accept payment via stripe's client side libraries"
        },
        "intentId": {
          "type": "string"
        },
        "paymentIntent": {
          "$ref": "#/definitions/v1PaymentIntent",
          "title": "the latest payment intent information"
        }
      }
    },
    "v1Pricing": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount that was set for items using custom pricing"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "The set up fee amount that was paid by the reseller (partner)"
        },
        "currencyCode": {
          "type": "string",
          "title": "The currency used by the reseller (partner)"
        },
        "frequency": {
          "type": "string",
          "title": "The frequency that the amount will be charged"
        }
      }
    },
    "v1PricingPlan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the pricing plan"
        },
        "name": {
          "type": "string",
          "title": "the human readable name of the pricing plan"
        },
        "defaultBillingStrategy": {
          "$ref": "#/definitions/billingv1BillingStrategy",
          "title": "the default billing strategy to be applied to all prices under this plan"
        }
      }
    },
    "v1PricingPlanProduct": {
      "type": "object",
      "properties": {
        "pricingPlanId": {
          "type": "string",
          "title": "The id of the pricing plan this product is associated with"
        },
        "sku": {
          "type": "string",
          "title": "Unique id representing a product"
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "DEPRECATED: frequency has been moved onto nested PricingPlanProductPricing message.\nThe frequency this product is billed"
        },
        "pricing": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1PricingPlanProductPricing"
          },
          "title": "A map of the currency to its pricing information"
        },
        "commitment": {
          "$ref": "#/definitions/v1Commitment",
          "title": "The commitment required to activate this product"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this pricing plan product was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The time this pricing plan product was last modified"
        },
        "strategy": {
          "$ref": "#/definitions/billingv1BillingStrategy",
          "title": "The billing strategy for this product"
        },
        "volumeCommitment": {
          "type": "string",
          "format": "int64",
          "title": "the minimum number of units that must be purchased each billing period"
        },
        "volumeCommitmentStartsAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time at which the volume commitment should begin being applied"
        },
        "volumeCommitmentEndsAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time at which the volume commitment should cease being applied"
        },
        "pricingType": {
          "$ref": "#/definitions/v1ProductPricingType",
          "title": "The pricing type for this product"
        }
      },
      "title": "Contains product pricing information for a specific sku in a pricing plan"
    },
    "v1PricingPlanProductPricing": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1ProductPricingType",
          "title": "The type of the pricing"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPricingRule"
          },
          "title": "The rules that define how something is priced"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "description": "The setup fee for the product."
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "The frequency that the price is billed at"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO currency code"
        },
        "fees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Fee"
          },
          "title": "The fees related to this pricing plan product"
        }
      }
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "isTrial": {
          "type": "boolean",
          "title": "Whether the product is a trial account or not"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags on the product"
        },
        "marketplaceAppId": {
          "type": "string",
          "title": "The marketplace app id or the legacy product id of the product"
        },
        "accountId": {
          "type": "string",
          "title": "The product-specific Account ID"
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "title": "The date on which the product expires"
        }
      },
      "title": "A representation of a single product on a business"
    },
    "v1ProductPrices": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "title": "The sku of the product"
        },
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPricing"
          },
          "title": "A list of prices for the sku"
        }
      }
    },
    "v1ProductPricing": {
      "type": "object",
      "properties": {
        "strategy": {
          "$ref": "#/definitions/billingv1BillingStrategy"
        },
        "pricingType": {
          "$ref": "#/definitions/v1ProductPricingType"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency"
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency"
        },
        "pricingRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPricingRule"
          }
        },
        "commitment": {
          "$ref": "#/definitions/v1Commitment",
          "title": "Information about the required commitment for the product"
        },
        "isStartingPrice": {
          "type": "boolean",
          "title": "Indicates whether the price may be variable due to factors like in-product-purchases"
        },
        "resolvedFrom": {
          "type": "string",
          "title": "Where the pricing was derived from (eg. the pricing plan ID, or contract product override)"
        },
        "volumeCommitment": {
          "type": "string",
          "format": "int64",
          "title": "minimum number of units that will be charged each billing period"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "setup fee if one exists that is in addition to the products price"
        },
        "fees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Fee"
          },
          "title": "The fees related to this product pricing"
        }
      }
    },
    "v1ProductPricingRule": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string",
          "format": "int64"
        },
        "minUnits": {
          "type": "string",
          "format": "int64"
        },
        "maxUnits": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ProductPricingType": {
      "type": "string",
      "enum": [
        "INVALID",
        "STANDARD",
        "STAIRSTEP",
        "TIERED"
      ],
      "default": "INVALID"
    },
    "v1ProductSummary": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "title": "The unique SKU of the product"
        },
        "productName": {
          "type": "string",
          "title": "Name of the product"
        },
        "totalQuantity": {
          "type": "string",
          "format": "int64",
          "title": "Quantity of all items sold"
        },
        "totalAmount": {
          "type": "string",
          "format": "int64",
          "title": "Summed dollar amount of all items in cents, before discounts"
        },
        "totalDiscount": {
          "type": "string",
          "format": "int64",
          "title": "Summed dollar amount of all discounts in cents"
        },
        "pricing": {
          "$ref": "#/definitions/v1Pricing",
          "title": "Pricing of the product"
        },
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductSummaryDiscount"
          },
          "title": "The discounts of the product"
        },
        "billingStrategy": {
          "$ref": "#/definitions/v1ProductSummaryBillingStrategy",
          "title": "Billing strategy of the product"
        },
        "productType": {
          "$ref": "#/definitions/v1ProductSummaryProductType",
          "title": "Type of the product"
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "The frequency at which one is billed for this product"
        },
        "proratedPercent": {
          "type": "number",
          "format": "float",
          "title": "The proration percent that has been applied"
        },
        "volumeCommitment": {
          "type": "string",
          "format": "int64",
          "title": "the minimum number of units that must be purchased each billing period"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "description": "The setup fee for the product."
        }
      }
    },
    "v1ProductSummaryBillingStrategy": {
      "type": "string",
      "enum": [
        "CHARGE_AT_END_OF_BILLING_PERIOD",
        "CHARGE_AT_START_OF_BILLING_PERIOD",
        "CHARGE_INSTANTLY",
        "CHARGE_AT_END_OF_DAY"
      ],
      "default": "CHARGE_AT_END_OF_BILLING_PERIOD"
    },
    "v1ProductSummaryDiscount": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ProductSummaryDiscountDiscountType",
          "description": "Discount type eg. fixed_amount, percent_amount, etc."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "title": "Value of the discount"
        },
        "totalAmount": {
          "type": "string",
          "format": "int64",
          "title": "Discounted dollar amount in cents"
        },
        "description": {
          "type": "string",
          "title": "Full english description"
        },
        "resetEachPeriod": {
          "type": "boolean",
          "title": "Whether or not the discount's usage should reset each period"
        }
      }
    },
    "v1ProductSummaryProductType": {
      "type": "string",
      "enum": [
        "BUNDLE",
        "FEE",
        "PRODUCT",
        "SUBSCRIPTION",
        "VENDASTA_PRODUCT"
      ],
      "default": "BUNDLE"
    },
    "v1Purchase": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "Identifier of the merchant that made this purchase"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the purchase"
        },
        "purchaseId": {
          "type": "string",
          "title": "Unique identifier of the purchase"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "Amount in cents of the purchase"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "Currency of the purchase"
        },
        "renewal": {
          "type": "boolean",
          "title": "Flag indicating whether or not this purchase was a renewal purchase"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PurchaseItem"
          },
          "title": "Items involved in the purchase"
        },
        "billingStrategy": {
          "$ref": "#/definitions/billingv1BillingStrategy",
          "title": "BillingStrategy is the timing for how we charged/will charge for this purchase"
        },
        "isDunning": {
          "type": "boolean",
          "title": "IsDunning is true when the purchase is currently in dunning"
        },
        "dunningAttempt": {
          "type": "string",
          "format": "int64",
          "title": "DunningAttempt the dunning step that this purchase is on"
        },
        "voided": {
          "type": "string",
          "format": "date-time",
          "title": "The time the purchase was voided"
        },
        "paid": {
          "type": "boolean",
          "title": "Whether or not the purchase has been paid for"
        },
        "status": {
          "$ref": "#/definitions/v1PurchaseStatus",
          "title": "The status of the purchase"
        },
        "creditAmount": {
          "type": "string",
          "format": "int64",
          "title": "total credit amount"
        },
        "appliedCredits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedCredit"
          },
          "title": "the credits applied to the purchase"
        },
        "taxAmount": {
          "type": "string",
          "format": "int64",
          "title": "the total tax amount"
        },
        "appliedTaxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "description": "The aggregate amounts calculated per tax rate for all line items."
        },
        "pauseDunningUntil": {
          "type": "string",
          "format": "date-time",
          "title": "Indicates if dunning is to be paused on this purchase and when it should resume dunning"
        }
      },
      "title": "A purchase represents a group of items purchased together"
    },
    "v1PurchaseItem": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "title": "Stock keeping unit of the purchased item"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The Original Amount in cents of the purchase item"
        },
        "orderId": {
          "type": "string",
          "title": "Identifier of the order which this item was a part of"
        },
        "customerId": {
          "type": "string",
          "title": "Identifier of the customer who this item is for"
        },
        "discountAmount": {
          "type": "string",
          "format": "int64",
          "title": "If there was a discount applied to this purchase item it is how much was discounted"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "How much this purchase item cost after applying discounts, setup fees, etc"
        },
        "appliedDiscounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedDiscount"
          },
          "title": "The discounts applied to this purchase item"
        },
        "merchantId": {
          "type": "string",
          "title": "merchant_id, day and purchase_id together build the key for the purchase this purchase item belongs to\nIdentifier of the merchant that made the purchase"
        },
        "day": {
          "type": "string",
          "title": "Identifier for the day the purchase was made  - in the format `20060102`"
        },
        "purchaseId": {
          "type": "string",
          "title": "Identifier of the purchase which this item is a part of"
        },
        "description": {
          "type": "string",
          "title": "The description for the purchase item"
        },
        "taxAmount": {
          "type": "string",
          "format": "int64",
          "title": "the total tax amount for the purchase item"
        },
        "appliedTaxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedTaxRate"
          },
          "title": "AppliedTaxRate is a list of the tax rates applied to the purchase item"
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "title": "The setup fee for the purchase item"
        },
        "feeAmount": {
          "type": "string",
          "format": "int64",
          "title": "The total amount of fees that have been applied to the purchase item (setup fee not included)"
        },
        "appliedFees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppliedFee"
          },
          "title": "The fees applied to this purchase item"
        }
      },
      "title": "An item that is part of a purchase"
    },
    "v1PurchaseStatus": {
      "type": "string",
      "enum": [
        "PURCHASE_STATUS_UNSET",
        "PURCHASE_STATUS_PENDING",
        "PURCHASE_STATUS_DUE",
        "PURCHASE_STATUS_SUCCESS",
        "PURCHASE_STATUS_DUNNING",
        "PURCHASE_STATUS_FAILED"
      ],
      "default": "PURCHASE_STATUS_UNSET"
    },
    "v1ReconcilePayoutResponse": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string",
          "title": "The id of the pipeline that will be running to reconcile the payout"
        }
      }
    },
    "v1RecurringInvoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier for the recurring invoice.\nThis property is read-only. It will be ignored on create.\nUpdate requests require this property to be set to identify the recurring invoice to update."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time the recurring invoice was created at.\n\nThis is read-only."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the recurring invoice was last updated.\n\nThis is read-only."
        },
        "customerId": {
          "type": "string",
          "description": "The id of the customer the recurring invoice belongs to.\n\nThis is required."
        },
        "status": {
          "$ref": "#/definitions/v1RecurringInvoiceStatus",
          "description": "The status indicates whether an invoice will be generated.\n\nThis is required."
        },
        "nextIssue": {
          "type": "string",
          "format": "date-time",
          "description": "When the next invoice will be generated.\n\nThis property is required."
        },
        "intervalCount": {
          "type": "string",
          "format": "int64",
          "description": "This is the number of intervals that will pass before an invoice is created.\nFor example, an interval count of \"2\" and interval of \"week\" will result in an invoice being generated every\n2 weeks.\n\nThis property is required. It must be greater than 0."
        },
        "interval": {
          "$ref": "#/definitions/v1Interval",
          "description": "The interval that invoices will be generated at.\n\nThis property is required."
        },
        "repeatOnDayOfMonth": {
          "type": "string",
          "format": "int64",
          "description": "The day of the month the invoice will be sent on when using month or year intervals.\n\nIf the month the invoice is being generated on has fewer days than this value, it will be sent at the end of the\nmonth. To send an invoice at the end of every month, this value can be set to 31.\n\nThis property is only required when the interval is INTERVAL_MONTH or INTERVAL_YEAR. It must be greater than\nor equal to 1 or less than or equal to 31."
        },
        "collectionMethod": {
          "$ref": "#/definitions/v1CollectionMethod",
          "description": "The collection method describes how the invoice generated will be collected.\n\nThis property is required."
        },
        "recipientUserId": {
          "type": "string",
          "description": "The user id of the user who will receive any emails regarding the invoice.\n\nThis property is required if the collection method is not COLLECTION_METHOD_MANUAL."
        },
        "paymentProcessor": {
          "$ref": "#/definitions/v1PaymentProcessor",
          "description": "The payment processor defines what third party processor is responsible for handling the payments of this recurring\ninvoice.\n\nThis property is required if the collection method is COLLECTION_METHOD_CHARGE_AUTOMATICALLY."
        },
        "paymentProcessorId": {
          "type": "string",
          "description": "The id of the payment method in the payment processor's system.\nFor example, if the payment processor is Stripe, the processor id would be a payment method in Stripe's system like\npm_1VJJRx3f57oEAmiusv4IWGS7.\n\nThis is required if the collection method is COLLECTION_METHOD_CHARGE_AUTOMATICALLY."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecurringInvoiceItem"
          },
          "description": "Items to be added to the next invoice.\n\nThis property is required."
        },
        "totalAmount": {
          "type": "string",
          "format": "int64",
          "description": "The total amount of the invoice.\n\nThis property is read-only."
        },
        "currencyCode": {
          "type": "string",
          "description": "The ISO currency code of the invoice.\n\nThis property is read-only."
        },
        "memo": {
          "type": "string",
          "description": "This property can be edited.",
          "title": "An arbitrary note which appears on the invoice"
        },
        "endsAt": {
          "type": "string",
          "format": "date-time",
          "description": "Invoices will no longer be created after the ends at time.\n\nThis property is optional. If it's not set, invoices will be generated indefinitely."
        },
        "customerName": {
          "type": "string",
          "title": "The name of the customer"
        },
        "customerAddress": {
          "$ref": "#/definitions/v1RecurringInvoiceCustomerAddress",
          "title": "the address of the customer"
        },
        "netD": {
          "type": "string",
          "format": "int64",
          "description": "The number of days after the invoice is issued that it is due. This property is optional, but should be between 1 and 180 if set.\nSetting this property when collection method is COLLECTION_METHOD_CHARGE_AUTOMATICALLY is not permitted.\n\nIf this property is not set, it will default to 1 day when collection method is set to COLLECTION_METHOD_CHARGE_AUTOMATICALLY\nand 10 days for other collection methods."
        },
        "additionalRecipientIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The user ids of additional recipients who will receive any emails regarding the invoice."
        },
        "paymentMethodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentMethodType"
          },
          "title": "The payment_method_types define how a Customer can pay for the Invoice (defaults to card)"
        }
      },
      "description": "Recurring invoices allow for invoices to be generated at a set interval for an account."
    },
    "v1RecurringInvoiceBundle": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the bundle."
        },
        "hideLineItems": {
          "type": "boolean",
          "description": "Hiding the line items will result in only the bundle being shown as a single line item without showing the line\nitems which comprise it. The line item total will be the sum of its line items.\n\nThis is optional. It defaults to false."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecurringInvoiceLineItem"
          },
          "description": "The line items of the bundle.\n\nThis is required."
        }
      },
      "description": "A recurring invoice line item bundle is one or more line items which should be grouped together on the invoice.\nThe bundle can be given its own name, and the line items may be hidden from the invoice sent to the user."
    },
    "v1RecurringInvoiceCustomerAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The street address of the customer"
        },
        "city": {
          "type": "string",
          "title": "The city of the customer"
        },
        "state": {
          "type": "string",
          "title": "The state of the customer"
        },
        "zip": {
          "type": "string",
          "title": "The zip code of the customer"
        },
        "country": {
          "type": "string",
          "title": "The country of the customer"
        },
        "address2": {
          "type": "string",
          "title": "The second street address of the customer"
        }
      }
    },
    "v1RecurringInvoiceItem": {
      "type": "object",
      "properties": {
        "lineItem": {
          "$ref": "#/definitions/v1RecurringInvoiceLineItem",
          "description": "A line item for a single product."
        },
        "bundle": {
          "$ref": "#/definitions/v1RecurringInvoiceBundle",
          "description": "A line item bundle is one or more products which should be shown as a group on the invoice.\nThe line items that make up the bundle may be hidden from the user."
        }
      },
      "description": "Recurring invoice items are the line items or bundles which will be shown on the invoice."
    },
    "v1RecurringInvoiceLineItem": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The marketplace SKU for the product.\n\nThis is optional."
        },
        "unitPrice": {
          "type": "string",
          "format": "int64",
          "description": "The price for a single unit. This is represented as the lowest value unit of the currency. For example, if the\naccount uses USD, $10.00 should be represented as 1000 cents.\n\nThis is optional. Default is 0. This can be negative, but the total amount of the invoice must be greater\nthan or equal to zero."
        },
        "quantity": {
          "type": "number",
          "format": "double",
          "description": "The number of products being charged. The total value of this line item would be unit_amount * quantity.\n\nThis is required. Must be greater than or equal to 0."
        },
        "name": {
          "type": "string",
          "description": "The name of the line item.\n\nThis is required."
        },
        "taxRateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the tax rate ids which apply to this invoice.\n\nThis is optional."
        }
      },
      "description": "Recurring invoice line items are the individual products that make up a line item for a recurring invoice."
    },
    "v1RecurringInvoiceStatus": {
      "type": "string",
      "enum": [
        "RECURRING_INVOICE_STATUS_INVALID",
        "RECURRING_INVOICE_STATUS_INACTIVE",
        "RECURRING_INVOICE_STATUS_ACTIVE",
        "RECURRING_INVOICE_STATUS_ARCHIVED"
      ],
      "default": "RECURRING_INVOICE_STATUS_INVALID",
      "description": " - RECURRING_INVOICE_STATUS_INVALID: Invalid means there is no user defined value. This option is invalid.\n - RECURRING_INVOICE_STATUS_INACTIVE: The invoices will not bet sent from this recurring invoice.\n - RECURRING_INVOICE_STATUS_ACTIVE: The recurring invoice will generate invoices.\n - RECURRING_INVOICE_STATUS_ARCHIVED: The recurring invoice is no longer used. It will not generate any future invoices, however they are still visible\nto users."
    },
    "v1ReferenceType": {
      "type": "string",
      "enum": [
        "PURCHASE",
        "PURCHASE_ITEM",
        "INVOICE"
      ],
      "default": "PURCHASE"
    },
    "v1Refund": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The identifier of the merchant to be refunded"
        },
        "chargeId": {
          "type": "string",
          "title": "The stripe charge id representing the original stripe payment that was made, to apply a refund to"
        },
        "refundId": {
          "type": "string",
          "title": "The identifier of the refund"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount to refund"
        },
        "email": {
          "type": "string",
          "title": "The email of the individual requesting the refund"
        },
        "reason": {
          "$ref": "#/definitions/v1RefundReason",
          "title": "The reason that the refund is being issued"
        },
        "status": {
          "$ref": "#/definitions/v1RefundStatus",
          "title": "The status of the refund. For credit cards this can be SUCCEEDED or FAILED"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the refund was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The last time that the refund was updated"
        },
        "referenceType": {
          "$ref": "#/definitions/v1ReferenceType",
          "title": "The type of entity the refund is for"
        },
        "referenceId": {
          "type": "string",
          "title": "The identifier of the refunded entity"
        },
        "description": {
          "type": "string",
          "title": "Additional details to be provided for the refund"
        }
      }
    },
    "v1RefundReason": {
      "type": "string",
      "enum": [
        "REQUESTED_BY_CUSTOMER",
        "DUPLICATE",
        "FRAUDULENT"
      ],
      "default": "REQUESTED_BY_CUSTOMER"
    },
    "v1RefundRetailPaymentResponse": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/v1RetailPayment",
          "description": "The retail payment after the refund has been applied."
        }
      }
    },
    "v1RefundStatus": {
      "type": "string",
      "enum": [
        "SUCCEEDED",
        "FAILED",
        "PENDING"
      ],
      "default": "SUCCEEDED"
    },
    "v1RelationshipType": {
      "type": "string",
      "enum": [
        "RELATIONSHIP_TYPE_INVALID",
        "RELATIONSHIP_TYPE_ASSOCIATED_WITH"
      ],
      "default": "RELATIONSHIP_TYPE_INVALID",
      "title": "- RELATIONSHIP_TYPE_ASSOCIATED_WITH: RELATIONSHIP_TYPE_ASSOCIATED_WITH is used to indicate that the origin entity is associated with the target entity (For example, a retail subscription is associated with the wholesale subscription)"
    },
    "v1RemoveBundleResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1RenewalState": {
      "type": "string",
      "enum": [
        "ON",
        "OFF"
      ],
      "default": "ON"
    },
    "v1ReplaceSubscriptionPresetsResponse": {
      "type": "object",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If not provided in the request, this is a generated subscription_id that can later be used in CreateSubscription(s) requests.\nIf it was provided on the request, this is the same subscription_id."
        }
      }
    },
    "v1ReplaceSubscriptionRelationshipsResponse": {
      "type": "object",
      "properties": {
        "addedSubscriptionRelationshipIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "added_subscription_relationship_ids are returned in the same order as the to_add in the ReplaceRelationshipsRequest"
        }
      }
    },
    "v1ReplaceTaxRuleRequest": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant the tax rule is for"
        },
        "entityType": {
          "$ref": "#/definitions/v1TaxRuleEntityType",
          "title": "The type of entity the tax rule applies to"
        },
        "entityId": {
          "type": "string",
          "title": "The id of the entity the tax rule applies to"
        },
        "type": {
          "$ref": "#/definitions/v1TaxRuleType",
          "title": "The type of tax rule"
        },
        "taxRateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The identifiers of the tax rates that the tax rule applies to"
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer",
          "title": "The consumer type of the tax rule"
        }
      },
      "title": "Create or update a tax rule for a merchant, only a single tax tax rule can exist for a given merchant, entity id, and rule type"
    },
    "v1ReplaceTaxRuleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the tax rule"
        }
      }
    },
    "v1RetailConfiguration": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "the unique id of the merchant"
        },
        "retailGroupId": {
          "type": "string",
          "title": "the identifier that represents a subset of retail customers"
        },
        "currencyCode": {
          "type": "string",
          "title": "the iso currency code"
        },
        "defaultCustomerConfiguration": {
          "$ref": "#/definitions/v1DefaultCustomerConfiguration",
          "title": "the default configuration for all new RetailCustomerConfigurations under this merchant/group ID"
        },
        "currencyConversionRate": {
          "type": "string",
          "format": "int64",
          "description": "Used to automatically set a retail price in the store's selected currency, converted from the product's USD MSRP.\nThis is only used when the store currency is not one of USD, CAD, or AUD. If the conversion rate is set to 0, no conversions will be done."
        }
      },
      "title": "RetailConfiguration represents the settings for a subset of retail customers that the merchant is selling to"
    },
    "v1RetailCustomerConfiguration": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        },
        "invoiceDay": {
          "type": "string",
          "format": "int64",
          "title": "The day of the month in which renewal draft invoices will be issued"
        },
        "nextInvoiceDate": {
          "type": "string",
          "format": "date-time",
          "title": "Calculated date the next invoice will be generated if not set to daily"
        },
        "autoPost": {
          "type": "boolean",
          "title": "Whether invoices should be auto posted"
        },
        "collectionMethod": {
          "type": "string",
          "title": "Indicates how we will attempt to collect for invoices on this customer"
        },
        "netD": {
          "type": "string",
          "format": "int64",
          "title": "the number of days till an invoice is due after posting"
        },
        "autoGenerate": {
          "type": "boolean",
          "title": "Indicates whether invoices will be automatically generated for renewing subscriptions"
        },
        "contactId": {
          "type": "string",
          "title": "The default contact for the customer"
        },
        "useTemplateInvoice": {
          "type": "boolean",
          "title": "Deprecated: invoice templates are no longer supported in favour of recurring invoices\nIndicates whether invoice will be generated using the customers template invoice"
        },
        "memo": {
          "type": "string",
          "title": "The memo to be added to the invoice"
        },
        "additionalContactIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The user ids of any additional contacts for the customer"
        },
        "autoGenerateRetailSubscriptions": {
          "type": "boolean",
          "title": "Indicates whether retail subscriptions should be automatically generated for the customer"
        },
        "paymentMethodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentMethodType"
          },
          "title": "payment_method_types define how a Customer can pay for the generated Invoices (defaults to card)"
        }
      }
    },
    "v1RetailPayment": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "Identifier of the merchant that made this payment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created Date of the payment"
        },
        "currencyCode": {
          "type": "string",
          "title": "Currency of the payment"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount that was paid"
        },
        "referenceId": {
          "type": "string",
          "title": "The ID of the entity the payment was made against (i.e. an invoice or order)"
        },
        "referenceType": {
          "$ref": "#/definitions/v1RetailPaymentReferenceType",
          "title": "The type of object the reference ID is referring to"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID that made the payment"
        },
        "status": {
          "$ref": "#/definitions/v1PaymentStatus",
          "title": "The status of the payment"
        },
        "description": {
          "type": "string",
          "title": "The description of the payment (what the customer would have seen on the credit card descriptor)"
        },
        "failureCode": {
          "type": "string",
          "title": "If the payment failed this code represents the failure"
        },
        "failureMessage": {
          "type": "string",
          "title": "If the payment failed this message contains the reason"
        },
        "applicationFee": {
          "type": "string",
          "format": "int64",
          "title": "The application fee for the payment"
        },
        "disputed": {
          "type": "boolean",
          "title": "Whether or not the payment has been disputed"
        },
        "id": {
          "type": "string",
          "description": "The unique id of the payment."
        },
        "dispute": {
          "$ref": "#/definitions/v1Dispute",
          "title": "RetailDispute of a payment if it exists"
        },
        "cardDetails": {
          "$ref": "#/definitions/RetailPaymentCardDetails",
          "title": "Details about the card that was used to make the payment"
        },
        "refunds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetailRefund"
          },
          "title": "All refunds that have been made against this payment"
        },
        "paymentMethodDetailsType": {
          "$ref": "#/definitions/RetailPaymentPaymentMethodDetailsType",
          "title": "PaymentMethodDetailsType defines the payment method used"
        },
        "achDebitDetails": {
          "$ref": "#/definitions/RetailPaymentACHDetails",
          "title": "Details about the ACH debit used to make the payment"
        },
        "acssDebitDetails": {
          "$ref": "#/definitions/RetailPaymentACSSDetails",
          "title": "Details about the ACSS debit used to make the payment"
        },
        "paymentFacilitatorFee": {
          "type": "string",
          "format": "int64",
          "title": "The fee a payment facilitator would  charge (i.e., Stripe)"
        },
        "paymentFacilitatorType": {
          "$ref": "#/definitions/v1PaymentFacilitatorType",
          "title": "the type of payment facilitator account"
        },
        "settledAt": {
          "type": "string",
          "format": "date-time",
          "title": "The date the payment was settled"
        }
      }
    },
    "v1RetailPaymentReferenceType": {
      "type": "string",
      "enum": [
        "RETAIL_PAYMENT_REFERENCE_TYPE_UNSET",
        "RETAIL_PAYMENT_REFERENCE_TYPE_INVOICE",
        "RETAIL_PAYMENT_REFERENCE_TYPE_SALES_ORDER"
      ],
      "default": "RETAIL_PAYMENT_REFERENCE_TYPE_UNSET"
    },
    "v1RetailPaymentsEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "the status of retail payments"
        }
      }
    },
    "v1RetailPayout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the payout"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date the payout will be deposited"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The amount of the payout"
        },
        "currencyCode": {
          "type": "string",
          "title": "The currency of the payout"
        },
        "status": {
          "$ref": "#/definitions/v1PayoutStatus",
          "title": "The status of the payout"
        },
        "type": {
          "$ref": "#/definitions/v1PayoutType",
          "title": "The type of the payout"
        },
        "lastFourDigits": {
          "type": "string",
          "title": "The last four digits of the account the payout is being deposited in"
        },
        "bankName": {
          "type": "string",
          "title": "The name of the bank that the payout account belongs to"
        },
        "bankId": {
          "type": "string",
          "title": "bank_id is the stripe representation of the bank id"
        },
        "failureCode": {
          "type": "string",
          "title": "If the payout failed this code represents the failure"
        },
        "failureMessage": {
          "type": "string",
          "title": "If the payout failed this message contains the reason"
        }
      }
    },
    "v1RetailRefund": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "the amount that was paid in the smallest sub denomination of the currency (e.g. The $1.24 = 124)"
        },
        "currencyCode": {
          "type": "string",
          "title": "Currency the refund was issued in"
        },
        "refundReason": {
          "$ref": "#/definitions/v1RetailRefundReason",
          "title": "The reason given for issuing the refund"
        },
        "status": {
          "$ref": "#/definitions/v1RetailRefundStatus",
          "title": "If the refund has completed"
        },
        "failureReason": {
          "$ref": "#/definitions/v1RetailRefundFailureReason",
          "title": "Addition details if status is failed"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When then refund was created"
        },
        "payment": {
          "$ref": "#/definitions/v1RetailPayment",
          "description": "The retail payment the refund is issued against, not populated on all endpoints."
        }
      }
    },
    "v1RetailRefundFailureReason": {
      "type": "string",
      "enum": [
        "RETAIL_REFUND_FAILURE_REASON_UNSET",
        "RETAIL_REFUND_FAILURE_REASON_LOST_OR_STOLEN_CARD",
        "RETAIL_REFUND_FAILURE_REASON_EXPIRED_OR_CANCELED_CARD",
        "RETAIL_REFUND_FAILURE_REASON_UNKNOWN"
      ],
      "default": "RETAIL_REFUND_FAILURE_REASON_UNSET"
    },
    "v1RetailRefundReason": {
      "type": "string",
      "enum": [
        "RETAIL_REFUND_REASON_UNSET",
        "RETAIL_REFUND_REASON_DUPLICATE",
        "RETAIL_REFUND_REASON_FRAUDULENT",
        "RETAIL_REFUND_REASON_REQUESTED_BY_CUSTOMER"
      ],
      "default": "RETAIL_REFUND_REASON_UNSET"
    },
    "v1RetailRefundStatus": {
      "type": "string",
      "enum": [
        "RETAIL_REFUND_STATUS_UNSET",
        "RETAIL_REFUND_STATUS_PENDING",
        "RETAIL_REFUND_STATUS_SUCCEEDED",
        "RETAIL_REFUND_STATUS_FAILED",
        "RETAIL_REFUND_STATUS_REQUIRES_ACTION",
        "RETAIL_REFUND_STATUS_CANCELED"
      ],
      "default": "RETAIL_REFUND_STATUS_UNSET"
    },
    "v1RetailStatusResponse": {
      "type": "object",
      "properties": {
        "supportedRegion": {
          "type": "boolean",
          "title": "whether or not the merchant's address is within a supported region for vendasta payments"
        },
        "canAcceptPayment": {
          "type": "boolean",
          "title": "returns true if the merchant has completed their vendasta payments setup to the point where they can accept payments"
        },
        "requirements": {
          "$ref": "#/definitions/RetailStatusResponseVerificationRequirements",
          "title": "verification requirements that are required along with errors encountered within the verification process"
        },
        "disabledReason": {
          "type": "string",
          "title": "the reason the connect account cannot create charges or receive payouts"
        },
        "futureRequirements": {
          "$ref": "#/definitions/RetailStatusResponseVerificationRequirements",
          "title": "verification future requirements that will be required along with errors encountered within the verification process"
        }
      }
    },
    "v1RetailTransaction": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/v1RetailPayment"
        },
        "refund": {
          "$ref": "#/definitions/v1RetailRefund"
        },
        "payoutFailure": {
          "$ref": "#/definitions/v1RetailPayout"
        },
        "adjustment": {
          "$ref": "#/definitions/v1Adjustment"
        }
      }
    },
    "v1RetailTransactionType": {
      "type": "string",
      "enum": [
        "RETAIL_TRANSACTION_TYPE_UNSET",
        "RETAIL_TRANSACTION_TYPE_PAYMENT",
        "RETAIL_TRANSACTION_TYPE_REFUND",
        "RETAIL_TRANSACTION_TYPE_PAYOUT_FAILURE",
        "RETAIL_TRANSACTION_TYPE_ADJUSTMENT"
      ],
      "default": "RETAIL_TRANSACTION_TYPE_UNSET",
      "description": "RetailTransactionType describes the various one of types of RetailTransaction."
    },
    "v1RetentionMetrics": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The unique id representing a product (Stock Keeping Unit)."
        },
        "productName": {
          "type": "string",
          "title": "The name of the product"
        },
        "startingCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of activations at the start of the time period"
        },
        "activations": {
          "type": "string",
          "format": "int64",
          "title": "The number of activiations within a time period"
        },
        "deactivations": {
          "type": "string",
          "format": "int64",
          "title": "The number of deactivations within a time period"
        },
        "churn": {
          "type": "number",
          "format": "float",
          "title": "The churn rate within the time period (0.0 - 1.0)"
        },
        "retention": {
          "type": "number",
          "format": "float",
          "title": "The retention rate within the time period (0.0 - 1.0)"
        }
      }
    },
    "v1SalesCreditNote": {
      "type": "object",
      "properties": {
        "creditNoteId": {
          "type": "string",
          "description": "Identifier for the credit note."
        },
        "creditNoteNumber": {
          "type": "string",
          "description": "Unique auto-number field in the format SCR{auto-number}."
        },
        "merchantId": {
          "type": "string",
          "description": "Identifier for the merchant."
        },
        "creditNoteReason": {
          "type": "string",
          "description": "Reason for creating a credit note."
        },
        "creditNoteDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date that will appear on the credit note."
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date the credit note payment is due."
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "description": "Currency in which monetary values are expressed on this credit note."
        },
        "total": {
          "type": "string",
          "format": "int64",
          "description": "Total credit note value (in cents)."
        },
        "outstanding": {
          "type": "string",
          "format": "int64",
          "description": "Amount still owed on this document in document currency (in cents)."
        },
        "invoiceId": {
          "type": "string",
          "description": "Identifier for the corresponding invoice."
        },
        "invoiceNumber": {
          "type": "string",
          "description": "Unique auto-number field for an invoice in the format SIN{auto-number}."
        },
        "status": {
          "$ref": "#/definitions/v1SalesCreditNoteStatus",
          "description": "Current status of the credit note."
        },
        "paymentStatus": {
          "type": "string",
          "title": "Is this document unpaid, part-paid, or paid in full?"
        },
        "externalId": {
          "type": "string",
          "description": "External identifier for the credit note."
        }
      },
      "description": "A credit note is a commercial document issued by a seller to a buyer. Credit notes act as a Source document for the Sales return journal.\nA credit note is a way of refunding an invoice that has already been issued or paid. It can be for part of (or the whole amount of) an invoice."
    },
    "v1SalesCreditNoteStatus": {
      "type": "string",
      "enum": [
        "SALES_CREDIT_NOTE_STATUS_IN_PROGRESS",
        "SALES_CREDIT_NOTE_STATUS_READY_TO_POST",
        "SALES_CREDIT_NOTE_STATUS_COMPLETE",
        "SALES_CREDIT_NOTE_STATUS_DISCARDED"
      ],
      "default": "SALES_CREDIT_NOTE_STATUS_IN_PROGRESS"
    },
    "v1SalesInvoice": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string",
          "description": "Identifier for the invoice."
        },
        "invoiceNumber": {
          "type": "string",
          "description": "Unique auto-number field in the format SIN{auto-number}."
        },
        "merchantId": {
          "type": "string",
          "title": "Identifier for the merchant"
        },
        "invoiceDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date that will appear on the invoice."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date of the invoice period."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date of the invoice period."
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date the payment is due."
        },
        "total": {
          "type": "string",
          "format": "int64",
          "description": "Total invoice value, including the tax (in cents)."
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "description": "Currency in which monetary values are expressed on this invoice."
        },
        "status": {
          "$ref": "#/definitions/v1SalesInvoiceStatus",
          "description": "Current status of the invoice."
        },
        "paymentStatus": {
          "type": "string",
          "title": "Is this document unpaid, part-paid, or paid in full?"
        },
        "outstanding": {
          "type": "string",
          "format": "int64",
          "description": "Amount still owed on this document in document currency (in cents)."
        },
        "type": {
          "$ref": "#/definitions/v1SalesInvoiceType",
          "title": "whether the invoice was created for an instant purchase or invoiced purchase(s)"
        },
        "externalId": {
          "type": "string",
          "description": "External identifier for the invoice."
        }
      },
      "description": "A sales invoice is a commercial document issued by a seller to a buyer, indicating the products, quantities and agreed prices for goods or services that have already been provided. \nA sales invoice indicates that, unless paid in advance, payment is due by the buyer to the seller, according to the agreed terms."
    },
    "v1SalesInvoiceStatus": {
      "type": "string",
      "enum": [
        "SALES_INVOICE_STATUS_IN_PROGRESS",
        "SALES_INVOICE_STATUS_READY_TO_POST",
        "SALES_INVOICE_STATUS_COMPLETE",
        "SALES_INVOICE_STATUS_DISCARDED"
      ],
      "default": "SALES_INVOICE_STATUS_IN_PROGRESS"
    },
    "v1SalesInvoiceType": {
      "type": "string",
      "enum": [
        "SALES_INVOICE_TYPE_UNSET",
        "SALES_INVOICE_TYPE_INVOICED",
        "SALES_INVOICE_TYPE_INSTANT"
      ],
      "default": "SALES_INVOICE_TYPE_UNSET"
    },
    "v1SearchMerchantsResponse": {
      "type": "object",
      "properties": {
        "merchants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Merchant"
          },
          "title": "list of merchants"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "Search merchants paged response"
    },
    "v1SubmitEvidenceRequestDisputeEvidence": {
      "type": "object",
      "properties": {
        "billingAddress": {
          "type": "string",
          "title": "The billing address provided by the customer"
        },
        "customerEmailAddress": {
          "type": "string",
          "title": "The customer's email address"
        },
        "customerName": {
          "type": "string",
          "title": "The customer's name"
        },
        "productDescription": {
          "type": "string",
          "title": "A description of the product or service sold (max 20000 characters)"
        },
        "customerSignatureFileId": {
          "type": "string",
          "title": "The ID of a file containing a relevant document or contract with the customer\u2019s signature"
        },
        "customerCommunicationFileId": {
          "type": "string",
          "title": "Any communication with the customer relevant to the case (e.g. email proving receipt, use, or satisfaction with the product or service)"
        },
        "receiptFileId": {
          "type": "string",
          "description": "Any receipt or message sent to the customer notifying them of the charge."
        },
        "shippingDocumentationFileId": {
          "type": "string",
          "description": "The file identifier for any shipping documents relevant to the case."
        },
        "uncategorizedFileId": {
          "type": "string",
          "title": "A file id of any documentation that falls outside of an existing evidence category"
        }
      }
    },
    "v1SubscribeValidation": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1SubscribeValidationStatus",
          "description": "description as to why they can or can not subscribe."
        }
      },
      "title": "Used to describe if a parnter can create a subscription for a sku or not"
    },
    "v1SubscribeValidationStatus": {
      "type": "string",
      "enum": [
        "SUBSCRIBE_VALIDATION_STATUS_UNSET",
        "SUBSCRIBE_VALIDATION_STATUS_CANNOT_INSTANT_BILL",
        "SUBSCRIBE_VALIDATION_STATUS_MISSING_MERCHANT_INFO",
        "SUBSCRIBE_VALIDATION_STATUS_MISSING_PAYMENT_INFO",
        "SUBSCRIBE_VALIDATION_STATUS_WILL_CAUSE_FUTURE_CHARGES"
      ],
      "default": "SUBSCRIBE_VALIDATION_STATUS_UNSET",
      "title": "Reason describe why the partner is or is not able to subscribe to the product"
    },
    "v1SubscriptionPreset": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "Optional - only use this id if you've previously called and obtained a subscription_id.\nIf a subscription with this subscription_id already exists, calling this RPC with it will overwrite the existing entity."
        },
        "autoBillable": {
          "type": "boolean",
          "description": "If false, the Subscription will only be used for revenue tracking and will not be billed through our system."
        },
        "salesOrderId": {
          "type": "string",
          "description": "The order_id of the SalesOrder model from the sales-orders Microservice."
        },
        "paymentIntentId": {
          "type": "string",
          "description": "the Stripe PaymentIntent ID that was used to collect payment for the subscription.\nIndicates whether a new subscription has collected payment, allowing us to generate a paid invoice."
        },
        "merchantId": {
          "type": "string",
          "title": "The merchant_id of the Merchant the subscription is for"
        },
        "billingStart": {
          "type": "string",
          "format": "date-time",
          "title": "(Optional) the date at which billing should occur"
        },
        "renewalStart": {
          "type": "string",
          "format": "date-time",
          "description": "(Optional) The desired renewal start date. This should be used when the subscription is being created with a specific renewal start date in mind."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "(Optional) The desired expiry date. This should be used when the subscription is being created with a specific end date in mind."
        },
        "invoiceId": {
          "type": "string",
          "title": "The id of the invoice that was generated from the sales order"
        }
      }
    },
    "v1SubscriptionProjectionFilter": {
      "type": "object",
      "properties": {
        "price": {
          "type": "boolean",
          "title": "Controls if product price is returned"
        },
        "includeDeleted": {
          "type": "boolean",
          "title": "Controls if deleted subscriptions are returned"
        }
      },
      "title": "SubscriptionProjectionFilter controls which sets of extended subscription data is returned on subscription responses"
    },
    "v1SubscriptionRelationship": {
      "type": "object",
      "properties": {
        "subscriptionRelationshipId": {
          "type": "string",
          "title": "subscription_relationship_id is a unique id for the Relationship"
        },
        "merchantId": {
          "type": "string",
          "title": "merchant_id is the id of the merchant the relationship pertains to"
        },
        "customerId": {
          "type": "string",
          "title": "customer_id is the id of the customer the relationship pertains to"
        },
        "originId": {
          "type": "string",
          "title": "origin_id is the id of the entity the edge originates from (origin -> target)"
        },
        "originType": {
          "$ref": "#/definitions/v1EntityType",
          "description": "origin_type refers to the type of entity the origin_id belongs to."
        },
        "targetId": {
          "type": "string",
          "title": "target_id is the id of the entity that the edge points to (origin -> target)"
        },
        "targetType": {
          "$ref": "#/definitions/v1EntityType",
          "description": "target_type refers to the type of entity the target_id belongs to."
        },
        "relationshipType": {
          "$ref": "#/definitions/v1RelationshipType",
          "title": "relationship_type refers to the type of relationship between origin and target"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "*\nA common example of a Relationship is between a retail and wholesale subscription, which implies a hierarchy.\nRetail Subscription -> Wholesale Subscription\n                    -> Wholesale Subscriptions"
    },
    "v1TaxRate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The unique identifier of the tax rate"
        },
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant the tax rate is for"
        },
        "countryCode": {
          "type": "string",
          "title": "The two digit iso country code of the tax rate"
        },
        "stateCode": {
          "type": "string",
          "title": "The two digit iso province or state code of the tax rate"
        },
        "name": {
          "type": "string",
          "title": "The tax name eg: GST, PST, HST"
        },
        "description": {
          "type": "string",
          "title": "The description of the tax (Ontario PST)"
        },
        "percentage": {
          "type": "number",
          "format": "float",
          "title": "This represents the tax rate percent from 1 to 100"
        },
        "accountingSystemId": {
          "type": "string",
          "title": "(OPTIONAL) A third party identifier"
        },
        "archived": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time at which the tax rate was archived. Unset if not archived."
        }
      },
      "description": "Tax rates can be applied to invoices and subscriptions to collect tax."
    },
    "v1TaxRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The unique identifier of the tax rule"
        },
        "merchantId": {
          "type": "string",
          "title": "The id of the merchant the tax rule is for"
        },
        "entityId": {
          "type": "string",
          "title": "The id of the entity the tax rule applies to"
        },
        "entityType": {
          "$ref": "#/definitions/v1TaxRuleEntityType",
          "title": "The type of entity the tax rule applies to (i.e. customer)"
        },
        "entity": {
          "$ref": "#/definitions/TaxRuleTaxRuleEntity",
          "title": "The details of the entity that tax rule applies to"
        },
        "type": {
          "$ref": "#/definitions/v1TaxRuleType",
          "title": "The type of tax rule"
        },
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxRate"
          },
          "title": "The identifiers of the tax rates that the tax rule applies to"
        }
      }
    },
    "v1TaxRuleCustomer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the customer"
        },
        "address": {
          "$ref": "#/definitions/v1TaxRuleCustomerCustomerAddress",
          "title": "The address of the customer"
        }
      }
    },
    "v1TaxRuleCustomerCustomerAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The street address of the customer"
        },
        "address2": {
          "type": "string",
          "title": "The second street address of the customer"
        },
        "city": {
          "type": "string",
          "title": "The city of the customer"
        },
        "state": {
          "type": "string",
          "title": "The state of the customer"
        },
        "zip": {
          "type": "string",
          "title": "The zip code of the customer"
        },
        "country": {
          "type": "string",
          "title": "The country of the customer"
        }
      }
    },
    "v1TaxRuleEntityType": {
      "type": "string",
      "enum": [
        "TAX_RULE_ENTITY_TYPE_UNSET",
        "TAX_RULE_ENTITY_TYPE_CUSTOMER",
        "TAX_RULE_ENTITY_TYPE_PRODUCT"
      ],
      "default": "TAX_RULE_ENTITY_TYPE_UNSET"
    },
    "v1TaxRuleProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the product"
        },
        "identifier": {
          "$ref": "#/definitions/TaxRuleProductProductIdentifier",
          "title": "The extra identifying details for the product"
        }
      }
    },
    "v1TaxRuleType": {
      "type": "string",
      "enum": [
        "TAX_RULE_TYPE_UNSET",
        "TAX_RULE_TYPE_EXEMPTION"
      ],
      "default": "TAX_RULE_TYPE_UNSET"
    },
    "v1UpdateBundleResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1UpdateContractResponse": {
      "type": "object",
      "properties": {
        "contract": {
          "$ref": "#/definitions/v1Contract",
          "title": "The updated contract"
        }
      }
    },
    "v1UpdateDefaultTaxRatesResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1UpdateInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice"
        }
      }
    },
    "v1UpdateLineItemResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/v1Invoice",
          "title": "The invoice"
        }
      }
    },
    "v1UpdateMerchantRequestIncludeInFinancialRecords": {
      "type": "object",
      "properties": {
        "includeInFinancialRecords": {
          "type": "boolean"
        }
      },
      "title": "Whether to include the merchant within financial records.\nthis bool is wrapped in a message to allow for an \"unset\" null state"
    },
    "v1UpdatePricingPlanProductResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdatePricingPlanResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdateSubscriptionRequestSubscription": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "title": "The unique identifier of the subscription. This is used only for identification and is not editable"
        },
        "description": {
          "type": "string",
          "title": "The description of the subscription. This is how the subscription will appear on invoices and is synonymous with a display name"
        },
        "billingCycleAnchor": {
          "type": "string",
          "format": "date-time",
          "description": "Acts as an anchor date for determining when a renewal is recorded or prepared to be charged.\nIt is called an anchor date because it does not reflect the actual date, but is used to compute future dates."
        }
      },
      "title": "The subscription that includes updatable fields"
    },
    "v1UpdateSubscriptionResponse": {
      "type": "object"
    },
    "v1ValidateResponse": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/v1SubscribeValidation"
        }
      }
    },
    "v1WholesaleCostItemRequest": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "Unique id representing a product (Stock Keeping Unit)."
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "The quantity of upcoming purchases"
        },
        "frequency": {
          "$ref": "#/definitions/v1Frequency",
          "title": "Optional: if the frequency is not passed, the default frequency pricing is used to determine purchase cost"
        }
      }
    },
    "v1Repository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The internal id of the repository"
        }
      },
      "title": "A repository"
    },
    "ListImagesRequestFilters": {
      "type": "object",
      "properties": {
        "imageType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ImageType"
          }
        },
        "includeDeleted": {
          "type": "boolean"
        }
      }
    },
    "v1GetLogoImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/v1ImageAssociation",
          "title": "ImageAssociation is the pairing of an image id to an account group id"
        }
      },
      "title": "GetLogoImageResponse contains the image association for the logo associated with an account group"
    },
    "v1ImageAssociation": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "Account group ID of the account with which the image is associated"
        },
        "imageId": {
          "type": "string",
          "title": "The unique image id of the image associated with the account group"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestap for when the image association was created"
        },
        "imageType": {
          "$ref": "#/definitions/v1ImageType",
          "title": "What type of image"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp for when the image association was deleted"
        }
      },
      "title": "ImageAssociation is the pairing of an image id to an account group id"
    },
    "v1ImageType": {
      "type": "string",
      "enum": [
        "NOT_SPECIFIED",
        "PRIMARY",
        "LOGO",
        "SECONDARY_LOGO"
      ],
      "default": "NOT_SPECIFIED",
      "title": "The possible image types, that can be associated with an image"
    },
    "v1ListImagesPagedResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ImageAssociation"
          }
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        }
      },
      "title": "ListImagesPagedResponse is the list of image association models that are associated to an account group"
    },
    "ListListingSyncProAddonIdsResponseAddonInfo": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1ServiceProvider",
          "description": "Who provides this type of LSP."
        },
        "isDiscounted": {
          "type": "boolean",
          "title": "Is this discounted LSP?"
        },
        "countryCode": {
          "type": "string",
          "title": "Country supported by the Addon"
        },
        "billingFrequency": {
          "$ref": "#/definitions/ListListingSyncProAddonIdsResponseAddonInfoBillingFrequency",
          "title": "The frequency the addon is billed"
        }
      },
      "description": "Info about a specific type of Listing Sync Pro."
    },
    "ListListingSyncProAddonIdsResponseAddonInfoBillingFrequency": {
      "type": "string",
      "enum": [
        "LIST_LISTING_SYNC_PRO_ADDON_IDS_RESPONSE_ADDON_INFO_BILLING_FREQUENCY_UNSPECIFIED",
        "LIST_LISTING_SYNC_PRO_ADDON_IDS_RESPONSE_ADDON_INFO_BILLING_FREQUENCY_MONTHLY",
        "LIST_LISTING_SYNC_PRO_ADDON_IDS_RESPONSE_ADDON_INFO_BILLING_FREQUENCY_YEARLY"
      ],
      "default": "LIST_LISTING_SYNC_PRO_ADDON_IDS_RESPONSE_ADDON_INFO_BILLING_FREQUENCY_UNSPECIFIED"
    },
    "listing_sync_prov1BillingFrequency": {
      "type": "string",
      "enum": [
        "BILLING_FREQUENCY_UNSPECIFIED",
        "BILLING_FREQUENCY_MONTHLY",
        "BILLING_FREQUENCY_YEARLY"
      ],
      "default": "BILLING_FREQUENCY_UNSPECIFIED"
    },
    "v1AccountListingStatuses": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string",
          "title": "The name of the business"
        },
        "address": {
          "type": "string",
          "title": "The street address of the business"
        },
        "city": {
          "type": "string",
          "title": "The city of the business"
        },
        "state": {
          "type": "string",
          "title": "The state/province of the business"
        },
        "sourceStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceStatus"
          },
          "title": "The statuses of the business' sources"
        },
        "businessId": {
          "type": "string",
          "title": "The unique id of the business"
        },
        "statusDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date the listing status was collected"
        },
        "businessUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Last time the business profile information was updated"
        },
        "sourceData": {
          "$ref": "#/definitions/v1SourceData",
          "title": "The source syncing information for the business"
        }
      },
      "title": "The listing statuses for an account"
    },
    "v1AccuracyStatus": {
      "type": "string",
      "enum": [
        "ACCURACY_STATUS_INVALID",
        "ACCURACY_STATUS_UNKNOWN",
        "ACCURACY_STATUS_ACCURATE",
        "ACCURACY_STATUS_INACCURATE",
        "ACCURACY_STATUS_UNAVAILABLE"
      ],
      "default": "ACCURACY_STATUS_INVALID",
      "title": "- ACCURACY_STATUS_INVALID: Either the accuracy data could not be interpreted or there was an error\n - ACCURACY_STATUS_UNKNOWN: Either no scraped data was found, or we have none\n - ACCURACY_STATUS_ACCURATE: Scraped listing was found to be totally accurate\n - ACCURACY_STATUS_INACCURATE: Scraped listing was found with discrepancies\n - ACCURACY_STATUS_UNAVAILABLE: Source does not support accuracy reporting"
    },
    "v1AnchorData": {
      "type": "object",
      "properties": {
        "website": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "title": "AnchorData contains the business NAP data used to compare scraped source results"
    },
    "v1AnchorDataMatches": {
      "type": "object",
      "properties": {
        "website": {
          "type": "boolean"
        },
        "city": {
          "type": "boolean"
        },
        "zip": {
          "type": "boolean"
        },
        "companyName": {
          "type": "boolean"
        },
        "country": {
          "type": "boolean"
        },
        "phone": {
          "type": "boolean"
        },
        "state": {
          "type": "boolean"
        },
        "address": {
          "type": "boolean"
        }
      },
      "title": "AnchorDataMatches contains flags for whether each anchor data field matches the scraped data"
    },
    "v1Citation": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "matchedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "breadcrumb": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Citation contains details for a citation"
    },
    "v1CitationListing": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "CitationListing contains details for a citation listing"
    },
    "v1CreateListingSyncProSourceResponse": {
      "type": "object",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/v1SourceInfo",
          "title": "The info for the newly created source"
        }
      }
    },
    "v1ErrorCode": {
      "type": "string",
      "enum": [
        "ERROR_CODE_NONE"
      ],
      "default": "ERROR_CODE_NONE",
      "title": "ErrorCode represents the error code of a message"
    },
    "v1Errors": {
      "type": "object",
      "properties": {
        "errorCode": {
          "$ref": "#/definitions/v1ErrorCode",
          "title": "The field that has the error"
        },
        "errorDetails": {
          "type": "string",
          "title": "Details for the error"
        }
      },
      "title": "The field that has the error"
    },
    "v1GetAvailableProvidersForPartnerResponse": {
      "type": "object",
      "properties": {
        "serviceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ServiceProvider"
          }
        }
      },
      "title": "Return a list of available service providers for a partner"
    },
    "v1GetCitationDataResponse": {
      "type": "object",
      "properties": {
        "citationCount": {
          "type": "string",
          "format": "int64"
        },
        "initialCitationCount": {
          "type": "string",
          "format": "int64"
        },
        "historicalCitationsSeries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HistoricalCitationsDataPoint"
          }
        },
        "citationsByDomain": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CitationsByDomain"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "citationPercentGrowth": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "GetCitationDataResponse contains the citation data for a business"
    },
    "v1GetListingDataResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "lspActive": {
          "type": "boolean"
        },
        "ldActive": {
          "type": "boolean"
        },
        "provider": {
          "$ref": "#/definitions/v1ServiceProvider"
        },
        "scores": {
          "$ref": "#/definitions/v1ScoreData"
        },
        "anchorData": {
          "$ref": "#/definitions/v1AnchorData"
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceTableData"
          }
        },
        "totalSources": {
          "type": "string",
          "format": "int64",
          "description": "A sum of all the sources in our source table data for this account group."
        },
        "totalAcceptedSources": {
          "type": "string",
          "format": "int64",
          "title": "All the sources that have an accepted sync status. This includes sources that are submit only and the listing has\nbeen submitted, sources that are marked as syncing by the Listing Provider, synced listings with ignored errors,\nand possibly other types (or not)"
        },
        "totalAccuracyGoodSources": {
          "type": "string",
          "format": "int64",
          "description": "The total number of sources that we consider to have accurate listings. This can differ from the \"good\" sync\ncount since the Listing Provider may say the directory is synced but our listing search shows errors on the\nlisting. We may also find a source that was manually updated has the correct information."
        },
        "totalManualSyncOnlySources": {
          "type": "string",
          "format": "int64",
          "description": "The total number of sources that can only be edited manually. These sources are not part of LD or LSP."
        },
        "totalAccuracySources": {
          "type": "string",
          "format": "int64",
          "description": "This differs from total_sources in that some sources (ex currently GPS) are reportable for accuracy. This is\nusually because the source is not crawlable or we have not integrated against their search API."
        },
        "percentageAccuracyGoodSources": {
          "type": "number",
          "format": "double",
          "description": "Used to hold the percentage of total_accuracy_good_sources divided by total_accuracy_sources, rounded."
        },
        "totalPossibleErrors": {
          "type": "string",
          "format": "int64",
          "title": "Used to count sources with accuracy status = innacurate"
        },
        "totalNotFound": {
          "type": "string",
          "format": "int64",
          "title": "Used to count sources with accuracy status = not_found"
        },
        "socialProfileId": {
          "type": "string",
          "description": "The social profile ID maps 1 to 1 with the account group ID. The social services are all referenced by social profile ID instead of account group ID."
        },
        "totalInProgressSources": {
          "type": "string",
          "format": "int64",
          "description": "The total number of sources that are in progress."
        },
        "lspUpgradePathEnabled": {
          "type": "boolean",
          "title": "Whether or not the partner sells LSP for this business"
        },
        "localSeoProUpgradePathEnabled": {
          "type": "boolean",
          "title": "Whether or not the partner / market has Local SEO Pro upgrade path enabled"
        }
      },
      "title": "GetListingDataResponse contains all required data to populate the main listing table for a business"
    },
    "v1GetListingSyncProAddonIdResponse": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string"
        },
        "preferencesOverriddenReasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Return the specific Addon Id based on provider, country code, billing frequency and if the partner is eligible for a discount."
    },
    "v1GetListingSyncProProviderSourcesDataResponse": {
      "type": "object",
      "properties": {
        "sourceData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ListingSyncProProviderSourceData"
          },
          "title": "Data for the sources requested, keyed by provider_specific_id"
        }
      },
      "title": "Return data for all provider-specific sources"
    },
    "v1GetProviderSourcesForBusinessResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1ServiceProvider"
        },
        "sourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetScrapedSourceStatusesResponse": {
      "type": "object",
      "properties": {
        "sourceStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceStatus"
          }
        }
      }
    },
    "v1GetSelectedSocialServicesResponse": {
      "type": "object",
      "properties": {
        "selectedServices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SelectedSocialService"
          }
        }
      }
    },
    "v1HistoricalCitationsDataPoint": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the data point."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "title": "Value of the data point. Represents total citations up to a certain day"
        }
      }
    },
    "v1HistoricalScore": {
      "type": "object",
      "properties": {
        "score": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1IsListingSyncProActiveResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account to retrieve LSP activation status for"
        },
        "isActive": {
          "type": "boolean",
          "title": "Whether LSP is active or not"
        },
        "addonId": {
          "type": "string",
          "title": "The LSP addon that is currently active for the account"
        },
        "provider": {
          "$ref": "#/definitions/v1ServiceProvider",
          "title": "The LSP service provider for the current activation"
        }
      },
      "title": "Response to the question is listing sync pro active for this account"
    },
    "v1ListListingSyncProAddonIdsResponse": {
      "type": "object",
      "properties": {
        "addonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addonInfo": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ListListingSyncProAddonIdsResponseAddonInfo"
          }
        }
      },
      "title": "Return a list of all listing sync pro addon ids"
    },
    "v1ListListingSyncProSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1SourceInfo"
          },
          "title": "The info for the sources requested, keyed by core services source_id"
        }
      },
      "title": "Return all of the sources synced to by the versions of LSP requested"
    },
    "v1ListStatusesByBusinessResponse": {
      "type": "object",
      "properties": {
        "sourceStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceStatus"
          },
          "title": "List of listing statuses for account"
        }
      }
    },
    "v1ListStatusesByPartnerResponse": {
      "type": "object",
      "properties": {
        "lspData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountListingStatuses"
          },
          "title": "List of listing statuses for accounts"
        },
        "pagingData": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging meta data"
        }
      }
    },
    "v1ListingSyncProProviderSourceData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the source in readable format"
        },
        "icon": {
          "type": "string",
          "title": "Icon name of the source"
        },
        "type": {
          "$ref": "#/definitions/v1SiteType",
          "title": "The site type of the source (optional)"
        },
        "popularity": {
          "type": "string",
          "format": "int64",
          "title": "The popularity of the source (optional)"
        },
        "whitelistedPartnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The whitelist of partners the source is for (optional)"
        }
      },
      "title": "Data for a specific listing sync pro source\nThese sources are Listing Sync Pro provider sources"
    },
    "v1ScoreData": {
      "type": "object",
      "properties": {
        "totalScore": {
          "type": "string",
          "format": "int64",
          "title": "Total score for the account, including listings and citations"
        },
        "maxListingScore": {
          "type": "string",
          "format": "int64",
          "title": "Max possible score from scraped listings, not including citations"
        },
        "listingScore": {
          "type": "string",
          "format": "int64",
          "title": "Total score from scraped listing, not including citations"
        },
        "industryAverage": {
          "type": "string",
          "format": "int64"
        },
        "industryAveragePercentile": {
          "type": "string",
          "format": "int64",
          "title": "The percentile that the industry average (score) falls into"
        },
        "ninetyFifthPercentile": {
          "type": "string",
          "format": "int64"
        },
        "businessPercentile": {
          "type": "string",
          "format": "int64",
          "title": "The percentile that the business's score falls into"
        },
        "initialBusinessPercentile": {
          "type": "string",
          "format": "int64",
          "title": "The percentile that the business's first recorded listing score falls into"
        },
        "listingScoreHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HistoricalScore"
          }
        }
      },
      "title": "ScoreData contains detailed listing score data for a business"
    },
    "v1SelectedSocialService": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "ssid": {
          "type": "string"
        }
      }
    },
    "v1ServiceProvider": {
      "type": "string",
      "enum": [
        "SERVICE_PROVIDER_UNSPECIFIED",
        "SERVICE_PROVIDER_PROVIDER_0",
        "SERVICE_PROVIDER_PROVIDER_1"
      ],
      "default": "SERVICE_PROVIDER_UNSPECIFIED",
      "description": "- SERVICE_PROVIDER_PROVIDER_0: Uberall\n - SERVICE_PROVIDER_PROVIDER_1: Yext",
      "title": "The different LSP service providers"
    },
    "v1SetSelectedSocialServiceResponse": {
      "type": "object",
      "properties": {
        "errorMsg": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "v1SourceAccuracy": {
      "type": "object",
      "properties": {
        "anchorData": {
          "$ref": "#/definitions/v1AnchorData"
        },
        "anchorDataMatches": {
          "$ref": "#/definitions/v1AnchorDataMatches"
        },
        "status": {
          "$ref": "#/definitions/v1AccuracyStatus"
        },
        "lastScraped": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SourceData": {
      "type": "object",
      "properties": {
        "syncedSources": {
          "type": "string",
          "format": "int64",
          "title": "Number of sources that are properly syncing/synced for a business"
        },
        "totalSources": {
          "type": "string",
          "format": "int64",
          "title": "The total number of sources that could be synced for a business"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ErrorCode"
          },
          "title": "List of error codes present on a business"
        }
      },
      "title": "Summary of the syncing information for a business"
    },
    "v1SourceInfo": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "The core services source id for the source"
        },
        "name": {
          "type": "string",
          "title": "The name of the source"
        },
        "serviceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ServiceProvider"
          },
          "title": "The LSP service providers that include this source"
        },
        "providerSpecificIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The name that each provider assigns to the source, keyed by provider."
        }
      },
      "title": "Info about a specific listing source as it pertains to Listing Sync Pro\nThe sources are core services sources"
    },
    "v1SourceStatus": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "title": "The source the status is for"
        },
        "statusCode": {
          "$ref": "#/definitions/v1StatusCode",
          "title": "The status of the source"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Errors"
          },
          "title": "The list of errors for the source"
        },
        "url": {
          "type": "string",
          "title": "The listing url"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Errors"
          },
          "title": "The list of warnings for the source"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Date the listing status was collected"
        }
      },
      "title": "The information on the status for a source"
    },
    "v1SourceTableData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "This is what is displayed in the table as the name of the source"
        },
        "icon": {
          "type": "string",
          "title": "The icon name that we use to request the icon image to display in the table (ex: //www.cdnstyles.com/static/images/source-icons/${sourceIcon}.svg)"
        },
        "popularity": {
          "type": "string",
          "format": "int64",
          "title": "The higher the number the more users a source has"
        },
        "type": {
          "$ref": "#/definitions/v1SiteType",
          "title": "This is the \"Category\" on the table. Example values: Directory, App, Map, etc"
        },
        "providerSourceId": {
          "type": "string",
          "description": "Name of the source on Yext/Uberall API. Not filled in for Social Services."
        },
        "provider": {
          "$ref": "#/definitions/v1ServiceProvider",
          "title": "Yext/Uberall/Unset"
        },
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "Vendasta's internal source ID"
        },
        "isDirectlySubmittedSource": {
          "type": "boolean",
          "title": "Is a source that Vendasta submits data directly to (Google, Facebook, Twitter, etc)"
        },
        "isLdSource": {
          "type": "boolean",
          "title": "Is a source that is part of Listing Distribution"
        },
        "directSubmissionActive": {
          "type": "boolean",
          "description": "This is only for free sources like GMB, Facebook, Instagram, Twitter. True if we are syncing data to this source."
        },
        "syncStatus": {
          "$ref": "#/definitions/v1StatusCode",
          "title": "The syncing status for this source. Social Services will either be STATUS_CODE_SYNCED or STATUS_CODE_SYNC_DISABLED\ndepending on if they are enabled by the SMB or not. Other sources get their sync status from Yext/Uberall"
        },
        "score": {
          "type": "string",
          "format": "int64",
          "title": "The current listing score for this source"
        },
        "maxScore": {
          "type": "string",
          "format": "int64",
          "title": "The maximum possible listing score for this source"
        },
        "externalId": {
          "type": "string",
          "description": "Appears to be intended as provider_source_id. Never used in backend or frontend."
        },
        "url": {
          "type": "string",
          "description": "URL of the listing we are syncing data to."
        },
        "errorDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Errors"
          },
          "title": "Errors encountered in the syncing process"
        },
        "warningDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Errors"
          },
          "title": "Warnings encountered in the syncing process"
        },
        "accuracy": {
          "$ref": "#/definitions/v1SourceAccuracy",
          "description": "We also do our own monitoring of the listings online via Webcrawler, CS, etc."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Last time the accuracy was updated"
        },
        "listingId": {
          "type": "string",
          "title": "ID of the listing in the LIS table in CS"
        },
        "connectLink": {
          "type": "string",
          "description": "connect_link This is the link that will create a new connection for a Social Service when it is followed."
        },
        "disconnectLink": {
          "type": "string",
          "description": "disconnect_link Disconnects the social service specified by the ssid. This will also remove the selected and sync statuses for the social service\n since we neither want to display nor sync a disconnected service."
        },
        "ssid": {
          "type": "string",
          "description": "ssid The Social Service ID. This identifies the specific connection and will be unique for every connection whether\n  or not that listing source supports multiple connections."
        },
        "updateSyncLink": {
          "type": "string",
          "description": "When the link is hit it turns syncing on/off for GMB/FB/Twitter. Only a single connection per source can be synced to at any time. Turning on syncing for\na connection will turn syncing off for all other connections on that source."
        },
        "selectedSocialService": {
          "type": "boolean",
          "title": "selected_social_service indicates that user has selected a connection to be displayed in frontend"
        },
        "socialServiceName": {
          "type": "string",
          "title": "social service name to be displayed in the front end. This is usually the business's name"
        },
        "serviceType": {
          "type": "string",
          "title": "service type is the internal provider name (like GMB, FB_PAGE, TW_USER) needed to update sync link"
        },
        "serviceUserId": {
          "type": "string",
          "title": "This is just the ssid with the service abbreviation stripped from it. It can be used to disconnect social services but we use the SSID instead"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Client tags like MS, SM, CS_LISTINGs"
        },
        "profileImageUrl": {
          "type": "string",
          "title": "social service profile image url if exists"
        },
        "isListingVerified": {
          "type": "boolean",
          "title": "Whether the listing has been verified as accurate by the business"
        }
      },
      "description": "SourceTableData contains all the listing and social service information for a single connection for source."
    },
    "v1StatusCode": {
      "type": "string",
      "enum": [
        "STATUS_CODE_UNKNOWN",
        "STATUS_CODE_SYNCED",
        "STATUS_CODE_IN_PROGRESS",
        "STATUS_CODE_IGNORING_ERRORS",
        "STATUS_CODE_SYNCING_WITH_WARNINGS",
        "STATUS_CODE_HAS_ERRORS",
        "STATUS_CODE_SYNC_DISABLED",
        "STATUS_CODE_CLAIMED_BY_OTHERS",
        "STATUS_CODE_DOES_NOT_SUPPORT_SERVICE_AREA_BUSINESS",
        "STATUS_CODE_SUBMITTED",
        "STATUS_CODE_MANUAL_UPDATE_ONLY",
        "STATUS_CODE_NOT_FOUND"
      ],
      "default": "STATUS_CODE_UNKNOWN",
      "description": "This value comes from Yext or Uberall and indicates what state they believe the listing to be in. This\nis used in addition to AccuracyStatus, which is from our own scraped data, to determine the state of the\nlisting.\n\n - STATUS_CODE_UNKNOWN: Default value, should never be used intentionally\n - STATUS_CODE_SYNCED: Listing data was submitted to the source, and the source responded that the data is good and in use\n - STATUS_CODE_IN_PROGRESS: Information has been sent to Yext/Uberall, who are in the process of syncing the information to the event publisher.\n - STATUS_CODE_IGNORING_ERRORS: Source is syncing, but with some errors we don't handle\n - STATUS_CODE_SYNCING_WITH_WARNINGS: Some data is being synced with Yext/Uberall but not all. This may occur because data in a field may not meet\nthe publisher\u2019s requirements, or because the field may be locked on Yext/Uberall's end.\n - STATUS_CODE_HAS_ERRORS: There are problems with the data we submitted to the listing provider which is causing the sync process to fail\n - STATUS_CODE_SYNC_DISABLED: Syncing has been disabled as either: source is manually opt-out of sources, or\nthe source has violated Text/Uberal/GMB Terms of Service and is no longer available to the public\n - STATUS_CODE_CLAIMED_BY_OTHERS: Unable to submit the source's listing information as another service has claimed the listing\n - STATUS_CODE_DOES_NOT_SUPPORT_SERVICE_AREA_BUSINESS: Source is not syncing because the source requires an address\n - STATUS_CODE_SUBMITTED: Listing data was submitted to the source, the source does not indicate if the information was used\n - STATUS_CODE_MANUAL_UPDATE_ONLY: LD/LSP do not submit data to this source\n - STATUS_CODE_NOT_FOUND: Location not found (yet) on Yext or Uberall remote directory"
    },
    "v1SyncingStatus": {
      "type": "string",
      "enum": [
        "SYNCING_STATUS_UNSPECIFIED",
        "SYNCING_STATUS_SYNCING",
        "SYNCING_STATUS_COMPLETELY_SYNCED"
      ],
      "default": "SYNCING_STATUS_UNSPECIFIED",
      "title": "The status of an account's syncing with LSP. Options are currently 100% synced, or <100% synced"
    },
    "v1CheckForAdvantageUserResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "description": "Whether or not the caller identity has a fully-configured AdVantage user (see CheckForAdvantageUser)."
        }
      }
    },
    "v1GetAdvantageRedirectURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The url which will authenticate the user, and redirect them to the AdVantage platform."
        }
      }
    },
    "v1GetRedirectURLResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string",
          "title": "The url which will redirect the user to the matchcraft dashboard"
        }
      },
      "title": "GetRedirectURLResponse the matchcraft dashboard redirect url"
    },
    "v1ListReportingProductsResponse": {
      "type": "object",
      "properties": {
        "reportingProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReportingProduct"
          },
          "title": "A list of matchcraft reporting products"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "ListReportingProductsResponse message for a request that returns multiple matchcraft reporting products"
    },
    "v1ReportingProduct": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The id of the business"
        },
        "merchantId": {
          "type": "string",
          "title": "The id of the reporting product"
        },
        "descriptor": {
          "type": "string",
          "title": "The description of the reporting product"
        }
      },
      "title": "ReportingProduct is a matchcraft reporting product"
    },
    "GetMultiEventTypeResponseEventTypeContainer": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/v1EventType"
        }
      }
    },
    "HTTPContentType": {
      "type": "string",
      "enum": [
        "INVOKE_HTTP_CONTENT_TYPE_PROTOBUF",
        "INVOKE_HTTP_CONTENT_TYPE_JSON"
      ],
      "default": "INVOKE_HTTP_CONTENT_TYPE_PROTOBUF",
      "description": "Content type is used to describe how the receiver of an event wants their payload to be encoded.\n\n - INVOKE_HTTP_CONTENT_TYPE_PROTOBUF: If INVOKE_HTTP_CONTENT_TYPE_PROTOBUF is set, the HTTP request will be made with the application/protobuf header.\nThe content of the request will be a protobuf encoded message.\n - INVOKE_HTTP_CONTENT_TYPE_JSON: If INVOKE_HTTP_CONTENT_TYPE_JSON is set, the HTTP request will be made with the application/json header.\nThe content of the request will be a json string."
    },
    "InvokeHTTP": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "contentType": {
          "$ref": "#/definitions/HTTPContentType",
          "description": "Content type tells Event Broker how the receiver would like the event request encoded."
        }
      }
    },
    "InvokePubsubTopic": {
      "type": "object",
      "properties": {
        "gcpProject": {
          "type": "string",
          "title": "the name of the google cloud platform project that the topic lives in - ie \"repcore-prod\""
        },
        "topicName": {
          "type": "string",
          "title": "the name of the existing topic"
        }
      },
      "description": "PubSubTopic specifies a Cloud Pub/Sub topic to publish messages into. This is lower latency and more scalable than a HTTP invocation method.\nIf you provide the same topic to multiple subscriptions, you will receive messages for multiple Event-Broker subscriptions on a single Pub/Sub subscription and may need to use the delivery event metadata to correlate which subscription that event was delivered for."
    },
    "JoinTypeJoin": {
      "type": "object",
      "properties": {
        "eventTypeId": {
          "type": "string",
          "title": "The ID of the event to join with"
        },
        "on": {
          "$ref": "#/definitions/v1JoinNode",
          "title": "On specifies how to join the events"
        },
        "keepProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties to keep from the joining message. The key is the name of the property to keep, the value is it's\nname on the joined event. This allows for properties to be renamed if needed. If a property's new name collides\nwith an existing property on the event it will be overwritten by the joining value."
        },
        "as": {
          "type": "string",
          "description": "\"As\" is the name of the property the joining events should be nested under. This is required when a join\ncan result in multiple events."
        },
        "window": {
          "type": "string",
          "description": "Events may be emitted if the join can not be performed. However, if it's common for the joining event to be\nemitted in close proximity to the main event you may provide a window. Window describes how long Event Broker\nshould allow for the joining event to come in. If the window is reached, and there is no event to join with, the\nevent will be emitted."
        }
      }
    },
    "ReplaySubscriptionRequestTimeRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "Events should be emitted if they happened after this timestamp."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "Events should be emitted if they happened before this timestamp."
        }
      }
    },
    "eventbrokerv1Property": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        }
      }
    },
    "v1BooleanOperator": {
      "type": "string",
      "enum": [
        "BOOLEAN_OPERATOR_AND",
        "BOOLEAN_OPERATOR_OR"
      ],
      "default": "BOOLEAN_OPERATOR_AND"
    },
    "v1CreateSubscriptionRequestFilter": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "title": "An equality map of key->val where each clause is ANDd together\nDeprecated: use \"where\" instead"
        },
        "where": {
          "$ref": "#/definitions/v1FilterNode",
          "description": "Where provides a way of limiting events that take part in the subscription."
        }
      }
    },
    "v1EventType": {
      "type": "string",
      "enum": [
        "EMPTY",
        "PROCESSED",
        "DELIVERED",
        "OPENED",
        "CLICKED",
        "BOUNCED",
        "DEFERRED",
        "DROPPED",
        "SPAMREPORT",
        "UNSUBSCRIBED",
        "RESUBSCRIBED"
      ],
      "default": "EMPTY"
    },
    "v1FilterNode": {
      "type": "object",
      "properties": {
        "equal": {
          "$ref": "#/definitions/v1PropertyValue",
          "description": "Validates that a property on the Event matches a specific value."
        },
        "operator": {
          "$ref": "#/definitions/v1Operator",
          "description": "Combines multiple operations with AND or OR operators."
        },
        "not": {
          "$ref": "#/definitions/v1FilterNode",
          "description": "Not returns the opposite boolean value of the operator provided."
        },
        "missing": {
          "$ref": "#/definitions/eventbrokerv1Property",
          "description": "Filters events which are missing a specific property. This will not filter out events which have the\nproperty set to a null value. The \"null\" operator can be used to filter for properties which have null\nvalues."
        },
        "null": {
          "$ref": "#/definitions/eventbrokerv1Property",
          "description": "The Subscriber would receive events which have the specified property set to the null value. This will also\ninclude events that are missing the property entirely. This will not match to values that are present but\nset to the zero value, use \"empty\" for that."
        },
        "subset": {
          "$ref": "#/definitions/v1PropertyValue",
          "description": "Events may include repeated values for a specific property. It may be useful to receive events which have\na property in the list.\n\nFor example, an event might have some attributes describing a category that looks like:\n['Automotive', 'Car Dealers', 'Auto Repair']\n\nSubscribers may only care about Auto Repair. In this case they can provide \"Auto Repair\" as the value to\nonly receive those events. If the Subscriber only wants events with \"Auto Repair\" and \"Car Dealers\"\nthe value can be defined as ['Auto Repair', 'Car Dealers']. If you wish to receive events where it's\n\"Auto Repair\" OR \"Car Dealers\", you may use two subset operation and join them with an OR operator.\n\nOrder does not matter when checking if a list is a subset of an event's repeated property."
        },
        "zero": {
          "$ref": "#/definitions/eventbrokerv1Property",
          "description": "The Subscriber would recieve events that have the specified property set to the zero value for the fields type. \nThis will not match to properties which are missing entirely, use \"missing\" or \"null\" for that."
        }
      }
    },
    "v1GetMultiEventTypeResponse": {
      "type": "object",
      "properties": {
        "eventTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiEventTypeResponseEventTypeContainer"
          },
          "description": "The event types, returned in the position they were requested. Missing event types will be null."
        }
      }
    },
    "v1GetSubscriptionResponse": {
      "type": "object",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/v1Subscription",
          "title": "Google Subscription entity"
        }
      },
      "title": "A response to get a Google Workspace Customer's google subscription"
    },
    "v1Invoke": {
      "type": "object",
      "properties": {
        "http": {
          "$ref": "#/definitions/InvokeHTTP"
        },
        "pubsub": {
          "$ref": "#/definitions/InvokePubsubTopic"
        }
      },
      "description": "Invoke describes the how to route a subscriptions payload."
    },
    "v1JoinNode": {
      "type": "object",
      "properties": {
        "equal": {
          "$ref": "#/definitions/v1PropertyValue",
          "description": "DEPRECATED: Use equal_property\nTrue if the name property on the Event matches the value of the property named in PropertyValue.\n\nFor example, a PropertyValue of {property: \"user_id\", value: {stringValue: \"uid\"}} means that this will join\nthe property named \"user_id\" on the source event to the property named \"uid\" on the joined event,\nnot to events with literal values of \"uid\" on properties named \"user_id\"."
        },
        "and": {
          "$ref": "#/definitions/v1JoinOperator",
          "description": "Combines multiple clauses with AND operators."
        },
        "equalProperty": {
          "$ref": "#/definitions/v1PropertyMapping",
          "description": "True if the value of the named property on the Event matches the value of the other named property.\n\nFor example, a PropertyMapping of {left_property: \"user_id\", right_property: \"uid\"} means that this will join\nthe property named \"user_id\" on the source event to the property named \"uid\" on the joined event."
        },
        "equalLiteral": {
          "$ref": "#/definitions/v1PropertyValue",
          "description": "For example, a PropertyMapping of {property: \"uid\", value: {stringValue: \"U-123\"}} means that this will join\nthe source event on to events where the value of \"uid\" is exactly the string \"U-123\".",
          "title": "True if the value of the named property on the Event matches the literal value of the property named by PropertyValueMapping.right_property_value"
        }
      }
    },
    "v1JoinOperator": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1JoinNode"
          }
        }
      }
    },
    "v1JoinType": {
      "type": "object",
      "properties": {
        "leftJoin": {
          "$ref": "#/definitions/JoinTypeJoin",
          "description": "Left join will attempt to join an event with another. If no event exists to join with, you will still receive an\nevent. However, the \"keep_properties\" will be omitted."
        }
      }
    },
    "v1ListEventTypesResponse": {
      "type": "object",
      "properties": {
        "eventTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EventType"
          },
          "title": "A page of event types"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1Operator": {
      "type": "string",
      "enum": [
        "OPERATOR_INVALID",
        "OPERATOR_AND",
        "OPERATOR_OR"
      ],
      "default": "OPERATOR_INVALID",
      "title": "The operation to be applied to all child elements in a node"
    },
    "v1PropertyMapping": {
      "type": "object",
      "properties": {
        "leftProperty": {
          "type": "string"
        },
        "rightProperty": {
          "type": "string"
        }
      }
    },
    "v1PropertyValue": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        },
        "value": {}
      }
    },
    "v1ReplaceSubscriptionRequestFilter": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "title": "An equality map of key->val where each clause is ANDd together\nDeprecated: use \"where\" instead"
        },
        "where": {
          "$ref": "#/definitions/v1FilterNode",
          "description": "Where provides a way of limiting events that take part in the subscription."
        }
      }
    },
    "v1ReplaySubscriptionResponse": {
      "type": "object",
      "properties": {
        "statusUrl": {
          "type": "string",
          "title": "Visit this URL to see the status of your replay"
        }
      }
    },
    "v1RetryConfig": {
      "type": "object",
      "properties": {
        "maxAttempts": {
          "type": "string",
          "format": "int64",
          "description": "The max number of times Event Broker will try to deliver a message to a subscription.\nThis must be >= -1. -1 indicates unlimited retries."
        },
        "maxRetryDuration": {
          "type": "string",
          "description": "max_retry_duration specifies the time limit for retrying a failed event.\nOnce the time limit has passed and an attempt to deliver the event has been made\nno further attempts will be made.\n\nIf the duration is zero, the event will retry indefinitely."
        },
        "minBackoff": {
          "type": "string",
          "description": "If an event delivery fails, it will retry between the min_backoff\ntime and the max_backoff time. If the min_backoff time is not set,\nthe default time of 100ms will be used."
        },
        "maxBackoff": {
          "type": "string",
          "description": "If an event delivery fails, it will retry between the min_backoff\ntime and the max_backoff time. If the max_backoff time is not set,\nthe default time of 5 minutes will be used."
        },
        "maxDoublings": {
          "type": "string",
          "format": "int64",
          "description": "When a task is retrying it will start at the min_backoff time then double max_doublings times, then increase\nlinearly until the max_backoff time is reached.\n\nGoogle's Example from Cloud Tasks is as follows:\nIf the min_backoff time is 10s, min_backoff is 300s, and max_doublings is 3 then the first retry will happen at\n10 seconds. The next 3 retries will be doubled then increase linearly by 2^3 * 10s. The retries will look like:\n10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, ...\n\nThe default is 16.",
          "title": "The time between retries will double max_doublings times"
        }
      }
    },
    "v1Subscription": {
      "type": "object",
      "properties": {
        "skuId": {
          "type": "string",
          "title": "Unique system identifier google uses for a product's sku"
        },
        "skuName": {
          "type": "string",
          "title": "The product sku name"
        },
        "subscriptionId": {
          "type": "string",
          "title": "The ID linked to the Google Workspace Customer's subscriptions"
        },
        "plan": {
          "$ref": "#/definitions/SubscriptionPlan",
          "title": "The Google Workspace plan for a subscription"
        },
        "seats": {
          "$ref": "#/definitions/v1Seats",
          "title": "Seats model for a Google Workspace subscription"
        },
        "transferInfo": {
          "$ref": "#/definitions/SubscriptionTransferInfo",
          "title": "TransferInfo model for a Google Workspace subscription"
        }
      },
      "title": "Subscription entity. See Google documentation for further details.\nhttps://developers.google.com/admin-sdk/reseller/v1/reference/subscriptions"
    },
    "vendastatypesPropertyType": {
      "type": "string",
      "enum": [
        "PROPERTY_TYPE_STRING",
        "PROPERTY_TYPE_INT64",
        "PROPERTY_TYPE_DOUBLE",
        "PROPERTY_TYPE_BOOL",
        "PROPERTY_TYPE_TIMESTAMP",
        "PROPERTY_TYPE_GEOPOINT",
        "PROPERTY_TYPE_STRUCT",
        "PROPERTY_TYPE_BYTES"
      ],
      "default": "PROPERTY_TYPE_STRING"
    },
    "StatRateUnit": {
      "type": "string",
      "enum": [
        "STAT_RATE_UNIT_UNSET",
        "STAT_RATE_UNIT_INVALID",
        "STAT_RATE_UNIT_DAY",
        "STAT_RATE_UNIT_WEEK",
        "STAT_RATE_UNIT_MONTH",
        "STAT_RATE_UNIT_THREE_MONTHS"
      ],
      "default": "STAT_RATE_UNIT_UNSET"
    },
    "missioncontrolv1Application": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "unique identifier for the application (example: account-group)"
        },
        "appName": {
          "type": "string",
          "title": "human readable name for the application (example: Account Group)"
        },
        "githubRepoUrl": {
          "type": "string",
          "title": "The Github Repository URL (example: https://github.com/vendasta/account-group)"
        }
      }
    },
    "missioncontrolv1Environment": {
      "type": "string",
      "enum": [
        "Test",
        "Demo",
        "Prod"
      ],
      "default": "Test",
      "description": "Environment represents a mission control environment that segments an application into test, demo, and production."
    },
    "missioncontrolv1GetZonesResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "missioncontrolv1GitCommitDetails": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/missioncontrolv1GithubCommitUser",
          "title": "The user who created the content"
        },
        "committer": {
          "$ref": "#/definitions/missioncontrolv1GithubCommitUser",
          "title": "The user who committed the content"
        },
        "message": {
          "type": "string",
          "title": "the content of the git commit message"
        }
      },
      "title": "The details of the git commit (if any)"
    },
    "missioncontrolv1GithubCommitUser": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "Details about the user who committed/authored a specific git commit."
    },
    "missioncontrolv1ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/missioncontrolv1Application"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/missioncontrolv1PagedResponseMetadata"
        }
      },
      "title": "Response message for MissionControl.ListApplications"
    },
    "missioncontrolv1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "description": "Metadata for paging through a list/search endpoint."
    },
    "missioncontrolv1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "description": "Metadata for paging through a list/search endpoint."
    },
    "missioncontrolv2Application": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "unique identifier for the application (example: partner-center-client)"
        },
        "appName": {
          "type": "string",
          "title": "human readable name for the application (example: Partner Center Client)"
        },
        "appType": {
          "$ref": "#/definitions/v2AppType",
          "title": "Type of application eg. Vstatic, GoogleAppEngine, GoogleKubernetesEngine etc"
        },
        "githubRepoUrl": {
          "type": "string",
          "title": "The Github Repository URL (example: https://github.com/vendasta/IAM)"
        },
        "entryUrlTemplate": {
          "type": "string",
          "title": "DEPRECATED: Use the entry url template in the app config"
        },
        "prodConfig": {
          "$ref": "#/definitions/v2AppConfig",
          "title": "Application configuration used for the production environment"
        },
        "demoConfig": {
          "$ref": "#/definitions/v2AppConfig",
          "title": "Application configuration used for the demo environment"
        },
        "googleRepoName": {
          "type": "string",
          "title": "The name of the source.cloud.google.com/repos for this project, ex. github-vendasta-mission-control"
        },
        "invalidConfigurationError": {
          "type": "string",
          "title": "Provides details about an invalid missioncontrol.yaml file"
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Alert"
          },
          "title": "Provides alerts about an application (for example, things to look out for after deploying, etc)"
        },
        "appRoot": {
          "type": "string",
          "description": "If your application is not in the root of the repo, set this to the path. Ex: 'server', or 'sdks/go'."
        },
        "defaultBranch": {
          "type": "string",
          "description": "If your appplication does not use master as the default branch, set this, otherwise master is assumed."
        }
      },
      "title": "Application represents a piece of software that can have only a single delivered artifact at any given time.\nFor example: the Partner Center has a single vStatic application called `partner-center-client`"
    },
    "missioncontrolv2Environment": {
      "type": "string",
      "enum": [
        "ENVIRONMENT_TEST",
        "ENVIRONMENT_DEMO",
        "ENVIRONMENT_PROD",
        "ENVIRONMENT_UNSET",
        "ENVIRONMENT_INVALID"
      ],
      "default": "ENVIRONMENT_TEST",
      "description": "Environment represents an environment that segments an application into demo and production deliveries."
    },
    "missioncontrolv2GetZonesResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "missioncontrolv2GitCommitDetails": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/missioncontrolv2GithubCommitUser",
          "title": "The user who created the content"
        },
        "committer": {
          "$ref": "#/definitions/missioncontrolv2GithubCommitUser",
          "title": "The user who committed the content"
        },
        "message": {
          "type": "string",
          "title": "the content of the git commit message"
        }
      },
      "title": "The details of the git commit (if any)"
    },
    "missioncontrolv2GithubCommitUser": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "Details about the user who committed/authored a specific git commit."
    },
    "missioncontrolv2ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/missioncontrolv2Application"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/missioncontrolv2PagedResponseMetadata"
        }
      },
      "title": "Response message for MissionControl.ListApplications"
    },
    "missioncontrolv2PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "A cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "Specifies the number of items to return in the next page"
        }
      },
      "title": "Provides options for the paged request"
    },
    "missioncontrolv2PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1ClientKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the key"
        },
        "key": {
          "type": "string",
          "title": "Public key"
        }
      }
    },
    "v1CreateServiceAccountClientKeyResponse": {
      "type": "object",
      "properties": {
        "privateKey": {
          "type": "string",
          "description": "The matching private key for the public key generated by IAM. This key is not stored by IAM and can not be retrieved again."
        },
        "keyId": {
          "type": "string",
          "description": "The identifier of the matching public key."
        }
      },
      "title": "Response message for MissionControlServiceAccount.v1.CreateServiceAccountClientKey"
    },
    "v1CreateServiceAccountResponse": {
      "type": "object",
      "properties": {
        "serviceAccountId": {
          "type": "string"
        }
      },
      "title": "Response message for MissionControlServiceAccount.v1.CreateServiceAccount"
    },
    "v1CurrentImage": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/v1Image"
        },
        "zone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetCurrentImageResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CurrentImage"
          }
        }
      }
    },
    "v1GetServiceAccountResponse": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "$ref": "#/definitions/v1ServiceAccount",
          "description": "The service account."
        }
      },
      "title": "Response message for MissionControlServiceAccount.v1.GetServiceAccount"
    },
    "v1Image": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string"
        }
      }
    },
    "v1ListImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Image"
          }
        }
      },
      "title": "Response message for MissionControl.ListImages"
    },
    "v1OrderByDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING",
      "title": "Indicates the sort order for IAM.SearchSubject"
    },
    "v1SearchServiceAccountsResponse": {
      "type": "object",
      "properties": {
        "serviceAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceAccount"
          },
          "description": "A list of service accounts."
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the\nthe next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total results found"
        }
      },
      "title": "Response message for MissionControlServiceAccount.v1.SearchServiceAccounts"
    },
    "v1ServiceAccount": {
      "type": "object",
      "properties": {
        "serviceAccountId": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Email of the service account."
        },
        "keyIds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ClientKey"
          },
          "description": "Associated client keys."
        }
      },
      "title": "Representation of a Vendasta Service account"
    },
    "v2Alert": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v2AlertType"
        }
      },
      "title": "For providing alerts about an application (for example, things to look out for after deploying, etc)"
    },
    "v2AlertType": {
      "type": "string",
      "enum": [
        "ALERT_TYPE_NOT_SET",
        "ALERT_TYPE_INFO",
        "ALERT_TYPE_WARNING",
        "ALERT_TYPE_DANGER"
      ],
      "default": "ALERT_TYPE_NOT_SET"
    },
    "v2AppConfig": {
      "type": "object",
      "properties": {
        "appengineProjectId": {
          "type": "string",
          "title": "The appengine project ID for this App (APP_TYPE_GAE)"
        },
        "entryUrlTemplate": {
          "type": "string",
          "description": "A entry url to the application which contains the string <deployment>.\nThis will be used to create a deployment view link in mission control,\nand <deployment> will be replaced with the specific deployment id."
        },
        "deliveryMethods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DeliveryMethod"
          },
          "title": "The methods by which this application can be delivered"
        }
      }
    },
    "v2AppType": {
      "type": "string",
      "enum": [
        "APP_TYPE_NOT_SET",
        "APP_TYPE_VSTATIC",
        "APP_TYPE_GAE",
        "APP_TYPE_GKE",
        "APP_TYPE_NPM",
        "APP_TYPE_CLOUDBUILD"
      ],
      "default": "APP_TYPE_NOT_SET"
    },
    "v2ApplicationLink": {
      "type": "object",
      "properties": {
        "buttonText": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "collapsed": {
          "type": "boolean"
        }
      }
    },
    "v2Artifacts": {
      "type": "object",
      "properties": {
        "gcsBucket": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "title": "Code artifacts used for an application deployment"
    },
    "v2BuildStatus": {
      "type": "string",
      "enum": [
        "BUILD_STATUS_UNKNOWN",
        "BUILD_STATUS_SUCCESS",
        "BUILD_STATUS_FAILED"
      ],
      "default": "BUILD_STATUS_UNKNOWN",
      "title": "BuildStatus represents the status of a build"
    },
    "v2ChangeFailData": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "timeRange": {
          "$ref": "#/definitions/v2TimeRange"
        },
        "current": {
          "type": "number",
          "format": "double",
          "description": "The change fail data for 'current' period of time (e.g. current last 90 days)."
        },
        "previous": {
          "type": "number",
          "format": "double",
          "description": "The change fail data for 'previous' period of time (e.g. previous last 90 days)."
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment"
        }
      },
      "description": "ChangeFailData represents the change fail statistics for a period of time (e.g. last 90 days)."
    },
    "v2ChangeFailGetMultiResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ChangeFailData"
          }
        }
      },
      "description": "ChangeFailGetMultiResponse is the response body of getting change fail data for multiple apps."
    },
    "v2CreateDeliveryResponse": {
      "type": "object",
      "properties": {
        "deliveryId": {
          "type": "string",
          "title": "The ID of the delivery"
        }
      },
      "title": "Response message for MissionControl.CreateDelivery"
    },
    "v2CreateDeploymentResponse": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "title": "The unique identifier for the created deployment"
        }
      },
      "title": "Response message for MissionControl.CreateDeployment"
    },
    "v2Delivery": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The ID of the application the delivery is for"
        },
        "deploymentId": {
          "type": "string",
          "title": "The ID of the deployment being used for this delivery"
        },
        "deliveryId": {
          "type": "string",
          "title": "The unique id for the delivery"
        },
        "deliveryType": {
          "$ref": "#/definitions/v2DeliveryType",
          "title": "The type of delivery"
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment",
          "description": "The environment this delivery is for."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the delivery was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the delivery was last updated"
        },
        "userEmail": {
          "type": "string",
          "title": "The email of the user who created this delivery"
        },
        "zone": {
          "type": "string",
          "title": "The name of the zone to deliver to (Only specify if Zone delivery type)\nDEPRECATED: Zone should now be provided with the specified Delivery Method"
        },
        "deliveryMethodId": {
          "type": "string",
          "title": "The id of the delivery method this delivery should use"
        },
        "lock": {
          "$ref": "#/definitions/v2DeliveryLock",
          "title": "Lock for the delivery (optional)"
        },
        "automated": {
          "type": "boolean",
          "title": "Delivery was initiated automatically. This is normally true for deliveries triggered by pipeline"
        },
        "message": {
          "type": "string",
          "title": "The message that the delivery creator leaves to provide context on the delivery. ie. rollback reason"
        },
        "isRollback": {
          "type": "boolean",
          "description": "A bool to indicate whether this delivery is a rollback."
        },
        "buildId": {
          "type": "string",
          "description": "The build ID used to create the deployment. This can be provided to a create delivery request as an alternative to the deployment ID."
        }
      },
      "title": "The delivery is the action of a setting a deployment for an application"
    },
    "v2DeliveryLock": {
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string",
          "title": "The email of the user that is locking delivery for this type"
        },
        "message": {
          "type": "string",
          "title": "Message as to why delivery needs to be locked"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the lock was created"
        }
      }
    },
    "v2DeliveryMethod": {
      "type": "object",
      "properties": {
        "deliveryMethodId": {
          "type": "string",
          "title": "Identifier for this delivery method"
        },
        "deliveryType": {
          "$ref": "#/definitions/v2DeliveryType",
          "description": "The type of deliverer to handle deliveries with this method."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Extra arguments passed to the deliverer when creating a new delivery with this method"
        },
        "description": {
          "type": "string",
          "title": "descripton of this method of delivery (Optional)"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Zone for delivery (Optional)"
        },
        "weight": {
          "type": "string",
          "title": "Weight (Optional)"
        }
      }
    },
    "v2DeliveryType": {
      "type": "string",
      "enum": [
        "DELIVERY_TYPE_DEFAULT",
        "DELIVERY_TYPE_ZONE"
      ],
      "default": "DELIVERY_TYPE_DEFAULT"
    },
    "v2Deployment": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The application ID"
        },
        "deploymentId": {
          "type": "string",
          "title": "(Ouput Only) The ID of the deployment"
        },
        "gitHash": {
          "type": "string",
          "title": "if applicable, the git hash of this deployment\nif the deployment contains a \"range\" of commits this would be the ending hash"
        },
        "artifacts": {
          "$ref": "#/definitions/v2Artifacts",
          "description": "The arficacts to be served for this application."
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment",
          "description": "Environment to scope this deployment to."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Output only - Time the deployment was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Output only - Time the deployment was last updated"
        },
        "buildId": {
          "type": "string",
          "title": "Optional - Google Cloud Builder ID that built and published this deployment"
        },
        "gitCommitDetails": {
          "$ref": "#/definitions/missioncontrolv2GitCommitDetails",
          "title": "Output only - Details about the provided git_hash"
        },
        "author": {
          "type": "string",
          "title": "Output only - The creator of the deployment"
        },
        "name": {
          "type": "string",
          "description": "If deploying a custom artifact, a name is required."
        },
        "branchName": {
          "type": "string",
          "title": "If applicable, the git branch name of this deployment"
        },
        "status": {
          "$ref": "#/definitions/v2DeploymentStatus",
          "title": "The status of the deployment"
        },
        "statusDescription": {
          "type": "string",
          "title": "An optional description of why the deployment is in the current status"
        },
        "gitHashBase": {
          "type": "string",
          "title": "Optional The git_hash of the base hash included in this deployment\nif the deployment contains a \"range\" of commits this would be the starting hash"
        },
        "additionalGitCommitDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/missioncontrolv2GitCommitDetails"
          },
          "title": "Output only - Additional Details about the provided commits"
        },
        "k8sConfig": {
          "$ref": "#/definitions/v2K8SConfig",
          "title": "Output only - Details about the kubernetes specific details of this deployment"
        }
      },
      "description": "Deployment represents an immutable artifact that can be delivered to the end user."
    },
    "v2DeploymentFrequencyData": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment"
        },
        "rate": {
          "$ref": "#/definitions/v2StatRate",
          "title": "The average rate over time of the deployment frequency for this application"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2StatSnapshot"
          },
          "description": "stats is a list of snapshots of a stat over time."
        }
      },
      "description": "DeployFrequency provides a gauge for the current rate of the stat, i.e. 5/day, as well as a graphable stat over time,\na repeated set of dates and values, that can be plugged into a graph or sparkline."
    },
    "v2DeploymentFrequencyGetMultiResponse": {
      "type": "object",
      "properties": {
        "deploymentFrequencies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DeploymentFrequencyData"
          }
        }
      },
      "description": "DeploymentFrequencyGetMultiResponse is the response body of getting deployment frequency data for multiple apps."
    },
    "v2DeploymentStatus": {
      "type": "string",
      "enum": [
        "DEPLOYMENT_STATUS_UNKNOWN",
        "DEPLOYMENT_STATUS_GOOD",
        "DEPLOYMENT_STATUS_BAD"
      ],
      "default": "DEPLOYMENT_STATUS_UNKNOWN"
    },
    "v2Event": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment"
        },
        "eventType": {
          "$ref": "#/definitions/v2EventType"
        },
        "eventId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "buildId": {
          "type": "string",
          "title": "Optional - Google Cloud Builder ID that built and published this deployment"
        },
        "automated": {
          "type": "boolean",
          "title": "Event created from an automatic process. This is normally true for deliveries and rollbacks triggered by pipeline"
        },
        "probableAppType": {
          "$ref": "#/definitions/v2AppType",
          "description": "The most likely type of the app that was built. This is determined based on the first step of the build so it's\nnot a guarantee, but it is most likely to be accurate."
        },
        "triggerName": {
          "type": "string",
          "title": "Name of the trigger that caused the build. May be empty"
        },
        "buildLogUrl": {
          "type": "string",
          "title": "Link to the build logs for the event"
        }
      }
    },
    "v2EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_NOT_SET",
        "EVENT_TYPE_BUILD",
        "EVENT_TYPE_DEPLOYMENT",
        "EVENT_TYPE_DELIVERY",
        "EVENT_TYPE_ROLLBACK",
        "EVENT_TYPE_LOCK"
      ],
      "default": "EVENT_TYPE_NOT_SET"
    },
    "v2GetApplicationLinksResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ApplicationLink"
          }
        }
      }
    },
    "v2GetSecurityVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2SecurityVulnerability"
          }
        }
      }
    },
    "v2GetUserSettingsResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v2UserSettings"
        }
      }
    },
    "v2GetUserSettingsResponseV2": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v2UserSettingsV2"
        }
      }
    },
    "v2K8SConfig": {
      "type": "object",
      "properties": {
        "clusterContext": {
          "type": "string",
          "title": "k8s context for this deployment - ie which cluster context should be used to deliver this commit"
        },
        "controller": {
          "$ref": "#/definitions/v2KubernetesController",
          "description": "How should this deployment's pods be managed? By default we use a Deployment."
        }
      },
      "title": "Details about the kubernetes specific details of a deployment"
    },
    "v2KubernetesController": {
      "type": "string",
      "enum": [
        "KUBERNETES_CONTROLLER_DEPLOYMENT",
        "KUBERNETES_CONTROLLER_ARGOROLLOUT"
      ],
      "default": "KUBERNETES_CONTROLLER_DEPLOYMENT"
    },
    "v2LeadTime": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "A unique identifier for this LeadTime. It is a string consisting of \"<app_id>|<issue_id>\""
        },
        "appId": {
          "type": "string",
          "title": "The app id this LeadTime is for, i.e. \"mission-control\""
        },
        "deliveryIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of delivery ids that were involved in this lead time. One deployment id can be delivered multiple times,\nso there may be many more delivery ids than deployment ids."
        },
        "deploymentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A deployment id links with a commit to git, and can be delivered to many zones."
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment",
          "title": "Environment will almost always be ENVIRONMENT_PROD"
        },
        "issueId": {
          "type": "string",
          "description": "The issue id associated with this lead time. Can be looked up in our current issue tracker (hopefully) for\nadditional context."
        },
        "duration": {
          "type": "string",
          "format": "int64",
          "description": "The amount of milliseconds of lead time there was for this issue."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "When the LeadTime was first created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the LeadTime was last updated."
        }
      },
      "description": "LeadTime represents the amount of time it took (duration, in ms) for the issue in question (issue_id) to go from\nits first commit to its latest deployment to production. The list of deployment_ids could be used in conjunction with\nthe app_id to see which deployments they link to."
    },
    "v2LeadTimeGetMultiResponse": {
      "type": "object",
      "properties": {
        "summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LeadTimeSummary"
          }
        }
      },
      "description": "LeadTimeGetMultiResponse is the response body of getting lead time data for multiple apps."
    },
    "v2LeadTimeListResponse": {
      "type": "object",
      "properties": {
        "leadTimes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LeadTime"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/missioncontrolv2PagedResponseMetadata"
        }
      },
      "title": "LeadTimeListResponse lists lead times requested and options for how to get more (if there are indeed more)"
    },
    "v2LeadTimeSummary": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "timeRange": {
          "$ref": "#/definitions/v2TimeRange"
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment"
        },
        "current": {
          "type": "number",
          "format": "double",
          "description": "The lead time data for 'current' period of time (e.g. current last 90 days).\nThe unit is Milliseconds."
        },
        "previous": {
          "type": "number",
          "format": "double",
          "description": "The lead time data for 'previous' period of time (e.g. previous last 90 days).\nThe unit is Milliseconds."
        }
      },
      "description": "LeadTimeSummary represents the lead time summary for an app for a period of time."
    },
    "v2ListDeliveriesResponse": {
      "type": "object",
      "properties": {
        "deliveries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Delivery"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/missioncontrolv2PagedResponseMetadata"
        }
      },
      "title": "Response message for MissionControl.ListDeliveries"
    },
    "v2ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Deployment"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/missioncontrolv2PagedResponseMetadata"
        }
      },
      "title": "Response message for MissionControl.ListDeployments"
    },
    "v2ListEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Event"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/missioncontrolv2PagedResponseMetadata"
        }
      }
    },
    "v2MTTRData": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "timeRange": {
          "$ref": "#/definitions/v2TimeRange"
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment"
        },
        "current": {
          "type": "number",
          "format": "double",
          "description": "Mean time to restore stats for 'current' period of time (e.g. current last 90 days)."
        },
        "previous": {
          "type": "number",
          "format": "double",
          "description": "Mean time to restore stats for 'previous' period of time (e.g. previous last 90 days)."
        }
      },
      "description": "MTTRData represents mean time to restore stats for a period of time (e.g. last 90 days)."
    },
    "v2MTTRGetMultiResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2MTTRData"
          }
        }
      },
      "description": "MTTRGetMultiResponse is the response body of getting mean time to restore stats for multiple apps."
    },
    "v2SecurityVulnerability": {
      "type": "object",
      "properties": {
        "severity": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mitigation": {
          "type": "string"
        }
      }
    },
    "v2ServiceLevel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "githubRepoUrl": {
          "type": "string",
          "title": "The github repo for this service"
        },
        "platform": {
          "type": "string",
          "title": "The platform this service runs on"
        },
        "language": {
          "type": "string",
          "title": "The language the service is written in"
        },
        "availability": {
          "type": "number",
          "format": "double",
          "title": "The availability target (SLO) for this service"
        },
        "readiness": {
          "$ref": "#/definitions/v2ServiceReadiness",
          "title": "The readiness status of the service"
        },
        "owner": {
          "type": "string",
          "title": "Team that owns/maintains the service"
        },
        "hardDependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of dependencies of the service (transitive dependency)"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2ServiceLevelsResponse": {
      "type": "object",
      "properties": {
        "serviceLevels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ServiceLevel"
          }
        }
      }
    },
    "v2ServiceReadiness": {
      "type": "string",
      "enum": [
        "SERVICE_READINESS_GENERAL",
        "SERVICE_READINESS_PROTOTYPE",
        "SERVICE_READINESS_DEPRECATED",
        "SERVICE_READINESS_SUNSET"
      ],
      "default": "SERVICE_READINESS_GENERAL"
    },
    "v2StatRate": {
      "type": "object",
      "properties": {
        "statsPerUnit": {
          "type": "number",
          "format": "double",
          "description": "Number of stats that occurred during the unit period of time."
        },
        "unit": {
          "$ref": "#/definitions/StatRateUnit"
        }
      },
      "description": "Represents a rate of some particular stat. Final composed version would be 4.6666/day, 5/month, 3/quarter, etc."
    },
    "v2StatSnapshot": {
      "type": "object",
      "properties": {
        "statDate": {
          "type": "string",
          "format": "date-time"
        },
        "statValue": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "StatSnapshot is a stat's value at a moment in time. E.g. it was 5 on October 31st, 2019.\n{\n \"stat_date\": \"2019-10-31T00:00:00Z\"\n \"stat_value\": 5,\n}"
    },
    "v2TimeRange": {
      "type": "string",
      "enum": [
        "TIME_RANGE_UNSET",
        "TIME_RANGE_INVALID",
        "TIME_RANGE_LAST_30_DAYS",
        "TIME_RANGE_LAST_60_DAYS",
        "TIME_RANGE_LAST_90_DAYS"
      ],
      "default": "TIME_RANGE_UNSET",
      "description": "TimeRange defines time ranges used in app metrics."
    },
    "v2UpdateDeploymentResponse": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "title": "The unique identifier for the created deployment"
        }
      },
      "title": "Response message for MissionControl.UpdateDeployment"
    },
    "v2UserDeployFrequencyData": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/missioncontrolv2Environment"
        },
        "rate": {
          "$ref": "#/definitions/v2StatRate",
          "title": "The average rate over time of the deployment frequency for this application"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2StatSnapshot"
          },
          "description": "stats is a list of snapshots of a stat over time."
        }
      },
      "description": "UserDeployFrequencyData provides a gauge for the current rate of the stat for a user (developer),\ni.e. 5/day, as well as a graphable stat over time,\na repeated set of dates and values, that can be plugged into a graph or sparkline."
    },
    "v2UserDeployFrequencyGetMultiResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2UserDeployFrequencyData"
          }
        }
      },
      "description": "UserDeployFrequencyGetMultiResponse is the response body of getting deployment frequency data for multiple users."
    },
    "v2UserNotifications": {
      "type": "object",
      "properties": {
        "buildSuccessSlackOptOut": {
          "type": "boolean"
        },
        "buildFailureSlackOptOut": {
          "type": "boolean"
        }
      }
    },
    "v2UserNotificationsV2": {
      "type": "object",
      "properties": {
        "buildSuccessSlackOptOut": {
          "type": "boolean"
        },
        "buildFailureSlackOptOut": {
          "type": "boolean"
        }
      }
    },
    "v2UserSettings": {
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string"
        },
        "favoritedApps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notifications": {
          "$ref": "#/definitions/v2UserNotifications"
        },
        "alternateEmail": {
          "type": "string",
          "title": "An alternate email that we should use to try and tie settings to a user"
        }
      }
    },
    "v2UserSettingsV2": {
      "type": "object",
      "properties": {
        "iamUserId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "favoritedApps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notifications": {
          "$ref": "#/definitions/v2UserNotificationsV2"
        },
        "alternateEmail": {
          "type": "string",
          "title": "An alternate email that we should use to try and tie settings to a user"
        }
      }
    },
    "googleanalyticsv1CollectRecordsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The succuess/fail response"
    },
    "googleanalyticsv1DeleteViewResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response when deleting a view"
    },
    "googleanalyticsv1GetAvailableGAViewsResponse": {
      "type": "object",
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GAView"
          },
          "title": "GAView object to which this user has access"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor for the next page of results, will be empty if no subsequent pages"
        }
      },
      "title": "List of views available to the connected Google Analytics account"
    },
    "googleanalyticsv1GetViewResponse": {
      "type": "object",
      "properties": {
        "view": {
          "$ref": "#/definitions/googleanalyticsv1View",
          "title": "The view struct returned"
        }
      }
    },
    "googleanalyticsv1SetViewResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response when setting a view"
    },
    "googleanalyticsv1View": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID the view is associated with"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID the view is associated with (aka the account group ID)"
        },
        "googleUserId": {
          "type": "string",
          "title": "The Google User ID associated with the view.  This is how we link the view to an Oauth Token"
        },
        "gaAccountName": {
          "type": "string",
          "title": "The Google Analytics Account name"
        },
        "gaAccountId": {
          "type": "string",
          "title": "The Google Analytics account ID"
        },
        "gaWebPropertyName": {
          "type": "string",
          "title": "The Google Analytics Web Property Name"
        },
        "gaWebPropertyId": {
          "type": "string",
          "title": "The Google Analytics Web Property ID"
        },
        "gaViewId": {
          "type": "string",
          "title": "The Google Analytics view ID"
        },
        "gaViewName": {
          "type": "string",
          "title": "The Google Analytics view name"
        },
        "gaUserName": {
          "type": "string",
          "title": "The Username associated with the Google Analytics account"
        },
        "subjectFirstName": {
          "type": "string",
          "title": "The user's first name"
        },
        "subjectLastName": {
          "type": "string",
          "title": "the user's last name"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the view was first created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The last time a view was updated"
        },
        "isBroken": {
          "type": "boolean",
          "title": "A flag to show whether or not the view is working properly"
        },
        "initialCollectionRunning": {
          "type": "boolean",
          "title": "A flag to show whether or not the initial collection is still running"
        }
      }
    },
    "googleanalyticsv2CollectRecordsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response"
    },
    "googleanalyticsv2DeleteViewResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response when deleting a view"
    },
    "googleanalyticsv2GetAvailableGAViewsResponse": {
      "type": "object",
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/googleanalyticsv2View"
          },
          "title": "View object to which this user has access"
        }
      },
      "title": "List of views available to the connected Google Analytics account"
    },
    "googleanalyticsv2GetViewResponse": {
      "type": "object",
      "properties": {
        "view": {
          "$ref": "#/definitions/googleanalyticsv2View",
          "title": "The view struct returned"
        }
      }
    },
    "googleanalyticsv2SetViewRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID the view is associated with"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID the view is associated with (aka the account group ID)"
        },
        "category": {
          "$ref": "#/definitions/v2Category",
          "title": "The category the view belongs to"
        },
        "subcategory": {
          "type": "string",
          "title": "the subcategory of the view"
        },
        "gaAccountId": {
          "type": "string",
          "title": "The Google Analytics account ID the stored view will be connected to"
        },
        "gaPropertyId": {
          "type": "string",
          "title": "The Google Analytics property ID the stored view will be connected to"
        },
        "gaViewId": {
          "type": "string",
          "title": "The Google Analytics view ID the stored view with be connected to"
        },
        "googleUserId": {
          "type": "string",
          "title": "The user's Google ID"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of campaigns under the view to connect"
        }
      },
      "title": "The request sent to store a view to start querying data"
    },
    "googleanalyticsv2SetViewResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "The success/fail response when setting a view"
    },
    "googleanalyticsv2View": {
      "type": "object",
      "properties": {
        "gaViewName": {
          "type": "string",
          "title": "The Google Analytics view name"
        },
        "gaViewId": {
          "type": "string",
          "title": "The Google Analytics view ID"
        },
        "gaAccountName": {
          "type": "string",
          "title": "The Google Analytics Account name"
        },
        "gaAccountId": {
          "type": "string",
          "title": "The Google Analytics account ID"
        },
        "gaWebPropertyName": {
          "type": "string",
          "title": "The Google Analytics Web Property Name"
        },
        "gaWebPropertyId": {
          "type": "string",
          "title": "The Google Analytics Web Property ID"
        }
      }
    },
    "v1GAView": {
      "type": "object",
      "properties": {
        "gaAccountName": {
          "type": "string",
          "title": "The Google Analytics account name"
        },
        "gaAccountId": {
          "type": "string",
          "title": "The Google Analytics account ID"
        },
        "gaWebPropertyName": {
          "type": "string",
          "title": "The Google Analytics web property name"
        },
        "gaWebPropertyId": {
          "type": "string",
          "title": "The Google Analytics web property ID"
        },
        "gaViewName": {
          "type": "string",
          "title": "The Google Analytics view name"
        },
        "gaViewId": {
          "type": "string",
          "title": "The Google Analytics view ID"
        }
      }
    },
    "v2Attribute": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v2Category": {
      "type": "string",
      "enum": [
        "CATEGORY_INVALID",
        "CATEGORY_WEBSITE",
        "CATEGORY_ADINTEL",
        "CATEGORY_ALL"
      ],
      "default": "CATEGORY_INVALID",
      "description": "- CATEGORY_INVALID: Invalid Category\n - CATEGORY_WEBSITE: Category indicating Website Pro/Express\n - CATEGORY_ADINTEL: Category indicating Ad-Intel\n - CATEGORY_ALL: Category indicating all categories (Website/AdIntel)",
      "title": "Category defines the category (typically a product) that the View will be associated with"
    },
    "v2ConnectedProperty": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID the property is associated with"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID the property is associated with (aka the account group ID)"
        },
        "category": {
          "$ref": "#/definitions/v2Category",
          "title": "The category/product the property belongs to"
        },
        "subcategory": {
          "type": "string",
          "title": "The subcategory the property belongs to"
        },
        "propertyId": {
          "type": "string",
          "title": "The Google Analytics 4 property ID"
        },
        "propertyName": {
          "type": "string",
          "title": "The Google Analytics 4 property name"
        },
        "accountName": {
          "type": "string",
          "title": "The Google Analytics account name"
        },
        "accountId": {
          "type": "string",
          "title": "The Google Analytics account ID"
        },
        "googleUserId": {
          "type": "string",
          "title": "The ID of the Google User who connected the account"
        },
        "isBroken": {
          "type": "boolean",
          "title": "A flag to show whether or not the property is working properly"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of campaigns under the connected property"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the Property was first created"
        }
      }
    },
    "v2ConnectedView": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID the view is associated with"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID the view is associated with (aka the account group ID)"
        },
        "category": {
          "type": "string",
          "title": "The category/product the view belongs to"
        },
        "subcategory": {
          "type": "string",
          "title": "The subcategory the view belongs to"
        },
        "gaViewId": {
          "type": "string",
          "title": "The Google Analytics view ID"
        },
        "gaViewName": {
          "type": "string",
          "title": "The Google Analytics view name"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the view was first created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The last time a view was updated"
        },
        "isBroken": {
          "type": "boolean",
          "title": "A flag to show whether or not the view is working properly"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of campaigns under the connected view"
        }
      }
    },
    "v2DataPoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "date-time",
          "title": "Label of the data point.  Field is called 'name' for ngx-chart compatibility, but in our case will be a Date"
        },
        "value": {
          "type": "number",
          "format": "double",
          "title": "Value of the data point"
        }
      }
    },
    "v2DataSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name for one set of data.  Used in the legend of the ngx-chart"
        },
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DataPoint"
          }
        }
      }
    },
    "v2GetAvailablePropertiesResponse": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ConnectedProperty"
          }
        }
      }
    },
    "v2GetCampaignInfoForPropertyResponse": {
      "type": "object",
      "properties": {
        "campaignInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PropertyCampaignInfo"
          }
        }
      }
    },
    "v2GetCampaignInfoForViewResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      }
    },
    "v2GetHistoricalPropertyStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2HistoricalStats"
          }
        }
      }
    },
    "v2GetPropertyResponse": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/v2ConnectedProperty"
        }
      }
    },
    "v2GetPropertyStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2StatRow"
          }
        }
      }
    },
    "v2GetSourceMediumStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "sourceMediumStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2StatsSet"
          }
        }
      }
    },
    "v2GetViewStatsResponse": {
      "type": "object",
      "properties": {
        "totals": {
          "$ref": "#/definitions/v2StatsSet"
        },
        "campaignStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2StatsSet"
          }
        }
      }
    },
    "v2HistoricalStats": {
      "type": "object",
      "properties": {
        "propertyId": {
          "type": "string"
        },
        "values": {
          "$ref": "#/definitions/v2DataSet"
        },
        "total": {
          "$ref": "#/definitions/v2Stat"
        }
      }
    },
    "v2LookupPropertiesResponse": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ConnectedProperty"
          },
          "title": "List of propertys that's connected with the business"
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        }
      }
    },
    "v2LookupViewsResponse": {
      "type": "object",
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ConnectedView"
          },
          "title": "List of views that's connected with the business"
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        }
      },
      "title": "LookupViewsResponse is the response of getting all connected views for a given business"
    },
    "v2PropertyCampaignInfo": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        }
      }
    },
    "v2Stat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v2StatAggregation": {
      "type": "string",
      "enum": [
        "STAT_AGGREGATION_UNSET",
        "STAT_AGGREGATION_DAILY",
        "STAT_AGGREGATION_WEEKLY",
        "STAT_AGGREGATION_MONTHLY"
      ],
      "default": "STAT_AGGREGATION_UNSET"
    },
    "v2StatRow": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Attribute"
          }
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Stat"
          }
        }
      }
    },
    "v2StatsSet": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "string",
          "format": "int64"
        },
        "users": {
          "type": "string",
          "format": "int64"
        },
        "newUsers": {
          "type": "string",
          "format": "int64"
        },
        "bounceRate": {
          "type": "number",
          "format": "double"
        },
        "pageViewsPerSession": {
          "type": "number",
          "format": "double"
        },
        "averageSessionSeconds": {
          "type": "number",
          "format": "double"
        },
        "goalCompletions": {
          "type": "string",
          "format": "int64"
        },
        "goalBreakdown": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "v2UpdateViewResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "composerv1MediaEntry": {
      "type": "object",
      "properties": {
        "mediaEntryId": {
          "type": "string"
        },
        "mediaUrl": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "containerId": {
          "type": "string"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          }
        }
      },
      "description": "Media Entry field to have media\nThis is currently starting with Instagram Carousel posts but\nwe would need to update other post types as well."
    },
    "v1Exception": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "The type of the exception"
        },
        "value": {
          "type": "string",
          "title": "A value for the exception"
        },
        "module": {
          "type": "string",
          "title": "The package or module which the exception belongs to"
        },
        "stacktrace": {
          "$ref": "#/definitions/v1Stacktrace",
          "title": "Stacktrace for the exception"
        }
      }
    },
    "v1Post": {
      "type": "object",
      "properties": {
        "postIdentifier": {
          "$ref": "#/definitions/v1PostIdentifier"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "Generally the creator of the post"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of ids to support filtering"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "html": {
          "type": "string",
          "title": "The html of the rendered post"
        },
        "likes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        },
        "latestComments": {
          "$ref": "#/definitions/PostLatestComments"
        },
        "isSubscribed": {
          "type": "boolean",
          "title": "Is the current user subscribed to a post"
        },
        "style": {
          "type": "string",
          "title": "The custom styles to render for this post type"
        },
        "icon": {
          "$ref": "#/definitions/v1Icon",
          "title": "Icon for post, it can be either a path or mat icon"
        }
      }
    },
    "v1Result": {
      "type": "object",
      "properties": {
        "socialPostId": {
          "type": "string",
          "title": "Social post id"
        },
        "post": {
          "$ref": "#/definitions/v1Post"
        }
      }
    },
    "v1SchedulePostsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Result"
          },
          "title": "post results"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Exception"
          },
          "title": "Exception for failures"
        }
      }
    },
    "v1UpdatePostsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Result"
          },
          "title": "Edit post result"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Exception"
          },
          "title": "Edit post exceptions"
        }
      }
    },
    "mediav1CreateImageResponse": {
      "type": "object",
      "properties": {
        "imageId": {
          "type": "string",
          "title": "The image_id for the image indexed in vStore"
        }
      },
      "title": "The CreateImageResponse returns the image_id of the image that is indexed in vStore"
    },
    "mediav1Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Key value pair"
    },
    "mediav2CreateImageResponse": {
      "type": "object",
      "properties": {
        "imageId": {
          "type": "string",
          "title": "The image_id for the image indexed in vStore"
        }
      },
      "title": "The CreateImageResponse returns the image_id of the image that is indexed in\nvStore"
    },
    "mediav2Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Tag is a key-value pair"
    },
    "v2CreateVideoResponse": {
      "type": "object",
      "properties": {
        "videoId": {
          "type": "string",
          "title": "The video_id for the video that was created"
        }
      },
      "title": "CreateVideoResponse returns the video_id of the video that was created"
    },
    "v2GenerateUploadUrlResponse": {
      "type": "object",
      "properties": {
        "signedUrl": {
          "type": "string",
          "title": "The signed_url used for uploading video"
        }
      },
      "title": "The GenerateUploadUrlResponse returns the signed_url used for uploading video"
    },
    "v2GetImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/v2Image",
          "title": "The requested image"
        }
      },
      "title": "GetImageResponse is the requested image object"
    },
    "v2GetResumableUploadSessionResponse": {
      "type": "object",
      "properties": {
        "sessionUri": {
          "type": "string"
        }
      }
    },
    "v2GetVideoResponse": {
      "type": "object",
      "properties": {
        "video": {
          "$ref": "#/definitions/v2Video",
          "title": "The requested video"
        }
      },
      "title": "GetVideoResponse is the requested video object"
    },
    "v2Video": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The internal ID of the video"
        },
        "url": {
          "type": "string",
          "title": "The video url"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav2Tag"
          },
          "title": "The tags for the video"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the video was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the video was updated"
        }
      },
      "description": "A model representing a Video."
    },
    "GetMultiResponseEntityContainer": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1Entity"
        }
      },
      "title": "EntityContainer provides a container for Entity to have nullable results"
    },
    "MutationInsert": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1Entity"
        }
      },
      "description": "Insert a new entity in vStore. If any of the rows already exist, the mutation fails with an already exists error."
    },
    "MutationReplace": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1Entity"
        }
      },
      "description": "Replaces will overwrite or insert an entity into vStore."
    },
    "MutationUpdate": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1Entity"
        }
      },
      "description": "Updates an existing entity in vStore. If the entity does not exist, the mutation fails with a not found error."
    },
    "StreamingQueryRequestFilter": {
      "type": "object",
      "properties": {
        "keyFilter": {
          "$ref": "#/definitions/v1KeyFilter"
        },
        "rangeFilter": {
          "$ref": "#/definitions/v1RangeFilter"
        },
        "columnFilter": {
          "$ref": "#/definitions/v1ColumnFilter"
        },
        "columnInListFilter": {
          "$ref": "#/definitions/v1ColumnFilter"
        }
      },
      "title": "Filter provides the option to filter out results from the response"
    },
    "StreamingQueryRequestLimit": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Limit provides the option to limit the number of results that are returned"
    },
    "StreamingQueryRequestOffset": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "startingKeySet": {
          "$ref": "#/definitions/v1KeySet"
        }
      },
      "description": "Offset provides the option to skip results and start at either the provided cursor or the provided key set."
    },
    "StreamingQueryRequestOrderBy": {
      "type": "object",
      "properties": {
        "column": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/v1Order"
        }
      }
    },
    "v1BackupConfig": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/BackupConfigBackupFrequency"
        }
      }
    },
    "v1BeginTransactionResponse": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "BeginTransactionResponse is the response message for VStore.BeginTransaction"
    },
    "v1BigQueryConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The key and value pairs of labels that will be added to the BigQuery table and view\nKeys and values can have a maximum length of 63 characters.\nKeys must begin with a lowercase letter, and contain only lowercase letters, numeric characters, underscores, and dashes."
        }
      }
    },
    "v1CloudSQLConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        },
        "instanceIp": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "clientKey": {
          "type": "string",
          "format": "byte"
        },
        "clientCert": {
          "type": "string",
          "format": "byte"
        },
        "serverCertificateAuthority": {
          "type": "string",
          "format": "byte"
        },
        "projectId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        }
      }
    },
    "v1ColumnFilter": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "description": "ColumnFilter bounds the results to the provided column-value pair(s). The provided columns must have an existing index."
    },
    "v1CreateSessionResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "CreateSessionResponse is the response message for VStore.CreateSession"
    },
    "v1Elasticsearch7Analysis": {
      "type": "object",
      "properties": {
        "analyzers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomAnalyzer"
          }
        },
        "tokenizers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomTokenizer"
          }
        },
        "charFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomCharFilter"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomFilter"
          }
        },
        "normalizers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Elasticsearch7AnalysisCustomNormalizer"
          }
        }
      }
    },
    "v1Elasticsearch7Cluster": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "kibanaHost": {
          "type": "string"
        }
      },
      "title": "Elasticsearch7Cluster contains information necessary for VStore to communicate with an arbitrary ES Cluster\nVStore needs to be authed as a user with full CRUD permissions to this cluster"
    },
    "v1Elasticsearch7Config": {
      "type": "object",
      "properties": {
        "numberOfShards": {
          "type": "string",
          "format": "int64"
        },
        "numberOfReplicas": {
          "type": "string",
          "format": "int64"
        },
        "refreshInterval": {
          "type": "string"
        },
        "indexName": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/v1Elasticsearch7Cluster"
        },
        "analysis": {
          "$ref": "#/definitions/v1Elasticsearch7Analysis",
          "description": "Analysis lets you configure custom analyzers, tokenizer, character filters, and token filters on an index.\nAdding a new analyzer/tokenizer/charfilter/filter to an existing index is possible, but referencing the analyzer from fields with existing values or from analyzers who are configured on fields with existing values is not - you need to reindex your data to do that.\nWhenever you are writing a custom analyzer, you should use the Elastic API/Sense to test your analyzer with example values before registering it with VStore. If you do not provide valid JSON configuration, VStore will not be able to update your index."
        },
        "maxNgramDiff": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ElasticsearchAnalysis": {
      "type": "object",
      "properties": {
        "analyzers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ElasticsearchAnalyzer"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ElasticsearchFilter"
          }
        },
        "charFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ElasticsearchCharFilter"
          }
        },
        "tokenizers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ElasticsearchTokenizer"
          }
        }
      },
      "title": "https://www.elastic.co/guide/en/elasticsearch/guide/current/custom-analyzers.html"
    },
    "v1ElasticsearchAnalyzer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "stemExclusion": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stopWords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "charFilter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenizer": {
          "type": "string"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ElasticsearchAnalyzer configures a custom analyzer that can be built to transform your data into a\nconfiguration that suites your particular needs."
    },
    "v1ElasticsearchCharFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        }
      },
      "description": "Character filters are used to \u201ctidy up\u201d a string before it is tokenized."
    },
    "v1ElasticsearchCluster": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "ElasticsearchCluster contains information necessary for VStore to communicate with an arbitrary ES Cluster\nVStore needs to be authed as a user with full CRUD permissions"
    },
    "v1ElasticsearchConfig": {
      "type": "object",
      "properties": {
        "numberOfShards": {
          "type": "string",
          "format": "int64"
        },
        "numberOfReplicas": {
          "type": "string",
          "format": "int64"
        },
        "refreshInterval": {
          "type": "string"
        },
        "analysis": {
          "$ref": "#/definitions/v1ElasticsearchAnalysis"
        },
        "indexName": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/v1ElasticsearchCluster"
        }
      },
      "description": "ElasticsearchConfig uses our proprietary clusters as a destination for your indices.\nIf you specify an ElasticsearchCluster, VStore will instead use that cluster as a destination."
    },
    "v1ElasticsearchFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        },
        "synonyms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Token filters may change, add, or remove tokens."
    },
    "v1ElasticsearchTokenizer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        }
      },
      "description": "The tokenizer breaks up the string into individual terms or tokens."
    },
    "v1GetKindResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1Kind"
        }
      }
    },
    "v1GetMultiResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiResponseBusinessContainer"
          }
        }
      }
    },
    "v1Index": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The unique name of an index"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IndexedProperty"
          },
          "title": "The properies to be included in the index"
        },
        "unique": {
          "type": "boolean",
          "description": "Adds a constraint to the data being indexed that prohibits duplicate rows for this index."
        },
        "serving": {
          "type": "boolean",
          "description": "Output only: Indicates if the index is ready to serve traffic."
        }
      }
    },
    "v1IndexedProperty": {
      "type": "object",
      "properties": {
        "column": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/v1Order"
        }
      }
    },
    "v1KeyFilter": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Keys to filter by. You must always provide parent key components if you provide any children.\neg: keys = [PID, AG-123], rows PID:AG-123:* are matches, but if keys = [AG-123] or [\"\", AG-123], you will not get any matches."
        },
        "prefix": {
          "type": "boolean",
          "title": "if prefix is set to True, the filter will match an incomplete prefix on the last specified key\neg: keys = [PID, AG-4], row PID:AG-456 is a match with partial == true, not a match otherwise"
        }
      },
      "title": "KeyFilter provides key set filters"
    },
    "v1KeySet": {
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/v1TableReference"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Mutation": {
      "type": "object",
      "properties": {
        "add": {
          "$ref": "#/definitions/v1SingleValueAttribute",
          "description": "Deprecated: use add_attributes instead\nWill add the value to the list of values at that key or if it doesnt exist will set the attribute\nto the given value."
        },
        "replace": {
          "$ref": "#/definitions/v1MultiValueAttribute",
          "description": "Deprecated: use replace_attributes instead\nReplace will delete the values at the given key and use the given list of values in its place."
        },
        "remove": {
          "$ref": "#/definitions/v1SingleValueAttribute",
          "title": "Deprecated: use remove_attributes instead\nRemove will delete the values at the given key"
        },
        "dropKey": {
          "type": "string",
          "title": "Will drop the key specified. Use periods to drop inner keys (name.inner_name)"
        },
        "replaceAttributes": {
          "$ref": "#/definitions/attributesStructAttribute",
          "title": "Will set and replace the keys in the struct to the corresponding attributes"
        },
        "addAttributes": {
          "$ref": "#/definitions/attributesStructAttribute",
          "title": "Will add values to the corresponding attributes"
        },
        "removeAttributes": {
          "$ref": "#/definitions/attributesStructAttribute",
          "title": "Will remove values from the corresponding attributes"
        }
      },
      "description": "Mutation mutates a subject in a MutateSubject request."
    },
    "v1Order": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier for the order"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner id for the order"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "timestamp of when this order was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "timestamp of when this order was last updated"
        },
        "status": {
          "$ref": "#/definitions/v1OrderStatus",
          "title": "The status of the Order"
        },
        "orderSource": {
          "$ref": "#/definitions/v1Blame",
          "title": "The source of the order"
        },
        "idempotencyKey": {
          "type": "string",
          "title": "Idempotency key to ensure order uniqueness"
        }
      }
    },
    "v1Projection": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Projection provides the option to select the columns that are returned"
    },
    "v1Property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Unique identifier for this property. Must be in snake case format.\nExample(s): account_group_id, listing_id, company_name"
        },
        "type": {
          "$ref": "#/definitions/PropertyType",
          "title": "Type for this property"
        },
        "repeated": {
          "type": "boolean",
          "description": "Indicates if the field is repeated."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates if the field is required. Only validates that the field has been supplied in create/update requests,\nand not the actual value.\nExample(s):\n1) A required string field would allow an empty string if the field was passed, but would fail if the field\nwas not present in the request.\n2) A required int property would allow 0 as a value, but would fail if the field was not supplied in the request."
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Property"
          },
          "description": "Can only be specified if the Type supplied is a STRUCT.\nIs the schema of the structured property."
        }
      },
      "title": "TODO: This will become a common proto - dwalker\nProperty defines a single property for a schema"
    },
    "v1PubSubConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        }
      }
    },
    "v1RangeFilter": {
      "type": "object",
      "properties": {
        "begin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Key set to start filtering from."
        },
        "end": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Key set to stop filtering at."
        }
      },
      "title": "RangeFilter will bound results by [begin, end)"
    },
    "v1SecondaryIndex": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the secondary index, this name must be unique from other secondary indexes"
        },
        "esConfig": {
          "$ref": "#/definitions/v1ElasticsearchConfig"
        },
        "cloudSqlConfig": {
          "$ref": "#/definitions/v1CloudSQLConfig",
          "title": "mysql"
        },
        "pubsubConfig": {
          "$ref": "#/definitions/v1PubSubConfig"
        },
        "bigQueryConfig": {
          "$ref": "#/definitions/v1BigQueryConfig"
        },
        "postgresqlConfig": {
          "$ref": "#/definitions/v1CloudSQLConfig"
        },
        "es7Config": {
          "$ref": "#/definitions/v1Elasticsearch7Config"
        }
      }
    },
    "v1SecondaryIndexPropertyConfig": {
      "type": "object",
      "properties": {
        "elasticsearchPropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigElasticsearch"
        },
        "cloudsqlPropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigCloudSQL"
        },
        "postgresqlPropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigPostgreSQL"
        },
        "elasticsearch7PropertyConfig": {
          "$ref": "#/definitions/SecondaryIndexPropertyConfigElasticsearch7"
        }
      }
    },
    "v1StreamedEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1Entity"
        },
        "cursor": {
          "type": "string"
        }
      }
    },
    "ListCustomersResponseAttributes": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string"
        }
      }
    },
    "ListCustomersResponseCompanyProfile": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "ListCustomersResponseItems": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyProfile": {
          "$ref": "#/definitions/ListCustomersResponseCompanyProfile"
        },
        "relationshipToPartner": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/ListCustomersResponseAttributes"
        }
      }
    },
    "msofficev1Status": {
      "type": "string",
      "enum": [
        "STATUS_CREATE_PENDING",
        "STATUS_COMPLETE",
        "STATUS_CREATE_FAILED",
        "STATUS_UPDATE_PENDING",
        "STATUS_UPDATE_FAILED"
      ],
      "default": "STATUS_CREATE_PENDING",
      "description": "- STATUS_CREATE_PENDING: The UserMap has just been created and further create-user work is being done\n - STATUS_COMPLETE: All work has been done for this UserMap\n - STATUS_CREATE_FAILED: The create-user work failed\n - STATUS_UPDATE_PENDING: The User/UserMap is in progress of being updated\n - STATUS_UPDATE_FAILED: The User/UserMap failed to be updated",
      "title": "Status is the create/update status of a UserMap"
    },
    "v1Customer": {
      "type": "object",
      "properties": {
        "internalCustomerId": {
          "type": "string",
          "title": "Internally stored fields"
        },
        "name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "externalCustomerId": {
          "type": "string"
        },
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creditBureauNumber": {
          "type": "string",
          "title": "Fields fetched externally. Sensitive fields will be truncated and will not return all of the data"
        },
        "creditBureauRating": {
          "type": "string"
        },
        "creditBureauDate": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "companyRegistrationNumber": {
          "type": "string"
        },
        "creditVettingCode": {
          "type": "string"
        },
        "vatRegistrationNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "banks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Bank"
          }
        },
        "billToAddresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BillToAddress"
          }
        },
        "contactPersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ContactPerson"
          }
        }
      }
    },
    "v1DomainVerification": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "domain": {
          "type": "string",
          "title": "Domain"
        },
        "txtToken": {
          "type": "string",
          "title": "TXT record used to verify domain ownership"
        },
        "mxToken": {
          "type": "string",
          "title": "MX record used to verify domain ownership"
        },
        "isVerified": {
          "type": "boolean",
          "title": "Indicates if the domain has been verified"
        },
        "isFederated": {
          "type": "boolean",
          "title": "Indicates if the domain has been federated"
        }
      },
      "title": "Defines a DomainVerification model"
    },
    "v1GetCustomerByBusinessIDResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "Customer model"
        }
      },
      "title": "The response for getting a Customer via businessID"
    },
    "v1GetDomainVerificationResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/v1DomainVerification",
          "title": "DomainVerification model"
        }
      },
      "title": "The response for getting a DomainVerification"
    },
    "v1GetLicensesResponse": {
      "type": "object",
      "properties": {
        "productSkus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductSku"
          }
        }
      }
    },
    "v1GetUserMappingResponse": {
      "type": "object",
      "properties": {
        "userMap": {
          "$ref": "#/definitions/v1UserMap",
          "title": "The UserMap"
        }
      }
    },
    "v1License": {
      "type": "object",
      "properties": {
        "availableUnits": {
          "type": "string",
          "format": "int64",
          "title": "Number of available licenses"
        },
        "consumedUnits": {
          "type": "string",
          "format": "int64",
          "title": "Number of used licenses"
        },
        "productSku": {
          "$ref": "#/definitions/v1ProductSku",
          "title": "Corresponding product of licenses"
        }
      },
      "title": "License"
    },
    "v1ListDomainVerificationResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DomainVerification"
          },
          "title": "DomainVerification model"
        }
      },
      "title": "The response for listing DomainVerification models on Customer"
    },
    "v1ListLicensesResponse": {
      "type": "object",
      "properties": {
        "licenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1License"
          },
          "title": "List of License"
        }
      },
      "title": "Response for Listing Licenses"
    },
    "v1ListSupportedSKUsResponse": {
      "type": "object",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SKUs"
        }
      },
      "title": "Response for listing supported SKUs"
    },
    "v1ListUserMappingsResponse": {
      "type": "object",
      "properties": {
        "usermaps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserMap"
          },
          "title": "UserMapping between Microsoft and VBC users"
        }
      }
    },
    "v1MicrosoftUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the User"
        },
        "userPrincipalName": {
          "type": "string",
          "title": "Email"
        },
        "firstName": {
          "type": "string",
          "title": "FirstName"
        },
        "lastName": {
          "type": "string",
          "title": "LastName"
        },
        "displayName": {
          "type": "string",
          "title": "DisplayName"
        },
        "alternateEmail": {
          "type": "string",
          "title": "Email to send password reset information to"
        }
      },
      "title": "Model of a Microsoft User"
    },
    "v1PagingOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "number of items to returned"
        },
        "continuationToken": {
          "type": "string",
          "title": "Microsoft-specific cursor for retrieving next page"
        }
      }
    },
    "v1ProductSku": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        }
      },
      "title": "ProductSku"
    },
    "v1UserMap": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business ID the UserMap was created under"
        },
        "identityProviderUserId": {
          "type": "string",
          "title": "The business ID the UserMap was created under, i.e., a Business Center user email"
        },
        "serviceProviderUserId": {
          "type": "string",
          "title": "The ID of the Google Workspace user associated with the UserMap"
        },
        "serviceProviderUserEmail": {
          "type": "string",
          "title": "The Google Workspace email of the Google Workspace user associated with the UserMap"
        },
        "primaryDomain": {
          "type": "string",
          "title": "The domain of the Google Workspace account with the users"
        },
        "userFirstName": {
          "type": "string",
          "title": "The first name of the user being mapped"
        },
        "userLastName": {
          "type": "string",
          "title": "The last name of the user being mapped"
        },
        "alternateEmail": {
          "type": "string",
          "title": "The backup email for the user on the UserMap"
        },
        "deletedDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the UserMap was deleted"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the UserMap was created"
        }
      },
      "description": "UserMap represents a mapping between the IdentityProviderUserID and the ServiceProviderUserID."
    },
    "v1VBCUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the User"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "firstName": {
          "type": "string",
          "title": "FirstName"
        },
        "lastName": {
          "type": "string",
          "title": "LastName"
        }
      },
      "title": "Model of a VBC User"
    },
    "AlignmentPeriodCalendar": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "CALENDAR_MINUTE",
        "CALENDAR_HOUR",
        "CALENDAR_DAY",
        "CALENDAR_WEEK",
        "CALENDAR_MONTH",
        "CALENDAR_QUARTER",
        "CALENDAR_YEAR"
      ],
      "default": "UNSPECIFIED",
      "title": "- UNSPECIFIED: No value has been specified.\n - CALENDAR_MINUTE: Align at minute boundaries\n - CALENDAR_HOUR: Align at hour boundaries\n - CALENDAR_DAY: Align at day boundaries\n - CALENDAR_WEEK: Align at week boundaries (where beginning of the week is monday)\n - CALENDAR_MONTH: Align at month boundaries\n - CALENDAR_QUARTER: Align at quarter boundaries\n - CALENDAR_YEAR: Align at year boundaries"
    },
    "FieldFilterOperatorFunction": {
      "type": "string",
      "enum": [
        "NONE",
        "ANY",
        "ALL"
      ],
      "default": "NONE",
      "title": "- NONE: No function will be applied to the values\n - ANY: Any value in the list must pass the filter\n - ALL: All values in the list must pass the filter"
    },
    "GroupByDimension": {
      "type": "object",
      "properties": {
        "dimension": {
          "type": "string"
        },
        "limitDimension": {
          "$ref": "#/definitions/GroupByLimit"
        }
      },
      "title": "Dimension specifies which column to group by"
    },
    "GroupByExcludeCombination": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ExcludeCombination allows a user using ROLLUP OR CUBE to exclude a combination from the result\nExample: CUBE (pid, agid) returns the combinations ((pid, agid), (pid), (agid), ()). Providing\nExcludeCombination{dimensions=[pid, agid]} would return the combinations ((pid), (agid), ())"
    },
    "GroupByLimit": {
      "type": "object",
      "properties": {
        "dimension": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/v1Order"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Limit reduces the number of dimensions to the specified amount"
    },
    "MeasureAggregate": {
      "type": "object",
      "properties": {
        "measure": {
          "type": "string"
        },
        "aggOp": {
          "$ref": "#/definitions/MeasureAggregateOperator"
        },
        "filter": {
          "$ref": "#/definitions/v1Filter",
          "description": "Filter allows narrowing a measure down by its dimensions. This is useful when your response size is large\nand you have a known number of dimensions that can be turned into measures. Measures compared to dimensions,\nare smaller in size."
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "MeasureAggregateOperator": {
      "type": "string",
      "enum": [
        "AVG",
        "COUNT",
        "SUM",
        "MIN",
        "MAX",
        "COUNT_DISTINCT",
        "ARRAY_AGG"
      ],
      "default": "AVG"
    },
    "OrderByOrderColumn": {
      "type": "object",
      "properties": {
        "column": {
          "type": "string",
          "title": "Either a dimension or a measure to order by"
        },
        "order": {
          "$ref": "#/definitions/v1Order"
        }
      }
    },
    "v1Alignment": {
      "type": "string",
      "enum": [
        "ALIGNMENT_RELAXED",
        "ALIGNMENT_STRICT"
      ],
      "default": "ALIGNMENT_RELAXED",
      "title": "- ALIGNMENT_RELAXED: Allow partial matches e.g. subdomains within a domain\n - ALIGNMENT_STRICT: Require an exact match"
    },
    "v1AlignmentPeriod": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "calendar": {
          "$ref": "#/definitions/AlignmentPeriodCalendar"
        }
      }
    },
    "v1BusinessResourceId": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      },
      "description": "Four types of resources in the system -- a single business, a group of businesses, a list of markets, or a JWT that\nencodes a specific user/business combination."
    },
    "v1CompositeFilter": {
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/v1CompositeFilterOperator",
          "description": "The operator for combining multiple filters."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Filter"
          },
          "description": "The list of filters to combine.\nMust contain at least one filter."
        }
      },
      "description": "A filter that merges multiple other filters using the given operator."
    },
    "v1CompositeFilterOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "AND",
        "OR"
      ],
      "default": "OPERATOR_UNSPECIFIED",
      "description": "A composite filter operator.\n\n - OPERATOR_UNSPECIFIED: Unspecified. This value must not be used.\n - AND: The results are required to satisfy each of the combined filters.\n - OR: The results are required to satisfy at least one of the combined filters."
    },
    "v1CustomAlignerConfig": {
      "type": "object",
      "properties": {
        "alignmentBucketFilter": {
          "$ref": "#/definitions/v1Filter",
          "title": "The logic for the ON clause of the aligner.\nFields that are available for use include:\n   a) aligner__start_time - the start time of the time bucket\n   b) aligner__end_time - the end time of the time bucket"
        },
        "skipFilteringEntitiesToDateRange": {
          "type": "boolean",
          "title": "Whether to skip filtering entities by the time column on the table to the provided date_range.\nUsage: date_range is used for both filtering entities and defining the time period to aggregate over.\nIf true, date_range will only be used to define the aggregation time range (i.e. the last year)\nIf false, date_range will be used for BOTH filtering entities AND the aggregation time range"
        }
      }
    },
    "v1FieldFilter": {
      "type": "object",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "The field to filter by."
        },
        "operator": {
          "$ref": "#/definitions/v1FieldFilterOperator",
          "description": "The operator to filter by."
        },
        "value": {
          "$ref": "#/definitions/v1TypedValue",
          "title": "A value to compare the dimension to\ni.e. a string or timestamp"
        },
        "comparisonField": {
          "type": "string",
          "title": "A field to compare the dimension to"
        },
        "operatorFunction": {
          "$ref": "#/definitions/FieldFilterOperatorFunction",
          "title": "Function to apply to the values. (ex, ANY)"
        },
        "operatorFunctionOnField": {
          "type": "boolean",
          "title": "Whether to apply the specified operator function to the field, or the value involved in the filter"
        }
      },
      "title": "A filter on a specific field"
    },
    "v1FieldFilterOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "LESS_THAN",
        "LESS_THAN_OR_EQUAL",
        "GREATER_THAN",
        "GREATER_THAN_OR_EQUAL",
        "EQUAL",
        "OVERLAP",
        "NOT_EQUAL"
      ],
      "default": "OPERATOR_UNSPECIFIED",
      "description": " - OPERATOR_UNSPECIFIED: Unspecified. This value must not be used.\n - LESS_THAN: Less than. Requires that the field come first in `order_by`.\n - LESS_THAN_OR_EQUAL: Less than or equal. Requires that the field come first in `order_by`.\n - GREATER_THAN: Greater than. Requires that the field come first in `order_by`.\n - GREATER_THAN_OR_EQUAL: Greater than or equal. Requires that the field come first in\n`order_by`.\n - EQUAL: Equal.\n - OVERLAP: Overlap (have elements in common). Field and values must be lists.\n - NOT_EQUAL: Not Equal."
    },
    "v1GroupBy": {
      "type": "object",
      "properties": {
        "dimension": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GroupByDimension"
          },
          "title": "A list of dimensions to group by"
        },
        "groupByOperator": {
          "$ref": "#/definitions/v1GroupByOperator",
          "title": "The operator to group by"
        },
        "excludeCombination": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GroupByExcludeCombination"
          },
          "title": "Supports excluding a list of combinations"
        }
      },
      "title": "Group By is a reducer for aggregating rows into the given dimensions"
    },
    "v1GroupByOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_GROUP_BY",
        "OPERATOR_ROLLUP",
        "OPERATOR_CUBE"
      ],
      "default": "OPERATOR_GROUP_BY",
      "title": "A Group By Operator"
    },
    "v1GroupResourceId": {
      "type": "object",
      "properties": {
        "groupPathNodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1JWTResourceId": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        }
      }
    },
    "v1MarketId": {
      "type": "object",
      "properties": {
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Measure": {
      "type": "object",
      "properties": {
        "measure": {
          "type": "string",
          "title": "SELECT business_id"
        },
        "aggregate": {
          "$ref": "#/definitions/MeasureAggregate",
          "title": "SELECT AVG(scaled_stars)"
        }
      },
      "description": "Aggregate chooses how to aggregate the specified measure",
      "title": "Measure either selects or aggregates a specified measure"
    },
    "v1MetricResult": {
      "type": "object",
      "properties": {
        "dimension": {
          "title": "The dimension of the metric"
        },
        "measures": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "The requested measures"
        },
        "results": {
          "$ref": "#/definitions/v1Metrics",
          "title": "Nested metric results"
        }
      }
    },
    "v1OrderBy": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/OrderByOrderColumn"
          }
        }
      }
    },
    "v1QueryMetricsResponse": {
      "type": "object",
      "properties": {
        "metricResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceMetricResult"
          },
          "title": "A list of Metric results where each item responds to the Nth index of the requested resources"
        }
      }
    },
    "v1ResourceId": {
      "type": "object",
      "properties": {
        "groupPathNodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "If requesting data for a group, this will be the path to that group"
        },
        "accountGroupId": {
          "type": "string",
          "title": "If requesting data for a group, this will be blank\nIf requesting data for an account group, this will be set, and the group at group path should contain this\naccount group as a member, used for authentication"
        }
      },
      "title": "A resource in GMB is either a group, or an account group"
    },
    "v1ResourceMetricResult": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/v1ResourceId",
          "title": "The resource id that has been requested"
        },
        "measuresSchema": {
          "$ref": "#/definitions/vendastatypesSchema",
          "title": "The schema for the measure (nth index of a measure corresponds to the ith index of the measure_schema.properties)"
        },
        "dimensionsSchema": {
          "$ref": "#/definitions/vendastatypesSchema",
          "title": "The schema for the dimensions"
        },
        "metrics": {
          "$ref": "#/definitions/v1Metrics"
        },
        "explodedMetrics": {
          "$ref": "#/definitions/v1QueryMetricsResponse"
        },
        "cursor": {
          "type": "string",
          "title": "If a limit was set, a cursor will be returned for the caller to pass to the next query"
        }
      }
    },
    "v1ResourceMetricsResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          },
          "title": "All fields in this message are interpreted in order of the metrics on root message"
        },
        "timeBuckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TimeBucketMetrics"
          }
        }
      }
    },
    "v1SourceFilters": {
      "type": "object",
      "properties": {
        "sourceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "A list of listing source ids to limit the metrics to. This is only applicable to general metrics such as\ntotal reviews or listings. It does not apply to source specific metrics such as GMB insights"
        }
      },
      "title": "Filters related to listing and review sources"
    },
    "v1TimeBucketMetrics": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          },
          "title": "Interpreted in order of timeBucketStarts on root message"
        }
      }
    },
    "v1TypedValue": {
      "type": "object",
      "properties": {
        "value": {
          "title": "the value of the field"
        },
        "valueType": {
          "$ref": "#/definitions/vendastatypesPropertyType",
          "title": "The type of the field"
        }
      },
      "description": "A message that can hold any of the supported value types."
    },
    "v1UnaryFilter": {
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/v1UnaryFilterOperator",
          "description": "The unary operator to apply."
        },
        "dimension": {
          "type": "string",
          "description": "The field to which to apply the operator."
        }
      },
      "title": "A filter with a single operand"
    },
    "v1UnaryFilterOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "IS_NAN",
        "IS_NULL",
        "IS_NOT_NULL"
      ],
      "default": "OPERATOR_UNSPECIFIED",
      "description": "A unary operator.\n\n - OPERATOR_UNSPECIFIED: Unspecified. This value must not be used.\n - IS_NAN: Test if a field is equal to NaN.\n - IS_NULL: Test if an expression evaluates to Null.\n - IS_NOT_NULL: Test if an expression evaluates to Not Null."
    },
    "DeliveryStrategyDelivery": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "title": "The deployment this delivery is for"
        },
        "deliveryTime": {
          "type": "string",
          "format": "date-time",
          "title": "The time this delivery occured"
        },
        "userEmail": {
          "type": "string",
          "title": "The email of the user who created this delivery"
        }
      }
    },
    "GetDeploymentsResponseDeploymentContainer": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/v1Deployment"
        }
      }
    },
    "IAMFilter": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StrategyDefault": {
      "type": "object",
      "title": "Default sets the default deploy strategy"
    },
    "StrategyIAM": {
      "type": "object",
      "properties": {
        "attributeFilters": {
          "$ref": "#/definitions/IAMFilter",
          "description": "Attribute filter allows a version to select specific IAM users to receive this deployment."
        }
      },
      "title": "IAM deploy strategy"
    },
    "StrategyPercentage": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Allows a delivery strategy to limit the percentage of users that receive the deployment."
    },
    "v1Application": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "v1Artifacts": {
      "type": "object",
      "properties": {
        "gcsBucket": {
          "type": "string"
        }
      },
      "title": "Code artifacts used for an application deployment"
    },
    "v1CreateDeliveryStrategyResponse": {
      "type": "object",
      "properties": {
        "deliveryStrategyId": {
          "type": "string",
          "title": "The ID of the delivery strategy"
        }
      },
      "title": "Response message for vStatic.CreateDeliveryStrategy"
    },
    "v1CreateDeploymentResponse": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "title": "The unique identifier for the created deployment"
        }
      },
      "title": "Response message for vStatic.CreateDeployment"
    },
    "v1DeliveryStrategy": {
      "type": "object",
      "properties": {
        "deliveryStrategyId": {
          "type": "string",
          "title": "The unique id for the delivery strategy"
        },
        "strategy": {
          "$ref": "#/definitions/v1Strategy",
          "title": "the strategy being used"
        },
        "deploymentId": {
          "type": "string",
          "title": "the deployment being used for this delivery"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "description": "The environment this delivery strategy is active for."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the delivery strategy was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the delivery strategy was last updated"
        },
        "deliveryHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DeliveryStrategyDelivery"
          },
          "title": "The history of deliveries for this strategy, limited to the last 15"
        }
      },
      "title": "The delivery strategy is an active delivery strategy of a deployment for an application"
    },
    "v1Deployment": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The application ID"
        },
        "deploymentId": {
          "type": "string",
          "title": "(Ouput Only) The ID of the deployment"
        },
        "gitHash": {
          "type": "string",
          "title": "if applicable, the git hash of this deployment"
        },
        "artifacts": {
          "$ref": "#/definitions/v1Artifacts",
          "description": "The arficacts to be served for this application."
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "description": "Environment to scope this deployment to."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Output only - Time the deployment was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Output only - Time the deployment was last updated"
        },
        "containerBuilderId": {
          "type": "string",
          "title": "Optional - Google Container Builder ID that built and published this deployment"
        },
        "gitCommitDetails": {
          "$ref": "#/definitions/v1GitCommitDetails",
          "description": "Deprecated - no longer populated. Use mission control's deployment model for this info."
        },
        "author": {
          "type": "string",
          "title": "Output only - The creator of the deployment"
        },
        "name": {
          "type": "string",
          "description": "If deploying a custom artifact, a name is required."
        },
        "branchName": {
          "type": "string",
          "title": "if applicable, the git branch name of this deployment"
        }
      },
      "description": "Deployment represents an immutable artifact that can be delivered to the end user."
    },
    "v1GetAssetURLResponse": {
      "type": "object",
      "properties": {
        "servingUrl": {
          "type": "string",
          "title": "the combination of the hostname and asset path of where the asset is being served from"
        }
      },
      "title": "Response message for vStatic.GetAssetURL"
    },
    "v1GetDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetDeploymentsResponseDeploymentContainer"
          },
          "title": "The list of requested Deployment"
        }
      }
    },
    "v1GetIndexResponse": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string",
          "format": "byte"
        },
        "deploymentId": {
          "type": "string",
          "description": "The id of this deployment, if you supplied one in the request it will be the same."
        }
      },
      "title": "Response message for vStatic.GetIndex"
    },
    "v1GitCommitDetails": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/v1GithubCommitUser",
          "title": "The user who created the content"
        },
        "committer": {
          "$ref": "#/definitions/v1GithubCommitUser",
          "title": "The user who committed the content"
        },
        "message": {
          "type": "string",
          "title": "the content of the git commit message"
        }
      },
      "title": "The details of the git commit (if any)"
    },
    "v1GithubCommitUser": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "Details about the user who committed/authored a specific git commit."
    },
    "v1ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      },
      "title": "Response message for vStatic.ListApplications"
    },
    "v1ListDeliveryStrategiesResponse": {
      "type": "object",
      "properties": {
        "strategies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeliveryStrategy"
          }
        }
      },
      "title": "Response message for vStatic.ListDeliveryStrategiesResponse"
    },
    "v1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Deployment"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      },
      "title": "Response message for vStatic.ListDeployments"
    },
    "v1Strategy": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/StrategyDefault"
        },
        "iam": {
          "$ref": "#/definitions/StrategyIAM"
        },
        "percentage": {
          "$ref": "#/definitions/StrategyPercentage"
        }
      },
      "description": "Strategy controls the delivery mechanism for a specific deployment to the end user."
    },
    "DataProviderAccuracyStatusV2": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_V2",
        "ACCURATE_V2",
        "NOT_FOUND_V2",
        "CONTAINS_ERRORS_V2"
      ],
      "default": "UNSPECIFIED_V2"
    },
    "GlobalConfigEnabledSection": {
      "type": "string",
      "enum": [
        "REVIEWS",
        "LISTINGS",
        "SOCIAL",
        "WEBSITE",
        "ADVERTISING",
        "SEO",
        "ECOMMERCE",
        "TECHNOLOGY"
      ],
      "default": "REVIEWS",
      "title": "The sections that can be enabled for a snapshot report"
    },
    "InstagramDataInstagramDataStatus": {
      "type": "string",
      "enum": [
        "INSTAGRAM_DATA_INSTAGRAM_DATA_STATUS_IN_PROGRESS",
        "INSTAGRAM_DATA_INSTAGRAM_DATA_STATUS_SUCCESS",
        "INSTAGRAM_DATA_INSTAGRAM_DATA_STATUS_INVALID_USER_ID",
        "INSTAGRAM_DATA_INSTAGRAM_DATA_STATUS_UNKNOWN_ERROR",
        "INSTAGRAM_DATA_INSTAGRAM_DATA_STATUS_REEL_DETECTED"
      ],
      "default": "INSTAGRAM_DATA_INSTAGRAM_DATA_STATUS_IN_PROGRESS"
    },
    "ListingV2ListingField": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "match": {
          "type": "boolean"
        },
        "ignore": {
          "type": "boolean"
        }
      }
    },
    "ListingV2Source": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "sourceName": {
          "type": "string"
        },
        "sourceIconUrl": {
          "type": "string"
        }
      }
    },
    "ResultsReviews": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "number",
          "format": "float"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SocialDataCompetitorFacebookData": {
      "type": "object",
      "properties": {
        "averageSharesPerPost": {
          "type": "number",
          "format": "float"
        },
        "averageLikesPerPost": {
          "type": "number",
          "format": "float"
        },
        "likes": {
          "type": "number",
          "format": "float"
        },
        "averagePostsPerMonth": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "SocialDataCompetitorInstagramData": {
      "type": "object",
      "properties": {
        "followers": {
          "type": "number",
          "format": "float"
        },
        "posts": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "SocialDataCompetitorTwitterData": {
      "type": "object",
      "properties": {
        "following": {
          "type": "number",
          "format": "float"
        },
        "followers": {
          "type": "number",
          "format": "float"
        },
        "tweets": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "snapshotv1Competitor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the competitor"
        },
        "website": {
          "type": "string",
          "title": "The website of the competitor"
        },
        "snapshotId": {
          "type": "string",
          "title": "The snapshot id of the competitor's snapshot\nUsed to directly compare the prospect against"
        }
      }
    },
    "snapshotv1FacebookData": {
      "type": "object",
      "properties": {
        "averageSharesPerPost": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "averageLikesPerPost": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "likes": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "posts": {
          "$ref": "#/definitions/v1SocialDataItem",
          "title": "superseded by average_posts_per_month"
        },
        "recentPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FacebookPost"
          }
        },
        "averagePostsPerMonth": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "snapshotv1InstagramData": {
      "type": "object",
      "properties": {
        "followers": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "posts": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "url": {
          "type": "string",
          "title": "The url of the instagram account this data was scraped for"
        },
        "status": {
          "$ref": "#/definitions/InstagramDataInstagramDataStatus",
          "title": "The status of the instagram data collection"
        }
      },
      "title": "Data about the instagram page for the business"
    },
    "snapshotv1Location": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The Location's street address"
        },
        "city": {
          "type": "string",
          "title": "The Location's City"
        },
        "state": {
          "type": "string",
          "title": "The Location's State"
        },
        "country": {
          "type": "string",
          "title": "The location's Country"
        }
      }
    },
    "snapshotv1Status": {
      "type": "string",
      "enum": [
        "STATUS_UNDEFINED",
        "STATUS_DOES_NOT_EXIST",
        "STATUS_IN_PROGRESS",
        "STATUS_FINISHED"
      ],
      "default": "STATUS_UNDEFINED"
    },
    "snapshotv1TwitterData": {
      "type": "object",
      "properties": {
        "following": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "followers": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "tweets": {
          "$ref": "#/definitions/v1SocialDataItem"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1AIPrompt": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1Role"
        }
      }
    },
    "v1AdvertisingConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideSemSection": {
          "type": "boolean"
        },
        "hideSemPayPerClick": {
          "type": "boolean"
        },
        "hideSemRetargeting": {
          "type": "boolean"
        },
        "hideSemContent": {
          "type": "boolean"
        },
        "customizedSemMessage": {
          "type": "string"
        },
        "hideAdwordsSection": {
          "type": "boolean"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        }
      },
      "title": "AdvertisingConfig represents the configuration for the advertising section"
    },
    "v1AdvertisingData": {
      "type": "object",
      "properties": {
        "adwordsData": {
          "$ref": "#/definitions/v1AdwordsData"
        },
        "payPerClickData": {
          "$ref": "#/definitions/v1PayPerClickData"
        },
        "isRetargeting": {
          "type": "boolean",
          "title": "If we can determine the business is using the retargeting method of advertising"
        },
        "website": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "title": "AdvertisingData represents advertising data found for a business"
    },
    "v1AdvertisingSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The Overall grade of the advertising section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1AdvertisingData"
        },
        "config": {
          "$ref": "#/definitions/v1AdvertisingConfig"
        },
        "semContent": {
          "$ref": "#/definitions/v1SectionContent"
        }
      },
      "title": "AdvertisingSection represents the entire advertising section of a snapshot"
    },
    "v1AdwordsData": {
      "type": "object",
      "properties": {
        "impressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Impressions"
          }
        },
        "clicks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Clicks"
          }
        },
        "stillWorking": {
          "type": "boolean"
        }
      },
      "title": "AdwordsData contains adwords impressions and clicks"
    },
    "v1AppDomain": {
      "type": "string",
      "enum": [
        "APP_DOMAIN_INVALID",
        "APP_DOMAIN_VBC",
        "APP_DOMAIN_MS",
        "APP_DOMAIN_SM",
        "APP_DOMAIN_ST",
        "APP_DOMAIN_RM"
      ],
      "default": "APP_DOMAIN_INVALID",
      "description": "AppDomain is the app to get the domain for\nVBC = Business app/ MS = Listing builder/ SM = Social marketing/ ST = Salestool/ RM = Reputation Intelligence."
    },
    "v1Audit": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AuditDetail"
          }
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Audit is a pagespeed insights v5 rule"
    },
    "v1AuditDetail": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "detailItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AuditDetail is the individual detail about a pagespeed insights V5 audit"
    },
    "v1AuditSummary": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade"
        },
        "audits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Audit"
          }
        },
        "locale": {
          "type": "string"
        },
        "score": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "AuditSummary contains a grade and pagespeed insight rules for pagespeedinsights v5"
    },
    "v1AvailableListingSource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "sourceName": {
          "type": "string"
        },
        "sourceIconUrl": {
          "type": "string"
        },
        "ignored": {
          "type": "boolean"
        }
      },
      "title": "Listing source information"
    },
    "v1Branding": {
      "type": "object",
      "properties": {
        "theme": {
          "$ref": "#/definitions/v1UITheme",
          "title": "Major theme of the UI -- Dark/Light"
        },
        "logoUrl": {
          "type": "string",
          "title": "The URL of the partner's logo"
        },
        "partnerName": {
          "type": "string",
          "title": "The partner's name"
        },
        "centerName": {
          "type": "string",
          "title": "The whitelabeled business center name"
        },
        "theming": {
          "$ref": "#/definitions/v1Theming",
          "title": "The theming set for the partner and market"
        },
        "cobrandingLogoUrl": {
          "type": "string",
          "title": "The cobranding-logo url to show for the tiers with cobranding"
        },
        "marketName": {
          "type": "string",
          "title": "market name"
        },
        "darkModeLogoUrl": {
          "type": "string",
          "title": "Optional dark mode logo, used when theme is set to dark mode"
        },
        "businessAppUiTheme": {
          "$ref": "#/definitions/v1UITheme",
          "title": "The business app ui theme"
        },
        "exitLinkConfiguration": {
          "$ref": "#/definitions/v1ExitLinkConfiguration",
          "title": "The exit link configuration"
        }
      },
      "title": "Branding contains the major visual data for a branded partner/market context"
    },
    "v1BrandingAssets": {
      "type": "object",
      "properties": {
        "faviconUrl": {
          "$ref": "#/definitions/v1URL",
          "title": "Favicon is the small icon that will appear in browser tabs"
        },
        "shortcutIconUrl": {
          "$ref": "#/definitions/v1URL",
          "title": "Shortut Icon is a mid-size icon that will appear in other browsing contexts, such as when the page is added to homescreen"
        },
        "logoUrl": {
          "$ref": "#/definitions/v1URL",
          "title": "Logo is the image that will be used to brand the platform within pages"
        }
      }
    },
    "v1CanProvisionSnapshotResponse": {
      "type": "object",
      "properties": {
        "canProvision": {
          "type": "boolean",
          "title": "If the snapshot can be provisioned"
        },
        "reason": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CannotProvisionReason"
          },
          "title": "If can_provision is false, this can contain multiple reasons why"
        }
      }
    },
    "v1CannotProvisionReason": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "AUTHENTICATION_FAILED",
        "ACTIVE_SNAPSHOT_ALREADY_EXISTS",
        "PARTNER_CANNOT_CREATE_SNAPSHOT",
        "SALESPERSON_SNAPSHOT_LIMIT_REACHED"
      ],
      "default": "UNKNOWN"
    },
    "v1Clicks": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "clicksPerMonth": {
          "$ref": "#/definitions/v1FloatRange"
        },
        "averageCostPerClick": {
          "$ref": "#/definitions/v1IntRange"
        }
      },
      "title": "Clicks for a keyword"
    },
    "v1CompetitionAnalysis": {
      "type": "string",
      "enum": [
        "UNSET",
        "INDUSTRY_DATA",
        "COMPETITOR_DATA",
        "DIRECT_COMPETITOR_DATA"
      ],
      "default": "UNSET",
      "title": "- UNSET: Default\n - INDUSTRY_DATA: Compare against industry data\n - COMPETITOR_DATA: Compare against other businesses\n - DIRECT_COMPETITOR_DATA: Compare against Direct Competitors"
    },
    "v1CompetitorHomepageData": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "format": "int64"
        },
        "facebookPresent": {
          "type": "boolean"
        },
        "twitterPresent": {
          "type": "boolean"
        },
        "instagramPresent": {
          "type": "boolean"
        },
        "videoPresent": {
          "type": "boolean"
        }
      },
      "title": "CompetitorHomepageData represents information about a competitor's website"
    },
    "v1Configuration": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The partner ID that the Local SEO configuration is scoped to."
        },
        "chatWidgetId": {
          "type": "string",
          "description": "The conversation web chat widget ID that is served on my listing page."
        },
        "publicMyListingUrl": {
          "type": "string",
          "description": "The public view of my listing page for the business."
        }
      }
    },
    "v1ContextualizeResponse": {
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        }
      }
    },
    "v1CreateSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "The id of the snapshot that is being created"
        }
      }
    },
    "v1CreateTechnologyResponse": {
      "type": "object",
      "properties": {
        "technology": {
          "$ref": "#/definitions/v1Technology"
        }
      }
    },
    "v1Current": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "The id of the snapshot"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "created date of the snapshot"
        },
        "expired": {
          "type": "string",
          "format": "date-time",
          "title": "The expiration date of the snapshot"
        },
        "path": {
          "type": "string",
          "title": "The URL path for the snapshot"
        }
      }
    },
    "v1DataProviderAccuracy": {
      "type": "object",
      "properties": {
        "neustarAccurate": {
          "$ref": "#/definitions/v1DataProviderAccuracyStatus"
        },
        "factualAccurate": {
          "$ref": "#/definitions/v1DataProviderAccuracyStatus"
        },
        "acxiomAccurate": {
          "$ref": "#/definitions/v1DataProviderAccuracyStatus"
        },
        "infogroupAccurate": {
          "$ref": "#/definitions/v1DataProviderAccuracyStatus"
        },
        "neustarStatus": {
          "$ref": "#/definitions/DataProviderAccuracyStatusV2"
        },
        "factualStatus": {
          "$ref": "#/definitions/DataProviderAccuracyStatusV2"
        },
        "infogroupStatus": {
          "$ref": "#/definitions/DataProviderAccuracyStatusV2"
        },
        "foursquareStatus": {
          "$ref": "#/definitions/DataProviderAccuracyStatusV2"
        }
      }
    },
    "v1DataProviderAccuracyStatus": {
      "type": "string",
      "enum": [
        "ACCURATE",
        "NOT_FOUND",
        "CONTAINS_ERRORS"
      ],
      "default": "ACCURATE"
    },
    "v1DirectCompetitor": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1DomainMetrics": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "averageAdPosition": {
          "type": "string",
          "format": "int64"
        },
        "numberOfAdvertisers": {
          "type": "string",
          "format": "int64"
        },
        "numberOfPaidKeywords": {
          "type": "string",
          "format": "int64"
        },
        "paidClicksPerMonth": {
          "type": "string",
          "format": "int64"
        },
        "dailyAdwordsBudget": {
          "type": "string",
          "format": "int64"
        },
        "monthlyAdwordsBudget": {
          "type": "string",
          "format": "int64"
        },
        "paidDomainRanking": {
          "type": "string",
          "format": "int64"
        },
        "overlap": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "DomainMetrics is a holder for the domain metrics returned by spyfu"
    },
    "v1EcommerceConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "hideEcommerceSolution": {
          "type": "boolean"
        },
        "hideOnlinePayments": {
          "type": "boolean"
        },
        "hideDigitalAdvertising": {
          "type": "boolean"
        },
        "hideAdRetargeting": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        },
        "hideAppointmentScheduling": {
          "type": "boolean"
        }
      },
      "title": "EcommerceConfig represents the configuration for the ecommerce section"
    },
    "v1EcommerceData": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade"
        },
        "ecommerceSolution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "onlinePayments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "digitalAdvertising": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "adRetargeting": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EcommerceDataCompetitor"
          }
        },
        "website": {
          "type": "string"
        },
        "appointmentScheduling": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "applicationsAvailability": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "title": "EcommerceData represents the ecommerce data found for a business"
    },
    "v1EcommerceDataCompetitor": {
      "type": "object",
      "properties": {
        "website": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "ecommerceSolution": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "onlinePayments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "adRetargeting": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        },
        "appointmentScheduling": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Application"
          }
        }
      }
    },
    "v1EcommerceSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The overall grade for the ecommerce section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1EcommerceData"
        },
        "config": {
          "$ref": "#/definitions/v1EcommerceConfig"
        }
      },
      "title": "EcommerceSection represents the entire ecommerce section of a snapshot"
    },
    "v1Email": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "greeting": {
          "type": "string"
        },
        "closing": {
          "type": "string"
        },
        "buttonText": {
          "type": "string"
        }
      }
    },
    "v1FacebookPost": {
      "type": "object",
      "properties": {
        "profileImageUrl": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "posted": {
          "type": "string",
          "format": "date-time"
        },
        "postText": {
          "type": "string"
        },
        "postUrl": {
          "type": "string"
        }
      }
    },
    "v1FloatRange": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "number",
          "format": "float"
        },
        "maximum": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "Holds min / max values for a keyword"
    },
    "v1GMBClaimStatus": {
      "type": "string",
      "enum": [
        "GMB_CLAIM_STATUS_INVALID",
        "GMB_CLAIM_STATUS_UNKNOWN",
        "GMB_CLAIM_STATUS_CLAIMED",
        "GMB_CLAIM_STATUS_UNCLAIMED"
      ],
      "default": "GMB_CLAIM_STATUS_INVALID"
    },
    "v1GenerateMessageResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1Role"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "v1GeneratePDFResponse": {
      "type": "object",
      "properties": {
        "pdf": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1GetAdvertisingSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1AdvertisingSection"
        }
      }
    },
    "v1GetAvailableListingSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AvailableListingSource"
          }
        }
      }
    },
    "v1GetBusinessIDFromSalesforceIDResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The id of the business"
        }
      }
    },
    "v1GetCurrentResponse": {
      "type": "object",
      "properties": {
        "snapshot": {
          "$ref": "#/definitions/v1Current",
          "title": "The current snapshot"
        }
      }
    },
    "v1GetDirectCompetitorsResponse": {
      "type": "object",
      "properties": {
        "directCompetitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DirectCompetitor"
          }
        }
      }
    },
    "v1GetEcommerceSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1EcommerceSection"
        }
      }
    },
    "v1GetFreeSnapshotsRemainingResponse": {
      "type": "object",
      "properties": {
        "freeSnapshotsRemaining": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetLatestSnapshotIDResponse": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "The id to assign to the latest snapshot report."
        }
      }
    },
    "v1GetListingScanResponse": {
      "type": "object",
      "properties": {
        "listingScan": {
          "$ref": "#/definitions/v1ListingScan"
        }
      }
    },
    "v1GetListingSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1ListingSection"
        }
      }
    },
    "v1GetMultiTechnologyCategoryResponse": {
      "type": "object",
      "properties": {
        "technologyCategories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TechnologyCategory"
          }
        }
      }
    },
    "v1GetMultiTechnologyResponse": {
      "type": "object",
      "properties": {
        "technologies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Technology"
          }
        }
      }
    },
    "v1GetReviewSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1ReviewSection"
        }
      }
    },
    "v1GetSEOSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1SEOSection"
        }
      }
    },
    "v1GetSalesPersonResponse": {
      "type": "object",
      "properties": {
        "salesPerson": {
          "$ref": "#/definitions/v1SalesPerson"
        }
      }
    },
    "v1GetSectionAvailabilityResponse": {
      "type": "object",
      "properties": {
        "isAvailable": {
          "type": "boolean",
          "title": "Returns true if the section is available in the snapshot"
        }
      }
    },
    "v1GetSnapshotCountCreatedBySalespersonIDResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "title": "Count for how many snapshot created by specific salesperson ID"
        }
      }
    },
    "v1GetSnapshotIDResponse": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "The opaque snapshot id to get the snapshot with to edit the default configs\nThere are no guarantees on the structure of this id, and it may change at any time\nyou should treat is as an opaque random string and not try to build it manually"
        }
      }
    },
    "v1GetSnapshotLiteResponse": {
      "type": "object",
      "properties": {
        "snapshot": {
          "$ref": "#/definitions/v1SnapshotLite"
        }
      }
    },
    "v1GetSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshot": {
          "$ref": "#/definitions/v1Snapshot"
        }
      }
    },
    "v1GetSocialSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1SocialSection"
        }
      }
    },
    "v1GetSummaryResponse": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "The snapshot to get a summary for"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID that the snapshot belongs to"
        },
        "companyName": {
          "type": "string",
          "title": "The company name for the snapshot's Business"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The created date of the snapshot"
        },
        "expired": {
          "type": "string",
          "format": "date-time",
          "title": "The expiration date of the snapshot"
        },
        "score": {
          "type": "string",
          "title": "The snapshot's overall score"
        },
        "sections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SectionSummary"
          },
          "title": "A summary of each individual section of the report"
        },
        "location": {
          "$ref": "#/definitions/snapshotv1Location",
          "title": "Location information for the business"
        }
      }
    },
    "v1GetTechnologyResponse": {
      "type": "object",
      "properties": {
        "technology": {
          "$ref": "#/definitions/v1Technology"
        }
      }
    },
    "v1GetTechnologySectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1TechnologySection"
        }
      }
    },
    "v1GetWebsiteSectionResponse": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1WebsiteSection"
        }
      }
    },
    "v1GetWhitelabelResponse": {
      "type": "object",
      "properties": {
        "branding": {
          "$ref": "#/definitions/v1Branding"
        }
      }
    },
    "v1GlobalConfig": {
      "type": "object",
      "properties": {
        "hideGrades": {
          "type": "boolean",
          "title": "Whether or not to hide all grades"
        },
        "videoStyle": {
          "$ref": "#/definitions/v1VideoStyle",
          "title": "The type of videos to show"
        },
        "hideImages": {
          "type": "boolean",
          "title": "Whether or not to hide images"
        },
        "enabledSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalConfigEnabledSection"
          },
          "title": "The sections enabled and the order to display them in"
        },
        "locale": {
          "type": "string",
          "title": "The locale this snapshot should render in"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/snapshotv1Competitor"
          },
          "title": "competitors used in snapshot reports"
        },
        "hideSubsectionGrades": {
          "type": "boolean",
          "title": "Whether or not to hide subsection grades"
        },
        "hideScheduleMeetingOption": {
          "type": "boolean",
          "title": "Whether or not to hide the ability to schedule a meeting with a salesperson"
        },
        "competitionAnalysis": {
          "$ref": "#/definitions/v1CompetitionAnalysis",
          "title": "The type of competition analysis"
        },
        "customizedFooterCtaLabel": {
          "type": "string",
          "title": "primary action customization"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        }
      },
      "title": "GlobalConfig is the global config for a snapshot"
    },
    "v1Grade": {
      "type": "string",
      "enum": [
        "NO_GRADE",
        "A",
        "B",
        "C",
        "D",
        "F"
      ],
      "default": "NO_GRADE",
      "title": "Available grades of a snapshot report or section"
    },
    "v1HomepageData": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "sizeIndustryAverage": {
          "type": "string",
          "format": "int64"
        },
        "facebookPresent": {
          "type": "boolean"
        },
        "facebookPresentIndustryAverage": {
          "type": "number",
          "format": "float"
        },
        "twitterPresent": {
          "type": "boolean"
        },
        "twitterPresentIndustryAverage": {
          "type": "number",
          "format": "float"
        },
        "addressPresent": {
          "type": "boolean"
        },
        "addressPresentIndustryAverage": {
          "type": "number",
          "format": "float"
        },
        "phonePresent": {
          "type": "boolean"
        },
        "phonePresentIndustryAverage": {
          "type": "number",
          "format": "float"
        },
        "score": {
          "type": "string",
          "format": "int64"
        },
        "sizeIndustryPercentiles": {
          "$ref": "#/definitions/v1IndustryPercentiles"
        },
        "videoPresent": {
          "type": "boolean"
        },
        "videoPresentIndustryAverage": {
          "type": "number",
          "format": "float"
        },
        "instagramPresent": {
          "type": "boolean"
        },
        "instagramPresentIndustryAverage": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "HomepageData represents information about the businesses website"
    },
    "v1Impressions": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "impressionsPerMonth": {
          "$ref": "#/definitions/v1FloatRange"
        }
      },
      "title": "Impressions for a keyword"
    },
    "v1InaccurateData": {
      "type": "object",
      "properties": {
        "inaccurateCount": {
          "type": "string",
          "format": "int64"
        },
        "exampleData": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "exampleListingUrl": {
          "type": "string"
        }
      }
    },
    "v1IndustryPercentiles": {
      "type": "object",
      "properties": {
        "fortieth": {
          "type": "number",
          "format": "float"
        },
        "fiftieth": {
          "type": "number",
          "format": "float"
        },
        "fiftyFifth": {
          "type": "number",
          "format": "float"
        },
        "seventyFifth": {
          "type": "number",
          "format": "float"
        },
        "ninetieth": {
          "type": "number",
          "format": "float"
        },
        "ninetyFifth": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "IndustryPercentiles are important percentile values for a statistic"
    },
    "v1InferredFields": {
      "type": "object",
      "properties": {
        "website": {
          "type": "string",
          "title": "The business inferred website"
        }
      }
    },
    "v1IntRange": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "string",
          "format": "int64"
        },
        "maximum": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Holds min / max values for a keyword"
    },
    "v1Keyword": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "matchType": {
          "$ref": "#/definitions/KeywordMatchType",
          "title": "The type of match to perform"
        }
      },
      "title": "Represents an adwords keyword"
    },
    "v1KeywordMetrics": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string",
          "title": "Domain of the business"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Keyword"
          }
        }
      },
      "title": "KeywordMetrics represents organic keywords a business ranks on"
    },
    "v1LanguageConfig": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        },
        "videoStyle": {
          "$ref": "#/definitions/v1VideoStyle"
        }
      }
    },
    "v1LatLng": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1ListingAccuracy": {
      "type": "object",
      "properties": {
        "accurateListings": {
          "type": "number",
          "format": "float"
        },
        "industryAverageAccurateListings": {
          "type": "number",
          "format": "float"
        },
        "incorrectPhoneNumber": {
          "$ref": "#/definitions/v1InaccurateData"
        },
        "missingPhoneNumber": {
          "$ref": "#/definitions/v1InaccurateData"
        },
        "incorrectAddress": {
          "$ref": "#/definitions/v1InaccurateData"
        },
        "missingAddress": {
          "$ref": "#/definitions/v1InaccurateData"
        },
        "incorrectWebsite": {
          "$ref": "#/definitions/v1InaccurateData"
        },
        "missingWebsite": {
          "$ref": "#/definitions/v1InaccurateData"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListingAccuracyCompetitor"
          }
        }
      }
    },
    "v1ListingAccuracyCompetitor": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "accurateListings": {
          "type": "number",
          "format": "float"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListingConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideListingPresence": {
          "type": "boolean"
        },
        "hideListingPresenceFacebook": {
          "type": "boolean"
        },
        "hideListingPresenceTwitter": {
          "type": "boolean"
        },
        "hideListingPresenceGoogle": {
          "type": "boolean"
        },
        "hideListingPresenceMissing": {
          "type": "boolean"
        },
        "hideListingAccuracy": {
          "type": "boolean"
        },
        "hideListingAccuracyMissingPhone": {
          "type": "boolean"
        },
        "hideListingAccuracyIncorrectPhone": {
          "type": "boolean"
        },
        "hideListingAccuracyMissingAddress": {
          "type": "boolean"
        },
        "hideListingAccuracyIncorrectAddress": {
          "type": "boolean"
        },
        "hideListingAccuracyMissingWebsite": {
          "type": "boolean"
        },
        "hideListingAccuracyIncorrectWebsite": {
          "type": "boolean"
        },
        "hideListingDistribution": {
          "type": "boolean"
        },
        "hideListingDistributionContent": {
          "type": "boolean"
        },
        "customizedListingDistributionMessage": {
          "type": "string"
        },
        "hideListingPresenceFoursquare": {
          "type": "boolean"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "hideListingScan": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        },
        "hideListingDetails": {
          "type": "boolean"
        },
        "hideListingPresenceInstagram": {
          "type": "boolean"
        },
        "listingPresenceVersion": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "ListingConfig represents the configuration for the listings section"
    },
    "v1ListingData": {
      "type": "object",
      "properties": {
        "listingPresence": {
          "$ref": "#/definitions/v1ListingPresence"
        },
        "listingAccuracy": {
          "$ref": "#/definitions/v1ListingAccuracy"
        },
        "dataProviderAccuracy": {
          "$ref": "#/definitions/v1DataProviderAccuracy"
        },
        "listingScan": {
          "$ref": "#/definitions/v1ListingScan"
        },
        "listings": {
          "$ref": "#/definitions/v1Listings"
        }
      },
      "title": "ListingData represents the listing data found for a business and related industry averages"
    },
    "v1ListingListingStatus": {
      "type": "string",
      "enum": [
        "ACCURATE",
        "INACCURATE",
        "NOT_FOUND"
      ],
      "default": "ACCURATE"
    },
    "v1ListingPresence": {
      "type": "object",
      "properties": {
        "foundCount": {
          "type": "string",
          "format": "int64"
        },
        "industryAverageFound": {
          "type": "number",
          "format": "float"
        },
        "facebook": {
          "$ref": "#/definitions/v1ListingSource"
        },
        "twitter": {
          "$ref": "#/definitions/v1ListingSource"
        },
        "foursquare": {
          "$ref": "#/definitions/v1ListingSource"
        },
        "google": {
          "$ref": "#/definitions/v1ListingSource"
        },
        "availableSources": {
          "type": "string",
          "format": "int64"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListingPresenceCompetitor"
          }
        },
        "instagram": {
          "$ref": "#/definitions/v1ListingSource"
        }
      }
    },
    "v1ListingPresenceCompetitor": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "foundCount": {
          "type": "string",
          "format": "int64"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListingScan": {
      "type": "object",
      "properties": {
        "listings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Listing"
          }
        }
      }
    },
    "v1ListingSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The Overall grade of the listings section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1ListingData"
        },
        "config": {
          "$ref": "#/definitions/v1ListingConfig"
        },
        "listingDistributionContent": {
          "$ref": "#/definitions/v1SectionContent"
        }
      },
      "title": "ListingSection represents the entire listings section of a snapshot"
    },
    "v1ListingSource": {
      "type": "object",
      "properties": {
        "foundCount": {
          "type": "string",
          "format": "int64"
        },
        "exampleListingUrl": {
          "type": "string"
        },
        "industryAverageFound": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1ListingV2": {
      "type": "object",
      "properties": {
        "companyName": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "address": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "city": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "state": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "zip": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "website": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "phone": {
          "$ref": "#/definitions/ListingV2ListingField"
        },
        "listingUrl": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ListingV2ListingStatus"
        },
        "source": {
          "$ref": "#/definitions/ListingV2Source"
        }
      }
    },
    "v1ListingV2ListingStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "ACCURATE",
        "INACCURATE",
        "NOT_FOUND"
      ],
      "default": "UNSPECIFIED"
    },
    "v1Listings": {
      "type": "object",
      "properties": {
        "percentageBusinessesWithFacebookpage": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithGoogleplus": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithTwitter": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithFoursquare": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithInstagram": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1LocalSEOData": {
      "type": "object",
      "properties": {
        "searches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SERPMetrics"
          }
        },
        "grade": {
          "$ref": "#/definitions/v1Grade"
        },
        "status": {
          "$ref": "#/definitions/snapshotv1Status"
        },
        "searchKeyword": {
          "type": "string"
        }
      }
    },
    "v1OrganicDomainData": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1SEODomainMetrics"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEODomainMetrics"
          }
        },
        "grade": {
          "$ref": "#/definitions/v1Grade"
        }
      },
      "title": "OrganicDomainData represents organic SEO domain metrics for a business and its competitors"
    },
    "v1OrganicKeywordData": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1KeywordMetrics"
        }
      },
      "title": "OrganicKeywordData represents organic SEO keyword metrics for a business"
    },
    "v1PayPerClickData": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1DomainMetrics"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DomainMetrics"
          }
        },
        "grade": {
          "$ref": "#/definitions/v1Grade"
        }
      },
      "title": "PayPerClickData represents spyfu domain metrics for a business and its competitors"
    },
    "v1PreviewEmailResponse": {
      "type": "object",
      "properties": {
        "renderedTemplate": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1PreviewRefreshSnapshotForBusinessesResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "title": "Total count of businesses"
        },
        "toRefresh": {
          "type": "string",
          "format": "int64",
          "title": "Count of existing snapshots that would be refreshed for a business"
        },
        "toCreate": {
          "type": "string",
          "format": "int64",
          "title": "Count of snapshots that would be created for a business"
        },
        "unaffected": {
          "type": "string",
          "format": "int64",
          "description": "Count of businesses that will not have snapshots refreshed or created."
        }
      }
    },
    "v1ProvisionSnapshotOptions": {
      "type": "object",
      "properties": {
        "inferMissingData": {
          "type": "boolean",
          "title": "infer missing data for a business"
        }
      }
    },
    "v1ProvisionSnapshotResponse": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "title": "The ID for the snapshot"
        }
      }
    },
    "v1Record": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "The DNS record type (CNAME, A, AAAA, TXT)"
        },
        "subdomain": {
          "type": "string",
          "title": "The subdomain entry"
        },
        "value": {
          "type": "string",
          "title": "The expected value of the record"
        },
        "currentValue": {
          "type": "string",
          "title": "The actual value of the record"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicator of a match bettween current ane expected"
        }
      }
    },
    "v1Results": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rank": {
          "type": "string",
          "format": "int64"
        },
        "isMainBusiness": {
          "type": "boolean"
        },
        "reviews": {
          "$ref": "#/definitions/ResultsReviews"
        },
        "phoneNumber": {
          "type": "string"
        },
        "claimStatus": {
          "$ref": "#/definitions/v1GMBClaimStatus"
        }
      }
    },
    "v1ReviewConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "hideReviewsFound": {
          "type": "boolean"
        },
        "hideReviewsFoundPerMonth": {
          "type": "boolean"
        },
        "hideAverageReviewScore": {
          "type": "boolean"
        },
        "hideNumberOfReviewSources": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        }
      },
      "title": "ReviewConfig represents the configuration for the review section"
    },
    "v1ReviewData": {
      "type": "object",
      "properties": {
        "reviewsFound": {
          "$ref": "#/definitions/v1ReviewDataItem"
        },
        "reviewsFoundPerMonth": {
          "$ref": "#/definitions/v1ReviewDataItem"
        },
        "averageReviewScore": {
          "$ref": "#/definitions/v1ReviewDataItem"
        },
        "numberOfReviewSources": {
          "$ref": "#/definitions/v1ReviewDataItem"
        },
        "sampleSourceCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SampleSourceCount"
          }
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewDataCompetitor"
          }
        }
      },
      "title": "ReviewData represents the review data found for a business and related industry averages"
    },
    "v1ReviewDataCompetitor": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "reviewsFound": {
          "type": "number",
          "format": "float"
        },
        "averageReviewScore": {
          "type": "number",
          "format": "float"
        },
        "numberOfReviewSources": {
          "type": "number",
          "format": "float"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "reviewsFoundPerMonth": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1ReviewDataItem": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The grade of the item"
        },
        "business": {
          "type": "number",
          "format": "float",
          "title": "The value of the item for a business"
        },
        "industryAverage": {
          "type": "number",
          "format": "float",
          "title": "The industry average"
        },
        "industryLeader": {
          "type": "number",
          "format": "float",
          "title": "The industry leader"
        }
      },
      "title": "ReviewDataItem is a holder for each row of the info section"
    },
    "v1ReviewSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The overall grade for the review section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1ReviewData"
        },
        "config": {
          "$ref": "#/definitions/v1ReviewConfig"
        }
      },
      "title": "ReviewSection represents the entire review section of a snapshot"
    },
    "v1RuleDetail": {
      "type": "object",
      "properties": {
        "titleHtml": {
          "type": "string"
        },
        "detailItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "RuleDetail is the individual detail about a pagespeed insights rule"
    },
    "v1RuleSummary": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Rule"
          }
        },
        "locale": {
          "type": "string"
        },
        "score": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "RuleSummary contains a grade and pagespeed insight rules"
    },
    "v1SEOConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "hideOrganicSeoData": {
          "type": "boolean"
        },
        "hideOrganicKeywordData": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        },
        "hideLocalSeoData": {
          "type": "boolean"
        },
        "customKeyword": {
          "type": "string",
          "title": "keyword that can be customized for use in local seo searches"
        }
      },
      "title": "SEOConfig represents the configuration for the SEO section"
    },
    "v1SEOData": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string",
          "title": "Deprecated: use SEODataSummary"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "Deprecated: use SEODataSummary"
        },
        "localRank": {
          "type": "number",
          "format": "double",
          "title": "Deprecated: use SEODataSummary"
        },
        "organicRank": {
          "type": "number",
          "format": "double",
          "title": "Deprecated: use SEODataSummary"
        },
        "difficulty": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use SEODataSummary"
        },
        "searchVolume": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use SEODataSummary"
        },
        "localSearches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalSearchData"
          },
          "title": "Deprecated: use LocalSearchData"
        },
        "searchRadius": {
          "type": "number",
          "format": "double",
          "title": "Deprecated: use SEODataSummary"
        },
        "workflowUrl": {
          "type": "string",
          "title": "Deprecated: use SEODataSummary"
        }
      },
      "title": "Deprecated: use SEODataSummary & LocalSearchData"
    },
    "v1SEODomainMetrics": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string",
          "title": "Domain of the business"
        },
        "numberOfOrganicKeywords": {
          "type": "string",
          "format": "int64"
        },
        "organicClicksPerMonth": {
          "type": "string",
          "format": "int64"
        },
        "dailyOrganicTrafficValue": {
          "type": "string",
          "format": "int64"
        },
        "organicDomainRanking": {
          "type": "string",
          "format": "int64"
        },
        "overlap": {
          "type": "number",
          "format": "float",
          "title": "Overlap with the primary business"
        },
        "valuePerClick": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "SEODomainMetrics represents the SEO domain metrics for a business"
    },
    "v1SEOSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The overall grade of the seo section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent",
          "title": "Content for the SEO section"
        },
        "data": {
          "$ref": "#/definitions/v1SEOData",
          "title": "Data for the SEO section"
        },
        "config": {
          "$ref": "#/definitions/v1SEOConfig",
          "title": "Config for the SEO section"
        }
      },
      "title": "SEOSection represents the entire SEO section of a snapshot"
    },
    "v1SERPMetrics": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "vicinity": {
          "$ref": "#/definitions/v1Vicinity"
        },
        "searchLocation": {
          "$ref": "#/definitions/v1LatLng"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Results"
          }
        }
      }
    },
    "v1SSLSummary": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1SSLSummaryStatus"
        }
      }
    },
    "v1SSLSummaryStatus": {
      "type": "string",
      "enum": [
        "SSL_SUMMARY_STATUS_UNDETERMINED",
        "SSL_SUMMARY_STATUS_INVALID",
        "SSL_SUMMARY_STATUS_VALID"
      ],
      "default": "SSL_SUMMARY_STATUS_UNDETERMINED"
    },
    "v1SalesPerson": {
      "type": "object",
      "properties": {
        "salesPersonId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "photoUrl": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "coverPageTitle": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      },
      "title": "SalesPerson contains the sales person information for the business of a report"
    },
    "v1SampleSourceCount": {
      "type": "object",
      "properties": {
        "sourceName": {
          "type": "string"
        },
        "reviewCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Section": {
      "type": "string",
      "enum": [
        "REVIEWS",
        "LISTINGS",
        "SOCIAL",
        "WEBSITE",
        "ADVERTISING",
        "SNAPSHOT",
        "SEO",
        "ECOMMERCE",
        "TECHNOLOGY"
      ],
      "default": "REVIEWS",
      "title": "Available report sections"
    },
    "v1SectionContent": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "The message_id is calculated based off the data of the section and corresponds to the message content to show.\nIf customized message on the section is set, that should override this message id"
        },
        "videoId": {
          "type": "string",
          "title": "The video_id is calculated based of the data of the section and corresponds to the video to show.\nThis video id does not take into account the language setting of the snapshot report and"
        },
        "footerMessageId": {
          "type": "string",
          "description": "The footer_message_id is calculated based of the data of the section and corresponds to the footer message to show."
        }
      },
      "title": "SectionContent contains the meta information for each section of the report"
    },
    "v1SectionSummary": {
      "type": "object",
      "properties": {
        "sectionName": {
          "type": "string",
          "title": "A human readable string with the section name"
        },
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The grade assigned to the section"
        },
        "sectionId": {
          "$ref": "#/definitions/v1Section",
          "title": "An enum indicating the section"
        }
      }
    },
    "v1SnapshotData": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "website": {
          "type": "string"
        },
        "taxonomyId": {
          "type": "string"
        },
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taxonomyName": {
          "type": "string",
          "title": "The display name of the taxonomy id"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "facebookUrl": {
          "type": "string"
        },
        "twitterUrl": {
          "type": "string"
        },
        "instagramUrl": {
          "type": "string"
        },
        "serviceAreaBusiness": {
          "type": "boolean"
        },
        "inferredFields": {
          "$ref": "#/definitions/v1InferredFields"
        },
        "vcategoryId": {
          "type": "string",
          "title": "the vCategory of the business (main category)"
        }
      },
      "title": "SnapshotData is data that belongs to the snapshot itself and not any one section"
    },
    "v1SnapshotLite": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1Business",
          "title": "The business of this snapshot"
        },
        "salesPerson": {
          "$ref": "#/definitions/v1SalesPerson",
          "title": "The salesperson of this snapshot"
        }
      }
    },
    "v1SocialConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideFacebook": {
          "type": "boolean"
        },
        "hideFacebookLikes": {
          "type": "boolean"
        },
        "hideFacebookPosts": {
          "type": "boolean"
        },
        "hideFacebookAverageLikesPerPost": {
          "type": "boolean"
        },
        "hideFacebookAverageSharesPerPost": {
          "type": "boolean"
        },
        "hideFacebookSelectedPost": {
          "type": "boolean"
        },
        "selectedFacebookPost": {
          "$ref": "#/definitions/v1FacebookPost",
          "title": "The facebook post that has been manually chosen to share if this is empty and hide_facebook_selected_post is true use the first recent_posts from SocialData"
        },
        "hideTwitter": {
          "type": "boolean"
        },
        "hideTwitterFollowers": {
          "type": "boolean"
        },
        "hideTwitterFollowing": {
          "type": "boolean"
        },
        "hideTwitterTweets": {
          "type": "boolean"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "hideInstagram": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        }
      },
      "title": "SocialConfig represents the configuration for the social section"
    },
    "v1SocialData": {
      "type": "object",
      "properties": {
        "facebookData": {
          "$ref": "#/definitions/snapshotv1FacebookData"
        },
        "twitterData": {
          "$ref": "#/definitions/snapshotv1TwitterData"
        },
        "instagramData": {
          "$ref": "#/definitions/snapshotv1InstagramData"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialDataCompetitor"
          }
        }
      },
      "title": "SocialData represents the social data found for a business and related industry averages"
    },
    "v1SocialDataCompetitor": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "facebookData": {
          "$ref": "#/definitions/SocialDataCompetitorFacebookData"
        },
        "twitterData": {
          "$ref": "#/definitions/SocialDataCompetitorTwitterData"
        },
        "instagramData": {
          "$ref": "#/definitions/SocialDataCompetitorInstagramData"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SocialDataItem": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The grade of the item"
        },
        "business": {
          "type": "number",
          "format": "float",
          "title": "The value of the item for a business"
        },
        "industryAverage": {
          "type": "number",
          "format": "float",
          "title": "The industry average"
        },
        "industryLeader": {
          "type": "number",
          "format": "float",
          "title": "The industry leader"
        }
      },
      "title": "SocialDataItem is a holder for each row of the info section"
    },
    "v1SocialSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The Overall grade of the social section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1SocialData"
        },
        "config": {
          "$ref": "#/definitions/v1SocialConfig"
        }
      },
      "title": "SocialSection represents the entire social section of a snapshot"
    },
    "v1Technology": {
      "type": "object",
      "properties": {
        "technologyId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "website": {
          "type": "string"
        },
        "iconName": {
          "type": "string"
        }
      }
    },
    "v1TechnologyCategory": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1TechnologyConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        }
      },
      "title": "TechnologyConfig represents the configuration for the technology section"
    },
    "v1TechnologyData": {
      "type": "object",
      "properties": {
        "technologyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "TechnologyData represents the technology section data found for a business' website"
    },
    "v1TechnologySection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1TechnologyData"
        },
        "config": {
          "$ref": "#/definitions/v1TechnologyConfig"
        }
      },
      "title": "TechnologySection represents the entire technology section of a snapshot"
    },
    "v1URL": {
      "type": "object",
      "properties": {
        "secure": {
          "type": "string"
        },
        "insecure": {
          "type": "string"
        }
      },
      "title": "URL stores both secure/insecure versions of a URL"
    },
    "v1Vicinity": {
      "type": "string",
      "enum": [
        "VICINITY_UNDEFINED",
        "VICINITY_CITY",
        "VICINITY_A1",
        "VICINITY_A2",
        "VICINITY_A3",
        "VICINITY_A4",
        "VICINITY_A5",
        "VICINITY_B1",
        "VICINITY_B2",
        "VICINITY_B3",
        "VICINITY_B4",
        "VICINITY_B5",
        "VICINITY_C1",
        "VICINITY_C2",
        "VICINITY_C3",
        "VICINITY_C4",
        "VICINITY_C5",
        "VICINITY_D1",
        "VICINITY_D2",
        "VICINITY_D3",
        "VICINITY_D4",
        "VICINITY_D5",
        "VICINITY_E1",
        "VICINITY_E2",
        "VICINITY_E3",
        "VICINITY_E4",
        "VICINITY_E5"
      ],
      "default": "VICINITY_UNDEFINED"
    },
    "v1VideoStyle": {
      "type": "string",
      "enum": [
        "NO_VIDEOS",
        "NORTH_AMERICAN_LEGACY",
        "NORTH_AMERICAN",
        "AUSTRALIAN",
        "UNITED_KINGDOM",
        "SOUTH_AFRICA",
        "FRENCH"
      ],
      "default": "NO_VIDEOS",
      "description": "- NO_VIDEOS: Don't show videos\n - NORTH_AMERICAN_LEGACY: Show the legacy north american videos\n - NORTH_AMERICAN: Show the current north american videos\n - AUSTRALIAN: Show the australia videos\n - UNITED_KINGDOM: Show the UNITED_KINGDOM videos\n - SOUTH_AFRICA: Show the SOUTH_AFRICA videos\n - FRENCH: Show the FRENCH videos",
      "title": "The types of videos for the whole report"
    },
    "v1WebsiteConfig": {
      "type": "object",
      "properties": {
        "hideContent": {
          "type": "boolean"
        },
        "customizedMessage": {
          "type": "string"
        },
        "hideMissingWebsiteWarning": {
          "type": "boolean"
        },
        "hideMobile": {
          "type": "boolean"
        },
        "hideMobilePreview": {
          "type": "boolean"
        },
        "hideDesktop": {
          "type": "boolean"
        },
        "hideDesktopPreview": {
          "type": "boolean"
        },
        "hideHomepageContent": {
          "type": "boolean"
        },
        "hideFooter": {
          "type": "boolean"
        },
        "hideHomepageVideo": {
          "type": "boolean"
        },
        "customizedFooterMessage": {
          "type": "string"
        },
        "customizedFooterCtaLabel": {
          "type": "string"
        },
        "customizedFooterCtaTargetUrl": {
          "type": "string"
        },
        "customizedFooterCtaTargetProduct": {
          "type": "string"
        },
        "sectionVersion": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "WebsiteConfig represents the configuration for the website section"
    },
    "v1WebsiteData": {
      "type": "object",
      "properties": {
        "homepageData": {
          "$ref": "#/definitions/v1HomepageData"
        },
        "desktopSpeed": {
          "$ref": "#/definitions/v1RuleSummary",
          "title": "pagespeedinsights v3"
        },
        "mobileSpeed": {
          "$ref": "#/definitions/v1RuleSummary",
          "title": "pagespeedinsights v3"
        },
        "userExperience": {
          "$ref": "#/definitions/v1RuleSummary"
        },
        "mobileScreenshot": {
          "type": "string"
        },
        "desktopScreenshot": {
          "type": "string"
        },
        "mobileGrade": {
          "$ref": "#/definitions/v1Grade"
        },
        "mobileFriendly": {
          "type": "boolean"
        },
        "desktopInsights": {
          "$ref": "#/definitions/v1AuditSummary",
          "title": "pagespeedinsights v5"
        },
        "mobileInsights": {
          "$ref": "#/definitions/v1AuditSummary",
          "title": "pagespeedinsights v5"
        },
        "competitors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WebsiteDataCompetitor"
          }
        },
        "ssl": {
          "$ref": "#/definitions/v1SSLSummary"
        }
      },
      "title": "WebsiteData represents the website data found for a business and related industry averages"
    },
    "v1WebsiteDataCompetitor": {
      "type": "object",
      "properties": {
        "website": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "homepageData": {
          "$ref": "#/definitions/v1CompetitorHomepageData"
        }
      }
    },
    "v1WebsiteSection": {
      "type": "object",
      "properties": {
        "grade": {
          "$ref": "#/definitions/v1Grade",
          "title": "The Overall grade of the website section"
        },
        "content": {
          "$ref": "#/definitions/v1SectionContent"
        },
        "data": {
          "$ref": "#/definitions/v1WebsiteData"
        },
        "config": {
          "$ref": "#/definitions/v1WebsiteConfig"
        }
      },
      "title": "WebsiteSection represents the entire website section of a snapshot"
    },
    "GetMessageTemplateRequestHydrationOptions": {
      "type": "object",
      "properties": {
        "hydrationEntities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HydrationOptionsHydrationEntity"
          }
        }
      }
    },
    "GetMessageTemplateResponseHydrationInformation": {
      "type": "object",
      "properties": {
        "allFieldsHydrated": {
          "type": "boolean",
          "title": "If all dynamic fields in message template are hydrated"
        }
      }
    },
    "HydrationEntityEntityType": {
      "type": "string",
      "enum": [
        "ENTITY_TYPE_UNDEFINED",
        "ENTITY_TYPE_PARTNER",
        "ENTITY_TYPE_ACCOUNT_GROUP",
        "ENTITY_TYPE_CONTACT"
      ],
      "default": "ENTITY_TYPE_UNDEFINED"
    },
    "HydrationOptionsHydrationEntity": {
      "type": "object",
      "properties": {
        "entityType": {
          "$ref": "#/definitions/HydrationEntityEntityType",
          "title": "The entity type used to specify the type of entity id"
        },
        "entityId": {
          "type": "string",
          "title": "The id used to get hydration information\nSuch as, partner id used to get partner information to hydrate partner related dynamic fields in message template"
        }
      }
    },
    "ListMessagesRequestListMessagesFilters": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string"
        }
      }
    },
    "ListResponseEvaluationsResponseSummary": {
      "type": "object",
      "properties": {
        "feedbackThemes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SummaryTheme"
          },
          "title": "Feedback themes that are used to categorize the response evaluations"
        }
      },
      "title": "The summary of the response evaluations, only returned if `summarize` is true in the request\nThe summary is cached based on the `subject_participant` and `created_after` and `created_before` filters for 12 hours\nThe summary is not specific to the `paging_options`, it considers as many evaluations as possible within the time range"
    },
    "ListWidgetsRequestListWidgetsFilters": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The namespaces of the widgets e.g. \"ABC\", \"AG-123\"\nUse either namespace or options.namespaces"
        },
        "widgetTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The types of the widget e.g. \"inbox-pro\", \"my-listings\""
        }
      }
    },
    "LookupConversationsRequestLookupConversationsFilters": {
      "type": "object",
      "properties": {
        "internalParticipantId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the internal participant id (IAM or Contact)"
        },
        "location": {
          "$ref": "#/definitions/v1PlatformLocation",
          "title": "Deprecated: use origin_location instead"
        },
        "channel": {
          "$ref": "#/definitions/v1ConversationChannel"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Deprecated"
        },
        "externalConversationId": {
          "type": "string"
        },
        "originLocation": {
          "$ref": "#/definitions/v1PlatformLocation"
        },
        "originLocationExternalId": {
          "type": "string"
        }
      }
    },
    "LookupConversationsResponseConversations": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          }
        }
      }
    },
    "MetadataIdentifier": {
      "type": "string",
      "enum": [
        "METADATA_IDENTIFIER_UNDEFINED",
        "METADATA_IDENTIFIER_RECIPIENT",
        "METADATA_IDENTIFIER_SENDER",
        "METADATA_IDENTIFIER_CONVERSATION",
        "METADATA_IDENTIFIER_WHATSAPP_TEMPLATE"
      ],
      "default": "METADATA_IDENTIFIER_UNDEFINED"
    },
    "SummaryTheme": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the theme"
        },
        "description": {
          "type": "string",
          "title": "The description of the theme"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Examples of the theme, these are real examples of responses that are categorized under the theme"
        }
      }
    },
    "conversationv1AIConfiguration": {
      "type": "object",
      "properties": {
        "aiResponseEnabled": {
          "type": "boolean"
        },
        "willRespondAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "conversationv1Status": {
      "type": "string",
      "enum": [
        "ERROR",
        "WARNING",
        "INFO",
        "RESTRICTED"
      ],
      "default": "ERROR"
    },
    "v1AISystemMessage": {
      "type": "object",
      "properties": {
        "systemMessageId": {
          "type": "string",
          "title": "The id of the AI System Message"
        },
        "systemMessageBody": {
          "type": "string",
          "title": "The body of the AI System Message"
        },
        "iamUserId": {
          "type": "string",
          "title": "The IAM User ID of the user who last updated the AI System Message"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the AI System Message was updated"
        }
      }
    },
    "v1AddMultiParticipantsResponse": {
      "type": "object",
      "properties": {
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          }
        }
      }
    },
    "v1CapturedLead": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the lead"
        },
        "email": {
          "type": "string",
          "title": "The email address of the lead"
        },
        "phone": {
          "type": "string",
          "title": "The phone number of the lead"
        },
        "contactId": {
          "type": "string",
          "title": "The id of the CRM contact"
        }
      },
      "title": "The captured lead"
    },
    "v1ChannelAvailability": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/v1ConversationChannel"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChannelStatus"
          }
        }
      }
    },
    "v1ChannelStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/conversationv1Status"
        },
        "i18nKey": {
          "type": "string"
        }
      }
    },
    "v1ConfigurationAIConfiguration": {
      "type": "object",
      "properties": {
        "smsResponderEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1ConversationChannel": {
      "type": "string",
      "enum": [
        "CONVERSATION_CHANNEL_UNDEFINED",
        "CONVERSATION_CHANNEL_INTERNAL",
        "CONVERSATION_CHANNEL_SMS",
        "CONVERSATION_CHANNEL_FACEBOOK",
        "CONVERSATION_CHANNEL_GOOGLE_MESSAGES",
        "CONVERSATION_CHANNEL_OPENAI",
        "CONVERSATION_CHANNEL_EMAIL",
        "CONVERSATION_CHANNEL_GOOGLE_BUSINESS_COMMUNICATIONS",
        "CONVERSATION_CHANNEL_WEB_CHAT",
        "CONVERSATION_CHANNEL_INSTAGRAM",
        "CONVERSATION_CHANNEL_WHATSAPP",
        "CONVERSATION_CHANNEL_AI_ASSISTANT"
      ],
      "default": "CONVERSATION_CHANNEL_UNDEFINED"
    },
    "v1ConversationKey": {
      "type": "object",
      "properties": {
        "subjectParticipants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubjectParticipant"
          }
        },
        "channel": {
          "$ref": "#/definitions/v1ConversationChannel",
          "title": "Deprecated: Usage of this field will be ignored"
        },
        "originLocationExternalId": {
          "type": "string"
        }
      }
    },
    "v1ConversationMessageCount": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Deprecated"
    },
    "v1CreateMessageTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1MessageTemplate"
        }
      }
    },
    "v1CreateWidgetConversationResponse": {
      "type": "object",
      "properties": {
        "widgetParticipantToken": {
          "type": "string",
          "title": "The widget_participant_token containing data about the widget user"
        },
        "conversation": {
          "$ref": "#/definitions/v1Conversation",
          "title": "Conversation details"
        },
        "greetingMessageId": {
          "type": "string",
          "title": "The message id for the greeting message"
        }
      }
    },
    "v1CreateWidgetResponse": {
      "type": "object",
      "properties": {
        "widget": {
          "$ref": "#/definitions/v1Widget",
          "title": "The created widget"
        }
      }
    },
    "v1DataSources": {
      "type": "object",
      "properties": {
        "businessProfile": {
          "type": "boolean",
          "title": "Will be used to determine if a business profile data source should be associated"
        },
        "businessWebsite": {
          "type": "boolean",
          "title": "Will be used to determine if a business website data source should be associated\nThis will also depend on the business having their website field filled"
        }
      }
    },
    "v1EvaluateResponseType": {
      "type": "string",
      "enum": [
        "EVALUATION_RESPONSE_TYPE_UNSPECIFIED",
        "EVALUATION_RESPONSE_TYPE_EVENT",
        "EVALUATION_RESPONSE_TYPE_MESSAGE"
      ],
      "default": "EVALUATION_RESPONSE_TYPE_UNSPECIFIED"
    },
    "v1EvaluationSentiment": {
      "type": "string",
      "enum": [
        "EVALUATION_SENTIMENT_UNDEFINED",
        "EVALUATION_SENTIMENT_POSITIVE",
        "EVALUATION_SENTIMENT_NEGATIVE"
      ],
      "default": "EVALUATION_SENTIMENT_UNDEFINED"
    },
    "v1GetAISystemMessageResponse": {
      "type": "object",
      "properties": {
        "systemMessage": {
          "$ref": "#/definitions/v1AISystemMessage",
          "title": "The AI System Message"
        }
      }
    },
    "v1GetAvailableChannelsForConversationResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ConversationChannel"
          },
          "title": "Deprecated: The list of channels messages can be sent on"
        },
        "preferredChannel": {
          "$ref": "#/definitions/v1ConversationChannel"
        },
        "channelAvailabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChannelAvailability"
          }
        }
      }
    },
    "v1GetConversationByKeyResponse": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        }
      }
    },
    "v1GetConversationSummaryResponse": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        }
      }
    },
    "v1GetConversationViewsResponse": {
      "type": "object",
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1View"
          }
        }
      },
      "title": "GetConversationViewsResponse will return participant conversation views"
    },
    "v1GetMessageOptions": {
      "type": "object",
      "properties": {
        "includeOriginalContent": {
          "type": "boolean"
        }
      }
    },
    "v1GetMessageTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1MessageTemplate"
        },
        "hydrationInformation": {
          "$ref": "#/definitions/GetMessageTemplateResponseHydrationInformation"
        }
      }
    },
    "v1GetMultiConfigurationResponse": {
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Configuration"
          },
          "title": "The configurations for a list of subject participants"
        }
      },
      "title": "GetMultiConfigurationResponse will return multiple configurations for a given subject participants"
    },
    "v1GetMultiConversationDetailsResponse": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetMultiConversationDetailsResponseDetailedConversation"
          }
        }
      }
    },
    "v1GetMultiConversationDetailsResponseDetailedConversation": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "latestMessage": {
          "$ref": "#/definitions/v1Message",
          "title": "Deprecated: use latest_relevant_activity instead"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          }
        },
        "summary": {
          "type": "string"
        },
        "event": {
          "$ref": "#/definitions/v1Event"
        },
        "message": {
          "$ref": "#/definitions/v1Message"
        }
      }
    },
    "v1GetMultiConversationMessageCountResponse": {
      "type": "object",
      "properties": {
        "messageCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConversationMessageCount"
          },
          "title": "Deprecated: use counts instead"
        },
        "counts": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "v1GetMultiEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          },
          "title": "The list of events"
        }
      }
    },
    "v1GetMultiMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConversationMessages"
          }
        }
      },
      "title": "Response to a request to get multi messages for multi conversations"
    },
    "v1GetMultiParticipantsResponse": {
      "type": "object",
      "properties": {
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "list of participants"
        }
      }
    },
    "v1GetMultiWidgetMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Message"
          },
          "title": "The list of messages"
        }
      }
    },
    "v1GetMultiWidgetResponse": {
      "type": "object",
      "properties": {
        "widgets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Widget"
          }
        }
      }
    },
    "v1GetOwnerEmailResponse": {
      "type": "object",
      "properties": {
        "forwardingEmail": {
          "type": "string"
        }
      }
    },
    "v1GetParticipantsByKeyResponse": {
      "type": "object",
      "properties": {
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "list of participants\nDeprecated: use participant instead"
        },
        "participant": {
          "$ref": "#/definitions/v1Participant"
        }
      }
    },
    "v1GetWidgetConfigResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the widget, e.g. \"Mountain Media Support\""
        },
        "color": {
          "type": "string",
          "title": "A hex color code for the widget, e.g. \"#FF0000\""
        },
        "isEnabled": {
          "type": "boolean",
          "title": "Whether the webchat for the widget config is enabled"
        },
        "welcomeMessage": {
          "type": "string",
          "title": "The welcome message for the webchat for the widget config"
        },
        "textColor": {
          "type": "string",
          "title": "The text color for the widget"
        },
        "accentColor": {
          "type": "string",
          "title": "Accent color for the widget secondary elements"
        },
        "accentTextColor": {
          "type": "string",
          "title": "Accent text color for the widget secondary elements"
        },
        "skipContactCapture": {
          "type": "boolean",
          "title": "Deprecated: not meant to be used in the Web Chat client"
        },
        "widgetTopSpace": {
          "type": "string",
          "format": "int64",
          "title": "Height between the widget top and the screen in pixels"
        },
        "assistantName": {
          "type": "string",
          "title": "assistant_name is the name of the AI assistant"
        },
        "assistantAvatarUrl": {
          "type": "string",
          "title": "assistant_avatar_url is the url of the AI assistant avatar"
        },
        "position": {
          "$ref": "#/definitions/v1WidgetPosition",
          "title": "The position of the widget on the page"
        },
        "hideMobileCta": {
          "type": "boolean",
          "title": "Hide the popup CTA on mobile screens"
        },
        "customGreetingMessage": {
          "type": "string",
          "title": "The custom greeting message that shows up as first message"
        },
        "enableGreetingMessage": {
          "type": "boolean",
          "title": "Enable the greeting message from AI assistant"
        },
        "namespace": {
          "type": "string",
          "title": "The namespace of the widget e.g. \"ABC\", \"AG-123\""
        },
        "poweredByName": {
          "type": "string",
          "title": "The company name for the widget footer (either current namespace or parent namespace)"
        },
        "poweredByWebsite": {
          "type": "string",
          "title": "The company website for the widget footer (either current namespace or parent namespace)"
        },
        "showFooterContent": {
          "type": "boolean",
          "title": "Show the footer content on the widget (configured on the partner business app configuration)"
        }
      }
    },
    "v1GetWidgetConversationResponse": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation",
          "title": "Conversation details"
        }
      }
    },
    "v1GetWidgetResponse": {
      "type": "object",
      "properties": {
        "widget": {
          "$ref": "#/definitions/v1Widget",
          "title": "The retrieved widget"
        }
      }
    },
    "v1GlobalParticipantType": {
      "type": "string",
      "enum": [
        "GLOBAL_PARTICIPANT_TYPE_UNDEFINED",
        "GLOBAL_PARTICIPANT_TYPE_CUSTOMER",
        "GLOBAL_PARTICIPANT_TYPE_IAM_USER",
        "GLOBAL_PARTICIPANT_TYPE_ACCOUNT_GROUP",
        "GLOBAL_PARTICIPANT_TYPE_PARTNER",
        "GLOBAL_PARTICIPANT_TYPE_IAM_TEMPORARY_SUBJECT",
        "GLOBAL_PARTICIPANT_TYPE_DIGITAL_AGENT",
        "GLOBAL_PARTICIPANT_TYPE_VENDOR",
        "GLOBAL_PARTICIPANT_TYPE_OPENAI_BOT",
        "GLOBAL_PARTICIPANT_TYPE_ANONYMOUS",
        "GLOBAL_PARTICIPANT_TYPE_GROUP",
        "GLOBAL_PARTICIPANT_TYPE_AI_ASSISTANT"
      ],
      "default": "GLOBAL_PARTICIPANT_TYPE_UNDEFINED",
      "title": "Participant Type that replaces Type the Type enum in Participant message"
    },
    "v1KeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1LastSeenByParticipant": {
      "type": "object",
      "properties": {
        "participantId": {
          "type": "string"
        },
        "lastSeenTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1LatestMessageSentTimeBySubjectParticipant": {
      "type": "object",
      "properties": {
        "subjectParticipant": {
          "$ref": "#/definitions/v1SubjectParticipant"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListAISystemMessagesResponse": {
      "type": "object",
      "properties": {
        "aiSystemMessages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AISystemMessage"
          },
          "title": "The list of AI System Messages"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to fetch the next page of AI System Messages"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there are more AI System Messages to fetch"
        }
      }
    },
    "v1ListMessageTemplateResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MessageTemplate"
          },
          "title": "All message templates for a given SubjectParticipant"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Message"
          },
          "title": "The page of listed messages"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor for the next page"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there is another page"
        }
      },
      "title": "Response to a request to get a list of messages"
    },
    "v1ListResponseEvaluationsResponse": {
      "type": "object",
      "properties": {
        "evaluations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResponseEvaluation"
          },
          "title": "The list of response evaluations"
        },
        "summary": {
          "$ref": "#/definitions/ListResponseEvaluationsResponseSummary",
          "title": "The summary of the response evaluations generated by AI"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging metadata for the request"
        }
      }
    },
    "v1ListWidgetsResponse": {
      "type": "object",
      "properties": {
        "widgets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Widget"
          },
          "title": "The list of widgets"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1LookupConversationsResponse": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LookupConversationsResponseConversations"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1Message": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string",
          "title": "The id of the conversation"
        },
        "messageId": {
          "type": "string",
          "title": "The id of the message"
        },
        "channelType": {
          "$ref": "#/definitions/v1ChannelType",
          "title": "The type of channel"
        },
        "participant": {
          "$ref": "#/definitions/smsv1Participant",
          "title": "The participant of the message"
        },
        "body": {
          "type": "string",
          "title": "The body of the message"
        },
        "status": {
          "$ref": "#/definitions/smsv1Status",
          "title": "The status of the message"
        },
        "errorCode": {
          "$ref": "#/definitions/v1ErrorCode",
          "title": "The error code of the message"
        },
        "removed": {
          "type": "string",
          "format": "date-time",
          "title": "The removed time of the message"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The created time of the message"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The updated time of the message"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The deleted time of the message"
        },
        "media": {
          "type": "string",
          "title": "A json encoded string of the media on a message"
        }
      },
      "title": "Message represents a conversation message model"
    },
    "v1MessageStatus": {
      "type": "string",
      "enum": [
        "MESSAGE_STATUS_NOT_READ",
        "MESSAGE_STATUS_READ",
        "MESSAGE_STATUS_SENT",
        "MESSAGE_STATUS_DELIVERED",
        "MESSAGE_STATUS_FAILED",
        "MESSAGE_STATUS_UNDELIVERED",
        "MESSAGE_STATUS_SENDING"
      ],
      "default": "MESSAGE_STATUS_NOT_READ",
      "title": "MessageStatus represents the status a message is"
    },
    "v1MessageTemplate": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "A unique RESTful identifier. The format will be used for providing template\ndiscoverability and categorizing them.\nExample: /business-id/AG-123/template-id/TEMPLATE-123"
        },
        "name": {
          "type": "string",
          "title": "Template friendly name"
        },
        "content": {
          "type": "string",
          "title": "Template content"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Creation time"
        }
      }
    },
    "v1MessageType": {
      "type": "string",
      "enum": [
        "MESSAGE_TYPE_MESSAGE",
        "MESSAGE_TYPE_MEDIA",
        "MESSAGE_TYPE_SYSTEM",
        "MESSAGE_TYPE_FORM_SUBMISSION",
        "MESSAGE_TYPE_BOOKING_AVAILABILITY",
        "MESSAGE_TYPE_TEMPLATE"
      ],
      "default": "MESSAGE_TYPE_MESSAGE",
      "description": "- MESSAGE_TYPE_FORM_SUBMISSION: Form Submission messages have been moved to events",
      "title": "MessageType represents the type of a message"
    },
    "v1Metadata": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1NamespaceDetail": {
      "type": "object",
      "properties": {
        "participantType": {
          "$ref": "#/definitions/v1GlobalParticipantType"
        },
        "internalParticipantId": {
          "type": "string"
        }
      }
    },
    "v1NewInboxLeadCapturedResponse": {
      "type": "object"
    },
    "v1Participant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "title": "An email participant"
    },
    "v1ParticipantKey": {
      "type": "object",
      "properties": {
        "internalParticipantId": {
          "type": "string",
          "title": "the internal participant id (IAM or Contact)"
        },
        "partnerId": {
          "type": "string",
          "title": "partner ID"
        },
        "accountGroupId": {
          "type": "string",
          "title": "account group ID"
        },
        "location": {
          "$ref": "#/definitions/v1PlatformLocation",
          "title": "Deprecated"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ConversationChannel"
          },
          "title": "Deprecated"
        },
        "participantType": {
          "$ref": "#/definitions/v1GlobalParticipantType"
        },
        "namespaceHierarchy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NamespaceDetail"
          },
          "title": "the namespace hierarchy of the participant\nthis field is used to determine the organization hierarchy that the participant belongs to"
        }
      }
    },
    "v1ParticipantType": {
      "type": "string",
      "enum": [
        "PARTICIPANT_TYPE_UNDEFINED",
        "PARTICIPANT_TYPE_CUSTOMER",
        "PARTICIPANT_TYPE_IAM_USER",
        "PARTICIPANT_TYPE_ACCOUNT_GROUP",
        "PARTICIPANT_TYPE_PARTNER",
        "PARTICIPANT_TYPE_IAM_TEMPORARY_SUBJECT",
        "PARTICIPANT_TYPE_DIGITAL_AGENT",
        "PARTICIPANT_TYPE_VENDOR",
        "PARTICIPANT_TYPE_OPENAI_BOT",
        "PARTICIPANT_TYPE_ANONYMOUS",
        "PARTICIPANT_TYPE_GROUP",
        "PARTICIPANT_TYPE_AI_ASSISTANT"
      ],
      "default": "PARTICIPANT_TYPE_UNDEFINED",
      "title": "the participant type determines the type of a participant in a conversation"
    },
    "v1PlatformLocation": {
      "type": "string",
      "enum": [
        "PLATFORM_LOCATION_UNDEFINED",
        "PLATFORM_LOCATION_TASK_MANAGER",
        "PLATFORM_LOCATION_BUSINESS_APP",
        "PLATFORM_LOCATION_PARTNER_CENTER",
        "PLATFORM_LOCATION_SALES_CENTER"
      ],
      "default": "PLATFORM_LOCATION_UNDEFINED",
      "title": "Location where a comment is made"
    },
    "v1ProductFeature": {
      "type": "object",
      "properties": {
        "googleBusinessMessagesEnabled": {
          "type": "boolean",
          "title": "Determines if google business messages is available for the organization referred to by subject_participant"
        },
        "smsEnabled": {
          "type": "boolean",
          "title": "Determines if sms is available for the organization referred to by subject_participant"
        },
        "multiLocationEnabled": {
          "type": "boolean",
          "title": "Determine if Multi location is available for the organization referred to by subject_participant"
        },
        "webChatEnabled": {
          "type": "boolean",
          "title": "Determines if web chat is available for the organization referred to by subject_participant"
        },
        "facebookMessengerEnabled": {
          "type": "boolean",
          "title": "Determines if facebook messenger is available for the organization referred to by subject_participant"
        },
        "instagramMessagingEnabled": {
          "type": "boolean",
          "title": "Determines if instagram messaging is available for the organization referred to by subject_participant"
        },
        "aiSmsResponderEnabled": {
          "type": "boolean",
          "title": "Determines if ai sms responder is available for the organization referred to by subject_participant"
        },
        "whatsappEnabled": {
          "type": "boolean",
          "title": "Determines if whats app is available for the organization referred to by subject_participant"
        }
      }
    },
    "v1ResponseEvaluation": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "The message id of the response evaluation"
        },
        "conversationId": {
          "type": "string",
          "title": "The conversation id of the response evaluation"
        },
        "sentiment": {
          "$ref": "#/definitions/v1EvaluationSentiment",
          "title": "The sentiment of the response evaluation"
        },
        "comment": {
          "type": "string",
          "title": "The comment of the response evaluation"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time the response evaluation was created"
        },
        "subjectParticipants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubjectParticipant"
          },
          "title": "The subject participants associated the response evaluation's conversation"
        },
        "eventId": {
          "type": "string",
          "description": "The event id of the response evaluation; this will be empty if there is a message id."
        }
      }
    },
    "v1SearchConversationsResponse": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchConversationsResponseDetailedConversation"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1SearchConversationsResponseDetailedConversation": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "latestMessage": {
          "$ref": "#/definitions/v1Message"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          }
        }
      }
    },
    "v1SendMessageOptions": {
      "type": "object",
      "properties": {
        "runSync": {
          "type": "boolean",
          "title": "option to run sendMessage synchronously"
        }
      }
    },
    "v1SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "Message ID returned from the Facebook Graph messenger API"
        },
        "recipientId": {
          "type": "string",
          "title": "The id of the instagram user the message was sent to"
        }
      }
    },
    "v1SendStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1MessageStatus"
        },
        "reason": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SendWidgetMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "The unique identifier of the message"
        }
      }
    },
    "v1SetLastSeenRequestStatus": {
      "type": "string",
      "enum": [
        "SET_LAST_SEEN_REQUEST_STATUS_READ",
        "SET_LAST_SEEN_REQUEST_STATUS_UNREAD"
      ],
      "default": "SET_LAST_SEEN_REQUEST_STATUS_READ",
      "title": "LastSeenStatus"
    },
    "v1SetLastSeenResponse": {
      "type": "object",
      "properties": {
        "participant": {
          "$ref": "#/definitions/v1Participant"
        }
      }
    },
    "v1SubjectParticipant": {
      "type": "object",
      "properties": {
        "participantType": {
          "$ref": "#/definitions/v1GlobalParticipantType"
        },
        "internalParticipantId": {
          "type": "string",
          "title": "the internal participant id"
        }
      }
    },
    "v1SubjectParticipantKey": {
      "type": "object",
      "properties": {
        "subjectParticipantsKey": {
          "type": "string"
        },
        "subjectParticipants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubjectParticipant"
          },
          "title": "parsed from subject_participants_key"
        }
      }
    },
    "v1UpdateConversationResponse": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        }
      }
    },
    "v1UpdateMessageTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1MessageTemplate"
        }
      }
    },
    "v1UpdateWidgetResponse": {
      "type": "object",
      "properties": {
        "widget": {
          "$ref": "#/definitions/v1Widget",
          "title": "The updated widget"
        }
      }
    },
    "v1UpsertConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1Configuration",
          "title": "The updated configuration"
        }
      },
      "title": "UpsertConfigurationResponse is the response from creating or updating a a configuration"
    },
    "v1UpsertProductFeatureResponse": {
      "type": "object",
      "properties": {
        "productFeature": {
          "$ref": "#/definitions/v1ProductFeature",
          "title": "The product feature availability"
        }
      },
      "title": "UpsertProductFeatureResponse is the response from updating or creating product feature availability"
    },
    "v1View": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string",
          "title": "The view id"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the view was created at"
        }
      },
      "title": "View"
    },
    "v1Widget": {
      "type": "object",
      "properties": {
        "widgetId": {
          "type": "string",
          "description": "TODO(WARP-1442): replace above with openapiv2 annotations for generated docs",
          "title": "The id of the widget"
        },
        "name": {
          "type": "string",
          "title": "Name of the widget, e.g. \"Mountain Media Support\""
        },
        "namespace": {
          "type": "string",
          "title": "The id of the namespace, e.g. \"ABC\", \"AG-123\""
        },
        "color": {
          "type": "string",
          "title": "A hex color code for the widget, e.g. \"#FF0000\""
        },
        "allowedUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of urls that the widget is allowed to be embedded on"
        },
        "position": {
          "$ref": "#/definitions/v1WidgetPosition",
          "title": "The position of the widget on the page"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the widget was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp when the widget was updated"
        },
        "isEnabled": {
          "type": "boolean",
          "title": "Whether the webchat for the widget config is enabled"
        },
        "welcomeMessage": {
          "type": "string",
          "title": "The welcome message for the webchat for the widget config"
        },
        "textColor": {
          "type": "string",
          "title": "The primary text color for the widget"
        },
        "accentColor": {
          "type": "string",
          "title": "Accent color for the widget secondary elements"
        },
        "accentTextColor": {
          "type": "string",
          "title": "Accent text color for the widget secondary elements"
        },
        "skipContactCapture": {
          "type": "boolean",
          "title": "Whether the widget has contact capturing enabled"
        },
        "additionalPromptInstructions": {
          "type": "string",
          "title": "The prompt provided by a user to be used as additional instructions for the web chat AI assistant"
        },
        "assistantName": {
          "type": "string",
          "title": "The name of the AI assistant"
        },
        "assistantAvatarUrl": {
          "type": "string",
          "title": "The avatar URL of the AI assistant"
        },
        "embedHistory": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The history of widget installations (typically the domain/hostname of the referer URL the widget is embedded on)"
        },
        "hideMobileCta": {
          "type": "boolean",
          "title": "Hide the popup CTA on mobile screens"
        },
        "customGreetingMessage": {
          "type": "string",
          "title": "The custom greeting message that shows up as first message"
        },
        "enableGreetingMessage": {
          "type": "boolean",
          "title": "Enable the greeting message from AI assistant"
        }
      },
      "title": "TODO(WARP-1442): add openapiv2 annotations for generated docs"
    },
    "v1WidgetPosition": {
      "type": "string",
      "enum": [
        "WIDGET_POSITION_UNSPECIFIED",
        "WIDGET_POSITION_RIGHT",
        "WIDGET_POSITION_LEFT"
      ],
      "default": "WIDGET_POSITION_UNSPECIFIED",
      "title": "- WIDGET_POSITION_UNSPECIFIED: Unspecified widget position\n - WIDGET_POSITION_RIGHT: Widget position on the right side of the page\n - WIDGET_POSITION_LEFT: Widget position on the left side of the page"
    },
    "v1WidgetVisit": {
      "type": "object",
      "properties": {
        "visitorId": {
          "type": "string",
          "title": "The id of the visitor for tracking (long-lived user id of a visitor to a website hosting the widget)"
        },
        "visitId": {
          "type": "string",
          "title": "The id of the visit for tracking (short-lived \"session\" id of a visitor to a website hosting the widget)"
        }
      },
      "title": "Cookie \"session\" data for tracking a visitor to a website hosting the widget"
    },
    "CustomizationsOverallRatingDecimalPlaces": {
      "type": "string",
      "enum": [
        "OVERALL_RATING_DECIMAL_PLACES_NOT_SET",
        "OVERALL_RATING_DECIMAL_PLACES_1",
        "OVERALL_RATING_DECIMAL_PLACES_2"
      ],
      "default": "OVERALL_RATING_DECIMAL_PLACES_NOT_SET",
      "title": "How many decimal places to show for the overall rating"
    },
    "ListNetPromoterScoresRequestFilters": {
      "type": "object",
      "properties": {
        "fromDate": {
          "type": "string",
          "format": "date-time",
          "title": "from and to date wise filter"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "scoreCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ScoreCategory"
          },
          "title": "NPS Score wise filters"
        },
        "providerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Provider IDs to filter by"
        }
      }
    },
    "ListReviewRequestEmailTemplatesRequestSearchOptions": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "title": "Search Term"
        },
        "exactMatch": {
          "type": "boolean",
          "title": "Exact Match returns only exact matches"
        }
      }
    },
    "ListReviewRequestEmailTemplatesRequestSortField": {
      "type": "string",
      "enum": [
        "SORT_FIELD_NOT_SET",
        "SORT_FIELD_UPDATED",
        "SORT_FIELD_NAME"
      ],
      "default": "SORT_FIELD_NOT_SET"
    },
    "ListReviewRequestEmailTemplatesRequestSortOptions": {
      "type": "object",
      "properties": {
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "Which direction to sort in"
        },
        "sortField": {
          "$ref": "#/definitions/ListReviewRequestEmailTemplatesRequestSortField",
          "title": "Which field to sort by"
        }
      }
    },
    "ListWidgetReviewsRequestMinimumRating": {
      "type": "string",
      "enum": [
        "MINIMUM_RATING_UNSPECIFIED",
        "MINIMUM_RATING_1",
        "MINIMUM_RATING_2",
        "MINIMUM_RATING_3",
        "MINIMUM_RATING_4",
        "MINIMUM_RATING_5",
        "MINIMUM_RATING_MANUALLY_PUBLISHED"
      ],
      "default": "MINIMUM_RATING_UNSPECIFIED"
    },
    "ListingMatchQuality": {
      "type": "string",
      "enum": [
        "LISTING_MATCH_QUALITY_GOOD",
        "LISTING_MATCH_QUALITY_POOR",
        "LISTING_MATCH_QUALITY_NO_MATCH"
      ],
      "default": "LISTING_MATCH_QUALITY_GOOD"
    },
    "ReviewWidgetLayout": {
      "type": "string",
      "enum": [
        "LAYOUT_UNSPECIFIED",
        "LAYOUT_FEED",
        "LAYOUT_CAROUSEL",
        "LAYOUT_BADGE"
      ],
      "default": "LAYOUT_UNSPECIFIED",
      "title": "The layout of the widget (feed, carousel, badge)"
    },
    "ScheduleReviewRequestRequestScheduleConditions": {
      "type": "object",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DaysOfWeek"
          },
          "title": "The days of the week to send requests on"
        },
        "initialDelay": {
          "$ref": "#/definitions/v1PeriodDelay",
          "description": "The minimum delay before the review request is sent.\nThe delay could be longer if the delayed time falls outside the criteria defined by the other conditions."
        },
        "timeRangeStartHour": {
          "type": "integer",
          "format": "int32",
          "title": "The hour component for the earliest time where it is acceptable to send the\nreview request (see notes above)"
        },
        "timeRangeStartMinute": {
          "type": "integer",
          "format": "int32",
          "title": "The minute component for the earliest time where it is acceptable to send\nthe review request (see notes above)"
        },
        "timeRangeEndHour": {
          "type": "integer",
          "format": "int32",
          "title": "The hour component for the latest time where it is acceptable to send the\nreview request (see notes above)"
        },
        "timeRangeEndMinute": {
          "type": "integer",
          "format": "int32",
          "title": "The minute component for the latest time where it is acceptable to send the\nreview request (see notes above)"
        },
        "daysUntilNextRequest": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of days since the last review request to a contact.\nAny requests sent within this time frame will be ignored."
        }
      },
      "description": "ScheduleConditions define the conditions that must be met before the\nreview request is sent.\n\nNote 1: Unless otherwise configured here, the time_range values are relative\nto the timezone of the account group that is sending the review request.\n\nNote 2: Setting all of the \"time_range_\" values to 0 means that the review\nrequest can be sent at any time of day - assuming the other wait conditions\nare also met."
    },
    "SourceAttributeScope": {
      "type": "object",
      "properties": {
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Attributes that are whitelisted"
        },
        "blacklist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Attributes that are blacklisted"
        },
        "isWhitelistedByDefault": {
          "type": "boolean",
          "title": "Indicates whether the attribute is whitelisted by default"
        }
      },
      "title": "AttributeScope provides details on whether an attribute (partner, taxonomy, location) is whitelisted, blacklisted or on by default"
    },
    "SourceIcon": {
      "type": "object",
      "properties": {
        "url16px": {
          "type": "string"
        },
        "url32px": {
          "type": "string"
        },
        "url50px": {
          "type": "string"
        }
      },
      "title": "URLs to an image icon of the source"
    },
    "SourceListingInteractionHTML": {
      "type": "object",
      "properties": {
        "descriptionHtml": {
          "type": "string"
        },
        "claimListingHtml": {
          "type": "string"
        },
        "editListingHtml": {
          "type": "string"
        },
        "createListingHtml": {
          "type": "string"
        }
      },
      "title": "HTML Information about interacting with a source"
    },
    "StylingTheme": {
      "type": "string",
      "enum": [
        "THEME_UNSPECIFIED",
        "THEME_LIGHT",
        "THEME_DARK"
      ],
      "default": "THEME_UNSPECIFIED",
      "title": "The theme to use for the widget"
    },
    "v1BingMapsLocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the bing place on bing maps"
        },
        "address": {
          "type": "string",
          "title": "The address of the bing place on bing maps"
        },
        "url": {
          "type": "string",
          "title": "The bing maps url of the bing place"
        }
      }
    },
    "v1CanRespondToReviewResponse": {
      "type": "object",
      "properties": {
        "canPublish": {
          "type": "boolean"
        },
        "addLink": {
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "title": "TODO: may have more fields for successful case"
        }
      },
      "title": "Response for CanRespondToReview"
    },
    "v1Channel": {
      "type": "string",
      "enum": [
        "CHANNEL_UNSPECIFIED",
        "SMS_FALLBACK_TO_EMAIL",
        "SMS_ONLY",
        "EMAIL_FALLBACK_TO_SMS",
        "EMAIL_ONLY",
        "BOTH_EMAIL_AND_SMS"
      ],
      "default": "CHANNEL_UNSPECIFIED",
      "description": "The channel to send the review request through."
    },
    "v1CheckReviewWidgetUsageResponse": {
      "type": "object",
      "properties": {
        "isUsed": {
          "type": "boolean",
          "title": "Whether the widget is being used"
        }
      }
    },
    "v1ConciergeReviewResponse": {
      "type": "object",
      "properties": {
        "reviewId": {
          "type": "string",
          "title": "The identifier of the review"
        },
        "partnerId": {
          "type": "string",
          "title": "The identifier of the partner"
        },
        "taskId": {
          "type": "string",
          "title": "The identifier of the task in task manager"
        },
        "response": {
          "type": "string",
          "title": "The response content to the review"
        },
        "agentName": {
          "type": "string",
          "title": "The name of the agent who creates the response"
        },
        "body": {
          "type": "string",
          "title": "The body of the response"
        },
        "replyToEmail": {
          "type": "string",
          "title": "The email to receive approval notifications for the response"
        },
        "feedback": {
          "type": "string",
          "title": "The feedback to the review response"
        },
        "feedbackProvider": {
          "type": "string",
          "title": "The person who provides the feedback"
        },
        "commentId": {
          "type": "string",
          "title": "The identifier for the review response"
        },
        "feedbackDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the feedback was provided"
        },
        "approvalRequestedDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the review response request is approved"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the review response was created in the system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the review response was last modified by the system"
        },
        "partnerName": {
          "type": "string",
          "title": "The partner name"
        },
        "faviconUrl": {
          "type": "string",
          "title": "The favicon url"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The tags for the review response"
        }
      },
      "title": "ConciergeReviewResponse represents a Concierge ReviewResponse in the ReviewService"
    },
    "v1CreateReviewCommentResponse": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "string"
        },
        "commentText": {
          "type": "string",
          "title": "Comment text"
        },
        "commenterName": {
          "type": "string",
          "title": "Commenter name"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Creation date of the comment"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "Published date of the comment"
        },
        "postedByOwner": {
          "type": "boolean",
          "title": "Whether this comment is a post by the owner of the listing being reviewed"
        }
      },
      "title": "The response message for ReviewService.CreateReviewComment"
    },
    "v1CreateReviewRequestEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1ReviewRequestTemplate",
          "title": "The template created"
        }
      }
    },
    "v1CreateReviewRequestSMSTemplateResponse": {
      "type": "object",
      "properties": {
        "externalTemplateId": {
          "type": "string",
          "title": "external template id of the sms template"
        },
        "templateId": {
          "type": "string",
          "title": "template id of the sms template"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID the template will be under"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID the template will be under"
        },
        "name": {
          "type": "string",
          "title": "template name"
        },
        "templateType": {
          "$ref": "#/definitions/v1TemplateType",
          "title": "template type"
        }
      },
      "title": "CreateSMSTemplatesRequest for storing the SMS template"
    },
    "v1CreateReviewResponse": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/v1Review"
        }
      }
    },
    "v1CreateReviewResponseTemplateResponse": {
      "type": "object",
      "properties": {
        "responseTemplateId": {
          "type": "string",
          "title": "The id of the review response template created"
        }
      }
    },
    "v1CreateReviewWidgetResponse": {
      "type": "object",
      "properties": {
        "reviewWidget": {
          "$ref": "#/definitions/v1ReviewWidget"
        }
      }
    },
    "v1Customizations": {
      "type": "object",
      "properties": {
        "overallRatingDecimalPlaces": {
          "$ref": "#/definitions/CustomizationsOverallRatingDecimalPlaces"
        },
        "headerText": {
          "type": "string",
          "title": "The header text to display instead of 'Reviews from our customers'"
        }
      }
    },
    "v1DaysOfWeek": {
      "type": "string",
      "enum": [
        "DAY_OF_WEEK_UNSPECIFIED",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "default": "DAY_OF_WEEK_UNSPECIFIED"
    },
    "v1EmailTemplateData": {
      "type": "object",
      "properties": {
        "emailTemplateSubject": {
          "type": "string",
          "title": "The subject of email template"
        },
        "emailTemplateHtml": {
          "type": "string",
          "title": "The html string of email template"
        }
      }
    },
    "v1GetBusinessSourcesResponse": {
      "type": "object",
      "properties": {
        "sourceDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceDetails"
          }
        }
      },
      "title": "The response message for SourceService.GetBusinessSources"
    },
    "v1GetLeaveReviewURLsResponse": {
      "type": "object",
      "properties": {
        "urls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The URLs for the sources"
        }
      }
    },
    "v1GetLimitResponse": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "The limit value"
        },
        "usage": {
          "type": "string",
          "format": "int64",
          "title": "The limit usage"
        }
      }
    },
    "v1GetListingsResponse": {
      "type": "object",
      "properties": {
        "listings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Listing"
          }
        }
      },
      "title": "The response message for ListingService.GetListings"
    },
    "v1GetMultiNPSResponse": {
      "type": "object",
      "properties": {
        "netPromoterScore": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetPromoterScore"
          }
        }
      }
    },
    "v1GetMultiThirdPartyReviewPublishSettingsResponse": {
      "type": "object",
      "properties": {
        "thirdPartyReviewPublishSettings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ThirdPartyReviewPublishSettings"
          }
        }
      }
    },
    "v1GetPartnerWhiteLabelDomainResponse": {
      "type": "object",
      "properties": {
        "whiteLabelDomain": {
          "type": "string"
        }
      }
    },
    "v1GetProviderResponse": {
      "type": "object",
      "properties": {
        "providerDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProviderDetails"
          }
        }
      }
    },
    "v1GetReviewManagerAgentResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "autoResponseEnabled": {
          "type": "boolean"
        },
        "minimumStarRating": {
          "type": "string",
          "format": "int64"
        },
        "responseDelayMinutes": {
          "type": "string",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetReviewRequestEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1ReviewRequestTemplate",
          "title": "The review request template"
        }
      }
    },
    "v1GetReviewRequestSMSTemplateResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "Identifier for the template"
        },
        "externalTemplateId": {
          "type": "string",
          "title": "External identifier for the template content"
        },
        "title": {
          "type": "string",
          "title": "The display name of the SMS template"
        },
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "content": {
          "type": "string",
          "title": "The content of the template"
        },
        "templateType": {
          "$ref": "#/definitions/v1TemplateType",
          "title": "The type of template"
        },
        "npsRedirectReviewSource": {
          "type": "boolean",
          "title": "template configurations"
        },
        "reviewSourceId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "multiple review sources"
        },
        "imageUrl": {
          "type": "string",
          "title": "Stores the URL of the uploaded image"
        },
        "includeBusinessLogo": {
          "type": "boolean",
          "title": "Include Business Logo based on the flag"
        }
      }
    },
    "v1GetReviewResponseResponse": {
      "type": "object",
      "properties": {
        "reviewResponse": {
          "$ref": "#/definitions/v1ConciergeReviewResponse"
        }
      }
    },
    "v1GetReviewSourceInfoResponse": {
      "type": "object",
      "properties": {
        "sourceInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewSourceInfo"
          },
          "title": "The source information for the account group in a Struct from JSON"
        }
      }
    },
    "v1GetReviewWidgetByIDResponse": {
      "type": "object",
      "properties": {
        "reviewWidget": {
          "$ref": "#/definitions/v1ReviewWidget"
        },
        "reviewStats": {
          "$ref": "#/definitions/v1ReviewStats"
        },
        "leaveReviewUrls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1GetReviewWidgetResponse": {
      "type": "object",
      "properties": {
        "reviewWidget": {
          "$ref": "#/definitions/v1ReviewWidget"
        },
        "reviewStats": {
          "$ref": "#/definitions/v1ReviewStats"
        }
      }
    },
    "v1GetReviewsResponse": {
      "type": "object",
      "properties": {
        "reviews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Review"
          }
        }
      },
      "title": "The response message for ReviewService.GetReviews"
    },
    "v1GetSMSEnabledResponse": {
      "type": "object",
      "properties": {
        "smsState": {
          "$ref": "#/definitions/v1SMSState",
          "title": "The state of the SMS features"
        }
      }
    },
    "v1GetSourceDetailsResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Source"
          }
        }
      },
      "title": "The response message for SourceService.GetSourceDetails"
    },
    "v1ImportNPSResponse": {
      "type": "object",
      "properties": {
        "netPromoterScoreId": {
          "type": "string"
        }
      }
    },
    "v1LimitType": {
      "type": "string",
      "enum": [
        "LIMIT_TYPE_UNSPECIFIED",
        "LIMIT_TYPE_MONTHLY_SMS"
      ],
      "default": "LIMIT_TYPE_UNSPECIFIED"
    },
    "v1ListBusinessReviewResponseTemplateResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewResponseTemplate"
          },
          "title": "The list of templates for the business"
        }
      }
    },
    "v1ListNetPromoterScoresResponse": {
      "type": "object",
      "properties": {
        "netPromoterScore": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetPromoterScore"
          }
        },
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there are more results"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Approximate total results for an unbounded page size"
        }
      }
    },
    "v1ListReviewRequestEmailTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewRequestTemplate"
          },
          "title": "Templates listed"
        },
        "cursor": {
          "type": "string",
          "title": "Cursor to list the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there are more results"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Approximate total results for an unbounded page size"
        }
      }
    },
    "v1ListWidgetReviewsResponse": {
      "type": "object",
      "properties": {
        "reviews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Review"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalHits": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListingIdentifier": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "listingId": {
          "type": "string"
        }
      },
      "title": "Uniquely identifies a listing"
    },
    "v1LookupListingsResponse": {
      "type": "object",
      "properties": {
        "listingsBySource": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LookupResponseForSource"
          }
        }
      }
    },
    "v1LookupResponseForSource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "sourceName": {
          "type": "string"
        },
        "userFriendlySourceName": {
          "type": "string"
        },
        "poorListings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Listing"
          }
        },
        "goodListings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Listing"
          }
        },
        "notDoneListings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Listing"
          }
        }
      }
    },
    "v1NAP": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "title": "The listings company name"
        },
        "address": {
          "type": "string",
          "title": "The listings address"
        },
        "city": {
          "type": "string",
          "title": "The listings city"
        },
        "state": {
          "type": "string",
          "title": "The listings state"
        },
        "zip": {
          "type": "string",
          "title": "The listings zip"
        },
        "country": {
          "type": "string",
          "title": "The listings country"
        },
        "phone": {
          "type": "string",
          "title": "The listings phone"
        },
        "website": {
          "type": "string",
          "title": "The listings website"
        }
      },
      "title": "NAP information of a listing"
    },
    "v1NetPromoterScore": {
      "type": "object",
      "properties": {
        "netPromoterScoreId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "score": {
          "type": "string",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetPromoterScoreAttribute"
          }
        },
        "scoreLeftTime": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "providerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1NetPromoterScoreAttribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1PeriodDelay": {
      "type": "object",
      "properties": {
        "delayPeriod": {
          "$ref": "#/definitions/v1Interval",
          "title": "The delay period to use"
        },
        "numberOfPeriods": {
          "type": "integer",
          "format": "int32",
          "title": "The number of periods to wait before sending the review request"
        }
      }
    },
    "v1ProviderDetails": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "The Provider first name"
        },
        "lastName": {
          "type": "string",
          "title": "The Provider last name"
        },
        "providerId": {
          "type": "string",
          "title": "The Provider id"
        },
        "businessId": {
          "type": "string",
          "title": "The Provider business_id"
        }
      }
    },
    "v1Recommendation": {
      "type": "string",
      "enum": [
        "RECOMMENDATION_UNSPECIFIED",
        "RECOMMENDATION_POSITIVE",
        "RECOMMENDATION_NEGATIVE"
      ],
      "default": "RECOMMENDATION_UNSPECIFIED",
      "title": "Enum for a review's facebook recommendation value"
    },
    "v1ReviewActionStatus": {
      "type": "string",
      "enum": [
        "REVIEW_ACTION_STATUS_ACTION_REQUIRED",
        "REVIEW_ACTION_STATUS_NO_ACTION_REQUIRED",
        "REVIEW_ACTION_STATUS_OWNER_RESPONDED",
        "REVIEW_ACTION_STATUS_RESPONSE_AWAITING_APPROVAL",
        "REVIEW_ACTION_STATUS_DIGITAL_AGENT_RESPONDED"
      ],
      "default": "REVIEW_ACTION_STATUS_ACTION_REQUIRED",
      "title": "Enum for the action status of a review"
    },
    "v1ReviewDeletedStatus": {
      "type": "string",
      "enum": [
        "REVIEW_DELETED_STATUS_EMPTY",
        "REVIEW_DELETED_STATUS_USER_REMOVED",
        "REVIEW_DELETED_STATUS_USER_KEPT",
        "REVIEW_DELETED_STATUS_UNSPECIFIED"
      ],
      "default": "REVIEW_DELETED_STATUS_EMPTY",
      "title": "Enum for the deleted status of a review"
    },
    "v1ReviewHistory": {
      "type": "object",
      "properties": {
        "reviewHistoryId": {
          "type": "string",
          "title": "Identifier of the review history"
        },
        "listingId": {
          "type": "string",
          "title": "The listing id that the review belongs to"
        },
        "source": {
          "type": "string",
          "format": "int64",
          "title": "The source that the review belongs to"
        },
        "externalId": {
          "type": "string",
          "title": "The sources identifier of the review"
        },
        "content": {
          "type": "string",
          "title": "The review content body"
        },
        "reviewId": {
          "type": "string",
          "title": "Review id that the review history belongs to"
        },
        "partnerId": {
          "type": "string",
          "title": "The rating of the review"
        },
        "scaledStarRating": {
          "type": "string",
          "format": "int64",
          "title": "The scaled stars of the review"
        },
        "reviewerName": {
          "type": "string",
          "title": "Name of the reviewer"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "When the review was published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the review history was created in the system"
        },
        "reviewLastEdited": {
          "type": "string",
          "format": "date-time",
          "title": "When the review was last modified on the source site"
        },
        "isRecommendation": {
          "$ref": "#/definitions/v1Recommendation",
          "title": "The review's facebook recommendation value"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Business identifier of the review history"
        }
      },
      "title": "Represents a ReviewHistory in the ReviewService"
    },
    "v1ReviewHistoryResponse": {
      "type": "object",
      "properties": {
        "reviewHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewHistory"
          }
        }
      }
    },
    "v1ReviewIdentifier": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        }
      },
      "title": "Uniquely identifies a Review"
    },
    "v1ReviewRequestTemplate": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "Identifier for the template"
        },
        "externalTemplateId": {
          "type": "string",
          "title": "External identifier for the template content"
        },
        "name": {
          "type": "string",
          "title": "Name of the template"
        },
        "isDefault": {
          "type": "boolean",
          "title": "Whether the template is the default to be used when automatically sending to someone"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID the template falls under"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID the template falls under"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created time of the template"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated time of the template"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted time of the template"
        }
      }
    },
    "v1ReviewRequestTemplateType": {
      "type": "string",
      "enum": [
        "REVIEW_REQUEST_TEMPLATE_TYPE_UNSPECIFIED",
        "REVIEW_REQUEST_TEMPLATE_TYPE_EMAIL",
        "REVIEW_REQUEST_TEMPLATE_TYPE_SMS"
      ],
      "default": "REVIEW_REQUEST_TEMPLATE_TYPE_UNSPECIFIED"
    },
    "v1ReviewResponseTemplate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "The display name of the template"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The categories the response template is for"
        },
        "ratings": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "The review ratings the response template is for"
        },
        "content": {
          "type": "string",
          "title": "The content of the template"
        },
        "responseTemplateId": {
          "type": "string",
          "title": "The review response template id"
        },
        "externalTemplateId": {
          "type": "string",
          "title": "The external template id"
        },
        "createdBy": {
          "type": "string",
          "title": "Creator of the template"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created time of the template"
        },
        "owner": {
          "type": "string",
          "title": "The original owner of the response template"
        }
      }
    },
    "v1ReviewSourceInfo": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "Listing source ID"
        },
        "displayName": {
          "type": "string",
          "title": "source name"
        },
        "leaveReviewUrl": {
          "type": "string",
          "title": "leave-a-review redirection URL to buisness' review page"
        }
      },
      "title": "Review Source information for an account group"
    },
    "v1ReviewStats": {
      "type": "object",
      "properties": {
        "averageRating": {
          "type": "number",
          "format": "float",
          "title": "The overall average rating for the account group"
        },
        "totalCount": {
          "type": "string",
          "format": "int64",
          "title": "The total number of reviews for the account group"
        }
      }
    },
    "v1ReviewWidget": {
      "type": "object",
      "properties": {
        "widgetId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "leaveReviewDestination": {
          "type": "string",
          "title": "The source ID to direct people to leave a review at, or multiple source IDs joined with comma"
        },
        "layout": {
          "$ref": "#/definitions/ReviewWidgetLayout"
        },
        "reviewDisplaySourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customizations": {
          "$ref": "#/definitions/v1Customizations"
        },
        "toggles": {
          "$ref": "#/definitions/v1Toggles"
        },
        "styling": {
          "$ref": "#/definitions/v1Styling"
        }
      }
    },
    "v1Reviewer": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email of the reviewer"
        },
        "name": {
          "type": "string",
          "title": "Name of the reviewer"
        },
        "url": {
          "type": "string",
          "title": "URL to the reviewers profile"
        }
      },
      "title": "Represents a Review in the ReviewService"
    },
    "v1SMSState": {
      "type": "string",
      "enum": [
        "SMS_STATE_UNDEFINED",
        "SMS_STATE_DISABLED",
        "SMS_STATE_ENABLED"
      ],
      "default": "SMS_STATE_UNDEFINED",
      "title": "- SMS_STATE_UNDEFINED: SMS state is undefined - should not be returned by the API\n - SMS_STATE_DISABLED: SMS is disabled for the account group\n - SMS_STATE_ENABLED: SMS is enabled for the account group"
    },
    "v1SMSTemplateData": {
      "type": "object",
      "properties": {
        "templateType": {
          "$ref": "#/definitions/v1TemplateType",
          "title": "The template ID of the sms"
        },
        "npsRedirectReviewSource": {
          "type": "boolean",
          "title": "template configurations"
        },
        "reviewSourceId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "multiple review sources"
        },
        "businessLogoUrl": {
          "type": "string",
          "title": "business logo"
        },
        "includeBusinessLogo": {
          "type": "boolean",
          "title": "Include Business Logo based on the flag"
        }
      }
    },
    "v1ScoreCategory": {
      "type": "string",
      "enum": [
        "UNSET",
        "DETRACTORS",
        "PASSIVES",
        "PROMOTERS"
      ],
      "default": "UNSET"
    },
    "v1SearchBingMapsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingMapsLocation"
          },
          "title": "The list of bing maps locations"
        }
      }
    },
    "v1SourceDetails": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "ignoredSources": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "title": "Indicates which sources are enabled and ignored by the business"
    },
    "v1SourceSubmitListing": {
      "type": "object",
      "properties": {
        "validationRegex": {
          "type": "string"
        },
        "helpText": {
          "type": "string"
        },
        "editListingUrl": {
          "type": "string"
        },
        "createListingUrl": {
          "type": "string"
        }
      },
      "title": "Information about submitting/editing a source"
    },
    "v1Styling": {
      "type": "object",
      "properties": {
        "theme": {
          "$ref": "#/definitions/StylingTheme"
        },
        "accentColour": {
          "type": "string"
        }
      }
    },
    "v1SubmitListingResponse": {
      "type": "object",
      "properties": {
        "listingId": {
          "type": "string"
        }
      }
    },
    "v1SuggestReviewResponseResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1ThirdPartyPublishedStatus": {
      "type": "string",
      "enum": [
        "THIRD_PARTY_PUBLISHED_STATUS_EMPTY",
        "THIRD_PARTY_PUBLISHED_STATUS_TRUE",
        "THIRD_PARTY_PUBLISHED_STATUS_FALSE"
      ],
      "default": "THIRD_PARTY_PUBLISHED_STATUS_EMPTY",
      "description": "- THIRD_PARTY_PUBLISHED_STATUS_EMPTY: Empty means the auto-publish minimum rating setting determines whether it's published or not",
      "title": "Enum for review third party published status"
    },
    "v1ThirdPartyReviewPublishSettings": {
      "type": "object",
      "properties": {
        "widgetAllReviewsEnabled": {
          "type": "boolean",
          "title": "Whether the widget can show reviews for all sources"
        },
        "minimumPublishRating": {
          "type": "string",
          "format": "int64",
          "title": "The minimum star rating to auto-publish reviews, 0 means only manually published reviews"
        }
      },
      "title": "Settings for publishing 3rd party reviews to review widget"
    },
    "v1Toggles": {
      "type": "object",
      "properties": {
        "showOverallRatingTitle": {
          "type": "boolean",
          "title": "Whether to show the title \"Overall rating\""
        },
        "showOverallRatingCard": {
          "type": "boolean",
          "title": "Whether to show the overall rating card which shows a summary of the review stats"
        },
        "showReviewCount": {
          "type": "boolean",
          "title": "Whether to show the total review count"
        },
        "showLeaveAReviewButton": {
          "type": "boolean",
          "title": "Whether to show the \"Leave a review\" button"
        },
        "showHeader": {
          "type": "boolean",
          "title": "Whether or not to show the 'Reviews from our customers' header\""
        },
        "showStarRatingSummary": {
          "type": "boolean",
          "title": "Whether or not to show the average star rating"
        },
        "showReviewSource": {
          "type": "boolean",
          "title": "Whether or not to show the the source on each review card"
        },
        "showReviewStarRating": {
          "type": "boolean",
          "title": "Whether or not to show the the star rating on each review card"
        },
        "showReviewPublishedDate": {
          "type": "boolean",
          "title": "Whether or not to show the the published date on each review card"
        }
      }
    },
    "v1UpdateReviewCommentResponse": {
      "type": "object",
      "properties": {
        "reviewComment": {
          "$ref": "#/definitions/v1ReviewComment"
        }
      },
      "description": "The response message for ReviewService.UpdateReviewComment."
    },
    "v1UpdateReviewResponse": {
      "type": "object",
      "properties": {
        "reviewId": {
          "type": "string"
        }
      },
      "title": "The response message for ReviewService.UpdateReview"
    },
    "v1Country": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "ISO 3166-1 alpha-2 codes (eg. \"US\" and \"CA\")"
        }
      }
    },
    "v1CountryCodeSource": {
      "type": "string",
      "enum": [
        "FROM_DEFAULT_COUNTRY",
        "FROM_NUMBER_WITH_IDD",
        "FROM_NUMBER_WITH_PLUS_SIGN",
        "FROM_NUMBER_WITHOUT_PLUS_SIGN"
      ],
      "default": "FROM_DEFAULT_COUNTRY"
    },
    "v1FormatResult": {
      "type": "object",
      "properties": {
        "national": {
          "type": "string"
        },
        "international": {
          "type": "string"
        },
        "e164": {
          "type": "string"
        },
        "rfc3966": {
          "type": "string"
        }
      }
    },
    "v1ListCountriesResponse": {
      "type": "object",
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Country"
          }
        }
      }
    },
    "v1ListStatesResponse": {
      "type": "object",
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1State"
          }
        }
      }
    },
    "v1MetaDataResult": {
      "type": "object",
      "properties": {
        "timezones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The approximate timezones relevant to this number"
        },
        "locationDescription": {
          "type": "string",
          "title": "A description of where the number is located -- may contain varying levels of specificity from country to city"
        },
        "type": {
          "$ref": "#/definitions/v1PhoneNumberType",
          "title": "The type of number -- mobile, landline, etc"
        }
      }
    },
    "v1ParsePhoneNumberResponse": {
      "type": "object",
      "properties": {
        "parseResult": {
          "$ref": "#/definitions/v1ParseResult"
        },
        "validationResult": {
          "$ref": "#/definitions/v1ValidationResult"
        },
        "formatResult": {
          "$ref": "#/definitions/v1FormatResult"
        },
        "metadataResult": {
          "$ref": "#/definitions/v1MetaDataResult"
        }
      }
    },
    "v1ParseResult": {
      "type": "object",
      "properties": {
        "nationalNumber": {
          "type": "string",
          "title": "The unformatted national representation of the number"
        },
        "extension": {
          "type": "string",
          "title": "The extension of the number"
        },
        "countryCode": {
          "type": "string",
          "title": "The country code of the number"
        },
        "countryCodeSource": {
          "$ref": "#/definitions/v1CountryCodeSource",
          "title": "The source of the country code, which explains how it was determined"
        }
      }
    },
    "v1PhoneNumberFormat": {
      "type": "string",
      "enum": [
        "NATIONAL",
        "INTERNATIONAL",
        "E164",
        "RFC3966"
      ],
      "default": "NATIONAL"
    },
    "v1PhoneNumberType": {
      "type": "string",
      "enum": [
        "FIXED_LINE",
        "FIXED_LINE_OR_MOBILE",
        "MOBILE",
        "PAGER",
        "PERSONAL_NUMBER",
        "PREMIUM_RATE",
        "SHARED_COST",
        "TOLL_FREE",
        "UAN",
        "UNKNOWN",
        "VOICEMAIL",
        "VOIP"
      ],
      "default": "FIXED_LINE"
    },
    "v1PhoneNumberValidators": {
      "type": "string",
      "enum": [
        "IsValid",
        "IsValidForRegion"
      ],
      "default": "IsValid"
    },
    "v1ValidationResult": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        },
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "fieldValidationResult": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValidationResult"
          }
        }
      }
    },
    "call_trackingCall": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "destinationCallTrackingNumber": {
          "type": "string"
        },
        "sourceNumber": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/call_trackingCallStatus"
        },
        "callerName": {
          "type": "string"
        },
        "recordingUrl": {
          "type": "string"
        }
      }
    },
    "call_trackingCallStatus": {
      "type": "string",
      "enum": [
        "CALL_STATUS_QUEUED",
        "CALL_STATUS_RINGING",
        "CALL_STATUS_IN_PROGRESS",
        "CALL_STATUS_CANCELED",
        "CALL_STATUS_COMPLETED",
        "CALL_STATUS_FAILED",
        "CALL_STATUS_BUSY",
        "CALL_STATUS_NO_ANSWER"
      ],
      "default": "CALL_STATUS_QUEUED"
    },
    "call_trackingCallTrackingNumber": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "forwardingNumber": {
          "type": "string"
        },
        "twilioSid": {
          "type": "string"
        }
      }
    },
    "call_trackingCreateCallResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "call_trackingCustomer": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "twilioAuthToken": {
          "type": "string"
        }
      }
    },
    "call_trackingGetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/call_trackingCustomer"
        }
      }
    },
    "call_trackingListCallResponse": {
      "type": "object",
      "properties": {
        "calls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/call_trackingCall"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/call_trackingPagedResponseMetadata"
        }
      }
    },
    "call_trackingListNumbersResponse": {
      "type": "object",
      "properties": {
        "numbers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/call_trackingCallTrackingNumber"
          }
        }
      }
    },
    "call_trackingPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "To provide options for the paged request"
    },
    "call_trackingPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total results found by the operation"
        }
      }
    },
    "v1BulkGetSpamScoreResponse": {
      "type": "object",
      "properties": {
        "scores": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SpamScore"
          }
        }
      }
    },
    "v1GetSpamScoreResponse": {
      "type": "object",
      "properties": {
        "isSpam": {
          "type": "boolean",
          "description": "is_spam reports if this message is considered spam."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "score is the spam score of this message."
        },
        "baseScore": {
          "type": "number",
          "format": "float",
          "title": "base_score is the threshold that defines what is or is not spam"
        }
      }
    },
    "v1SpamScore": {
      "type": "object",
      "properties": {
        "isSpam": {
          "type": "boolean",
          "description": "is_spam reports if this message is considered spam."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "score is the spam score of this message."
        },
        "baseScore": {
          "type": "number",
          "format": "float",
          "title": "base_score is the threshold that defines what is or is not spam"
        },
        "messageId": {
          "type": "string",
          "title": "ID of the message the score relates to"
        }
      }
    },
    "GetMultiTimeRangeResponseInsightsContainer": {
      "type": "object",
      "properties": {
        "insights": {
          "$ref": "#/definitions/v1InsightsResponse"
        }
      }
    },
    "gmbv1Location": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "Account group ID"
        },
        "socialProfileId": {
          "type": "string",
          "title": "Social profile ID"
        },
        "address": {
          "type": "string",
          "title": "Business address"
        },
        "displayName": {
          "type": "string",
          "title": "Display name"
        },
        "googleReverify": {
          "type": "boolean",
          "title": "Google reverify"
        },
        "googleVerified": {
          "type": "boolean",
          "title": "Google verified"
        },
        "isLocalPostApiDisabled": {
          "type": "boolean",
          "title": "Is local post api disabled"
        },
        "isMissing": {
          "type": "boolean",
          "title": "Is missing"
        },
        "isTokenBroken": {
          "type": "boolean",
          "title": "Is token broken"
        },
        "isVerified": {
          "type": "boolean",
          "title": "Is verified"
        },
        "locationPathName": {
          "type": "string",
          "title": "Location path name"
        },
        "logoImageId": {
          "type": "string",
          "title": "Logo image ID"
        },
        "mapsPlaceId": {
          "type": "string",
          "title": "Maps place ID"
        },
        "primaryImageId": {
          "type": "string",
          "title": "Primary image ID"
        },
        "syncSettingFlag": {
          "type": "boolean",
          "title": "Sync setting flag"
        },
        "cannotSyncReasons": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Cannot sync reasons"
        },
        "serviceAreaPlaceId": {
          "type": "string",
          "title": "Service area place ID"
        },
        "locationSyncSucceededOn": {
          "type": "string",
          "format": "date-time",
          "title": "Last time out location data was synced successfully"
        },
        "openStatusSyncSucceededOn": {
          "type": "string",
          "format": "date-time",
          "title": "Last time open status data was synced successfully"
        },
        "syncLastAttemptedOn": {
          "type": "string",
          "format": "date-time",
          "title": "Last time sync was attempted"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the location was created in our system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the location was modified in our system"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "When the location wasg deleted in our system"
        }
      }
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1AccountLocation": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "googleAccountId": {
          "type": "string"
        },
        "googleLocationId": {
          "type": "string"
        }
      }
    },
    "v1CalculateInsightsByTimePeriodResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InsightsStat"
          }
        }
      },
      "title": "Response for CalculateInsightsByTimePeriod"
    },
    "v1CanEnableBusinessCommunicationsResponse": {
      "type": "object",
      "properties": {
        "hasRequiredAccessScopes": {
          "type": "boolean"
        }
      }
    },
    "v1ConnectResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/gmbv1Location"
        }
      },
      "title": "Response for Connect"
    },
    "v1CreateAnswerResponse": {
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "#/definitions/v1Answer"
        }
      },
      "title": "Response from answering a question"
    },
    "v1CreateEventResponse": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        }
      }
    },
    "v1EnableDisableSyncResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/gmbv1Location"
        }
      },
      "title": "Response for EnableDisableSync"
    },
    "v1GetAsSocialServiceResponse": {
      "type": "object",
      "properties": {
        "serviceType": {
          "type": "string"
        },
        "ssid": {
          "type": "string"
        },
        "googleUserId": {
          "type": "string"
        },
        "agid": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        },
        "socialSyncFlag": {
          "type": "boolean"
        },
        "spid": {
          "type": "string"
        },
        "isAuthenticated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Response for GetAsSocialService"
    },
    "v1GetBusinessLaunchStatusResponse": {
      "type": "object",
      "properties": {
        "isLaunched": {
          "type": "boolean"
        }
      }
    },
    "v1GetGoogleUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1GoogleUser"
        }
      },
      "title": "Response for GetGoogleUser"
    },
    "v1GetMultiAccountLocationResponse": {
      "type": "object",
      "properties": {
        "accountLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountLocation"
          }
        }
      }
    },
    "v1GetMultiQuestionsResponse": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Question"
          }
        }
      },
      "title": "Response for getting multiple questions"
    },
    "v1GetMultiTimeRangeResponse": {
      "type": "object",
      "properties": {
        "resourceInsights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiTimeRangeResponseInsightsContainer"
          }
        }
      }
    },
    "v1GetQuestionAnswerStatsResponse": {
      "type": "object",
      "properties": {
        "unanswered": {
          "type": "string",
          "format": "int64"
        },
        "answeredByOwner": {
          "type": "string",
          "format": "int64"
        },
        "totalQuestions": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Response with stats for a business"
    },
    "v1GoogleUser": {
      "type": "object",
      "properties": {
        "socialProfileId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "socialServiceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "isTokenBroken": {
          "type": "boolean"
        },
        "expiryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1Insight": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1InsightsResponse": {
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "title": "Insight per requested metric type"
        },
        "locationCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of locations at this resource"
        },
        "connectedLocationCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of connected locations at this resource"
        }
      }
    },
    "v1InsightsStat": {
      "type": "object",
      "properties": {
        "currentValue": {
          "type": "string",
          "format": "int64"
        },
        "change": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1PostInsightsHistory": {
      "type": "object",
      "properties": {
        "socialProfileId": {
          "type": "string",
          "title": "A social profile id"
        },
        "internalPostId": {
          "type": "string",
          "title": "our internal post id"
        },
        "views": {
          "type": "string",
          "format": "int64",
          "title": "Number of views"
        },
        "callToActionClicks": {
          "type": "string",
          "format": "int64",
          "title": "Number of clicks on the CTA"
        },
        "postedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Datetime for the post is posted"
        },
        "statsDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "the datetime when the post stats data is collected"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID"
        }
      }
    },
    "v1QuestionIdentifier": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Uniquely identifies a Question"
    },
    "v1TimeDimension": {
      "type": "object",
      "properties": {
        "timeRange": {
          "$ref": "#/definitions/v1TimePeriod"
        }
      }
    },
    "v1TimePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "period": {
          "$ref": "#/definitions/v1Period"
        }
      }
    },
    "v1UserType": {
      "type": "string",
      "enum": [
        "USER_TYPE_UNSPECIFIED",
        "USER_TYPE_BOT",
        "USER_TYPE_HUMAN"
      ],
      "default": "USER_TYPE_UNSPECIFIED",
      "title": "User"
    },
    "BulkProcessorDetailsCSVFile": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string",
          "title": "Uploaded url of csv file to process for Bulk Processing"
        }
      },
      "title": "CSV file details"
    },
    "BulkProcessorDetailsImportUsers": {
      "type": "object",
      "properties": {
        "userListId": {
          "type": "string",
          "title": "User List identifier"
        },
        "updateUsers": {
          "type": "boolean",
          "title": "Should update existing users"
        }
      }
    },
    "BulkProcessorDetailsScheduleCampaign": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "Campaign identifier"
        },
        "scheduleOn": {
          "type": "string",
          "format": "date-time",
          "title": "Datetime when campaign is schedule to start"
        },
        "sender": {
          "$ref": "#/definitions/ScheduleCampaignSender",
          "title": "Sender information"
        },
        "defaultAccountGroupId": {
          "type": "string",
          "title": "Optional account group id to temporarily place users on who lack one in a campaign"
        }
      }
    },
    "BulkProcessorDetailsUserList": {
      "type": "object",
      "properties": {
        "userListId": {
          "type": "string",
          "title": "User List identifer"
        }
      }
    },
    "ScheduleCampaignSender": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "v1beta1ActionListKey": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier"
        },
        "marketId": {
          "type": "string",
          "title": "The market identifier (empty string means \"all markets\")"
        },
        "actionListId": {
          "type": "string",
          "title": "The unique identifier of the action list"
        }
      },
      "title": "The primary key of an action list to initiate a bulk action"
    },
    "v1beta1BulkActionInstanceStatus": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string"
        },
        "processedItems": {
          "type": "string",
          "format": "int64"
        },
        "totalItems": {
          "type": "string",
          "format": "int64"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actionDisplayName": {
          "type": "string"
        },
        "isFinalized": {
          "type": "boolean"
        }
      }
    },
    "v1beta1BulkProcessorDetails": {
      "type": "object",
      "properties": {
        "csvFile": {
          "$ref": "#/definitions/BulkProcessorDetailsCSVFile",
          "title": "Details of csv file processor"
        },
        "userList": {
          "$ref": "#/definitions/BulkProcessorDetailsUserList",
          "title": "Details of user list processor"
        },
        "importUsers": {
          "$ref": "#/definitions/BulkProcessorDetailsImportUsers",
          "title": "Details related to import user processor"
        },
        "scheduleCampaign": {
          "$ref": "#/definitions/BulkProcessorDetailsScheduleCampaign",
          "title": "Details about scheduling a campaign"
        }
      },
      "title": "Bulk processor details will tell the processor what is available for the processing"
    },
    "v1beta1BulkProcessorType": {
      "type": "string",
      "enum": [
        "BULK_PROCESSOR_TYPE_INVALID",
        "BULK_PROCESSOR_TYPE_IMPORT_USERS",
        "BULK_PROCESSOR_TYPE_SCHEDULE_CAMPAIGN"
      ],
      "default": "BULK_PROCESSOR_TYPE_INVALID",
      "title": "Type of bulk processor"
    },
    "v1beta1ComputeActionListIDsResponse": {
      "type": "object",
      "properties": {
        "nameIdMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1CreateActionListResponse": {
      "type": "object",
      "properties": {
        "actionListId": {
          "type": "string",
          "title": "The unique identifier of the action list"
        }
      }
    },
    "v1beta1GenerateUploadSignedURLResponse": {
      "type": "object",
      "properties": {
        "signedUrl": {
          "type": "string",
          "title": "Signed url to upload CSV"
        }
      }
    },
    "v1beta1GetActionListItemIDsResponse": {
      "type": "object",
      "properties": {
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of action list item ids"
        }
      }
    },
    "v1beta1GetBulkActionInstanceItemIDsResponse": {
      "type": "object",
      "properties": {
        "bulkActionItemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The identifiers of the action list's items to perform actions against"
        }
      }
    },
    "v1beta1InitiateBulkProcessorResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the bulk processor"
        }
      }
    },
    "v1beta1ListBulkActionStatusesForActionListResponse": {
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1BulkActionInstanceStatus"
          }
        }
      }
    },
    "v1beta1ValidateFileResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of errors, if valid it will be empty"
        }
      }
    },
    "v2CreateListDefinitionResponse": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string"
        }
      }
    },
    "v2GetMultiListDefinitionResponse": {
      "type": "object",
      "properties": {
        "listDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ListDefinition"
          }
        }
      }
    },
    "v2ListDefinition": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "listId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "listType": {
          "$ref": "#/definitions/v2ListType"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Filter"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v2ListDefinitionsResponse": {
      "type": "object",
      "properties": {
        "listDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ListDefinition"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v2ListItem": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "listId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceUrl": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2ListItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ListItem"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v2ListType": {
      "type": "string",
      "enum": [
        "LIST_TYPE_INVALID",
        "LIST_TYPE_STATIC",
        "LIST_TYPE_DYNAMIC"
      ],
      "default": "LIST_TYPE_INVALID"
    },
    "v2ObjectSearch": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "StartAutomationRequestStartAutomationPayload": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string",
          "title": "The entity id to start the automation for"
        },
        "data": {
          "type": "object",
          "title": "The extra data to start the automation with"
        }
      }
    },
    "v1AppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      },
      "description": "The full identifier for a marketplace app."
    },
    "v1Automation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "partnerId": {
          "type": "string",
          "title": "PartnerID is no longer supported and Namespace+Context combo should be used instead"
        },
        "marketId": {
          "type": "string",
          "title": "MarketID is no longer supported on new automations and will eventually be removed"
        },
        "triggerDefinitionId": {
          "type": "string"
        },
        "triggerSubDefinitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "runningState": {
          "$ref": "#/definitions/v1RunningState"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "workflow": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowStep"
          },
          "title": "Workflow steps"
        },
        "triggerStep": {
          "$ref": "#/definitions/v1WorkflowStep",
          "title": "Workflow step containing trigger definition, first step"
        },
        "lastEditedBy": {
          "type": "string",
          "title": "iam.User.Id of the user that most recently modified this automation"
        },
        "settings": {
          "$ref": "#/definitions/v1AutomationSettings"
        },
        "triggerFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowStep"
          },
          "title": "Filter steps executed after the trigger and before the workflow itself"
        },
        "runningVersion": {
          "type": "string",
          "format": "date-time",
          "title": "Running version for automation, empty if it's not running"
        },
        "description": {
          "type": "string",
          "description": "Description of the automation."
        },
        "isTemplate": {
          "type": "boolean",
          "title": "Specifies if the automation is a template"
        },
        "templatePublishedTime": {
          "type": "string",
          "format": "date-time",
          "title": "Time that the template was published, empty if automation is not a template or not published"
        },
        "isDefaultAutomation": {
          "type": "boolean",
          "title": "Specifies if the automation is a default automation"
        },
        "defaultAutomationPublishedTime": {
          "type": "string",
          "format": "date-time",
          "title": "Time that the default automation was published, empty if automation is not a default automation or not published"
        },
        "originTemplateId": {
          "type": "string",
          "title": "The id of the template from which the automation was derived"
        },
        "originDefaultAutomationId": {
          "type": "string",
          "title": "The id of the default automation from which the automation was derived"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hidden": {
          "type": "boolean",
          "title": "Flag to determine if the automation is hidden or not from partners, if it can be hidden"
        },
        "entityType": {
          "$ref": "#/definitions/v1EntityType",
          "title": "The entity type that the automation centers around"
        },
        "token": {
          "$ref": "#/definitions/v1Token",
          "title": "The token associated with permissions for an automation"
        },
        "context": {
          "$ref": "#/definitions/v1Context",
          "title": "The context the automation is running in"
        },
        "notes": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          }
        },
        "isSnippetAutomation": {
          "type": "boolean",
          "title": "Specifies if the automation is a snippet"
        },
        "snippetAutomationPublishedTime": {
          "type": "string",
          "format": "date-time",
          "title": "Time that the default automation was published, empty if automation is not a snippet automation or not published"
        },
        "goal": {
          "$ref": "#/definitions/v1WorkflowStep",
          "description": "The (optional) goal of the automation, this is a filter step that when executed and passes the automation is considered to have reached its goal and will end."
        },
        "isEphemeralAutomation": {
          "type": "boolean",
          "title": "Ephemeral automations are temporary, live to serve a specific purpose and then be automatically turned off"
        }
      }
    },
    "v1AutomationConfiguration": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "automationId": {
          "type": "string"
        },
        "disabledMarkets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Deprecated: use AutomationConfigurationV2 instead"
    },
    "v1AutomationConfigurationV2": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "context": {
          "$ref": "#/definitions/v1Context"
        },
        "namespace": {
          "type": "string"
        },
        "disabled": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AutomationConfigurationV2Identifier": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "context": {
          "$ref": "#/definitions/v1Context"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1AutomationPublishedState": {
      "type": "string",
      "enum": [
        "AUTOMATION_PUBLISHED_STATE_NOT_SPECIFIED",
        "AUTOMATION_PUBLISHED_STATE_PUBLISHED",
        "AUTOMATION_PUBLISHED_STATE_DRAFT"
      ],
      "default": "AUTOMATION_PUBLISHED_STATE_NOT_SPECIFIED",
      "title": "whether the automation is published or not; relevant only to AutomationTypes default or template"
    },
    "v1AutomationSettings": {
      "type": "object",
      "properties": {
        "runType": {
          "$ref": "#/definitions/v1RunType"
        },
        "errorHandlingType": {
          "$ref": "#/definitions/v1ErrorHandlingType"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "v1AutomationStatus": {
      "type": "string",
      "enum": [
        "AUTOMATION_STATUS_NOT_SPECIFIED",
        "AUTOMATION_STATUS_ON",
        "AUTOMATION_STATUS_OFF"
      ],
      "default": "AUTOMATION_STATUS_NOT_SPECIFIED",
      "title": "whether the automation is on or off; relevant to default AutomationType"
    },
    "v1AutomationSubscription": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The iam.User that has subscribed."
        },
        "automationId": {
          "type": "string",
          "title": "The automation to subscribe to"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner id and market ids are really only relevant to default automations\nuse namespace instead"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The market ids the user is subscribing for"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1AutomationType": {
      "type": "string",
      "enum": [
        "AUTOMATION_TYPE_NONE",
        "AUTOMATION_TYPE_REVIEW_REMINDER"
      ],
      "default": "AUTOMATION_TYPE_NONE",
      "title": "- AUTOMATION_TYPE_NONE: No automation\n - AUTOMATION_TYPE_REVIEW_REMINDER: Send an automated reminder if the previous review request has not been responded to"
    },
    "v1CallOptions": {
      "type": "object",
      "properties": {
        "retryPolicyOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RetryPolicy"
          },
          "description": "Custom policies for retrying resource requests based on http status error codes in the 400 range."
        }
      }
    },
    "v1Choices": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Rule"
          }
        },
        "defaultNextStep": {
          "type": "string"
        }
      }
    },
    "v1Context": {
      "type": "object",
      "properties": {
        "namespaced": {
          "$ref": "#/definitions/v1NamespacedContext"
        },
        "typed": {
          "$ref": "#/definitions/v1TypedContext"
        }
      },
      "description": "Context scopes a request to a specific persona.  A persona can either be a typed or a typed/namespace unique pair.\nA typed context scopes a persona to a specific type, such as a partner user.\nA namespaced context scopes a persona to a specific type and a given namespace, such as an SMB that belongs to a\nspecific partner."
    },
    "v1CopyAutomationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CountRunningWorkflowsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CreateAutomationResponse": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        }
      }
    },
    "v1CreateTaskDefinitionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DataType": {
      "type": "string",
      "enum": [
        "DATA_TYPE_UNSPECIFIED",
        "DATA_TYPE_UNKNOWN",
        "DATA_TYPE_STRING",
        "DATA_TYPE_BOOLEAN",
        "DATA_TYPE_ORDER_ACTION_TYPE",
        "DATA_TYPE_ORDER_DECLINED_REASON_IDS",
        "DATA_TYPE_ACCOUNT_GROUP_ID",
        "DATA_TYPE_ORDER_ID",
        "DATA_TYPE_SMB_USER_ID",
        "DATA_TYPE_FULFILLMENT_PROJECT_ID",
        "DATA_TYPE_EMAIL_ID",
        "DATA_TYPE_EMAIL_EVENT",
        "DATA_TYPE_OPPORTUNITY_ID",
        "DATA_TYPE_JSON",
        "DATA_TYPE_COMPANY_ID",
        "DATA_TYPE_CONTACT_ID",
        "DATA_TYPE_PRODUCT",
        "DATA_TYPE_TASK",
        "DATA_TYPE_CRM_NOTE",
        "DATA_TYPE_CRM_EMAIL",
        "DATA_TYPE_CRM_MEETING",
        "DATA_TYPE_CRM_CALL",
        "DATA_TYPE_CRM_SMS",
        "DATA_TYPE_CRM_LINKEDIN",
        "DATA_TYPE_CRM_INBOX",
        "DATA_TYPE_INTEGRATION_CONNECTION",
        "DATA_TYPE_NUMBER",
        "DATA_TYPE_CURRENCY",
        "DATA_TYPE_DATETIME",
        "DATA_TYPE_CRM_OPPORTUNITY_ID",
        "DATA_TYPE_INVOICE",
        "DATA_TYPE_CRM_CUSTOM_OBJECT_ID"
      ],
      "default": "DATA_TYPE_UNSPECIFIED",
      "title": "- DATA_TYPE_ORDER_ACTION_TYPE: the action type taken on the order (eg. approve, decline)\n - DATA_TYPE_ORDER_DECLINED_REASON_IDS: the sales order declined reason ids\n - DATA_TYPE_COMPANY_ID: CRM Company\n - DATA_TYPE_CONTACT_ID: CRM Contact\n - DATA_TYPE_TASK: This is a CRM task\n - DATA_TYPE_INTEGRATION_CONNECTION: Integration connection\n - DATA_TYPE_CRM_OPPORTUNITY_ID: CRM Opportunity\n - DATA_TYPE_CRM_CUSTOM_OBJECT_ID: CRM Custom Object"
    },
    "v1DefaultAutomation": {
      "type": "object",
      "properties": {
        "defaultAutomation": {
          "$ref": "#/definitions/v1Automation"
        },
        "configuration": {
          "$ref": "#/definitions/v1AutomationConfigurationV2"
        }
      }
    },
    "v1DefaultAutomationStatus": {
      "type": "string",
      "enum": [
        "LIST_DEFAULT_AUTOMATIONS_FOR_PARTNER_REQUEST_DEFAULT_AUTOMATION_STATUS_ON",
        "LIST_DEFAULT_AUTOMATIONS_FOR_PARTNER_REQUEST_DEFAULT_AUTOMATION_STATUS_OFF"
      ],
      "default": "LIST_DEFAULT_AUTOMATIONS_FOR_PARTNER_REQUEST_DEFAULT_AUTOMATION_STATUS_ON"
    },
    "v1DefaultAutomationWithConfiguration": {
      "type": "object",
      "properties": {
        "defaultAutomation": {
          "$ref": "#/definitions/v1Automation"
        },
        "configuration": {
          "$ref": "#/definitions/v1AutomationConfiguration"
        }
      }
    },
    "v1ErrorHandlingType": {
      "type": "string",
      "enum": [
        "ERROR_HANDLING_TYPE_UNDEFINED",
        "ERROR_HANDLING_TYPE_STOP_ON_ERROR",
        "ERROR_HANDLING_TYPE_CONTINUE_ON_ERROR"
      ],
      "default": "ERROR_HANDLING_TYPE_UNDEFINED"
    },
    "v1EventTriggerDefinition": {
      "type": "object",
      "properties": {
        "eventTypeId": {
          "type": "string",
          "title": "Event type ID that automata system will subscribe to from event broker\nExample: `/app/accounts/event/product-activation`"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "title": "Name for trigger definition, used only internally for listing purposes\nExample: `Product activated`"
        },
        "parametersPaths": {
          "type": "string",
          "title": "Parameter paths is composed of the required JSONPath parameters that will be extracted from the event broker event\nExpected format: `{\"account_group_id.$\": \"{.account_group_id}\", \"partner_id.$\": \"{.partner_id}\", \"market_id.$\": \"{.market_id}\", \"app_id.$\": \"{.app_id}\"}`"
        },
        "triggerContextIdFormat": {
          "type": "string",
          "title": "Format used to create identifier to detect multiple runs having the same context in an automation triggered through this trigger\nExpected format: `/product-activated/account-group/<account_group_id>/app_id/<app_id>`"
        },
        "lastEditedBy": {
          "type": "string",
          "title": "iam.User.Id of the user that most recently modified this event trigger definition"
        },
        "parameterFilterKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The filters on the parameter paths set on a WorkflowStep and saved to the waiting for Activity (which is then queried to check for a match with the incoming event)"
        },
        "flattenedConfig": {
          "$ref": "#/definitions/v1FlattenedConfig",
          "title": "Specifies an array field that should be flattened with each element triggering a separate automation"
        }
      }
    },
    "v1FlattenedConfig": {
      "type": "object",
      "properties": {
        "sourcePath": {
          "type": "string",
          "title": "// The array field being flattened in the source event and what the destination path will be\neg. {\"geese.$\":\"{.goose}\"} except its base64"
        },
        "dataType": {
          "$ref": "#/definitions/v1FlattenedConfigDataType",
          "title": "The type of the field being flattened"
        }
      }
    },
    "v1FlattenedConfigDataType": {
      "type": "string",
      "enum": [
        "FLATTENED_CONFIG_DATA_TYPE_UNSET",
        "FLATTENED_CONFIG_DATA_TYPE_STRUCT",
        "FLATTENED_CONFIG_DATA_TYPE_STRING",
        "FLATTENED_CONFIG_DATA_TYPE_INT",
        "FLATTENED_CONFIG_DATA_TYPE_FLOAT",
        "FLATTENED_CONFIG_DATA_TYPE_BOOL",
        "FLATTENED_CONFIG_DATA_TYPE_TIME"
      ],
      "default": "FLATTENED_CONFIG_DATA_TYPE_UNSET"
    },
    "v1GetAutomationAccessRequirementsResponse": {
      "type": "object",
      "properties": {
        "successIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Success and failed lists of task definition IDs"
    },
    "v1GetAutomationConfigurationV2Response": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1AutomationConfigurationV2"
        }
      }
    },
    "v1GetAutomationTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetEventTriggerDefinitionResponse": {
      "type": "object",
      "properties": {
        "eventTriggerDefinition": {
          "$ref": "#/definitions/v1EventTriggerDefinition"
        }
      }
    },
    "v1GetMultiAutomationsResponse": {
      "type": "object",
      "properties": {
        "automations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Automation"
          }
        }
      }
    },
    "v1GetMultiTaskDefinitionResponse": {
      "type": "object",
      "properties": {
        "taskDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskDefinition"
          }
        }
      }
    },
    "v1GetTaskDefinitionResponse": {
      "type": "object",
      "properties": {
        "taskDefinition": {
          "$ref": "#/definitions/v1TaskDefinition"
        }
      }
    },
    "v1GetWorkflowStepPredecessorOutputParamsResponse": {
      "type": "object",
      "properties": {
        "workflowStepOutputParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowStepOutputParameterContainer"
          }
        }
      }
    },
    "v1InputParameter": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v1Parameter"
        },
        "required": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "validationType": {
          "$ref": "#/definitions/v1ValidationType"
        }
      }
    },
    "v1ListActivitiesCurrentlyWaitingRequestFilters": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "workflowStepId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string",
          "title": "Deprecated: use namespace instead"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListActivitiesCurrentlyWaitingResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListActivitiesRequestFilters": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "runId": {
          "type": "string",
          "title": "Deprecated: use main_run_id instead"
        },
        "entityId": {
          "type": "string"
        },
        "workflowStepId": {
          "type": "string"
        },
        "stage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Stage"
          }
        },
        "partnerId": {
          "type": "string",
          "title": "Deprecated: use namespace instead"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latestPerAutomation": {
          "type": "boolean",
          "title": "will return only the latest activity per automation"
        },
        "automationType": {
          "$ref": "#/definitions/v1AutomationType",
          "title": "Limit the activities to a specific type"
        },
        "onlyErrors": {
          "type": "boolean",
          "title": "Only returns activities that have an error"
        },
        "mainRunId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListAutomationRunsRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Deprecated: use namespace instead"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "automationId": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Stage"
          }
        },
        "showDefault": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "startingUserId": {
          "type": "string"
        },
        "startedProcessingMin": {
          "type": "string",
          "format": "date-time"
        },
        "startedProcessingMax": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListAutomationRunsResponse": {
      "type": "object",
      "properties": {
        "automationRuns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListAutomationsRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Use namespace instead"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "New automations do not have markets"
        },
        "lastUpdatedBy": {
          "type": "string"
        },
        "includeDeleted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "runningStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunningState"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "automationType": {
          "$ref": "#/definitions/v1AutomationType"
        },
        "publishedStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AutomationPublishedState"
          }
        },
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AutomationStatus"
          }
        },
        "workflowStepTaskDefinitionId": {
          "type": "string",
          "title": "Workflow Step Task Definition ID will filter automations to only those that contain a specific task definition as a workflow step"
        },
        "triggerTaskDefinitionId": {
          "type": "string",
          "title": "Trigger Task Definition ID will filter automations to only those that contain a specific task definition as either the trigger step or used in a delay until event step"
        },
        "tokenUserId": {
          "type": "string",
          "title": "Token User ID will filter automations to only those that are using an OAuth2 token supplied by the specified user"
        },
        "context": {
          "$ref": "#/definitions/v1Context",
          "title": "Context will filter automations to only those that the automation is intended for, e.g.: partner, smb"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListAutomationsRequestV2Filters": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "namespace e.g., \"VUNI\", \"AG-123456\""
        },
        "context": {
          "$ref": "#/definitions/v1Context",
          "title": "context e.g.: partner, smb"
        },
        "automationTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AutomationType"
          }
        },
        "name": {
          "type": "string",
          "title": "name of the automation (can do partial matches)"
        },
        "runningStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunningState"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggerTaskDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "trigger_task_definition_ids will filter automations to only those that contain a specific task definition as either the trigger step or used in a delay until event step"
        },
        "lastUpdatedBy": {
          "type": "string",
          "title": "last_updated_by user id of the user who last updated the automation"
        },
        "tokenUserId": {
          "type": "string",
          "title": "token_user_id will filter automations to only those that are using an OAuth2 token supplied by the specified user"
        },
        "parentNamespace": {
          "type": "string",
          "description": "an extra namespace that to look up automations for. In general, this will be used when asking for both the automations of an SMB context and it's partner's\nnamespace at the same time."
        },
        "excludePlatformAutomations": {
          "type": "boolean",
          "title": "Platform automations are automations that we have built and provided to customers"
        }
      }
    },
    "v1ListAutomationsResponse": {
      "type": "object",
      "properties": {
        "automations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Automation"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListDefaultAutomationsForPartnerRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DefaultAutomationStatus"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListDefaultAutomationsForPartnerResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DefaultAutomationWithConfiguration"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListDefaultAutomationsRequestFilters": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/v1Context"
        },
        "partnerId": {
          "type": "string",
          "title": "Use namespace instead"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DefaultAutomationStatus"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListDefaultAutomationsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DefaultAutomation"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListEventTriggerDefinitionRequestFilters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1ListEventTriggerDefinitionResponse": {
      "type": "object",
      "properties": {
        "eventTriggerDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EventTriggerDefinition"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListSnippetsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace the snippets exist in."
        },
        "parentNamespace": {
          "type": "string",
          "description": "Optional. A parent namespace of snippets to include."
        },
        "context": {
          "$ref": "#/definitions/v1Context",
          "title": "Context the snippets are for. (note: partners can list snippets in the SMB context)"
        },
        "publishedStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AutomationPublishedState"
          },
          "title": "Which published states to include. (note: partners can create draft snippets for their SMBs)"
        },
        "name": {
          "type": "string",
          "title": "Search for the name of snippet"
        }
      }
    },
    "v1ListSnippetsRequestValidationData": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string",
          "title": "The id of the automation to validate the snippet against"
        },
        "immediateStepParentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The ids of the steps immediately above where we are wanting to add the snippet"
        }
      }
    },
    "v1ListSnippetsResponse": {
      "type": "object",
      "properties": {
        "snippets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Snippet"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListTaskDefinition": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "taskDefinition": {
          "$ref": "#/definitions/v1TaskDefinition"
        },
        "hasAccessToRun": {
          "type": "boolean",
          "title": "Flag indicating whether the requesting user has access to run the task"
        }
      }
    },
    "v1ListTaskDefinitionsRequestFilters": {
      "type": "object",
      "properties": {
        "taskType": {
          "$ref": "#/definitions/v1TaskType"
        },
        "internal": {
          "type": "boolean"
        },
        "publishedState": {
          "$ref": "#/definitions/v1PublishedState"
        },
        "onlyAvailableInDefaultAutomations": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "waitForDataTypeScope": {
          "$ref": "#/definitions/v1DataType",
          "title": "Filters to task definitions with at least one matching parameter filter key on its optionally linked event trigger definition\nFor example, if an event trigger definition has a parameter filter key of `account_group_id` and a task definition is linked to it\nvia it's entity_type_id and has an input parameter with the same id and the `AccountGroup` type, then specifying that type will return that\ntask definition in the results"
        },
        "marketReliant": {
          "type": "boolean",
          "description": "market reliant should no longer be used. It no longer serves a function and will be removed in the future."
        },
        "supportedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Context"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to filter by, will return task definitions that have at least one matching tag"
        }
      }
    },
    "v1ListTaskDefinitionsRequestValidationData": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "workflowStepParentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This api is called when adding a new step so there isn't a \"current\" step id to get the parents of, need the frontend to pass them in."
        },
        "triggerTaskDefinitionId": {
          "type": "string",
          "title": "Use this to validate the task definitions against a provided trigger task definition ID instead of what is saved on the automation"
        }
      }
    },
    "v1ListTaskDefinitionsResponse": {
      "type": "object",
      "properties": {
        "taskDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListTaskDefinition"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1OrderKey": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        }
      }
    },
    "v1OutputParameter": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v1Parameter"
        },
        "optional": {
          "type": "boolean"
        },
        "isEntity": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "v1Parameter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dataType": {
          "$ref": "#/definitions/v1DataType"
        },
        "repeated": {
          "type": "boolean"
        }
      }
    },
    "v1PublishedState": {
      "type": "string",
      "enum": [
        "PUBLISHED_STATE_UNSPECIFIED",
        "PUBLISHED_STATE_PUBLISHED",
        "PUBLISHED_STATE_DRAFT"
      ],
      "default": "PUBLISHED_STATE_UNSPECIFIED"
    },
    "v1RateLimit": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "runningVersion": {
          "type": "string"
        },
        "stepId": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "unit": {
          "$ref": "#/definitions/v1RateLimitUnit",
          "title": "The time use that is used with the amount to calculate the window"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "The number of time units in the window"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1RateLimitUnit": {
      "type": "string",
      "enum": [
        "RATE_LIMIT_UNIT_UNSPECIFIED",
        "RATE_LIMIT_UNIT_HOUR",
        "RATE_LIMIT_UNIT_DAY"
      ],
      "default": "RATE_LIMIT_UNIT_UNSPECIFIED"
    },
    "v1RetryPolicy": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string",
          "title": "status code for the retry policy"
        },
        "maximumAttempts": {
          "type": "string",
          "format": "int64",
          "title": "maximum number of attempts that will be run before failing a task"
        }
      },
      "title": "Policy for retrying resource requests"
    },
    "v1RunType": {
      "type": "string",
      "enum": [
        "RUN_TYPE_NOT_SPECIFIED",
        "RUN_TYPE_ONLY_ONCE",
        "RUN_TYPE_MULTIPLE",
        "RUN_TYPE_ONE_AT_A_TIME"
      ],
      "default": "RUN_TYPE_NOT_SPECIFIED"
    },
    "v1RunningState": {
      "type": "string",
      "enum": [
        "RUNNING_STATE_NOT_SPECIFIED",
        "RUNNING_STATE_RUNNING",
        "RUNNING_STATE_STOPPED",
        "RUNNING_STATE_DRAINING"
      ],
      "default": "RUNNING_STATE_NOT_SPECIFIED"
    },
    "v1SearchManualAutomationsRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Deprecated: use namespace instead"
        },
        "onlySalesRunnable": {
          "type": "boolean"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "entityTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EntityType"
          }
        },
        "context": {
          "$ref": "#/definitions/v1Context"
        }
      }
    },
    "v1SearchManualAutomationsResponse": {
      "type": "object",
      "properties": {
        "automations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Automation"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1SleepWaitConditions": {
      "type": "object",
      "properties": {
        "weekdaySelection": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeRangeStartHour": {
          "type": "integer",
          "format": "int32",
          "title": "The hour component for the earliest time where it is acceptable to run the\nautomation (see notes above)"
        },
        "timeRangeStartMinute": {
          "type": "integer",
          "format": "int32",
          "title": "The minute component for the earliest time where it is acceptable to run\nthe automation (see notes above)"
        },
        "timeRangeEndHour": {
          "type": "integer",
          "format": "int32",
          "title": "The hour component for the latest time where it is acceptable to run the\nautomation (see notes above)"
        },
        "timeRangeEndMinute": {
          "type": "integer",
          "format": "int32",
          "title": "The minute component for the latest time where it is acceptable to run the\nautomation (see notes above)"
        },
        "dayOfMonthSelection": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The day of the month that the automation can run on. Valid values are 1-32,\nwhere 32 is used to select the last day of the month (28, 29, 30, or 31)."
        }
      },
      "description": "SleepWaitConditions define the conditions that must be met before the\nautomation can run.\n\nNote 1: Unless otherwise configured here, the time_range values are relative\nto the timezone specified in the Automation's settings.\n\nNote 2: Setting all of the \"time_range_\" values to 0 means that the automation\ncan run at any time of day - assuming the other wait conditions are also met."
    },
    "v1Snippet": {
      "type": "object",
      "properties": {
        "automation": {
          "$ref": "#/definitions/v1Automation"
        },
        "valid": {
          "type": "boolean",
          "title": "Fueled by the ValidationData of the request. Will be false if missing required input data"
        }
      },
      "title": "Snippet is a group of actions stored as an Automation"
    },
    "v1SummarizeAutomationResponse": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        }
      }
    },
    "v1TaskDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID for task definition, e.g.,: \"TaskDefinition-add-a-tag\""
        },
        "name": {
          "type": "string",
          "title": "Name for task definition, only used in backend for listing, e.g.,: \"Add a tag\""
        },
        "resource": {
          "$ref": "#/definitions/v1Resource",
          "title": "Resource used to make request in-platform to either modify a resource, or get it to use in filters"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "inputParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InputParameter"
          },
          "title": "Input parameters for task definition resource execution"
        },
        "outputParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OutputParameter"
          },
          "title": "Output parameters for task definition, parameters this task will care about passing along the event stream"
        },
        "taskType": {
          "$ref": "#/definitions/v1TaskType",
          "title": "Type of task, can be: trigger, action, filter or building block"
        },
        "internal": {
          "type": "boolean",
          "title": "Flag to set whether a task definition will be exposed only internally"
        },
        "publishedState": {
          "$ref": "#/definitions/v1PublishedState",
          "title": "Property to set whether a task definition has been published and can be seen by everyone or if it's still in draft, and thus in development"
        },
        "requiredScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The scopes required to use an access token to hit the apis used in the resource"
        },
        "availableInDefaultAutomations": {
          "type": "boolean",
          "title": "Flag to set whether a task definition is available to be used in default automations"
        },
        "requiredSubscriptionFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The subscription features required to use this task"
        },
        "lastEditedBy": {
          "type": "string",
          "title": "iam.User.Id of the user that most recently modified this task definition"
        },
        "eventTypeId": {
          "type": "string",
          "title": "Only used on trigger task types: The id of the event type that will trigger this task definition"
        },
        "preProcessors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowStep"
          },
          "title": "A list of workflow steps to be executed before the resource"
        },
        "marketReliant": {
          "type": "boolean",
          "description": "market reliant should no longer be used. It no longer serves a function and will be removed in the future."
        },
        "eventSubTypeId": {
          "type": "string",
          "title": "Only used on trigger task types: The id of the event sub type that will trigger this task definition"
        },
        "supportedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Context"
          },
          "title": "The contexts that this task definition can successfully be run in"
        },
        "choices": {
          "$ref": "#/definitions/v1Choices",
          "description": "The choices to execute before the step runs to decide if it should run or not based on some external static data.\nThe main use case for this is to differentiate the Contact and Company CRM triggers. It's the same event topic, but\nthe value of object_type is either CONTACT or COMPANY."
        },
        "requiredApps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppKey"
          },
          "title": "Marketplaces apps required to use this task definition. Multiple apps will be evaluated as an OR, not as an AND"
        },
        "staticValidationRules": {
          "$ref": "#/definitions/v1Choices",
          "description": "Static validation rules are rules that are run during the listing of task definitions to determine if the task definiton is valid\nto run. This can be used for things such as a \"at least one value required\" validator."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to categorize the task definition"
        }
      }
    },
    "v1TaskType": {
      "type": "string",
      "enum": [
        "TASK_TYPE_UNSPECIFIED",
        "TASK_TYPE_ACTION",
        "TASK_TYPE_TRIGGER",
        "TASK_TYPE_BUILDING_BLOCKS",
        "TASK_TYPE_FILTER"
      ],
      "default": "TASK_TYPE_UNSPECIFIED"
    },
    "v1Token": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The iam.User id of the user with whose auth the automation is running with"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The scopes that have already been granted to this automation by the user"
        },
        "refreshTokenExpiry": {
          "type": "string",
          "format": "date-time",
          "title": "When the refresh token expires"
        },
        "brokenTime": {
          "type": "string",
          "format": "date-time",
          "title": "The time at which it was discovered that the token was broken"
        },
        "consentingUserId": {
          "type": "string",
          "description": "The iam.User id of the user that consented to the scopes of the automation\nto be run using a service account. If this value is set then the user_id\nabove is the one of a service account."
        }
      }
    },
    "v1ValidationType": {
      "type": "string",
      "enum": [
        "VALIDATION_TYPE_UNSPECIFIED",
        "VALIDATION_TYPE_STREAM",
        "VALIDATION_TYPE_USER_PROVIDED",
        "VALIDATION_TYPE_SYSTEM"
      ],
      "default": "VALIDATION_TYPE_UNSPECIFIED"
    },
    "v1WaitForTriggerFilter": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1WorkflowStep": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "taskDefinitionId": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "choices": {
          "$ref": "#/definitions/v1Choices"
        },
        "sleep": {
          "type": "string",
          "format": "int64",
          "title": "sleep duration in nanoseconds"
        },
        "waitForTriggerDefinitionId": {
          "type": "string",
          "title": "WaitForTriggerDefinitionID is the TriggerDefinitionID of the event that the step should wait for"
        },
        "waitForTriggerTaskDefinitionId": {
          "type": "string",
          "title": "WaitForTriggerTaskDefinitionID is the id of the TaskDefinition that should run when the trigger happens"
        },
        "name": {
          "type": "string"
        },
        "customOutputParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OutputParameter"
          },
          "title": "Custom output parameters for the workflow step that will be used in addition to the step's task definition output parameters"
        },
        "waitForTriggerFilter": {
          "$ref": "#/definitions/v1WaitForTriggerFilter",
          "title": "wait_for_trigger_filter a key-value pair for which filtering on the incoming trigger event, e.g., \"task_id\" & \"{.WorkflowStep.123.task_id}\""
        },
        "clearedDataFlag": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "sleepWaitConditions": {
          "$ref": "#/definitions/v1SleepWaitConditions"
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "v1WorkflowStepOutputParameterContainer": {
      "type": "object",
      "properties": {
        "workflowStep": {
          "$ref": "#/definitions/v1WorkflowStep"
        },
        "outputParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OutputParameter"
          }
        }
      }
    },
    "AddMultiToShoppingCartRequestItem": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "item_id is the id of the marketplace item to be added to the cart"
        },
        "itemType": {
          "$ref": "#/definitions/v1ShoppingCartItemType",
          "title": "the type of the item (package or product)"
        },
        "editionId": {
          "type": "string",
          "description": "The ID of the edition, if the item is an app edition.\nIf not, the edition ID should be empty."
        }
      }
    },
    "AppEnablementStatusesAppEnablementStatus": {
      "type": "string",
      "enum": [
        "NOT_SPECIFIED",
        "ENABLED",
        "DISABLED"
      ],
      "default": "NOT_SPECIFIED"
    },
    "AreAppsDistributedToPartnerResponseAppDistributedContainer": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the application"
        },
        "isDistributed": {
          "type": "boolean",
          "title": "Reflects the distributed boolean on the model. This is used to decide whether the app is available in Partner\nCenter, either for the Partner who made it or multiple partners. If it's turned off then it's not available\nin Partner Center"
        },
        "isSolelyDistributedToPartner": {
          "type": "boolean",
          "title": "If the app is marked as distributed but the partner making the request is the only one in the white list,\nthen this will return true. If multiple partners are whitelisted it will return false. We want to communicate\nto vendors that their app is distributed only when it's available for resale by other partners"
        }
      },
      "title": "Is this one app distributed?"
    },
    "BulkCopyPackageRequestPackageSource": {
      "type": "object",
      "properties": {
        "packageIdsContainer": {
          "$ref": "#/definitions/v1PackageIdContainer",
          "description": "A wrapper for package ids to be compatible with proto3 oneof clauses."
        },
        "scope": {
          "$ref": "#/definitions/v1PackageScope"
        }
      },
      "description": "Definition of where the packages to copy originate from."
    },
    "GetMultiAddonsByAppResponseAddonListContainer": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Addon"
          }
        }
      },
      "title": "A container for a list of addons"
    },
    "GetMultiIsAppEnabledResponseAppEnablement": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "GetMultiPackageResponsePackageContainer": {
      "type": "object",
      "properties": {
        "package": {
          "$ref": "#/definitions/v1Package"
        }
      }
    },
    "GetMultiProductsResponseProductContainer": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product"
        }
      }
    },
    "GetMultiRetailPriceResponseRetailPriceResponse": {
      "type": "object",
      "properties": {
        "productId": {
          "$ref": "#/definitions/v1ProductIdentifier",
          "title": "The app/edition ID combination of the requested retail price"
        },
        "retailPrice": {
          "$ref": "#/definitions/v1RetailPrice",
          "title": "The requested retail price"
        }
      }
    },
    "ListAppDistributionStatusResponseAppDistributionStatus": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "app id"
        },
        "name": {
          "type": "string",
          "title": "name of the app"
        },
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "a white list containing partner ids that can access the app"
        },
        "blacklist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "a black list containing partner ids that cannot access the app"
        },
        "distributable": {
          "type": "boolean",
          "title": "if true, an app is accessable by all partners that are not in the black list. If false, the app is accessable only by partners in the white list"
        }
      }
    },
    "ListDiscoverableAppSuggestionsResponseSuggestion": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string"
        }
      }
    },
    "ListDistributedAppIdsRequestListDistributedAppIdsRequestFilters": {
      "type": "object",
      "properties": {
        "appTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AppType"
          },
          "description": "app_types is a list of app types to filter to. Including nothing means to not filter by app types."
        }
      }
    },
    "ListStoreProductVisibilitySummariesResponseStoreProductVisibilitySummary": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "numStoresVisible": {
          "type": "string",
          "format": "int64",
          "description": "The number of stores that the product is visible in."
        }
      }
    },
    "LmiCategories": {
      "type": "string",
      "enum": [
        "NOT_SET",
        "WEBSITE",
        "CONTENT_AND_EXPERIENCE",
        "LISTINGS",
        "REPUTATION",
        "SEO",
        "SOCIAL",
        "ADVERTISING"
      ],
      "default": "NOT_SET"
    },
    "ShoppingCartShoppingCartItem": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "item_id is the id of the marketplace item in the cart"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "quantity is the number of marketplace items in the cart"
        },
        "itemType": {
          "$ref": "#/definitions/v1ShoppingCartItemType",
          "title": "the type of the item (package or product)"
        },
        "editionId": {
          "type": "string",
          "description": "The ID of the edition, if the item is an app edition.\nIf not, the edition ID should be empty."
        }
      }
    },
    "v1ActivatableApp": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "id of the app"
        },
        "name": {
          "type": "string",
          "title": "name of the app"
        },
        "headerImage": {
          "type": "string",
          "title": "header image from app general settings"
        },
        "tagline": {
          "type": "string",
          "title": "tagline from app general settings"
        },
        "icon": {
          "type": "string",
          "title": "icon from app general settings"
        },
        "countryRestrictions": {
          "$ref": "#/definitions/v1PermissionLists",
          "title": "countries this app is restricted for"
        },
        "allowMultipleActivations": {
          "type": "boolean",
          "title": "whether or not the app allows multiple activations"
        },
        "childActivatableApps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivatableApp"
          },
          "title": "a list of child activatable apps that depend on this app being enabled and distributed"
        }
      },
      "title": "An app that is available to be activated"
    },
    "v1AddonKey": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string",
          "title": "Unique identifier of an addon"
        },
        "appId": {
          "type": "string",
          "title": "The parent app for the addon"
        }
      }
    },
    "v1AddonOptions": {
      "type": "object",
      "properties": {
        "groupAddonsWithParent": {
          "type": "boolean",
          "title": "flag used to determine if addons will be grouped with parent in response"
        },
        "displayNonDiscoverableAddons": {
          "type": "boolean",
          "title": "flag used to determine if we want non-discoverable addons in response"
        }
      }
    },
    "v1AppData": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "title": "scope of the data, ie: /VUNI/default-market"
        },
        "kindValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KindValues"
          },
          "title": "List of the data for the app"
        }
      },
      "description": "product/app data a.k.a. tags."
    },
    "v1AppSummary": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the app"
        },
        "name": {
          "type": "string",
          "title": "The name of the app"
        },
        "icon": {
          "type": "string",
          "title": "Icon for the app"
        },
        "headerImage": {
          "type": "string",
          "title": "A larger image to display marketing content"
        },
        "tagline": {
          "type": "string",
          "title": "Product information: tagline"
        },
        "enabled": {
          "type": "boolean",
          "title": "Whether or not the partner has enabled the discoverable app"
        },
        "billingId": {
          "type": "string",
          "title": "The billing id for the discoverable item"
        },
        "vendorWholesale": {
          "$ref": "#/definitions/v1WholesalePrice",
          "title": "wholesale vendor price"
        },
        "type": {
          "type": "string",
          "title": "The type of app the summary is being provided for"
        },
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppSummary"
          },
          "title": "a list of the available addons for this app"
        },
        "vendorRetailPrice": {
          "$ref": "#/definitions/v1VendorRetailPrice",
          "title": "vendor retail price"
        },
        "wholesalePricingFromBilling": {
          "$ref": "#/definitions/v1BillingWholesalePricing",
          "description": "wholesale pricing from billing. comes straight from billing."
        },
        "wholesalePrice": {
          "$ref": "#/definitions/v1ProductWholesalePrice",
          "description": "resolved wholesale price. edition and stairstep pricing is considered."
        },
        "setupFee": {
          "type": "string",
          "format": "int64",
          "description": "setup fee set on the marketplace app. Value is # of cents."
        }
      },
      "title": "AppSummary represents a subsection of the marketplace app fields"
    },
    "v1AreAppsDistributedToPartnerResponse": {
      "type": "object",
      "properties": {
        "areAppsDistributed": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AreAppsDistributedToPartnerResponseAppDistributedContainer"
          },
          "title": "Whether or not the apps are distributed to the partner on the request"
        }
      },
      "title": "Returns each app's distribution settings, with is_solely_distributed_to_partner\ntrue if the app is not distributed to anyone but the partner making the request"
    },
    "v1BillingWholesalePricing": {
      "type": "object",
      "properties": {
        "pricingType": {
          "$ref": "#/definitions/v1ProductPricingType"
        },
        "currency": {
          "type": "string"
        },
        "frequency": {
          "type": "string"
        },
        "pricingRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPricingRule"
          }
        },
        "commitment": {
          "$ref": "#/definitions/v1Commitment"
        },
        "isStartingPrice": {
          "type": "boolean"
        }
      }
    },
    "v1BulkCopyPackageResponse": {
      "type": "object"
    },
    "v1BuyItNowLink": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "description": "The ID of the account group for which the link was generated."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user for which the link was generated."
        },
        "packageId": {
          "type": "string",
          "description": "The ID of the package for which the link was generated."
        },
        "linkId": {
          "type": "string",
          "description": "The ID of the \"Buy It Now\" link."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The created time of the link."
        },
        "link": {
          "type": "string",
          "description": "The constructed link to the store package (e.g. https://vendasta-training.smblogin.com/buy-it-now/<link_id>)."
        }
      }
    },
    "v1Category": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "class": {
          "$ref": "#/definitions/v1CategoryClass"
        },
        "locale": {
          "$ref": "#/definitions/v1CategoryLocale"
        },
        "isHidden": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "fullName": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CategoryTranslation"
          }
        }
      }
    },
    "v1CheckProductVisibilityResponse": {
      "type": "object",
      "properties": {
        "productVisibilty": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          },
          "description": "a map keyed by marketId containing a boolean value indicating visbility status."
        }
      },
      "title": "reponse containing store product visibility information"
    },
    "v1ContactFormAction": {
      "type": "object",
      "title": "object for Contact Form for 'Get It now' action"
    },
    "v1CopyPackageResponse": {
      "type": "object",
      "properties": {
        "failedScope": {
          "$ref": "#/definitions/v1PackageScope",
          "title": "the destination that the package could not be copied to"
        }
      }
    },
    "v1CreatePackageResponse": {
      "type": "object",
      "properties": {
        "package": {
          "$ref": "#/definitions/v1Package",
          "title": "The package that was created"
        }
      }
    },
    "v1CreateStoreCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1Category",
          "title": "The newly created category"
        }
      },
      "title": "Response containing the ID of the newly created category"
    },
    "v1DefaultAction": {
      "type": "object",
      "title": "object for default legacy action"
    },
    "v1DiscoverProductSortOrderType": {
      "type": "string",
      "enum": [
        "SORT_ORDER_NOT_SPECIFIED",
        "SORT_ORDER_RELEASED",
        "SORT_ORDER_TRENDING",
        "SORT_ORDER_TOP_SELLING"
      ],
      "default": "SORT_ORDER_NOT_SPECIFIED",
      "title": "Discover product's sort order types"
    },
    "v1DiscoverableAppParent": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the app"
        },
        "name": {
          "type": "string",
          "title": "The name of the app"
        }
      }
    },
    "v1DiscoverableAppSummary": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the app"
        },
        "name": {
          "type": "string",
          "title": "The name of the app"
        },
        "icon": {
          "type": "string",
          "title": "Icon for the app"
        },
        "headerImage": {
          "type": "string",
          "title": "A larger image to display marketing content"
        },
        "tagline": {
          "type": "string",
          "title": "Product information: tagline"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "title": "The price of the app"
        },
        "billingFrequency": {
          "$ref": "#/definitions/FrequenciesFrequency",
          "title": "The frequency of the app will be billed for"
        },
        "currency": {
          "$ref": "#/definitions/CurrenciesCurrency",
          "title": "The currency the app will be billed in"
        },
        "enabled": {
          "type": "boolean",
          "title": "Whether or not the partner has enabled the discoverable app"
        },
        "lmiCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LmiCategories"
          },
          "title": "A list of Local marketing index category of the app"
        },
        "billingId": {
          "type": "string",
          "title": "The billing id for the discoverable item"
        },
        "type": {
          "type": "string",
          "title": "The type of app the summary is being provided for"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp of when the app was created"
        },
        "cost": {
          "$ref": "#/definitions/v1Cost",
          "title": "Cost to the vendor for provisioning of the App"
        },
        "appData": {
          "$ref": "#/definitions/v1AppData",
          "description": "additional data of the app/product."
        },
        "keySellingPoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of key selling points marketing info of the app"
        },
        "suggestedRetailPrice": {
          "$ref": "#/definitions/v1VendorRetailPrice",
          "title": "suggested retail price for the app"
        },
        "usesCustomPricing": {
          "type": "boolean",
          "description": "Whether or not this App's pricing model uses custom pricing. If so, minimum spend amount (\"starting at\" price) is captured by the `price` field."
        },
        "parent": {
          "$ref": "#/definitions/v1DiscoverableAppParent",
          "title": "In the event of a child app show the parents app id and name"
        }
      },
      "title": "DiscoverableAppSummary represents a subsection of the marketplace app fields"
    },
    "v1EnableCustomCategoriesForStoreResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "The LMI categories that are enflated as custom categories"
        }
      }
    },
    "v1ExternalUrlAction": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "url string for external navigation"
        }
      }
    },
    "v1FrequentlyAskedQuestions": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "title": "Question part of the faq"
        },
        "answer": {
          "type": "string",
          "title": "Answer part of the faq"
        }
      }
    },
    "v1GenerateBuyItNowLinkResponse": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1BuyItNowLink",
          "description": "The generated link for the user and package."
        },
        "shortenedUrl": {
          "type": "string",
          "title": "The shortened version of the buy-it-now link URL (e.g. https://1l.ink/abc123)"
        }
      }
    },
    "v1GetBuyItNowLinkByLinkIDResponse": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1BuyItNowLink",
          "description": "The generated link for the user and package."
        }
      }
    },
    "v1GetCategoriesForStoreResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "The requested categories"
        }
      },
      "title": "Response containing the requested categories"
    },
    "v1GetMultiAddonsByAppResponse": {
      "type": "object",
      "properties": {
        "addonMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GetMultiAddonsByAppResponseAddonListContainer"
          },
          "title": "A map of appIDs with their child apps"
        }
      }
    },
    "v1GetMultiAddonsResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Addon"
          },
          "title": "list of addons for above data"
        }
      }
    },
    "v1GetMultiIsAppEnabledResponse": {
      "type": "object",
      "properties": {
        "appEnablement": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiIsAppEnabledResponseAppEnablement"
          },
          "title": "Pairing of app_id and whether it is enabled"
        }
      }
    },
    "v1GetMultiPackageResponse": {
      "type": "object",
      "properties": {
        "packageContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiPackageResponsePackageContainer"
          },
          "title": "Packages found in lookup"
        }
      }
    },
    "v1GetMultiPartnerAppEnablementStatusResponse": {
      "type": "object",
      "properties": {
        "partnerAppResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerAppResponse"
          },
          "title": "a list of partner id,app id and status combinations"
        }
      }
    },
    "v1GetMultiProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiProductsResponseProductContainer"
          },
          "title": "The list of requested Products"
        }
      }
    },
    "v1GetMultiRetailPriceResponse": {
      "type": "object",
      "properties": {
        "retailPrices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiRetailPriceResponseRetailPriceResponse"
          },
          "title": "The list of requested retail prices"
        }
      },
      "title": "Response for GetMultiRetailPrice containing a repeated list of retail price objects"
    },
    "v1GetMultiStorePricePreviewsResponse": {
      "type": "object",
      "properties": {
        "productPreviews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductPricePreviews"
          },
          "description": "The list of product price previews."
        }
      },
      "description": "GetMultiStorePricePreviewsResponse represents the response to get the price previews for multiple products."
    },
    "v1GetPublicStoreThemeResponse": {
      "type": "object",
      "properties": {
        "publicStoreTheme": {
          "$ref": "#/definitions/v1PublicStoreTheme",
          "description": "The theme of the public storefront."
        }
      },
      "description": "Response when fetching the public storefront theme."
    },
    "v1GetStoreResponse": {
      "type": "object",
      "properties": {
        "storeId": {
          "$ref": "#/definitions/v1StoreIdentifier",
          "title": "The unique identifier for the store"
        },
        "publicStoreSalesPersonId": {
          "type": "string",
          "title": "The ID of the sales person that is associated with the public store\nThis is used to populate a contact form"
        },
        "useCustomCategories": {
          "type": "boolean",
          "title": "A flag that controls whether the store is using the old LMI categories or the new custom categories"
        },
        "categoryOrder": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of category IDs in the order that they should be displayed"
        }
      },
      "title": "The requested store entity"
    },
    "v1GetStoreWithCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "A list of category IDs in the order that they should be displayed"
        },
        "publicStoreSalesPersonId": {
          "type": "string",
          "title": "The public store sales person id"
        }
      }
    },
    "v1HasPartnerSetStoreOrderResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean",
          "description": "The result of the check."
        }
      },
      "description": "HasPartnerSetStoreOrderResponse defines the response for checking if a partner has any store order set."
    },
    "v1IsAppDistributedToPartnerResponse": {
      "type": "object",
      "properties": {
        "isDistributed": {
          "type": "boolean",
          "title": "Whether or not the app is distributed to the partner on the request"
        }
      },
      "title": "DEPRECATED: This response is associated with a deprecated RPC"
    },
    "v1IsShoppingCartEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "enabled indicates whether the cart is enabled"
        }
      }
    },
    "v1KindValues": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "data kind, ie: /tag/lmi"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of values for the kind"
        }
      },
      "title": "app data kind and values list pair"
    },
    "v1LineItems": {
      "type": "object",
      "properties": {
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LineItem"
          }
        }
      }
    },
    "v1ListActivatableAppsResponse": {
      "type": "object",
      "properties": {
        "activatableApps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivatableApp"
          },
          "title": "A list of apps that are both enabled and distributed for a partner"
        }
      }
    },
    "v1ListAddonsResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Addon"
          },
          "title": "The Addons for a partner"
        },
        "nextCursor": {
          "type": "string",
          "title": "Page of results that we are on"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Is there more pages?"
        }
      },
      "title": "DEPRECATED: This response is associated with a deprecated RPC"
    },
    "v1ListAppDistributionStatusResponse": {
      "type": "object",
      "properties": {
        "appDistributionStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListAppDistributionStatusResponseAppDistributionStatus"
          }
        }
      }
    },
    "v1ListAvailableAppsResponse": {
      "type": "object",
      "properties": {
        "availableAppsSummaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppSummary"
          },
          "title": "list of the apps matching the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListCategoriesForPackageResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "The requested categories"
        }
      },
      "title": "Response containing the categories that a package is in"
    },
    "v1ListDiscoverableAppSuggestionsResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListDiscoverableAppSuggestionsResponseSuggestion"
          },
          "title": "List of app \"suggestions\", object containing a few app fields"
        }
      }
    },
    "v1ListDiscoverableAppsResponse": {
      "type": "object",
      "properties": {
        "discoverableAppSummary": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DiscoverableAppSummary"
          }
        },
        "nextCursor": {
          "type": "string",
          "title": "Page of results that we are on"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Is there more pages?"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total results that match the query"
        }
      }
    },
    "v1ListDistributedAppIdsResponse": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListPackageIDsForProductResponse": {
      "type": "object",
      "properties": {
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of the package ids"
        }
      }
    },
    "v1ListPackagesResponse": {
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Package"
          },
          "title": "List of the packages that are available"
        },
        "nextCursor": {
          "type": "string",
          "title": "Page of results that we are on"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Are there more pages?"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total results of the query"
        }
      }
    },
    "v1ListPartnerAppEnablementStatusResponse": {
      "type": "object",
      "properties": {
        "partnerAppResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerAppResponse"
          },
          "title": "a list of partner id,app id and status combinations"
        }
      }
    },
    "v1ListProductFilter": {
      "type": "object",
      "properties": {
        "approved": {
          "type": "boolean",
          "title": "only return approved Products, used to filter out products that have lost approval"
        },
        "state": {
          "$ref": "#/definitions/v1StateFilterOptions",
          "description": "The app state to be included in the returned results. Will default to Published (filtering out those in Draft)."
        }
      },
      "description": "Filters for the list products end point."
    },
    "v1ListProductsInStoreFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "description": "The search term by which to filter the products."
        }
      }
    },
    "v1ListProductsInStoreResponse": {
      "type": "object",
      "properties": {
        "storeProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StoreProduct"
          },
          "description": "The products returned by the list operation."
        },
        "nextCursor": {
          "type": "string",
          "description": "The cursor to use to fetch the next page of products."
        },
        "hasMore": {
          "type": "boolean",
          "description": "Whether there are more products that can be listed."
        }
      },
      "description": "ListProductsInStoreResponse defines the response to list products for a store."
    },
    "v1ListStorePricePreviewsResponse": {
      "type": "object",
      "properties": {
        "previews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StorePricePreviews"
          }
        }
      },
      "description": "ListStorePricePreviewsRequest represents the response for retrieving store price previews."
    },
    "v1ListStoreProductVisibilitySummariesResponse": {
      "type": "object",
      "properties": {
        "summaries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ListStoreProductVisibilitySummariesResponseStoreProductVisibilitySummary"
          },
          "title": "Map of app ID to its corresponding summary"
        }
      },
      "description": "ListStoreProductVisibilitySummariesResponse represents the response for retrieving a summary of information for the store products that are visible in any of a partner's stores."
    },
    "v1ListVisibleAddonsForProductResponse": {
      "type": "object",
      "properties": {
        "storeProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StoreProduct"
          },
          "description": "The addons returned by the list operation."
        },
        "nextCursor": {
          "type": "string",
          "description": "The cursor to use to fetch the next page of products."
        },
        "hasMore": {
          "type": "boolean",
          "description": "Whether there are more products that can be listed."
        }
      },
      "title": "ListVisibleAddonsForProductResponse defines the response to list addons for a given parent product.\nDEPRECATED: This request is associated with a deprecated RPC"
    },
    "v1MarketAction": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/v1DefaultAction",
          "title": "object for default action for legacy functionality"
        },
        "externalUrl": {
          "$ref": "#/definitions/v1ExternalUrlAction",
          "title": "The URL object if \"Get It Now\" is to navigate to an external URL"
        },
        "contactForm": {
          "$ref": "#/definitions/v1ContactFormAction",
          "title": "object for the contact form behavior of \"Get It Now\" - the default option in the frontend"
        },
        "orderForm": {
          "$ref": "#/definitions/v1OrderFormAction",
          "title": "object for the oder form behaviour of \"Get It Now\""
        }
      }
    },
    "v1OrderFormAction": {
      "type": "object",
      "title": "object for Order Form for 'Get It Now' action"
    },
    "v1PackageIdContainer": {
      "type": "object",
      "properties": {
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1PackageScope": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "the scope to copy the packages to"
    },
    "v1PartnerAppRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the id of the partner"
        },
        "appId": {
          "type": "string",
          "title": "the id of the app"
        }
      }
    },
    "v1PartnerAppResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the id of the partner"
        },
        "appId": {
          "type": "string",
          "title": "the id of the app"
        },
        "status": {
          "$ref": "#/definitions/AppEnablementStatusesAppEnablementStatus",
          "title": "the status of the app"
        },
        "updateEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UpdateEvent"
          },
          "title": "historical updates to the app enablement status"
        }
      }
    },
    "v1PermissionLists": {
      "type": "object",
      "properties": {
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A white and black list used for defining restrictions"
    },
    "v1Price": {
      "type": "object",
      "properties": {
        "price": {
          "type": "integer",
          "format": "int32",
          "title": "Price of the product"
        },
        "frequency": {
          "$ref": "#/definitions/FrequenciesFrequency",
          "title": "Billing frequency of the product"
        },
        "isStartingPrice": {
          "type": "boolean",
          "description": "is_starting_price denotes whether there are potential extra charges on top of the listed price\ne.g. whether there are in-product-purchases, tiers,\nor metered components billed in addition to the listed amount."
        },
        "setupFee": {
          "type": "integer",
          "format": "int32",
          "title": "additional setup fee for this price"
        }
      }
    },
    "v1PricingDisplayOption": {
      "type": "string",
      "enum": [
        "PRICING_DISPLAY_OPTION_NOT_SPECIFIED",
        "PRICING_DISPLAY_OPTION_CONTACT_SALES",
        "PRICING_DISPLAY_OPTION_STARTING_AT"
      ],
      "default": "PRICING_DISPLAY_OPTION_NOT_SPECIFIED",
      "title": "- PRICING_DISPLAY_OPTION_NOT_SPECIFIED: No option specified so price will be displayed normally\n - PRICING_DISPLAY_OPTION_CONTACT_SALES: Display Contact Sales\n - PRICING_DISPLAY_OPTION_STARTING_AT: Display Starting at price"
    },
    "v1ProductIdentifier": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "the id of the application to get the retail price for"
        },
        "editionId": {
          "type": "string",
          "title": "the id of the edition of the app to get the retail price for"
        }
      }
    },
    "v1ProductPricePreviews": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product."
        },
        "productName": {
          "type": "string",
          "description": "The name of the product."
        },
        "storePreviews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StorePricePreviews"
          },
          "description": "The products list of store price previews."
        }
      },
      "description": "ProductPricePreviews is a structure representing a list of store price previews."
    },
    "v1ProductWholesalePrice": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "frequency": {
          "type": "string"
        },
        "commitment": {
          "$ref": "#/definitions/v1Commitment"
        },
        "isStartingAt": {
          "type": "boolean"
        },
        "shouldContactSales": {
          "type": "boolean"
        },
        "priceDisplaySku": {
          "type": "string",
          "description": "the sku used to resolve the price from billing."
        }
      }
    },
    "v1PublicStoreTheme": {
      "type": "object",
      "properties": {
        "logoBarColor": {
          "type": "string",
          "description": "This value is used to theme the logo bar of the public store."
        },
        "backgroundColor": {
          "type": "string",
          "description": "This value is used to theme the background of the public store."
        },
        "primaryFontColor": {
          "type": "string",
          "description": "this value is used to theme the primary font color of the public store."
        },
        "secondaryFontColor": {
          "type": "string",
          "description": "this value is used to theme the secondary font color of the public store."
        },
        "accentColor": {
          "type": "string",
          "description": "this value is used to theme the accent colors of the public store."
        },
        "primaryCategoryColor": {
          "type": "string",
          "description": "this value is used to theme the primary category bar color."
        },
        "secondaryCategoryColor": {
          "type": "string",
          "description": "this value is used to theme the secondary category bar color."
        }
      },
      "description": "Stores the public store theming data, such as colors."
    },
    "v1ServiceModelType": {
      "type": "string",
      "enum": [
        "DIY",
        "DIWM",
        "DIFM"
      ],
      "default": "DIY"
    },
    "v1ShoppingCart": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business_id is the id of the business that owns the cart"
        },
        "userId": {
          "type": "string",
          "title": "user_id is the id of the user who is using the cart for the business"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ShoppingCartShoppingCartItem"
          },
          "title": "items is the list of ShoppingCartItems the cart is currently containing"
        }
      }
    },
    "v1ShoppingCartItemType": {
      "type": "string",
      "enum": [
        "SHOPPING_CART_ITEM_TYPE_INVALID",
        "SHOPPING_CART_ITEM_TYPE_PACKAGE",
        "SHOPPING_CART_ITEM_TYPE_PRODUCT"
      ],
      "default": "SHOPPING_CART_ITEM_TYPE_INVALID"
    },
    "v1ShoppingCartResponse": {
      "type": "object",
      "properties": {
        "cart": {
          "$ref": "#/definitions/v1ShoppingCart",
          "title": "cart is a representation of the user's shopping cart"
        }
      }
    },
    "v1StatusesStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "PUBLISHED",
        "ARCHIVED"
      ],
      "default": "DRAFT"
    },
    "v1StoreIdentifier": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner ID that the store belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "The market ID that the store belongs to"
        }
      },
      "title": "Contains the fields that are required to uniquely identify a store"
    },
    "v1StorePricePreview": {
      "type": "object",
      "properties": {
        "editionId": {
          "type": "string"
        },
        "editionName": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "frequency": {
          "$ref": "#/definitions/FrequenciesFrequency"
        }
      },
      "description": "StorePricePreview is a structure representing a product edition's price."
    },
    "v1StorePricePreviews": {
      "type": "object",
      "properties": {
        "storeId": {
          "$ref": "#/definitions/v1StoreIdentifier"
        },
        "storeName": {
          "type": "string"
        },
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StorePricePreview"
          }
        },
        "currency": {
          "$ref": "#/definitions/CurrenciesCurrency"
        }
      },
      "description": "StorePricePreviews is a structure representing a product's prices in a store (market)."
    },
    "v1StoreProduct": {
      "type": "object",
      "properties": {
        "storeId": {
          "$ref": "#/definitions/v1StoreIdentifier",
          "description": "The store ID of the store product."
        },
        "name": {
          "type": "string",
          "description": "The name of the store product."
        },
        "tagline": {
          "type": "string",
          "description": "The tagline of the store product."
        },
        "iconUrl": {
          "type": "string",
          "description": "The URL at which to find the store product's icon."
        },
        "headerImageUrl": {
          "type": "string",
          "description": "The URL at which to find the store product's header image."
        },
        "pricing": {
          "$ref": "#/definitions/v1Pricing",
          "description": "The pricing of the store product."
        },
        "appId": {
          "type": "string",
          "description": "The app ID of the app this store product references, if any."
        },
        "packageId": {
          "type": "string",
          "description": "The package ID of the package this store product references, if any."
        },
        "lmiCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LmiCategories"
          },
          "description": "The LMI categories of the store product.\nFor an app, this is the LMI categories on the app.\nFor a package, this is the concatenated LMI categories of its apps."
        }
      }
    },
    "v1UpdateEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/AppEnablementStatusesAppEnablementStatus"
        },
        "origin": {
          "type": "string"
        }
      }
    },
    "v1UpdatePackageOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of package to create."
        },
        "tagline": {
          "type": "string",
          "description": "The tagline is suppose to be a snappy sentence represents the package."
        },
        "iconUrl": {
          "type": "string",
          "description": "The url for the icon of the package. Deprecated, use icon_url_v2 instead."
        },
        "headerImageUrl": {
          "type": "string",
          "description": "The url for the header image. Deprecated, use header_image_url_v2 instead."
        },
        "content": {
          "type": "string",
          "description": "The content of the package. This may also be known as a description."
        },
        "pricing": {
          "$ref": "#/definitions/v1Pricing",
          "description": "The price of the package."
        },
        "hideProductDetails": {
          "type": "boolean",
          "description": "Setting this flag will hide the product details when the package is displayed."
        },
        "hideProductIconsAndNames": {
          "type": "boolean",
          "description": "Setting this flag will hide the product icons and names when the package is displayed."
        },
        "lineItems": {
          "$ref": "#/definitions/v1LineItems",
          "title": "LineItems is a list of line items to update"
        },
        "status": {
          "$ref": "#/definitions/v1StatusesStatus",
          "title": "The status of the package"
        },
        "marketAction": {
          "$ref": "#/definitions/v1MarketAction",
          "title": "Market action config object"
        },
        "usesBillingPricing": {
          "type": "boolean",
          "title": "Flag to mention if the package price is coming from the package itself (usesBillingPricing = false) or if the price comes from billing (usesBillingPricing = true)\nThis flag is deprecated as every price should be in billing now. [MT-1190]"
        },
        "pricingDisplayOption": {
          "$ref": "#/definitions/v1PricingDisplayOption",
          "title": "Options for displaying the price or a related message such as Contact Sales"
        },
        "iconUrlV2": {
          "type": "string",
          "description": "The url for the icon of the package, can be empty."
        },
        "headerImageUrlV2": {
          "type": "string",
          "description": "The url for the header image of the package, can be empty."
        }
      }
    },
    "v1UpdatePackageResponse": {
      "type": "object",
      "properties": {
        "package": {
          "$ref": "#/definitions/v1Package",
          "description": "The resulting package after all operations have been applied."
        }
      }
    },
    "v1VendorRetailPrice": {
      "type": "object",
      "properties": {
        "billingFrequency": {
          "type": "string",
          "title": "Billing Frequency"
        },
        "currency": {
          "type": "string",
          "title": "Currency"
        },
        "price": {
          "type": "string",
          "format": "int64",
          "title": "Price in cents"
        },
        "editionPrice": {
          "type": "boolean",
          "title": "is edition price"
        }
      }
    },
    "v1WholesalePrice": {
      "type": "object",
      "properties": {
        "billingFrequency": {
          "type": "string",
          "title": "Billing Frequency"
        },
        "currency": {
          "type": "string",
          "title": "Currency"
        },
        "price": {
          "type": "string",
          "format": "int64",
          "title": "Price in cents"
        }
      }
    },
    "MarkupMarkupType": {
      "type": "string",
      "enum": [
        "MARKUP_TYPE_INVALID",
        "MARKUP_TYPE_PERCENTAGE"
      ],
      "default": "MARKUP_TYPE_INVALID",
      "title": "- MARKUP_TYPE_PERCENTAGE: Indicates that markup_amount is a proportion (1.0 means 100% markup)"
    },
    "v1AccountConnectionStatuses": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "businessName": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "connectionStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectionsStatus"
          }
        }
      }
    },
    "v1AccountElements": {
      "type": "object",
      "properties": {
        "test": {
          "type": "boolean",
          "title": "Is this a test account?"
        },
        "notifiedOnCreativeRejection": {
          "type": "boolean",
          "title": "Are certain notifications enabled for this account?"
        },
        "notifiedOnNewFeaturesEnabled": {
          "type": "boolean"
        },
        "notifiedOnEndOfCampaign": {
          "type": "boolean"
        },
        "servingStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of serving statuses tagged for the account"
        },
        "notifiedOnCampaignOptimization": {
          "type": "boolean",
          "title": "Are certain notifications enabled for this account?"
        },
        "type": {
          "type": "string",
          "title": "The type of the account"
        },
        "version": {
          "$ref": "#/definitions/v1Version",
          "title": "What version is tagged for the account"
        },
        "reference": {
          "type": "string",
          "title": "Reference id details for the account"
        },
        "notifiedOnCreativeApproval": {
          "type": "boolean",
          "title": "Are certain notifications enabled for this account?"
        },
        "changeAuditStamps": {
          "$ref": "#/definitions/v1ChangeAuditStamps",
          "title": "Records of creation and last modification"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currency": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "The Linkedin Ads account id"
        },
        "status": {
          "type": "string",
          "title": "The activity status of the account"
        }
      },
      "title": "Linkedin Ads Account Detail"
    },
    "v1AccountStats": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "currencyCode": {
          "type": "string"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        },
        "breakdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StatBreakdown"
          }
        }
      }
    },
    "v1AccountUserElements": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "changeAuditStamps": {
          "$ref": "#/definitions/v1ChangeAuditStamps"
        },
        "role": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/v1Version"
        }
      }
    },
    "v1AdAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID"
        },
        "name": {
          "type": "string",
          "title": "Display name for the ad account"
        },
        "currency": {
          "type": "string",
          "title": "Currency according to:\nhttps://developers.facebook.com/docs/marketing-api/currencies"
        }
      },
      "title": "An Facebook Account description"
    },
    "v1AdAccountElementsWithUser": {
      "type": "object",
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountUserElements"
          },
          "title": "Account elements containing account details and authenticated user id"
        },
        "paging": {
          "$ref": "#/definitions/v1Paging",
          "title": "Paging information"
        }
      }
    },
    "v1AdGroupStats": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ChannelCampaignStatus"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "breakdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StatBreakdown"
          }
        },
        "campaignType": {
          "type": "string"
        }
      }
    },
    "v1AdStats": {
      "type": "object",
      "properties": {
        "headlines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/v1ChannelCampaignStatus"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "adGroupId": {
          "type": "string"
        },
        "breakdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StatBreakdown"
          }
        },
        "subtitles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "videoUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finalUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "previewUrl": {
          "type": "string"
        },
        "creativeId": {
          "type": "string"
        },
        "destinationUrl": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "facebookUrl": {
          "type": "string"
        },
        "instagramUrl": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        }
      }
    },
    "v1AdwordsAccount": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "format": "int64",
          "title": "The AdwordsAccount's ID; i.e. CID"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "isManager": {
          "type": "boolean",
          "title": "Is this a manager account (i.e. MCC)?"
        },
        "isTestAccount": {
          "type": "boolean",
          "title": "Is this a test account?"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "timezone": {
          "type": "string",
          "title": "List of timezones here: https://developers.google.com/adwords/api/docs/appendix/codes-formats#timezone-ids"
        },
        "managerCustomerId": {
          "type": "string",
          "title": "manager customer ID the account is under"
        }
      },
      "title": "An Adwords Account description"
    },
    "v1AdwordsCampaignObjectiveBreakDownContainer": {
      "type": "object",
      "properties": {
        "breakdown": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdwordsCampaignObjectiveNetworkBreakDown"
          }
        }
      }
    },
    "v1AdwordsCampaignObjectiveNetworkBreakDown": {
      "type": "object",
      "properties": {
        "network": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1AdwordsConversionMetrics": {
      "type": "object",
      "properties": {
        "qualifiedPhoneCalls": {
          "type": "boolean"
        },
        "other": {
          "type": "boolean"
        },
        "googleConversionSources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Google Ads API enum values for External Conversion Sources\nhttps://developers.google.com/google-ads/api/reference/rpc/v10/ExternalConversionSourceEnum.ExternalConversionSource?hl=en"
        },
        "googleConversionCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Google Ads APU enum values for selected Conversion Action Categories\nhttps://developers.google.com/google-ads/api/reference/rpc/v10/ConversionActionCategoryEnum.ConversionActionCategory?hl=en"
        }
      }
    },
    "v1AdwordsLocation": {
      "type": "object",
      "properties": {
        "criteriaId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "canonicalName": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "targetType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "Adwords Geotargeting entry, more info here: https://developers.google.com/adwords/api/docs/appendix/geotargeting"
    },
    "v1AmazonAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        }
      }
    },
    "v1Attribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "A key/value attribute"
    },
    "v1AuditLocalAdsAccountsResponse": {
      "type": "object"
    },
    "v1BroadstreetAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        }
      }
    },
    "v1BroadstreetNetworks": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string"
        },
        "networkName": {
          "type": "string"
        }
      }
    },
    "v1CallrailPhoneCampaign": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id of the phone call campaign"
        },
        "name": {
          "type": "string",
          "title": "name of the phone call campaign"
        },
        "phoneNumber": {
          "type": "string",
          "title": "call tracking number of the campaign"
        },
        "accountId": {
          "type": "string",
          "title": "account ID of the campaign"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "campaign id of the connected account entry in vstore.  Might be different than the id entry due to legacy connections"
        },
        "groupId": {
          "type": "string",
          "title": "group id of the connected account entry in vstore.  Might be different than the id entry due to legacy connections"
        },
        "hasValidCredentials": {
          "type": "boolean"
        }
      }
    },
    "v1CampaignDetail": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "apiUser": {
          "type": "string"
        },
        "ssoEmail": {
          "type": "string"
        }
      }
    },
    "v1CampaignGetMultiResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Campaign"
          }
        }
      },
      "title": "Returns a list of campaigns"
    },
    "v1CampaignGetResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1Campaign"
        }
      },
      "title": "Returns a campaign"
    },
    "v1CampaignInfo": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ChannelCampaignStatus"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "isConnected": {
          "type": "boolean"
        },
        "phoneNumber": {
          "type": "string"
        },
        "vendastaAccountId": {
          "type": "string"
        }
      }
    },
    "v1CampaignInfoFilters": {
      "type": "object",
      "properties": {
        "connectedFilter": {
          "$ref": "#/definitions/v1ConnectedFilter"
        },
        "startFilter": {
          "type": "string",
          "format": "date-time"
        },
        "endFilter": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CampaignListResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Campaign"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      },
      "title": "List of campaigns"
    },
    "v1CampaignStats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ChannelCampaignStatus"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        },
        "breakdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StatBreakdown"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          }
        },
        "accountName": {
          "type": "string"
        }
      }
    },
    "v1CampaignStatusStatus": {
      "type": "string",
      "enum": [
        "ORDER_RECEIVED",
        "WAITING_ON_CUSTOMER",
        "BUILDING",
        "LIVE",
        "COMPLETED"
      ],
      "default": "ORDER_RECEIVED"
    },
    "v1CampaignVideoStats": {
      "type": "object",
      "properties": {
        "videoName": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "views": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "totalSpendMicros": {
          "type": "string",
          "format": "int64"
        },
        "averageCpvMicros": {
          "type": "string",
          "format": "int64",
          "title": "The average cost per view of the campaign video"
        },
        "videoQuartile25Rate": {
          "type": "number",
          "format": "double",
          "title": "The average rate that the viewer watches 25% of the video"
        },
        "videoQuartile50Rate": {
          "type": "number",
          "format": "double",
          "title": "The average rate that the viewer watches 50% of the video"
        },
        "videoQuartile75Rate": {
          "type": "number",
          "format": "double",
          "title": "The average rate that the viewer watches 75% of the video"
        },
        "viewRate": {
          "type": "number",
          "format": "double",
          "title": "Rate of video views based on total impressions"
        },
        "accountCurrencyCode": {
          "type": "string",
          "description": "Currency code for displaying total spend and cpv."
        }
      }
    },
    "v1ChangeAuditStamps": {
      "type": "object",
      "properties": {
        "created": {
          "$ref": "#/definitions/v1Created"
        },
        "lastModified": {
          "$ref": "#/definitions/v1LastModified"
        }
      }
    },
    "v1ChannelAccountConnectionStatus": {
      "type": "object",
      "properties": {
        "channelType": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "isConnected": {
          "type": "boolean",
          "description": "The channel account is connected with an oauth token."
        },
        "isValid": {
          "type": "boolean",
          "description": "The channel account's connected oauth token is invalid and it must be reconnected."
        }
      }
    },
    "v1ChannelCampaignStatus": {
      "type": "string",
      "enum": [
        "CHANNEL_CAMPAIGN_STATUS_NOT_SET",
        "CHANNEL_CAMPAIGN_STATUS_PENDING",
        "CHANNEL_CAMPAIGN_STATUS_NEEDS_ATTENTION",
        "CHANNEL_CAMPAIGN_STATUS_SCHEDULED",
        "CHANNEL_CAMPAIGN_STATUS_LIVE",
        "CHANNEL_CAMPAIGN_STATUS_PAUSED",
        "CHANNEL_CAMPAIGN_STATUS_REMOVED",
        "CHANNEL_CAMPAIGN_STATUS_ENDED",
        "CHANNEL_CAMPAIGN_STATUS_ARCHIVED",
        "CHANNEL_CAMPAIGN_STATUS_COMPLETED",
        "CHANNEL_CAMPAIGN_STATUS_CANCELLED",
        "CHANNEL_CAMPAIGN_STATUS_DELETED",
        "CHANNEL_CAMPAIGN_STATUS_DRAFT",
        "CHANNEL_CAMPAIGN_STATUS_APPROVED",
        "CHANNEL_CAMPAIGN_STATUS_DISAPPROVED",
        "CHANNEL_CAMPAIGN_STATUS_UNKNOWN",
        "CHANNEL_CAMPAIGN_STATUS_DELIVERING",
        "CHANNEL_CAMPAIGN_STATUS_READY",
        "CHANNEL_CAMPAIGN_STATUS_PAUSED_INVENTORY_RELEASED",
        "CHANNEL_CAMPAIGN_STATUS_INACTIVE",
        "CHANNEL_CAMPAIGN_STATUS_NOT_SERVING"
      ],
      "default": "CHANNEL_CAMPAIGN_STATUS_NOT_SET",
      "description": "- CHANNEL_CAMPAIGN_STATUS_NOT_SET: The status is unknown or unset",
      "title": "Unified channel campaign status"
    },
    "v1ChannelType": {
      "type": "string",
      "enum": [
        "CHANNEL_TYPE_UNKNOWN",
        "CHANNEL_TYPE_CHAT",
        "CHANNEL_TYPE_SMS"
      ],
      "default": "CHANNEL_TYPE_UNKNOWN",
      "title": "ChannelType represent the channel types of messages"
    },
    "v1ConnectedAdAccount": {
      "type": "object",
      "properties": {
        "facebookAccountId": {
          "type": "string",
          "title": "The Facebook account ID"
        },
        "name": {
          "type": "string",
          "title": "The Facebook account name"
        },
        "currency": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedAdwordsAccount": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "format": "int64",
          "title": "The AdwordsAccount's ID; i.e. CID"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "isManager": {
          "type": "boolean",
          "title": "Is this a manager account (i.e. MCC)?"
        },
        "isTestAccount": {
          "type": "boolean",
          "title": "Is this a test account?"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "timezone": {
          "type": "string",
          "title": "List of timezones here: https://developers.google.com/adwords/api/docs/appendix/codes-formats#timezone-ids"
        },
        "hasOauthToken": {
          "type": "boolean",
          "title": "Whether there is an oauth token linked to the business"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "managerCustomerId": {
          "type": "string",
          "title": "manager customer ID the account is under"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedAmazonAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The Amazon Ads account id"
        },
        "profileId": {
          "type": "string",
          "title": "The profile ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedBroadstreetAdAccount": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string",
          "title": "The broadstreet network id"
        },
        "accountId": {
          "type": "string",
          "title": "The broadstreet advertiser id"
        },
        "networkName": {
          "type": "string",
          "title": "Display name for the network"
        },
        "accountName": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedCampaigns": {
      "type": "object",
      "properties": {
        "isCampaignConnected": {
          "type": "boolean",
          "title": "Wether the user is connecting to a sub set of campaings or to the whole account"
        },
        "campaignIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of campaign IDs the user wants their account foccused on"
        },
        "connectedCampaignsDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedCampaignsDetails"
          }
        }
      }
    },
    "v1ConnectedCampaignsDetails": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        }
      }
    },
    "v1ConnectedFilter": {
      "type": "string",
      "enum": [
        "ALL",
        "CONNECTED",
        "NOT_CONNECTED"
      ],
      "default": "ALL"
    },
    "v1ConnectedGamAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The GAM Ads account id"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedLinkedinAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The Linkedin Ads account id"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedMicrosoftAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The Microsoft Ads account id"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedSimplifiAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The Simplifi Ads account id"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean",
          "title": "boolean indicating whether the credentials for the account are still valid"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      }
    },
    "v1ConnectedTikTokAdAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        },
        "hasValidCredentials": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ConnectionsStatus": {
      "type": "object",
      "properties": {
        "channelType": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "failedCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Created": {
      "type": "object",
      "properties": {
        "actor": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1CustomerAcquisitionInfo": {
      "type": "object",
      "properties": {
        "averageConversionValueCents": {
          "type": "string",
          "format": "int64",
          "title": "The average value of an conversion from a digital advertising campaign - in \"cents\""
        },
        "closeRateFraction": {
          "type": "number",
          "format": "float",
          "title": "The percentage of sales that are successfully closed - 1.0 is 100%"
        },
        "hideRoi": {
          "type": "boolean",
          "title": "Flag to show or hide ROI in account stats, campaign table, and exec report"
        },
        "hideSpend": {
          "type": "boolean",
          "title": "Flag to show or hide Spend and CPC in account stats, campaign table, and exec report"
        }
      }
    },
    "v1DataPoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "date-time",
          "title": "Label of the data point.  Field is called 'name' for ngx-chart compatibility, but in our case will be a Date"
        },
        "value": {
          "type": "number",
          "format": "double",
          "title": "Value of the data point"
        }
      }
    },
    "v1DataSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name for one set of data.  Used in the legend of the ngx-chart"
        },
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DataPoint"
          }
        }
      }
    },
    "v1DaysOfWeekStats": {
      "type": "object",
      "properties": {
        "day": {
          "type": "string"
        },
        "impressionsPercent": {
          "type": "number",
          "format": "double"
        },
        "clicksPercent": {
          "type": "number",
          "format": "double"
        },
        "ctr": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1FacebookConversionMetrics": {
      "type": "object",
      "properties": {
        "other": {
          "type": "boolean"
        },
        "appInstalls": {
          "type": "boolean"
        },
        "impressions": {
          "type": "boolean"
        },
        "eventResponses": {
          "type": "boolean"
        },
        "leads": {
          "type": "boolean"
        },
        "linkClicks": {
          "type": "boolean"
        },
        "messageActions": {
          "type": "boolean"
        },
        "pageLikes": {
          "type": "boolean"
        },
        "postEngagement": {
          "type": "boolean"
        },
        "productCatalogSales": {
          "type": "boolean"
        },
        "reach": {
          "type": "boolean"
        },
        "videoViews": {
          "type": "boolean"
        },
        "qualifiedPhoneCalls": {
          "type": "boolean"
        }
      }
    },
    "v1GamAccountElements": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      }
    },
    "v1GetAccountConnectionsResponse": {
      "type": "object",
      "properties": {
        "accountStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountConnectionStatuses"
          }
        }
      }
    },
    "v1GetAccountExecutiveReportClientSettingsResponse": {
      "type": "object",
      "properties": {
        "customerAcquisitionInfo": {
          "$ref": "#/definitions/v1CustomerAcquisitionInfo"
        },
        "channelAccountConnectionStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChannelAccountConnectionStatus"
          }
        }
      }
    },
    "v1GetAccountStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountStats"
          }
        }
      }
    },
    "v1GetAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SimplifiAccount"
          }
        }
      }
    },
    "v1GetAdGroupStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdGroupStats"
          }
        }
      }
    },
    "v1GetAdStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdStats"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetAdwordsCampaignObjectiveNetworkBreakdownResponse": {
      "type": "object",
      "properties": {
        "adwordsObjectiveNetworkBreakdown": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1AdwordsCampaignObjectiveBreakDownContainer"
          },
          "title": "Objective reflects the goal(s) this campaign wants to achieve, mapping from objective to network breakdown stats"
        }
      }
    },
    "v1GetAdwordsSettingsResponse": {
      "type": "object",
      "properties": {
        "conversionMetrics": {
          "$ref": "#/definitions/v1AdwordsConversionMetrics"
        },
        "googleAnalyticsConversions": {
          "type": "boolean"
        }
      }
    },
    "v1GetAllAccountResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaboolaAccount"
          }
        }
      }
    },
    "v1GetAllAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdwordsAccount"
          }
        }
      }
    },
    "v1GetAllAdAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdAccount"
          }
        }
      }
    },
    "v1GetAllAdStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdStats"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetAllConnectedAdwordsAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedAdwordsAccount"
          }
        }
      }
    },
    "v1GetAllConnectedAmazonAdAccountsResponse": {
      "type": "object",
      "properties": {
        "connectedAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedAmazonAdAccount"
          }
        }
      }
    },
    "v1GetAllConnectedBroadstreetAdAccountsResponse": {
      "type": "object",
      "properties": {
        "connectedAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedBroadstreetAdAccount"
          }
        }
      }
    },
    "v1GetAllConnectedCallrailAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CallrailPhoneCampaign"
          }
        }
      }
    },
    "v1GetAllConnectedFacebookAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedAdAccount"
          }
        }
      }
    },
    "v1GetAllConnectedGamAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedGamAdAccount"
          },
          "title": "The connected GAM accounts"
        }
      }
    },
    "v1GetAllConnectedLinkedinAdAccountsResponse": {
      "type": "object",
      "properties": {
        "connectedAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedLinkedinAdAccount"
          }
        }
      }
    },
    "v1GetAllConnectedLocalAdsAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsAccount"
          }
        }
      }
    },
    "v1GetAllConnectedMicrosoftAdAccountsResponse": {
      "type": "object",
      "properties": {
        "connectedAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedMicrosoftAdAccount"
          }
        }
      }
    },
    "v1GetAllConnectedPhoneCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PhoneCampaign"
          },
          "title": "all connected phone campaigns"
        }
      }
    },
    "v1GetAllConnectedSimplifiAdAccountsResponse": {
      "type": "object",
      "properties": {
        "connectedAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedSimplifiAdAccount"
          }
        }
      }
    },
    "v1GetAllConnectedTikTokAdAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedTikTokAdAccount"
          }
        }
      }
    },
    "v1GetAllGamAccountResponse": {
      "type": "object",
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GamAccountElements"
          }
        }
      }
    },
    "v1GetAllLinkedinAdAccountsResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/v1Paging"
        },
        "elements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountElements"
          }
        }
      }
    },
    "v1GetAllLocalAdsAdAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsAccount"
          }
        }
      }
    },
    "v1GetAllMicrosoftAdAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MicrosoftAdAccount"
          }
        }
      }
    },
    "v1GetAllPhoneCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PhoneCampaign"
          },
          "title": "all available phone campaigns"
        }
      }
    },
    "v1GetAllTikTokAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TikTokAccount"
          }
        }
      }
    },
    "v1GetAllXandrAdAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1XandrAdAccount"
          }
        }
      }
    },
    "v1GetAmazonAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AmazonAccount"
          }
        }
      }
    },
    "v1GetBroadstreetAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BroadstreetAccount"
          }
        }
      }
    },
    "v1GetCampaignInfoForAccountResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetCampaignKeywordEstimationResponse": {
      "type": "object",
      "properties": {
        "keywordPerformanceEstimations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordEstimation"
          }
        }
      },
      "description": "Response containing keyword suggestions and estimated performance for a business."
    },
    "v1GetCampaignSettingsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "channelAccountId": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "objective": {
          "type": "string"
        }
      },
      "title": "Corresponding campaign objective"
    },
    "v1GetCampaignStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStats"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaignDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignDetail"
          }
        }
      }
    },
    "v1GetConnectedAdAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1AdAccount",
          "title": "A Facebook Ad Account"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns",
          "title": "The details required to have your account connected to select campaigns"
        }
      }
    },
    "v1GetCredentailsResponse": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        },
        "ok": {
          "type": "string"
        }
      }
    },
    "v1GetCustomerAcquisitionInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/v1CustomerAcquisitionInfo"
        }
      }
    },
    "v1GetDefaultDateRangeResponse": {
      "type": "object",
      "properties": {
        "dateRange": {
          "$ref": "#/definitions/v1DateRange"
        }
      }
    },
    "v1GetFacebookSettingsResponse": {
      "type": "object",
      "properties": {
        "conversionMetrics": {
          "$ref": "#/definitions/v1FacebookConversionMetrics",
          "title": "Deprecated: use metrics"
        },
        "googleAnalyticsConversions": {
          "type": "boolean"
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetHiddenCampaignTableColumnsResponse": {
      "type": "object",
      "properties": {
        "hiddenCampaignTableColumns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A slice of srting campaign table columns names the user does not wants to show"
        }
      }
    },
    "v1GetHistoricalAccountStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HistoricalAccountStats"
          }
        },
        "totals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TotalStats"
          }
        }
      }
    },
    "v1GetHistoricalPhoneCallsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1PhoneCallsDataSet"
        }
      }
    },
    "v1GetHistoricalStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HistoricalStats"
          }
        },
        "totals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TotalStats"
          }
        }
      }
    },
    "v1GetKeywordStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordStats"
          }
        }
      }
    },
    "v1GetLinkedinSettingsResponse": {
      "type": "object",
      "properties": {
        "conversionMetrics": {
          "$ref": "#/definitions/v1LinkedinConversionMetrics"
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetLocalAdsAdStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "adStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsAdStats"
          }
        }
      }
    },
    "v1GetLocalAdsCampaignStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/v1LocalAdsCampaignStats"
        }
      }
    },
    "v1GetLocalAdsDaysOfWeekStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DaysOfWeekStats"
          }
        }
      }
    },
    "v1GetLocalAdsFormFillStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsFormFillStats"
          },
          "title": "The Form Fills associated with this campaign during the requested date range"
        }
      }
    },
    "v1GetLocalAdsLocationPlacementStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsLocationPlacementStats"
          },
          "title": "Each element of this array represents a single row in the table"
        }
      }
    },
    "v1GetLocalAdsLocationRemarketedStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsLocationRemarketedStats"
          },
          "title": "Each element of this array represents a single row in the table"
        }
      }
    },
    "v1GetLocalAdsLocationTargetedStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "impressionsStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsLocationTargetedImpressionsStats"
          },
          "title": "Each element of this array represents a single \"Impressions\" datapoint for the heatmap"
        },
        "visitsStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsLocationTargetedVisitsStats"
          },
          "title": "Each element of this array represents a single \"Visits\" datapoint for the heatmap"
        }
      },
      "title": "Represents metrics used for rendering the \"Location Targeting\" geo-location heatmap"
    },
    "v1GetLocalAdsPhoneCallStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsPhoneCallStats"
          },
          "title": "The phone calls associated with this campaign during the requested date range"
        }
      }
    },
    "v1GetLocalAdsSearchStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchStats"
          }
        }
      }
    },
    "v1GetLocalAdsSettingsResponse": {
      "type": "object",
      "properties": {
        "conversionMetrics": {
          "$ref": "#/definitions/v1LocalAdsConversionMetrics"
        }
      }
    },
    "v1GetLocalAdsTargetedLocationsStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsTargetedLocationsStats"
          },
          "title": "Each element of this array represents a single row in the table"
        }
      }
    },
    "v1GetLocalAdsVideoStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "titleStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VideoTitleStats"
          }
        },
        "locationStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VideoLocationStats"
          }
        },
        "placementOttStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VideoPlacementOTTStats"
          }
        },
        "placementStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VideoPlacementStats"
          }
        }
      }
    },
    "v1GetLocalAdsVisitsStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VisitsStats"
          }
        }
      }
    },
    "v1GetMappedLocalAdsAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsAccount"
          }
        }
      }
    },
    "v1GetMarkupResponse": {
      "type": "object",
      "properties": {
        "markup": {
          "$ref": "#/definitions/v1Markup"
        }
      }
    },
    "v1GetNetworksResponse": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BroadstreetNetworks"
          }
        }
      }
    },
    "v1GetPhoneStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PhoneCampaignStats"
          },
          "title": "Stats for multiple Marchex phone calls"
        }
      }
    },
    "v1GetRedirectsResponse": {
      "type": "object",
      "properties": {
        "redirectDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RedirectDetail"
          }
        }
      }
    },
    "v1GetStatsSettingsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetStoredStats": {
      "type": "object",
      "properties": {
        "isUpdated": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetStoredStatsResponse": {
      "type": "object",
      "properties": {
        "storedStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetStoredStats"
          }
        }
      }
    },
    "v1GetTargetingStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TargetingStats"
          }
        }
      }
    },
    "v1GetTikTokSettingsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "token is a session token that has been signed by IAM. It can be used as a bearer token on subsequent calls to IAM."
        }
      },
      "title": "Response message for IAM.GetToken"
    },
    "v1GetUsernameResponse": {
      "type": "object",
      "properties": {
        "istokenValid": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "v1GetVideoStatsForCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignVideoStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignVideoStats"
          }
        }
      }
    },
    "v1HistoricalAccountStats": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "values": {
          "$ref": "#/definitions/v1DataSet"
        },
        "total": {
          "$ref": "#/definitions/v1Stat"
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1HistoricalMetrics": {
      "type": "object",
      "properties": {
        "avgMonthlySearches": {
          "type": "string"
        },
        "competitionLevel": {
          "type": "string"
        },
        "competitionIndex": {
          "type": "string"
        },
        "topOfPageBidLowRangeMicros": {
          "type": "string"
        },
        "topOfPageBidHighRangeMicros": {
          "type": "string"
        },
        "monthlySearchVolumes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MonthlySearchVolume"
          }
        }
      }
    },
    "v1HistoricalStats": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "values": {
          "$ref": "#/definitions/v1DataSet"
        },
        "total": {
          "$ref": "#/definitions/v1Stat"
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1KeywordEstimation": {
      "type": "object",
      "properties": {
        "keyword": {
          "$ref": "#/definitions/v1Keyword",
          "title": "The keyword this estimate is for"
        },
        "range": {
          "$ref": "#/definitions/v1PerformanceEstimateRange",
          "title": "The upper and lower bounds of the estimate"
        }
      },
      "title": "A performance estimation for a single keyword"
    },
    "v1KeywordMetricsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchResult"
          }
        }
      }
    },
    "v1KeywordStats": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "adGroupId": {
          "type": "string"
        },
        "breakdowns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StatBreakdown"
          }
        }
      }
    },
    "v1LastModified": {
      "type": "object",
      "properties": {
        "actor": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1LifelineUpdateEvent": {
      "type": "object",
      "properties": {
        "editorEmail": {
          "type": "string"
        },
        "fieldUpdates": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1LinkedinConversionMetrics": {
      "type": "object",
      "properties": {
        "impressions": {
          "type": "boolean"
        },
        "leads": {
          "type": "boolean"
        },
        "totalEngagement": {
          "type": "boolean"
        },
        "comments": {
          "type": "boolean"
        },
        "shares": {
          "type": "boolean"
        },
        "videoViews": {
          "type": "boolean"
        },
        "reactions": {
          "type": "boolean"
        },
        "externalWebsiteConversions": {
          "type": "boolean"
        }
      }
    },
    "v1LocalAdsAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "connectedCampaigns": {
          "$ref": "#/definitions/v1ConnectedCampaigns"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this entity was last updated"
        }
      },
      "title": "A LocalAds / DashHound account"
    },
    "v1LocalAdsAdStats": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "The title of the Ad (\"headline\" in DashHound API)"
        },
        "imageAdUrl": {
          "type": "string",
          "title": "the url of the image used for the ad"
        },
        "impressions": {
          "type": "string",
          "format": "int64",
          "title": "The number of impressions"
        },
        "clicks": {
          "type": "string",
          "format": "int64",
          "title": "The number of clicks for the ad"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double",
          "title": "Click through rate percentage as a proportion between 0 and 1"
        },
        "platform": {
          "type": "string",
          "title": "The platform this ad is running on (e.g. \"Display & Remarketing\", \"Location\")"
        },
        "adType": {
          "type": "string",
          "title": "The type of ad (e.g. \"Image ad\",\"ResponsiveSearchAd\",\"CallOnlyAd\",)"
        },
        "campaignId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "title": "The type of status(e.g.\"Inactive\",\"Active\")"
        }
      }
    },
    "v1LocalAdsCampaignStats": {
      "type": "object",
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "rawStatus": {
          "$ref": "#/definitions/v1LocalAdsCampaignStatus"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "conversions": {
          "type": "number",
          "format": "double"
        },
        "totalSpendMicros": {
          "type": "string",
          "format": "int64"
        },
        "averageCpcMicros": {
          "type": "string",
          "format": "int64"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "$ref": "#/definitions/v1ChannelCampaignStatus"
        },
        "currencyCode": {
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "campaignId": {
          "type": "string"
        },
        "reach": {
          "type": "string",
          "format": "int64"
        },
        "visits": {
          "type": "string",
          "format": "int64"
        },
        "reportUrl": {
          "type": "string"
        },
        "formSubmissions": {
          "type": "string",
          "format": "int64"
        },
        "calls": {
          "type": "string",
          "format": "int64"
        },
        "computerImpressions": {
          "type": "string",
          "format": "int64"
        },
        "tabletImpressions": {
          "type": "string",
          "format": "int64"
        },
        "phoneImpressions": {
          "type": "string",
          "format": "int64"
        },
        "tvImpressions": {
          "type": "string",
          "format": "int64"
        },
        "socialImpressions": {
          "type": "string",
          "format": "int64"
        },
        "socialClicks": {
          "type": "string",
          "format": "int64"
        },
        "socialCtr": {
          "type": "number",
          "format": "double"
        },
        "totalConversions": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1LocalAdsCampaignStatus": {
      "type": "string",
      "enum": [
        "LOCAL_ADS_CAMPAIGN_STATUS_NOT_SET"
      ],
      "default": "LOCAL_ADS_CAMPAIGN_STATUS_NOT_SET",
      "title": "- LOCAL_ADS_CAMPAIGN_STATUS_NOT_SET: The status is unknown or unset"
    },
    "v1LocalAdsConversionMetrics": {
      "type": "object",
      "properties": {
        "qualifiedPhoneCalls": {
          "type": "boolean"
        },
        "visits": {
          "type": "boolean"
        },
        "formFills": {
          "type": "boolean"
        }
      }
    },
    "v1LocalAdsFormFillStats": {
      "type": "object",
      "properties": {
        "leadName": {
          "type": "string"
        },
        "leadPhoneNumber": {
          "type": "string",
          "title": "The Lead's phone number (unformatted, digits only)"
        },
        "leadEmail": {
          "type": "string",
          "title": "The Lead's email address"
        },
        "formMessage": {
          "type": "string",
          "title": "The message that the Lead filled in the form"
        },
        "comments": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "The time when the Form was submitted"
        }
      },
      "title": "A single Form Fill with related lead generation metadata"
    },
    "v1LocalAdsKeywordStats": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double"
        },
        "conversions": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1LocalAdsLocationPlacementStats": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double"
        },
        "conversions": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Represents metrics used for a single row in the \"Placement\" sub-section of the Locations table"
    },
    "v1LocalAdsLocationRemarketedStats": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "metro": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double"
        },
        "conversions": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Represents metrics used for a single row in the \"Location Remarketed\" sub-section of the Locations table"
    },
    "v1LocalAdsLocationTargetedCampaignInfo": {
      "type": "object",
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "adGroupName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "logitude": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Contains metadata for the metrics used for rendering the \"Location Targeting\" heatmap"
    },
    "v1LocalAdsLocationTargetedImpressionsStats": {
      "type": "object",
      "properties": {
        "campaignInfo": {
          "$ref": "#/definitions/v1LocalAdsLocationTargetedCampaignInfo"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Represents metrics used for rendering a single datapoint in the \"Location Targeting\" heatmap's \"Impressions\" data series"
    },
    "v1LocalAdsLocationTargetedVisitsStats": {
      "type": "object",
      "properties": {
        "campaignInfo": {
          "$ref": "#/definitions/v1LocalAdsLocationTargetedCampaignInfo"
        },
        "visits": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Represents metrics used for rendering a single datapoint in the \"Location Targeting\" heatmap's \"Visits\" data series"
    },
    "v1LocalAdsPhoneCallStats": {
      "type": "object",
      "properties": {
        "callerName": {
          "type": "string"
        },
        "callerCity": {
          "type": "string"
        },
        "callerState": {
          "type": "string"
        },
        "callerCountryCode": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "The date+time when the call occurred"
        },
        "callerPhoneNumber": {
          "type": "string",
          "title": "The caller's phone number (unformatted, digits only)"
        },
        "callDurationSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Reserved for future use (see call_duration_string)"
        },
        "callRecordingUrl": {
          "type": "string"
        },
        "callDurationString": {
          "type": "string",
          "title": "The DashHound API currently returns the duration as a string, e.g. \"10 seconds\""
        },
        "answerStatus": {
          "type": "string",
          "title": "Call Status"
        }
      },
      "title": "A single phone call with related metadata"
    },
    "v1LocalAdsTargetedLocationsStats": {
      "type": "object",
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Represents metrics used for a single row in the \"Location Targeted\" sub-section of the Locations table"
    },
    "v1Markup": {
      "type": "object",
      "properties": {
        "markupType": {
          "$ref": "#/definitions/MarkupMarkupType"
        },
        "markupAmount": {
          "type": "number",
          "format": "double",
          "title": "See MarkupType"
        },
        "isPartnerDefault": {
          "type": "boolean",
          "title": "flag indicating if the returned markup is the partner config default markup"
        }
      }
    },
    "v1MicrosoftAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The Microsoft Ads account id"
        },
        "customerId": {
          "type": "string",
          "title": "customer ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        }
      },
      "title": "A Microsoft Ads Account description"
    },
    "v1MonthlySearchVolume": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string"
        },
        "year": {
          "type": "string"
        },
        "monthlySearches": {
          "type": "string"
        }
      }
    },
    "v1OrderEvent": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "packageType": {
          "type": "string"
        },
        "advertisingPackage": {
          "type": "string"
        },
        "businessName": {
          "type": "string"
        },
        "businessAddress": {
          "type": "string"
        },
        "businessPhone": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "salespersonEmail": {
          "type": "string"
        },
        "salespersonName": {
          "type": "string"
        },
        "salespersonPhone": {
          "type": "string"
        },
        "creativeLocation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerValue": {
          "type": "string"
        },
        "facebookPageUrl": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "objective": {
          "type": "string"
        },
        "promo": {
          "type": "string"
        },
        "retailPrice": {
          "type": "string"
        },
        "specialties": {
          "type": "string"
        },
        "targeting": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "websiteUrl": {
          "type": "string"
        },
        "rawMarketplacePayload": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Event representing that an order was submitted"
    },
    "v1Paging": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1PerformanceEstimation": {
      "type": "object",
      "properties": {
        "averageCpc": {
          "type": "string",
          "format": "int64",
          "title": "Estimate of average cost per click (in Micros)"
        },
        "averagePosition": {
          "type": "number",
          "format": "double",
          "title": "Estimate of average position in search results"
        },
        "clicksPerDay": {
          "type": "number",
          "format": "float",
          "title": "Estimate of possible clicks per day"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double",
          "title": "Estimate of possible click-throughs per day"
        },
        "impressionsPerDay": {
          "type": "number",
          "format": "float",
          "title": "Estimate of possible impressions per day"
        },
        "totalCost": {
          "type": "string",
          "format": "int64",
          "title": "Estimate of total cost per day (in Micros)"
        }
      },
      "title": "Performance Stats which were estimated for a target"
    },
    "v1PhoneCallStatus": {
      "type": "string",
      "enum": [
        "PHONE_CALL_STATUS_INVALID",
        "PHONE_CALL_STATUS_ANSWER",
        "PHONE_CALL_STATUS_BUSY",
        "PHONE_CALL_STATUS_CANCEL",
        "PHONE_CALL_STATUS_CONGESTION",
        "PHONE_CALL_STATUS_NOANSWER",
        "PHONE_CALL_STATUS_NOFORWARDS",
        "PHONE_CALL_STATUS_WINDDOWN",
        "PHONE_CALL_STATUS_COMPLETE",
        "PHONE_CALL_STATUS_PROCESSING"
      ],
      "default": "PHONE_CALL_STATUS_INVALID"
    },
    "v1PhoneCallsDataSet": {
      "type": "object",
      "properties": {
        "calls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DataSet"
          },
          "title": "one or more datasets for historical calls"
        },
        "totalCalls": {
          "type": "string",
          "format": "int64",
          "title": "total calls value to be displayed in the card"
        }
      }
    },
    "v1PhoneCampaign": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id of the phone call campaign"
        },
        "name": {
          "type": "string",
          "title": "name of the phone call campaign"
        },
        "phoneNumber": {
          "type": "string",
          "title": "call tracking number of the campaign"
        },
        "accountId": {
          "type": "string",
          "title": "account ID of the campaign"
        },
        "campaignId": {
          "type": "string",
          "title": "campaign id of the connected account entry in vstore.  Might be different than the id entry due to legacy connections"
        },
        "groupId": {
          "type": "string",
          "title": "group id of the connected account entry in vstore.  Might be different than the id entry due to legacy connections"
        }
      }
    },
    "v1PhoneCampaignStats": {
      "type": "object",
      "properties": {
        "datetime": {
          "type": "string",
          "format": "date-time",
          "title": "date and time the customer made the call"
        },
        "callerNumber": {
          "type": "string",
          "title": "marchex caller_number, being the phone number of the customer who made the call"
        },
        "callDuration": {
          "type": "string",
          "title": "duration of the call in seconds"
        },
        "classification": {
          "type": "string",
          "title": "marchex dna_class, a DNA classification of the call, eg: Conversation, Hold-time Abandon, Unanswered"
        },
        "status": {
          "$ref": "#/definitions/v1PhoneCallStatus",
          "title": "status of the call"
        },
        "callRecordingUrl": {
          "type": "string",
          "title": "the url for an audio file of a recorded call"
        },
        "campaignName": {
          "type": "string",
          "title": "the campaign name"
        }
      }
    },
    "v1RedirectDetail": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "redirectUrl": {
          "type": "string"
        },
        "redirectError": {
          "type": "string"
        }
      }
    },
    "v1SearchResult": {
      "type": "object",
      "properties": {
        "searchQuery": {
          "type": "string"
        },
        "historicalMetrics": {
          "$ref": "#/definitions/v1HistoricalMetrics"
        }
      }
    },
    "v1SearchStats": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "keywordStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalAdsKeywordStats"
          }
        }
      }
    },
    "v1SimplifiAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1Stat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the stat for mapping purposes"
        },
        "value": {
          "type": "number",
          "format": "double",
          "title": "The value of the stat"
        },
        "source": {
          "type": "string",
          "title": "The source of the stat"
        }
      }
    },
    "v1StatAggregation": {
      "type": "string",
      "enum": [
        "STAT_AGGREGATION_UNSET",
        "STAT_AGGREGATION_DAILY",
        "STAT_AGGREGATION_WEEKLY",
        "STAT_AGGREGATION_MONTHLY"
      ],
      "default": "STAT_AGGREGATION_UNSET"
    },
    "v1StatBreakdown": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StatRow"
          }
        }
      }
    },
    "v1StatRow": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          }
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        }
      }
    },
    "v1StoreAmazonCredentialsResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "v1StoreGoogleAdManagerCredentialsResponse": {
      "type": "object",
      "properties": {
        "googleUserId": {
          "type": "string"
        }
      }
    },
    "v1StoreLinkedinCredentialsResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "v1StoreMicrosoftCredentialsResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "v1TaboolaAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountName": {
          "type": "string",
          "title": "Display name for the account"
        },
        "partnerTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "type of the partner"
        },
        "campaignTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "type of the campaign"
        },
        "currency": {
          "type": "string",
          "title": "cuurency type"
        }
      }
    },
    "v1TargetingStats": {
      "type": "object",
      "properties": {
        "targetingId": {
          "type": "string"
        },
        "targetingText": {
          "type": "string"
        },
        "adGroupId": {
          "type": "string"
        },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1TikTokAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1TotalStats": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/v1ChannelType"
        },
        "totals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stat"
          }
        }
      }
    },
    "v1ValidateCredentialsResponse": {
      "type": "object",
      "properties": {
        "adwordsHasValidOauthToken": {
          "type": "boolean",
          "title": "Whether there is a valid adwords oauth token linked to the business"
        },
        "facebookHasValidOauthToken": {
          "type": "boolean",
          "title": "Whether there is a valid facebook oauth token linked to the business"
        },
        "localAdsHasValidOauthToken": {
          "type": "boolean",
          "title": "Whether there is a valid LocalAds oauth token linked to the business"
        },
        "adwordsTokenErrorMessage": {
          "type": "string",
          "title": "Message describing the issue with the adwords token"
        },
        "tiktokHasValidOauthToken": {
          "type": "boolean",
          "title": "Whether there is a valid TikTok oauth token linked to the business"
        }
      }
    },
    "v1Version": {
      "type": "object",
      "properties": {
        "versionTag": {
          "type": "string"
        }
      }
    },
    "v1VideoLocationStats": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "metro": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1VideoPlacementOTTStats": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string"
        },
        "appBundle": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1VideoPlacementStats": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1VideoTitleStats": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "impressions": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1VisitsStats": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "visits": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1WhatsappResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1XandrAdAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The Xandr Ads account id"
        },
        "customerId": {
          "type": "string",
          "title": "customer ID the account is under"
        },
        "name": {
          "type": "string",
          "title": "Display name for the account"
        },
        "currencyCode": {
          "type": "string",
          "title": "The ISO 4217 currency code of the account"
        }
      },
      "title": "A Xandr Ads Account description"
    },
    "v1CreateCustomerAndSendDefaultReviewRequestResponse": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The customer that was created"
        }
      },
      "description": "Response from creating a Customer and sending a review request with default template."
    },
    "v1CreateError": {
      "type": "string",
      "enum": [
        "CREATE_ERROR_NO_ERRORS",
        "CREATE_ERROR_EMAIL_OR_PHONE_REQUIRED",
        "CREATE_ERROR_INVALID_EMAIL",
        "CREATE_ERROR_INVALID_PHONE",
        "CREATE_ERROR_INVALID_FIRST_NAME",
        "CREATE_ERROR_INVALID_LAST_NAME",
        "CREATE_ERROR_INVALID_COUNTRY",
        "CREATE_ERROR_INVALID_STATE"
      ],
      "default": "CREATE_ERROR_NO_ERRORS",
      "title": "- CREATE_ERROR_NO_ERRORS: Possible creation errors"
    },
    "v1CreateMultiCustomerError": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "int64",
          "title": "Index of the customer that has errors"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateError"
          },
          "title": "Errors for that specific customer"
        }
      }
    },
    "v1CreateMultiCustomerResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "Customers created"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateMultiCustomerError"
          },
          "title": "Validation errors"
        }
      }
    },
    "v1CreateReviewRequestEventResponse": {
      "type": "object",
      "properties": {
        "reviewRequestEvent": {
          "$ref": "#/definitions/v1ReviewRequestEvent",
          "title": "The created request for review"
        }
      },
      "title": "Response from creating a review request"
    },
    "v1CustomerExistsResponse": {
      "type": "object",
      "properties": {
        "customerExists": {
          "type": "boolean",
          "title": "Whether the customer exists or not"
        }
      }
    },
    "v1CustomerFilters": {
      "type": "object",
      "properties": {
        "created": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Filter by created"
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter by Tag"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter by Origin"
        },
        "negateTags": {
          "type": "boolean",
          "title": "Negate the tag filter"
        }
      }
    },
    "v1CustomerRequestEvent": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The customer's unique ID"
        },
        "requestEventType": {
          "$ref": "#/definitions/v1RequestEventType",
          "title": "The type of review requested"
        }
      },
      "title": "An event for a customer request"
    },
    "v1CustomerReview": {
      "type": "object",
      "properties": {
        "starRating": {
          "type": "string",
          "format": "int64",
          "title": "The star rating of the review"
        },
        "reviewUrl": {
          "type": "string",
          "title": "The link to the review"
        }
      },
      "title": "Information of the review left by the Customer"
    },
    "v1GetMultiCustomerForBusinessResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "The requested customers"
        }
      }
    },
    "v1GetQRCodeForURLResponse": {
      "type": "object",
      "properties": {
        "qrCode": {
          "type": "string",
          "title": "The base64 encoded image of the qr code"
        }
      },
      "title": "Response to get a QR code for a url"
    },
    "v1GetReviewSourceSettingsResponse": {
      "type": "object",
      "properties": {
        "reviewSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewSources"
          },
          "title": "List of review sources"
        },
        "selectedSourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of source ids selected for preferred review sites"
        }
      },
      "title": "Response to get review source settings for an account group"
    },
    "v1HeaderMapping": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      },
      "title": "Mapping headers in the csv file to match each field to whatever it's named"
    },
    "v1InputParams": {
      "type": "object",
      "properties": {
        "emailTemplateId": {
          "type": "string",
          "title": "The id of the email template to use for the automated review request"
        },
        "smsTemplateId": {
          "type": "string",
          "title": "The id of the SMS template to use for the automated review request"
        },
        "maxReviewReminders": {
          "type": "string",
          "format": "int64",
          "title": "The max number of review reminders sent for review_reminder type automations"
        },
        "reviewReminderWaitDays": {
          "type": "string",
          "format": "int64",
          "title": "The number of days between 1 and 7 to wait between sending review reminders"
        }
      }
    },
    "v1ListBusinessTagsResponse": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of tags"
        }
      },
      "title": "Response with list of tags across all customers for a business"
    },
    "v1ListOriginsResponse": {
      "type": "object",
      "properties": {
        "whiteLabeledOrigins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WhiteLabeledOrigin"
          },
          "title": "Mapping between an origin and the whitelabeled name"
        }
      }
    },
    "v1ListReviewRequestEventResponse": {
      "type": "object",
      "properties": {
        "reviewRequestEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewRequestEvent"
          },
          "title": "A list of the requests for reviews"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      },
      "title": "Response including the list of review request events"
    },
    "v1RequestEventType": {
      "type": "string",
      "enum": [
        "REQUEST_EVENT_TYPE_UNKNOWN",
        "REQUEST_EVENT_TYPE_EMAIL",
        "REQUEST_EVENT_TYPE_SMS"
      ],
      "default": "REQUEST_EVENT_TYPE_UNKNOWN",
      "description": "- REQUEST_EVENT_TYPE_UNKNOWN: An unknown request type\n - REQUEST_EVENT_TYPE_EMAIL: An email review request\n - REQUEST_EVENT_TYPE_SMS: An sms review request",
      "title": "The type of review request event"
    },
    "v1ReviewRequestEvent": {
      "type": "object",
      "properties": {
        "requestEventId": {
          "type": "string",
          "title": "The unique review request event ID"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID requesting review"
        },
        "customerRequestEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerRequestEvent"
          },
          "title": "The customers whose reviews have been requested"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The recorded date of the request for review"
        },
        "automationType": {
          "$ref": "#/definitions/v1AutomationType",
          "title": "The type of automation that triggered this review request to happen"
        }
      },
      "title": "An event for a request for review"
    },
    "v1ReviewRequestStatus": {
      "type": "string",
      "enum": [
        "REVIEW_REQUEST_STATUS_NOT_SENT",
        "REVIEW_REQUEST_STATUS_LEFT_REVIEW",
        "REVIEW_REQUEST_STATUS_DELIVERED",
        "REVIEW_REQUEST_STATUS_BOUNCED",
        "REVIEW_REQUEST_STATUS_OPENED",
        "REVIEW_REQUEST_STATUS_CLICKED",
        "REVIEW_REQUEST_STATUS_CLICKED_POSITIVE",
        "REVIEW_REQUEST_STATUS_CLICKED_NEGATIVE",
        "REVIEW_REQUEST_STATUS_UNSUBSCRIBE",
        "REVIEW_REQUEST_STATUS_SPAM_REPORT",
        "REVIEW_REQUEST_STATUS_SENDING",
        "REVIEW_REQUEST_STATUS_DROPPED"
      ],
      "default": "REVIEW_REQUEST_STATUS_NOT_SENT",
      "title": "- REVIEW_REQUEST_STATUS_NOT_SENT: The Customer has not been sent a review request\n - REVIEW_REQUEST_STATUS_LEFT_REVIEW: The Customer has left a review\n - REVIEW_REQUEST_STATUS_DELIVERED: The request has been delivered\n - REVIEW_REQUEST_STATUS_BOUNCED: The request did not make it to the Customer\n - REVIEW_REQUEST_STATUS_OPENED: The request was opened\n - REVIEW_REQUEST_STATUS_CLICKED: The link in the request was clicked\n - REVIEW_REQUEST_STATUS_CLICKED_POSITIVE: The would recommend link in the request was clicked\n - REVIEW_REQUEST_STATUS_CLICKED_NEGATIVE: The would not recommend link in the request was clicked\n - REVIEW_REQUEST_STATUS_UNSUBSCRIBE: The Customer unsubscribed from receiving review requests\n - REVIEW_REQUEST_STATUS_SPAM_REPORT: The Customer marked the request as spam\n - REVIEW_REQUEST_STATUS_SENDING: The request is queued for sending but has not been delivered yet\n - REVIEW_REQUEST_STATUS_DROPPED: The request was dropped"
    },
    "v1ReviewSources": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "The id used to identify the review source"
        },
        "displayName": {
          "type": "string",
          "title": "Display name of the review source"
        },
        "iconClass": {
          "type": "string",
          "title": "Icon class name for the review source"
        },
        "hasListings": {
          "type": "boolean",
          "title": "A listing for the review source exists for the account group"
        },
        "hasWarning": {
          "type": "boolean",
          "title": "The listing for the review source contains errors"
        },
        "url": {
          "type": "string",
          "title": "The url of the listing for the review source"
        },
        "overriddenUrl": {
          "type": "string",
          "title": "The overridden url for the review source"
        }
      }
    },
    "v1SmsStatusCode": {
      "type": "string",
      "enum": [
        "SMS_STATUS_CODE_SUCCESS",
        "SMS_STATUS_CODE_QUEUE_FULL",
        "SMS_STATUS_CODE_ACCOUNT_SUSPENDED",
        "SMS_STATUS_CODE_UNREACHABLE_DESTINATION",
        "SMS_STATUS_CODE_MESSAGE_BLOCKED",
        "SMS_STATUS_CODE_UNKNOWN_DESTINATION",
        "SMS_STATUS_CODE_LANDLINE_NUMBER",
        "SMS_STATUS_CODE_CARRIER_VIOLATION",
        "SMS_STATUS_CODE_UNKNOWN_ERROR",
        "SMS_STATUS_CODE_UNSUBSCRIBED"
      ],
      "default": "SMS_STATUS_CODE_SUCCESS",
      "title": "- SMS_STATUS_CODE_SUCCESS: No error\n - SMS_STATUS_CODE_QUEUE_FULL: Message queue full\n - SMS_STATUS_CODE_ACCOUNT_SUSPENDED: Account suspended\n - SMS_STATUS_CODE_UNREACHABLE_DESTINATION: Unreachable destination\n - SMS_STATUS_CODE_MESSAGE_BLOCKED: Message blocked\n - SMS_STATUS_CODE_UNKNOWN_DESTINATION: Unknown destination\n - SMS_STATUS_CODE_LANDLINE_NUMBER: Landline number\n - SMS_STATUS_CODE_CARRIER_VIOLATION: Carrier violation\n - SMS_STATUS_CODE_UNKNOWN_ERROR: Unknown error\n - SMS_STATUS_CODE_UNSUBSCRIBED: Number has unsubscribed from receiving messages"
    },
    "v1SortingOption": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string",
          "title": "Name of column to be sorted by"
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "Direction to sort in. 0: No sort 1: Ascending 2: Descending"
        }
      },
      "title": "Options for sorting query results"
    },
    "v1UpsertCampaignResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1Campaign",
          "title": "Campaign to upsert"
        }
      }
    },
    "v1DatastoreModels": {
      "type": "string",
      "enum": [
        "DATASTORE_MODELS_JOB",
        "DATASTORE_MODELS_SITE",
        "DATASTORE_MODELS_SITE_TOMBSTONE",
        "DATASTORE_MODELS_DOMAIN_MAPPING",
        "DATASTORE_MODELS_SITE_RESERVATION",
        "DATASTORE_MODELS_NEXT_UID_SINGLETON",
        "DATASTORE_MODELS_WORDPRESS_SITE"
      ],
      "default": "DATASTORE_MODELS_JOB",
      "description": "List of all Datastore Models that can be Migrated to V-Store."
    },
    "v1KeyDelta": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "delta": {
          "type": "string",
          "format": "int64"
        },
        "expires": {
          "type": "string"
        }
      }
    },
    "v1GetSiteIdResponse": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      }
    },
    "v1HealthCheck": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "status": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HealthCheckStatus"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1HealthCheckStatus": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListHealthChecksResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HealthCheck"
          }
        },
        "nextCursor": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListHealthChecksVstoreResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HealthCheckValues"
          }
        },
        "nextCursor": {
          "type": "string"
        }
      }
    },
    "v1UptimeSearchResponse": {
      "type": "object",
      "properties": {
        "siteHealths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteHealths"
          },
          "title": "The cursor to use for the next healthcheckData"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        }
      }
    },
    "v1AutopostListConfig": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "listId": {
          "type": "string",
          "title": "The unique list id"
        },
        "daysToPost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DayOfWeek"
          },
          "title": "A list of the days of the week when posts should go out"
        }
      },
      "title": "AutopostListConfig stores the settings per autopost list"
    },
    "v1CreateOrUpdateAutopostListConfigResponse": {
      "type": "object",
      "properties": {
        "listConfig": {
          "$ref": "#/definitions/v1AutopostListConfig",
          "title": "The newly created or updated autopost list config"
        }
      },
      "title": "Return the newly created or updated list config"
    },
    "v1CreateRssFeedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1RssFeedMetadata",
          "title": "Metadata for parsed feed items"
        },
        "feedName": {
          "type": "string",
          "title": "Created rss feed"
        }
      },
      "title": "Response returning length of items, successes, failures, error"
    },
    "v1DeleteRssFeedResponse": {
      "type": "object",
      "properties": {
        "feedDeleted": {
          "type": "boolean",
          "title": "Whether or not an RssFeed was found and deleted"
        },
        "failedFeedItemDeletions": {
          "type": "string",
          "format": "int64",
          "title": "Number of failed item deletions from the feed"
        }
      },
      "title": "Response returning deletion failure data"
    },
    "v1GetAutopostListConfigResponse": {
      "type": "object",
      "properties": {
        "listConfig": {
          "$ref": "#/definitions/v1AutopostListConfig",
          "title": "The existing autopost list config"
        }
      },
      "title": "Return the existing list config"
    },
    "v1GetDailyStatsResponse": {
      "type": "object",
      "properties": {
        "newRssFeedItems": {
          "type": "string",
          "format": "int64",
          "title": "Number of scraped rss feed items"
        },
        "newPosts": {
          "type": "string",
          "format": "int64",
          "title": "Number of posts created"
        }
      },
      "title": "Return number of scraped rss feed items and number of posts created for a partner"
    },
    "v1GetMultiAutopostListConfigsResponse": {
      "type": "object",
      "properties": {
        "listConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutopostListConfig"
          },
          "title": "The existing autopost list configs"
        }
      },
      "title": "Return the existing list of listConfigs"
    },
    "v1ListRssFeedItemsResponse": {
      "type": "object",
      "properties": {
        "rssFeedItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RssFeedItem"
          },
          "title": "A list of unused rss feed items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        },
        "totalFeedItems": {
          "type": "string",
          "format": "int64",
          "title": "Total count of rss feed items in the list"
        }
      },
      "title": "A page of RssFeedItems and paging metadata"
    },
    "v1ListRssFeedsResponse": {
      "type": "object",
      "properties": {
        "rssFeeds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RssFeed"
          },
          "title": "RSS Feeds that the partner has available to them"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "description": "List of RSS feeds and paging metadata."
    },
    "v1ListScheduledUserContentResponse": {
      "type": "object",
      "properties": {
        "userContents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserContent"
          },
          "title": "A list of scheduled user content items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      }
    },
    "v1ListUserContentResponse": {
      "type": "object",
      "properties": {
        "userContents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserContent"
          },
          "title": "A list of unused user content items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        },
        "totalFeedItems": {
          "type": "string",
          "format": "int64",
          "title": "Total count of rss feed items in the list"
        }
      },
      "title": "A page of UserContents and paging metadata"
    },
    "v1RefreshRssFeedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1RssFeedMetadata",
          "title": "Feed info"
        }
      },
      "title": "Response returning length of items, successes, failures, error"
    },
    "v1RssFeed": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the feed"
        },
        "name": {
          "type": "string",
          "title": "Name of the RSS feed"
        },
        "updatedDatetime": {
          "type": "string",
          "format": "date-time",
          "title": "The last date that feed was updated"
        },
        "deleted": {
          "type": "boolean",
          "title": "Flag for whether or not the feed has been deleted"
        }
      },
      "title": "RssFeed is a url pointing to content"
    },
    "v1RssFeedItem": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "permalink": {
          "type": "string",
          "title": "URL of the item"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the parent feed"
        },
        "postedDate": {
          "type": "string",
          "format": "date-time",
          "title": "Time the feed content was posted"
        },
        "author": {
          "type": "string",
          "title": "Author of the item"
        },
        "summary": {
          "type": "string",
          "title": "Summary of the item"
        },
        "title": {
          "type": "string",
          "title": "Title of the item"
        },
        "scheduledDatetime": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime a post was scheduled from this item"
        },
        "deleted": {
          "type": "boolean",
          "title": "Flag for whether or not the feed item has been deleted"
        }
      },
      "title": "An individual piece of content from an RSS feed"
    },
    "v1RssFeedMetadata": {
      "type": "object",
      "properties": {
        "feedItems": {
          "type": "string",
          "format": "int64",
          "title": "Total number of items attempted to add"
        },
        "successfullyAdded": {
          "type": "string",
          "format": "int64",
          "title": "Number of items successfully added"
        },
        "failed": {
          "type": "string",
          "format": "int64",
          "title": "Number of items failed to add"
        }
      },
      "title": "Stores data of an RSS feed"
    },
    "v1UserContent": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "userContentId": {
          "type": "string",
          "title": "The unique id for a user content"
        },
        "postText": {
          "type": "string",
          "title": "The post text of the content"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image url of the content"
        },
        "linkUrl": {
          "type": "string",
          "title": "The link url of the content"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime the content was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime the content was modified"
        },
        "scheduledOn": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime the content is scheduled on"
        },
        "deleted": {
          "type": "boolean",
          "title": "Flag for whether or not the user content has been deleted"
        }
      }
    },
    "AccountAccountStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "CANCELLED",
        "DEACTIVATED"
      ],
      "default": "ACTIVE"
    },
    "ActivationHistoryItemActivationEventType": {
      "type": "string",
      "enum": [
        "NOT_SET",
        "ACTIVATION",
        "DEACTIVATION",
        "CANCEL",
        "UNDO_CANCEL",
        "EDITION_CHANGE",
        "SCHEDULED_DEACTIVATION",
        "UNSCHEDULED_DEACTIVATION",
        "SCHEDULED_ACTIVATION",
        "UNSCHEDULED_ACTIVATION"
      ],
      "default": "NOT_SET"
    },
    "AddonActivationAddonActivationStatus": {
      "type": "string",
      "enum": [
        "ACTIVATION_STATUS_NOT_SPECIFIED",
        "ACTIVATION_STATUS_ACTIVATED",
        "ACTIVATION_STATUS_PENDING",
        "ACTIVATION_STATUS_CANCELED",
        "ACTIVATION_STATUS_DEACTIVATED"
      ],
      "default": "ACTIVATION_STATUS_NOT_SPECIFIED"
    },
    "BlamePackageActivation": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string",
          "title": "The package this activation was performed with"
        },
        "packageName": {
          "type": "string",
          "title": "The name of the package that was activated"
        }
      }
    },
    "GetDeactivationReasonsForAppRequestGetDeactivationReasonsForAppFilterOptions": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of a partner"
        }
      }
    },
    "GetMultiRequestActivationIdentifier": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the marketplace app\nwhen requesting for an addon, app_id is the id of the parent app"
        },
        "businessId": {
          "type": "string",
          "description": "The business ID."
        },
        "activationId": {
          "type": "string",
          "description": "A unique ID assigned for this specific app or addon activation."
        }
      }
    },
    "ListActivationEventHistoryForBusinessRequestListActivationEventHistoryForBusinessFilterOptions": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of a app"
        }
      }
    },
    "ListActiveAccountsForProductResponseActiveProducts": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "activationId": {
          "type": "string"
        }
      }
    },
    "ListAppsAndAddonsActivationStatusesForBusinessRequestAppActivationStatusesFilters": {
      "type": "object",
      "properties": {
        "activationStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AppAndAddonActivationStatus"
          },
          "title": "The statuses that are to be included"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The ids of the marketplace apps/addon to be included"
        }
      }
    },
    "ListCustomDeactivationReasonsForAppRequestListCustomDeactivationReasonsForAppFilterOptions": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of a partner"
        }
      }
    },
    "ListDeactivatedBusinessIDsForAppRequestListDeactivatedBusinessIDsForAppFilterOptions": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of a partner"
        }
      }
    },
    "accountsv1Blame": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/accountsv1BlameSource",
          "description": "The source of action\nThis could be a User identified by subject ID, ie: bbassingthwaite@vendasta.com\nor a System-level action, bulk action, etc."
        },
        "sourceIdentifier": {
          "type": "string",
          "title": "Optionally used to provide additional information on source\nie: If source is USER, identifier could be an e-mail"
        },
        "reasons": {
          "$ref": "#/definitions/accountsv1BlameDeactivationReasons",
          "title": "Reasons for a deactivation"
        },
        "packageInfo": {
          "$ref": "#/definitions/BlamePackageActivation",
          "title": "Package Activation metadata"
        }
      }
    },
    "accountsv1BlameDeactivationReasons": {
      "type": "object",
      "properties": {
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of provided reasons the user chose for deactivating"
        },
        "comments": {
          "type": "string",
          "title": "Additional comments provided with regards to why a product was deactivated"
        }
      }
    },
    "accountsv1BlameSource": {
      "type": "string",
      "enum": [
        "SYSTEM",
        "USER"
      ],
      "default": "SYSTEM"
    },
    "accountsv2ActivationStatus": {
      "type": "string",
      "enum": [
        "ACTIVATION_STATUS_NOT_SPECIFIED",
        "ACTIVATION_STATUS_ACTIVATED",
        "ACTIVATION_STATUS_PENDING",
        "ACTIVATION_STATUS_CANCELED",
        "ACTIVATION_STATUS_DEACTIVATED"
      ],
      "default": "ACTIVATION_STATUS_NOT_SPECIFIED"
    },
    "accountsv2Blame": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/accountsv2BlameSource",
          "title": "The source of action"
        },
        "sourceIdentifier": {
          "type": "string",
          "title": "Optionally used to provide additional information on source\nie: If source is USER, identifier could be an e-mail"
        },
        "orderId": {
          "type": "string",
          "title": "ID of the corresponding order in the fulfilment service"
        },
        "reasons": {
          "$ref": "#/definitions/accountsv2BlameDeactivationReasons",
          "title": "Reasons for a deactivation"
        }
      }
    },
    "accountsv2BlameDeactivationReasons": {
      "type": "object",
      "properties": {
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of provided reasons the user chose for deactivating"
        },
        "comments": {
          "type": "string",
          "title": "Additional comments provided with regards to why a product was deactivated"
        }
      }
    },
    "accountsv2BlameSource": {
      "type": "string",
      "enum": [
        "BLAME_SOURCE_SYSTEM",
        "BLAME_SOURCE_USER"
      ],
      "default": "BLAME_SOURCE_SYSTEM"
    },
    "v1AccountDates": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The Business ID the data belongs to"
        },
        "appId": {
          "type": "string",
          "title": "The App Id for the activation"
        },
        "addonId": {
          "type": "string",
          "title": "Optional: The addon_id of the activation"
        },
        "activationId": {
          "type": "string",
          "title": "The activation id of the activation"
        },
        "activation": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time the account was turned on"
        },
        "deactivation": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time the account was turned off"
        },
        "anniversaryDate": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time the account will renew. This is the date of the next billing period starting, based off the activation\ntime and the billing frequency"
        },
        "commitmentDate": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time the account is allowed to deactivate. This is based off the commitment configuration of the app, and\nthe activation time of the account"
        },
        "pendingDeactivation": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time the account will deactivate in the future."
        },
        "trialExpiration": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time a trial will expire, if one is active"
        }
      },
      "title": "AccountDates is a object representing just the date information connected to an account activation"
    },
    "v1ActivateAddonResponse": {
      "type": "object",
      "properties": {
        "activation": {
          "$ref": "#/definitions/v1AddonActivation",
          "title": "the newly activated activation"
        }
      }
    },
    "v1ActivateAppResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The unique identifier of the account in the application that corresponds to the business"
        },
        "activationId": {
          "type": "string",
          "description": "A unique ID assigned for this specific app activation."
        }
      }
    },
    "v1ActivationHistoryItem": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/ActivationHistoryItemActivationEventType",
          "title": "event_type represents the type of event that occurred"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "timestamp indicates when the event occurred"
        },
        "blame": {
          "$ref": "#/definitions/accountsv1Blame",
          "description": "blame information for the action the occurred."
        },
        "itemId": {
          "type": "string",
          "title": "the id of an app or addon that represents the item the activation/deactivation was done on"
        },
        "orderFormSubmissionId": {
          "type": "string",
          "title": "the submission id of an order form for the corresponding app or addon identified by the item_id"
        },
        "trial": {
          "type": "boolean",
          "title": "if the item was a trial"
        },
        "itemEditionId": {
          "type": "string",
          "title": "the edition id if applicable for the app or addon"
        },
        "changeMetadata": {
          "$ref": "#/definitions/v1ChangeMetadata",
          "title": "Additional information about the activation when it is changing an existing activation"
        },
        "scheduledFor": {
          "type": "string",
          "format": "date-time",
          "title": "scheduled_for indicates when the action that triggered the event would occur"
        }
      }
    },
    "v1AppAndAddonActivationStatus": {
      "type": "string",
      "enum": [
        "NOT_SPECIFIED",
        "ACTIVATED",
        "PENDING",
        "CANCELED",
        "DEACTIVATED"
      ],
      "default": "NOT_SPECIFIED"
    },
    "v1ChangeMetadata": {
      "type": "object",
      "properties": {
        "newEditionId": {
          "type": "string",
          "title": "If the event is related to an edition change, this is the edition id that it is going to"
        }
      }
    },
    "v1DeactivationReasonSummary": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "reason is the reason for deactivation"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "description": "total is the number of times that reason was chosen."
        },
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the IDs of the businesses who provided this reason"
        }
      }
    },
    "v1DeactivationType": {
      "type": "string",
      "enum": [
        "DEACTIVATION_TYPE_NOT_SPECIFIED",
        "DEACTIVATION_TYPE_CANCEL",
        "DEACTIVATION_TYPE_IMMEDIATE",
        "DEACTIVATION_TYPE_IMMEDIATE_AND_STOP_BILLING"
      ],
      "default": "DEACTIVATION_TYPE_NOT_SPECIFIED",
      "description": "- DEACTIVATION_TYPE_NOT_SPECIFIED: Not Specified should not be used.\n - DEACTIVATION_TYPE_CANCEL: Cancel indicates we should turn the item off at the items anniversary date, or commitment date, whichever is later.\nThis ensures the item is available for the duration of the payment period.\n - DEACTIVATION_TYPE_IMMEDIATE: Immediate indicates we should turn the item off immediately. This will cause the item to clean itself up, and no\nlonger be available for use. The item will still be billed normally until the anniversary date, or commitment date.\n - DEACTIVATION_TYPE_IMMEDIATE_AND_STOP_BILLING: Immediate and Stop Billing indicates we should turn the item off immediately. This will cause the item to clean itself up, and no\nlonger be available for use. The item will no longer be billed on the anniversary date, or commitment date.",
      "title": "Definition of the types of deactivation we support"
    },
    "v1GetAppActivationStatusForBusinessResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1GetAppActivationStatusForBusinessResponseActivationStatus",
          "title": "The status of activation for the requested business/application"
        }
      }
    },
    "v1GetAppActivationStatusForBusinessResponseActivationStatus": {
      "type": "object",
      "properties": {
        "currentlyActive": {
          "type": "boolean"
        }
      }
    },
    "v1GetBusinessesWithActiveAccountForAppResponse": {
      "type": "object",
      "properties": {
        "businessIdsWithAppActive": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetDeactivationReasonsForAppResponse": {
      "type": "object",
      "properties": {
        "deactivationReasonSummary": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeactivationReasonSummary"
          },
          "title": "A deactivation reason summary that indicates why an app was deactivated"
        }
      }
    },
    "v1GetEstimatedBillableRevenueInPeriodResponse": {
      "type": "object",
      "properties": {
        "estimate": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: Estimate for the period in USD cents"
        }
      }
    },
    "v1GetPendingActivationResponse": {
      "type": "object",
      "properties": {
        "pendingActivation": {
          "$ref": "#/definitions/v1PendingActivation",
          "title": "The pending activation"
        }
      }
    },
    "v1ListAccountDatesResponse": {
      "type": "object",
      "properties": {
        "accountDates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountDates"
          },
          "title": "A list of the accounts on a businesss, with their date information"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor for the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "A flag to indicate there are more pages"
        }
      }
    },
    "v1ListActivationEventHistoryForBusinessResponse": {
      "type": "object",
      "properties": {
        "activationHistoryItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivationHistoryItem"
          }
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor for the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "A flag to indicate there are more pages"
        }
      }
    },
    "v1ListAddonActivationsResponse": {
      "type": "object",
      "properties": {
        "activations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddonActivation"
          },
          "title": "activations found satisfying the request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListAppsAndAddonsActivationsStatusesForBusinessResponse": {
      "type": "object",
      "properties": {
        "activationStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListAppsAndAddonsActivationsStatusesForBusinessResponseAppsAndAddonsActivationStatuses"
          },
          "title": "A list of activation status of a app/addon"
        }
      }
    },
    "v1ListAppsAndAddonsActivationsStatusesForBusinessResponseAppsAndAddonsActivationStatuses": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "The id of the marketplace app/addon"
        },
        "status": {
          "$ref": "#/definitions/v1AppAndAddonActivationStatus",
          "title": "The status of the activation"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The number of times this ActivationStatus has occured of the app"
        },
        "editionId": {
          "type": "string",
          "title": "The edition ID of the app/addon"
        },
        "activationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The activation identifiers of the active apps / addons"
        },
        "vendorOrderIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The vendor order identifiers of the active apps / addons"
        }
      }
    },
    "v1ListCustomDeactivationReasonsForAppResponse": {
      "type": "object",
      "properties": {
        "deactivationReasonSummary": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeactivationReasonSummary"
          },
          "title": "A list of deactivation reason summaries that indicate why an app was deactivated for a group of accounts"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor for the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "A flag to indicate there are more pages"
        }
      }
    },
    "v1ListDeactivatedBusinessIDsForAppResponse": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of business ids that have had the app deactivated on them"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor for the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "A flag to indicate there are more pages"
        }
      }
    },
    "v1ListPendingActivationResponse": {
      "type": "object",
      "properties": {
        "pendingActivations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PendingActivation"
          },
          "title": "A list of pending activations"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        }
      }
    },
    "v1ListPendingDeactivationResponse": {
      "type": "object",
      "properties": {
        "pendingActivations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PendingDeactivation"
          },
          "title": "A list of pending deactivations"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1PendingActivation": {
      "type": "object",
      "properties": {
        "activationId": {
          "type": "string",
          "title": "The unique identifier for an activation and pending activation"
        },
        "businessId": {
          "type": "string",
          "title": "The business identifier that this pending activation is for"
        },
        "status": {
          "$ref": "#/definitions/v1PendingActivationStatus",
          "title": "The status of the pending activation"
        },
        "rejectedReason": {
          "type": "string",
          "title": "The reason for a rejected pending activation"
        },
        "dismissedBy": {
          "type": "string",
          "title": "Who dismissed the pending activation"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date the pending activation was created"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date the pending activation was last updated"
        },
        "appActivation": {
          "$ref": "#/definitions/v1Account",
          "title": "The app activation for this pending activation"
        },
        "addonActivation": {
          "$ref": "#/definitions/v1AddonActivation",
          "title": "The addon activation for this pending activation"
        },
        "appId": {
          "type": "string",
          "title": "Identifier for the app/product that the pending activation is for"
        },
        "addonId": {
          "type": "string",
          "title": "Identifier for the addon that the pending activation is for"
        }
      },
      "title": "PendingActivation is a representation of a pending activation in the Vendasta platform.\nA pending activation remains pending until a \"vendor\" either rejects or approves the activation"
    },
    "v1PendingActivationStatus": {
      "type": "string",
      "enum": [
        "PENDING_ACTIVATION_STATUS_NOT_SPECIFIED",
        "PENDING_ACTIVATION_STATUS_PENDING",
        "PENDING_ACTIVATION_STATUS_APPROVED",
        "PENDING_ACTIVATION_STATUS_REJECTED"
      ],
      "default": "PENDING_ACTIVATION_STATUS_NOT_SPECIFIED"
    },
    "v1PendingDeactivation": {
      "type": "object",
      "properties": {
        "activationId": {
          "type": "string",
          "title": "The unique identifier for an activation"
        },
        "businessId": {
          "type": "string",
          "title": "The business identifier that this pending deactivation is for"
        },
        "appId": {
          "type": "string",
          "description": "The marketplace application ID."
        },
        "addonId": {
          "type": "string",
          "description": "The marketplace addon ID."
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID"
        },
        "deactivationInfo": {
          "$ref": "#/definitions/accountsv1Blame",
          "title": "The blame information for the cancelation"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date the pending deactivation was created"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date the pending deactivation was last updated"
        },
        "deactivationDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date the pending deactivation should be deactivated"
        },
        "isEditionChange": {
          "type": "boolean",
          "title": "If the deactivation is because it is a change of edition"
        },
        "newEditionId": {
          "type": "string",
          "title": "(OPTIONAL) NewEditionID is the edition ID we should activate when the deactivation is resolved\nOnly used when IsEditionChange is true"
        }
      }
    },
    "v2ActivateProductResponse": {
      "type": "object",
      "properties": {
        "activationId": {
          "type": "string",
          "description": "A unique ID assigned for this specific product activation."
        }
      }
    },
    "v2ActiveActivation": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business the activation is for"
        },
        "appId": {
          "type": "string",
          "title": "Identifier for the app that the activation is for"
        },
        "addonId": {
          "type": "string",
          "title": "Identifier for the addon that the activation is for"
        },
        "activationId": {
          "type": "string",
          "title": "The unique identifier for an activation"
        },
        "billingOrderId": {
          "type": "string",
          "title": "The billing order id for the billable item associated with the activation"
        }
      },
      "title": "An active app or add-on activation"
    },
    "v2ChangeEditionResponse": {
      "type": "object",
      "properties": {
        "activationId": {
          "type": "string",
          "description": "A unique ID assigned for this specific edition change."
        }
      }
    },
    "v2GetMultiActivationStatusesResponse": {
      "type": "object",
      "properties": {
        "activationStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2GetMultiActivationStatusesResponseAppsAndAddonsActivationStatuses"
          },
          "title": "A list of activation status of a app/addon"
        }
      }
    },
    "v2GetMultiActivationStatusesResponseAppsAndAddonsActivationStatuses": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business ID"
        },
        "productId": {
          "type": "string",
          "title": "The id of the marketplace app/addon"
        },
        "status": {
          "$ref": "#/definitions/accountsv2ActivationStatus",
          "title": "The status of the activation"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The number of times this ActivationStatus has occured for the app"
        },
        "isTrial": {
          "type": "boolean",
          "title": "Whether or not the activation is a trial"
        },
        "editionId": {
          "type": "string",
          "title": "The edition ID of the app/addon"
        }
      }
    },
    "v2GetMultiProductActivationsForBusinessResponse": {
      "type": "object",
      "properties": {
        "productActivations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ProductActivation"
          },
          "title": "A list of active activations"
        }
      }
    },
    "v2GetTotalActivationsForProductsAndPartnerResponse": {
      "type": "object",
      "properties": {
        "totalActivations": {
          "type": "string",
          "format": "int64",
          "description": "The count of total activations for the given products and partner."
        }
      }
    },
    "v2ListActiveAccountsForProductResponse": {
      "type": "object",
      "properties": {
        "activeProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListActiveAccountsForProductResponseActiveProducts"
          },
          "title": "A list of the active accounts' business IDs"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor for the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "A flag to indicate there are more pages"
        }
      }
    },
    "v2ListActiveActivationsForProductAndBusinessResponse": {
      "type": "object",
      "properties": {
        "activations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ActiveActivation"
          },
          "title": "A list of active activations"
        }
      }
    },
    "v2ProductActivation": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business the activation is for"
        },
        "productId": {
          "type": "string",
          "title": "Identifier for the app or addon that the activation is for"
        },
        "activationId": {
          "type": "string",
          "title": "The unique identifier for an activation"
        },
        "editionId": {
          "type": "string",
          "title": "The edition id of the edition on the activation"
        },
        "isTrial": {
          "type": "boolean",
          "title": "Whether the activation is a trial"
        },
        "activation": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time the activation began"
        },
        "deactivation": {
          "type": "string",
          "format": "date-time",
          "title": "The UTC time the activation ended"
        }
      },
      "title": "An app or add-on activation"
    },
    "v2ProductActivationForBusinessIdentifiers": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "title": "Identifier for the app or addon that the activation is for"
        },
        "activationId": {
          "type": "string",
          "title": "The unique identifier for an activation"
        }
      }
    },
    "v1GetSupportedLanguagesResponse": {
      "type": "object",
      "properties": {
        "languages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Language"
          },
          "title": "The supported languages"
        }
      }
    },
    "v1GetTranslationResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "object"
        }
      }
    },
    "v1GetTranslationsResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "object"
        }
      }
    },
    "v1Language": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "title": "The language code"
        },
        "languageName": {
          "type": "string",
          "title": "The language name"
        },
        "languageStatistics": {
          "$ref": "#/definitions/v1Statistics",
          "title": "The stats for this language"
        }
      }
    },
    "v1Statistics": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "title": "The total number of text units"
        },
        "totalWords": {
          "type": "string",
          "format": "int64",
          "title": "The total number of words"
        },
        "translated": {
          "type": "string",
          "format": "int64",
          "title": "The number of translated text units"
        },
        "translatedWords": {
          "type": "string",
          "format": "int64",
          "title": "The number of translated words"
        },
        "failing": {
          "type": "string",
          "format": "int64",
          "title": "The number of text units with failing checks"
        }
      }
    },
    "GetRestrictionsResponseRestriction": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "groupId": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetRestrictionsResponseRestrictionValue"
          }
        },
        "ownerId": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetRestrictionsResponseRestrictionValue"
          }
        }
      }
    },
    "GetRestrictionsResponseRestrictionValue": {
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string"
        },
        "other": {
          "$ref": "#/definitions/v1SpecialRestrictedValue"
        }
      }
    },
    "v1GetPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/v1Permissions"
        }
      }
    },
    "v1GetRestrictionsResponse": {
      "type": "object",
      "properties": {
        "restrictions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetRestrictionsResponseRestriction"
          }
        }
      }
    },
    "v1GetUserIdentifiersResponse": {
      "type": "object",
      "properties": {
        "userIdentifiers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Empty string means the user does not exist in the namespace"
        }
      }
    },
    "v1HasViewAccessResponse": {
      "type": "object",
      "properties": {
        "access": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HasViewAccessResponseAccess"
          }
        }
      }
    },
    "v1HasViewAccessResponseAccess": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        },
        "hasAccess": {
          "type": "boolean"
        }
      }
    },
    "v1ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The namespaces that the users with the given email address are in"
        }
      }
    },
    "v1Namespace": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1NamespaceContext": {
      "type": "string",
      "enum": [
        "NAMESPACE_CONTEXT_INVALID",
        "NAMESPACE_CONTEXT_PARTNER",
        "NAMESPACE_CONTEXT_ACCOUNT_GROUP"
      ],
      "default": "NAMESPACE_CONTEXT_INVALID"
    },
    "v1Permissions": {
      "type": "object",
      "properties": {
        "canAccess": {
          "type": "boolean"
        },
        "isManager": {
          "type": "boolean"
        }
      }
    },
    "v1ResourceScope": {
      "type": "string",
      "enum": [
        "RESOURCE_SCOPE_INVALID",
        "RESOURCE_SCOPE_NONE",
        "RESOURCE_SCOPE_OWN",
        "RESOURCE_SCOPE_OWN_UNOWNED",
        "RESOURCE_SCOPE_ALL"
      ],
      "default": "RESOURCE_SCOPE_INVALID"
    },
    "v1SpecialRestrictedValue": {
      "type": "string",
      "enum": [
        "INVALID",
        "EMPTY",
        "ALL"
      ],
      "default": "INVALID"
    },
    "v1UserAssociations": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The user identifiers the account is associated with"
        }
      }
    },
    "GetMultiUsersResponseUserContainer": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/iamv1User"
        }
      }
    },
    "UpdateUserRequestPhoneNumbers": {
      "type": "object",
      "properties": {
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PhoneNumber"
          }
        }
      }
    },
    "attributesAttribute": {
      "type": "object",
      "properties": {
        "intAttribute": {
          "type": "string",
          "format": "int64",
          "description": "Represents a int64 attribute."
        },
        "doubleAttribute": {
          "type": "number",
          "format": "double",
          "description": "Represents a double attribute."
        },
        "stringAttribute": {
          "type": "string",
          "description": "Represents a string attribute."
        },
        "boolAttribute": {
          "type": "boolean",
          "description": "Represents a boolean attribute."
        },
        "structAttribute": {
          "$ref": "#/definitions/attributesStructAttribute",
          "description": "Represents a structured `Attribute`."
        },
        "listAttribute": {
          "$ref": "#/definitions/attributesListAttribute",
          "description": "Represents a repeated `Attribute`."
        },
        "timestampAttribute": {
          "type": "string",
          "format": "date-time",
          "description": "Represents a timestamp attribute."
        },
        "geopointAttribute": {
          "$ref": "#/definitions/attributesGeoPointAttribute",
          "description": "Represents a geopoint attribute."
        }
      }
    },
    "attributesGeoPointAttribute": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "attributesListAttribute": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/attributesAttribute"
          }
        }
      }
    },
    "attributesStructAttribute": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/attributesAttribute"
          }
        }
      }
    },
    "iamv1AlgorithmType": {
      "type": "string",
      "enum": [
        "ALGORITHM_TYPE_ES256",
        "ALGORITHM_TYPE_RS256"
      ],
      "default": "ALGORITHM_TYPE_ES256",
      "title": "Supported Algorithm Types for Persona Public/Private Keys"
    },
    "iamv1CreateSessionResponse": {
      "type": "object",
      "properties": {
        "session": {
          "type": "string",
          "title": "A session token (aka an IAM identity token)"
        }
      },
      "title": "Response for IAM.CreateSession"
    },
    "iamv1FieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    },
    "iamv1GetMultiExternalIDResponse": {
      "type": "object",
      "properties": {
        "externalIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The external ids."
        }
      }
    },
    "iamv1GetMultiUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiUsersResponseUserContainer"
          }
        }
      }
    },
    "iamv1ListSecurityLogsRequestFilters": {
      "type": "object",
      "properties": {
        "actionId": {
          "type": "string",
          "title": "Filter the list by an actionID"
        }
      },
      "title": "Filters which can be applied to this list request"
    },
    "iamv1ListSecurityLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv1SecurityLog"
          },
          "title": "The list of logs"
        },
        "nextCursor": {
          "type": "string",
          "title": "cursor to begin the list from"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not there are more logs"
        }
      },
      "title": "Response for iam.v1.IAM/ListSecurityLogs"
    },
    "iamv1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv1User"
          },
          "title": "A list of users"
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the\nthe next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        }
      }
    },
    "iamv1NamespacedEmail": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "iamv1OAuthCredentials": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "provider name, ie: \"google\""
        },
        "idToken": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        }
      },
      "title": "Credentials to be passed for an OAuth workflow"
    },
    "iamv1Policy": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "app_id is a unique identifier for the ResourceOwner. It must be unique across all IAM resource owners. (eg \"VBC\")"
        },
        "resourceId": {
          "type": "string",
          "description": "The unique identifier for the resource this policy will be applied to."
        },
        "policyId": {
          "type": "string",
          "description": "The identifier for this policy. This need only be unique within the scope of the resource."
        },
        "policyName": {
          "type": "string",
          "title": "policy_name is the human readable name of the policy, often phrased as a question (eg: \"Can user access account group?\")"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccessScope"
          },
          "description": "Operations that a user may take on a resource.\nIn particular, these will be the operations that this policy is associated with, so if this policy is associated\nwith \"read\", and a user attempts to \"read\" this resource type, this policy would be evaluated.\n\nDEPRECATED: use 'actions' instead.\n\nREAD -> \"READ\"\nWRITE -> \"WRITE\"\nDELETE -> \"DELETE\"\nLIST -> \"LIST\""
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The actions for which the policy will be registered.\nThe policy will run when an access check is run for ANY of its registered actions.\nThis field is a replacement for the old \"operations\" field.\nCommon actions include \"READ\", \"WRITE\", \"DELETE\" and \"LIST\", but you may\nuse any action which makes sense for your resource, e.g. \"PUBLISH\", \"REFRESH\", etc.\n\nThese values should be UPPER_SNAKE_CASE."
        },
        "policy": {
          "$ref": "#/definitions/policiesPolicyNode",
          "description": "policy is the boolean expression tree of boolean operators and attribute-based clauses that expresses the method by which the policy is evaluated."
        }
      },
      "description": "A policy is a binary boolean expression tree of attribute-based clauses that determines whether a subject is authorized to access a resource in a specific context."
    },
    "iamv1PublicKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the public key"
        },
        "id": {
          "type": "string",
          "description": "Identifier for a public key. The `kid` claim in a JWT specifies this field, telling us which key to verify the JWT with."
        },
        "algorithmType": {
          "$ref": "#/definitions/iamv1AlgorithmType",
          "title": "The algorithm used for the key"
        }
      },
      "description": "PublicKey is a key capable of validating a JWT that has been signed with a private key by someone else."
    },
    "iamv1RestrictionType": {
      "type": "string",
      "enum": [
        "RESTRICTION_TYPE_UNSET",
        "RESTRICTION_TYPE_RESET_PASSWORD_BEFORE_LOGIN",
        "RESTRICTION_TYPE_FROZEN"
      ],
      "default": "RESTRICTION_TYPE_UNSET",
      "description": "- RESTRICTION_TYPE_UNSET: Unset\n - RESTRICTION_TYPE_RESET_PASSWORD_BEFORE_LOGIN: This restriction prevents user from logging in. Automatically cleared on password reset.\n - RESTRICTION_TYPE_FROZEN: This restriction prevents user from logging in or passing any access checks.",
      "title": "The list of restriction types which can be applied to Users"
    },
    "iamv1SecurityLog": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "UserID that this log is for"
        },
        "actionId": {
          "type": "string",
          "title": "The action which was taken"
        },
        "logId": {
          "type": "string",
          "title": "A unique ID to identify this specific log"
        },
        "description": {
          "type": "string",
          "title": "A description of what occurred"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this log was created"
        }
      },
      "title": "SecurityLog represents a security log"
    },
    "iamv1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_INVALID",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_INVALID"
    },
    "iamv1TypedExternalIdentifier": {
      "type": "object",
      "properties": {
        "externalIdType": {
          "type": "string",
          "description": "The type of external id."
        },
        "externalId": {
          "type": "string",
          "description": "The external id."
        }
      },
      "description": "A user's external id. Identifies a user in a system outside of IAM."
    },
    "iamv1UpdateUserRequestOperation": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "greetingName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        }
      }
    },
    "iamv1User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "A user ID is a globally unique id across all users."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the user."
        },
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time when the user was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the user was last updated."
        },
        "firstName": {
          "type": "string",
          "title": "The first name of the user"
        },
        "greetingName": {
          "type": "string",
          "title": "The greeting name for the user"
        },
        "lastName": {
          "type": "string",
          "title": "The last name of the user"
        },
        "languageCode": {
          "type": "string",
          "description": "End-User's locale, represented as a BCP47 [RFC5646] language tag. This is an ISO 639-1 Alpha-2 [ISO639\u20111]\nlanguage code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166\u20111] country code in uppercase, separated by a dash.\nFor example, en-US or fr-CA."
        },
        "emailVerified": {
          "type": "boolean",
          "title": "Whether or not a user has verified their email"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the roles (a.k.a. subject types, a.k.a. personas) which the user has.\nEach role will be listed at most once.\nE.g. For a user which has both a salesperson persona and partner persona, this field\nwill contain ['sales_person', 'partner']\nOrder is not guaranteed.\nYou can find the common role id's in the IAM sdk's `subject` package."
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the user was last authenticated."
        },
        "publicKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv1PublicKey"
          },
          "description": "Public keys that are able to validate tokens issued by the user."
        }
      },
      "title": "A User is what uniquely occupies a namespace/email identity"
    },
    "iamv1UserFilter": {
      "type": "object",
      "properties": {
        "subjectTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter Users by `has any of the following subject types`"
        },
        "searchTerms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Search terms filter (not scored), matches each search term if it exists within one of first name, last name, or email of the User"
        }
      }
    },
    "iamv1UserIdentifier": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "A user ID"
        },
        "namespacedEmail": {
          "$ref": "#/definitions/iamv1NamespacedEmail",
          "title": "Deprecated: Prefer to use the `user_id` or `token` fields to avoid handling email, or for `user_id` being a more stable reference to a user who may have changed their email"
        },
        "namespacedSession": {
          "$ref": "#/definitions/v1NamespacedSession",
          "title": "Deprecated: Use the `token` field instead when the user is to be inferred from the token (ex. the session from `namespaced_session`, a session token, can be used in the `token` field)\nAny namespace specified here is ignored because a token uniquely identifies a user"
        },
        "token": {
          "type": "string",
          "title": "A token for a user signed by the platform (ie. access token or identity tokens from SSO; session tokens from IAM)"
        },
        "typedExternalIdentifier": {
          "$ref": "#/definitions/iamv1TypedExternalIdentifier",
          "description": "Identify a user by an external identifier."
        },
        "subjectId": {
          "type": "string",
          "title": "Looking up a User via a Subject ID will be slower than other methods"
        }
      },
      "title": "There are several ways to uniquely identify a user"
    },
    "iamv1UserSortField": {
      "type": "string",
      "enum": [
        "USER_SORT_FIELD_INVALID",
        "USER_SORT_FIELD_CREATED",
        "USER_SORT_FIELD_FIRST_NAME",
        "USER_SORT_FIELD_LAST_NAME",
        "USER_SORT_FIELD_EMAIL",
        "USER_SORT_FIELD_LAST_LOGIN"
      ],
      "default": "USER_SORT_FIELD_INVALID",
      "description": "The field to sort a result set on."
    },
    "iamv1UserSortOptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/iamv1SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/iamv1UserSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "iamv2AlgorithmType": {
      "type": "string",
      "enum": [
        "ALGORITHM_TYPE_ES256",
        "ALGORITHM_TYPE_RS256"
      ],
      "default": "ALGORITHM_TYPE_ES256",
      "title": "Supported Algorithm Types for Persona Public/Private Keys"
    },
    "iamv2CreateSessionResponse": {
      "type": "object",
      "properties": {
        "session": {
          "type": "string",
          "title": "A session token (aka an IAM session)"
        }
      }
    },
    "iamv2GetMultiExternalIDResponse": {
      "type": "object",
      "properties": {
        "externalIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The external ids."
        }
      }
    },
    "iamv2GetMultiUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv2User"
          },
          "title": "The users"
        }
      }
    },
    "iamv2ListSecurityLogsRequestFilters": {
      "type": "object",
      "properties": {
        "actionId": {
          "type": "string",
          "title": "Filter the list by an actionID"
        }
      },
      "title": "Filters which can be applied to this list request"
    },
    "iamv2ListSecurityLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv2SecurityLog"
          },
          "title": "The list of logs"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "Paging info"
        }
      }
    },
    "iamv2ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv2User"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "Paging info"
        }
      }
    },
    "iamv2NamespacedEmail": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The namespace (i.e. partner id) to which a user belongs"
        },
        "email": {
          "type": "string",
          "title": "The email ID of the user"
        }
      },
      "title": "DEPRECATED: A user can be uniquely identified with an email and a partner ID namespace"
    },
    "iamv2OAuthCredentials": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "provider name, ie: \"google\""
        },
        "idToken": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        }
      },
      "title": "Credentials to be passed for an OAuth workflow"
    },
    "iamv2Policy": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policy": {
          "$ref": "#/definitions/policiesPolicyNode"
        },
        "readOnlyPolicy": {
          "type": "string",
          "title": "The human readable version of the policy"
        },
        "resourceAttributesUsed": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The inferred set of resource attributes used within the policy"
        }
      }
    },
    "iamv2PublicKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "algorithmType": {
          "$ref": "#/definitions/iamv2AlgorithmType"
        }
      },
      "title": "A Client Public Key"
    },
    "iamv2RestrictionType": {
      "type": "string",
      "enum": [
        "RESTRICTION_TYPE_UNSET",
        "RESTRICTION_TYPE_RESET_PASSWORD_BEFORE_LOGIN",
        "RESTRICTION_TYPE_FROZEN"
      ],
      "default": "RESTRICTION_TYPE_UNSET",
      "description": "- RESTRICTION_TYPE_UNSET: Unset\n - RESTRICTION_TYPE_RESET_PASSWORD_BEFORE_LOGIN: This restriction prevents user from logging in. Automatically cleared on password reset.\n - RESTRICTION_TYPE_FROZEN: This restriction prevents user from logging in or passing any access checks.",
      "title": "The list of restriction types which can be applied to Users"
    },
    "iamv2SecurityLog": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "User ID that this log is for"
        },
        "actionId": {
          "type": "string",
          "title": "The action which was taken"
        },
        "logId": {
          "type": "string",
          "title": "A unique ID to identify this specific log"
        },
        "description": {
          "type": "string",
          "title": "A description of what occurred"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this log was created"
        }
      },
      "title": "SecurityLog represents a security log"
    },
    "iamv2SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_INVALID",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_INVALID"
    },
    "iamv2TypedExternalIdentifier": {
      "type": "object",
      "properties": {
        "externalIdType": {
          "type": "string",
          "description": "The type of external id."
        },
        "externalId": {
          "type": "string",
          "description": "The external id."
        }
      },
      "description": "A user's external id. Identifies a user in a system outside of IAM."
    },
    "iamv2UpdateUserRequestOperation": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "greetingName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumbers": {
          "$ref": "#/definitions/UpdateUserRequestPhoneNumbers"
        },
        "address": {
          "$ref": "#/definitions/v2Address"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "linkedIn": {
          "$ref": "#/definitions/v2LinkedIn"
        },
        "meetingBookingUrl": {
          "type": "string"
        },
        "externalId": {
          "$ref": "#/definitions/iamv2TypedExternalIdentifier",
          "title": "Set the value for the specified external id type\nTo set the value of multiple types add the operation multiple times"
        }
      }
    },
    "iamv2User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The User ID e.g. U-e7751c53-8a49-5e89-90fd-7a8140889c02"
        },
        "partnerId": {
          "type": "string",
          "description": "The \"owner\" partner for the user."
        },
        "email": {
          "type": "string",
          "title": "The user's email"
        },
        "roles": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2UserRole"
          },
          "title": "A map of all roles the user has, keyed by role_id"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the user was first created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "When the user was last updated"
        },
        "firstName": {
          "type": "string",
          "title": "The user's first name"
        },
        "greetingName": {
          "type": "string",
          "description": "This is a special name used to greet individuals\nwhich is used in certain languages.\nIt's unused in Western cultures."
        },
        "lastName": {
          "type": "string",
          "title": "The user's surname"
        },
        "languageCode": {
          "type": "string",
          "title": "The preferred language of the user as a locale"
        },
        "publicKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv2PublicKey"
          },
          "title": "The user's public client keys"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the user went through the \"sign-in\" flow."
        },
        "emailVerified": {
          "type": "boolean",
          "title": "Whether or not a user has verified their email"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PhoneNumber"
          },
          "title": "List of phone numbers associated to the user"
        },
        "address": {
          "$ref": "#/definitions/v2Address",
          "title": "Address of the user"
        },
        "profileImageUrl": {
          "type": "string",
          "title": "The user's profile image"
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone database representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles."
        },
        "userSpecifiedPassword": {
          "type": "string",
          "description": "The password entered specifically by the end user.\nThis field should only be used when someone is creating their OWN user, never\nwhen an administrator is creating a user for someone else.\nThis must never be a \"default\" or system-generated password.\nAccess to this field is limited to only the service accounts that require it.\nAll other consumers of CreateUser should instead initiate the Password Reset\nprocess to allow the end-user themselves to set their own password."
        },
        "linkedIn": {
          "$ref": "#/definitions/v2LinkedIn",
          "title": "LinkedIn user profile information"
        },
        "meetingBookingUrl": {
          "type": "string",
          "title": "Meeting booking url is where the user can provide a link for booking meetings"
        }
      }
    },
    "iamv2UserFilter": {
      "type": "object",
      "properties": {
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Users with ANY of the provided types will be returned\nEmpty list will return ALL users."
        },
        "searchTerms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Search terms filter (not scored), matches each search term if it exists within one of first name, last name, or email of the User"
        },
        "email": {
          "type": "string",
          "title": "Search by email"
        },
        "emailVerified": {
          "type": "boolean",
          "title": "Search by email verified status, if requested"
        }
      },
      "title": "Filter which users are returned"
    },
    "iamv2UserIdentifier": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "Identifies a user by their user_id"
        },
        "token": {
          "type": "string",
          "description": "An IAM token\nBoth identity tokens and access tokens are permitted."
        },
        "namespacedEmail": {
          "$ref": "#/definitions/iamv2NamespacedEmail",
          "title": "Deprecated: Prefer to use the `user_id` or `token` fields to avoid handling email, or for `user_id` being a more stable reference to a user who may have changed their email"
        },
        "typedExternalIdentifier": {
          "$ref": "#/definitions/iamv2TypedExternalIdentifier",
          "description": "Identify a user by an external identifier."
        },
        "subjectId": {
          "type": "string",
          "title": "Looking up a User via a Subject ID will be slower than other methods"
        }
      },
      "description": "A UserIdentifier uniquely identifies a user."
    },
    "iamv2UserSortField": {
      "type": "string",
      "enum": [
        "USER_SORT_FIELD_INVALID",
        "USER_SORT_FIELD_CREATED",
        "USER_SORT_FIELD_FIRST_NAME",
        "USER_SORT_FIELD_LAST_NAME",
        "USER_SORT_FIELD_EMAIL",
        "USER_SORT_FIELD_LAST_LOGIN"
      ],
      "default": "USER_SORT_FIELD_INVALID",
      "description": "The field to sort a result set on."
    },
    "iamv2UserSortOptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/iamv2SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/iamv2UserSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "policiesBooleanOperator": {
      "type": "string",
      "enum": [
        "AND",
        "OR",
        "NOT"
      ],
      "default": "AND",
      "title": "Boolean operator supports the basic boolean expressions AND, OR, NOT"
    },
    "policiesForOperator": {
      "type": "string",
      "enum": [
        "ANY",
        "ALL"
      ],
      "default": "ANY",
      "description": "- ANY: ANY struct inside of the list must match the PolicyNode to be true\n - ALL: ALL structs inside of the list must match the PolicyNode to be true",
      "title": "ForOperator defines how the SubjectResourceFor clauses will evaluate the list of StructAttributes"
    },
    "policiesIfClause": {
      "type": "object",
      "properties": {
        "resourceAttributeName": {
          "type": "string",
          "title": "Name of the resource's attribute to compare against"
        },
        "resourceAttributeValue": {
          "$ref": "#/definitions/attributesAttribute",
          "title": "Value to compare against the resource's attribute"
        },
        "thenPolicy": {
          "$ref": "#/definitions/policiesPolicyNode",
          "title": "If the check matches, \"then_policy\" will be evaluated"
        },
        "elsePolicy": {
          "$ref": "#/definitions/policiesPolicyNode",
          "title": "If the check fails, \"else_policy\" will be evaluated"
        }
      },
      "description": "IfClause will check whether the given attribute value intersects with the resource's attribute at the given name.\nIf the provided value is present on the resource, \"then_policy\" will be evaluated, otherwise \"else_policy\" will be evaluated."
    },
    "policiesOperator": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/policiesBooleanOperator"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/policiesPolicyNode"
          }
        }
      },
      "description": "Operator consists of a boolean conjunction and one to two children nodes.\nNOT is the only conjunction that supports a single child node, whereas AND and OR both require exactly two child nodes."
    },
    "policiesPolicyNode": {
      "type": "object",
      "properties": {
        "subjectResourceIntersection": {
          "$ref": "#/definitions/policiesSubjectResourceIntersectionClause",
          "description": "Validates that the intersection between subjects and resources is not an empty set."
        },
        "operator": {
          "$ref": "#/definitions/policiesOperator",
          "title": "Allows conjuctions between many policy nodes (AND, OR, and NOT)"
        },
        "subjectValueIntersection": {
          "$ref": "#/definitions/policiesSubjectValueIntersectionClause",
          "title": "Validates that the subject has a specific value"
        },
        "subjectMissingValue": {
          "$ref": "#/definitions/policiesSubjectMissingValueClause",
          "description": "Validates that the subject has a specific missing value."
        },
        "subjectResourceSubset": {
          "$ref": "#/definitions/policiesSubjectResourceSubsetClause",
          "description": "Validates that the resources attributes is a subset of the subjects attributes."
        },
        "subjectResourceFor": {
          "$ref": "#/definitions/policiesSubjectResourceForClause",
          "description": "Iterates over a list of StructAttributes and validates the entries match the policy described."
        },
        "ifClause": {
          "$ref": "#/definitions/policiesIfClause",
          "title": "Checks conditional, branches into different paths depending on the result"
        }
      },
      "description": "A PolicyNode can either be a Boolean operator over one or more child PolicyNodes, or it can be an SubjectResourceIntersectionClause.\nA policy tree might look like this where C1, C2, C3 are SubjectResourceIntersectionClauses:\n         AND\n        /   \\\n       C1   OR\n           /  \\\n          C2  C3\nThis means that the expression would be evaluated as C1 && (C2 || C3)\nArbitrary nesting is valid."
    },
    "policiesSubjectMissingValueClause": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        }
      },
      "title": "SubjectMissingValueClause is true if the subject attribute keyed by attribute_name is either missing or has no values.\neg: with attribute_name = \"market_id\", then a subject with \"market_id\" = [] is TRUE, a subject with \"market_id\" = [\"something\"] is FALSE,\nand if the subject simply doesn't have an attribute called \"market_id\" then this clause is TRUE"
    },
    "policiesSubjectResourceForClause": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/policiesForOperator"
        },
        "rules": {
          "$ref": "#/definitions/policiesPolicyNode"
        }
      },
      "description": "SubjectResourceForClause will loop through a list of StructAttributes and return true if any or all match the PolicyNode defined.\nThe Subject MUST have a ListAttribute that contains StructAttributes at the attribute_name key for this to be evaluated."
    },
    "policiesSubjectResourceIntersectionClause": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "resourceAttributeName": {
          "type": "string"
        }
      },
      "description": "SubjectResourceIntersectionClause is true if the set of values keyed by attribute_name on the resource has a non-empty\nintersection with the set of values keyed by resource_attribute_name (or optionally attribute_name if\nresource_attribute_name is not provided) on the subject. eg: with attribute_name = \"account_group_id\" then the subject\nMUST have an attribute named \"account_group_id\" that contains any individual value of the resource's\n\"account_group_id\" attribute for this clause to be considered TRUE."
    },
    "policiesSubjectResourceSubsetClause": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "resourceAttributeName": {
          "type": "string"
        }
      },
      "description": "SubjectResourceSubsetClause is true if the set of values keyed by attribute_name on the resource is a subset of the set of values keyed by attribute_name on the subject."
    },
    "policiesSubjectValueIntersectionClause": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string",
          "title": "Name of the attribute to compare against, use periods to denote inner struct attribute names"
        },
        "attributeValue": {
          "type": "string",
          "title": "Deprecated: use structured_attribute_value instead"
        },
        "structuredAttributeValue": {
          "$ref": "#/definitions/attributesAttribute",
          "title": "Attribute value to compare against, must be a non struct attribute"
        }
      },
      "description": "SubjectValueIntersectionClause describes how an attribute's value on the subject must contain the arbitrary value specified by attribute_value.\neg: with attribute_name = \"subject_type\" and attribute_value = \"partner\", then the subject MUST have an attribute named\n\"subject_type\" that contains the value \"partner\". Note that this is different from SubjectResourceIntersectionClause because we don't\ncare about this attributes presence on the resource or its value, it is purely for enforcing constraints on the subject itself."
    },
    "v1AccessScope": {
      "type": "string",
      "enum": [
        "READ",
        "WRITE",
        "DELETE",
        "LIST"
      ],
      "default": "READ",
      "description": "AccessScope represents the spectrum of intents that a resource may be accessed with. Different intents may entail the evaluation\nof different policies, as policies are associated not only to resources, but to specific AccessScope within the scope of that resource.\n\nDEPRECATED: use \"actions\" instead of \"operations\""
    },
    "v1AddKeyResponse": {
      "type": "object",
      "properties": {
        "privateKey": {
          "type": "string",
          "description": "The matching private key for the public key generated by IAM. This key is not stored by IAM and can not be retrieved again."
        },
        "keyId": {
          "type": "string",
          "description": "The identifier of the matching public key."
        }
      },
      "title": "Response message from IAM.AddKey"
    },
    "v1CreateTemporarySubjectResponse": {
      "type": "object",
      "properties": {
        "session": {
          "type": "string",
          "title": "A session token (aka an IAM identity token) which contains a subject's attributes instead of referring to a user for them"
        }
      },
      "title": "Response for iam.v1.IAM/CreateTemporarySubject"
    },
    "v1GetImpersonationTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "A token with the impersonated user field set"
        }
      },
      "title": "Response message for IAM.GetImpersonationToken"
    },
    "v1GetSubjectContextResponse": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/v1Context"
        }
      },
      "title": "Response message for IAM.GetSubjectContext"
    },
    "v1GetSubjectResponse": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/v1SubjectResult"
        }
      },
      "title": "Response message for IAM.GetSubjectBySession"
    },
    "v1GetSubjectsResponse": {
      "type": "object",
      "properties": {
        "subjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubjectResult"
          }
        }
      },
      "title": "Response message for IAM.GetSubjects and IAM.GetSubjectsByEmail"
    },
    "v1Identifier": {
      "type": "object",
      "properties": {
        "contextualIdentifier": {
          "type": "string"
        }
      },
      "description": "Identifier is a contextual id that holds hierarchical data.\n\nExamples:\n\nIdentifier{contextual_identifier: \"/application/partner-center\"}\nIdentifier{contextual_identifier: \"/product/RM/partner/ABC\"}\nIdentifier{contextual_identifier: \"/product/SM/partner/DEF/market/my-market\"}\nIdentifier{contextual_identifier: \"/marketplace/website-pro/account/AG-J7V5H8AV/website/49da31ebc3f34f6c97dd540e2447dca7\"}\n\nThese hierarchical identifiers allow for flexible re-use, as well as scanning across each contextual piece.\nFor example, you could scan across all domains for `/product/RM`, which returns all custom domains for Reputation Intelligence.\nYou could also scan across `/product/SM/partner/DEF` and get all of the custom market domains for the DEF partner in SM."
    },
    "v1ListPersonasResponse": {
      "type": "object",
      "properties": {
        "personas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Persona"
          },
          "title": "A list of personas"
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the\nthe next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        }
      },
      "title": "Response message for IAM.ListPersonas"
    },
    "v1MultiValueAttribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Represents a key-[]value pair used for representing the known attributes on a subject, as well as replace\nin IAM.MutateSubject."
    },
    "v1NamespacedContext": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "description": "Indicates a context that is scoped to a type/namespace pair."
    },
    "v1NamespacedSession": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Deprecated: Ignored because a token already uniquely identifies a user"
        },
        "session": {
          "type": "string",
          "title": "A session token (aka an IAM identity token)"
        }
      }
    },
    "v1Persona": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/v1Subject"
        },
        "context": {
          "$ref": "#/definitions/v1Context"
        }
      },
      "description": "A Persona is a Subject and Context combination that provides the ability for cross context usage for a single subject."
    },
    "v1Query": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "attributeKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Query allows callers of IAM.SearchSubject to do full text search against the attributes of a scoped set of subjects.\nsearch_term will be queried against the supplied set of attribute keys."
    },
    "v1RegisterSubjectResponse": {
      "type": "object",
      "properties": {
        "subjectId": {
          "type": "string",
          "description": "The newly generated subject persona ID."
        }
      },
      "title": "Response message for IAM.RegisterSubject"
    },
    "v1ResetPasswordTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "A one-time-use, time-sensitive JWT that can only be used to reset the password.\nThe one-time-use condition will be enforced using the current password hash as part of the signing secret"
        }
      },
      "title": "Response for UserIAM.GetResetPasswordToken"
    },
    "v1ResourceIdentifier": {
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValueList"
          },
          "description": "identifiers is a set of parameters that a resource owner needs to identify a resource."
        }
      },
      "description": "ResourceIdentifier is a set of identifiers that a resource owner needs to identify a resource."
    },
    "v1ResourceOwner": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "app_id is a unique identifier for the registrant. It must be unique across all IAM resource owners. (eg \"VBC\")"
        },
        "appName": {
          "type": "string",
          "title": "app_name is the human readable name of the application registering as a Resource Owner (eg \"Vendasta Business Center\")"
        }
      },
      "description": "ResourceOwner is an application that owns one or many distinct resources."
    },
    "v1SearchSubjectResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubjectResult"
          },
          "description": "A list of results that matched the given search criteria."
        },
        "nextCursor": {
          "type": "string",
          "description": "A string indicating the starting position of the next set of results. The client should pass this in the\nthe next request."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A bool indicating if there are more results to be paged through."
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "description": "An int64 indicating the total number of results returned by the query."
        }
      },
      "title": "Response message for IAM.SearchSubject"
    },
    "v1Subject": {
      "type": "object",
      "properties": {
        "subjectId": {
          "type": "string",
          "description": "A subject ID is a globally unique id across all personas and contexts."
        },
        "email": {
          "type": "string",
          "description": "Email of the subject."
        },
        "userId": {
          "type": "string",
          "title": "User ID that the subject belongs to"
        },
        "partnerId": {
          "type": "string",
          "description": "The partner ID that the subject belongs to."
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MultiValueAttribute"
          },
          "description": "Deprecated: use struct_attributes instead\nThe set of attributes that belongs to the subject persona."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time when the subject persona was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the subject peronsa was last updated."
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time",
          "title": "Deprecated: use last_login on the User message instead.\nThe time when the subject peronsa last authenticated with IAM.AuthenticateSubject"
        },
        "publicKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv1PublicKey"
          },
          "description": "Public keys that are able to validate tokens issued by the subject."
        },
        "structAttributes": {
          "$ref": "#/definitions/attributesStructAttribute",
          "description": "The set of struct attributes that belong to the subject persona."
        }
      },
      "description": "A subject represents a specific persona for a specified context."
    },
    "v1SubjectCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "A subjects email password combination"
    },
    "v1SubjectResult": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/v1Subject"
        }
      },
      "description": "A SubjectResult wraps a subject since nil values are not allowed in a repeated set. Therefore subject can be nil."
    },
    "v1TypedContext": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "description": "Indicates a context that is scoped to a type."
    },
    "v2AccessResourceResponse": {
      "type": "object",
      "properties": {
        "explanation": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "aiExplanation": {
          "type": "string"
        }
      }
    },
    "v2AddClientKeyResponse": {
      "type": "object",
      "properties": {
        "privateKey": {
          "type": "string",
          "description": "The matching private key for the public key generated by IAM. This key is not stored by IAM and can not be retrieved again."
        },
        "clientKeyId": {
          "type": "string",
          "description": "The identifier of the matching public key."
        }
      }
    },
    "v2Address": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "Street Address"
        },
        "city": {
          "type": "string",
          "title": "Name of the city"
        },
        "postalCode": {
          "type": "string",
          "title": "Postal code/zip"
        },
        "country": {
          "type": "string",
          "title": "Country code: ISO code 3166 format (CA, US)"
        },
        "state": {
          "type": "string",
          "title": "State code: ISO code 3166-2 format (CA-SK, US-FL)"
        },
        "additionalAddress": {
          "type": "string",
          "title": "Additional address line"
        }
      }
    },
    "v2CallbackResourceData": {
      "type": "object",
      "properties": {
        "requiredResourceParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceOwnerServiceUrl": {
          "type": "string"
        },
        "resourceOwnerAudience": {
          "type": "string"
        }
      }
    },
    "v2CreateUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "v2ExchangeClientKeyAssertionResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "token is an IAM token"
        }
      }
    },
    "v2GetResetPasswordTokenResponse": {
      "type": "object",
      "properties": {
        "resetPasswordToken": {
          "type": "string",
          "description": "A one-time-use, time-sensitive token that can only be used to reset the password."
        }
      }
    },
    "v2GetTokenForUserResponse": {
      "type": "object",
      "properties": {
        "identityToken": {
          "type": "string",
          "description": "An IAM identity token, which is different than oidc_identity_token."
        },
        "accessToken": {
          "type": "string",
          "title": "An IAM access token"
        },
        "refreshToken": {
          "type": "string",
          "title": "A refresh token for the iam access token"
        },
        "oidcIdentityToken": {
          "type": "string",
          "title": "An OpenID Connect ID Token.\nhttps://openid.net/specs/openid-connect-core-1_0.html#IDToken"
        }
      },
      "title": "Response iam.v2.IAMSSO/GetTokenForUser"
    },
    "v2LinkedIn": {
      "type": "object",
      "properties": {
        "publicProfileId": {
          "type": "string",
          "title": "Public profile identifier used to build Linkedin public profile URL, e.g.: 'https://www.linkedin.com/in/${public_profile_id}'"
        }
      }
    },
    "v2ListResourcesRequestFilters": {
      "type": "object",
      "properties": {
        "roleTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to resources that support at least one of the specified role types"
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to resources that contain at least one of the specified resource ids"
        },
        "resourceAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to resources that contain at least one of the specified resource attributes"
        },
        "subjectAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to resources that contain at least one of the specified subject attributes on its policies"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to resources that contain at least one of the specified actions on its policies"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to resources that contain at least one of the specified app ids"
        }
      }
    },
    "v2ListResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Resource"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v2ListUserRolesMetadataResponse": {
      "type": "object",
      "properties": {
        "userRoleMetadatas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2UserRoleMetadata"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "Paging info"
        }
      }
    },
    "v2OneTimePasswordCredentials": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "user's id"
        },
        "oneTimePassword": {
          "type": "string",
          "title": "user's one time password"
        }
      },
      "title": "A user and a one time password"
    },
    "v2PasswordCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "user's email"
        },
        "password": {
          "type": "string",
          "title": "user's password"
        }
      },
      "title": "A users email password combination"
    },
    "v2PhoneNumber": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "title": "The phone number stored in the tel RFC3966 format https://tools.ietf.org/html/rfc3966"
        },
        "phoneNumberType": {
          "$ref": "#/definitions/v2PhoneNumberType",
          "title": "Type of the phone number"
        }
      }
    },
    "v2PhoneNumberType": {
      "type": "string",
      "enum": [
        "PHONE_NUMBER_TYPE_INVALID",
        "PHONE_NUMBER_TYPE_WORK",
        "PHONE_NUMBER_TYPE_HOME",
        "PHONE_NUMBER_TYPE_MOBILE",
        "PHONE_NUMBER_TYPE_FAX",
        "PHONE_NUMBER_TYPE_PAGER"
      ],
      "default": "PHONE_NUMBER_TYPE_INVALID"
    },
    "v2RequestShortOTPCodeResponse": {
      "type": "object"
    },
    "v2Resource": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "vstoreLink": {
          "type": "string"
        },
        "callbackResourceData": {
          "$ref": "#/definitions/v2CallbackResourceData"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv2Policy"
          }
        },
        "supportedRoleTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The inferred set of resource attributes"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Inferred list of actions across all policies on the resource"
        },
        "version": {
          "type": "string",
          "title": "DEPRECATED: Semantic version (vX.X.X) used to track updates to a resource"
        }
      }
    },
    "v2SearchUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/iamv2User"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "Paging info"
        }
      }
    },
    "v2UpdateUserRoleRequestOperation": {
      "type": "object",
      "properties": {
        "dropAttributeKey": {
          "type": "string"
        },
        "replaceAttributes": {
          "$ref": "#/definitions/attributesStructAttribute"
        },
        "addAttributes": {
          "$ref": "#/definitions/attributesStructAttribute"
        },
        "removeAttributes": {
          "$ref": "#/definitions/attributesStructAttribute"
        }
      }
    },
    "v2UserAndImpersonateeId": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "impersonateeId": {
          "type": "string"
        }
      }
    },
    "v2UserPropertyMask": {
      "type": "object",
      "properties": {
        "includeRoles": {
          "type": "boolean",
          "title": "Whether to include the user roles in the response\nDeprecated, roles are always included"
        }
      },
      "title": "Allow including additional user data"
    },
    "v2UserRole": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "The type of role, e.g. \"smb\", \"partner\", etc."
        },
        "attributes": {
          "$ref": "#/definitions/attributesStructAttribute",
          "title": "Additional attributes associated with the role.\nThese are used in conjunction with policies for Access Checks"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When this role was first created on this user"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "When this role was last updated on this user"
        }
      },
      "description": "A user has many roles\nRoles contain attributes which are used in access checks."
    },
    "v2UserRoleMetadata": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "title": "The role's identifier, e.g. digital_agent, smb, partner"
        },
        "ownerUserId": {
          "type": "string",
          "description": "The user who owns this role (typically a service account)\nOnly the owner of a role are allowed to edit or view that role's attributes for a user."
        },
        "name": {
          "type": "string",
          "title": "Human readable name for the role\nE.g. \"Digital Agent\""
        },
        "description": {
          "type": "string",
          "title": "What is this role used for?"
        }
      }
    },
    "v2VerifyEmailResponse": {
      "type": "object",
      "properties": {
        "otpCode": {
          "type": "string",
          "title": "OTP Code, if requested"
        }
      }
    },
    "v2VerifyShortOTPCodeResponse": {
      "type": "object"
    },
    "supportv1Status": {
      "type": "string",
      "enum": [
        "STATUS_NOT_SPECIFIED",
        "STATUS_NEW",
        "STATUS_OPEN",
        "STATUS_PENDING",
        "STATUS_HOLD",
        "STATUS_SOLVED",
        "STATUS_CLOSED"
      ],
      "default": "STATUS_NOT_SPECIFIED"
    },
    "v1Article": {
      "type": "object",
      "properties": {
        "articleId": {
          "type": "string",
          "title": "External article ID used by the third party to idenfity the article"
        },
        "locale": {
          "type": "string",
          "title": "Localization type: \"en-us\""
        },
        "origin": {
          "$ref": "#/definitions/v1Origins",
          "title": "Origin of article"
        },
        "url": {
          "type": "string",
          "title": "URL to view the full article\nExample: https://somesite.com/help/my-page"
        },
        "title": {
          "type": "string",
          "title": "Title of the article"
        },
        "content": {
          "type": "string",
          "title": "The content or a snippet of the article to be indexed\nHTML will be stripped, special characters respected\nThe start of the content will be displayed first based on available space"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags associated to the article to assist search\nExample: sales, automation, api"
        },
        "sourceModified": {
          "type": "string",
          "format": "date-time",
          "title": "When the article was last edited"
        },
        "voteCount": {
          "type": "string",
          "format": "int64",
          "title": "How many votes an article has on it"
        },
        "voteSum": {
          "type": "string",
          "format": "int64",
          "title": "What the total sum of the votes is (positive - negative)"
        },
        "promoted": {
          "type": "boolean",
          "title": "If the article is promoted or not"
        },
        "replyCount": {
          "type": "string",
          "format": "int64",
          "title": "How many replies the article has"
        },
        "viewCount": {
          "type": "string",
          "format": "int64",
          "title": "How many views the article has"
        },
        "solved": {
          "type": "boolean",
          "title": "If the article is solved or not"
        },
        "answerCount": {
          "type": "string",
          "format": "int64",
          "title": "How many answers the article has"
        },
        "thumnailLinkUrl": {
          "type": "string",
          "title": "A link to a thumbnail image for the article\nThe image must be hosted at a publicly accessible location. \nExample: https://somesite.com/help/assets/image123.gif"
        }
      }
    },
    "v1CreateTicketResponse": {
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/v1Ticket",
          "title": "The ticket as it was created by Zendesk"
        }
      }
    },
    "v1GetArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/v1Article",
          "title": "Zendesk article"
        }
      }
    },
    "v1GetUserByPhoneResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "the first user found with thie phone number"
        },
        "pid": {
          "type": "string",
          "title": "The PID that user is associated with in ZenDesk"
        }
      }
    },
    "v1ListCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Comment"
          },
          "title": "A list of comments"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListCommentsResponse is a collection of Comments and paging metadata, ordered by posted_on"
    },
    "v1ListTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Ticket"
          },
          "title": "The tickets of the organization"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The list of users that were sideloaded from zendesk"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "Count of tickets associated to the organization"
        }
      }
    },
    "v1SortOrder": {
      "type": "string",
      "enum": [
        "SORT_ORDER_NOT_SPECIFIED",
        "SORT_ORDER_ASC",
        "SORT_ORDER_DESC"
      ],
      "default": "SORT_ORDER_NOT_SPECIFIED"
    },
    "v1TicketComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned when the comment is created"
        },
        "type": {
          "type": "string",
          "description": "Comment or VoiceComment."
        },
        "body": {
          "type": "string",
          "title": "The comment string"
        },
        "htmlBody": {
          "type": "string",
          "title": "The comment formatted as HTML"
        },
        "public": {
          "type": "boolean",
          "title": "true if a public comment; false if an internal note"
        },
        "authorId": {
          "type": "string",
          "format": "int64",
          "title": "The id of the comment author"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "title": "Attachments, if any"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time the comment was created"
        }
      }
    },
    "v1Via": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        }
      }
    },
    "v1CreatePagePostResponse": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "string",
          "title": "The newly created post id"
        }
      },
      "title": "CreatePagePostRequest for a new post on a shoppable feed page"
    },
    "v1CreatePageResponse": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string",
          "title": "The newly created page id"
        }
      },
      "title": "CreatePageResponse returns the newly created page id"
    },
    "v1GetActivePageResponse": {
      "type": "object",
      "properties": {
        "pageSettings": {
          "$ref": "#/definitions/v1PageSettings",
          "title": "The active page settings"
        },
        "domainName": {
          "type": "string",
          "title": "The domain name"
        }
      },
      "title": "GetActivePageResponse returns the active page settings"
    },
    "v1GetPagePostResponse": {
      "type": "object",
      "properties": {
        "pagePost": {
          "$ref": "#/definitions/v1PagePost",
          "title": "The existing page post"
        }
      },
      "title": "GetPagePostResponse returns the page post if exists"
    },
    "v1GetUnlinkedPageResponse": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string",
          "title": "The domain of an unlinked page"
        },
        "pageId": {
          "type": "string",
          "title": "The unlinked page id"
        },
        "socialServiceId": {
          "type": "string",
          "title": "The ssid associated with the unlinked page"
        }
      },
      "title": "GetUnlinkedPageResponse returns the domain of an existing unlinked page"
    },
    "v1IsDomainNameUniqueResponse": {
      "type": "object",
      "properties": {
        "isUnique": {
          "type": "boolean",
          "title": "The page name"
        }
      },
      "title": "IsDomainNameUniqueResponse returns whether the name is unique"
    },
    "v1ListPostsByDomainNameResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PagePost"
          },
          "title": "All the active posts on this page"
        },
        "nextCursor": {
          "type": "string",
          "title": "The next cursor"
        },
        "hasMore": {
          "type": "boolean",
          "title": "If there are more results not already returned"
        },
        "pageSettings": {
          "$ref": "#/definitions/v1PageSettings",
          "title": "The page settings for this domain"
        }
      },
      "title": "ListPostsByDomainNameResponse returns all the posts for the page"
    },
    "v1PagePost": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string",
          "title": "The page id"
        },
        "postId": {
          "type": "string",
          "title": "The post id"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image url for this post"
        },
        "permalink": {
          "type": "string",
          "title": "The link where this post should lead"
        },
        "postedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date of the original post on the social network"
        },
        "isActive": {
          "type": "boolean",
          "title": "Is post active"
        }
      },
      "title": "PagePost holds all the info relating to a single post"
    },
    "v1PageSettings": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group id"
        },
        "socialServiceId": {
          "type": "string",
          "title": "The social service id"
        },
        "pageId": {
          "type": "string",
          "title": "The unique page id"
        },
        "pageTitle": {
          "type": "string",
          "title": "The page title"
        },
        "pageLogoUrl": {
          "type": "string",
          "title": "The page logo image url"
        },
        "shouldShowWebsiteButton": {
          "type": "boolean",
          "title": "Should show the button to external website"
        },
        "buttonText": {
          "type": "string",
          "title": "The button text"
        },
        "buttonLink": {
          "type": "string",
          "title": "The button link"
        }
      },
      "title": "Page settings holds all the info relating to a page"
    },
    "v1RestorePageResponse": {
      "type": "object",
      "properties": {
        "isPageActive": {
          "type": "boolean"
        },
        "pageSettings": {
          "$ref": "#/definitions/v1PageSettings",
          "title": "The page settings for the newly linked up page, copied over from the old version"
        },
        "domainName": {
          "type": "string",
          "title": "domainName of the new pageAgidMap"
        }
      },
      "description": "RestorePageResponse returns if the page is active, and if it is the pageSettings and domainName as well."
    },
    "v1UpdateDomainNameResponse": {
      "type": "object",
      "properties": {
        "newDomainName": {
          "type": "string",
          "title": "The new domain name"
        }
      },
      "title": "UpdateDomainNameResponse returns the newly updated page name"
    },
    "v1UpdatePagePostResponse": {
      "type": "object",
      "properties": {
        "pagePost": {
          "$ref": "#/definitions/v1PagePost",
          "title": "The updated page post"
        }
      },
      "title": "UpdatePagePostResponse returns the edited page post"
    },
    "v1UpdatePageSettingsResponse": {
      "type": "object",
      "properties": {
        "pageSettings": {
          "$ref": "#/definitions/v1PageSettings",
          "title": "The settings for this page"
        }
      },
      "title": "UpdatePageSettingsResponse returns the edited page settings"
    },
    "v1AAAARecord": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AAAA record value"
        }
      },
      "title": "AAAA record"
    },
    "v1ARecord": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A record value"
        }
      },
      "title": "A record"
    },
    "v1CAARecord": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CAAValue"
          },
          "title": "CAA record value"
        }
      },
      "title": "CAA record"
    },
    "v1CAAValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "real CAA record value"
        },
        "issuerCriticalFlag": {
          "type": "boolean",
          "description": "boolean to represent the issuer_critical bit of the flag property. In a CAA record, the flag is an 8-bit integer\nwhere the most significant bit indicates whether the corresponding property tag must be completely understood\nin order for the CAA record to be issued correctly."
        },
        "tag": {
          "type": "string",
          "title": "A string that represents the identifier of the property represented by the record"
        },
        "ttl": {
          "type": "string",
          "format": "uint64",
          "title": "Time to live"
        },
        "recordClass": {
          "type": "string",
          "title": "Record class"
        }
      },
      "title": "CAA record value"
    },
    "v1CNameRecord": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "Cname record value"
        }
      },
      "title": "Cname record"
    },
    "v1DMARCPolicy": {
      "type": "string",
      "enum": [
        "DMARC_POLICY_NONE",
        "DMARC_POLICY_QUARANTINE",
        "DMARC_POLICY_REJECT"
      ],
      "default": "DMARC_POLICY_NONE",
      "description": " - DMARC_POLICY_NONE: Take no action on the message. Log suspicious messages in the daily report.\n - DMARC_POLICY_QUARANTINE: Mark the messages as spam and hold it for more processing.\n - DMARC_POLICY_REJECT: Cancel the message so that it is not sent to the recipient."
    },
    "v1DMARCRecord": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "The version of DMARC (must be DMARC1)"
        },
        "reportAggregate": {
          "type": "string",
          "title": "Reporting URI(s) for aggregate data"
        },
        "reportForensics": {
          "type": "string",
          "title": "Reporting URI(s) for failure data"
        },
        "filterPercent": {
          "type": "integer",
          "format": "int32",
          "title": "Sampling rate"
        },
        "domainPolicy": {
          "$ref": "#/definitions/v1DMARCPolicy",
          "title": "Requested handling policy"
        },
        "subdomainPolicy": {
          "$ref": "#/definitions/v1DMARCPolicy",
          "title": "Requested handling policy for subdomains"
        },
        "dkimAlignment": {
          "$ref": "#/definitions/v1Alignment",
          "title": "DKIM alignment mode"
        },
        "spfAlignment": {
          "$ref": "#/definitions/v1Alignment",
          "title": "SPF alignment mode"
        },
        "reportOption": {
          "$ref": "#/definitions/v1ReportOption",
          "title": "Failed reporting options"
        },
        "raw": {
          "type": "string",
          "title": "Raw DMARC record"
        }
      }
    },
    "v1Directive": {
      "type": "object",
      "properties": {
        "qualifier": {
          "$ref": "#/definitions/v1Qualifier",
          "title": "Should mail be accepted from the defined server(s)"
        },
        "type": {
          "$ref": "#/definitions/v1MechanismType",
          "title": "How are we going to specify server(s)"
        },
        "value": {
          "type": "string",
          "title": "Which server(s) are being specified"
        }
      },
      "title": "A directive adds or removes servers from the approved list"
    },
    "v1GetDMARCRecordResponse": {
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/v1DMARCRecord"
        }
      }
    },
    "v1GetDNSRecordsResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "The domain that has dns records below"
        },
        "aRecord": {
          "$ref": "#/definitions/v1ARecord",
          "title": "DNS A record for the domain above"
        },
        "cnameRecord": {
          "$ref": "#/definitions/v1CNameRecord",
          "title": "DNS Cname record for the domain above"
        },
        "caaRecord": {
          "$ref": "#/definitions/v1CAARecord",
          "title": "DNS CAA record for the domain above"
        },
        "aaaaRecord": {
          "$ref": "#/definitions/v1AAAARecord",
          "title": "DNS AAAA record for the domain above"
        }
      },
      "title": "A response that represents a domain's DNS records"
    },
    "v1GetDomainByIdentifierResponse": {
      "type": "object",
      "properties": {
        "primary": {
          "$ref": "#/definitions/v1Domain"
        },
        "secondaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Domain"
          }
        }
      },
      "title": "Response for GetDomainByIdentifier"
    },
    "v1GetIdentifierByDomainResponse": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/v1Identifier"
        }
      },
      "title": "Response for GetIdentifierByDomain"
    },
    "v1GetSPFRecordResponse": {
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/v1SPFRecord"
        }
      }
    },
    "v1MechanismType": {
      "type": "string",
      "enum": [
        "MECHANISM_TYPE_ALL",
        "MECHANISM_TYPE_INCLUDE",
        "MECHANISM_TYPE_A",
        "MECHANISM_TYPE_MX",
        "MECHANISM_TYPE_PTR",
        "MECHANISM_TYPE_IP4",
        "MECHANISM_TYPE_IP6",
        "MECHANISM_TYPE_EXISTS"
      ],
      "default": "MECHANISM_TYPE_ALL",
      "title": "- MECHANISM_TYPE_ALL: Selects all servers\n - MECHANISM_TYPE_INCLUDE: References another domain's SPF\n - MECHANISM_TYPE_A: Refers to a DNS name A or AAAA record\n - MECHANISM_TYPE_MX: Refers to the incoming Mail Servers of a domain\n - MECHANISM_TYPE_PTR: Refers to a DNS name PTR record\n - MECHANISM_TYPE_IP4: Refers to an IPv4 address range\n - MECHANISM_TYPE_IP6: Refers to an IPv6 address range\n - MECHANISM_TYPE_EXISTS: Refers to a DNS record of any kind (rarely used)"
    },
    "v1Modifier": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "title": "The name of the modifier"
        },
        "value": {
          "type": "string",
          "title": "The value of the modifier"
        }
      },
      "title": "Modifiers allow expansion of the framework (redirect is the only common one)"
    },
    "v1Qualifier": {
      "type": "string",
      "enum": [
        "QUALIFIER_PASS",
        "QUALIFIER_FAIL",
        "QUALIFIER_SOFT_FAIL",
        "QUALIFIER_NEUTRAL"
      ],
      "default": "QUALIFIER_PASS",
      "title": "- QUALIFIER_PASS: Accept email from this server\n - QUALIFIER_FAIL: Reject email from this server(s)\n - QUALIFIER_SOFT_FAIL: Consider as potential spam email from this server(s)\n - QUALIFIER_NEUTRAL: Provides no information about email from this server(s)"
    },
    "v1ReportOption": {
      "type": "string",
      "enum": [
        "REPORT_OPTION_ALL_FAILED",
        "REPORT_OPTION_ANY_FAILED",
        "REPORT_OPTION_DKIM_FAILED",
        "REPORT_OPTION_SPF_FAILED"
      ],
      "default": "REPORT_OPTION_ALL_FAILED",
      "description": " - REPORT_OPTION_ALL_FAILED: Generate a DMARC failure report if all mechanisms fail to produce an aligned \"pass\" result.\n - REPORT_OPTION_ANY_FAILED: Generate a DMARC failure report if any mechanisms fail to produce an aligned \"pass\" result.\n - REPORT_OPTION_DKIM_FAILED: Generate a DKIM failure report if the message had a signature that failed evaluation\n - REPORT_OPTION_SPF_FAILED: Generate an SPF failure report if the message failed SPF evaluation."
    },
    "v1SPFRecord": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "title": "The version of SPF to use (should just be 1)"
        },
        "directives": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Directive"
          },
          "title": "Directives define groups of servers and how to treat email from them"
        },
        "modifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Modifier"
          },
          "title": "Expansion of the spec"
        },
        "raw": {
          "type": "string",
          "title": "Raw SPF record"
        }
      },
      "title": "SPF (Sender Policy Framework) Records declare which servers can send email on behalf of\na particular domain"
    },
    "GetMultiResponseGroupContainer": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        }
      }
    },
    "ListRequestFilters": {
      "type": "object",
      "properties": {
        "memberType": {
          "type": "string",
          "title": "Filter the groups to the types of values they store"
        },
        "namespace": {
          "type": "string",
          "title": "Filter the groups by a specific namespace"
        }
      }
    },
    "v1ForeignKeys": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner that owns the group"
        },
        "marketId": {
          "type": "string",
          "title": "The id of the market that owns the group"
        }
      }
    },
    "v1GroupList": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          }
        }
      }
    },
    "v1ListGroupsByMembersResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1TaskManagerGroupList"
          }
        }
      }
    },
    "v1ListMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "All the members in the group and its descendants"
        },
        "totalMembers": {
          "type": "string",
          "format": "int64",
          "title": "The total members in this group"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1MembersExistResponse": {
      "type": "object",
      "properties": {
        "exist": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "title": "A list of booleans indicating whether or not the member exists in this group\nThe order matches the order that the members were provided in the request"
        }
      }
    },
    "v1Path": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of nodes in the path"
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1SortField"
        }
      }
    },
    "v1RecurringCostUnit": {
      "type": "object",
      "properties": {
        "managementPrice": {
          "type": "string",
          "format": "int64"
        },
        "hostingPrice": {
          "type": "string",
          "format": "int64"
        },
        "multiples": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "RecurringCostUnit is used to represent the hosting and management prices"
    },
    "v1SiteBuildCostResponse": {
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/v1Currency"
        },
        "oneTimeCost": {
          "type": "string",
          "format": "int64"
        },
        "recurringCost": {
          "type": "string",
          "format": "int64"
        },
        "oneTimeLineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteBuildCostUnit"
          }
        },
        "recurringLineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecurringCostUnit"
          }
        }
      },
      "title": "CostResponse returns the total one time and recurring costs. It also includes the itemized lists"
    },
    "v1SiteBuildCostUnit": {
      "type": "object",
      "properties": {
        "basePrice": {
          "type": "string",
          "format": "int64"
        },
        "additionalPages": {
          "type": "integer",
          "format": "int32"
        },
        "pricePerAdditionalPage": {
          "type": "string",
          "format": "int64"
        },
        "additionalImages": {
          "type": "integer",
          "format": "int32"
        },
        "pricePerAdditionalImage": {
          "type": "string",
          "format": "int64"
        },
        "additionalEcommerceProducts": {
          "type": "integer",
          "format": "int32"
        },
        "pricePerAdditionalEcommerceProduct": {
          "type": "string",
          "format": "int64"
        },
        "multiples": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SiteBuildCostUnit is used to represent the initial cost of building a single site in an itemized list of costs"
    },
    "v1SiteBuildDefaults": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "ecommerceProducts": {
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "type": "integer",
          "format": "int32"
        },
        "buildOverview": {
          "$ref": "#/definitions/v1SiteBuildOverview"
        }
      },
      "title": "SiteBuildDefaults returns the defaults for a standard page number"
    },
    "v1SiteBuildDefaultsResponse": {
      "type": "object",
      "properties": {
        "siteBuildDefaults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteBuildDefaults"
          }
        }
      },
      "title": "SiteBuildDefaultsResponse returns the defaults for standard page numbers"
    },
    "v1SiteBuildDetails": {
      "type": "object",
      "properties": {
        "includes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includesHighlights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludesHighlights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SiteBuildDetails contains lists of information encoding the pricing marketing"
    },
    "v1SiteBuildOverview": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "buildDetails": {
          "$ref": "#/definitions/v1SiteBuildDetails"
        },
        "managementDetails": {
          "$ref": "#/definitions/v1SiteBuildDetails"
        },
        "hostingDetails": {
          "$ref": "#/definitions/v1SiteBuildDetails"
        }
      },
      "title": "SiteBuildOverview encodes the information used to describe a standard site build"
    },
    "v1SiteBuildUnit": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "type": "integer",
          "format": "int32"
        },
        "ecommerceSite": {
          "type": "boolean"
        },
        "ecommerceProducts": {
          "type": "integer",
          "format": "int32"
        },
        "multiples": {
          "type": "integer",
          "format": "int32",
          "title": "multiples represents the number of sites with this configuration"
        }
      },
      "title": "SiteBuildUnit represents how a user would think about a site they want built for them"
    },
    "v1ActivityLog": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "activity": {
          "$ref": "#/definitions/v1ActivityType"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdTimestamp": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ActivityType": {
      "type": "string",
      "enum": [
        "TYPE_UNSET",
        "CREATE_STAGING_ENV",
        "PUSH_STAGING_TO_LIVE",
        "RESET_STAGING_TO_LIVE",
        "RESET_STAGING_FROM_BACKUP",
        "RESET_STAGING_FROM_TEMPLATE"
      ],
      "default": "TYPE_UNSET"
    },
    "v1Backup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "fileSize": {
          "type": "string",
          "format": "int64"
        },
        "databaseSize": {
          "type": "string",
          "format": "int64"
        },
        "wordpressVersion": {
          "type": "string"
        },
        "numberOfPages": {
          "type": "string",
          "format": "int64"
        },
        "numberOfPosts": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "plugins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Plugin"
          }
        },
        "timestamp": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      }
    },
    "v1ChatCompletionResponse": {
      "type": "object",
      "properties": {
        "resp": {
          "type": "string"
        }
      }
    },
    "v1CreateActivityLogResponse": {
      "type": "object",
      "properties": {
        "actionSucceeded": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteSiteTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the site delete task"
        },
        "error": {
          "type": "string",
          "title": "The error message from the site delete task (empty if task was successful)"
        }
      }
    },
    "v1GetDownloadBackupURLResponse": {
      "type": "object",
      "properties": {
        "signedUrl": {
          "type": "string"
        }
      }
    },
    "v1GetSiteResourceUsagesResponse": {
      "type": "object",
      "properties": {
        "siteResourceUsages": {
          "$ref": "#/definitions/v1SiteResourceUsages"
        }
      }
    },
    "v1GetSiteStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1GetSiteSummaryResponse": {
      "type": "object",
      "properties": {
        "siteSummary": {
          "$ref": "#/definitions/v1SiteSummary"
        }
      }
    },
    "v1ListActivityLogsResponse": {
      "type": "object",
      "properties": {
        "activityLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivityLog"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListBackupsResponse": {
      "type": "object",
      "properties": {
        "backups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Backup"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalNumRecords": {
          "type": "string"
        }
      }
    },
    "v1ListPluginsResponse": {
      "type": "object",
      "properties": {
        "plugins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Plugin"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1Plugin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the WordPress plugin"
        },
        "name": {
          "type": "string",
          "title": "The name of the WordPress plugin"
        },
        "version": {
          "type": "string",
          "title": "The version of the plugin that the site is currently using"
        },
        "status": {
          "type": "string",
          "title": "The status of the plugin (active or inactive)"
        }
      }
    },
    "v1ResourceUsagesResponse": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WordPressSite"
          }
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        },
        "siteHealths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteHealths"
          },
          "title": "The cursor to use for the next healthcheckData"
        }
      }
    },
    "v1SiteResourceUsages": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "string"
        },
        "visitors": {
          "type": "string"
        }
      }
    },
    "v1SiteSummary": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "primaryDomain": {
          "type": "string"
        },
        "alternativeDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTemplate": {
          "type": "boolean"
        },
        "fileSize": {
          "type": "string",
          "format": "int64"
        },
        "databaseSize": {
          "type": "string",
          "format": "int64"
        },
        "wordpressVersion": {
          "type": "string"
        },
        "numberOfPages": {
          "type": "string",
          "format": "int64"
        },
        "numberOfPosts": {
          "type": "string",
          "format": "int64"
        },
        "objectCacheEnabled": {
          "type": "boolean"
        },
        "forceCacheEnabled": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "wpLoginExposed": {
          "type": "boolean"
        },
        "dbName": {
          "type": "string"
        },
        "dbHost": {
          "type": "string"
        },
        "dbUser": {
          "type": "string"
        },
        "stagingDbName": {
          "type": "string"
        },
        "stagingDomain": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        },
        "wpDebugEnabled": {
          "type": "boolean"
        },
        "stagingWpDebugEnabled": {
          "type": "boolean"
        },
        "cdnVersion": {
          "type": "string"
        },
        "objectCacheVersion": {
          "type": "string"
        },
        "deactivated": {
          "type": "boolean"
        },
        "template": {
          "type": "boolean"
        },
        "ignoreCacheHeaders": {
          "type": "boolean"
        },
        "gaTrackingId": {
          "type": "string"
        },
        "skipUpgradingHttp": {
          "type": "boolean"
        },
        "multiSite": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "wpMemoryLimit": {
          "type": "string"
        },
        "wpMaxMemoryLimit": {
          "type": "string"
        },
        "postMaxSize": {
          "type": "string"
        },
        "allowXmlRpc": {
          "type": "boolean"
        },
        "allowUrlFopen": {
          "type": "boolean"
        },
        "detached": {
          "type": "boolean"
        },
        "wpOption": {
          "type": "string"
        },
        "isObjectCache": {
          "type": "string"
        },
        "subsites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubsiteInfo"
          }
        },
        "developerModeEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateActivityLogResponse": {
      "type": "object",
      "properties": {
        "actionSucceeded": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateFields": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "The newly created user"
        }
      },
      "title": "The response from CreateUser"
    },
    "v1ArticleStub": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "Title of article"
        },
        "body": {
          "type": "string",
          "title": "Article's stubbed body"
        },
        "origin": {
          "type": "string",
          "title": "Origin of article (Community, Academy, Resource Center, etc.)"
        },
        "link": {
          "type": "string",
          "title": "Link to full article"
        },
        "thumbnail": {
          "type": "string",
          "title": "Link to the associated thumbnail"
        }
      },
      "title": "Article stub returned to display on search query"
    },
    "v1FilterParams": {
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Origins"
          }
        }
      }
    },
    "v1Origins": {
      "type": "string",
      "enum": [
        "ORIGINS_UNSPECIFIED",
        "ORIGINS_COMMUNITY_WP",
        "ORIGINS_ACADEMY_WP",
        "ORIGINS_RESOURCE_CENTER_ZENDESK",
        "ORIGINS_VIDEO_WP",
        "ORIGINS_BP_MEMBERS_WP",
        "ORIGINS_ACADEMY_LESSON_WP",
        "ORIGINS_BP_GROUP_WP",
        "ORIGINS_PODCASTS_WP",
        "ORIGINS_OPEN_API",
        "ORIGINS_COMMUNITY_POST_ZENDESK"
      ],
      "default": "ORIGINS_UNSPECIFIED",
      "title": "All supported origins of articles to index from"
    },
    "v1SearchArticleResponse": {
      "type": "object",
      "properties": {
        "articles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ArticleStub"
          },
          "title": "List of relevant article stubs"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      },
      "title": "Response for Help Center's search"
    },
    "GetMultiCustomersRequestCustomerIdentifiers": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group the requested customer belongs to"
        },
        "customerId": {
          "type": "string",
          "title": "The ID of the customer that is being requested"
        }
      }
    },
    "v1BulkCreateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BulkCreateCustomerValidationError"
          },
          "title": "Validation errors"
        }
      }
    },
    "v1BulkCreateCustomerValidationError": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "int64",
          "title": "Index of the customer that has errors"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CustomerValidationError"
          },
          "title": "Errors for that specific customer"
        }
      }
    },
    "v1BulkUpdateCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "The customers updated in the bulk update request"
        }
      }
    },
    "v1Conflict": {
      "type": "object",
      "properties": {
        "conflictId": {
          "type": "string",
          "title": "A unique id for the conflict"
        },
        "customerId": {
          "type": "string",
          "title": "A unique id for the customer"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The account group to add this customer to"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner to add this customer to"
        },
        "firstName": {
          "type": "string",
          "title": "The first name of the customer"
        },
        "lastName": {
          "type": "string",
          "title": "The last name of the customer"
        },
        "address": {
          "type": "string",
          "title": "The street address of where the customer is"
        },
        "city": {
          "type": "string",
          "title": "The city where the customer is"
        },
        "state": {
          "type": "string",
          "title": "The state where the customer is"
        },
        "country": {
          "type": "string",
          "title": "The country where the customer is"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The phone number of the customer"
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The email address of the customer"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The tags of the customer"
        },
        "origins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The application ID that created the customer"
        },
        "permissionToContact": {
          "type": "string",
          "format": "date-time",
          "title": "The time the customer has explicitly opted-in to receive communication from the Business"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the customer was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the customer was last modified"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The time the customer was deleted. Will be nil if the contact has not been deleted"
        },
        "assignedRepFirstName": {
          "type": "string",
          "title": "The first name of the rep assigned to the customer"
        },
        "assignedRepLastName": {
          "type": "string",
          "title": "The last name of the rep assigned to the customer"
        }
      }
    },
    "v1ConflictingField": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The id of the customer you are conflicting with"
        },
        "fieldType": {
          "$ref": "#/definitions/v1CustomerFieldType",
          "title": "The field you are conflicting with ex. email"
        },
        "fieldValue": {
          "type": "string",
          "title": "The existing matching value"
        }
      }
    },
    "v1ContactMessageResponse": {
      "type": "object",
      "properties": {
        "responseMessage": {
          "type": "string",
          "title": "Response message"
        }
      }
    },
    "v1CreateContactResponse": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/v1Contact",
          "title": "The new contact that's been created"
        }
      }
    },
    "v1CreateWithoutConflictResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The newly created customer"
        },
        "conflictingFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConflictingField"
          },
          "title": "The existing values you are conflicting with in the case of a failed create"
        }
      }
    },
    "v1CustomerFieldType": {
      "type": "string",
      "enum": [
        "CUSTOMER_FIELD_TYPE_NONE",
        "CUSTOMER_FIELD_TYPE_EMAIL",
        "CUSTOMER_FIELD_TYPE_PHONE"
      ],
      "default": "CUSTOMER_FIELD_TYPE_NONE"
    },
    "v1CustomerHeaderMapping": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "permissionToContact": {
          "type": "string"
        }
      },
      "title": "Mapping headers in the csv file to match each field to whatever it's named"
    },
    "v1CustomerIdMapping": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "Vendasta's internal customer id"
        },
        "vendorAppId": {
          "type": "string",
          "title": "The app id for the vendor product this customer is mapped to"
        },
        "vendorCustomerId": {
          "type": "string",
          "title": "The customer reference id generated by the vendor app"
        },
        "customerType": {
          "$ref": "#/definitions/v1CustomerType",
          "title": "The customer's type (eg. \"conflict\")"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the customer mapping was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the customer mapping was last modified"
        }
      }
    },
    "v1CustomerOrigin": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "title": "The vendor ID of the application that originally created the customer record"
        },
        "name": {
          "type": "string",
          "title": "The white labeled name of the customer origin"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The total number of customers with this origin"
        }
      }
    },
    "v1CustomerSortDirection": {
      "type": "string",
      "enum": [
        "CUSTOMER_SORT_DIRECTION_ASCENDING",
        "CUSTOMER_SORT_DIRECTION_DESCENDING"
      ],
      "default": "CUSTOMER_SORT_DIRECTION_ASCENDING",
      "description": "The directions that a result set can be sorted in."
    },
    "v1CustomerSortField": {
      "type": "string",
      "enum": [
        "CUSTOMER_SORT_FIELD_FIRST_NAME",
        "CUSTOMER_SORT_FIELD_LAST_NAME",
        "CUSTOMER_SORT_FIELD_CREATED"
      ],
      "default": "CUSTOMER_SORT_FIELD_FIRST_NAME",
      "description": "The field to sort a result set on."
    },
    "v1CustomerSortOptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1CustomerSortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1CustomerSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1CustomerType": {
      "type": "string",
      "enum": [
        "CUSTOMER_TYPE_UNKNOWN",
        "CUSTOMER_TYPE_CUSTOMER",
        "CUSTOMER_TYPE_CONFLICT"
      ],
      "default": "CUSTOMER_TYPE_UNKNOWN"
    },
    "v1CustomerValidationError": {
      "type": "string",
      "enum": [
        "CUSTOMER_VALIDATION_ERROR_NO_ERRORS",
        "CUSTOMER_VALIDATION_ERROR_EMAIL_OR_PHONE_REQUIRED",
        "CUSTOMER_VALIDATION_ERROR_INVALID_EMAIL",
        "CUSTOMER_VALIDATION_ERROR_INVALID_PHONE",
        "CUSTOMER_VALIDATION_ERROR_INVALID_FIRST_NAME",
        "CUSTOMER_VALIDATION_ERROR_INVALID_LAST_NAME"
      ],
      "default": "CUSTOMER_VALIDATION_ERROR_NO_ERRORS",
      "title": "- CUSTOMER_VALIDATION_ERROR_NO_ERRORS: Possible validation errors"
    },
    "v1GetCustomerIdMappingResponse": {
      "type": "object",
      "properties": {
        "customerIdMapping": {
          "$ref": "#/definitions/v1CustomerIdMapping",
          "title": "The requested customer id mapping"
        }
      }
    },
    "v1GetMultiCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "List of the requested customers"
        }
      },
      "title": "Returns multiple requested customers"
    },
    "v1GetUserListResponse": {
      "type": "object",
      "properties": {
        "userList": {
          "$ref": "#/definitions/v1UserListItem",
          "title": "The user list details"
        }
      }
    },
    "v1ListContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Contact"
          },
          "title": "List of the contacts"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total number of contacts for account group"
        }
      }
    },
    "v1ListCustomerOriginsResponse": {
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerOrigin"
          },
          "title": "A list of all of the origins for an account group's customers"
        }
      }
    },
    "v1ListUserListsResponse": {
      "type": "object",
      "properties": {
        "userLists": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserListItem"
          },
          "title": "The list of userlist items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListUsersFromListResponse": {
      "type": "object",
      "properties": {
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of IAM user IDs"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1UpdateContactResponse": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/v1Contact",
          "title": "The new contact that's been updated"
        }
      }
    },
    "v1UserListItem": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string",
          "title": "The unique ID for the list"
        },
        "listName": {
          "type": "string",
          "title": "The name of the list for the users"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The list's created or updated time (group)"
        },
        "itemCount": {
          "type": "string",
          "format": "int64",
          "title": "The list's member count"
        }
      }
    },
    "v1VendorCreateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The new customer that's been created"
        },
        "conflictingCustomerId": {
          "type": "string",
          "title": "The customer id that conflict with"
        }
      }
    },
    "v1VendorGetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The customer that's been updated or the representation of the conflict that's been updated"
        },
        "conflictingCustomerId": {
          "type": "string",
          "title": "The ID of the customer that the conflict is conflicting with, if any"
        }
      }
    },
    "v1VendorListCustomerOriginsResponse": {
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerOrigin"
          },
          "title": "A list of all of the origins for an account group's customers"
        }
      }
    },
    "v1VendorListCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "The customers matching the list request"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to list the next page of customers"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether there are more customers to list"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total number of customers for account group"
        }
      }
    },
    "v1VendorUpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The customer that's been updated or the representation of the conflict that's been updated"
        },
        "conflictingCustomerId": {
          "type": "string",
          "title": "The ID of the customer that the conflict is conflicting with, if any"
        }
      }
    },
    "v1WhiteLabeledOrigin": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "title": "The origin of contact"
        },
        "whiteLabeledName": {
          "type": "string",
          "title": "The white labeled name of the contact origin"
        }
      }
    },
    "SubscriptionPlan": {
      "type": "object",
      "properties": {
        "planName": {
          "type": "string",
          "title": "the plan name"
        }
      },
      "title": "Nested Plan entity for a Google Workspace subscription (flexible, annual, trial)"
    },
    "SubscriptionTransferInfo": {
      "type": "object",
      "properties": {
        "minimumTransferableSeats": {
          "type": "string",
          "format": "int64",
          "title": "The minimum number of seats listed in the transfer order for this product"
        }
      },
      "title": "Nested TransferInfo entity for a Google Workspace subscription (read-only)"
    },
    "v1DomainInformation": {
      "type": "object",
      "properties": {
        "dnsTxtRecord": {
          "type": "string",
          "title": "The DNS TXT record for domain verification"
        },
        "status": {
          "$ref": "#/definitions/v1DomainVerificationStatus",
          "title": "The status of the domain verification"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "title": "The creation date of the domain verification"
        },
        "verifiedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date of the verification for the domain verification"
        }
      },
      "title": "The domain information of the Google Workspace account"
    },
    "v1DomainVerificationStatus": {
      "type": "string",
      "enum": [
        "DOMAIN_VERIFICATION_STATUS_UNSPECIFIED",
        "DOMAIN_VERIFICATION_STATUS_UNVERIFIED",
        "DOMAIN_VERIFICATION_STATUS_VERIFIED"
      ],
      "default": "DOMAIN_VERIFICATION_STATUS_UNSPECIFIED",
      "description": "- DOMAIN_VERIFICATION_STATUS_UNSPECIFIED: Unspecified (omitted in response)\n - DOMAIN_VERIFICATION_STATUS_UNVERIFIED: Not verified yet\n - DOMAIN_VERIFICATION_STATUS_VERIFIED: Successfully verified",
      "title": "The Google domain verification status of the Google Workspace account"
    },
    "v1GetDomainInformationResponse": {
      "type": "object",
      "properties": {
        "domainInformation": {
          "$ref": "#/definitions/v1DomainInformation",
          "title": "DomainInformation model"
        }
      },
      "title": "A response with the domain information"
    },
    "v1GetResetPasswordMapResponse": {
      "type": "object",
      "properties": {
        "resetPasswordMap": {
          "$ref": "#/definitions/v1ResetPasswordMap",
          "title": "ResetPasswordMap model"
        }
      },
      "title": "A response to get the ResetPasswordMap for a Google Workspace Customer"
    },
    "v1GetSSOResponse": {
      "type": "object",
      "properties": {
        "enableSso": {
          "type": "boolean",
          "title": "Indicates whether SSO is enabled or disabled"
        }
      },
      "title": "A response with the SSO settings for a Google Workspace account"
    },
    "v1GetSeatCountsResponse": {
      "type": "object",
      "properties": {
        "used": {
          "type": "string",
          "format": "int64",
          "title": "The number of used seats"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "The total number of seats"
        }
      },
      "title": "A response for getting the seat counts for a Google Workspace Customer"
    },
    "v1GetTransferDataResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "The domain of the Google Workspace customer"
        },
        "transferToken": {
          "type": "string",
          "title": "The token for the transfer of the Google Workspace Customer"
        },
        "planName": {
          "type": "string",
          "title": "the plan name"
        },
        "skuName": {
          "type": "string",
          "title": "The product sku name"
        },
        "planType": {
          "type": "string",
          "title": "The kind of plan the Google Workspace Customer has, e.g., basic"
        },
        "seats": {
          "type": "string",
          "format": "int64",
          "title": "The number of seats the Google Workspace Customer has"
        }
      },
      "title": "A response for getting data for a Google Workspace transfer"
    },
    "v1ListUserMapsResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserMap"
          },
          "title": "The Usermap models"
        },
        "cursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "The number of items to return in the next page"
        }
      },
      "title": "A response for listing the UserMaps from vStore"
    },
    "v1ListVBCUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "VBC users"
        }
      },
      "title": "A response for listing the VBC users for a business"
    },
    "v1PostalAddress": {
      "type": "object",
      "properties": {
        "streetAddress": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        }
      }
    },
    "v1ResetPasswordMap": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "Randomly generated identifier for the ResetPasswordMap"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID for the Google Workspace Customer with a password reset"
        },
        "email": {
          "type": "string",
          "title": "The email for the Google Workspace Customer with a password reset"
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "title": "The time of the code expiring for the Google Workspace Customer password reset"
        }
      },
      "title": "A mapping for a Google Workspace Customer password reset"
    },
    "v1Seats": {
      "type": "object",
      "properties": {
        "licensedNumberOfSeats": {
          "type": "string",
          "format": "int64",
          "title": "Read-only field for the current number of users that are assigned a license for the product defined in the skuId"
        },
        "maximumNumberOfSeats": {
          "type": "string",
          "format": "int64",
          "title": "The maximum number of seats for a Google Workspace customer; Exclusive to subscriptions with flexible or trial plans"
        },
        "numberOfSeats": {
          "type": "string",
          "format": "int64",
          "title": "The number of seats for a Google Workspace customer; Exclusive to subscriptions with annual plans"
        }
      },
      "title": "Nested entity for subscription seats"
    },
    "v1VerifyDomainResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "A response for verifying Google Workspace Customer's domain"
    },
    "UpdateTemplateRequestCommand": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "daysToComplete": {
          "type": "string",
          "format": "int64"
        },
        "assigneesToAdd": {
          "$ref": "#/definitions/v1MultiString"
        },
        "assigneesToRemove": {
          "$ref": "#/definitions/v1MultiString"
        },
        "description": {
          "type": "string"
        },
        "tagsToAdd": {
          "$ref": "#/definitions/v1MultiString"
        },
        "tagsToRemove": {
          "$ref": "#/definitions/v1MultiString"
        },
        "notes": {
          "type": "string"
        },
        "reorder": {
          "$ref": "#/definitions/taskmanagerv1ReorderSubtask"
        },
        "addSubtask": {
          "$ref": "#/definitions/v1Template"
        },
        "associatedProductId": {
          "type": "string"
        },
        "nextTaskLocked": {
          "type": "boolean"
        },
        "isVisible": {
          "type": "boolean"
        },
        "recurringTaskId": {
          "type": "string"
        }
      }
    },
    "taskmanagerv1Filters": {
      "type": "object",
      "properties": {
        "fuzzyText": {
          "type": "string",
          "description": "Search across multiple fields with fuzzy matching such as title, partner name, account name, assignees etc."
        },
        "partnerId": {
          "type": "string",
          "title": "Exactly match a task's partnerID"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Exactly match a task's AccountGroupID"
        },
        "fulfillingPartnerId": {
          "type": "string",
          "title": "Exactly match a task's FulfillingPartnerID"
        },
        "parentTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Match all tasks that have the specified ID as a parent"
        },
        "productId": {
          "type": "string",
          "title": "Exactly match a task's ProductID"
        },
        "orderId": {
          "type": "string",
          "title": "Exactly match a task's OrderID"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match a task's status"
        },
        "dateFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DateFilter"
          },
          "title": "Matches tasks that have the specified date field within the date range"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match a task's type"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match a task's system provided tag"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match a task's user provided tag"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match a task's assignee by subjectID"
        },
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match a task's ID"
        },
        "customTagIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Exactly match on a custom tag id's"
        },
        "rangeFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FuzzyRangeFilter"
          },
          "title": "Matches tasks that have the specified numeric field within the date range"
        }
      }
    },
    "taskmanagerv1ReorderSubtask": {
      "type": "object",
      "properties": {
        "currentPosition": {
          "type": "string",
          "format": "int64"
        },
        "newPosition": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1AccountGroup": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The ID of the account group"
        },
        "name": {
          "type": "string",
          "title": "The name of the account group"
        },
        "address": {
          "type": "string",
          "title": "The address of the account group"
        },
        "activatedProductIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of activated aproducts on the account group"
        },
        "url": {
          "type": "string",
          "title": "The url to the account group"
        }
      },
      "title": "A representation of the information on an account group that we're interested in"
    },
    "v1AccountSalespersonData": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1AccountSocialService": {
      "type": "string",
      "enum": [
        "ACCOUNT_SOCIAL_SERVICE_UNDEFINED",
        "ACCOUNT_SOCIAL_SERVICE_FACEBOOK",
        "ACCOUNT_SOCIAL_SERVICE_GMB"
      ],
      "default": "ACCOUNT_SOCIAL_SERVICE_UNDEFINED"
    },
    "v1ActivityTypes": {
      "type": "string",
      "enum": [
        "ACTIVITY_TYPES_UNSET",
        "ACTIVITY_TYPES_EMAIL",
        "ACTIVITY_TYPES_MEETING",
        "ACTIVITY_TYPES_CALL"
      ],
      "default": "ACTIVITY_TYPES_UNSET",
      "title": "*************\n* Types\n*************"
    },
    "v1BusinessFulfillmentSetting": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "productIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CanUserAccessVendorPartnerResponse": {
      "type": "object",
      "properties": {
        "canAccess": {
          "type": "boolean"
        }
      }
    },
    "v1ChildNode": {
      "type": "object",
      "properties": {
        "operatorNode": {
          "$ref": "#/definitions/v1OperatorNode"
        },
        "filters": {
          "$ref": "#/definitions/taskmanagerv1Filters"
        }
      },
      "description": "Child of an OperatorNode. Can either contain another operator or filters that the parent operator will apply to."
    },
    "v1CommentProjectionFilter": {
      "type": "object",
      "properties": {
        "retrieveSubtasks": {
          "type": "boolean",
          "title": "Should we retrieve subtasks ?"
        },
        "retrievePrivate": {
          "type": "boolean",
          "title": "Should we retrieve private comments ?"
        }
      }
    },
    "v1CommentType": {
      "type": "string",
      "enum": [
        "COMMENT_TYPE_UNDEFINED",
        "COMMENT_TYPE_PUBLIC",
        "COMMENT_TYPE_PRIVATE"
      ],
      "default": "COMMENT_TYPE_UNDEFINED"
    },
    "v1ConciergeAccount": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "conciergeAccountId": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "isCollectingTasks": {
          "type": "boolean"
        },
        "isBilling": {
          "type": "boolean"
        },
        "qaTasksEnabled": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "market": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "willDeactivate": {
          "type": "boolean"
        }
      }
    },
    "v1ContactDetails": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "v1ConversationTypes": {
      "type": "string",
      "enum": [
        "CONVERSATION_TYPES_UNSET",
        "CONVERSATION_TYPES_PROJECT_TRACKER_FEEDBACK",
        "CONVERSATION_TYPES_PROJECT_TRACKER_APPROVAL",
        "CONVERSATION_TYPES_TAGGING"
      ],
      "default": "CONVERSATION_TYPES_UNSET"
    },
    "v1CreateCustomTagResponse": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string"
        }
      }
    },
    "v1CreateProjectFromTemplateRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner the project will be created in"
        },
        "accountId": {
          "type": "string",
          "title": "The accountGroupID the project will be created in"
        },
        "templateId": {
          "type": "string",
          "title": "The template being used as the base for the project"
        },
        "parentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "This field isn't used for anything"
        },
        "activationId": {
          "type": "string",
          "title": "If the template has a productID set then it will be hashed alongside this to create an idempotent projectID"
        },
        "idempotencyKey": {
          "type": "string",
          "title": "An arbitrary string that will be hashed alongside the templateID to create an idempotent projectID"
        },
        "triggeredByRecurringTask": {
          "type": "boolean",
          "title": "Indicates that the project creation was triggered by a recurring task and tells the workflow\nto follow some special rules when creating the project"
        },
        "fulfillingPartnerId": {
          "type": "string",
          "title": "There are cases where the Fulfilling Partner is not the one that created the template\nin these cases, we may pass the fulfilling partner Id here"
        },
        "orderId": {
          "type": "string",
          "title": "The project will be associated with this order"
        },
        "fulfillmentOrderId": {
          "type": "string",
          "title": "the project will be associated with this fulfillment order"
        }
      },
      "title": "*************\n* Requests\n*************\nCreates a new project on the given partner and account from the given template"
    },
    "v1CreateProjectFromTemplateSynchronousResponse": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "title": "The id of the project that was created"
        }
      }
    },
    "v1CreateRecurringTaskResponse": {
      "type": "object",
      "properties": {
        "recurringTaskId": {
          "type": "string"
        }
      }
    },
    "v1CreateTaskStatusResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string"
        }
      }
    },
    "v1CreateTemplateFromProjectResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CustomTag": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DateField": {
      "type": "string",
      "enum": [
        "DATE_FIELD_INVALID",
        "DATE_FIELD_DUE",
        "DATE_FIELD_CREATED",
        "DATE_FIELD_COMPLETED",
        "DATE_FIELD_DELETED"
      ],
      "default": "DATE_FIELD_INVALID",
      "title": "The date field on a task that a date filter will apply to"
    },
    "v1DecryptNotesResponse": {
      "type": "object",
      "properties": {
        "decryptedNote": {
          "type": "string"
        }
      }
    },
    "v1DigitalAgent": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "subjectId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string",
          "title": "the partnerID the user was originally created under"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "accessiblePartnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of all the partnerIDs the agent has access to"
        },
        "partnerPermissions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Permissions"
          },
          "title": "a map keyed by partnerID to the permissions the agent has for that partner"
        },
        "profilePictureUrl": {
          "type": "string"
        }
      }
    },
    "v1EncryptNotesResponse": {
      "type": "object",
      "properties": {
        "encryptedNote": {
          "type": "string"
        }
      }
    },
    "v1ExportColumns": {
      "type": "string",
      "enum": [
        "EXPORT_COLUMNS_UNSET",
        "EXPORT_COLUMNS_TITLE",
        "EXPORT_COLUMNS_ACCOUNT",
        "EXPORT_COLUMNS_ADDRESS",
        "EXPORT_COLUMNS_STATUS",
        "EXPORT_COLUMNS_ASSIGNEE",
        "EXPORT_COLUMNS_DUE_DATE",
        "EXPORT_COLUMNS_CREATED_DATE",
        "EXPORT_COLUMNS_COMPLETION_DATE",
        "EXPORT_COLUMNS_UPDATED",
        "EXPORT_COLUMNS_PARTNER"
      ],
      "default": "EXPORT_COLUMNS_UNSET"
    },
    "v1ExportTypes": {
      "type": "string",
      "enum": [
        "EXPORT_TYPES_UNSET",
        "EXPORT_TYPES_CSV"
      ],
      "default": "EXPORT_TYPES_UNSET"
    },
    "v1ExternalIdentifiers": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "title": "An indicator of where this account was created.  SDK clients may choose\nto override this value"
        },
        "customerIdentifier": {
          "type": "string",
          "description": "Reserved for external customer use.  Allows SDK clients to assign an id\nto a business that is meaningful in their external system."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags are used for grouping businesses and list construction.  There is a\nlimit of 16 tags per business. Note that tags are not used to indicate\nlist membership."
        },
        "actionLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ids of the lists that this business is a part of."
        },
        "taxonomyIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The service category of the business.  This is important for listing\nservices and helping to refine what rich data is relevant to a particular\nbusiness.  Up to 3 categories can be assigned from the taxonomy."
        },
        "salesPersonId": {
          "type": "string",
          "description": "The ID of the salesperson associated with this business."
        },
        "partnerId": {
          "type": "string",
          "description": "The partner ID of the business."
        },
        "marketId": {
          "type": "string",
          "description": "The market ID of the business."
        }
      },
      "title": "A set of identifiers associated with a business.  Note that they are\noptional, so Market ID and Partner ID are not included in this structure"
    },
    "v1FuzzyRangeField": {
      "type": "string",
      "enum": [
        "FUZZY_RANGE_FIELD_INVALID",
        "FUZZY_RANGE_FIELD_RUNTIME_COMPLETE_LATE",
        "FUZZY_RANGE_FIELD_RUNTIME_OVERDUE_DAYS"
      ],
      "default": "FUZZY_RANGE_FIELD_INVALID",
      "title": "The field on a task that a range filter will apply to"
    },
    "v1FuzzyRangeFilter": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FuzzyRangeField",
          "title": "Which task field the filter applies to"
        },
        "rangeStart": {
          "type": "string",
          "format": "int64",
          "title": "Initial value for the range, a negative number means an unbounded value"
        },
        "rangeEnd": {
          "type": "string",
          "format": "int64",
          "title": "end value for the range, a negative number means an unbounded value"
        }
      },
      "title": "Filter tasks based on numeric ranges"
    },
    "v1FuzzySearchHydratedTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTask"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1FuzzySort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "title": "The field to sort on"
        },
        "direction": {
          "$ref": "#/definitions/v1FuzzySortDirection",
          "title": "Whether to sort ascending or descending"
        }
      }
    },
    "v1FuzzySortDirection": {
      "type": "string",
      "enum": [
        "FUZZY_SORT_DIRECTION_DESCENDING",
        "FUZZY_SORT_DIRECTION_ASCENDING"
      ],
      "default": "FUZZY_SORT_DIRECTION_DESCENDING",
      "title": "The direction to sort results on for a given field"
    },
    "v1FuzzyTaskSearchRequest": {
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/v1OperatorNode",
          "title": "The base of the query tree for the search"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Page size and cursor offset"
        },
        "sorts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FuzzySort"
          },
          "title": "The fields and directions to sort the results on. List order will be used for precedence"
        },
        "projectionFilter": {
          "$ref": "#/definitions/v1ProjectionFilter",
          "description": "Which additional task fields should be returned."
        },
        "runtimeFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RuntimeField"
          },
          "title": "Runtime fields to be added for the search"
        }
      }
    },
    "v1FuzzyTaskSearchResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          },
          "title": "The list of tasks returned from this search request"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1GenerateFileUploadUrlResponse": {
      "type": "object",
      "properties": {
        "uploadUrl": {
          "type": "string"
        },
        "shareableUrl": {
          "type": "string"
        }
      }
    },
    "v1GetAccountProductDetailsResponse": {
      "type": "object",
      "properties": {
        "productDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductDetails"
          }
        }
      }
    },
    "v1GetActivityResponse": {
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "#/definitions/v1Activity"
        }
      }
    },
    "v1GetAttachmentUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "v1GetBusinessFulfillmentSettingResponse": {
      "type": "object",
      "properties": {
        "setting": {
          "$ref": "#/definitions/v1BusinessFulfillmentSetting"
        }
      }
    },
    "v1GetCommentCountResponse": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/v1TaskIdentity"
        },
        "comments": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetCustomTagResponse": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/v1CustomTag"
        }
      }
    },
    "v1GetDigitalAgentsBySubjectIdsResponse": {
      "type": "object",
      "properties": {
        "digitalAgents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DigitalAgent"
          }
        }
      }
    },
    "v1GetDigitalAgentsByUserIdsResponse": {
      "type": "object",
      "properties": {
        "digitalAgents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DigitalAgent"
          }
        }
      }
    },
    "v1GetFulfilledPartnersResponse": {
      "type": "object",
      "properties": {
        "partnerBrands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerBranding"
          }
        }
      }
    },
    "v1GetHydratedTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1HydratedTask"
        }
      }
    },
    "v1GetMeetingHostResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "agencyName": {
          "type": "string"
        },
        "displayProfileUrl": {
          "type": "string"
        },
        "displayLogoUrl": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schedulerUrl": {
          "type": "string"
        }
      }
    },
    "v1GetMultiCommentCountResponse": {
      "type": "object",
      "properties": {
        "commentCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetCommentCountResponse"
          }
        }
      }
    },
    "v1GetMultiCustomTagResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomTag"
          }
        }
      }
    },
    "v1GetMultiHydratedTaskResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTask"
          }
        }
      }
    },
    "v1GetMultiProductFulfillmentSettingResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductFulfillmentSetting"
          }
        }
      }
    },
    "v1GetMultiUserInfoExternalResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1UserInfo"
          }
        }
      }
    },
    "v1GetOrderFormForProjectResponse": {
      "type": "object",
      "properties": {
        "commonFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrderFormFieldSubmission"
          }
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrderFormFieldSubmission"
          }
        }
      }
    },
    "v1GetProductEntryUrlResponse": {
      "type": "object",
      "properties": {
        "entryUrl": {
          "type": "string"
        }
      }
    },
    "v1GetPurchasingPartnerAccountResponse": {
      "type": "object",
      "properties": {
        "accountGroup": {
          "$ref": "#/definitions/v1AccountGroup"
        }
      }
    },
    "v1GetPurchasingPartnerConciergeAccountResponse": {
      "type": "object",
      "properties": {
        "conciergeAccount": {
          "$ref": "#/definitions/v1ConciergeAccount"
        }
      }
    },
    "v1GetRecurringTaskResponse": {
      "type": "object",
      "properties": {
        "recurringTask": {
          "$ref": "#/definitions/v1RecurringTask"
        }
      }
    },
    "v1GetSalesOrderFormSubmissionInfoResponse": {
      "type": "object",
      "properties": {
        "orderFormSubmissionId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "commonFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesOrderFormSubmissionField"
          }
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesOrderFormSubmissionField"
          }
        }
      }
    },
    "v1GetSalesPersonBySubjectIDResponse": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "photoUrlHttps": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "jobTitle": {
          "type": "string"
        }
      }
    },
    "v1GetTaskAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountGroup"
          }
        }
      }
    },
    "v1GetTaskConciergeAccountResponse": {
      "type": "object",
      "properties": {
        "conciergeAccount": {
          "$ref": "#/definitions/v1ConciergeAccount"
        }
      }
    },
    "v1GetTaskHistoryResponse": {
      "type": "object",
      "properties": {
        "histories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskHistory"
          }
        }
      }
    },
    "v1GetTaskStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1TaskStatus"
        }
      }
    },
    "v1GroupGetMultiResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskManagerGroup"
          }
        }
      }
    },
    "v1HydratedAccessPermissions": {
      "type": "object",
      "properties": {
        "read": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "write": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A generic message for storing who has permissions to whatever it's attached to"
    },
    "v1HydratedAttachment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "uploadingPersonaType": {
          "type": "string"
        },
        "filePermissions": {
          "$ref": "#/definitions/v1HydratedAccessPermissions"
        }
      }
    },
    "v1HydratedConversationPersonaType": {
      "type": "string",
      "enum": [
        "HYDRATED_CONVERSATION_PERSONA_TYPE_UNSET",
        "HYDRATED_CONVERSATION_PERSONA_TYPE_PARTNER",
        "HYDRATED_CONVERSATION_PERSONA_TYPE_SALES_PERSON",
        "HYDRATED_CONVERSATION_PERSONA_TYPE_DIGITAL_AGENT",
        "HYDRATED_CONVERSATION_PERSONA_TYPE_SMB"
      ],
      "default": "HYDRATED_CONVERSATION_PERSONA_TYPE_UNSET"
    },
    "v1HydratedGroupedMetadata": {
      "type": "object",
      "properties": {
        "metadataGroup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedKeyValues"
          }
        }
      }
    },
    "v1HydratedGroupedTags": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTagGroup"
          }
        }
      }
    },
    "v1HydratedKeyValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedValue"
          },
          "description": "List of values associated with the key."
        },
        "key": {
          "type": "string",
          "title": "String key associated with the values"
        }
      }
    },
    "v1HydratedKeyValues": {
      "type": "object",
      "properties": {
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedKeyValue"
          }
        }
      }
    },
    "v1HydratedRangeField": {
      "type": "string",
      "enum": [
        "HYDRATED_RANGE_FIELD_DUE_DATE",
        "HYDRATED_RANGE_FIELD_COMPLETION_DATE",
        "HYDRATED_RANGE_FIELD_CREATED_DATE"
      ],
      "default": "HYDRATED_RANGE_FIELD_DUE_DATE"
    },
    "v1HydratedSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "title": "The field to sort on"
        },
        "direction": {
          "$ref": "#/definitions/v1HydratedSortDirection",
          "title": "Whether to sort ascending or descending"
        }
      }
    },
    "v1HydratedSortDirection": {
      "type": "string",
      "enum": [
        "HYDRATED_SORT_DIRECTION_DESCENDING",
        "HYDRATED_SORT_DIRECTION_ASCENDING"
      ],
      "default": "HYDRATED_SORT_DIRECTION_DESCENDING"
    },
    "v1HydratedTagGroup": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1HydratedTask": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The task's current version"
        },
        "identity": {
          "$ref": "#/definitions/v1HydratedTaskIdentity",
          "title": "The namespace, parent path, and task id of the task"
        },
        "title": {
          "type": "string",
          "title": "The name of the task"
        },
        "status": {
          "type": "string",
          "title": "The state of the task"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the task is due"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Who is working on the task"
        },
        "notes": {
          "type": "string",
          "title": "User added details about the task"
        },
        "description": {
          "type": "string",
          "title": "Task details"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Labels given to the task"
        },
        "history": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTaskHistory"
          },
          "title": "The events that have happened on this task"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time"
        },
        "subtasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTaskIdentity"
          },
          "title": "Namespace, parent path, and task id of all the task's subtasks"
        },
        "taskType": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1HydratedKeyValues",
          "title": "Arbitrary data stored on the task"
        },
        "metadata": {
          "$ref": "#/definitions/v1HydratedKeyValues",
          "title": "Data about the task. Includes each part of task's namespace"
        },
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTaskConversation"
          }
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "attachment": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedAttachment"
          },
          "title": "Information about an uploaded files associated with this task"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountData": {
          "$ref": "#/definitions/v1AccountData"
        },
        "partnerData": {
          "$ref": "#/definitions/v1PartnerData"
        },
        "marketData": {
          "$ref": "#/definitions/v1MarketData"
        },
        "accountSalespersonData": {
          "$ref": "#/definitions/v1AccountSalespersonData"
        },
        "parentData": {
          "$ref": "#/definitions/v1ParentData",
          "title": "Info about the parent (if any)"
        },
        "projectStatusData": {
          "$ref": "#/definitions/v1ProjectStatusData",
          "title": "Info about the project status (if any)"
        },
        "projectCommentsCountData": {
          "$ref": "#/definitions/v1ProjectCommentsCountData",
          "title": "Count of how many comments are on project and its subtasks combined (if any)"
        }
      }
    },
    "v1HydratedTaskConversation": {
      "type": "object",
      "properties": {
        "sendFrom": {
          "type": "string"
        },
        "sendTo": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string",
          "title": "Where the conversation originated"
        },
        "isPublic": {
          "type": "boolean"
        },
        "persona": {
          "$ref": "#/definitions/v1HydratedConversationPersonaType",
          "title": "persona type of user who added the conversation"
        }
      }
    },
    "v1HydratedTaskHistory": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "When the event happened"
        },
        "user": {
          "type": "string",
          "title": "The user that did the action"
        },
        "message": {
          "type": "string",
          "title": "The action taken"
        }
      }
    },
    "v1HydratedTaskIdentity": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "parentPath": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1HydratedTaskProjectionFilter": {
      "type": "object",
      "properties": {
        "includeHistory": {
          "type": "boolean"
        },
        "includeConversations": {
          "type": "boolean"
        },
        "includeAccountData": {
          "type": "boolean"
        },
        "includePartnerData": {
          "type": "boolean"
        },
        "includeMarketData": {
          "type": "boolean"
        },
        "includeAccountSalespersonData": {
          "type": "boolean"
        },
        "includeParentData": {
          "type": "boolean"
        },
        "includeProjectStatusData": {
          "type": "boolean"
        },
        "includeProjectCommentsCountData": {
          "type": "boolean"
        }
      }
    },
    "v1HydratedValue": {
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string"
        },
        "int64Value": {
          "type": "string",
          "format": "int64"
        },
        "boolValue": {
          "type": "boolean"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "timeValue": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "title": "The type of the value chosen. e.g. \"string\""
        }
      }
    },
    "v1IsAppActiveResponse": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "v1IsTaskManagerEnabledForBusinessResponse": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1ListAccountSocialServicesResponse": {
      "type": "object",
      "properties": {
        "socialServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccountSocialService"
          }
        }
      }
    },
    "v1ListAssigneesForPartnerResponse": {
      "type": "object",
      "properties": {
        "digitalAgents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DigitalAgent"
          }
        }
      }
    },
    "v1ListCommitmentDatesResponse": {
      "type": "object",
      "properties": {
        "commitmentDate": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "date-time"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListCustomTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomTag"
          }
        }
      }
    },
    "v1ListGroupMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListGroupResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskManagerGroup"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListTaskStatusesResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskStatus"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Template"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1LoadCommentsResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Comment"
          }
        }
      }
    },
    "v1LookupProductFulfillmentSettingResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductFulfillmentSetting"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1MarketData": {
      "type": "object",
      "properties": {
        "marketId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1MonthlyRecurringOptions": {
      "type": "object",
      "properties": {
        "dayOfMonth": {
          "type": "string",
          "format": "int64"
        },
        "isLastDayOfMonth": {
          "type": "boolean"
        }
      },
      "title": "This option will be available for the RECURRING_TASK_FREQUENCIES_MONTHLY option"
    },
    "v1MultiString": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1OperatorNode": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/v1Operator",
          "title": "The operation to apply to all children"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChildNode"
          },
          "title": "The filters the operator will apply to. Can also contain OperatorNodes to allow for multiple operators to be applied"
        }
      }
    },
    "v1OrderFormFieldSubmission": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        },
        "answerFile": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrderFormFileField"
          }
        }
      }
    },
    "v1OrderFormFileField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1ParentData": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/v1HydratedTaskIdentity",
          "title": "The namespace, parent path, and task id of the parent"
        },
        "parentTitle": {
          "type": "string",
          "title": "Title of the parent"
        }
      }
    },
    "v1PartnerBranding": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "partnerName": {
          "type": "string"
        }
      }
    },
    "v1PartnerData": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ProductDetails": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "isExpired": {
          "type": "boolean"
        },
        "isTrial": {
          "type": "boolean"
        },
        "ssoEnabled": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "format": "int64"
        },
        "count": {
          "type": "string",
          "format": "int64"
        },
        "activationDate": {
          "type": "string",
          "format": "date-time"
        },
        "commitmentDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ProductFilterOperator": {
      "type": "string",
      "enum": [
        "PRODUCT_FILTER_OPERATOR_UNSET",
        "PRODUCT_FILTER_OPERATOR_OR",
        "PRODUCT_FILTER_OPERATOR_AND"
      ],
      "default": "PRODUCT_FILTER_OPERATOR_UNSET"
    },
    "v1ProductFulfillmentSetting": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "fulfillingPartnerId": {
          "type": "string"
        },
        "ownerPartnerId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1ProductFulfillmentSettingKey": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        }
      }
    },
    "v1ProjectCommentsCountData": {
      "type": "object",
      "properties": {
        "totalComments": {
          "type": "integer",
          "format": "int32",
          "title": "Count of how many comments are on project and its subtasks combined"
        }
      }
    },
    "v1ProjectStatusData": {
      "type": "object",
      "properties": {
        "completedSubtaskCount": {
          "type": "integer",
          "format": "int32",
          "title": "total number of completed subtasks"
        },
        "totalSubtaskCount": {
          "type": "integer",
          "format": "int32",
          "title": "total number of subtasks (excluding deleted ones)"
        },
        "hasOverdueSubtasks": {
          "type": "boolean",
          "title": "bool stating if project has overdue subtasks or not"
        }
      }
    },
    "v1ProjectSubtaskCount": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "completedSubtasks": {
          "type": "string",
          "format": "int64"
        },
        "totalSubtasks": {
          "type": "string",
          "format": "int64"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1ProjectSubtaskCountRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dateRangeStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateRangeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "dateField": {
          "$ref": "#/definitions/v1RangeField"
        },
        "cursor": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Leave blank or set to zero for no limit"
        }
      }
    },
    "v1ProjectSubtaskCountResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "projectSubtaskCount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProjectSubtaskCount"
          }
        },
        "cursor": {
          "type": "string"
        }
      }
    },
    "v1ProjectionFilter": {
      "type": "object",
      "properties": {
        "products": {
          "type": "boolean",
          "title": "Controls if products is returned on the business"
        },
        "externalIdentifiers": {
          "type": "boolean",
          "title": "Controls if external_identifiers is returned on the business"
        },
        "socialUrls": {
          "type": "boolean",
          "title": "Controls if social_urls is returned on the business"
        },
        "hoursOfOperation": {
          "type": "boolean",
          "title": "Controls if hours_of_operation is returned on the business"
        },
        "contactDetails": {
          "type": "boolean",
          "title": "Controls if contact_details is returned on the business"
        },
        "richData": {
          "type": "boolean",
          "title": "Controls if rich_data is returned on the business"
        }
      }
    },
    "v1RecurringTask": {
      "type": "object",
      "properties": {
        "recurringTaskId": {
          "type": "string",
          "title": "The unique identifier of the recurring task"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner and fulfilling partner may be the same"
        },
        "fulfillingPartnerId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1RecurringTaskTypes",
          "title": "The types of recurring tasks, future use"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The account group of the tasks that are going to be generated"
        },
        "templateId": {
          "type": "string",
          "title": "If the recurring tasks referes to a project it will have a template associated"
        },
        "initialCreationDate": {
          "type": "string",
          "format": "date-time",
          "title": "When the recurring task will start to generate tasks"
        },
        "nextCreationDate": {
          "type": "string",
          "format": "date-time",
          "title": "The next date a task will be created , this value should not be set as it's calculated"
        },
        "nextDueDate": {
          "type": "string",
          "format": "date-time",
          "title": "The next due date for a task that will be created, this value is also calculated and should not be set"
        },
        "daysToComplete": {
          "type": "string",
          "format": "int64",
          "title": "Amount of days to complete after the task is generated, used to calculate the next_due_date"
        },
        "name": {
          "type": "string",
          "title": "The name of the task generated"
        },
        "description": {
          "type": "string",
          "title": "The default description for the generated tasks"
        },
        "publicNote": {
          "type": "string",
          "title": "Default value for public notes on generated tasks"
        },
        "privateNote": {
          "type": "string",
          "title": "Default value for private notes on generated tasks (cryptographed value)"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default custom tags for the generated tasks"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default custom tags for the generated tasks"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Default assignees for the generated tasks"
        },
        "orderId": {
          "type": "string",
          "title": "The order id of the initial recurring task replicated to all the generated tasks"
        },
        "frequency": {
          "$ref": "#/definitions/v1RecurringTaskFrequencies",
          "title": "The frequency that tasks will be generated (see the enum)"
        },
        "frequencyOffset": {
          "type": "string",
          "format": "int64",
          "title": "Number of intervals on which the frequency will repeat (eg. if frequency is weekly and frequency_offset is 2, a task will be generated every 2 weeks)"
        },
        "weeklyOptions": {
          "$ref": "#/definitions/v1WeeklyRecurringOptions",
          "title": "Options for weekly frequency (days of the week to generate tasks)"
        },
        "monthlyOptions": {
          "$ref": "#/definitions/v1MonthlyRecurringOptions",
          "title": "Options for monthly frequency ( which day of the month, or last day)"
        },
        "yearlyOptions": {
          "$ref": "#/definitions/v1YearlyRecurringOptions",
          "title": "Options for yearly frequencies ( which day of the year )"
        },
        "expires": {
          "$ref": "#/definitions/v1RecurringTaskExpires",
          "title": "The way how new tasks stops generating (never, by number of occurrences or by final date)"
        },
        "occurrences": {
          "type": "string",
          "format": "int64",
          "title": "If expires is by occurrences, this is the number of times the recurring task will generate new tasks, this is decreased after each task is generated"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time",
          "title": "If expires is by a final date, tasks wont be generated after this date"
        },
        "templateInfo": {
          "$ref": "#/definitions/v1TemplateInfo",
          "title": "This is an optional field that can be returned on searches based on a projection-filter"
        }
      },
      "title": "This is the main message object for the recurring task API"
    },
    "v1RecurringTaskExpires": {
      "type": "string",
      "enum": [
        "RECURRING_TASK_EXPIRES_NEVER",
        "RECURRING_TASK_EXPIRES_OCCURRENCES",
        "RECURRING_TASK_EXPIRES_EXPIRATION_DATE"
      ],
      "default": "RECURRING_TASK_EXPIRES_NEVER"
    },
    "v1RecurringTaskFrequencies": {
      "type": "string",
      "enum": [
        "RECURRING_TASK_FREQUENCIES_UNSET",
        "RECURRING_TASK_FREQUENCIES_DAILY",
        "RECURRING_TASK_FREQUENCIES_WEEKLY",
        "RECURRING_TASK_FREQUENCIES_MONTHLY",
        "RECURRING_TASK_FREQUENCIES_YEARLY",
        "RECURRING_TASK_FREQUENCIES_CUSTOM"
      ],
      "default": "RECURRING_TASK_FREQUENCIES_UNSET"
    },
    "v1RecurringTaskProjectionFilter": {
      "type": "object",
      "properties": {
        "includeTemplateOwnerId": {
          "type": "boolean",
          "title": "indicates if we should include the partner id of the owner of the template"
        },
        "includeFullTemplate": {
          "type": "boolean",
          "title": "indicates if the template should be included on the response"
        }
      }
    },
    "v1RecurringTaskTypes": {
      "type": "string",
      "enum": [
        "RECURRING_TASK_TYPES_UNSET",
        "RECURRING_TASK_TYPES_TASK",
        "RECURRING_TASK_TYPES_PROJECT"
      ],
      "default": "RECURRING_TASK_TYPES_UNSET"
    },
    "v1ResetEmailOptions": {
      "type": "object",
      "properties": {
        "usePlatformDefaultDomain": {
          "type": "boolean",
          "title": "Controls whether the reset email is sent from a preconfigured domain that is guaranteed to be authorized"
        }
      }
    },
    "v1RespondToSocialCommentResponse": {
      "type": "object",
      "properties": {
        "socialCommentId": {
          "type": "string"
        }
      }
    },
    "v1RuntimeField": {
      "type": "string",
      "enum": [
        "RUNTIME_FIELD_INVALID",
        "RUNTIME_FIELD_COMPLETE_LATE",
        "RUNTIME_FIELD_OVERDUE_DAYS"
      ],
      "default": "RUNTIME_FIELD_INVALID",
      "title": "The field on a task that a range filter will apply to"
    },
    "v1SalesOrderFormSubmissionField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "fieldType": {
          "type": "string"
        }
      }
    },
    "v1SearchHydratedTaskResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HydratedTask"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1SearchRecurringTaskResponse": {
      "type": "object",
      "properties": {
        "recurringTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecurringTask"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1SendNotificationResponse": {
      "type": "object",
      "title": "Empty response we can extend in the future if needed"
    },
    "v1SourceSetting": {
      "type": "object",
      "properties": {
        "sourceTypeId": {
          "type": "string"
        },
        "hasListingsFlag": {
          "type": "boolean"
        },
        "iconClass16px": {
          "type": "string"
        },
        "iconClass32px": {
          "type": "string"
        },
        "hasReviewsFlag": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "enabledFlag": {
          "type": "boolean"
        },
        "visibilityEnabled": {
          "type": "boolean"
        },
        "socializeEnabled": {
          "type": "boolean"
        },
        "descriptionHtml": {
          "type": "string"
        },
        "reviewsEnabled": {
          "type": "boolean"
        },
        "sourceTypeName": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "iconUrl32px": {
          "type": "string"
        },
        "listingsVerified": {
          "type": "boolean"
        },
        "anchorDataWarning": {
          "type": "boolean"
        }
      }
    },
    "v1SourceSettingsResponse": {
      "type": "object",
      "properties": {
        "sourceSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SourceSetting"
          }
        }
      }
    },
    "v1TaskHistory": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1TaskManagerGroup": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "pathNodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "membersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1TaskManagerGroupList": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaskManagerGroup"
          }
        }
      }
    },
    "v1TemplateIdentity": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The scope of the template. ex: \"partner/ABC\""
        },
        "parentPath": {
          "type": "string",
          "title": "The template's parent(s). ex: \"/TK-1/\" if this is a subtemplate of template TK-1 or \"/\" if this is a top level template"
        },
        "templateId": {
          "type": "string",
          "title": "The template unique id"
        }
      }
    },
    "v1TemplateInfo": {
      "type": "object",
      "properties": {
        "templateOwnerId": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/v1Template"
        }
      }
    },
    "v1UpdateRecurringTaskResponse": {
      "type": "object",
      "properties": {
        "recurringTaskId": {
          "type": "string"
        }
      }
    },
    "v1UserInfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        }
      }
    },
    "v1UserParam": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "personaType": {
          "$ref": "#/definitions/v1PersonaType"
        }
      }
    },
    "v1WeeklyRecurringOptions": {
      "type": "object",
      "properties": {
        "onSunday": {
          "type": "boolean"
        },
        "onMonday": {
          "type": "boolean"
        },
        "onTuesday": {
          "type": "boolean"
        },
        "onWednesday": {
          "type": "boolean"
        },
        "onThursday": {
          "type": "boolean"
        },
        "onFriday": {
          "type": "boolean"
        },
        "onSaturday": {
          "type": "boolean"
        }
      },
      "title": "RecurringTasks messages\nThis option will be available for the RECURRING_TASK_FREQUENCIES_WEEKLY option"
    },
    "v1WelcomeEmailOptions": {
      "type": "object",
      "properties": {
        "usePlatformDefaultDomain": {
          "type": "boolean",
          "title": "Controls whether the reset email is sent from a preconfigured domain that is guaranteed to be authorized"
        }
      }
    },
    "v1YearlyRecurringOptions": {
      "type": "object",
      "properties": {
        "dayOfYear": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "This option will be available for the RECURRING_TASK_FREQUENCIES_YEARLY option"
    },
    "KindDistributedTable": {
      "type": "object",
      "properties": {
        "distributionColumn": {
          "type": "string"
        },
        "colocateWithNamespace": {
          "type": "string",
          "title": "The namespace of the table to explicitly colocate with"
        },
        "colocateWithKind": {
          "type": "string",
          "title": "The kind of the table to explicitly colocate with"
        }
      },
      "title": "DistributedTables are distributed based upon the column specified, optionally explicitly colocated with another\ntesseract table to reduce network overhead when these tables are utilized together"
    },
    "KindLastModifiedConcurrencyControl": {
      "type": "object",
      "properties": {
        "lastModifiedField": {
          "type": "string"
        }
      },
      "title": "Provides concurrency control through a timestamp based approach"
    },
    "KindLocalTable": {
      "type": "object",
      "title": "LocalTables are ordinary tables that do not participate in the distributed architecture"
    },
    "KindReferenceTable": {
      "type": "object",
      "title": "ReferenceTables are tables which are not distributed, but rather replicated everywhere, making them available\nto participate in queries with distributed tables without network overhead"
    },
    "KindVersionConcurrencyControl": {
      "type": "object",
      "properties": {
        "versionField": {
          "type": "string"
        }
      },
      "title": "Provides concurrency control through a monotonically increasing version number"
    },
    "ProjectionAggregation": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FieldReference"
        },
        "type": {
          "$ref": "#/definitions/ProjectionAggregationType"
        }
      }
    },
    "ProjectionAggregationType": {
      "type": "string",
      "enum": [
        "SUM",
        "AVG",
        "COUNT",
        "MAX",
        "MIN"
      ],
      "default": "SUM"
    },
    "ProjectionTransform": {
      "type": "object",
      "properties": {
        "dateTruncate": {
          "$ref": "#/definitions/TransformDateTruncate"
        }
      }
    },
    "QueryRequestCompositeFilter": {
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/QueryRequestCompositeFilterOperator",
          "description": "The operator for combining multiple filters."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/QueryRequestFilter"
          },
          "description": "The list of filters to combine.\nMust contain at least one filter."
        }
      }
    },
    "QueryRequestCompositeFilterOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "AND",
        "OR"
      ],
      "default": "OPERATOR_UNSPECIFIED",
      "description": "A composite filter operator.\n\n - OPERATOR_UNSPECIFIED: Unspecified. This value must not be used.\n - AND: The results are required to satisfy each of the combined filters.\n - OR: The results are required to satisfy one of the combined filters."
    },
    "QueryRequestFieldFilter": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FieldReference",
          "description": "The field to filter by."
        },
        "op": {
          "$ref": "#/definitions/QueryRequestFieldFilterOperator",
          "description": "The operator to filter by."
        },
        "value": {
          "$ref": "#/definitions/tesseractv1Value",
          "description": "The value to compare to."
        }
      }
    },
    "QueryRequestFieldFilterOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "LESS_THAN",
        "LESS_THAN_OR_EQUAL",
        "GREATER_THAN",
        "GREATER_THAN_OR_EQUAL",
        "EQUAL"
      ],
      "default": "OPERATOR_UNSPECIFIED",
      "description": "A field filter operator.\n\n - OPERATOR_UNSPECIFIED: Unspecified. This value must not be used.\n - LESS_THAN: Less than. Requires that the field come first in `order_by`.\n - LESS_THAN_OR_EQUAL: Less than or equal. Requires that the field come first in `order_by`.\n - GREATER_THAN: Greater than. Requires that the field come first in `order_by`.\n - GREATER_THAN_OR_EQUAL: Greater than or equal. Requires that the field come first in\n`order_by`.\n - EQUAL: Equal."
    },
    "QueryRequestFilter": {
      "type": "object",
      "properties": {
        "fieldFilter": {
          "$ref": "#/definitions/QueryRequestFieldFilter"
        },
        "compositeFilter": {
          "$ref": "#/definitions/QueryRequestCompositeFilter"
        },
        "unaryFilter": {
          "$ref": "#/definitions/QueryRequestUnaryFilter"
        },
        "notFilter": {
          "$ref": "#/definitions/QueryRequestNotFilter"
        }
      }
    },
    "QueryRequestGranularity": {
      "type": "string",
      "enum": [
        "GRANULARITY_UNSPECIFIED",
        "HOURLY",
        "DAILY",
        "WEEKLY",
        "MONTHLY",
        "QUARTERLY",
        "YEARLY"
      ],
      "default": "GRANULARITY_UNSPECIFIED"
    },
    "QueryRequestJoin": {
      "type": "object",
      "properties": {
        "table": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TableReference"
          }
        }
      }
    },
    "QueryRequestNotFilter": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/QueryRequestFilter"
        }
      }
    },
    "QueryRequestOrderBy": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/QueryRequestOrderByField"
          }
        }
      }
    },
    "QueryRequestOrderByField": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/QueryRequestProjection"
        },
        "operator": {
          "$ref": "#/definitions/QueryRequestOrderByOperator"
        }
      }
    },
    "QueryRequestOrderByOperator": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING"
    },
    "QueryRequestProjection": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FieldReference"
        },
        "aggregation": {
          "$ref": "#/definitions/ProjectionAggregation"
        },
        "transform": {
          "$ref": "#/definitions/ProjectionTransform"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "QueryRequestReducer": {
      "type": "object",
      "properties": {
        "reduction": {
          "$ref": "#/definitions/ReducerReduction"
        },
        "operator": {
          "$ref": "#/definitions/QueryRequestReducerOperator"
        }
      }
    },
    "QueryRequestReducerField": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FieldReference"
        },
        "date": {
          "$ref": "#/definitions/ReducerDate"
        }
      }
    },
    "QueryRequestReducerOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "GROUP_BY",
        "ROLLUP",
        "GROUPING_SETS",
        "CUBE"
      ],
      "default": "OPERATOR_UNSPECIFIED"
    },
    "QueryRequestUnaryFilter": {
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/QueryRequestUnaryFilterOperator",
          "description": "The unary operator to apply."
        },
        "field": {
          "$ref": "#/definitions/v1FieldReference",
          "description": "The field to which to apply the operator."
        }
      },
      "description": "A filter with a single operand."
    },
    "QueryRequestUnaryFilterOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "IS_NAN",
        "IS_NULL"
      ],
      "default": "OPERATOR_UNSPECIFIED",
      "description": "A unary operator.\n\n - OPERATOR_UNSPECIFIED: Unspecified. This value must not be used.\n - IS_NAN: Test if a field is equal to NaN.\n - IS_NULL: Test if an exprestion evaluates to Null."
    },
    "ReducerDate": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FieldReference"
        },
        "granularity": {
          "$ref": "#/definitions/QueryRequestGranularity"
        }
      },
      "title": "Date reduces datetimes into buckets"
    },
    "ReducerReduction": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/QueryRequestReducerField"
          }
        }
      }
    },
    "TransformDateTruncate": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1FieldReference"
        },
        "granularity": {
          "$ref": "#/definitions/QueryRequestGranularity"
        }
      }
    },
    "tesseractv1ListValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tesseractv1Value"
          }
        }
      }
    },
    "tesseractv1Property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Unique identifier for this property. Must be in snake case format.\nExample(s): account_group_id, listing_id, company_name"
        },
        "type": {
          "$ref": "#/definitions/tesseractv1PropertyType",
          "title": "Type for this property"
        },
        "repeated": {
          "type": "boolean",
          "description": "Indicates if the field is repeated."
        },
        "length": {
          "type": "string",
          "format": "int64",
          "description": "Sets the max length of a string property, typically used to ensure your primary key fits within the bounds of\nthe 768 limit of your primary key."
        }
      }
    },
    "tesseractv1PropertyType": {
      "type": "string",
      "enum": [
        "STRING",
        "INT64",
        "DOUBLE",
        "BOOL",
        "TIMESTAMP",
        "GEOPOINT",
        "TREE"
      ],
      "default": "STRING",
      "title": "- TREE: Tree type properties contain labels delimited by periods, representing a path in a tree structure\nSee https://www.postgresql.org/docs/9.1/static/ltree.html for more information"
    },
    "tesseractv1Struct": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tesseractv1Value"
          }
        }
      }
    },
    "tesseractv1Value": {
      "type": "object",
      "properties": {
        "intValue": {
          "type": "string",
          "format": "int64",
          "title": "Represents a int64 value"
        },
        "doubleValue": {
          "type": "number",
          "format": "double",
          "description": "Represents a double value."
        },
        "stringValue": {
          "type": "string",
          "description": "Represents a string value."
        },
        "boolValue": {
          "type": "boolean",
          "description": "Represents a boolean value."
        },
        "timestampValue": {
          "type": "string",
          "format": "date-time",
          "description": "Represents a timestamp value."
        },
        "listValue": {
          "$ref": "#/definitions/tesseractv1ListValue",
          "description": "Represents a repeated `Value`."
        },
        "geopointValue": {
          "$ref": "#/definitions/v1GeoPoint"
        }
      }
    },
    "v1EntityResult": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1Entity"
        }
      }
    },
    "v1ExecuteSQLUnaryResponse": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Row"
          }
        }
      }
    },
    "v1FieldReference": {
      "type": "object",
      "properties": {
        "tableReference": {
          "$ref": "#/definitions/v1TableReference"
        },
        "fieldPath": {
          "type": "string"
        }
      }
    },
    "v1GeoPoint": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1Kind": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Id of an existing namespace"
        },
        "kind": {
          "type": "string",
          "description": "Unique name of the kind that are creating. Must be in capital camel case format.\nExample(s): AccountGroup, Partner, Review, Listing."
        },
        "primaryKey": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of fields that compose of the primary key. The order is important as it is used for building keysets,\nas well as lookups can be done by the leading pieces of a keyset."
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tesseractv1Property"
          },
          "description": "Schema for the kind. Indexing of any entities into this namespace/kind requires that a type has been set\nfor every field being indexed.  No inference is done and explicit types are required. Fields also are not\nable to have their types changed or deleted, and only additive changes are allowed once a kind has been created."
        },
        "versionConcurrencyControl": {
          "$ref": "#/definitions/KindVersionConcurrencyControl"
        },
        "lastModifiedConcurrencyControl": {
          "$ref": "#/definitions/KindLastModifiedConcurrencyControl"
        },
        "distributedTable": {
          "$ref": "#/definitions/KindDistributedTable"
        },
        "referenceTable": {
          "$ref": "#/definitions/KindReferenceTable"
        },
        "localTable": {
          "$ref": "#/definitions/KindLocalTable"
        }
      }
    },
    "v1QueryUnaryResponse": {
      "type": "object",
      "properties": {
        "structs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tesseractv1Struct"
          }
        }
      }
    },
    "v1Row": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "title": "The values of the row"
        },
        "schema": {
          "$ref": "#/definitions/vendastatypesSchema",
          "title": "The schema of the result set (this is only returned on the first row)"
        }
      },
      "title": "A single result from ExecuteSQL"
    },
    "v1TableReference": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "BrandingApp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The whitelabeled name of the application"
        }
      }
    },
    "BrandingAssets": {
      "type": "object",
      "properties": {
        "faviconUrl": {
          "$ref": "#/definitions/v1URL",
          "title": "Favicon is the small icon that will appear in browser tabs"
        },
        "shortcutIconUrl": {
          "$ref": "#/definitions/v1URL",
          "title": "Shortut Icon is a mid-size icon that will appear in other browsing contexts, such as when the page is added to homescreen"
        },
        "logoUrl": {
          "$ref": "#/definitions/v1URL",
          "title": "Logo is the image that will be used to brand the platform within pages"
        }
      }
    },
    "MutationPartnerAccessMutation": {
      "type": "object",
      "properties": {
        "accessList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerAccess"
          }
        }
      }
    },
    "UpdateFeatureFlagRequestMutation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the feature"
        },
        "description": {
          "type": "string",
          "title": "The description of the feature"
        },
        "accessLevel": {
          "$ref": "#/definitions/v1AccessLevel",
          "title": "The level of access it is"
        },
        "moreInfoUrl": {
          "type": "string",
          "title": "A url to go to for more info"
        },
        "archived": {
          "type": "boolean",
          "title": "a boolean representing whether or not this has been marked as archived"
        },
        "whitelist": {
          "$ref": "#/definitions/MutationPartnerAccessMutation",
          "title": "Partners who are given explicit access to a feature, regardless of access_level value"
        },
        "blacklist": {
          "$ref": "#/definitions/MutationPartnerAccessMutation",
          "description": "Which, if any, partner ids are blacklisted from receiving access to this feature. Highest priority of evaluation."
        },
        "experimentSettings": {
          "$ref": "#/definitions/v1ExperimentSetting",
          "title": "Experiment Settings"
        },
        "ownerName": {
          "type": "string"
        },
        "expiration": {
          "$ref": "#/definitions/v1Expiration",
          "title": "Expiration is the amount of time after which the flag will self-disable"
        },
        "restartExpiry": {
          "type": "boolean",
          "title": "RestartExpiry causes the expiration to restart from today"
        }
      }
    },
    "UpdatePartnerModelMutationCountryState": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "stateCode": {
          "type": "string"
        }
      }
    },
    "UpsertMutationMarketOverridesMutation": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Field"
          }
        }
      }
    },
    "partnerv1Status": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "STATUS_IN_PROGRESS",
        "STATUS_COMPLETE",
        "STATUS_ERROR"
      ],
      "default": "STATUS_INVALID"
    },
    "partnerv1UITheme": {
      "type": "string",
      "enum": [
        "UI_THEME_INVALID",
        "UI_THEME_DARK",
        "UI_THEME_LIGHT",
        "UI_THEME_USER_PREFERENCE"
      ],
      "default": "UI_THEME_INVALID",
      "title": "- UI_THEME_INVALID: Unknown value assigned\n - UI_THEME_DARK: Dark Theme\n - UI_THEME_LIGHT: Light Theme\n - UI_THEME_USER_PREFERENCE: Theme abides by user os preference"
    },
    "v1AccessLevel": {
      "type": "string",
      "enum": [
        "ACCESS_LEVEL_ALPHA",
        "ACCESS_LEVEL_BETA",
        "ACCESS_LEVEL_ALL",
        "ACCESS_LEVEL_EXPERIMENT"
      ],
      "default": "ACCESS_LEVEL_ALPHA",
      "title": "AccessLevel describes the different possible levels of access we can release features to"
    },
    "v1AcquisitionData": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the partner we acquired"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "tags acquired"
        },
        "origin": {
          "type": "string",
          "title": "which system did this partner used to signup (self-signup, internal, etc...)"
        },
        "visitorIdCookie": {
          "type": "string",
          "title": "identified visitor cookie"
        },
        "conquerLocalAcademyVisitorId": {
          "type": "string",
          "title": "identified conquer local visitor cookie"
        },
        "conversionPoint": {
          "type": "string",
          "title": "where did this partner came from (superadmin, facebook)"
        },
        "numberOfEmployees": {
          "type": "string",
          "title": "identified number of employees"
        },
        "affiliateId": {
          "type": "string",
          "title": "referrer id (old affiliate program)"
        },
        "referrerId": {
          "type": "string",
          "title": "referrer id (new affiliate program)"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was last updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was last updated"
        },
        "clearbitCollectedSignupDataId": {
          "type": "string",
          "title": "ID for CollectedSignUpData at prospect"
        }
      },
      "title": "Data acquired at the moment of partner creation"
    },
    "v1AddonActivationStatus": {
      "type": "string",
      "enum": [
        "ADDON_ACTIVATION_STATUS_PENDING",
        "ADDON_ACTIVATION_STATUS_FAILURE",
        "ADDON_ACTIVATION_STATUS_SUCCESS"
      ],
      "default": "ADDON_ACTIVATION_STATUS_PENDING"
    },
    "v1AppIdentifier": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      }
    },
    "v1BatchGetFeatureFlagResponse": {
      "type": "object",
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FeatureFlag"
          },
          "title": "feature flags found based on request ids"
        }
      },
      "title": "Response message for FeatureFlags.BatchGet"
    },
    "v1BatchGetStatusFeatureFlagResponse": {
      "type": "object",
      "properties": {
        "hasAccess": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "description": "A list of true/false for whether or not the specified partner+market has access to the requested features\nrespective of input feature ids order.\n--------------------------------------\n** NOTE 1 **: If a feature flag is archived we will still perform the check as if it wasn't. This is to preserve\nthe previous functionality from va-vconfig.\n** NOTE 2 **: If a specified feature id on the request does not exist then the\nrespective entry in this response will be true."
        }
      },
      "title": "Response message for FeatureFlags.BatchGetStatus"
    },
    "v1BillingFrequency": {
      "type": "string",
      "enum": [
        "BILLING_FREQUENCY_INVALID",
        "BILLING_FREQUENCY_MONTHLY",
        "BILLING_FREQUENCY_YEARLY",
        "BILLING_FREQUENCY_ONE_TIME"
      ],
      "default": "BILLING_FREQUENCY_INVALID"
    },
    "v1BrandingUITheme": {
      "type": "string",
      "enum": [
        "Dark",
        "Light"
      ],
      "default": "Dark"
    },
    "v1BrandingV2": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the partner"
        },
        "marketId": {
          "type": "string",
          "description": "ID of the market. Can be empty string."
        },
        "faviconUrl": {
          "type": "string",
          "title": "Favicon is the small icon that will appear in browser tabs"
        },
        "shortcutIconUrl": {
          "type": "string",
          "title": "Shortcut Icon is a mid-size icon that will appear in other browsing contexts, such as when the page is added to a home screen"
        },
        "logoUrl": {
          "type": "string",
          "title": "Logo is the image that will be used to brand the platform within pages"
        },
        "uiTheme": {
          "$ref": "#/definitions/partnerv1UITheme",
          "title": "Major theme of the UI"
        },
        "primaryColor": {
          "type": "string",
          "title": "Primary Color"
        },
        "marketOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Field"
          },
          "title": "Specifies the fields that should be used from the market branding versus the partner (no market) branding"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was last updated"
        },
        "name": {
          "type": "string",
          "title": "Name of the partner or their company"
        },
        "darkModeLogoUrl": {
          "type": "string",
          "title": "Optional additional logo for displaying when in dark mode"
        },
        "businessAppUiTheme": {
          "$ref": "#/definitions/partnerv1UITheme",
          "title": "The UI theme for business app, and the embedded biz app side nav in O&O products"
        }
      }
    },
    "v1BusinessCenterConfiguration": {
      "type": "object",
      "properties": {
        "showContentLibrary": {
          "type": "boolean"
        },
        "showLmiDashboard": {
          "type": "boolean"
        },
        "showExecutiveReport": {
          "type": "boolean"
        },
        "showStore": {
          "type": "boolean"
        },
        "cancellationNotificationEmail": {
          "type": "string"
        },
        "globalNotification": {
          "type": "string",
          "title": "A message to be displayed in business center to all users"
        },
        "businessAppBranding": {
          "type": "boolean"
        },
        "referralLink": {
          "$ref": "#/definitions/v1ReferralLink"
        },
        "accessTrialProducts": {
          "type": "boolean"
        },
        "hideQuickbooksConnector": {
          "type": "boolean"
        },
        "hideSmbAcademy": {
          "type": "boolean"
        },
        "showReviewGradeForSmbExecReport": {
          "type": "boolean"
        },
        "showGetStarted": {
          "type": "boolean"
        },
        "meetingSchedulerBusinessApp": {
          "type": "boolean"
        },
        "showSocialGradeForSmbExecReport": {
          "type": "boolean"
        },
        "showMyListingInBusinessCenter": {
          "type": "boolean"
        },
        "showInviteTeam": {
          "type": "boolean"
        },
        "disableBusinessNav": {
          "type": "boolean",
          "title": "Deprecated: use Configuration.disable_business_nav instead"
        },
        "showFulfillment": {
          "type": "boolean"
        },
        "showOrderPage": {
          "type": "boolean"
        },
        "showInvoices": {
          "type": "boolean"
        },
        "showDashboard": {
          "type": "boolean"
        },
        "showFiles": {
          "type": "boolean"
        },
        "showMyProducts": {
          "type": "boolean"
        },
        "showCustomers": {
          "type": "boolean"
        },
        "showRecentActivity": {
          "type": "boolean"
        },
        "showInboxMessage": {
          "type": "boolean"
        },
        "showCustomerJourney": {
          "type": "boolean"
        },
        "showOnboardingVideo": {
          "type": "boolean"
        },
        "onboardingVideoUrl": {
          "type": "string"
        },
        "showMarketingFunnel": {
          "type": "boolean"
        },
        "showCustomGuides": {
          "type": "boolean"
        },
        "customGuidesTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customGuidesUrl": {
          "type": "string"
        },
        "sendOnboardingCampaign": {
          "type": "boolean"
        },
        "onboardingCampaignId": {
          "type": "string"
        },
        "showRecommendationsBanner": {
          "type": "boolean"
        },
        "singleLocationDefaultTimeRange": {
          "$ref": "#/definitions/v1TimeRange"
        },
        "showGoogleSearchConsoleCta": {
          "type": "boolean"
        },
        "isBusinessProfileEditable": {
          "type": "boolean"
        },
        "allowSmbChatWithPartner": {
          "type": "boolean"
        },
        "showWordPressSalesOrders": {
          "type": "boolean"
        },
        "globalNotificationExpiryTime": {
          "type": "string",
          "format": "date-time"
        },
        "showListingScore": {
          "type": "boolean"
        },
        "multiLocationDefaultTimeRange": {
          "$ref": "#/definitions/v1TimeRange"
        },
        "hideCreateAccount": {
          "type": "boolean"
        },
        "notificationsEnabled": {
          "type": "boolean"
        },
        "showListingScoreAsPercent": {
          "type": "boolean"
        },
        "customGuidesInlineTitle": {
          "type": "boolean"
        },
        "allowExportReviews": {
          "type": "boolean"
        },
        "decoupleProductAndReportAccess": {
          "type": "boolean"
        },
        "showCrmCompanies": {
          "type": "boolean"
        },
        "showCrmTasks": {
          "type": "boolean"
        },
        "showCustomForms": {
          "type": "boolean"
        },
        "showAutomations": {
          "type": "boolean"
        },
        "showCrmOpportunities": {
          "type": "boolean"
        },
        "showDynamicLists": {
          "type": "boolean"
        },
        "showLeaderboard": {
          "type": "boolean"
        },
        "showAiAssistant": {
          "type": "boolean"
        },
        "showLeadScoring": {
          "type": "boolean"
        },
        "showInboxWidgetFooterContent": {
          "type": "boolean"
        },
        "showCrmCustomObjects": {
          "type": "boolean"
        }
      }
    },
    "v1BusinessCenterMarketConfiguration": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner id for a market configuration"
        },
        "marketId": {
          "type": "string",
          "title": "The market id of the configuration"
        },
        "showContentLibrary": {
          "type": "boolean",
          "title": "Whether or not the content library is shown in a market for Business App"
        },
        "showLmiDashboard": {
          "type": "boolean",
          "title": "Whether or not the LMI Dashboard is shown in a market for Business App"
        },
        "showExecutiveReport": {
          "type": "boolean",
          "title": "Whether or not the Executive Report is shown in a market for Business App"
        },
        "showStore": {
          "type": "boolean",
          "title": "Whether or not the store is shown in a market for Business App"
        },
        "cancellationNotificationEmail": {
          "type": "string"
        },
        "globalNotification": {
          "type": "string",
          "title": "A message to be displayed in business center to all users"
        },
        "businessAppBranding": {
          "type": "boolean"
        },
        "accessTrialProducts": {
          "type": "boolean",
          "title": "Whether or not the the market uses trial products is shown in a market for Business App"
        },
        "hideQuickbooksConnector": {
          "type": "boolean",
          "title": "Whether or not the quick books connector is hidden in a market for Business App"
        },
        "hideSmbAcademy": {
          "type": "boolean",
          "title": "Whether or not the smb academy is hidden in a market for Business App"
        },
        "showReviewGradeForSmbExecReport": {
          "type": "boolean",
          "title": "Whether or not the review grade is shown in a market for Business App"
        },
        "showGetStarted": {
          "type": "boolean",
          "title": "Whether or not the get started page is shown in a market for Business App"
        },
        "meetingSchedulerBusinessApp": {
          "type": "boolean",
          "title": "Whether or not Meeting Scheduler is shown in a market for Business App"
        },
        "showSocialGradeForSmbExecReport": {
          "type": "boolean",
          "title": "Whether or not the social grade is shown in the executive report for a market for Business App"
        },
        "showInviteTeam": {
          "type": "boolean",
          "title": "Whether or not invite a team content is shown market for Business App"
        },
        "showFulfillment": {
          "type": "boolean",
          "title": "Whether or not order fulfillment is shown in a market for Business App"
        },
        "showOrderPage": {
          "type": "boolean",
          "title": "Whether or not the orders page is shown in a market for Business App"
        },
        "showInvoices": {
          "type": "boolean",
          "title": "Whether or not the invoices page is shown in a market for Business App"
        },
        "showDashboard": {
          "type": "boolean",
          "title": "Whether or not the Dashboard is shown in a market for Business App"
        },
        "showFiles": {
          "type": "boolean",
          "title": "Whether or not the files page is shown in a market for Business App"
        },
        "showMyProducts": {
          "type": "boolean",
          "title": "Whether or not \"my products\" is shown in a market for Business App"
        },
        "showCustomers": {
          "type": "boolean",
          "title": "Whether or not the customers is shown in a market for Business App"
        },
        "showRecentActivity": {
          "type": "boolean",
          "title": "Whether or not the recent activity is shown in a market for Business App"
        },
        "showInboxMessage": {
          "type": "boolean",
          "title": "Whether or not the inbox is shown in a market for Business App"
        },
        "referralLink": {
          "$ref": "#/definitions/v1ReferralLink"
        },
        "showCustomerJourney": {
          "type": "boolean",
          "title": "Whether or not to show the customer journey in BusinessApp"
        },
        "showOnboardingVideo": {
          "type": "boolean",
          "title": "Whether or not to show the onboarding video in BusinessApp"
        },
        "onboardingVideoUrl": {
          "type": "string",
          "title": "Change the onboarding video"
        },
        "showMarketingFunnel": {
          "type": "boolean",
          "title": "Whether or not to show the marketing funnel in BusinessApp"
        },
        "showCustomGuides": {
          "type": "boolean",
          "title": "Whether or not to show custom guides in BusinessApp"
        },
        "customGuidesTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags for a custom guide"
        },
        "customGuidesUrl": {
          "type": "string",
          "title": "The url for custom guides"
        },
        "sendOnboardingCampaign": {
          "type": "boolean",
          "title": "Whether or not to send onboarding campaigns for BusinessApp"
        },
        "onboardingCampaignId": {
          "type": "string",
          "title": "The id of the onboarding campaign`"
        },
        "showRecommendationsBanner": {
          "type": "boolean",
          "title": "Whether or not to show the banner for recommendations"
        },
        "singleLocationDefaultTimeRange": {
          "$ref": "#/definitions/v1TimeRange",
          "title": "The default time range to use for a single location in Business App"
        },
        "showGoogleSearchConsoleCta": {
          "type": "boolean",
          "title": "Whether or not to show the google search console cta"
        },
        "isBusinessProfileEditable": {
          "type": "boolean",
          "title": "Whether or not an smb can edit their business profile"
        },
        "allowSmbChatWithPartner": {
          "type": "boolean",
          "title": "Whether or not an smb can use inbox to chat with the partner"
        },
        "showWordPressSalesOrders": {
          "type": "boolean",
          "title": "Whether or not to show sales orders from wordpress"
        },
        "globalNotificationExpiryTime": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the global notification will expire ate"
        },
        "showListingScore": {
          "type": "boolean",
          "title": "Whether or not to show listing score in executive report"
        },
        "multiLocationDefaultTimeRange": {
          "$ref": "#/definitions/v1TimeRange",
          "title": "The default time range to use for a multi location in Business App"
        },
        "businessAppName": {
          "type": "string",
          "title": "The name of the business app"
        },
        "hideCreateAccount": {
          "type": "boolean",
          "title": "Hide create account button on login page"
        },
        "notificationsEnabled": {
          "type": "boolean",
          "title": "Whether or not allow sending notifications to users of Business App"
        },
        "showListingScoreAsPercent": {
          "type": "boolean",
          "title": "Whether or not to show listing score as percent"
        },
        "customGuidesInlineTitle": {
          "type": "boolean",
          "title": "Whether or not to show custom guides inline title"
        },
        "allowExportReviews": {
          "type": "boolean",
          "title": "Whether or not to allow exporting reviews"
        },
        "decoupleProductAndReportAccess": {
          "type": "boolean",
          "title": "Whether or not to decouple product and report access"
        },
        "showCrmCompanies": {
          "type": "boolean",
          "title": "Whether or not to show crm companies"
        },
        "showCrmTasks": {
          "type": "boolean",
          "title": "Whether or not to show crm tasks"
        },
        "showCustomForms": {
          "type": "boolean",
          "title": "Whether or not to show forms"
        },
        "showAutomations": {
          "type": "boolean",
          "title": "Whether or not the automations page is shown in a market for Business App"
        },
        "showCrmOpportunities": {
          "type": "boolean",
          "title": "Whether or not to show crm opportunities"
        },
        "showDynamicLists": {
          "type": "boolean",
          "title": "Whether or not to show dynamic lists"
        },
        "showLeaderboard": {
          "type": "boolean",
          "title": "Whether or not to show leaderboard"
        },
        "showAiAssistant": {
          "type": "boolean",
          "title": "Whether or not to show the ai assistants page"
        },
        "showLeadScoring": {
          "type": "boolean",
          "title": "Whether or not to show lead scoring"
        },
        "showInboxWidgetFooterContent": {
          "type": "boolean"
        },
        "showCrmCustomObjects": {
          "type": "boolean"
        }
      },
      "title": "BusinessCenterMarketConfiguration contains the details for a Partner's market configuration.\nNull values mean that the field has not been set and the default configuration should be used for the\nspecific feature"
    },
    "v1CanSendPreviewEmailResponse": {
      "type": "object",
      "properties": {
        "canSendPreviewEmails": {
          "type": "boolean",
          "title": "Whether the partner is allowed to send emails or not"
        }
      }
    },
    "v1Claimed": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CompanyProfile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "websiteAddress": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "crmCompanyId": {
          "type": "string"
        }
      }
    },
    "v1CompareSubscriptionTiersResponse": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ComparisonRow"
          }
        }
      }
    },
    "v1ComparisonCell": {
      "type": "object",
      "properties": {
        "count": {
          "$ref": "#/definitions/v1CountConstraint",
          "title": "a string representing a constraint on the feature such as \"Limit 5\""
        },
        "isIncluded": {
          "type": "boolean",
          "title": "a boolean value representing the unilateral exclusion/inclusion of a feature"
        },
        "isLimited": {
          "type": "boolean",
          "title": "an item is included but in a limited capacity"
        }
      }
    },
    "v1ComparisonRow": {
      "type": "object",
      "properties": {
        "rowId": {
          "type": "string",
          "title": "unique ID to allow a frontend mapping of tier to i18n key"
        },
        "sectionId": {
          "type": "string",
          "title": "unique ID to map a row to a section"
        },
        "cells": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ComparisonCell"
          },
          "title": "cells ordered from lowest to highest by subscription tier rank"
        }
      }
    },
    "v1CountConstraint": {
      "type": "object",
      "properties": {
        "included": {
          "type": "string",
          "format": "int64",
          "title": "number of units included in the subscription tier"
        },
        "additionalCost": {
          "$ref": "#/definitions/v1TierCostConstraint",
          "title": "the cost per additional unit"
        }
      }
    },
    "v1CustomerSurveyListResponsesResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerSurveyResponse"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1CustomerSurveyPagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1CustomerSurveyPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "v1CustomerSurveyPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "description": "CustomerSurveyPagedResponseMetadata and CustomerSurveyPagedRequestOptions are duplicated from api.proto\nso that it's easier to move this structure to a different microservice when needed."
    },
    "v1CustomerSurveyRespondResponse": {
      "type": "object",
      "properties": {
        "customerSurveyResponseId": {
          "type": "string"
        }
      }
    },
    "v1CustomerSurveyResponse": {
      "type": "object",
      "properties": {
        "customerSurveyResponseId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "title": "The user id is the derived id of who submitted the response (if logged in) or the user emailed the survey\nIt is possible the user presented did not fill out the form, it is our best guess as to who submitted the response"
        },
        "rating": {
          "type": "string",
          "format": "int64"
        },
        "feedback": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "CustomerSurveyResponse is a response to a customer satisfaction survey"
    },
    "v1EmailConfiguration": {
      "type": "object",
      "properties": {
        "senderName": {
          "type": "string"
        },
        "senderEmail": {
          "type": "string"
        },
        "replyEmail": {
          "type": "string"
        }
      }
    },
    "v1EmailPasswordCredential": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "email of the new partner"
        },
        "password": {
          "type": "string",
          "title": "password of the new partner"
        }
      }
    },
    "v1ExistingAccount": {
      "type": "object",
      "properties": {
        "credential": {
          "$ref": "#/definitions/v1SignUpCredential"
        }
      }
    },
    "v1ExitLinkConfiguration": {
      "type": "object",
      "properties": {
        "exitLinkText": {
          "type": "string",
          "title": "the text to display for the exit link (back to dashboard)"
        },
        "exitLinkUrl": {
          "type": "string",
          "title": "the url to redirect to when the exit link is clicked (https://sso.your-identity-provider.com)"
        }
      }
    },
    "v1ExperimentSetting": {
      "type": "object",
      "properties": {
        "variantRatio": {
          "type": "number",
          "format": "float",
          "description": "Ratio of variants vs control must be a number between 0 and 1."
        },
        "selectionCriteria": {
          "$ref": "#/definitions/v1SelectionCriteria",
          "title": "Selection Criteria"
        },
        "metricsDashboardUrl": {
          "type": "string",
          "title": "URL of metrics dashboard"
        }
      }
    },
    "v1Expiration": {
      "type": "string",
      "enum": [
        "EXPIRATION_INVALID",
        "EXPIRATION_UNSET",
        "EXPIRATION_TWO_WEEKS",
        "EXPIRATION_FOUR_WEEKS",
        "EXPIRATION_TWELVE_WEEKS",
        "EXPIRATION_TWENTY_FOUR_WEEKS",
        "EXPIRATION_ONE_MINUTE"
      ],
      "default": "EXPIRATION_INVALID",
      "title": "AccessLevel describes the different possible levels of access we can release features to"
    },
    "v1FeatureFlag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id is the identifier for this feature (MUST be snake_case)"
        },
        "name": {
          "type": "string",
          "title": "a concise name for this feature flag"
        },
        "description": {
          "type": "string",
          "title": "a more in-depth description of what this feature flag is for"
        },
        "accessLevel": {
          "$ref": "#/definitions/v1AccessLevel",
          "title": "access_level can be at one of the four allowed levels; alpha, beta, all, or experiment"
        },
        "accessLevelChangedDate": {
          "type": "string",
          "format": "date-time",
          "title": "a timestamp of when the access level on this feature was last changed"
        },
        "accessLevelChangedByEmail": {
          "type": "string",
          "title": "the email of who the access level was last changed by"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "a timestamp of this feature flag's creation"
        },
        "createdByEmail": {
          "type": "string",
          "title": "the email of the person who created this feature flag"
        },
        "moreInfoUrl": {
          "type": "string",
          "title": "a url to go to for much more in-depth information around the feature being released by this flag"
        },
        "archived": {
          "type": "boolean",
          "title": "a boolean representing whether or not this has been marked as archived"
        },
        "whitelist": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerAccess"
          },
          "title": "a list of all the partner markets explicitly granted alpha access to this feature"
        },
        "blacklist": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerAccess"
          },
          "title": "a list of all the partner markets explicitly denied access to this feature, this has highest evaluation priority"
        },
        "experimentSettings": {
          "$ref": "#/definitions/v1ExperimentSetting",
          "title": "Experiment Settings"
        },
        "ownerName": {
          "type": "string",
          "title": "The name of the person who owns this feature flag"
        },
        "expiration": {
          "$ref": "#/definitions/v1Expiration",
          "title": "Expiration is the amount of time after which the flag will self-disable"
        },
        "expiryStart": {
          "type": "string",
          "format": "date-time",
          "title": "ExpiryStart is the time at which the flag will start counting down to expiry"
        },
        "expiryFinish": {
          "type": "string",
          "format": "date-time",
          "title": "ExpiryFinish is the time at which the flag will expire"
        },
        "isExpired": {
          "type": "boolean",
          "title": "IsExpired is a boolean indicating whether the flag has expired"
        }
      },
      "title": "FeatureFlag is an entity which describes a release of some kind which can be released incrementally"
    },
    "v1GenerateAccountGroupSessionResponse": {
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string"
        }
      }
    },
    "v1GetAcquisitionDataResponse": {
      "type": "object",
      "properties": {
        "acquisitionData": {
          "$ref": "#/definitions/v1AcquisitionData"
        }
      }
    },
    "v1GetAddonActivationResponse": {
      "type": "object",
      "properties": {
        "activation": {
          "$ref": "#/definitions/v1AddonActivation",
          "title": "activation found satisfying the request"
        }
      }
    },
    "v1GetBrandingRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "DEPRECATED: Use BrandingV2Service instead"
    },
    "v1GetBrandingResponse": {
      "type": "object",
      "properties": {
        "branding": {
          "$ref": "#/definitions/v1Branding"
        }
      },
      "title": "DEPRECATED: Use BrandingV2Service instead"
    },
    "v1GetBrandingV2Request": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of partner"
        },
        "marketId": {
          "type": "string",
          "title": "ID of market"
        }
      }
    },
    "v1GetBrandingV2Response": {
      "type": "object",
      "properties": {
        "branding": {
          "$ref": "#/definitions/v1BrandingV2"
        }
      }
    },
    "v1GetBusinessCenterMarketConfigurationResponse": {
      "type": "object",
      "properties": {
        "marketConfiguration": {
          "$ref": "#/definitions/v1BusinessCenterMarketConfiguration"
        }
      },
      "title": "Get the configuration for a market"
    },
    "v1GetCreatePartnerStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/partnerv1Status",
          "title": "Status of the create partner work"
        },
        "partnerId": {
          "type": "string",
          "title": "ID of the partner if status is complete"
        },
        "errorMessage": {
          "type": "string",
          "title": "Error message if status is error"
        }
      }
    },
    "v1GetFreeTrialResponse": {
      "type": "object",
      "properties": {
        "trialStart": {
          "type": "string",
          "format": "date-time",
          "title": "Time the trial started"
        },
        "trialEnd": {
          "type": "string",
          "format": "date-time",
          "title": "Time the trial ends"
        },
        "onFreeTrial": {
          "type": "boolean",
          "title": "Compute if the partner is on a free trial, and has not yet been billed"
        },
        "actionRequiredStatus": {
          "type": "string",
          "title": "Status for any required actions caused by the trial"
        }
      }
    },
    "v1GetFreeTrialStatusResponse": {
      "type": "object",
      "properties": {
        "onFreeTrial": {
          "type": "boolean",
          "description": "On Free Trial returns true if the partner is on a free trial, and has not been billed yet."
        },
        "freeTrialEnd": {
          "type": "string",
          "format": "date-time",
          "title": "Day free trial ends"
        }
      }
    },
    "v1GetGoogleProfileResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "title": "Container for a google profile obtained by calling https://oauth2.googleapis.com/tokeninfo\nthe field list is choosen accordingly to https://developers.google.com/identity/sign-in/web/backend-auth\nin adition to a token provided by https://oauth2.googleapis.com/token"
    },
    "v1GetLinkedinProfileResponse": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "profilePictureUrn": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "description": "reference documentation:\n   * https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin\n   * https://docs.microsoft.com/en-us/linkedin/shared/authentication/authorization-code-flow",
      "title": "Container for a linkedin profile obtained by calling https://api.linkedin.com/v2/me\nin adition to a token provided by https://www.linkedin.com/oauth/v2/accessToken"
    },
    "v1GetMicrosoftProfileResponse": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "idToken": {
          "type": "string"
        }
      },
      "title": "Container for a microsoft profile obtained by calling https://learn.microsoft.com/en-us/entra/identity-platform/userinfo#calling-the-api\nand the access token used for it"
    },
    "v1GetMultiBrandingResponse": {
      "type": "object",
      "properties": {
        "brandings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SinglePartnerMarketBranding"
          }
        }
      },
      "title": "DEPRECATED: Use BrandingV2Service instead"
    },
    "v1GetMultiBrandingV2Response": {
      "type": "object",
      "properties": {
        "branding": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BrandingV2"
          }
        }
      }
    },
    "v1GetMultiPartnerHealthResponse": {
      "type": "object",
      "properties": {
        "healths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerHealth"
          },
          "title": "List of partner healths"
        }
      }
    },
    "v1GetMultiPartnerModelResponse": {
      "type": "object",
      "properties": {
        "partners": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerModel"
          }
        }
      }
    },
    "v1GetPartnerAccountGroupMappingResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the Partner"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the Account Group"
        },
        "accountGroupPartnerId": {
          "type": "string",
          "title": "ID of the partner that the Account Group is on"
        }
      },
      "title": "GetPartnerAccountGroupMappingResponse returns the mapped partnerID and accountGroupID"
    },
    "v1GetPartnerCenterNavigationResponse": {
      "type": "object",
      "properties": {
        "navigation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NavigationItem"
          }
        }
      }
    },
    "v1GetPartnerHealthResponse": {
      "type": "object",
      "properties": {
        "health": {
          "$ref": "#/definitions/v1PartnerHealth",
          "title": "Current health of a partner"
        }
      }
    },
    "v1GetPartnerLeadStatsResponse": {
      "type": "object",
      "properties": {
        "leadsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetPartnerModelResponse": {
      "type": "object",
      "properties": {
        "partner": {
          "$ref": "#/definitions/v1PartnerModel"
        }
      }
    },
    "v1GetRewardResponse": {
      "type": "object",
      "properties": {
        "reward": {
          "$ref": "#/definitions/v1Reward"
        }
      }
    },
    "v1GetSalesConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1SalesConfiguration"
        }
      }
    },
    "v1GetSelfSignUpStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/partnerv1Status",
          "title": "Status of the create partner work"
        },
        "partnerId": {
          "type": "string",
          "title": "ID of the partner if status is complete"
        },
        "errorMessage": {
          "type": "string",
          "title": "Error message if status is error"
        }
      },
      "title": "GetSelfSignUpStatusResponse is the response container for check partner creation status"
    },
    "v1GetSignUpAddPaymentCardResultResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1GetSignUpAddPaymentCardResultResponseStatus"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "v1GetSignUpAddPaymentCardResultResponseStatus": {
      "type": "string",
      "enum": [
        "GET_SIGN_UP_ADD_PAYMENT_CARD_RESULT_RESPONSE_STATUS_INVALID",
        "GET_SIGN_UP_ADD_PAYMENT_CARD_RESULT_RESPONSE_STATUS_OK",
        "GET_SIGN_UP_ADD_PAYMENT_CARD_RESULT_RESPONSE_STATUS_HAS_ERROR"
      ],
      "default": "GET_SIGN_UP_ADD_PAYMENT_CARD_RESULT_RESPONSE_STATUS_INVALID"
    },
    "v1GetSingleSignOnResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "Canny SSO Token"
        },
        "companyId": {
          "type": "string",
          "title": "Static ID of our Company in Canny"
        },
        "roadmapDomain": {
          "type": "string",
          "title": "Location to view our roadmap (Canny's website)"
        }
      }
    },
    "v1GetSubscriptionTierResponse": {
      "type": "object",
      "properties": {
        "subscriptionTier": {
          "$ref": "#/definitions/v1SubscriptionTier",
          "title": "Subscription tier"
        }
      }
    },
    "v1GetTaskManagerConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1TaskManagerConfiguration"
        }
      }
    },
    "v1GetTrialResponse": {
      "type": "object",
      "properties": {
        "trialId": {
          "type": "string",
          "title": "the trial identifier"
        },
        "partnerId": {
          "type": "string",
          "title": "The id of the partner who this trial will be applied to"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the trial object was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the trial object was updated"
        },
        "subscriptionLevel": {
          "$ref": "#/definitions/v1SubscriptionLevel",
          "title": "The subscription level the trial is emulating"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this trial period"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this trial period"
        },
        "cancel": {
          "type": "string",
          "format": "date-time",
          "title": "The date this trial was cancelled"
        },
        "trial": {
          "$ref": "#/definitions/v1Trial",
          "title": "the trial which is returned"
        }
      }
    },
    "v1GetUpdatePartnerStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/partnerv1Status",
          "title": "Status of the create partner work"
        },
        "errorMessage": {
          "type": "string",
          "title": "Error message if status is error"
        }
      }
    },
    "v1GetUpdateSubscriptionTierStatusResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1UpdateSubscriptionTierStatus"
        },
        "reason": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetUserAgreementTermsOfServiceResponse": {
      "type": "object",
      "properties": {
        "userAgreementTermsOfService": {
          "$ref": "#/definitions/v1UserAgreementTermsOfService"
        }
      }
    },
    "v1GetWizardStatusResponse": {
      "type": "object",
      "properties": {
        "wizardStatus": {
          "$ref": "#/definitions/v1WizardStatus"
        }
      }
    },
    "v1GoogleTokenCredential": {
      "type": "object",
      "properties": {
        "googleToken": {
          "type": "string",
          "title": "google token to form the redirect url"
        }
      }
    },
    "v1IsEmailDisposableResponse": {
      "type": "object",
      "properties": {
        "isDisposable": {
          "type": "boolean",
          "title": "returns true if the email is disposable"
        }
      }
    },
    "v1IsEmailInUseResponse": {
      "type": "object",
      "properties": {
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "returns a list of subjects that are using the email. (empty array means its not in use)"
        }
      }
    },
    "v1IsRewardConditionMetForPartnerResponse": {
      "type": "object",
      "properties": {
        "rewardConditionsMet": {
          "type": "boolean"
        }
      }
    },
    "v1LinkedInTokenCredential": {
      "type": "object",
      "properties": {
        "linkedinAccessToken": {
          "type": "string",
          "title": "linkedin token to form the redirect url"
        }
      }
    },
    "v1ListBrandingV2Response": {
      "type": "object",
      "properties": {
        "brandings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BrandingV2"
          },
          "title": "Brandings"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging metadata"
        }
      }
    },
    "v1ListFeatureFlagFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "title": "Filter (not scored) results to only include that contain the search term in the ID, name, white list, or black list"
        },
        "accessLevel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccessLevel"
          },
          "description": "Match Access Level of feature flag if provided."
        }
      }
    },
    "v1ListFeatureFlagResponse": {
      "type": "object",
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FeatureFlag"
          },
          "title": "A list of the feature flags found based on the input request"
        },
        "nextCursor": {
          "type": "string",
          "title": "a cursor for continued iteration over search results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "whether or not there are more entries to iterate over"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total results"
        }
      },
      "title": "A response for FeatureFlags.List"
    },
    "v1ListMarketsForUserResponse": {
      "type": "object",
      "properties": {
        "markets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Market"
          },
          "title": "List of markets"
        }
      }
    },
    "v1ListPartnerAddonsResponse": {
      "type": "object",
      "properties": {
        "addons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerAddon"
          }
        }
      }
    },
    "v1ListPartnerHealthResponse": {
      "type": "object",
      "properties": {
        "healths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerHealth"
          },
          "title": "The health of a partner"
        },
        "cursor": {
          "type": "string",
          "title": "The cursor for paging"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there are more results"
        },
        "hits": {
          "type": "string",
          "format": "int64",
          "title": "Total number of healths for a partner"
        }
      }
    },
    "v1ListSubscriptionTiersResponse": {
      "type": "object",
      "properties": {
        "subscriptionTier": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubscriptionTier"
          },
          "title": "Subscription tiers"
        },
        "cursor": {
          "type": "string",
          "format": "int64",
          "title": "the cursor for paging"
        },
        "hasMore": {
          "type": "boolean",
          "title": "whether there are more results"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "total number of results"
        }
      }
    },
    "v1ListTopResponse": {
      "type": "object",
      "properties": {
        "partnerStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerStats"
          }
        }
      }
    },
    "v1ListTrialResponse": {
      "type": "object",
      "properties": {
        "trials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Trial"
          },
          "title": "the trials that are returned"
        },
        "cursor": {
          "type": "string",
          "title": "the cursor for paging with trials"
        },
        "hasMore": {
          "type": "boolean",
          "title": "whether there are more trials"
        },
        "hits": {
          "type": "string",
          "format": "int64",
          "title": "number of trials returned"
        }
      }
    },
    "v1ListWizardStatusResponse": {
      "type": "object",
      "properties": {
        "wizardStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WizardStatus"
          }
        },
        "paging": {
          "$ref": "#/definitions/v1PagedResponseData"
        }
      }
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "nextUrl": {
          "type": "string",
          "title": "the next url to redirect the user to for their new session"
        }
      },
      "description": "Login Response for logging in to Partner Center."
    },
    "v1MailingConfiguration": {
      "type": "object",
      "properties": {
        "mailingCompanyName": {
          "type": "string"
        },
        "mailingAddress": {
          "type": "string"
        },
        "mailingAddress2": {
          "type": "string"
        },
        "mailingCity": {
          "type": "string"
        },
        "mailingState": {
          "type": "string"
        },
        "mailingCountry": {
          "type": "string"
        },
        "mailingPostalCode": {
          "type": "string"
        },
        "mailingPhoneNumber": {
          "type": "string"
        },
        "mailingWebsiteAddress": {
          "type": "string"
        },
        "mailingEmailAddress": {
          "type": "string"
        }
      }
    },
    "v1Market": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1MicrosoftTokenCredential": {
      "type": "object",
      "properties": {
        "microsoftIdToken": {
          "type": "string",
          "title": "microsoft token to form the redirect url"
        }
      }
    },
    "v1NavigationItem": {
      "type": "object",
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "nestedTabs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NavigationItemChild"
          }
        },
        "link": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "tabId": {
          "type": "string"
        },
        "popOut": {
          "type": "boolean"
        },
        "ngRoute": {
          "type": "boolean"
        },
        "subsectionHeader": {
          "type": "string"
        },
        "svgIcon": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "badge": {
          "$ref": "#/definitions/v1NavigationItemBadge"
        },
        "i18nKey": {
          "type": "string"
        }
      },
      "description": "NavigationItem represents the navigation structure for partner center. This is probably not the idea navigation structure for partner\ncenter nor is it an idea navigation structure in general. Instead, this is the structure ported over from the AA project so that\nit can at least be well defined, tested, and the internals can be simplified."
    },
    "v1NavigationItemBadge": {
      "type": "string",
      "enum": [
        "NAVIGATION_ITEM_BADGE_NONE",
        "NAVIGATION_ITEM_BADGE_NEW",
        "NAVIGATION_ITEM_BADGE_BETA"
      ],
      "default": "NAVIGATION_ITEM_BADGE_NONE"
    },
    "v1NavigationItemChild": {
      "type": "object",
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "link": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "tabId": {
          "type": "string"
        },
        "popOut": {
          "type": "boolean"
        },
        "ngRoute": {
          "type": "boolean"
        },
        "subsectionHeader": {
          "type": "string"
        },
        "svgIcon": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "badge": {
          "$ref": "#/definitions/v1NavigationItemBadge"
        },
        "i18nKey": {
          "type": "string"
        }
      },
      "title": "NavigationItemChild is a workaround because python doesn't allow recursive objects. As the current navigation structure only has 2 levels this will\nhave to do until the navigation goes straight to the frontend of PCC instead being proxied through AA"
    },
    "v1NewAccount": {
      "type": "object",
      "properties": {
        "credential": {
          "$ref": "#/definitions/v1SignUpCredential"
        },
        "companyProfile": {
          "$ref": "#/definitions/v1CompanyProfile"
        }
      }
    },
    "v1PagedResponseData": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1PagingRequestMetadata": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1PartnerAccess": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the id of a partner is 3-4 alphanumeric characters"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "a list of market ids (optional) for which to release this feature to within this specified partner"
        }
      },
      "title": "PartnerMarkets can be used to explicitly allow alpha access, or explicitly deny access"
    },
    "v1PartnerAcquisitionData": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to record unstructured properties about the partner on their account group"
        },
        "origin": {
          "$ref": "#/definitions/v1PartnerOrigin",
          "title": "Origin"
        },
        "visitorIdCookie": {
          "type": "string"
        },
        "conquerLocalAcademyVisitorId": {
          "type": "string"
        },
        "conversionPoint": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "numberOfEmployees": {
          "type": "string"
        },
        "referrerId": {
          "type": "string",
          "title": "contains the firstpromoter referrer ID"
        },
        "clearbitCollectedSignupDataId": {
          "type": "string",
          "title": "ID for CollectedSignUpData at prospect"
        },
        "useCase": {
          "type": "string",
          "title": "answer for signup use case question"
        },
        "industry": {
          "type": "string",
          "title": "industry of the partner"
        },
        "numberOfClients": {
          "type": "string",
          "title": "number of billed clients (SMB) the partner has"
        }
      }
    },
    "v1PartnerAddon": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "supportsBulkActivation": {
          "type": "boolean"
        }
      }
    },
    "v1PartnerAdminPermissions": {
      "type": "object",
      "properties": {
        "canAccessBilling": {
          "type": "boolean",
          "title": "Whether the admin can access billing"
        },
        "canAccessRetailBilling": {
          "type": "boolean",
          "title": "Whether the admin can access retail billing"
        },
        "canAccessAccounts": {
          "type": "boolean",
          "title": "Whether the admin can access accounts"
        },
        "canAccessMarketing": {
          "type": "boolean",
          "title": "Whether the admin can access marketing"
        },
        "canAccessSales": {
          "type": "boolean",
          "title": "Whether the admin can access sales"
        },
        "canAccessConcierge": {
          "type": "boolean",
          "title": "Whether the admin can access concierge"
        },
        "canAccessBrands": {
          "type": "boolean",
          "title": "Whether the admin can access brands"
        },
        "canAccessDashboard": {
          "type": "boolean",
          "title": "Whether the admin can access dashboard"
        },
        "canAccessOrders": {
          "type": "boolean",
          "title": "Whether the admin can access orders"
        },
        "canAccessMarketplace": {
          "type": "boolean",
          "title": "Whether the admin can access marketplace"
        },
        "canAccessCompanyProfile": {
          "type": "boolean",
          "title": "Whether the admin can access company profile"
        },
        "canAccessAutomations": {
          "type": "boolean",
          "title": "Whether the admin can access automations"
        },
        "defaultReportAccessScope": {
          "$ref": "#/definitions/v1ReportAccessScope",
          "title": "The default scope at which the admin can access reports"
        },
        "reportAccess": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReportAccess"
          },
          "title": "The scopes at which an admin can access specific report resources"
        }
      }
    },
    "v1PartnerCanDoActionResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean",
          "title": "Specifies if the action can be performed"
        },
        "reason": {
          "type": "string",
          "title": "Gives the reason for rejections"
        }
      }
    },
    "v1PartnerHealth": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Identifier of a partner"
        },
        "state": {
          "$ref": "#/definitions/v1PartnerHealthState",
          "title": "State of partner health"
        },
        "subState": {
          "$ref": "#/definitions/v1PartnerHealthSubState",
          "title": "Sub-state of partner health"
        },
        "reason": {
          "type": "string",
          "title": "Reason for setting the partner health"
        },
        "changedOn": {
          "type": "string",
          "format": "date-time",
          "title": "The date when health was changed"
        },
        "changedBy": {
          "type": "string",
          "title": "The user that set the partner health"
        },
        "inRetention": {
          "type": "boolean",
          "title": "Whether the user is in retention or not"
        }
      }
    },
    "v1PartnerHealthState": {
      "type": "string",
      "enum": [
        "PARTNER_HEALTH_STATE_HEALTHY",
        "PARTNER_HEALTH_STATE_AT_RISK",
        "PARTNER_HEALTH_STATE_RESTRICTED"
      ],
      "default": "PARTNER_HEALTH_STATE_HEALTHY"
    },
    "v1PartnerHealthSubState": {
      "type": "string",
      "enum": [
        "PARTNER_HEALTH_SUB_STATE_UNSPECIFIED",
        "PARTNER_HEALTH_SUB_STATE_ACTIVE",
        "PARTNER_HEALTH_SUB_STATE_SUBSCRIPTION_OVERDUE",
        "PARTNER_HEALTH_SUB_STATE_SUBSCRIPTION_SUSPENDED",
        "PARTNER_HEALTH_SUB_STATE_PAYMENT_PLAN"
      ],
      "default": "PARTNER_HEALTH_SUB_STATE_UNSPECIFIED"
    },
    "v1PartnerInfo": {
      "type": "object",
      "properties": {
        "partnerName": {
          "type": "string",
          "title": "name of the partner"
        },
        "partnerApiKey": {
          "type": "string",
          "title": "partner API key"
        },
        "partnerType": {
          "type": "string",
          "title": "platform or product type used in superadmin"
        },
        "serviceLevel": {
          "type": "string",
          "title": "premium or standard level"
        },
        "accountExecutive": {
          "type": "string",
          "title": "string representing account executive for given partner"
        },
        "stripeBillingFlag": {
          "type": "boolean",
          "title": "whether partner is being billed through Stripe"
        },
        "excludeFromKpisFlag": {
          "type": "boolean",
          "title": "exclude partner from kpis"
        },
        "vbcFlag": {
          "type": "boolean",
          "title": "whether or not VBC is enabled for partner"
        },
        "campaignSubscriptionEnabledFlag": {
          "type": "boolean",
          "title": "whether or not Campaign Subscriptions are enabled for partner"
        },
        "vbcKey": {
          "type": "string",
          "title": "vbc api key"
        },
        "rmPid": {
          "type": "string",
          "title": "repMan partner id"
        },
        "rmKey": {
          "type": "string",
          "title": "repMan API Key"
        },
        "msPid": {
          "type": "string",
          "title": "listing builder partner id"
        },
        "msKey": {
          "type": "string",
          "title": "listing builder API Key"
        },
        "smPid": {
          "type": "string",
          "title": "social Marketing pid"
        },
        "smKey": {
          "type": "string",
          "title": "social Marketing API key"
        },
        "nbPid": {
          "type": "string",
          "title": "national Brands partner id"
        },
        "nbKey": {
          "type": "string",
          "title": "national Brands API Key"
        },
        "armPid": {
          "type": "string",
          "title": "task Manager pid"
        },
        "armKey": {
          "type": "string",
          "title": "task Manager API key"
        },
        "enableProductMarketplaceFlag": {
          "type": "boolean",
          "title": "whether or not the Product Marketplace is enabled for partner"
        },
        "hidePricingFlag": {
          "type": "boolean",
          "title": "whether to hide or show the pricing of products"
        },
        "stDefaultCampaignId": {
          "type": "string",
          "title": "indicates the campaign ID to be used when accounts are added to campaigns via Sales Tool"
        },
        "oauthKey": {
          "type": "string",
          "title": "key used for oauth"
        },
        "oauthSecret": {
          "type": "string",
          "title": "secret key used for oauth"
        },
        "rmMaxCompetitors": {
          "type": "integer",
          "format": "int32",
          "title": "maximum competitors for repMan"
        },
        "rmMaxServices": {
          "type": "integer",
          "format": "int32",
          "title": "maximum services for repMan"
        },
        "enableListingDistributionFlag": {
          "type": "boolean",
          "title": "whether listing distribution is enabled for partner"
        },
        "showExpiryFlag": {
          "type": "boolean",
          "title": "whether we should show when listing distribution expires"
        },
        "wholesalePrice": {
          "type": "integer",
          "format": "int32",
          "title": "number for the wholesale price in cents"
        },
        "enableForAdminFlag": {
          "type": "boolean",
          "title": "whether listing distribution is enabled for partner admins"
        },
        "enableListingSyncProFlag": {
          "type": "boolean",
          "title": "listing sync pro is enabled for partner"
        },
        "listingSyncProServiceProvider": {
          "type": "string",
          "title": "provider for ls is Uberall or Yext"
        },
        "enableListingSyncProDiscountFlag": {
          "type": "boolean",
          "title": "discount for listing sync pro is enabled for partner"
        },
        "pausedFlag": {
          "type": "boolean",
          "title": "pause partner center account"
        },
        "cancelledFlag": {
          "type": "boolean",
          "title": "cancel partner center account"
        },
        "premiumSupportFlag": {
          "$ref": "#/definitions/v1SupportFlag",
          "title": "whether the partner has premium support or not"
        },
        "standardPrioritySupportFlag": {
          "$ref": "#/definitions/v1SupportFlag",
          "title": "whether the partner skips the queue or not"
        },
        "priorityChatSupportFlag": {
          "$ref": "#/definitions/v1SupportFlag",
          "title": "whether the partner has priority live chat support or not"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "properties about the partner"
        }
      }
    },
    "v1PartnerModel": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the partner"
        },
        "subscriptionTierId": {
          "type": "string",
          "title": "Partner's subscription tier"
        },
        "premiumSupport": {
          "type": "boolean",
          "title": "Does partner have premium support"
        },
        "standardPrioritySupport": {
          "type": "boolean",
          "title": "Does partner have standard priority support"
        },
        "priorityChatSupport": {
          "type": "boolean",
          "title": "Does partner have priority chat support"
        },
        "name": {
          "type": "string",
          "title": "Partner's name"
        },
        "addressLineOne": {
          "type": "string",
          "title": "Partner's address line one"
        },
        "addressLineTwo": {
          "type": "string",
          "title": "Partner's address line two"
        },
        "city": {
          "type": "string",
          "title": "Partner's city"
        },
        "stateCode": {
          "type": "string",
          "title": "Partner's state"
        },
        "countryCode": {
          "type": "string",
          "title": "Partner's country"
        },
        "postalCode": {
          "type": "string",
          "title": "Partner's postal code"
        },
        "email": {
          "type": "string",
          "title": "Partner's email"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Partner's phone number"
        },
        "website": {
          "type": "string",
          "title": "Partner's website"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time entity was last updated"
        }
      }
    },
    "v1PartnerOrigin": {
      "type": "string",
      "enum": [
        "PARTNER_ORIGIN_INVALID",
        "PARTNER_ORIGIN_UNSET",
        "PARTNER_ORIGIN_INTERNAL",
        "PARTNER_ORIGIN_SELF_SIGN_UP"
      ],
      "default": "PARTNER_ORIGIN_INVALID"
    },
    "v1PartnerStats": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "accountingStatus": {
          "type": "string"
        },
        "notPayedTerms": {
          "type": "string",
          "format": "int64"
        },
        "outstandingBalance": {
          "type": "number",
          "format": "double"
        },
        "currentlyAssignedSalesPerson": {
          "type": "string"
        },
        "additionalSalesPerson": {
          "type": "string"
        },
        "recurringMeetingTime": {
          "type": "string"
        },
        "recurringMeetingDay": {
          "type": "string"
        },
        "recurringMeetingFrequency": {
          "type": "string"
        },
        "subscriptionLevel": {
          "type": "string"
        },
        "partnerCohortSize": {
          "type": "string"
        },
        "isMultiLocation": {
          "type": "boolean"
        },
        "latestMonthRevenue": {
          "type": "number",
          "format": "double"
        },
        "oneMonthEarlierRevenue": {
          "type": "number",
          "format": "double"
        },
        "twoMonthEarlierRevenue": {
          "type": "number",
          "format": "double"
        },
        "ytdRevenue": {
          "type": "number",
          "format": "double"
        },
        "revGrowthSinceLastMonth": {
          "type": "number",
          "format": "double"
        },
        "percentageRevGrowthFromLastMonth": {
          "type": "number",
          "format": "double"
        },
        "uniqueBilledProductsLast6Months": {
          "type": "string",
          "format": "int64"
        },
        "logoUrl": {
          "type": "string"
        },
        "associatedPid": {
          "type": "string"
        }
      }
    },
    "v1PartnerType": {
      "type": "string",
      "enum": [
        "PARTNER_TYPE_UNSPECIFIED",
        "PARTNER_TYPE_AGENCY",
        "PARTNER_TYPE_ENTERPRISE"
      ],
      "default": "PARTNER_TYPE_UNSPECIFIED"
    },
    "v1PartnerUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1ReferralLink": {
      "type": "object",
      "properties": {
        "longUrl": {
          "type": "string"
        },
        "shortenedUrl": {
          "type": "string"
        }
      }
    },
    "v1ReportAccess": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the report resource"
        },
        "idType": {
          "$ref": "#/definitions/v1ReportAccessIDType",
          "title": "The type of report resource for the id"
        },
        "scope": {
          "$ref": "#/definitions/v1ReportAccessScope",
          "title": "The scope at which the admin can access the report resource"
        }
      }
    },
    "v1ReportAccessIDType": {
      "type": "string",
      "enum": [
        "REPORT_ACCESS_ID_TYPE_UNSET",
        "REPORT_ACCESS_ID_TYPE_REPORT",
        "REPORT_ACCESS_ID_TYPE_REPORT_CATEGORY"
      ],
      "default": "REPORT_ACCESS_ID_TYPE_UNSET"
    },
    "v1ReportAccessScope": {
      "type": "string",
      "enum": [
        "REPORT_ACCESS_SCOPE_UNSET",
        "REPORT_ACCESS_SCOPE_NO_ACCESS",
        "REPORT_ACCESS_SCOPE_VIEW",
        "REPORT_ACCESS_SCOPE_EDIT"
      ],
      "default": "REPORT_ACCESS_SCOPE_UNSET"
    },
    "v1ReputationConfiguration": {
      "type": "object",
      "properties": {
        "maxCompetitors": {
          "type": "string",
          "format": "int64"
        },
        "maxServices": {
          "type": "string",
          "format": "int64"
        },
        "addressMatchStrictness": {
          "type": "string"
        },
        "companyNameMatchStrictness": {
          "type": "string"
        },
        "websiteMatchStrictness": {
          "type": "string"
        }
      }
    },
    "v1Reward": {
      "type": "object",
      "properties": {
        "rewardId": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/v1Money"
        },
        "status": {
          "$ref": "#/definitions/v1RewardStatus"
        },
        "claimed": {
          "$ref": "#/definitions/v1Claimed"
        }
      }
    },
    "v1RewardStatus": {
      "type": "string",
      "enum": [
        "REWARD_STATUS_INVALID",
        "REWARD_STATUS_UNSET",
        "REWARD_STATUS_INELIGIBLE",
        "REWARD_STATUS_ELIGIBLE",
        "REWARD_STATUS_PROCESSING_CLAIM",
        "REWARD_STATUS_CLAIMED"
      ],
      "default": "REWARD_STATUS_INVALID"
    },
    "v1SalesConfigInputs": {
      "type": "object",
      "properties": {
        "hideProducts": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "hideRmDemo": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "hideOrders": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stTeamActivity": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stAllowSalespersonCampaignAdd": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stShowProductsWholesalePrice": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stShowTrainingResourcesField": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stSalespersonSharedAccountAccess": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stDefaultDisplayCurrency": {
          "type": "string"
        },
        "stEnableSnapshotsPerSalespersonLimit": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stSnapshotsPerSalespersonLimit": {
          "type": "string",
          "format": "int64"
        },
        "stBusinessCenterAccess": {
          "$ref": "#/definitions/v1SalesSetting"
        },
        "stShowInbox": {
          "$ref": "#/definitions/v1SalesSetting"
        }
      },
      "description": "SalesConfigInputs are passed *into* some RPCs.  The boolean values for each\nsetting can be omitted.  This allows markets to only partially override the\npartner-level settings.  Any omitted values should fall back to the partner-\nlevel setting."
    },
    "v1SalesConfiguration": {
      "type": "object",
      "properties": {
        "hideProducts": {
          "type": "boolean"
        },
        "hideRmDemo": {
          "type": "boolean"
        },
        "stTeamActivity": {
          "type": "boolean"
        },
        "stAllowSalespersonCampaignAdd": {
          "type": "boolean"
        },
        "stShowProductsWholesalePrice": {
          "type": "boolean"
        },
        "stShowTrainingResourcesField": {
          "type": "boolean"
        },
        "stSalespersonSharedAccountAccess": {
          "type": "boolean"
        },
        "stDefaultDisplayCurrency": {
          "type": "string"
        },
        "stEnableSnapshotsPerSalespersonLimit": {
          "type": "boolean"
        },
        "stSnapshotsPerSalespersonLimit": {
          "type": "string",
          "format": "int64"
        },
        "stBusinessCenterAccess": {
          "type": "boolean"
        },
        "hideOrders": {
          "type": "boolean"
        },
        "sscWhitelabeled": {
          "type": "boolean"
        },
        "stShowInbox": {
          "type": "boolean"
        }
      },
      "description": "SalesConfiguration is *returned* from RPCs.  All of the fields are true\nbooleans.  The server will have to infer the boolean value of each setting if\nit was absent when the sales configuration was set."
    },
    "v1SalesSetting": {
      "type": "string",
      "enum": [
        "SALES_SETTING_INVALID",
        "SALES_SETTING_ENABLED",
        "SALES_SETTING_DISABLED",
        "SALES_SETTING_UNSET"
      ],
      "default": "SALES_SETTING_INVALID"
    },
    "v1SearchPartnerModelsFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "title": "Search term to filter out partners by partner_id and name"
        },
        "subscriptionTierId": {
          "type": "string",
          "title": "Partner's subscription tier"
        }
      }
    },
    "v1SearchPartnerModelsResponse": {
      "type": "object",
      "properties": {
        "partners": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerModel"
          },
          "title": "List of partners"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor for paging"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether there are more results"
        }
      }
    },
    "v1SegmentedOnboardingConfiguration": {
      "type": "string",
      "enum": [
        "SEGMENTED_ONBOARDING_UNSET",
        "SEGMENTED_ONBOARDING_OPTIONAL",
        "SEGMENTED_ONBOARDING_REQUIRED",
        "SEGMENTED_ONBOARDING_DISABLED"
      ],
      "default": "SEGMENTED_ONBOARDING_UNSET"
    },
    "v1SelectionCriteria": {
      "type": "object",
      "properties": {
        "subscriptionTierIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of subscription tier IDs that will be included in the experiment, if empty list all subscription tiers included."
        },
        "partnerCreatedAfterDate": {
          "type": "string",
          "format": "date-time",
          "title": "Only include partner created after this date"
        }
      }
    },
    "v1SetBusinessCenterConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1BusinessCenterConfiguration"
        }
      }
    },
    "v1SetSalesConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1SalesConfigInputs"
        }
      }
    },
    "v1SetTaskManagerConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1TaskManagerConfiguration"
        }
      }
    },
    "v1SignUpCredential": {
      "type": "object",
      "properties": {
        "googleToken": {
          "$ref": "#/definitions/v1GoogleTokenCredential"
        },
        "user": {
          "$ref": "#/definitions/v1UserCredential"
        },
        "linkedinToken": {
          "$ref": "#/definitions/v1LinkedInTokenCredential"
        },
        "microsoftToken": {
          "$ref": "#/definitions/v1MicrosoftTokenCredential"
        }
      }
    },
    "v1SinglePartnerMarketBranding": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "branding": {
          "$ref": "#/definitions/v1Branding"
        }
      }
    },
    "v1SnapshotConfiguration": {
      "type": "object",
      "properties": {
        "ppc": {
          "type": "boolean"
        },
        "remarketing": {
          "type": "boolean"
        },
        "useCustomSnapshotHeader": {
          "type": "boolean"
        },
        "customSnapshotHeader": {
          "type": "string"
        },
        "useCustomSnapshotFooter": {
          "type": "boolean"
        },
        "customSnapshotFooter": {
          "type": "string"
        },
        "useCustomSnapshotPopupMessage": {
          "type": "boolean"
        },
        "customSnapshotPopupMessage": {
          "type": "string"
        },
        "allowClaimUser": {
          "type": "boolean"
        },
        "seoAdvertisingDataProvider": {
          "type": "string",
          "format": "int64"
        },
        "snapshotReportName": {
          "type": "string"
        }
      }
    },
    "v1SubscriptionFailure": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_FAILURE_NONE",
        "SUBSCRIPTION_FAILURE_OVERDUE"
      ],
      "default": "SUBSCRIPTION_FAILURE_NONE"
    },
    "v1SubscriptionLevel": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_LEVEL_BASIC",
        "SUBSCRIPTION_LEVEL_PROFESSIONAL",
        "SUBSCRIPTION_LEVEL_ENTERPRISE",
        "SUBSCRIPTION_LEVEL_LITE",
        "SUBSCRIPTION_LEVEL_PREMIUM",
        "SUBSCRIPTION_LEVEL_ELITE",
        "SUBSCRIPTION_LEVEL_FREE",
        "SUBSCRIPTION_LEVEL_STARTER",
        "SUBSCRIPTION_LEVEL_BASIC_PLUS",
        "SUBSCRIPTION_LEVEL_PROFESSIONAL_PLUS",
        "SUBSCRIPTION_LEVEL_ENTERPRISE_PLUS",
        "SUBSCRIPTION_LEVEL_REPLACED_BY_SUBSCRIPTION_TIERS",
        "SUBSCRIPTION_LEVEL_ENTERPRISE_PLUS_PILOT"
      ],
      "default": "SUBSCRIPTION_LEVEL_BASIC"
    },
    "v1SubscriptionTierUpdateType": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_TIER_UPDATE_TYPE_INVALID",
        "SUBSCRIPTION_TIER_UPDATE_TYPE_FREE_TO_PAID",
        "SUBSCRIPTION_TIER_UPDATE_TYPE_SWITCH_FREE_TRIAL",
        "SUBSCRIPTION_TIER_UPDATE_TYPE_CANCEL_FREE_TRIAL",
        "SUBSCRIPTION_TIER_UPDATE_TYPE_CANCEL_FREE_TRIAL_FAILED_PAYMENT",
        "SUBSCRIPTION_TIER_UPDATE_TYPE_FREE_TO_FREE_TRIAL",
        "SUBSCRIPTION_TIER_UPDATE_TYPE_PAID_TO_PAID"
      ],
      "default": "SUBSCRIPTION_TIER_UPDATE_TYPE_INVALID",
      "description": "- SUBSCRIPTION_TIER_UPDATE_TYPE_FREE_TO_PAID: For going from the free tier to a paid VBP2 tier\n - SUBSCRIPTION_TIER_UPDATE_TYPE_SWITCH_FREE_TRIAL: For selecting a new tier during the free trial period of a paid tier to another valid paid tier that allows free trials.\n - SUBSCRIPTION_TIER_UPDATE_TYPE_CANCEL_FREE_TRIAL: For canceling the your free trial of a paid tier, the only valid tier to input is the free tier.\n - SUBSCRIPTION_TIER_UPDATE_TYPE_CANCEL_FREE_TRIAL_FAILED_PAYMENT: For canceling the your free trial of a paid tier after a failed payment, the only valid tier to input is the free tier.\nAlso suspends the partners contract.\n - SUBSCRIPTION_TIER_UPDATE_TYPE_FREE_TO_FREE_TRIAL: For going from the free tier to a free trial\n - SUBSCRIPTION_TIER_UPDATE_TYPE_PAID_TO_PAID: For going from the paid tier to a paid tier",
      "title": "Making it explicit which type of subscription update you are preforming"
    },
    "v1SubscriptionUpdate": {
      "type": "object",
      "properties": {
        "salesOrderAppId": {
          "$ref": "#/definitions/v1AppIdentifier"
        },
        "subscriptionSkus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "oneTimeSubscriptionSkus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monthlySubscriptionSkus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SupportFlag": {
      "type": "string",
      "enum": [
        "SUPPORT_FLAG_INVALID",
        "SUPPORT_FLAG_UNSET",
        "SUPPORT_FLAG_TRUE",
        "SUPPORT_FLAG_FALSE"
      ],
      "default": "SUPPORT_FLAG_INVALID"
    },
    "v1TaskManagerConfiguration": {
      "type": "object",
      "properties": {
        "tmShowInbox": {
          "type": "boolean"
        }
      }
    },
    "v1TermOfService": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "boolean",
          "title": "Terms of Service accepted"
        },
        "browserIpAddress": {
          "type": "string",
          "title": "The IP address of the person's browsers creating the partner"
        }
      },
      "title": "Terms of Service accepted during partner creation, should only be used for Self Signup Partners"
    },
    "v1Theme": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "primaryColor": {
          "type": "string"
        },
        "primaryHoverColor": {
          "type": "string"
        },
        "primaryActiveColor": {
          "type": "string"
        },
        "secondaryColor": {
          "type": "string"
        },
        "secondaryHoverColor": {
          "type": "string"
        },
        "secondaryActiveColor": {
          "type": "string"
        },
        "focusColor": {
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontDisabledColor": {
          "type": "string"
        },
        "accentsColor": {
          "type": "string"
        },
        "accentsActiveColor": {
          "type": "string"
        },
        "borderColor": {
          "type": "string"
        }
      }
    },
    "v1TierCostConstraint": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "string",
          "format": "int64",
          "title": "integer representation of the lowest denomination of the applied currency"
        },
        "currencyCode": {
          "type": "string",
          "title": "the currency code of the cost"
        },
        "isFree": {
          "type": "boolean",
          "description": "Whether the feature is free or not since a zero cost feature is not necessarily intended to be free."
        }
      }
    },
    "v1TierUsageLimits": {
      "type": "object",
      "properties": {
        "teamMembers": {
          "type": "string",
          "format": "int64",
          "description": "The number of seats a tier is allowed to have for free, any additional seats above the value will incur a charge."
        },
        "emailsPerMonth": {
          "type": "string",
          "format": "int64",
          "description": "Number of emails the subscription tier is allowed to send for free."
        },
        "annualFee": {
          "type": "string",
          "format": "int64",
          "title": "the annual fee for upgrading to the subscription on a annual basis, instead of monthly (this will be moved at later time)"
        },
        "newSeatCost": {
          "type": "string",
          "format": "int64",
          "title": "the cost adding a new seat (user) to their subscription if they're over their free seat usage (this will be moved at later time)"
        },
        "wholesaleDiscount": {
          "type": "string",
          "format": "int64",
          "title": "the percentage discount that the tier can eligible for when purchasing in wholesale (this will be moved at later time)"
        },
        "snapshots": {
          "type": "string",
          "format": "int64",
          "title": "Snapshots"
        },
        "toolkits": {
          "type": "string",
          "format": "int64",
          "title": "Local Business Online Toolkits"
        },
        "toolkitData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ToolkitData"
          },
          "title": "Details about each item in the toolkit"
        },
        "monthlyFee": {
          "type": "string",
          "format": "int64",
          "title": "monthly fee for upgrading thier subscription tier and pay monthly (this will be moved at later time)"
        },
        "onboardingFee": {
          "type": "string",
          "format": "int64",
          "title": "one time fee for onboarding when upgrading subscription tier (this will be moved at later time)"
        },
        "automationsPerMonth": {
          "type": "string",
          "format": "int64",
          "title": "number of marketing automations runs per month"
        }
      }
    },
    "v1ToolkitData": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Trial": {
      "type": "object",
      "properties": {
        "trialId": {
          "type": "string",
          "title": "the trial identifier"
        },
        "partnerId": {
          "type": "string",
          "title": "The id of the partner who this trial will be applied to"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the trial object was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the trial object was updated"
        },
        "subscriptionLevel": {
          "$ref": "#/definitions/v1SubscriptionLevel",
          "title": "Deprecated: Use SubscriptionTier - Was the subscription level the trial is emulating"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this trial period"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this trial period"
        },
        "cancel": {
          "type": "string",
          "format": "date-time",
          "title": "The date this trial was cancelled"
        },
        "createdBy": {
          "type": "string",
          "title": "The user that created the trial"
        },
        "modifiedBy": {
          "type": "string",
          "title": "The user that last modified the trial"
        },
        "subscriptionTierId": {
          "type": "string",
          "title": "The subscription tier the trial is emulating"
        }
      }
    },
    "v1UpdateBusinessCenterMarketConfigurationResponse": {
      "type": "object",
      "properties": {
        "marketConfiguration": {
          "$ref": "#/definitions/v1BusinessCenterMarketConfiguration"
        }
      }
    },
    "v1UpdateCancelFreeTrialReasonMutation": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "ID of the user who submitted the reason"
        },
        "cancelReason": {
          "type": "string",
          "title": "Radio selection for cancel reason"
        },
        "additionalComment": {
          "type": "string",
          "title": "Additional comment for cancel reason"
        }
      }
    },
    "v1UpdateFreeTrialActionRequiredStatusMutation": {
      "type": "object",
      "properties": {
        "actionRequiredStatus": {
          "type": "string"
        }
      }
    },
    "v1UpdateFreeTrialMutation": {
      "type": "object",
      "properties": {
        "cancelFreeTrialReason": {
          "$ref": "#/definitions/v1UpdateCancelFreeTrialReasonMutation"
        },
        "actionRequiredStatus": {
          "$ref": "#/definitions/v1UpdateFreeTrialActionRequiredStatusMutation"
        }
      }
    },
    "v1UpdatePartnerModelMutation": {
      "type": "object",
      "properties": {
        "premiumSupport": {
          "type": "boolean"
        },
        "standardPrioritySupport": {
          "type": "boolean"
        },
        "priorityChatSupport": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryAndState": {
          "$ref": "#/definitions/UpdatePartnerModelMutationCountryState"
        },
        "postalCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      }
    },
    "v1UpdateSubscriptionTierStatus": {
      "type": "string",
      "enum": [
        "UPDATE_SUBSCRIPTION_TIER_STATUS_INVALID",
        "UPDATE_SUBSCRIPTION_TIER_STATUS_UNSET",
        "UPDATE_SUBSCRIPTION_TIER_STATUS_PROCESSING",
        "UPDATE_SUBSCRIPTION_TIER_STATUS_SUCCESS",
        "UPDATE_SUBSCRIPTION_TIER_STATUS_FAILURE"
      ],
      "default": "UPDATE_SUBSCRIPTION_TIER_STATUS_INVALID"
    },
    "v1UpsertMutation": {
      "type": "object",
      "properties": {
        "faviconUrl": {
          "type": "string"
        },
        "shortcutIconUrl": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "uiTheme": {
          "$ref": "#/definitions/partnerv1UITheme"
        },
        "primaryColor": {
          "type": "string"
        },
        "marketOverrides": {
          "$ref": "#/definitions/UpsertMutationMarketOverridesMutation",
          "description": "MarketOverridesMutation should only be added to Branding with a specific marketID. Has no benefit on the empty marketID."
        },
        "name": {
          "type": "string"
        },
        "darkModeLogoUrl": {
          "type": "string"
        },
        "businessAppUiTheme": {
          "$ref": "#/definitions/partnerv1UITheme"
        }
      }
    },
    "v1UserAgreementTermsOfService": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "accepted": {
          "type": "boolean"
        },
        "acceptedAt": {
          "type": "string",
          "format": "date-time"
        },
        "feature": {
          "type": "string"
        }
      }
    },
    "v1UserCredential": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1PartnerUser",
          "title": "new user with information about first name, last name, and email"
        },
        "password": {
          "type": "string",
          "title": "password for new user"
        }
      }
    },
    "v1WizardStatus": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the partner"
        },
        "userId": {
          "type": "string",
          "title": "ID of the user"
        },
        "activeStep": {
          "type": "string",
          "title": "Unique string to indicate the step they are on in the wizard"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created date of entity"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Last updated date of entity"
        }
      }
    },
    "PerformanceLogFromCache": {
      "type": "string",
      "enum": [
        "PERFORMANCE_LOG_FROM_CACHE_INDETERMINATE",
        "PERFORMANCE_LOG_FROM_CACHE_CACHED",
        "PERFORMANCE_LOG_FROM_CACHE_UNCACHED"
      ],
      "default": "PERFORMANCE_LOG_FROM_CACHE_INDETERMINATE"
    },
    "StacktraceFrame": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "title": "The relative filepath to the call"
        },
        "lineNumber": {
          "type": "string",
          "title": "The line number in the file"
        },
        "colNumber": {
          "type": "string",
          "title": "The column number in the line of the file"
        },
        "function": {
          "type": "string",
          "title": "The name of the function being called"
        },
        "inApp": {
          "type": "boolean",
          "title": "Whether this call orginated in applicaiton code and is relevant to the stack trace"
        }
      }
    },
    "v1Breadcrumb": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp representing when the breadcrumb occurred"
        },
        "type": {
          "type": "string",
          "title": "The type of event the breadcrumb is for, eg Navigation or Http"
        },
        "message": {
          "type": "string",
          "title": "A message describing the breadcrumb"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data associated with this breadcrumb"
        },
        "category": {
          "type": "string",
          "description": "Categories are dotted strings that indicate what the crumb is or where it comes from.\nTypically it\u2019s a module name or a descriptive string. For instance ui.click could be\nused to indicate that a click happend in the UI or flask could be used to indicate that\nthe event originated in the Flask framework."
        }
      }
    },
    "v1ErrorReport": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string",
          "title": "Hexadecimal string representing a uuid4 value"
        },
        "project": {
          "type": "string",
          "title": "The name of the project this report is created for, eg. business-center-client"
        },
        "environment": {
          "type": "string",
          "title": "The name of the environment that created this report, eg. production"
        },
        "release": {
          "type": "string",
          "title": "The release this error occured in. For projects that use vstatic this would be the deployment id"
        },
        "platform": {
          "type": "string",
          "title": "The language of the program that generated this error, eg javascript, go"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp representing when the error occured"
        },
        "request": {
          "$ref": "#/definitions/v1Request",
          "title": "An object containing information relevant for when the error occur during an http request"
        },
        "exception": {
          "$ref": "#/definitions/v1Exception",
          "title": "Information about the exception that occured"
        },
        "message": {
          "type": "string",
          "title": "A message used to provide details of this error"
        },
        "stackTrace": {
          "$ref": "#/definitions/v1Stacktrace",
          "title": "The stacktrace for when this error occured"
        },
        "breadcrumbs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Breadcrumb"
          },
          "title": "Breadcrumbs to provide info for what the user was doing prior to the error"
        },
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "Information about the user that the error occured for"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Arbitray map of extra information to include with the report"
        },
        "traceId": {
          "type": "string",
          "title": "The trace id for the session"
        }
      }
    },
    "v1GetAtlassianAccessResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "Access token provided by JIRA OAuth 2.0"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token for access provided by JIRA OAuth 2.0"
        },
        "expiresIn": {
          "type": "string",
          "title": "Number of seconds before the access token expires"
        }
      }
    },
    "v1HTTPMethod": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "POST",
        "GET",
        "PUT",
        "DELETE",
        "PATCH"
      ],
      "default": "UNDEFINED"
    },
    "v1PerformanceLog": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "title": "The project calling the rpc"
        },
        "environment": {
          "type": "string",
          "title": "The environment of the project"
        },
        "deploymentId": {
          "type": "string",
          "title": "The deployment id of the project"
        },
        "traceId": {
          "type": "string",
          "title": "The trace id for the session"
        },
        "connectEnd": {
          "type": "number",
          "format": "float",
          "title": "Measures, mostly self-explanatory, for the rest check out this page:\nhttps://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming"
        },
        "connectStart": {
          "type": "number",
          "format": "float"
        },
        "decodedBodySize": {
          "type": "number",
          "format": "float"
        },
        "domComplete": {
          "type": "number",
          "format": "float"
        },
        "domContentLoadedEventEnd": {
          "type": "number",
          "format": "float"
        },
        "domContentLoadedEventStart": {
          "type": "number",
          "format": "float"
        },
        "domInteractive": {
          "type": "number",
          "format": "float"
        },
        "domainLookupEnd": {
          "type": "number",
          "format": "float"
        },
        "domainLookupStart": {
          "type": "number",
          "format": "float"
        },
        "duration": {
          "type": "number",
          "format": "float"
        },
        "encodedBodySize": {
          "type": "number",
          "format": "float"
        },
        "fetchStart": {
          "type": "number",
          "format": "float"
        },
        "loadEventEnd": {
          "type": "number",
          "format": "float"
        },
        "loadEventStart": {
          "type": "number",
          "format": "float"
        },
        "redirectCount": {
          "type": "number",
          "format": "float"
        },
        "redirectEnd": {
          "type": "number",
          "format": "float"
        },
        "redirectStart": {
          "type": "number",
          "format": "float"
        },
        "requestStart": {
          "type": "number",
          "format": "float"
        },
        "responseEnd": {
          "type": "number",
          "format": "float"
        },
        "responseStart": {
          "type": "number",
          "format": "float"
        },
        "secureConnectionStart": {
          "type": "number",
          "format": "float"
        },
        "startTime": {
          "type": "number",
          "format": "float"
        },
        "transferSize": {
          "type": "number",
          "format": "float"
        },
        "unloadEventEnd": {
          "type": "number",
          "format": "float"
        },
        "unloadEventStart": {
          "type": "number",
          "format": "float"
        },
        "userAgent": {
          "type": "string",
          "title": "User agent that the user was using to browse; may indicate why all measures are 0 (like for Safari and IE)"
        },
        "type": {
          "type": "string"
        },
        "firstPaint": {
          "type": "number",
          "format": "float",
          "title": "How many ms it took to get _anything_ painted to the screen"
        },
        "firstContentfulPaint": {
          "type": "number",
          "format": "float",
          "title": "How many ms it took to get something meaningful painted to the screen, i.e. text or images or what have you"
        },
        "requestPath": {
          "type": "string",
          "title": "The path in the app where the performance log is from"
        },
        "requestHost": {
          "type": "string"
        },
        "afterViewInit": {
          "type": "number",
          "format": "float",
          "title": "How many ms it took to get to the AppComponent ngAfterViewInit"
        },
        "fromCache": {
          "$ref": "#/definitions/PerformanceLogFromCache",
          "description": "If the transfer size is 0, then it came from cache... however, Safari and IE don't support the new\nNavigationPerformanceTiming API yet, which includes transfer size, so they're always zero.\nUsing a distinct field will let us tell in the library side if this is a trustworthy zero by setting this field."
        },
        "changeDetectionMsPerTick": {
          "type": "number",
          "format": "float",
          "description": "The average time in ms for each change detection cycle."
        },
        "changeDetectionTicks": {
          "type": "number",
          "format": "float",
          "description": "The number of ticks."
        },
        "javascriptHeapMemory": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "PerformanceLog represents a large portion of the performance measures that browsers track. It is worth noting these\nare just measures, and would need to be used in calculations to get truly useful metrics out of them.\nE.g. something like dom_content_loaded_event_end isn't very useful without using its respective start time to\ncalculate the total duration of that event."
    },
    "v1RPCLog": {
      "type": "object",
      "properties": {
        "requestPath": {
          "type": "string",
          "title": "The RPC or endpoint being called"
        },
        "requestHost": {
          "type": "string",
          "title": "The host of the RPC or endpoint being called"
        },
        "httpMethod": {
          "$ref": "#/definitions/v1HTTPMethod",
          "title": "The http method being used to call the request_path"
        },
        "httpStatus": {
          "type": "string",
          "format": "int64",
          "title": "The http status of the response of the call"
        },
        "project": {
          "type": "string",
          "title": "The project calling the rpc"
        },
        "environment": {
          "type": "string",
          "title": "The environment of the project"
        },
        "deploymentId": {
          "type": "string",
          "title": "The deployment id of the project"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "When the request was made"
        },
        "durationMillis": {
          "type": "string",
          "format": "int64",
          "title": "How long until the response was recieved in milliseconds"
        },
        "responseSize": {
          "type": "string",
          "format": "int64",
          "title": "How large the response was in bytes"
        },
        "sourcePath": {
          "type": "string",
          "title": "The source of the invoked request, i.e. The current page"
        },
        "responseBody": {
          "type": "string",
          "title": "Optional: The full response body of the request"
        },
        "traceId": {
          "type": "string",
          "title": "The trace id for the session"
        }
      }
    },
    "v1RefreshAtlassianAccessResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "Access token provided by Atlassian OAuth 2.0"
        },
        "expiresIn": {
          "type": "string",
          "title": "Number of seconds before the access token expires"
        }
      }
    },
    "v1Request": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Http headers for the request"
        },
        "url": {
          "type": "string",
          "title": "Url of the request"
        }
      }
    },
    "v1SessionTrace": {
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string",
          "title": "The unique identifier for the session"
        },
        "project": {
          "type": "string",
          "title": "The project calling the rpc"
        },
        "environment": {
          "type": "string",
          "title": "The environment of the project"
        },
        "deploymentId": {
          "type": "string",
          "title": "The deployment id of the project"
        },
        "dimensions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The dimensions of the session (partnerID, userType, bucketValue)"
        },
        "userAgent": {
          "type": "string",
          "title": "The user agent string"
        },
        "referrer": {
          "type": "string",
          "title": "Where the user was previously"
        },
        "language": {
          "type": "string",
          "title": "The user's language preference set in their browser"
        }
      }
    },
    "v1Stacktrace": {
      "type": "object",
      "properties": {
        "frames": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/StacktraceFrame"
          },
          "title": "The list of frames that comprise the stack trace"
        }
      }
    },
    "v1UserEvent": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "title": "The project calling the rpc"
        },
        "environment": {
          "type": "string",
          "title": "The environment of the project"
        },
        "deploymentId": {
          "type": "string",
          "title": "The deployment id of the project"
        },
        "traceId": {
          "type": "string",
          "title": "The trace id for the session"
        },
        "eventCategory": {
          "type": "string",
          "title": "The object that was interacted with ('Button', 'Dropdown', 'Navigation')"
        },
        "eventAction": {
          "type": "string",
          "title": "The type of interaction ('Click', 'Select', 'View')"
        },
        "eventLabel": {
          "type": "string",
          "title": "The context on the event ('Package Activation', 'Account Deletion', 'Logout')"
        },
        "eventValue": {
          "type": "string",
          "format": "int64",
          "title": "The value of the event, most likely 1, but could be a metric being tracked(# of products activated)"
        },
        "dimensions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The dimensions of the event (partnerID, userType, bucketValue)"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "A timestamp representing when the event occured"
        }
      }
    },
    "DatastoreSourceNamespace": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "identifies the datastore namespace that the table lives under. Empty value here means the top level (empty) namespace."
        },
        "all": {
          "type": "boolean",
          "description": "if true, the model is contained in many namespaces, potentially all namespaces."
        }
      }
    },
    "GetGraphResponseEdge": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "title": "id of the node the edge is outgoing from"
        },
        "to": {
          "type": "string",
          "title": "id of the node the edge is incoming to"
        }
      }
    },
    "GetGraphResponseNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the node, this could an id of a subscription, transform, or data source"
        },
        "public": {
          "type": "boolean",
          "title": "whether or not this node is public. subscriptions and data sources are always private"
        },
        "type": {
          "type": "string",
          "title": "what kind of node vetl structure this node represents, could be a subscription, transform, or data source"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "meta data about the node"
        },
        "owner": {
          "type": "string",
          "title": "the owner of this node"
        },
        "schema": {
          "$ref": "#/definitions/v1Schema",
          "title": "the schema at this node"
        }
      }
    },
    "SecondaryIndexCloudSQLConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        },
        "instanceIp": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "clientKey": {
          "type": "string",
          "format": "byte"
        },
        "clientCert": {
          "type": "string",
          "format": "byte"
        },
        "serverCertificateAuthority": {
          "type": "string",
          "format": "byte"
        },
        "projectId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        }
      }
    },
    "SecondaryIndexPubSubConfig": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "string"
        }
      }
    },
    "TesseractSinkLastModifiedConcurrencyControl": {
      "type": "object",
      "properties": {
        "lastModifiedField": {
          "type": "string"
        }
      },
      "title": "Provides concurrency control through a timestamp based approach"
    },
    "TesseractSinkVersionConcurrencyControl": {
      "type": "object",
      "properties": {
        "versionField": {
          "type": "string"
        }
      },
      "title": "Provides concurrency control through a monotonically increasing version number"
    },
    "VStoreSinkSecondaryIndex": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the secondary index, this name must be unique from other secondary indexes"
        },
        "cloudSqlConfig": {
          "$ref": "#/definitions/SecondaryIndexCloudSQLConfig"
        },
        "pubsubConfig": {
          "$ref": "#/definitions/SecondaryIndexPubSubConfig"
        }
      }
    },
    "v1DataSink": {
      "type": "object",
      "properties": {
        "vstore": {
          "$ref": "#/definitions/v1VStoreSink"
        },
        "tesseract": {
          "$ref": "#/definitions/v1TesseractSink"
        }
      },
      "title": "Describes the destination for a transform's output"
    },
    "v1DataSinkType": {
      "type": "string",
      "enum": [
        "DATA_SINK_TYPE_NONE",
        "DATA_SINK_TYPE_VSTORE",
        "DATA_SINK_TYPE_TESSERACT"
      ],
      "default": "DATA_SINK_TYPE_NONE",
      "title": "Enumerates the types of data sinks"
    },
    "v1DataSource": {
      "type": "object",
      "properties": {
        "vstore": {
          "$ref": "#/definitions/v1VStoreSource"
        },
        "datastore": {
          "$ref": "#/definitions/v1DatastoreSource"
        },
        "schema": {
          "$ref": "#/definitions/v1Schema",
          "description": "Defines how the data is structured."
        }
      },
      "title": "Describes the schema associated with a particular source and how it is provided to vETL"
    },
    "v1DatastoreSource": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/DatastoreSourceNamespace"
        },
        "kind": {
          "type": "string",
          "title": "the name of the table"
        },
        "intakePubsubTopic": {
          "type": "string",
          "title": "the topic name of the pubsub intake that will notify vETL of changes to entities"
        },
        "projectId": {
          "type": "string",
          "title": "the project id of the cloud datastore instance and intake_pubsub_topic"
        },
        "primaryKey": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The names of the properties that represent the primary key field and it's parent key(s) fields.\nExample: If your key is account_group_id and it's parent is partner_id, this property should be [\"partner_id\", \"account_group_id\"]"
        },
        "parentKeyKinds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The kinds of the parent keys specified by `primary_key`, in order. This must be specified if there are parent key fields.\nExample: Following the example in `primary_key`, this property would be [\"Partner\"], and `kind` would be \"AccountGroup\""
        }
      },
      "description": "DatastoreSource contains the necessary information for vETL to be able to read data from a particular Cloud Datastore table\nThis source is throttled and will not provide updates in true realtime.\nInstead, updates are processed in bucketed windows, to rectify race conditions with creating/deleting in quick succession."
    },
    "v1ExtractProperties": {
      "type": "object",
      "properties": {
        "extractMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Mapping of the desired property to extract (the path to the property is dot sepearated) to the new name on the root\nof the entity"
        }
      },
      "title": "Extract a property from a structure out to the root of the entity"
    },
    "v1GetGraphResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetGraphResponseNode"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetGraphResponseEdge"
          }
        }
      }
    },
    "v1GetSchemaAtNodeResponse": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/v1Schema"
        }
      }
    },
    "v1Join": {
      "type": "object",
      "properties": {
        "joinTransformId": {
          "type": "string",
          "title": "The transform which will output the side input for the join"
        },
        "keyMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The map for where to find the side input source's key properties on the primary entities properties\nEach of the `primary_key` components of the `join_transform_id`'s source should be keys in this mapping."
        },
        "outputMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The map for extracting properties by name from the side entities onto the primary entities"
        }
      },
      "title": "Join adds properties from side input entities retrieved for the primary entity"
    },
    "v1KeepProperties": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The properties names to keep, all other names will be dropped"
        }
      },
      "title": "KeepProperties removes all properties from a row except for a subset of specified properties"
    },
    "v1RenameProperties": {
      "type": "object",
      "properties": {
        "mappings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "map of old the property names to their new one\na missing property from this mapping, will keep its name"
        }
      },
      "title": "RenameProperties renames the properties with the provided mapping"
    },
    "v1Schema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Property"
          }
        }
      },
      "title": "Schema describes the structure of data in a storage-agnostic way"
    },
    "v1TesseractSink": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "primaryKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versionConcurrencyControl": {
          "$ref": "#/definitions/TesseractSinkVersionConcurrencyControl"
        },
        "lastModifiedConcurrencyControl": {
          "$ref": "#/definitions/TesseractSinkLastModifiedConcurrencyControl"
        }
      },
      "title": "TesseractSink contains the necessary information for vETL to be able to write data to a particular Tesseract table"
    },
    "v1Transform": {
      "type": "object",
      "properties": {
        "keepProperties": {
          "$ref": "#/definitions/v1KeepProperties"
        },
        "renameProperties": {
          "$ref": "#/definitions/v1RenameProperties"
        },
        "join": {
          "$ref": "#/definitions/v1Join"
        },
        "extractProperties": {
          "$ref": "#/definitions/v1ExtractProperties"
        }
      },
      "description": "Transform is an operation performed on an input row that changes its shape, structure, cardinality, etc."
    },
    "v1VStoreSink": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "primaryKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondaryIndexes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VStoreSinkSecondaryIndex"
          }
        },
        "externalRegisterKind": {
          "type": "boolean",
          "description": "If set to true vETL will not be responsible for registering the Kind. This must be done by the client before."
        }
      },
      "title": "VStoreSink contains the necessary information for vETL to be able to write data to a particular VStore table"
    },
    "v1VStoreSource": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "primaryKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pubsubIndexId": {
          "type": "string",
          "title": "The index id of a pubsub secondary index that is suitable for vETL to read from in order to transform new data"
        }
      },
      "title": "VStoreSource contains the necessary information for vETL to be able to read data from a particular VStore table"
    },
    "BulkUpdateRequestByIdentifier": {
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/legacyIdentifier"
          }
        }
      },
      "title": "A list of explicit identifiers for use in selection.preference_by_identifiers"
    },
    "BulkUpdateRequestByPartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      },
      "title": "A partner id for actions across an entire pid"
    },
    "BulkUpdateRequestByUser": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A list of users for use in selection.business_by_user"
    },
    "EmailParticipantTemplateOperation": {
      "type": "object",
      "properties": {
        "nameTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "addressTemplate": {
          "$ref": "#/definitions/v1Template"
        }
      }
    },
    "ListNotificationsRequestFilter": {
      "type": "object",
      "properties": {
        "medium": {
          "$ref": "#/definitions/v1NotificationMedium",
          "title": "Controls which notification medium is returned"
        },
        "context": {
          "$ref": "#/definitions/v1NotificationContext",
          "description": "All notifications will fall underneath this contextual scope except for global notifications."
        }
      }
    },
    "MediumConfigurationBundleConfiguration": {
      "type": "object",
      "properties": {
        "window": {
          "type": "string",
          "title": "The amount of time similar notifications should be bundled together before a new bundle is created"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template that should be used when showing bundled notifications"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id for building the link for bundled notifications"
        }
      }
    },
    "MediumConfigurationEmailConfiguration": {
      "type": "object",
      "properties": {
        "contentTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id for building the email content of this notification type"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id for building the link for a notification"
        },
        "subjectTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The subject line for the email, this determines threading in many email systems"
        },
        "from": {
          "$ref": "#/definitions/MediumConfigurationEmailConfigurationParticipantTemplate"
        },
        "contentType": {
          "$ref": "#/definitions/v1ContentType",
          "title": "The content type of the email body"
        },
        "espId": {
          "type": "string",
          "description": "An identifier that has been preconfigured for use by the `email` microservice."
        },
        "sampleData": {
          "type": "object",
          "description": "Sample data used for previewing email notifications."
        }
      }
    },
    "MediumConfigurationEmailConfigurationParticipantTemplate": {
      "type": "object",
      "properties": {
        "nameTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id that calculates the name of the email participant"
        },
        "addressTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id that calculates the address of the email participant"
        }
      }
    },
    "MediumConfigurationWebConfiguration": {
      "type": "object",
      "properties": {
        "contentTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template for building the content of the notification"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template for building the link for a notification"
        },
        "sampleData": {
          "type": "object",
          "description": "Sample data used for previewing web notifications."
        }
      }
    },
    "NotificationContextAccountGroup": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      },
      "description": "Account Group refers to any notification within a specific account group."
    },
    "NotificationContextPartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      },
      "description": "Partner refers to any notification within a specific partner."
    },
    "NotificationContextUser": {
      "type": "object",
      "properties": {
        "iamSubjectId": {
          "type": "string",
          "description": "An IAM subject ID. user_id should be used instead."
        },
        "userId": {
          "type": "string",
          "description": "A unified IAM user id."
        }
      },
      "description": "User refers to any notification for a specific user id."
    },
    "NotificationTypeEmailParticipantTemplate": {
      "type": "object",
      "properties": {
        "nameTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id that calculates the name of the email participant"
        },
        "addressTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id that calculates the address of the email participant"
        }
      }
    },
    "NotificationTypeSettingContextNotificationTypeSettingContextPartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "A partner context will affect what notifications can bee seen by a user in a specific partner and market"
    },
    "NotificationTypeSettingNotificationTypeSettingMediumConfiguration": {
      "type": "object",
      "properties": {
        "medium": {
          "$ref": "#/definitions/v1NotificationMedium",
          "description": "The medium that this configuration is for. A medium should have at most a single configuration."
        },
        "enabled": {
          "type": "boolean",
          "title": "If this notification is enabled for the requested context"
        }
      }
    },
    "NotificationWebNotification": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        }
      }
    },
    "PreviewRequestEvent": {
      "type": "object",
      "properties": {
        "eventTypeId": {
          "type": "string",
          "title": "The event type id that has been registered with Event Broker"
        },
        "emittedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the event was emitted at"
        },
        "data": {
          "type": "object",
          "title": "The data of the event"
        }
      }
    },
    "TemplateInlineTemplate": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "UpdateNotificationSettingsRequestUpdateNotificationSettingsOperation": {
      "type": "object",
      "properties": {
        "notificationTypeId": {
          "type": "string",
          "title": "The ID of the notification type"
        },
        "notificationMedium": {
          "$ref": "#/definitions/v1NotificationMedium",
          "title": "The location where the notification will be sent"
        },
        "context": {
          "$ref": "#/definitions/v1NotificationContext",
          "description": "The context controls the scope of the notification setting. When a setting has been set, notifications will\nalways use the most specific setting. For example, a user may have a setting enabled for the Partner context,\nbut may have an Account Group context disabled within that partner. If there is a notification for that\nPartner and Account Group, they will not receive it because the Account Group context is more specific\nthan the Partner context."
        },
        "status": {
          "$ref": "#/definitions/v1NotificationStatus",
          "title": "The status of the notification (enabled/disabled)"
        },
        "propagate": {
          "type": "boolean",
          "description": "This indicates that this setting mutation will mutate any setting with a more specific context as well.\nFor example, if the context was Partner: ABC and Market: market-1, and the mutation was to disable the\nnotification, turning this flag on would cause a setting with the context ABC, market-1, AG-123 to be disabled\nas well."
        }
      }
    },
    "UpdateNotificationTypeOperationMediumConfigurationOperation": {
      "type": "object"
    },
    "UpdateNotificationTypeOperationReplaceMediumConfiguration": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1MediumConfiguration"
        }
      }
    },
    "UpdateNotificationTypeOperationSetAccessRequirements": {
      "type": "object",
      "properties": {
        "accessRequirements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccessRequirement"
          }
        }
      }
    },
    "UpdateNotificationTypeOperationSetCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateNotificationTypeOperationSetHydrators": {
      "type": "object",
      "properties": {
        "hydrators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Hydrator"
          }
        }
      }
    },
    "UpdateNotificationTypeOperationSetLocales": {
      "type": "object",
      "properties": {
        "locales": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateNotificationTypeOperationSetPersonaAccessRequirements": {
      "type": "object",
      "properties": {
        "personaAccessRequirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PersonaType"
          }
        }
      }
    },
    "UpdateNotificationTypeSettingsRequestUpdateNotificationTypeSettingOperation": {
      "type": "object",
      "properties": {
        "notificationTypeId": {
          "type": "string",
          "title": "The notification type id of the setting being updated"
        },
        "context": {
          "$ref": "#/definitions/v1NotificationTypeSettingContext",
          "description": "The context indicates the group of users which will have their notifications affected by the update."
        },
        "medium": {
          "$ref": "#/definitions/v1NotificationMedium",
          "title": "Medium of the notification type being updated"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enables a notification type for users in the given context."
        }
      }
    },
    "UpdateNotificationsRequestOperation": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "string",
          "title": "The unique identifier of the notification"
        },
        "followed": {
          "type": "boolean",
          "title": "Mark the notification as followed/unfollowed"
        },
        "viewed": {
          "type": "boolean",
          "title": "Mark the notification as viewed/unviewed"
        }
      }
    },
    "UpdateTypeRequestUpdateNotificationTypeOperation": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationSetCategory",
          "title": "Change the notification type's category"
        },
        "description": {
          "type": "string",
          "title": "Change the notification type's description"
        },
        "replaceMediumConfiguration": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationReplaceMediumConfiguration",
          "description": "Replace a medium configuration. This will create the configuration if it does not yet exist."
        },
        "mediumConfiguration": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationMediumConfigurationOperation",
          "title": "Update a specific property in the medium configuration"
        },
        "domainId": {
          "type": "string",
          "title": "Change the notification type's domainID"
        },
        "hydrators": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationSetHydrators",
          "title": "Change the hydrators that the notification relies on"
        },
        "name": {
          "type": "string",
          "description": "Change the name of the notification type."
        },
        "accessRequirements": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationSetAccessRequirements",
          "description": "Change the access requirements for a notification type.\nThis could mean that users currently subscribed to the notification will no longer have access."
        },
        "web": {
          "$ref": "#/definitions/UpdateTypeRequestUpdateNotificationTypeOperationWeb",
          "title": "Update the web medium configuration"
        },
        "webBundle": {
          "$ref": "#/definitions/UpdateTypeRequestUpdateNotificationTypeOperationWebBundle",
          "title": "Update the web bundle configuration"
        },
        "email": {
          "$ref": "#/definitions/UpdateTypeRequestUpdateNotificationTypeOperationEmail",
          "title": "Update the email configuration"
        },
        "personaAccessRequirements": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationSetPersonaAccessRequirements",
          "title": "Updates the persona access requirements"
        },
        "featureFlagId": {
          "type": "string",
          "title": "Update the feature flag id"
        },
        "locales": {
          "$ref": "#/definitions/UpdateNotificationTypeOperationSetLocales",
          "title": "Update the notification type's locales"
        },
        "eventTypeId": {
          "type": "string",
          "title": "Update the unique identifier of the event this notification type is based on"
        }
      }
    },
    "UpdateTypeRequestUpdateNotificationTypeOperationEmail": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "subjectTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "from": {
          "$ref": "#/definitions/EmailParticipantTemplateOperation"
        },
        "contentType": {
          "$ref": "#/definitions/v1ContentType"
        },
        "espId": {
          "type": "string"
        },
        "sampleData": {
          "type": "object"
        }
      }
    },
    "UpdateTypeRequestUpdateNotificationTypeOperationWeb": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "sampleData": {
          "type": "object"
        }
      }
    },
    "UpdateTypeRequestUpdateNotificationTypeOperationWebBundle": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "window": {
          "type": "string"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template"
        },
        "sampleData": {
          "type": "object"
        }
      }
    },
    "legacyBulkUpdateResponse": {
      "type": "object",
      "properties": {
        "progressToken": {
          "type": "string",
          "description": "Progress token is a string that can be used to track the progress of any asynchronous work, likely a workflow ID.\nThe absence of a returned token should indicate that the work has completed synchronously."
        }
      }
    },
    "legacyDeleteResponse": {
      "type": "object"
    },
    "legacyGetAvailableSectionsResponse": {
      "type": "object",
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/legacySectionSettings"
          }
        }
      }
    },
    "legacyGetResponse": {
      "type": "object",
      "properties": {
        "computed": {
          "$ref": "#/definitions/legacyPreference",
          "title": "computed is a full set of preferences, with default values inheriting values from their \"parent\" LegacyNotificationPreference.\nThe inheritance chain from parent to child by what fields are included on the key is as follows:\n   partner_id\n   partner_id & market_id\n   partner_id & user_id\n   partner_id & user_id & business_id (market_id optional)"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/legacyPreference"
          },
          "description": "components are the individual LegacyNotificationPreference entries that are used in the inheritance."
        },
        "defaults": {
          "$ref": "#/definitions/legacyPreference",
          "title": "defaults represents the default value for each setting and is the equivalent to computed of the nearest parent"
        },
        "userNotificationsDisabled": {
          "type": "boolean",
          "description": "user_notifications_disabled is false if the the master notification toggle for the SMB persona is disabled.\nIf the identifier does not inlude a user_id this field is unset."
        }
      }
    },
    "legacyIdentifier": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "partner_id is always required."
        },
        "marketId": {
          "type": "string",
          "description": "market_id is required on create but optional on other operations to entries with a business_id."
        },
        "userId": {
          "type": "string",
          "description": "user_id is a universal user id, required if business_id is set."
        },
        "businessId": {
          "type": "string",
          "description": "business_id refers to an account_group_id."
        }
      },
      "description": "Identifier is a reference to a LegacyNotificationPreference."
    },
    "legacyListResponse": {
      "type": "object",
      "properties": {
        "computed": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/legacyPreference"
          },
          "title": "computed is a full set of preferences, with default values inheriting values from their \"parent\" LegacyNotificationPreference.\nSee GetResponse for details on inheritance"
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "legacyNotificationActivity": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "localizedTitle": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1legacyNotificationSetting"
          }
        }
      }
    },
    "legacyPreference": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/legacyIdentifier"
        },
        "instantSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1legacyNotificationSetting"
          },
          "description": "instant_settings is a list of NS notification IDs (usually of the form 'appId:notifcationName') for which a notification should be sent immediately.\nIDs for which a corresponding entry are not found are considered to be equivalent to STATUS_DEFAULT."
        },
        "digestSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1legacyNotificationSetting"
          },
          "description": "digest_settings is a list of NS notification IDs (usually of the form 'appId:notifcationName') which should be included in the daily digest.\nIDs for which a corresponding entry are not found are considered to be equivalent to STATUS_DEFAULT."
        },
        "executiveReportSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1legacyNotificationSetting"
          },
          "description": "executive_report_settings is a list of executive report frequencies that a user may receive an executive report.\nIDs for which a corresponding entry are not found are considered to be equivalent to STATUS_DEFAULT."
        },
        "instant": {
          "$ref": "#/definitions/v1legacyStatus",
          "description": "Instant refers to if immediate emails should be sent when the event happens."
        },
        "digest": {
          "$ref": "#/definitions/v1legacyStatus",
          "description": "Digest refers to if emails should be sent when ."
        },
        "monthlyTaskReport": {
          "$ref": "#/definitions/v1legacyStatus",
          "description": "MonthlyTaskReport refers to a specific notification type from concierge. This is maintained to keep compatibility with NS's model."
        }
      }
    },
    "legacyProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/legacyNotificationActivity"
          }
        }
      }
    },
    "legacySectionSettings": {
      "type": "object",
      "properties": {
        "section": {
          "$ref": "#/definitions/v1legacyNotificationSetting",
          "title": "defined https://github.com/vendasta/NS/blob/854d893026892179744208046db9f7fe06dadea3/src/app/notification_settings/_notification_settings.py#L74-L128"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/legacyProduct"
          },
          "title": "defined https://github.com/vendasta/NS/blob/854d893026892179744208046db9f7fe06dadea3/src/app/domain/settings.py#L146-L196"
        }
      }
    },
    "legacyUpdateResponse": {
      "type": "object"
    },
    "notificationsv1NotificationSetting": {
      "type": "object",
      "properties": {
        "notificationTypeId": {
          "type": "string",
          "title": "The ID of the notification"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The notification hierarchical category with the leaf being the Display Name\nExample: [Business, Product Activations, Rejections]"
        },
        "description": {
          "type": "string",
          "title": "Description of the notification"
        },
        "notificationMedium": {
          "$ref": "#/definitions/v1NotificationMedium",
          "title": "The location where the notification will be sent"
        },
        "status": {
          "$ref": "#/definitions/v1NotificationStatus",
          "title": "The status of the notification (enabled/disabled)"
        },
        "context": {
          "$ref": "#/definitions/v1NotificationContext",
          "description": "The context controls the scope of the notification setting. When a setting has been set, notifications will\nalways use the most specific setting. For example, a user may have a setting enabled for the Partner context,\nbut may have an Account Group context disabled within that partner. If there is a notification for that Partner\nand Account Group, they will not receive it because the Account Group context is more specific than the Partner\ncontext."
        }
      }
    },
    "v1AccessRequirement": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1Resource"
        },
        "scopeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "See the resource service for more detailed information"
    },
    "v1ContentType": {
      "type": "string",
      "enum": [
        "CONTENT_TYPE_TEXT_PLAIN",
        "CONTENT_TYPE_TEXT_HTML"
      ],
      "default": "CONTENT_TYPE_TEXT_PLAIN"
    },
    "v1GetNotificationSettingsResponse": {
      "type": "object",
      "properties": {
        "notificationSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/notificationsv1NotificationSetting"
          }
        }
      }
    },
    "v1GetNotificationTypeSettingsResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NotificationTypeSetting"
          }
        }
      }
    },
    "v1GetOverviewResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "The email of the user who is unsubscribing from a notification"
        },
        "type": {
          "$ref": "#/definitions/v1NotificationType",
          "title": "The notification type information"
        },
        "partnerId": {
          "type": "string",
          "title": "partner id"
        },
        "marketId": {
          "type": "string",
          "title": "market id"
        }
      }
    },
    "v1GetTypeResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1NotificationType"
        }
      }
    },
    "v1Hydrator": {
      "type": "object",
      "properties": {
        "accountGroup": {
          "type": "boolean",
          "title": "New properties: `_account_group_name`, `_account_group_address`\nRequired on the event schema: `account_group_id`"
        },
        "salesperson": {
          "type": "boolean",
          "title": "New properties: `_salesperson_name`\nRequired on the event schema: `salesperson_id`, (`partner_id` OR `account_group_id`)"
        },
        "product": {
          "type": "boolean",
          "title": "New properties: `_product_name`\nRequired on the event schema: `account_group_id` OR (`partner_id` AND `market_id`), `app_id`\nOptional on the event schema: `addon_id`"
        },
        "partnerBranding": {
          "type": "boolean",
          "title": "New properties: `_branding.name`, `_branding.primary_color`, `_branding.assets`, `_branding.apps`\nRequired on the event schema: (`partner_id` AND `market_id`) OR `account_group_id`"
        },
        "digitalAgent": {
          "type": "boolean",
          "title": "New properties: `_digital_agent_name`\nRequired on the event schema: `digital_agent_id`"
        },
        "user": {
          "type": "boolean",
          "description": "New properties: `_user.first_name`, `_user.last_name`\nRequired on the event schema: `user_id`\nThis hydrator supports multiples, meaning if the event schema has a repeated string property `user_ids`, the hydrator will inflate a list of `_users`, in the same order that the `user_ids` were provided."
        }
      },
      "description": "Hydrators allow a notification to have access to additional attributes that are not necessarily part of the schema\nof the event they are based on. This is useful for templating business names and other human-readable data that is\nunlikely to be part of the event.\n\nHydrated data is calculated at the time that the notification is saved and is not updated.\n\nEach hydrator requires a different set of properties to be present on the event schema in order to perform hydration."
    },
    "v1ListNotificationTypesResponse": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NotificationType"
          }
        }
      }
    },
    "v1ListNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Notification"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListTypesResponse": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NotificationType"
          }
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextCursor": {
          "type": "string"
        }
      }
    },
    "v1MediumConfiguration": {
      "type": "object",
      "properties": {
        "medium": {
          "$ref": "#/definitions/v1NotificationMedium",
          "title": "deprecated: The medium that this configuration is for. A medium should have at most a single configuration - use WebConfiguration or EmailConfiguration"
        },
        "templateId": {
          "type": "string",
          "title": "deprecated: The template id for building the content of this notification type on this delivery medium - use WebConfiguration"
        },
        "linkTemplateId": {
          "type": "string",
          "title": "deprecated: The template id for building the link for this delivery medium and notification type - use WebConfiguration"
        },
        "disabled": {
          "type": "boolean",
          "title": "A disabled medium configuration will not have notifications delivered for it"
        },
        "bundleConfiguration": {
          "$ref": "#/definitions/MediumConfigurationBundleConfiguration"
        },
        "emailConfiguration": {
          "$ref": "#/definitions/MediumConfigurationEmailConfiguration"
        },
        "webConfiguration": {
          "$ref": "#/definitions/MediumConfigurationWebConfiguration"
        }
      }
    },
    "v1Notification": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "string",
          "title": "The unique identifier of the notification"
        },
        "notificationTypeId": {
          "type": "string",
          "title": "The type of notification"
        },
        "link": {
          "type": "string",
          "title": "An absolute URL to where the user will be directed when clicking on the notification"
        },
        "followed": {
          "type": "boolean",
          "title": "Indicates whether the notification's link has been followed by the user"
        },
        "viewed": {
          "type": "boolean",
          "title": "Indicates whether the notification has been viewed by the user"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date that the notification was created"
        },
        "web": {
          "$ref": "#/definitions/NotificationWebNotification"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1NotificationContext": {
      "type": "object",
      "properties": {
        "partner": {
          "$ref": "#/definitions/NotificationContextPartner"
        },
        "accountGroup": {
          "$ref": "#/definitions/NotificationContextAccountGroup"
        },
        "user": {
          "$ref": "#/definitions/NotificationContextUser"
        }
      },
      "description": "Notification Context defines the scope in which notifications should be interacted with."
    },
    "v1NotificationMedium": {
      "type": "string",
      "enum": [
        "NOTIFICATION_MEDIUM_WEB",
        "NOTIFICATION_MEDIUM_EMAIL"
      ],
      "default": "NOTIFICATION_MEDIUM_WEB",
      "title": "The Medium that the notification will be sent to"
    },
    "v1NotificationStatus": {
      "type": "string",
      "enum": [
        "NOTIFICATION_STATUS_ENABLED",
        "NOTIFICATION_STATUS_DISABLED"
      ],
      "default": "NOTIFICATION_STATUS_ENABLED",
      "title": "The status of the notification setting"
    },
    "v1NotificationType": {
      "type": "string",
      "enum": [
        "NOTIFICATION_TYPE_PRODUCT_UPSELL",
        "NOTIFICATION_TYPE_PRODUCT_ADOPTION",
        "NOTIFICATION_TYPE_CUSTOMER_ACQUISITION"
      ],
      "default": "NOTIFICATION_TYPE_PRODUCT_UPSELL"
    },
    "v1NotificationTypeEmail": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable email"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id for building the email content of this notification type"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template id for building the link for a notification"
        },
        "subjectTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The subject line for the email, this determines threading in many email systems"
        },
        "from": {
          "$ref": "#/definitions/NotificationTypeEmailParticipantTemplate"
        },
        "contentType": {
          "$ref": "#/definitions/v1ContentType",
          "title": "The content type of the email body"
        },
        "espId": {
          "type": "string",
          "description": "An identifier that has been preconfigured for use by the `email` microservice."
        },
        "sampleData": {
          "type": "object",
          "description": "Sample data used for previewing email notifications."
        }
      }
    },
    "v1NotificationTypeSetting": {
      "type": "object",
      "properties": {
        "notificationTypeId": {
          "type": "string"
        },
        "configurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NotificationTypeSettingNotificationTypeSettingMediumConfiguration"
          }
        }
      }
    },
    "v1NotificationTypeSettingContext": {
      "type": "object",
      "properties": {
        "partner": {
          "$ref": "#/definitions/NotificationTypeSettingContextNotificationTypeSettingContextPartner"
        }
      }
    },
    "v1NotificationTypeWeb": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable the web configuration"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template for building the content of the notification"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template for building the link for a notification"
        },
        "sampleData": {
          "type": "object",
          "description": "Sample data used for previewing web notifications."
        }
      }
    },
    "v1NotificationTypeWebBundle": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable the web bundle"
        },
        "window": {
          "type": "string",
          "title": "Bundle window size"
        },
        "contentTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template for building the content of the notification"
        },
        "linkTemplate": {
          "$ref": "#/definitions/v1Template",
          "title": "The template for building the link for a notification"
        },
        "sampleData": {
          "type": "object",
          "description": "Sample data used for previewing web notifications."
        }
      }
    },
    "v1RegisterAppTokenResponse": {
      "type": "object"
    },
    "v1legacyNotificationSetting": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1legacyStatus"
        },
        "title": {
          "type": "string"
        },
        "localizedTitle": {
          "type": "string"
        }
      },
      "description": "NotificationSetting is an individual setting. It is intended to be used as a repeated field, to allow key value pairs of IDs to Status values. One acception is a section, which is a special case where NotificationSetting is not repeated."
    },
    "v1legacyStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSET",
        "STATUS_DEFAULT",
        "STATUS_ENABLED",
        "STATUS_DISABLED"
      ],
      "default": "STATUS_UNSET"
    },
    "FieldSchema": {
      "type": "object",
      "properties": {
        "unmappedField": {
          "$ref": "#/definitions/v1UnmappedField"
        },
        "mappedField": {
          "$ref": "#/definitions/v1MappedField"
        }
      }
    },
    "FormConfigField": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/FieldSchema"
        },
        "label": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "defaultValue": {
          "$ref": "#/definitions/v1FieldValue"
        },
        "preFillByUrlQueryParameter": {
          "type": "string",
          "description": "When displaying the form, pre-fill it with the value in this query\nparameter. For example, you could fill out a hidden field with the\nutm_medium and utm_campaign, so you know how people landed on your page\nbefore filling out the form."
        },
        "placeholder": {
          "type": "string"
        },
        "defaultPhoneIsoCountryCode": {
          "type": "string"
        }
      }
    },
    "FormSubmissionSubmittedValue": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldValue": {
          "$ref": "#/definitions/v1FieldValue"
        },
        "fieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "mappedToResource": {
          "type": "string"
        }
      }
    },
    "GetMultiFormVersionsListResponseVersions": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetMultiRequestFormConfigIdentifier": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ListFormsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "ListFormsResponseFormRow": {
      "type": "object",
      "properties": {
        "form": {
          "$ref": "#/definitions/v1FormConfig"
        },
        "numberOfSubmissions": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "RenderFormResponseDefaultValues": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "jsonValue": {
          "type": "string"
        }
      }
    },
    "RenderFormResponsePreFillByUrlQueryParameter": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "queryParam": {
          "type": "string"
        }
      }
    },
    "v1CreateFormResponse": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidationError"
          }
        }
      },
      "title": "CreateFormResponse - returns the newly generated form_id and version"
    },
    "v1CreateFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string"
        }
      }
    },
    "v1FieldOption": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "v1FormConfig": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "title of the form"
        },
        "description": {
          "type": "string",
          "title": "for description of the  preconnect form"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldConfig"
          },
          "title": "list of the sync settings"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Actions"
          },
          "title": "for actions of the preconnect form and config page"
        }
      },
      "title": "added FormConfig for storing title, description, fieldConfig, actions, urls of preconnect form and config page"
    },
    "v1FormSubmission": {
      "type": "object",
      "properties": {
        "formSubmissionId": {
          "type": "string"
        },
        "formVersion": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FormSubmissionSubmittedValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetEmbedCodeResponse": {
      "type": "object",
      "properties": {
        "embedCode": {
          "type": "string",
          "title": "Form's HTML embed code"
        }
      },
      "title": "Response for a embed form code"
    },
    "v1GetFormResponse": {
      "type": "object",
      "properties": {
        "formConfig": {
          "$ref": "#/definitions/v1FormConfig"
        }
      },
      "title": "returns the most recent version of FormConfig for a specific form_id"
    },
    "v1GetMultiFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmission"
          }
        }
      }
    },
    "v1GetMultiFormVersionsListResponse": {
      "type": "object",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiFormVersionsListResponseVersions"
          }
        }
      }
    },
    "v1JsonSchemaLibrary": {
      "type": "string",
      "enum": [
        "JSON_SCHEMA_LIBRARY_UNDEFINED",
        "JSON_SCHEMA_LIBRARY_JSONFORM"
      ],
      "default": "JSON_SCHEMA_LIBRARY_UNDEFINED",
      "title": "- JSON_SCHEMA_LIBRARY_JSONFORM: JSONFORMS, ALPACA"
    },
    "v1ListFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmission"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListFormsResponse": {
      "type": "object",
      "properties": {
        "formRows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListFormsResponseFormRow"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMappedFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MappedField"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1MappedField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1FieldType"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldOption"
          }
        },
        "mappedTo": {
          "type": "string"
        },
        "systemDefined": {
          "$ref": "#/definitions/v1SystemDefined"
        },
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "v1PreviewFormResponse": {
      "type": "object",
      "properties": {
        "jsonSchema": {
          "type": "string"
        },
        "jsonUiSchema": {
          "type": "string"
        }
      }
    },
    "v1RenderFormResponse": {
      "type": "object",
      "properties": {
        "jsonSchema": {
          "type": "string"
        },
        "jsonUiSchema": {
          "type": "string"
        },
        "styles": {
          "$ref": "#/definitions/v1Styles"
        },
        "fieldQueryParams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RenderFormResponsePreFillByUrlQueryParameter"
          }
        },
        "recaptchaSiteKey": {
          "type": "string"
        },
        "defaultValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RenderFormResponseDefaultValues"
          }
        }
      }
    },
    "v1Styles": {
      "type": "object",
      "properties": {
        "width": {
          "type": "string"
        },
        "backgroundColor": {
          "type": "string"
        },
        "borderColor": {
          "type": "string"
        },
        "borderRadius": {
          "type": "string"
        },
        "borderWidth": {
          "type": "string"
        },
        "borderStyle": {
          "type": "string"
        },
        "padding": {
          "type": "string"
        },
        "primaryFontColor": {
          "type": "string",
          "title": "in material, this would be the \"on background\" color"
        },
        "primaryColor": {
          "type": "string",
          "description": "These follow the naming of Material and Bootstrap, with primary, secondary, warning...\n\nbackgrounds of primary button, checkboxes, etc"
        },
        "onPrimaryColor": {
          "type": "string",
          "title": "text on primary buttons, checkmarks in checkboxes, etc"
        }
      },
      "title": "CSS style linked to a form"
    },
    "v1SystemDefined": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "includedByDefault": {
          "type": "boolean",
          "title": "included_by_default fields will be auto-dropped upon init"
        },
        "hidden": {
          "type": "boolean",
          "title": "hidden fields won't display in editor"
        }
      }
    },
    "v1UnmappedField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1FieldType"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldOption"
          }
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1UpdateFormResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidationError"
          }
        }
      },
      "title": "UpdateFormResponse - returns the newly generated version"
    },
    "v1UserFormSubmission": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string",
          "title": "form identification"
        },
        "version": {
          "type": "string",
          "title": "optional version - if not set it will be used the latest version"
        },
        "values": {
          "type": "string",
          "title": "json with the values being submitted - must conform with form specification"
        }
      },
      "title": "UserFormSubmission represents a set of values being submitted to a form by the user"
    },
    "v1ValidationError": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "title": "this can be a translation key"
        }
      }
    },
    "GetVendorConnectionRequestOptions": {
      "type": "object",
      "properties": {
        "includeDeleted": {
          "type": "boolean"
        }
      }
    },
    "platform_integrationsv1FieldOptions": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "The primary text to display to the user"
        },
        "value": {
          "title": "value The value to use when this option is selected"
        }
      },
      "title": "FieldOptions represents a single item in a dropdown or radio list"
    },
    "v1APIRequest": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/v1HTTPMethod"
        },
        "path": {
          "type": "string"
        },
        "query": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HTTPParam"
          }
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HTTPParam"
          }
        },
        "body": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "APIRequest is the request to be proxied to the specified system\nThe request parts will be processed as go templates allowing for values from the connection to be inserted\nFor example you may use\n{.connection.custom_field.some_field}\n{.connection.namespace}"
    },
    "v1APIResponse": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HTTPParam"
          }
        },
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "body": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1ActionType": {
      "type": "string",
      "enum": [
        "ACTION_TYPE_UNSPECIFIED",
        "ACTION_TYPE_CONTINUE",
        "ACTION_TYPE_CANCEL",
        "ACTION_TYPE_ADD_CONNECTION",
        "ACTION_TYPE_SEND_REQUEST",
        "ACTION_TYPE_COPY",
        "ACTION_TYPE_SAVE",
        "ACTION_TYPE_UNLOCK",
        "ACTION_TYPE_EDIT"
      ],
      "default": "ACTION_TYPE_UNSPECIFIED",
      "description": "- ACTION_TYPE_CONTINUE: for AUTH2 based integrations, preconnect form buttons\n - ACTION_TYPE_ADD_CONNECTION: for gingr integration, preconnect form has add connection button\n - ACTION_TYPE_SEND_REQUEST: for support based integrations, preconnect form has send request button\n - ACTION_TYPE_COPY: for gingr integration, config page has copy button\n - ACTION_TYPE_SAVE: save button needs for legacy based connections\n - ACTION_TYPE_UNLOCK: unlock button for automated review request\n - ACTION_TYPE_EDIT: for text type sync setting like protractor",
      "title": "added enum for possible action type for sync setting"
    },
    "v1Actions": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "label of the button"
        },
        "actionType": {
          "$ref": "#/definitions/v1ActionType",
          "title": "type of the action like continue, cancel, send request, copy, save"
        }
      },
      "title": "actions for sync setting"
    },
    "v1AdditionalInfo": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "websites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WebsiteInfo"
          }
        },
        "requirements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceInfo"
          }
        },
        "businesses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "billing": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product id which are available in the partner center marketplace and ID could change based on the\nenvironment the user is logged in (DEMO/PROD). Ex. RM, SM, MP-94072eXXXXXXXXXXXXXXd7ab4fc7a7e8"
        },
        "worksWith": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldConfig"
          },
          "title": "The works_with section can be used to display the sections that are associated with integrations.\nEx: GoogleMeet : {Business:[\"My Meetings\"]}, QuickBooks : {Customers:[\"contacts\",\"companies\"]} , GoogleSearchConsole : {Reports:\"Executive reports\"}\nThis field can be used instead of the existing businesses field to support different, multiple sections as key value pairs utilizing the required fields in FieldConfig type"
        }
      }
    },
    "v1CallIntegrationEndpointResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1APIResponse"
        },
        "requestId": {
          "type": "string",
          "title": "The ID assigned to the request by the platform\nIt can be used to lookup the request in the logs"
        }
      }
    },
    "v1CallVendastaEndpointResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1APIResponse"
        },
        "requestId": {
          "type": "string",
          "title": "The ID assigned to the request by the platform\nIt can be used to lookup the request in the logs"
        }
      }
    },
    "v1ConnectionIdentifier": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string",
          "title": "The UUID of an integration configuration record"
        },
        "integrationType": {
          "type": "string",
          "title": "The type of the integration configuration record. Ex: \"ShopMonkey\"\nSome integrations have multiple records to represent different configurations\nUsing the code allows all configurations to be checked however may result in multiple connections"
        },
        "connectionId": {
          "type": "string",
          "title": "The UUID of a connection record"
        },
        "externalId": {
          "type": "string",
          "description": "The vendor supplied id for the connection to the integration.\nThey are unique per integration."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace that this connection is for, the current options are an account group id or partner id."
        }
      }
    },
    "v1ConnectionMessage": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/v1Severity",
          "title": "INFO, WARNING, ERROR"
        },
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ctaText": {
          "type": "string",
          "title": "Text to display on a call to action button"
        },
        "ctaUrl": {
          "type": "string",
          "title": "Page or site to navigate to when the call to action button is clicked"
        }
      }
    },
    "v1ConnectionMethods": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "OAUTH2",
        "APIKEY",
        "VENDOR_MANAGED",
        "LEGACY_OAUTH"
      ],
      "default": "UNSPECIFIED"
    },
    "v1ConnectionResponse": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/v1ConnectionStatus"
        },
        "label": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomFields"
          }
        },
        "statusLastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "dataLastReceived": {
          "type": "string",
          "format": "date-time"
        },
        "context": {
          "$ref": "#/definitions/v1SupportedContexts"
        },
        "connectionMessages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectionMessage"
          }
        }
      }
    },
    "v1ConnectionStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_STATUS",
        "PRECONNECTED",
        "CONNECTED",
        "DISCONNECTED",
        "DELETED"
      ],
      "default": "UNSPECIFIED_STATUS"
    },
    "v1CreateConnectionResponse": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string"
        }
      }
    },
    "v1CustomFields": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Field"
          }
        }
      }
    },
    "v1EmitEventResponse": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string",
          "title": "The ID of the event that was emitted. It is returned because event_id is optional on the intake so vendors might want to\nhave access to the generated id"
        }
      }
    },
    "v1FieldConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id of the setting"
        },
        "label": {
          "type": "string",
          "title": "label of the setting"
        },
        "placeHolder": {
          "type": "string",
          "title": "place holder for the inputbox for API key based integration"
        },
        "hintText": {
          "type": "string",
          "title": "description for the setting, for special case jobber \"select the trigger to sync customer data:\""
        },
        "fieldType": {
          "$ref": "#/definitions/v1FieldType",
          "title": "type of the setting like checkbox, toggle, password, text, radio ...etc"
        },
        "required": {
          "type": "boolean",
          "title": "for required field"
        },
        "dependents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldConfig"
          },
          "title": "dependents for special case like jobber, dependents: [{id: 'triggerIsClosedJob', required: false, type: 'radio',value: 'false'}]"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/platform_integrationsv1FieldOptions"
          },
          "title": "options for the radio button like jobber, options: [{label: 'When a job is closed', value: 'true'}, {label: 'When a visit is completed', value: 'false'}]"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Actions"
          },
          "title": "button actions of the settings of config page"
        },
        "url": {
          "type": "string",
          "title": "url in instruction of the config page"
        },
        "icon": {
          "type": "string",
          "title": "lock icon for sync setting like automated review request, url icon for instruction, eye icon for password"
        },
        "defaultValue": {
          "description": "default_value The value to use when there is no connection record or the connection record does not have a custom field with this field's id."
        },
        "hidden": {
          "type": "boolean",
          "description": "flag to determine whether we need to show the field in the UI or not."
        },
        "fieldScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FieldScope"
          },
          "description": "fieldScope is the allowed scopes that can view the field in the connection settings page."
        },
        "readonly": {
          "type": "boolean",
          "description": "Readonly allows to enable the password field editable or readonly."
        },
        "writeScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FieldScope"
          },
          "description": "writeScope is the allowed scope that can allow edit access to a field in the connection settings page."
        }
      },
      "title": "added FieldConfig for storing settings of the integration"
    },
    "v1FieldScope": {
      "type": "string",
      "enum": [
        "INTEGRATION_SUPPORT",
        "NAMESPACE_ADMINS",
        "CONNECTING_USER"
      ],
      "default": "INTEGRATION_SUPPORT",
      "description": "- INTEGRATION_SUPPORT: Allows only the support team to have the access\n - NAMESPACE_ADMINS: Allows the namespace admins such as partner admins, sales people & SMB users to have the access\n - CONNECTING_USER: Allows the user who established the connection to have the acess",
      "title": "FieldScope defines scopes for which the field will be visible\nusing enum here because in future we might add more scope types and expand the usecase beyond the fields"
    },
    "v1GetBusinessDataResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The ID for the business that the connection was created for"
        },
        "businessName": {
          "type": "string",
          "title": "The name of the business"
        },
        "countryCode": {
          "type": "string",
          "description": "The two letter country code."
        },
        "regionCode": {
          "type": "string",
          "title": "The code for the top level subdivision within the country (state/province). \nExamples: CA-SK, US-FL, AG-08, AU-NSW"
        },
        "stateCode": {
          "type": "string",
          "title": "The 1-3 letter subdivision code used for mail addresses within the country. \nExamples: SK, FL, 8, NSW"
        },
        "city": {
          "type": "string",
          "title": "The name of the city the business is located in"
        }
      }
    },
    "v1GetConnectionDataResponse": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomFields"
          }
        },
        "status": {
          "$ref": "#/definitions/v1ConnectionStatus"
        },
        "statusLastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "dataLastReceived": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetConnectionRequestFilters": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/v1SupportedContexts",
          "description": "Optional. connections could be filtered based one of these attribute."
        },
        "externalId": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        }
      }
    },
    "v1GetConnectionResponse": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/v1ConnectionStatus"
        },
        "label": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomFields"
          }
        },
        "context": {
          "$ref": "#/definitions/v1SupportedContexts"
        },
        "statusLastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "dataLastReceived": {
          "type": "string",
          "format": "date-time"
        },
        "connectionMessages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectionMessage"
          }
        }
      }
    },
    "v1GetIntegrationResponse": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        },
        "authenticationUrl": {
          "type": "string"
        },
        "tokenUrl": {
          "type": "string"
        },
        "connectionMethod": {
          "$ref": "#/definitions/v1ConnectionMethods"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "longDescription": {
          "type": "string"
        },
        "additionalInfo": {
          "$ref": "#/definitions/v1AdditionalInfo"
        },
        "baseUrl": {
          "type": "string"
        },
        "maxConnections": {
          "type": "string",
          "format": "int64"
        },
        "webhookVerifierToken": {
          "type": "string"
        },
        "supportedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SupportedContexts"
          }
        },
        "fieldExtensionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Contains the ID of a CRM field extension that should be automatically enabled for the namespace when a connection to this integration is created"
        },
        "preconnectFormFields": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "sync setting details of preconnect form for the integration"
        },
        "configPageFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormConfig"
          },
          "title": "sync setting details of config page for the connection"
        },
        "instructions": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "instructions displayed on the config page when the connection is in preconnected status"
        }
      }
    },
    "v1GetMultiIntegrationMarketingResponse": {
      "type": "object",
      "properties": {
        "integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IntegrationMarketingResponse"
          }
        }
      }
    },
    "v1GetMultiVendorConnectionResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorConnection"
          }
        }
      }
    },
    "v1GetVendorConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1VendorConnection"
        }
      }
    },
    "v1HTTPParam": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1IntegrationMarketingResponse": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "longDescription": {
          "type": "string"
        },
        "additionalInfo": {
          "$ref": "#/definitions/v1AdditionalInfo"
        },
        "maxConnections": {
          "type": "string",
          "format": "int64"
        },
        "connectionMethod": {
          "$ref": "#/definitions/v1ConnectionMethods"
        },
        "supportedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SupportedContexts"
          }
        },
        "preconnectFormFields": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "sync setting details of preconnect form for the integration"
        },
        "configPageFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormConfig"
          },
          "title": "sync setting details of config page for the connection"
        },
        "instructions": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "instructions displayed on the config page when the connection is in preconnected status"
        }
      }
    },
    "v1IntegrationsFilters": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      }
    },
    "v1ListConnectionRequestFilters": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/v1SupportedContexts",
          "description": "Optional. connections could be filtered based one of these attribute."
        },
        "externalId": {
          "type": "string"
        },
        "integrationId": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        }
      }
    },
    "v1ListConnectionResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectionResponse"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListIntegrationMarketingResponse": {
      "type": "object",
      "properties": {
        "integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IntegrationMarketingResponse"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListIntegrationResponse": {
      "type": "object",
      "properties": {
        "integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetIntegrationResponse"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListVendorConnectionRequestFilters": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "title": "Required The partner id of the vendor that built/owns the integration"
        },
        "integrationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional list of integrations to filter the result to"
        }
      }
    },
    "v1ListVendorConnectionResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorConnection"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ResourceInfo": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceUrl": {
          "type": "string"
        }
      }
    },
    "v1Severity": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_SEVERITY",
        "INFO",
        "WARNING",
        "ERROR"
      ],
      "default": "UNSPECIFIED_SEVERITY"
    },
    "v1SupportedContexts": {
      "type": "string",
      "enum": [
        "PI_CONTEXT_UNSET",
        "PI_CONTEXT_PARTNER",
        "PI_CONTEXT_SMB"
      ],
      "default": "PI_CONTEXT_UNSET"
    },
    "v1UpdateConnectionRequestUpdateFields": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1ConnectionStatus"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomFields"
          }
        },
        "label": {
          "type": "string"
        },
        "context": {
          "$ref": "#/definitions/v1SupportedContexts"
        }
      }
    },
    "v1UpdateIntegrationRequestUpdateFields": {
      "type": "object",
      "properties": {
        "logo": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        },
        "connectionMethod": {
          "$ref": "#/definitions/v1ConnectionMethods"
        },
        "authenticationUrl": {
          "type": "string"
        },
        "tokenUrl": {
          "type": "string"
        },
        "longDescription": {
          "type": "string"
        },
        "additionalInfo": {
          "$ref": "#/definitions/v1AdditionalInfo"
        },
        "baseUrl": {
          "type": "string"
        },
        "maxConnections": {
          "type": "string",
          "format": "int64"
        },
        "webhookVerifierToken": {
          "type": "string"
        },
        "supportedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SupportedContexts"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "fieldExtensionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Contains the ID of a CRM field extension that should be automatically enabled for the namespace when a connection to this integration is created"
        },
        "preconnectFormFields": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "sync setting details of preconnect form for the integration"
        },
        "configPageFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormConfig"
          },
          "title": "sync setting details of config page for the connection"
        },
        "instructions": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "instructions displayed on the config page when the connection is in preconnected status"
        }
      }
    },
    "v1UpdateVendorConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1VendorConnection"
        }
      }
    },
    "v1VendorConnection": {
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string",
          "title": "unique id of the integration"
        },
        "connectionId": {
          "type": "string",
          "title": "unique id of the connection"
        },
        "namespace": {
          "type": "string",
          "title": "ID of the account group or partner that created the connection"
        },
        "userId": {
          "type": "string",
          "title": "User id that created the connection"
        },
        "status": {
          "$ref": "#/definitions/v1ConnectionStatus",
          "title": "Current status of the connection"
        },
        "label": {
          "type": "string",
          "title": "Label for the connection which we will be used in the UI"
        },
        "externalId": {
          "type": "string",
          "title": "Unique identifier of the external system to which the connection is made"
        },
        "customFields": {
          "type": "object",
          "title": "Any custom fields that are specific to a connection"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the connection was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "When the connection was last updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "When the connection was deleted"
        }
      }
    },
    "v1WebsiteInfo": {
      "type": "object",
      "properties": {
        "siteName": {
          "type": "string"
        },
        "siteUrl": {
          "type": "string"
        }
      }
    },
    "v1ApplyConfigurationResponse": {
      "type": "object"
    },
    "v1ConfigurationOwner": {
      "type": "object",
      "properties": {
        "ownerNamespace": {
          "type": "string"
        },
        "ownerNamespaceType": {
          "$ref": "#/definitions/v1OwnerNamespaceType"
        }
      }
    },
    "v1ConfigurationSource": {
      "type": "object",
      "properties": {
        "sourceNamespace": {
          "type": "string"
        },
        "sourceNamespaceType": {
          "$ref": "#/definitions/v1SourceNamespaceType"
        }
      }
    },
    "v1ConfigurationTargetContainer": {
      "type": "object",
      "properties": {
        "targetContainerNamespace": {
          "type": "string"
        },
        "targetContainerNamespaceType": {
          "$ref": "#/definitions/v1TargetContainerNamespaceType"
        }
      }
    },
    "v1ConfigurationVersion": {
      "type": "object",
      "properties": {
        "configurationId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "sourceNamespace": {
          "type": "string"
        },
        "objectTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TypedObjectContainer"
          },
          "title": "object_types is a list of containers of same type of objects included in this version of the configuration"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastDeployedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ConfigurationVersion represents a specific version of a configuration\nEach version contains the state of configuration at a particular point in time"
    },
    "v1CreateConfigurationFromSourceResponse": {
      "type": "object",
      "properties": {
        "configurationId": {
          "type": "string"
        }
      }
    },
    "v1GetConfigurationPreviewDataForSourceResponse": {
      "type": "object",
      "properties": {
        "objectTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TypedObjectContainer"
          }
        }
      }
    },
    "v1ListConfigurationsResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Configuration"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ObjectApplicationSelection": {
      "type": "object",
      "properties": {
        "configurationObjectId": {
          "type": "string"
        },
        "strategy": {
          "$ref": "#/definitions/v1ObjectApplicationStrategy"
        }
      }
    },
    "v1ObjectApplicationStrategy": {
      "type": "string",
      "enum": [
        "OBJECT_APPLICATION_STRATEGY_UNSPECIFIED",
        "OBJECT_APPLICATION_STRATEGY_SKIP_EXISTING",
        "OBJECT_APPLICATION_STRATEGY_OVERWRITE_EXISTING"
      ],
      "default": "OBJECT_APPLICATION_STRATEGY_UNSPECIFIED"
    },
    "v1OwnerNamespaceType": {
      "type": "string",
      "enum": [
        "OWNER_NAMESPACE_UNSPECIFIED",
        "OWNER_NAMESPACE_PARTNER"
      ],
      "default": "OWNER_NAMESPACE_UNSPECIFIED",
      "title": "The type of namespace that owns the configuration\nOnly has OWNER_NAMESPACE_PARTNER indicating that the configuration is owned by a specific partner\nbut could have our org as owner of configurations in future"
    },
    "v1SourceNamespaceType": {
      "type": "string",
      "enum": [
        "SOURCE_NAMESPACE_UNSPECIFIED",
        "SOURCE_NAMESPACE_PARTNER",
        "SOURCE_NAMESPACE_ACCOUNT_GROUP"
      ],
      "default": "SOURCE_NAMESPACE_UNSPECIFIED"
    },
    "v1TargetContainerNamespaceType": {
      "type": "string",
      "enum": [
        "TARGET_CONTAINER_NAMESPACE_UNSPECIFIED",
        "TARGET_CONTAINER_NAMESPACE_ACCOUNT_GROUP",
        "TARGET_CONTAINER_NAMESPACE_GROUP"
      ],
      "default": "TARGET_CONTAINER_NAMESPACE_UNSPECIFIED"
    },
    "v1TypedObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id of the object in their own system"
        },
        "name": {
          "type": "string",
          "title": "name of the object derived from the object's owner service"
        },
        "description": {
          "type": "string",
          "title": "description of the object derived from the object's owner service"
        },
        "link": {
          "type": "string",
          "title": "link to view the object as it is in the source namespace"
        }
      },
      "title": "TypedObject is a single configurable object\nExample : A single automation entity"
    },
    "v1TypedObjectContainer": {
      "type": "object",
      "properties": {
        "typeId": {
          "type": "string"
        },
        "typeName": {
          "type": "string"
        },
        "objects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TypedObject"
          }
        }
      },
      "title": "TypedObjectContainer is a container of same type of objects that are being returned"
    },
    "v1TypedObjectIds": {
      "type": "object",
      "properties": {
        "typeId": {
          "type": "string"
        },
        "typedObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListEventsResponseEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "jsonSchema": {
          "type": "string"
        },
        "jsonExample": {
          "type": "string"
        }
      }
    },
    "v1Enum": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        }
      }
    },
    "v1GetSymbolResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "message": {
          "$ref": "#/definitions/v1Message"
        },
        "enum": {
          "$ref": "#/definitions/v1Enum"
        }
      }
    },
    "v1ListEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListEventsResponseEvent"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListMicroservicesResponse": {
      "type": "object",
      "properties": {
        "microservices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Microservice"
          }
        }
      }
    },
    "v1ListSymbolsResponse": {
      "type": "object",
      "properties": {
        "symbols": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetSymbolResponse"
          }
        }
      }
    },
    "v1Microservice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Environment"
          }
        }
      }
    },
    "v1RPC": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        }
      }
    },
    "v1AAmadoraCreateToDoItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1AAmadoraListToDoItemResponse": {
      "type": "object",
      "properties": {
        "todoItem": {
          "$ref": "#/definitions/v1AAmadoraToDoItem"
        }
      }
    },
    "v1AAmadoraListTodoItemsResponse": {
      "type": "object",
      "properties": {
        "todoItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AAmadoraToDoItem"
          }
        }
      },
      "title": "Get All To Do Items"
    },
    "v1AAmadoraToDoItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "To Do Item"
    },
    "v1AAmadoraUpdateToDoItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1AOlabenjoAddTodoItemResponse": {
      "type": "object",
      "properties": {
        "additemStatus": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1AOlabenjoListTodoItemsResponse": {
      "type": "object",
      "properties": {
        "listtodoItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AOlabenjoToDoItem"
          }
        }
      }
    },
    "v1AOlabenjoToDoItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1AOlabenjoUpdateTodoItemResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1AddAdminLibraryUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "addresponse": {
          "$ref": "#/definitions/v1LibraryAdminUserManangementResponse"
        }
      }
    },
    "v1AddTaxiUserDataResponse": {
      "type": "object",
      "properties": {
        "addtaxiStatus": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1AdminUserManagement": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "v1Adminuserfilter": {
      "type": "object",
      "properties": {
        "mailid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1Adminuserpagingresponse": {
      "type": "object",
      "properties": {
        "adminuserdata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdminUserManagement"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookCheckedOutData": {
      "type": "object",
      "properties": {
        "employeeId": {
          "type": "string"
        },
        "bookId": {
          "type": "string"
        },
        "checkedOutDate": {
          "type": "string",
          "format": "date-time"
        },
        "transactionId": {
          "type": "string"
        },
        "bookName": {
          "type": "string"
        },
        "returnedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1BookCheckoutResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookDropdownData": {
      "type": "object",
      "properties": {
        "bookId": {
          "type": "string"
        },
        "bookName": {
          "type": "string"
        },
        "quanity": {
          "type": "string"
        }
      }
    },
    "v1BookDropdownResponse": {
      "type": "object",
      "properties": {
        "bookDropdownData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BookDropdownData"
          }
        }
      }
    },
    "v1BookFilterRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "bookname": {
          "type": "string"
        }
      }
    },
    "v1BookFilterResponse": {
      "type": "object",
      "properties": {
        "bookfilterresponse": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BookFilterRequest"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookReturnEditResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookReturnResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookReturnedData": {
      "type": "object",
      "properties": {
        "employeeId": {
          "type": "string"
        },
        "bookId": {
          "type": "string"
        },
        "returnedDate": {
          "type": "string",
          "format": "date-time"
        },
        "transactionId": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "missedDate": {
          "type": "string",
          "format": "date-time"
        },
        "bookName": {
          "type": "string"
        }
      }
    },
    "v1BookmasterAddResponse": {
      "type": "object",
      "properties": {
        "bookmasterresponse": {
          "$ref": "#/definitions/v1BookmasterResponse"
        },
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookmasterEditResponse": {
      "type": "object",
      "properties": {
        "bookmasterresponse": {
          "$ref": "#/definitions/v1BookmasterResponse"
        },
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1BookmasterRequest": {
      "type": "object",
      "properties": {
        "bookid": {
          "type": "string"
        },
        "bookname": {
          "type": "string"
        },
        "bookauthor": {
          "type": "string"
        },
        "procureBookDate": {
          "type": "string",
          "format": "date-time"
        },
        "category": {
          "type": "string"
        },
        "createdby": {
          "type": "string"
        },
        "modifiedby": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "qrcodeauth": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "purchasedquantity": {
          "type": "string"
        }
      }
    },
    "v1BookmasterResponse": {
      "type": "object",
      "properties": {
        "bookid": {
          "type": "string"
        },
        "bookname": {
          "type": "string"
        },
        "bookauthor": {
          "type": "string"
        },
        "procureBookDate": {
          "type": "string",
          "format": "date-time"
        },
        "category": {
          "type": "string"
        },
        "createdby": {
          "type": "string"
        },
        "modifiedby": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "qrcodeauth": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "purchasedquantity": {
          "type": "string"
        },
        "missedquantity": {
          "type": "string"
        }
      }
    },
    "v1Bookmasterdeleteresponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      }
    },
    "v1Bookmasterfilter": {
      "type": "object",
      "properties": {
        "bookname": {
          "type": "string"
        },
        "bookid": {
          "type": "string"
        },
        "bookauthor": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      }
    },
    "v1Bookmastergetbyidresponse": {
      "type": "object",
      "properties": {
        "bookmasterresponse": {
          "$ref": "#/definitions/v1BookmasterResponse"
        },
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1Bookmasterpagingresponse": {
      "type": "object",
      "properties": {
        "bookmasterdata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BookmasterResponse"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1Bookmastersortfield": {
      "type": "string",
      "enum": [
        "BOOKNAME",
        "BOOKAUTHOR",
        "CATEGORY",
        "PROCUREDATE"
      ],
      "default": "BOOKNAME"
    },
    "v1Bookmastersortoptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1SortDirection"
        },
        "field": {
          "$ref": "#/definitions/v1Bookmastersortfield"
        }
      }
    },
    "v1Bookmastersummaryresponse": {
      "type": "object",
      "properties": {
        "totalbooks": {
          "type": "string",
          "format": "int64"
        },
        "availablebooks": {
          "type": "string",
          "format": "int64"
        },
        "checkedoutbooks": {
          "type": "string",
          "format": "int64"
        },
        "overduebooks": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CCeleokaforCreateTodoResponse": {
      "type": "object",
      "properties": {
        "todoItem": {
          "$ref": "#/definitions/v1CCeleokaforTodoListItem"
        }
      }
    },
    "v1CCeleokaforDeleteTodoResponse": {
      "type": "object",
      "properties": {
        "todoItem": {
          "$ref": "#/definitions/v1CCeleokaforTodoListItem"
        }
      }
    },
    "v1CCeleokaforGetAllTodosResponse": {
      "type": "object",
      "properties": {
        "todoItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CCeleokaforTodoListItem"
          }
        }
      }
    },
    "v1CCeleokaforTodoListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CCeleokaforUpdateTodoResponse": {
      "type": "object",
      "properties": {
        "todoItem": {
          "$ref": "#/definitions/v1CCeleokaforTodoListItem"
        }
      }
    },
    "v1DeleteAdminLibraryUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1DeleteTaxiUserDataResponse": {
      "type": "object",
      "properties": {
        "deleteStatus": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1EditAdminLibraryUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "editresponse": {
          "$ref": "#/definitions/v1LibraryAdminUserManangementResponse"
        }
      }
    },
    "v1EditTaxiUserDataResponse": {
      "type": "object",
      "properties": {
        "edittaxiStatus": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1FilterTaxiUserData": {
      "type": "object",
      "properties": {
        "empname": {
          "type": "string"
        },
        "licenseno": {
          "type": "string"
        },
        "phoneno": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GPAddTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1GPTaskItem"
        }
      }
    },
    "v1GPDeleteTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1GPTaskItem"
        }
      }
    },
    "v1GPGetAllTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GPTaskItem"
          }
        }
      }
    },
    "v1GPGetTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1GPTaskItem"
        }
      }
    },
    "v1GPTaskItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1TaskState"
        },
        "deleteTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GPUpdateTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1GPTaskItem"
        }
      }
    },
    "v1GetActiveUserListResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetActiveUserListResponseData"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1GetActiveUserListResponseData": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "greetingName": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        },
        "emailVerified": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastLogin": {
          "type": "string"
        },
        "publicKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetUserListId"
          }
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "v1GetBusinessQuestionsAnswersResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID is required"
        },
        "answers": {
          "$ref": "#/definitions/v1QuestionsAnswers"
        }
      }
    },
    "v1GetByIdTaxiUserDataResponse": {
      "type": "object",
      "properties": {
        "taxidatabyid": {
          "$ref": "#/definitions/v1TaxiUserData"
        }
      }
    },
    "v1GetByMailIdAdminLibraryUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "responsedata": {
          "$ref": "#/definitions/v1LibraryAdminUserManangementResponse"
        }
      }
    },
    "v1GetCheckedOutDataResponse": {
      "type": "object",
      "properties": {
        "bookCheckedOutData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BookCheckedOutData"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1GetReturnedDataResponse": {
      "type": "object",
      "properties": {
        "bookReturnData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BookReturnedData"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1GetTaxiUserDataPaginationResponse": {
      "type": "object",
      "properties": {
        "taxarrUserdata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxiUserData"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1GetUserListId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "v1HGoyalGetTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HGoyalTask"
          }
        }
      }
    },
    "v1HGoyalTask": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "taskDescription": {
          "type": "string"
        },
        "taskStatus": {
          "type": "string"
        },
        "taskDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "taskCompleted": {
          "type": "boolean"
        }
      }
    },
    "v1IAntoshCreateTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1IAntoshDeleteTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1IAntoshGetTaskResponse": {
      "type": "object",
      "properties": {
        "getTask": {
          "$ref": "#/definitions/v1IAntoshTask"
        }
      }
    },
    "v1IAntoshListTasksResponse": {
      "type": "object",
      "properties": {
        "listTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IAntoshTask"
          }
        }
      },
      "title": "To Get All Tasks"
    },
    "v1IAntoshTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1IAntoshUpdateTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1KOdlandCreateTaskResponse": {
      "type": "object",
      "properties": {
        "createStatus": {
          "type": "boolean"
        },
        "taskId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1KOdlandDeleteTaskResponse": {
      "type": "object",
      "properties": {
        "deleteStatus": {
          "type": "boolean"
        },
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1KOdlandGetTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KOdlandTask"
          }
        }
      }
    },
    "v1KOdlandTask": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskTitle": {
          "type": "string"
        },
        "taskDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "taskDescription": {
          "type": "string"
        },
        "taskCompleted": {
          "type": "boolean"
        },
        "taskDeleted": {
          "type": "boolean"
        }
      }
    },
    "v1KOdlandUpdateTaskResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1KSinghSandhuCreateTaskResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Indicates if the task creation was successful"
        },
        "id": {
          "type": "string",
          "title": "The ID of the created task"
        }
      },
      "title": "the response message for creating a task"
    },
    "v1KSinghSandhuDeleteTaskResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Indicates if the task deletion was successful"
        }
      }
    },
    "v1KSinghSandhuListTaskResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KSinghSandhuTask"
          },
          "title": "A list of tasks"
        }
      },
      "title": "the response message for listing tasks"
    },
    "v1KSinghSandhuTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Unique identifier for the task"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "title": "Due date of the task"
        },
        "isCompleted": {
          "type": "boolean",
          "title": "Status of the task (completed or not)"
        },
        "isDeleted": {
          "type": "boolean",
          "title": "Indicates if the task has been deleted"
        }
      }
    },
    "v1KSinghSandhuUpdateTaskResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Indicates if the task update was successful"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1LibraryAdminUserManangementRequest": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        },
        "pageAccess": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pageaccess"
          }
        }
      }
    },
    "v1LibraryAdminUserManangementResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        },
        "pageAccess": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pageaccess"
          }
        }
      }
    },
    "v1NChaudharyCreateItemResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1NChaudharyDeleteItemResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1NChaudharyGetItemResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1NChaudharyToDoItem"
        }
      }
    },
    "v1NChaudharyListAllResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NChaudharyToDoItem"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1NChaudharyToDoItem": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ToDo item model"
    },
    "v1NChaudharyUpdateItemResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1NTamrazyanCreateToDoItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1NTamrazyanGetToDoItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1NTamrazyanToDoItem"
        }
      }
    },
    "v1NTamrazyanListToDoItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NTamrazyanToDoItem"
          }
        }
      }
    },
    "v1NTamrazyanRemoveToDoItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1NTamrazyanToDoItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1NTamrazyanUpdateToDoItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1Pageaccess": {
      "type": "object",
      "properties": {
        "pagetitle": {
          "type": "string"
        },
        "create": {
          "type": "boolean"
        },
        "update": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "view": {
          "type": "boolean"
        }
      }
    },
    "v1QuestionsAnswers": {
      "type": "object",
      "properties": {
        "whatIsBestTimeOfDayToContact": {
          "type": "string"
        },
        "isThisPlaceWheelchairAccessible": {
          "type": "string"
        }
      }
    },
    "v1SPrajapatiCreateToDoResponse": {
      "type": "object",
      "properties": {
        "todo": {
          "$ref": "#/definitions/v1SPrajapatiToDo"
        },
        "todoId": {
          "type": "string"
        }
      }
    },
    "v1SPrajapatiDeleteToDoResponse": {
      "type": "object",
      "properties": {
        "todoId": {
          "type": "string"
        }
      }
    },
    "v1SPrajapatiListAllTodosResponse": {
      "type": "object",
      "properties": {
        "todos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SPrajapatiToDo"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "v1SPrajapatiToDo": {
      "type": "object",
      "properties": {
        "todoId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "duedate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SPrajapatiUpdateToDoResponse": {
      "type": "object",
      "properties": {
        "todo": {
          "$ref": "#/definitions/v1SPrajapatiToDo"
        }
      }
    },
    "v1SRCreateTaskResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1SRDeleteTaskResponse": {
      "type": "object",
      "properties": {
        "deletedValue": {
          "type": "string"
        }
      }
    },
    "v1SRListTasksResponse": {
      "type": "object",
      "properties": {
        "taskList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        }
      }
    },
    "v1SRUpdateTaskResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      }
    },
    "v1TaskState": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "NOT_STARTED",
        "IN_PROGRESS",
        "COMPLETED"
      ],
      "default": "UNKNOWN"
    },
    "v1TaxiUserData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "empcode": {
          "type": "string"
        },
        "empname": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "licenseno": {
          "type": "string"
        },
        "phoneno": {
          "type": "string",
          "format": "int64"
        },
        "experience": {
          "type": "string",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "v1TransactionReportData": {
      "type": "object",
      "properties": {
        "employeeId": {
          "type": "string"
        },
        "bookId": {
          "type": "string"
        },
        "checkedOutDate": {
          "type": "string",
          "format": "date-time",
          "title": "string action=3;"
        },
        "transactionId": {
          "type": "string",
          "title": "google.protobuf.Timestamp returned_date=5;\n string over_due=6;"
        },
        "bookName": {
          "type": "string"
        },
        "returnedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1TransactionReportResponse": {
      "type": "object",
      "properties": {
        "transactionReportData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TransactionReportData"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1UserFilter": {
      "type": "object",
      "properties": {
        "subjectTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchTerms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UserSortData": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "format": "int64"
        },
        "direction": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ValidateUserWithIamResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ContentContentType": {
      "type": "string",
      "enum": [
        "TEXT_PLAIN",
        "TEXT_HTML"
      ],
      "default": "TEXT_PLAIN"
    },
    "EmailEventBucketEventRollup": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "the date for the rollup"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "the quantity of the Email Events for the given date"
        }
      }
    },
    "GetAttributeEventStatsResponseEventStats": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/v1EventType",
          "title": "Event type"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "Count of events for the event type"
        },
        "uniqueCount": {
          "type": "string",
          "format": "int64",
          "title": "Count of unique events for the event type"
        },
        "uniqueRecipients": {
          "type": "string",
          "format": "int64",
          "title": "Count of unique recipients for the event type"
        }
      },
      "title": "The Event Stats"
    },
    "LinkClickStatsRecipient": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "title": "recipient email address"
        }
      }
    },
    "ListEmailEventsRequestListEmailEventsFilters": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "title": "Email ID to list events for"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner context the email event is for"
        },
        "businessId": {
          "type": "string",
          "title": "The business context the email event is for"
        }
      },
      "title": "Filters to filter the list of email events on"
    },
    "ListEmailsRequestListEmailsFilters": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "dateRange": {
          "$ref": "#/definitions/vendastatypesDateRange"
        },
        "espId": {
          "type": "string",
          "title": "Deprecated. Use esp_ids instead"
        },
        "partnerId": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "espIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subuserId": {
          "type": "string"
        }
      }
    },
    "emailv1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "To provide options for the paged request"
    },
    "emailv1Status": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender"
        },
        "recipientEmail": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1RecipientStatusEnum"
        },
        "infractionCount": {
          "type": "string",
          "format": "int64"
        },
        "bounceExpiry": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "unsubscribed": {
          "type": "boolean"
        }
      }
    },
    "v1AttachmentInfo": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "contentId": {
          "type": "string"
        },
        "charset": {
          "type": "string"
        },
        "storageObjectName": {
          "type": "string"
        },
        "storageObjectUrl": {
          "type": "string"
        }
      }
    },
    "v1BatchSearchRecipientStatusResponse": {
      "type": "object",
      "properties": {
        "recipientStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/emailv1Status"
          }
        }
      }
    },
    "v1BounceSender": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1BounceSenderType"
        },
        "id": {
          "type": "string",
          "title": "E.g. Partner ID, Account Group ID, or empty for Yesware"
        }
      }
    },
    "v1BounceSenderType": {
      "type": "string",
      "enum": [
        "UNBOUNCE_SENDER_TYPE_INVALID",
        "UNBOUNCE_SENDER_TYPE_PARTNER",
        "UNBOUNCE_SENDER_TYPE_BUSINESS",
        "UNBOUNCE_SENDER_TYPE_YESWARE"
      ],
      "default": "UNBOUNCE_SENDER_TYPE_INVALID",
      "description": "Unbounce sender type is used instead of SenderType because the unbounce\nRPC can also be used for interacting with Yesware's SendGrid account."
    },
    "v1Bucket": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "string",
          "title": "The name of the bucket"
        },
        "attribute": {
          "$ref": "#/definitions/v1Attribute",
          "title": "A key/value attribute to get data for"
        }
      },
      "title": "A Bucket to get emails by"
    },
    "v1ChangeEmailDomainResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1ChangeEmailDomainStatus"
        }
      }
    },
    "v1ChangeEmailDomainStatus": {
      "type": "string",
      "enum": [
        "CHANGE_EMAIL_DOMAIN_STATUS_INVALID",
        "CHANGE_EMAIL_DOMAIN_STATUS_ACCEPTED",
        "CHANGE_EMAIL_DOMAIN_STATUS_PENDING"
      ],
      "default": "CHANGE_EMAIL_DOMAIN_STATUS_INVALID"
    },
    "v1ContactParticipant": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1Content": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1ContentType",
          "title": "type of content"
        },
        "value": {
          "type": "string",
          "title": "value of that content"
        }
      },
      "title": "A content for use in an email message"
    },
    "v1CreateBlockResponse": {
      "type": "object",
      "properties": {
        "blockType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateInboundMessageMappingResponse": {
      "type": "object",
      "properties": {
        "mappingId": {
          "type": "string"
        }
      }
    },
    "v1CustomSender": {
      "type": "object",
      "properties": {
        "customEmailUsername": {
          "type": "string",
          "title": "The custom user name for the email address. ie; hello in hello@world.com"
        },
        "name": {
          "type": "string",
          "title": "The name to send from"
        },
        "replyTo": {
          "type": "string",
          "title": "The email replies should send to"
        }
      }
    },
    "v1EmailDomain": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Which Partner ID this record is scoped to (if applicable)"
        },
        "businessId": {
          "type": "string",
          "title": "Which Business ID this record is scoped to (if applicable)"
        },
        "domain": {
          "type": "string",
          "title": "Which domain this record is scope to"
        },
        "mail": {
          "$ref": "#/definitions/v1Record",
          "title": "The DNS Record for Sendgrid"
        },
        "dkim1": {
          "$ref": "#/definitions/v1Record",
          "title": "The first DKIM CNAME record"
        },
        "dkim2": {
          "$ref": "#/definitions/v1Record",
          "title": "The second dkim CNAME record"
        },
        "apiKey": {
          "type": "string",
          "title": "The SendGrid API key"
        },
        "subUserId": {
          "type": "string",
          "title": "The SendGrid SubUser ID"
        },
        "applicationId": {
          "type": "string",
          "title": "The Application Name for this Key"
        },
        "domainId": {
          "type": "string",
          "title": "The SendGrid Domain ID"
        },
        "sendAsEmail": {
          "type": "string",
          "title": "The custom email to be used when sending from this domain"
        },
        "sendAsName": {
          "type": "string",
          "title": "The custom name to be used when sending from this domain"
        },
        "dmarc": {
          "$ref": "#/definitions/v1Record",
          "title": "The DMARC record for this domain"
        }
      }
    },
    "v1EmailEvent": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "title": "A unique identifier for the email this event is for"
        },
        "eventId": {
          "type": "string",
          "title": "A unique identifier for the event"
        },
        "eventType": {
          "$ref": "#/definitions/v1EventType",
          "title": "The type of event"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "title": "The time of this event"
        },
        "ipAddress": {
          "type": "string",
          "title": "IP address the event originated from, if applicable"
        },
        "userAgent": {
          "type": "string",
          "title": "The user agent the event originated from, if applicable"
        },
        "urlClicked": {
          "type": "string",
          "title": "The URL clicked by the user"
        },
        "reason": {
          "type": "string",
          "title": "The \"reason\" associated to an event"
        },
        "urlClickedNormalized": {
          "type": "string",
          "title": "The normalized URL clicked by the user"
        },
        "emailAddress": {
          "type": "string",
          "title": "The email address of the user"
        }
      },
      "title": "An email event"
    },
    "v1EmailEventBucket": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "string",
          "title": "The name of the bucket"
        },
        "eventRollup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmailEventBucketEventRollup"
          },
          "description": "The Events rolled up into daily counts."
        }
      }
    },
    "v1EmailEventFilter": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The partner context the email event is for."
        },
        "marketId": {
          "type": "string",
          "description": "The market context - under the partner - the email event is for."
        },
        "notificationTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NotificationType"
          },
          "title": "The notification type list to filter by"
        },
        "eventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventType"
          },
          "title": "The event type list to filter by"
        },
        "dateRange": {
          "$ref": "#/definitions/vendastatypesDateRange",
          "title": "the date range to filter the data by"
        }
      }
    },
    "v1EmailMessage": {
      "type": "object",
      "properties": {
        "to": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "Participants to deliver the message to"
        },
        "cc": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "Participants who should be cc'd on the message"
        },
        "bcc": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "Participants who should be bcc'd on the message"
        },
        "from": {
          "$ref": "#/definitions/v1Participant",
          "title": "Participant whom the message is from"
        },
        "replyTo": {
          "$ref": "#/definitions/v1Participant",
          "title": "Participant whom the message's replies should go to"
        },
        "subject": {
          "type": "string",
          "title": "Subject of the message"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Content"
          },
          "title": "Content of the email in one or more types"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "Any number of attributes to attach to the message that will also be attached to resulting email events"
        },
        "emailId": {
          "type": "string",
          "title": "A unique identifier for the email"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "The time the email was sent"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Header"
          },
          "title": "Email headers"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GCSAttachment"
          },
          "title": "Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider"
        },
        "urlAttachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1URLAttachment"
          },
          "title": "Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider"
        },
        "serviceProviderInfo": {
          "$ref": "#/definitions/v1ServiceProviderInfo",
          "title": "Info for the Service Provider"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Links"
          },
          "title": "Info required to track individual links within an email"
        },
        "originUserId": {
          "type": "string",
          "title": "The ID of the user who sent the email (which can be a service account)"
        }
      },
      "title": "An email message"
    },
    "v1EmailMessageV2": {
      "type": "object",
      "properties": {
        "to": {
          "$ref": "#/definitions/v1UserParticipant",
          "title": "Participants to deliver the message to"
        },
        "from": {
          "$ref": "#/definitions/v1Participant",
          "title": "Participant whom the message is from"
        },
        "replyTo": {
          "$ref": "#/definitions/v1Participant",
          "title": "Participant whom the message's replies should go to"
        },
        "subject": {
          "type": "string",
          "title": "Subject of the message"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Content"
          },
          "title": "Content of the email in one or more types"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "Any number of attributes to attach to the message that will also be attached to resulting email events"
        },
        "emailId": {
          "type": "string",
          "title": "A unique identifier for the email"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "The time the email was sent"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Header"
          },
          "title": "Email headers"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GCSAttachment"
          },
          "title": "Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider"
        },
        "urlAttachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1URLAttachment"
          },
          "title": "Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider"
        },
        "serviceProviderInfo": {
          "$ref": "#/definitions/v1ServiceProviderInfo",
          "title": "Info for the Service Provider"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Links"
          },
          "title": "Info required to track individual links within an email"
        }
      }
    },
    "v1EmailQueueStatus": {
      "type": "string",
      "enum": [
        "EMAIL_QUEUE_STATUS_UNSPECIFIED",
        "EMAIL_QUEUE_STATUS_RUNNING",
        "EMAIL_QUEUE_STATUS_DISABLED"
      ],
      "default": "EMAIL_QUEUE_STATUS_UNSPECIFIED"
    },
    "v1EmailWithCustomDomainMessage": {
      "type": "object",
      "properties": {
        "to": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "Participants to deliver the message to"
        },
        "cc": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "Participants who should be cc'd on the message"
        },
        "bcc": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "Participants who should be bcc'd on the message"
        },
        "replyTo": {
          "$ref": "#/definitions/v1Participant",
          "title": "Participant whom the message's replies should go to"
        },
        "subject": {
          "type": "string",
          "title": "Subject of the message"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Content"
          },
          "title": "Content of the email in one or more types"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "Any number of attributes to attach to the message that will also be attached to resulting email events"
        },
        "emailId": {
          "type": "string",
          "title": "A unique identifier for the email"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "The time the email was sent"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Header"
          },
          "title": "Email headers"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GCSAttachment"
          },
          "title": "Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider"
        },
        "urlAttachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1URLAttachment"
          },
          "title": "Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider"
        }
      }
    },
    "v1Envelope": {
      "type": "object",
      "properties": {
        "toField": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fromField": {
          "type": "string"
        }
      },
      "title": "An email envelope contents"
    },
    "v1GCSAttachment": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "google cloud services storage bucket where the file is located"
        },
        "filename": {
          "type": "string",
          "title": "filename for the file to be attached. This can look like a /path/to/file"
        },
        "attachedFilename": {
          "type": "string",
          "title": "attached_filename is the intended name of this attachment in the email"
        }
      }
    },
    "v1GetAttributeEventLinkStatsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkStats"
          },
          "title": "The list of link stats"
        }
      },
      "title": "Response for the GetAttributeEventLinkStats RPC"
    },
    "v1GetAttributeEventStatsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetAttributeEventStatsResponseEventStats"
          },
          "title": "The list of event stats"
        }
      },
      "title": "Response for the GetAttributeEventStats RPC"
    },
    "v1GetBlockResponse": {
      "type": "object",
      "properties": {
        "blockType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "conditions": {
          "type": "string"
        }
      }
    },
    "v1GetBouncedRecipientResponse": {
      "type": "object",
      "properties": {
        "recipientEmail": {
          "type": "string",
          "title": "returns email of bounced recipient, if the recipient is bounced (else empty string)"
        }
      }
    },
    "v1GetCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          }
        }
      }
    },
    "v1GetCategoryPreferencesResponse": {
      "type": "object",
      "properties": {
        "optedInEmailCategoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailPreferenceInitialized": {
          "type": "boolean"
        }
      }
    },
    "v1GetDefaultDomainResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        }
      }
    },
    "v1GetEmailDomainResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/v1EmailDomain"
        }
      }
    },
    "v1GetEmailQueuesStatusResponse": {
      "type": "object",
      "properties": {
        "running": {
          "type": "boolean"
        }
      }
    },
    "v1GetInboundMessageMappingResponse": {
      "type": "object",
      "properties": {
        "inboundMessageMapping": {
          "$ref": "#/definitions/v1InboundMessageMapping"
        }
      }
    },
    "v1GetInboundMessageResponse": {
      "type": "object",
      "properties": {
        "inboundMessage": {
          "$ref": "#/definitions/v1InboundMessage"
        }
      }
    },
    "v1GetMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/v1Message"
        }
      },
      "title": "Response to a request to get a message"
    },
    "v1GetMultiEmailRollupsResponse": {
      "type": "object",
      "properties": {
        "emailRollups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailEventBucket"
          },
          "title": "a list of EmailEventBucket by the bucket name"
        }
      }
    },
    "v1GetMultiMessageResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailMessage"
          }
        }
      }
    },
    "v1GetMultiPartnerEmailQuotaResponse": {
      "type": "object",
      "properties": {
        "partnerEmailQuotas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerEmailQuota"
          },
          "title": "Entities"
        }
      }
    },
    "v1GetPendingEmailDomainResponse": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType",
          "title": "The type of sender that this request is being made on behalf of (e.g. business, partner)"
        },
        "senderId": {
          "type": "string",
          "title": "The ID of specific sender that this request is being made on behalf of (e.g. account group ID, partner ID)"
        },
        "sendFromDomain": {
          "type": "string",
          "title": "the domain to send emails from"
        },
        "targetSpf": {
          "type": "string",
          "title": "the SPF record that is desired on the DNS records"
        },
        "currentSpf": {
          "type": "string",
          "title": "the SPF record that is most recently found on the DNS records"
        },
        "sendFromUsername": {
          "type": "string",
          "title": "The username to send emails from (e.g. for \"test@example.com\", this would be \"test\")"
        },
        "targets": {
          "$ref": "#/definitions/v1GetPendingEmailDomainTargetCNameRecords",
          "title": "The CName targets to set on the domain before it can be used in the platform"
        }
      }
    },
    "v1GetPendingEmailDomainTargetCNameRecords": {
      "type": "object",
      "properties": {
        "mailSubdomain": {
          "type": "string"
        },
        "mailValue": {
          "type": "string"
        },
        "dkim1Subdomain": {
          "type": "string"
        },
        "dkim1Value": {
          "type": "string"
        },
        "dkim2Subdomain": {
          "type": "string"
        },
        "dkim2Value": {
          "type": "string"
        },
        "dmarcSubdomain": {
          "type": "string"
        },
        "dmarcValue": {
          "type": "string"
        }
      }
    },
    "v1GetReplyEmailResponse": {
      "type": "object",
      "properties": {
        "replyAddress": {
          "type": "string",
          "title": "The reply address of owner (e.g. \"AG-1234, CONV-123, VUNI, etc\")"
        }
      }
    },
    "v1GetSenderInfoResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "The domain name (e.g. example.com) that this sender prefers to use for sending platform emails on their behalf"
        },
        "isPlatformAuthorized": {
          "type": "boolean",
          "description": "A boolean that is only true if the sender has installed our DKIM records on their domain\nUnauthorized domains are likely to land in spam and put our platform at risk of being block-listed."
        },
        "isDefaultForSenderType": {
          "type": "boolean",
          "description": "A boolean that is true if this is a domain that is owned by the platform, rather than the sender."
        },
        "preferredEmailUsername": {
          "type": "string",
          "title": "The username (e.g. -->this<--@example.com) that this sender prefers to use for sending platform emails on their behalf"
        },
        "preferredEmailDisplayName": {
          "type": "string",
          "title": "The display name (e.g. Joe Smith) that this sender prefers to use for sending platform emails on their behalf"
        },
        "preferredReplyToEmailAddress": {
          "type": "string",
          "description": "The reply-to email that this sender prefers. This will not necessarily use the same domain."
        }
      }
    },
    "v1GetUnsubscribeLinkResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "recipientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetUnsubscribedRecipientResponse": {
      "type": "object",
      "properties": {
        "recipientEmail": {
          "type": "string",
          "title": "The recipient's email should be included in the response if the recipient is currently unsubscribed, otherwise an empty string and a NotFound error should be returned"
        }
      }
    },
    "v1InboundMessage": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "title": "the email ID of the inbound message"
        },
        "headers": {
          "type": "string",
          "title": "the headers of the email"
        },
        "dkim": {
          "type": "string",
          "title": "the verification results of any DKIM and domain keys signatures in the message"
        },
        "contentIds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "the identifiers for the attachments of an email"
        },
        "toField": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Participant"
          },
          "title": "the email addresses of recipients"
        },
        "fromField": {
          "$ref": "#/definitions/v1Participant",
          "title": "the sender email address"
        },
        "contentText": {
          "type": "string",
          "title": "the email body in plaintext format"
        },
        "contentHtml": {
          "type": "string",
          "title": "the body in HTML format"
        },
        "senderIp": {
          "type": "string",
          "title": "the ip address of sender"
        },
        "spamReport": {
          "type": "string",
          "title": "the Spam Assassin's spam report"
        },
        "envelope": {
          "$ref": "#/definitions/v1Envelope",
          "title": "the SMTP envelope information"
        },
        "attachments": {
          "type": "integer",
          "format": "int32",
          "title": "the number of attachments"
        },
        "attachmentInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AttachmentInfo"
          },
          "title": "the attachment info"
        },
        "subject": {
          "type": "string",
          "title": "the subject line of an email"
        },
        "spamScore": {
          "type": "number",
          "format": "float",
          "title": "the Spam Assassin's rating for whether or not this is spam"
        },
        "charsets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "the character sets of the field extracted from the message"
        },
        "spf": {
          "type": "string",
          "title": "the results of the Sender Policy Framework verification of the message sender and receiving IP address"
        },
        "rawMessage": {
          "type": "string",
          "title": "the original raw email message that can be used for re-parsing"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "the creation time of the email message"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "the updated time of the email message"
        }
      }
    },
    "v1InboundMessageMapping": {
      "type": "object",
      "properties": {
        "mappingId": {
          "type": "string",
          "title": "the mapping ID of the record owner"
        },
        "appNamespace": {
          "type": "string",
          "title": "The app namespace to use for this mapping. (e.g. \"Inbox, CRM, etc\")"
        },
        "idempotencyKey": {
          "type": "string",
          "title": "The idemopotency key, if provided, will be used as part of the hash for determining the uniqueness of a mapping record. (e.g. \"AG-1234, CONV-123, VUNI, etc\")"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "description": "The attribute arguments to use for this mapping."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "the creation time of the inbound message mapping"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "the updated time of the inbound message mapping"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "the deleted time of the inbound message mapping"
        }
      }
    },
    "v1InboundMessageMappingOptions": {
      "type": "object",
      "properties": {
        "appNamespace": {
          "type": "string",
          "title": "The app namespace to use for this mapping. (e.g. \"Inbox, crm, etc\")"
        },
        "ownerId": {
          "type": "string",
          "title": "The owner ID to for this mapping. (e.g. \"AG-1234, CONV-123, VUNI, MESSAGE-123, etc\")"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "description": "The attribute arguments to use for this mapping."
        }
      },
      "description": "InboundMessageMappingOptions is used to map the inbound message to a specific app and owner."
    },
    "v1LinkClickStats": {
      "type": "object",
      "properties": {
        "recipient": {
          "$ref": "#/definitions/LinkClickStatsRecipient",
          "title": "The recipient"
        },
        "recentDate": {
          "type": "string",
          "format": "date-time",
          "title": "The recent click date"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The number  of clicks"
        }
      }
    },
    "v1Links": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "original url used in the email"
        },
        "normalizedUrl": {
          "type": "string",
          "title": "normalized version used to identify the link when sent with templated content"
        }
      }
    },
    "v1ListAllDomainsResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SenderDomain"
          },
          "description": "The set of all domains available for this sender, including \"primary\" and any pending domains."
        }
      }
    },
    "v1ListEmailEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailEvent"
          },
          "title": "The email events matching the lookup query"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "description": "Metadata about the paging\nDeprecated: This data is no longer provided. Use cursor."
        },
        "nextCursor": {
          "type": "string",
          "title": "Cursor for fetching an additional page of results"
        }
      },
      "title": "Response containing a list of email events and paging metadata"
    },
    "v1ListEmailsResponse": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailMessage"
          },
          "title": "The email messages matching the list query"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging metadata"
        }
      }
    },
    "v1ListEventsForAttributesResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailEvent"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListLinkClickActivityForAttributeRequestPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "v1ListLinkClickActivityForAttributeResponse": {
      "type": "object",
      "properties": {
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkClickStats"
          }
        }
      }
    },
    "v1ListSendGridSubUserReputationsResponse": {
      "type": "object",
      "properties": {
        "reputations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SendGridSubUserReputation"
          }
        },
        "nextCursor": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListSendGridTeammatesResponse": {
      "type": "object",
      "properties": {
        "teammates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SendGridTeammate"
          }
        }
      }
    },
    "v1PartnerEmailQuota": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of Partner"
        },
        "dailyQuota": {
          "type": "string",
          "format": "int64",
          "title": "Quota"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Created date"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated date"
        }
      }
    },
    "v1PartnerEmailQuotaMutation": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of Partner"
        },
        "dailyQuota": {
          "type": "string",
          "format": "int64",
          "title": "Quota"
        }
      },
      "title": "Entity and values to upsert"
    },
    "v1RecipientStatusEnum": {
      "type": "string",
      "enum": [
        "RECIPIENT_STATUS_INVALID",
        "RECIPIENT_STATUS_HARD",
        "RECIPIENT_STATUS_SOFT",
        "RECIPIENT_STATUS_UNKNOWN",
        "RECIPIENT_STATUS_RESET",
        "RECIPIENT_STATUS_NOT_BLOCKED"
      ],
      "default": "RECIPIENT_STATUS_INVALID"
    },
    "v1RedirectEmailResponse": {
      "type": "object",
      "properties": {
        "newEmailId": {
          "type": "string"
        }
      }
    },
    "v1SendFromAuthorizedDomainResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        }
      }
    },
    "v1SendGridSubUserReputation": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "reputationPercent": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1SendGridTeammate": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "slackUserName": {
          "type": "string"
        },
        "slackUrl": {
          "type": "string"
        }
      },
      "title": "SendGridTeammate is a person who has a role defined on Vendasta's SendGrid account"
    },
    "v1SendResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        }
      }
    },
    "v1SendV2Response": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        }
      }
    },
    "v1SendWhitelabelEmailToUserResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        }
      }
    },
    "v1SendWithCustomDomainResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "customDomainUsed": {
          "type": "boolean",
          "title": "result of the send. Indicates whether the custom or the fallback was used to send"
        }
      }
    },
    "v1SenderDomain": {
      "type": "object",
      "properties": {
        "sendFromDomain": {
          "type": "string",
          "title": "the domain to send emails from (e.g. for \"test@example.com\", this would be \"example.com\")"
        },
        "targetSpf": {
          "type": "string",
          "title": "the SPF record that is desired on the DNS records"
        },
        "currentSpf": {
          "type": "string",
          "title": "the SPF record that is most recently found on the DNS records"
        },
        "targets": {
          "$ref": "#/definitions/v1GetPendingEmailDomainTargetCNameRecords",
          "title": "The CName targets to set on the domain before it can be used in the platform"
        },
        "isPrimary": {
          "type": "boolean",
          "title": "True if this is the sender's preferred sending address"
        }
      }
    },
    "v1ServiceProviderInfo": {
      "type": "object",
      "properties": {
        "subUserId": {
          "type": "string",
          "title": "subUserID"
        }
      },
      "title": "Info for the service provider"
    },
    "v1URLAttachment": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string",
          "title": "URL pointing to file to be attached"
        },
        "attachedFilename": {
          "type": "string",
          "title": "the intended name of this attachment in the email"
        }
      }
    },
    "v1UserParticipant": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "v1VerifyDefaultDomainMismatch": {
      "type": "object",
      "properties": {
        "dnsRecordType": {
          "type": "string",
          "title": "E.g. CNAME, TXT, A"
        },
        "url": {
          "type": "string"
        },
        "expectedValue": {
          "type": "string"
        },
        "actualValue": {
          "type": "string",
          "description": "The record that was found on the domain. Or empty if no record found."
        },
        "matchedPrefix": {
          "type": "string",
          "description": "If a record was found on the domain, this will be the first \"chunk\" of the\nrecord value that matches the expected value. This helps detect typo errors."
        },
        "matchedSuffix": {
          "type": "string",
          "description": "If a record was found on the domain, this will be the last \"chunk\" of the\nrecord value that matches the expected value. This helps detect typo errors."
        }
      }
    },
    "v1VerifyDefaultDomainResponse": {
      "type": "object",
      "properties": {
        "allRecordsMatch": {
          "type": "boolean"
        },
        "mismatches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VerifyDefaultDomainMismatch"
          }
        }
      }
    },
    "v1VerifyEmailDomainDMARCResponse": {
      "type": "object",
      "properties": {
        "dmarcPass": {
          "type": "boolean"
        },
        "dmarcRecord": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "v1VerifyPendingEmailDomainMismatch": {
      "type": "object",
      "properties": {
        "dnsRecordType": {
          "type": "string",
          "title": "E.g. CNAME, TXT, A"
        },
        "url": {
          "type": "string"
        },
        "expectedValue": {
          "type": "string"
        },
        "actualValue": {
          "type": "string",
          "description": "The record that was found on the domain. Or empty if no record found."
        },
        "matchedPrefix": {
          "type": "string",
          "description": "If a record was found on the domain, this will be the first \"chunk\" of the\nrecord value that matches the expected value. This helps detect typo errors."
        },
        "matchedSuffix": {
          "type": "string",
          "description": "If a record was found on the domain, this will be the last \"chunk\" of the\nrecord value that matches the expected value. This helps detect typo errors."
        }
      }
    },
    "v1VerifyPendingEmailDomainResponse": {
      "type": "object",
      "properties": {
        "allRecordsMatch": {
          "type": "boolean"
        },
        "mismatches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VerifyPendingEmailDomainMismatch"
          }
        }
      }
    },
    "v1WhiteLabelEmailMessage": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "title": "Subject of the message"
        },
        "htmlContent": {
          "type": "string",
          "title": "HTML (primary) content to send in the email"
        },
        "plainTextContent": {
          "type": "string",
          "title": "Plain text (fallback) content to send in the email"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "Any number of attributes to attach to the message that will also be attached to resulting email events"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Links"
          },
          "title": "Info required to track individual links within an email"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GCSAttachment"
          },
          "title": "Attachments information. These represent files stored in GCS that will be added to the email when calling the email service provider"
        },
        "urlAttachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1URLAttachment"
          },
          "title": "Attachments information: These represent attachments referenced by URL to be added to the email when calling the email service provider"
        }
      }
    },
    "v1Brand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the brand"
        },
        "pathNodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The path nodes of the brand"
        },
        "hasAccess": {
          "type": "boolean",
          "title": "Whether or not access is granted"
        },
        "url": {
          "type": "string",
          "title": "The url to the brand"
        }
      },
      "title": "A representation of a brand"
    },
    "v1BrandMetadata": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "The brand's group id (node path)"
        },
        "name": {
          "type": "string",
          "title": "The name of the brand"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp the brand was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp the brand was last updated"
        },
        "locations": {
          "type": "string",
          "format": "int64",
          "title": "The number of account groups associated with the brand"
        }
      }
    },
    "v1FeatureStatuses": {
      "type": "object",
      "properties": {
        "requestReviewPageEnabled": {
          "type": "boolean",
          "title": "request_review_page_enabled denotes whether or not the feature is enabled"
        },
        "requestReviewCardEnabled": {
          "type": "boolean",
          "title": "request_review_card_enabled denotes whether or not the feature is enabled"
        },
        "customerVoiceExecutiveReportEnabled": {
          "type": "boolean",
          "title": "customer_voice_executive_report_enabled denotes whether or not the feature is enabled"
        }
      }
    },
    "v1GetBrandResponse": {
      "type": "object",
      "properties": {
        "brand": {
          "$ref": "#/definitions/v1Brand",
          "title": "The brand matching the given brand path"
        }
      }
    },
    "v1GetLocationsIdsResponse": {
      "type": "object",
      "properties": {
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListBrandsForBusinessResponse": {
      "type": "object",
      "properties": {
        "brands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BrandMetadata"
          },
          "title": "List of brand information"
        }
      }
    },
    "v1ListBrandsMetadataResponse": {
      "type": "object",
      "properties": {
        "brands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BrandMetadata"
          }
        }
      }
    },
    "v1TabStatuses": {
      "type": "object",
      "properties": {
        "reviewsTabEnabled": {
          "type": "boolean",
          "title": "reviews_tab_enabled denotes whether or not the tab is enabled"
        },
        "listingsTabEnabled": {
          "type": "boolean",
          "title": "listings_tab_enabled denotes whether or not the tab is enabled"
        },
        "socialTabEnabled": {
          "type": "boolean",
          "title": "social_tab_enabled denotes whether or not the tab is enabled"
        },
        "insightsTabEnabled": {
          "type": "boolean",
          "title": "insights_tab_enabled denotes whether or not the tab is enabled"
        },
        "mapTabEnabled": {
          "type": "boolean",
          "title": "map_tab_enabled denotes whether or not the tab is enabled"
        },
        "advertisingTabEnabled": {
          "type": "boolean",
          "title": "advertising_tab_enabled denotes whether or not the tab is enabled"
        },
        "reportTabEnabled": {
          "type": "boolean",
          "title": "report_tab_enabled denotes whether or not the tab is enabled"
        },
        "dataExportTabEnabled": {
          "type": "boolean",
          "title": "data_export_tab_enabled denotes whether or not the tab is enabled"
        },
        "websiteTabEnabled": {
          "type": "boolean",
          "title": "website_tab_enabled denotes whether or not the tab is enabled"
        },
        "googleQAndATabEnabled": {
          "type": "boolean",
          "title": "google_q_and_a_tab_enabled denotes whether or not the tab is enabled"
        },
        "keywordTrackingTabEnabled": {
          "type": "boolean",
          "title": "keyword_tracking_tab_enabled denotes whether or not the tab is enabled"
        }
      }
    },
    "v1ListUsersCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Campaign"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "GetMultiListingProfileResponseListingProfileContainer": {
      "type": "object",
      "properties": {
        "listingProfile": {
          "$ref": "#/definitions/v1ListingProfile"
        }
      }
    },
    "HealthCareProfessionalInformationGender": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Female",
        "Male",
        "Other"
      ],
      "default": "NotSpecified"
    },
    "HealthCareProfessionalInformationIsProvider": {
      "type": "string",
      "enum": [
        "IsProviderNotSpecified",
        "IsProviderTrue",
        "IsProviderFalse"
      ],
      "default": "IsProviderNotSpecified"
    },
    "RichDataPaymentMethods": {
      "type": "string",
      "enum": [
        "AMERICAN_EXPRESS",
        "ANDROID_PAY",
        "APPLE_PAY",
        "CASH",
        "CHECK",
        "DEBIT",
        "DINERS_CLUB",
        "DISCOVER",
        "MASTERCARD",
        "PAYPAL",
        "SAMSUNG_PAY",
        "STORE_CARD",
        "TRAVELERS_CHECK",
        "VISA"
      ],
      "default": "AMERICAN_EXPRESS"
    },
    "listing_productsv1Location": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "workNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callTrackingNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/v1Geo"
        },
        "timezone": {
          "type": "string"
        },
        "serviceAreaBusiness": {
          "type": "boolean"
        },
        "serviceArea": {
          "$ref": "#/definitions/v1ServiceArea"
        }
      }
    },
    "v1ActivateAccounts": {
      "type": "object",
      "properties": {
        "activations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activation"
          }
        }
      }
    },
    "v1AddonAttributes": {
      "type": "object",
      "properties": {
        "addonType": {
          "$ref": "#/definitions/v1AddonType"
        },
        "providerType": {
          "$ref": "#/definitions/v1ProviderType",
          "title": "Only applicable to LSP addons. Provider type to provide what provider addon is going to use (Yext or Uberall)"
        },
        "providerPlanId": {
          "type": "string",
          "title": "Only applicable to LSP addons. Provider plan id for uberall plan (numeric) and yext plan (alphanumeric) ids"
        },
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "source_id is only applicable for listing source addons (Twitter, Instagram, etc)"
        }
      }
    },
    "v1AddonType": {
      "type": "string",
      "enum": [
        "ADDON_TYPE_UNSPECIFIED",
        "ADDON_TYPE_LD",
        "ADDON_TYPE_LSP",
        "ADDON_TYPE_YEXT_HEALTHCARE",
        "ADDON_TYPE_BRING_YOUR_OWN_YEXT",
        "ADDON_TYPE_LISTING_SOURCE",
        "ADDON_TYPE_KEYWORD_TRACKING",
        "ADDON_TYPE_LSP_EXTENSION",
        "ADDON_TYPE_YEXT_STANDALONE",
        "ADDON_TYPE_YEXT_FOOD"
      ],
      "default": "ADDON_TYPE_UNSPECIFIED",
      "description": "Used to determine what addon family the addon falls into so we can do things like getting all LSP addon IDs.\n\n - ADDON_TYPE_LD: Listing Distribution addon\n - ADDON_TYPE_LSP: Listing Sync Pro Addon\n - ADDON_TYPE_YEXT_HEALTHCARE: Yext Healthcare addon.  Requires Yext LSP to be active.  Activates a new SKU on Yext in addition to the existing LSP SKU\n - ADDON_TYPE_BRING_YOUR_OWN_YEXT: Addon for specific partners with their own Yext contracts. No action is taken on activation\n - ADDON_TYPE_LISTING_SOURCE: Addon enables access to a specific listing source\n - ADDON_TYPE_KEYWORD_TRACKING: Addon adds additional keywords to Keyword Tracking\n - ADDON_TYPE_LSP_EXTENSION: Addon requires a base LSP product, and changes the active SKU to a different SKU\n - ADDON_TYPE_YEXT_STANDALONE: Addon does not require LSP. Activates the SKU on Yext without affecting existing SKUs\n - ADDON_TYPE_YEXT_FOOD: Yext Food addon.  Requires Yext LSP to be active.  Activates a new SKU on Yext in addition to the existing LSP SKU"
    },
    "v1BingAttribute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Bing attribute in the form \"attributes/is_owned_by_women\""
        },
        "value": {
          "title": "Contains the value of the attribute. This can be of 4 types:\n  bool\n  URL (represented as a string google.protobuf.Value)\n  enum (represented as a string google.protobuf.Value)\n  repeated_enum (represented as a struct google.protobuf.Value)\nhttps://bpprodpublicstorage.blob.core.windows.net/bingplacesapi/BingPlaces_API_Latest.pdf"
        }
      }
    },
    "v1BingAttributeMetaData": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "title": "The name of the Bing Attribute in the form \"attributes/is_owned_by_women\""
        },
        "valueType": {
          "$ref": "#/definitions/v1ValueType"
        },
        "displayName": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "valueDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1BingAttributeMetaDataList": {
      "type": "object",
      "properties": {
        "bingAttributeMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttributeMetaData"
          }
        }
      }
    },
    "v1BingAttributes": {
      "type": "object",
      "properties": {
        "bingAttribute": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttribute"
          }
        }
      }
    },
    "v1BulkConnectLocationsForGoogleUserResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "connections is a map of the Google Business Profile locations that were connected, to the account group they were connected to."
        },
        "locationsNotConnected": {
          "type": "string",
          "description": "locations_not_connected is a list of the GBP locations on the input Google user that were not connected to a social profile."
        }
      }
    },
    "v1BusinessHours": {
      "type": "object",
      "properties": {
        "hoursTypeId": {
          "type": "string",
          "description": "The hours types are based on the type of business so we don't give an exhaustive list of hours\ntypes here. We get the hours types for the business's category using the Google endpoint\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/categories/batchGet",
          "title": "hours type IDs are based on the Google hours types\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#morehours"
        },
        "regularHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RegularHoursPeriod"
          },
          "title": "RegularHours is a collection of times that this location is open for business. Each\nperiod represents a range of hours when the location is open during the week. You may specify\nmultiple entries for the same date if you are open for multiple periods (Example lunch and supper)"
        },
        "specialHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SpecialHoursPeriod"
          },
          "description": "SpecialHours represents a set of time periods when a location's operational hours differ from\nits regular business hours. This may be a holiday or special event. These hours replace the\nall regular hours for the day. The openTime and startDate must predate the closeTime and endDate."
        }
      }
    },
    "v1BusinessKeywords": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. If not included, the business's stored keywords will be used."
        }
      }
    },
    "v1CitationsByDomain": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "citations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Citation"
          }
        }
      },
      "title": "CitationsByDomain contains all citations for a domain"
    },
    "v1ClosedStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "OPEN",
        "LIMITED",
        "TEMPORARY",
        "PERMANENT"
      ],
      "default": "UNSPECIFIED",
      "title": "ClosedStatus describes if the business is permanently or temporarily closed, or in a limited state"
    },
    "v1CompetitorLocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "placeId": {
          "type": "string",
          "description": "The Place ID for a place in the Google Places database and on Google Maps.\nSee https://developers.google.com/places/place-id for more about Place IDs."
        }
      }
    },
    "v1ConditionalField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1ConnectedDirectSyncAccount": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string",
          "title": "The ID used to define the connection. Also known as the Social Service ID"
        },
        "username": {
          "type": "string",
          "title": "The username of the connected account"
        },
        "isAuthenticated": {
          "type": "boolean",
          "title": "Whether the account is authenticated"
        },
        "profileUrl": {
          "type": "string",
          "title": "The URL of the connected account's profile page"
        },
        "profileImageUrl": {
          "type": "string",
          "title": "The profile image URL of the connected account"
        },
        "accountType": {
          "type": "string",
          "title": "The type of account. Also known as the Social Service Type"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The client tags associated with the account"
        },
        "isSyncingEnabled": {
          "type": "boolean",
          "title": "Whether syncing is enabled for the account"
        },
        "accountId": {
          "type": "string",
          "title": "The ID of the account as defined by the provider"
        },
        "disabledFlag": {
          "type": "boolean",
          "description": "Whether the account is disabled."
        },
        "tokenBroken": {
          "type": "boolean",
          "title": "Whether the account's oauth token is broken"
        },
        "isVerified": {
          "type": "boolean",
          "title": "Whether the account is considered 'verified' by the provider"
        }
      }
    },
    "v1CreateCompetitors": {
      "type": "object",
      "properties": {
        "location": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CompetitorLocation"
          }
        }
      }
    },
    "v1CreateListingProfileResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1CreateOperation": {
      "type": "object",
      "properties": {
        "activateAccounts": {
          "$ref": "#/definitions/v1ActivateAccounts"
        },
        "createCompetitors": {
          "$ref": "#/definitions/v1CreateCompetitors"
        }
      },
      "title": "CreateOperation allows asynchronous operations to take place as a side effect of account creation"
    },
    "v1DetailedSyndicationStatusResultValue": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "syncedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1DetailedSyndicationStatusResults": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/v1DetailedSyndicationStatusResultValue"
        }
      }
    },
    "v1DirectSyncSource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "numeric ID of the source"
        },
        "name": {
          "type": "string",
          "title": "The name of the source"
        },
        "account": {
          "$ref": "#/definitions/v1ConnectedDirectSyncAccount",
          "title": "The connected account information for this direct submit source"
        },
        "connectLink": {
          "type": "string"
        },
        "accuracy": {
          "$ref": "#/definitions/v1SourceAccuracy",
          "title": "The accuracy data for this direct submit source"
        },
        "score": {
          "type": "string",
          "format": "int64",
          "title": "The current listing score for this direct submit source"
        },
        "maxScore": {
          "type": "string",
          "format": "int64",
          "title": "The maximum possible listing score for this direct submit source"
        },
        "listingUrl": {
          "type": "string",
          "title": "The URL of the listing for this direct submit source"
        },
        "listingId": {
          "type": "string",
          "title": "The CS listing id of the direct submit listing"
        },
        "syncStatus": {
          "$ref": "#/definitions/v1SyndicationStatus",
          "title": "The syndication status for this direct submit source"
        },
        "additionalAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedDirectSyncAccount"
          },
          "title": "Other accounts that are connected for this source, and could be synced to"
        },
        "isSyncingEnabled": {
          "type": "boolean",
          "description": "Whether syncing to this source is enabled.  Usually this will correspond to the account's is_syncing_enabled flag,\nbut for sources without accounts, it will be populated by the models where we store direct sync setting for the business."
        },
        "isListingVerified": {
          "type": "boolean",
          "title": "Whether the listing has been verified as accurate by the business"
        },
        "hidden": {
          "type": "boolean",
          "title": "Whether the source is hidden from the UI"
        }
      }
    },
    "v1DoctorDotComCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "fullName": {
          "type": "string"
        },
        "nuccTaxonomyCode": {
          "type": "string"
        }
      }
    },
    "v1EcosystemSource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "v1FieldStatus": {
      "type": "object",
      "properties": {
        "updateOrigin": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GBPClaimStatus": {
      "type": "string",
      "enum": [
        "GBP_CLAIM_STATUS_INVALID",
        "GBP_CLAIM_STATUS_UNKNOWN",
        "GBP_CLAIM_STATUS_CLAIMED",
        "GBP_CLAIM_STATUS_UNCLAIMED"
      ],
      "default": "GBP_CLAIM_STATUS_INVALID"
    },
    "v1GetActiveSEOAddonsResponse": {
      "type": "object",
      "properties": {
        "activeAddons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddonActivation"
          }
        }
      }
    },
    "v1GetAddonAttributesResponse": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string"
        },
        "addonAttributes": {
          "$ref": "#/definitions/v1AddonAttributes"
        }
      }
    },
    "v1GetAppleBusinessConnectInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Apple into this field. It will contain all the data we request from Apple."
        }
      }
    },
    "v1GetAttributeMetadataResponse": {
      "type": "object",
      "properties": {
        "attributeMedata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorAttributeMetaData"
          }
        }
      }
    },
    "v1GetBingPlacesInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Bing into this field. It will contain all the data we request from Bing."
        }
      }
    },
    "v1GetBusinessProfileFieldStatusResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "companyName": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "address": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "address2": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "city": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "state": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "zip": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "country": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "workNumber": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "callTrackingNumber": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "website": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "location": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "salesPersonId": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "additionalSalesPersonId": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "vcategoryIds": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "customerIdentifier": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "lifecycleStage": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetCitationSummaryResponse": {
      "type": "object",
      "properties": {
        "domainCount": {
          "type": "string",
          "format": "int64"
        },
        "citationCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetDataForSEOCategoryResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "primaryCategoryId": {
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskId": {
          "type": "string"
        },
        "rawResponse": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetDirectSyncSourceInfoResponse": {
      "type": "object",
      "properties": {
        "directSubmitSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DirectSyncSource"
          }
        }
      }
    },
    "v1GetDoctorDotComCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DoctorDotComCategory"
          }
        }
      }
    },
    "v1GetFacebookPageInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Facebook into this field. It will contain all the data we request from Facebook."
        }
      }
    },
    "v1GetGoogleBusinessInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Google into this field. It will contain all the data we request from Google."
        }
      }
    },
    "v1GetGoogleMyBusinessInsightsDataBucketedResponse": {
      "type": "object",
      "properties": {
        "actionsDrivingDirections": {
          "$ref": "#/definitions/v1InsightBucketed",
          "description": "The total number of times driving directions were requested for the listing."
        },
        "actionsPhone": {
          "$ref": "#/definitions/v1InsightBucketed",
          "description": "The total number of times the phone number was clicked on the listing."
        }
      }
    },
    "v1GetGoogleMyBusinessInsightsDataResponse": {
      "type": "object",
      "properties": {
        "actionsDrivingDirections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times driving directions were requested for the listing."
        },
        "actionsPhone": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of times driving directions were requested for the listing."
        },
        "actionsWebsite": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of times the phone number was clicked on the listing."
        },
        "localPostActionsCallToAction": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the call to action button was clicked on Google."
        },
        "localPostViewsSearch": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the local post was viewed on Google Search."
        },
        "photosCountCustomers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of media items that are currently live that have been uploaded by customers."
        },
        "photosCountMerchant": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of media items that are currently live that have been uploaded by the merchant."
        },
        "photosViewsCustomers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of views on media items uploaded by customers."
        },
        "photosViewsMerchant": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of views on media items uploaded by the merchant."
        },
        "queriesChain": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times a resource was shown as a result of a search for the chain it belongs to, or a brand it sells. For example, Starbucks, Adidas. This is a subset of QUERIES_INDIRECT."
        },
        "queriesDirect": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was shown when searching for it directly."
        },
        "queriesIndirect": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was shown as a result of a categorical search (for example, restaurant \"restaurant\")."
        },
        "viewsMaps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was viewed on Google Maps."
        },
        "viewsSearch": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was viewed on Google Search."
        }
      }
    },
    "v1GetInfoGroupIdResponse": {
      "type": "object",
      "properties": {
        "infogroupId": {
          "type": "string"
        }
      }
    },
    "v1GetLDDataResponse": {
      "type": "object",
      "properties": {
        "neustar": {
          "$ref": "#/definitions/v1DirectSyncSource"
        },
        "dataAxle": {
          "$ref": "#/definitions/v1DirectSyncSource"
        },
        "foursquare": {
          "$ref": "#/definitions/v1DirectSyncSource"
        }
      }
    },
    "v1GetListingDistributionActivationStatusResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account to retrieve LD activation status for"
        },
        "isActive": {
          "type": "boolean",
          "title": "Whether LD is active or not"
        },
        "addonId": {
          "type": "string",
          "title": "The LD addon that is currently active for the account"
        },
        "activation": {
          "type": "string",
          "format": "date-time",
          "title": "The date LD was activated"
        }
      }
    },
    "v1GetListingSourceByIdResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1GetListingSourceByProviderIdResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1GetListingSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Source"
          }
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Optional, if included it will only return fields included in the field mask"
        }
      }
    },
    "v1GetLocalSearchSEODataResponse": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "localSearchData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalSearchData"
          }
        }
      }
    },
    "v1GetMoreHoursTypesResponse": {
      "type": "object",
      "properties": {
        "moreHoursTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MoreHoursType"
          }
        }
      }
    },
    "v1GetMultiAddonAttributesResponse": {
      "type": "object",
      "properties": {
        "addonAttributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1AddonAttributes"
          }
        }
      }
    },
    "v1GetMultiListingProfileResponse": {
      "type": "object",
      "properties": {
        "listingProfiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiListingProfileResponseListingProfileContainer"
          }
        }
      }
    },
    "v1GetMultiSuggestionResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Suggestion"
          }
        }
      }
    },
    "v1GetNeustarPublicationsResponse": {
      "type": "object",
      "properties": {
        "publications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NeustarPublication"
          }
        }
      }
    },
    "v1GetOrGenerateSEOSuggestedKeywordsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywordInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordInfo"
          }
        }
      }
    },
    "v1GetPartnerSettingsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "isSmbKeyWordEditingDisabled": {
          "type": "boolean"
        },
        "isFavoriteNewKeywordsDisabled": {
          "type": "boolean"
        },
        "isSyncKeywordsDisabled": {
          "type": "boolean"
        }
      }
    },
    "v1GetPartnerSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Source"
          }
        }
      }
    },
    "v1GetProductSettingsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "canEditKeywords": {
          "type": "boolean"
        }
      }
    },
    "v1GetSEODataResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEOData"
          },
          "description": "Data is the most recent entry for the business for each keyword."
        },
        "previousData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEOData"
          },
          "description": "Previous data is the oldest data entry for the business for each keyword within the date range."
        }
      }
    },
    "v1GetSEODataSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEODataSummary"
          },
          "description": "Data is the most recent entry for the business for each keyword."
        },
        "previousData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEODataSummary"
          },
          "description": "Previous data is the oldest data entry for the business for each keyword within the date range."
        }
      }
    },
    "v1GetSEOSuggestedKeywordsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywordInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordInfo"
          }
        }
      }
    },
    "v1GetSuggestionResponse": {
      "type": "object",
      "properties": {
        "suggestion": {
          "type": "string"
        }
      }
    },
    "v1GetSyncDataResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SyncData"
          }
        }
      }
    },
    "v1GetSyndicationInfoResponse": {
      "type": "object",
      "properties": {
        "syndicationInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SyndicationInfo"
          }
        }
      }
    },
    "v1GoogleAttribute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Google attribute in the form \"attributes/is_owned_by_women\""
        },
        "value": {
          "title": "Contains the value of the attribute. This can be of 4 types:\n  bool\n  URL (represented as a string google.protobuf.Value)\n  enum (represented as a string google.protobuf.Value)\n  repeated_enum (represented as a struct google.protobuf.Value)\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/AttributeValueType"
        }
      },
      "title": "Represents a single Google attribute\nreference docs:\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/attributes/list#attributemetadata\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/Attributes"
    },
    "v1GoogleAttributeMetaData": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "title": "The name of the Google Attribute in the form \"attributes/is_owned_by_women\""
        },
        "valueType": {
          "$ref": "#/definitions/v1ValueType"
        },
        "displayName": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "valueDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GoogleAttributeMetaDataList": {
      "type": "object",
      "properties": {
        "googleAttributeMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttributeMetaData"
          }
        }
      }
    },
    "v1GoogleAttributes": {
      "type": "object",
      "properties": {
        "googleAttribute": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttribute"
          }
        }
      }
    },
    "v1GoogleDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1GooglePlace": {
      "type": "object",
      "properties": {
        "placeId": {
          "type": "string",
          "title": "The ID of the place"
        },
        "placeName": {
          "type": "string",
          "description": "The localized name of the place. For example, Scottsdale, AZ."
        },
        "city": {
          "type": "string",
          "title": "The city or locality the Google Place is located in"
        }
      },
      "title": "Based on https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#Location.PlaceInfo"
    },
    "v1HealthCareProfessionalInformation": {
      "type": "object",
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date-time",
          "title": "The birth date of the practitioner. Some patients have an age\npreference when selecting a practitioner"
        },
        "email": {
          "type": "string",
          "title": "Direct contact email for the practitioner"
        },
        "fellowship": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of free-form locations where the practitioner performed their\nfellowships if applicable"
        },
        "firstName": {
          "type": "string",
          "title": "The first name of the practitioner"
        },
        "gender": {
          "$ref": "#/definitions/HealthCareProfessionalInformationGender",
          "title": "The gender of the practitioner. Some patients have a gender\npreference when selecting a practitioner"
        },
        "initials": {
          "type": "string",
          "title": "The initials of the practitioner"
        },
        "insurancesAccepted": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A free-form text list of insurance providers accepted by\nthe practitioner"
        },
        "isTakingPatients": {
          "type": "boolean",
          "description": "Indicates whether the practitioner is accepting new patients.  Can be\nnull, indicating that they did not specify."
        },
        "lastName": {
          "type": "string",
          "title": "The last name of the practitioner"
        },
        "medicalLicenseNumber": {
          "type": "string",
          "description": "The practitioner's medical licence number, assigned by their\nparticular certification authority."
        },
        "nationalProviderIdentifier": {
          "type": "string",
          "description": "The 10-digit NPI number is assigned to all health practitioners by the\nCenters for Medicare and Medicaid Services (CMS)."
        },
        "office": {
          "type": "string",
          "title": "Which operating office this location refers to"
        },
        "professionalCredential": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of free-form text credentials held by the practitioner"
        },
        "residency": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of free-form locations where the practitioner performed their\nresidencies if applicable."
        },
        "school": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of free-form text schools the practitioner obtained educational\ncertifications through"
        },
        "specialty": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of free-form specialties of the practitioner"
        },
        "standardizedTitle": {
          "type": "string",
          "title": "The title used by the practitioner to describe themselves"
        },
        "stateLicense": {
          "type": "string",
          "title": "The license number issued by the practitioner's state"
        }
      },
      "title": "Stores data specific to a business in the \"Medical\" Taxonomy"
    },
    "v1InsightBucket": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        },
        "bucketLabel": {
          "type": "string"
        }
      }
    },
    "v1InsightBucketed": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InsightBucket"
          }
        },
        "totalAcrossBuckets": {
          "type": "string",
          "format": "int64"
        },
        "totalChangeAcrossBuckets": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1IsAvailable": {
      "type": "string",
      "enum": [
        "UNSET",
        "YES",
        "NO"
      ],
      "default": "UNSET"
    },
    "v1IsLocalSEOProActiveForAccountResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "editionId": {
          "type": "string"
        }
      }
    },
    "v1IsPartnerUserResponse": {
      "type": "object",
      "properties": {
        "isPartnerUser": {
          "type": "boolean"
        }
      }
    },
    "v1KeywordInfo": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "competition": {
          "type": "string"
        },
        "competitionIndex": {
          "type": "string",
          "format": "int64"
        },
        "searchVolume": {
          "type": "string",
          "format": "int64"
        },
        "lowTopOfPageBid": {
          "type": "number",
          "format": "float"
        },
        "highTopOfPageBid": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1LegacyProductDetails": {
      "type": "object",
      "properties": {
        "commonName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "adminNotes": {
          "type": "string"
        },
        "competitor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shareOfVoiceService": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListCitationDomainsResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalResults": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListSuggestionResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Suggestion"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListingProfile": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "externalIdentifiers": {
          "$ref": "#/definitions/v1ExternalIdentifiers"
        },
        "socialUrls": {
          "$ref": "#/definitions/v1SocialURLs"
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/v1HoursOfOperation",
          "title": "Deprecated: Use BusinessHours instead"
        },
        "richData": {
          "$ref": "#/definitions/v1RichData"
        },
        "napData": {
          "$ref": "#/definitions/listing_productsv1Location"
        },
        "businessHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BusinessHours"
          }
        },
        "googleAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttribute"
          }
        },
        "googleAttributesMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttributeMetaData"
          }
        },
        "moreHoursTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MoreHoursType"
          }
        },
        "bingAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttribute"
          }
        },
        "bingAttributesMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttributeMetaData"
          }
        },
        "legacyProductDetails": {
          "$ref": "#/definitions/v1LegacyProductDetails"
        },
        "marketingInfo": {
          "$ref": "#/definitions/v1MarketingInfo"
        }
      },
      "title": "Represents a listing profile"
    },
    "v1LocalSearchData": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "vicinity": {
          "$ref": "#/definitions/v1Vicinity"
        },
        "searchLocation": {
          "$ref": "#/definitions/v1Geo"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalSearchResult"
          }
        }
      }
    },
    "v1LocalSearchResult": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rank": {
          "type": "string"
        },
        "isMainBusiness": {
          "type": "boolean"
        },
        "reviews": {
          "$ref": "#/definitions/v1LocalSearchReviews"
        },
        "phoneNumber": {
          "type": "string"
        },
        "claimStatus": {
          "$ref": "#/definitions/v1GBPClaimStatus"
        }
      }
    },
    "v1LocalSearchReviews": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "number",
          "format": "double"
        },
        "count": {
          "type": "string"
        }
      }
    },
    "v1LocationOverride": {
      "type": "object",
      "properties": {
        "ignoredAnchorDataMatches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "submitListingValidationRegex": {
          "type": "string"
        }
      },
      "title": "Location specific source overrides"
    },
    "v1MarketingClassification": {
      "type": "string",
      "enum": [
        "MARKETING_CLASSIFICATION_UNUSED",
        "MARKETING_CLASSIFICATION_SMB",
        "MARKETING_CLASSIFICATION_SPAM",
        "MARKETING_CLASSIFICATION_DUPLICATE",
        "MARKETING_CLASSIFICATION_BLACKLISTED",
        "MARKETING_CLASSIFICATION_OUT_OF_MARKET"
      ],
      "default": "MARKETING_CLASSIFICATION_UNUSED"
    },
    "v1MarketingInfo": {
      "type": "object",
      "properties": {
        "conversionPoint": {
          "type": "string"
        },
        "marketingClassification": {
          "$ref": "#/definitions/v1MarketingClassification"
        },
        "lifecycleStage": {
          "$ref": "#/definitions/v1LifecycleStage"
        }
      },
      "title": "MarketingInfo store marketing properties for an account group"
    },
    "v1MoreHoursType": {
      "type": "object",
      "properties": {
        "hoursTypeId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "localizedDisplayName": {
          "type": "string"
        }
      },
      "title": "Information about a Google \"More Hours\" type https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#morehourstype"
    },
    "v1NeustarPublication": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "parentId": {
          "type": "string",
          "format": "int64"
        },
        "platform": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "lastDeliveryTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "disposition": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "v1PartnerOverride": {
      "type": "object",
      "properties": {
        "adminNotes": {
          "type": "string"
        },
        "createListingHtml": {
          "type": "string"
        },
        "claimListingHtml": {
          "type": "string"
        },
        "descriptionHtml": {
          "type": "string"
        },
        "editListingHtml": {
          "type": "string"
        },
        "editListingUrl": {
          "type": "string"
        },
        "iconClass16px": {
          "type": "string"
        },
        "iconClass32px": {
          "type": "string"
        },
        "iconClass50px": {
          "type": "string"
        },
        "iconUrl16px": {
          "type": "string"
        },
        "iconUrl32px": {
          "type": "string"
        },
        "iconUrl50px": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Partner specific source overrides"
    },
    "v1Provider": {
      "type": "string",
      "enum": [
        "PROVIDER_UNSPECIFIED",
        "PROVIDER_UBERALL",
        "PROVIDER_YEXT",
        "PROVIDER_DIRECT"
      ],
      "default": "PROVIDER_UNSPECIFIED",
      "title": "Possible source providers"
    },
    "v1ProviderType": {
      "type": "string",
      "enum": [
        "PROVIDER_TYPE_UNSPECIFIED",
        "PROVIDER_TYPE_UBERALL",
        "PROVIDER_TYPE_YEXT"
      ],
      "default": "PROVIDER_TYPE_UNSPECIFIED",
      "description": "LSP Provider type. If not LSP ignore or use PROVIDER_TYPE_UNSPECIFIED."
    },
    "v1ReadFilter": {
      "type": "object",
      "properties": {
        "includeDeleted": {
          "type": "boolean",
          "title": "Whether or not to include deleted profiles on the read"
        }
      },
      "title": "ReadFilter can be used for filtering at the repository layer"
    },
    "v1RichData": {
      "type": "object",
      "properties": {
        "tollFreeNumber": {
          "type": "string",
          "description": "The toll-free phone number associated with a business.  This is stored\nseparately than basic NAP data because many listing sites don't allow\na toll-free number to be used as a primary phone number, but they often\ndo allow it to be captured separately."
        },
        "description": {
          "type": "string",
          "description": "The long-form description of the business."
        },
        "shortDescription": {
          "type": "string",
          "title": "The short description of the business or \"tagline\""
        },
        "servicesOffered": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A free-form text list of services offered by the business"
        },
        "brandsCarried": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A free-form text list of brands carried by the business"
        },
        "landmark": {
          "type": "string",
          "title": "A landmark near the business that is helpful to customers trying to\nlocate the business (ie. The Penhorn Mall)"
        },
        "paymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichDataPaymentMethods"
          },
          "title": "A list of payment methods accepted by the business"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomField"
          },
          "title": "A set of custom fields on a business specific to a partner"
        },
        "healthCareProfessionalInformation": {
          "$ref": "#/definitions/v1HealthCareProfessionalInformation",
          "title": "RichData specific to business in the \"Medical\" Taxonomy"
        }
      },
      "description": "RichData stores data on businesses that is more in-depth than the basic data\nmuch of this data is specific to certain types of business.  This means that\nproper selection of taxonomy ids is important to effectively using RichData."
    },
    "v1SEODataSummary": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "localRank": {
          "type": "number",
          "format": "double"
        },
        "organicRank": {
          "type": "number",
          "format": "double"
        },
        "difficulty": {
          "type": "string",
          "format": "int64"
        },
        "searchVolume": {
          "type": "string",
          "format": "int64"
        },
        "searchRadius": {
          "type": "number",
          "format": "double"
        },
        "workflowUrl": {
          "type": "string"
        }
      }
    },
    "v1SEOSettingsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "localSearchRadius": {
          "type": "number",
          "format": "double"
        },
        "favoriteKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isFullSearchEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1ServiceArea": {
      "type": "object",
      "properties": {
        "businessType": {
          "$ref": "#/definitions/v1ServiceAreaBusinessType"
        },
        "places": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GooglePlace"
          }
        }
      }
    },
    "v1ServiceAreaBusinessType": {
      "type": "string",
      "enum": [
        "SERVICE_AREA_BUSINESS_TYPE_UNSPECIFIED",
        "SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_LOCATION_ONLY",
        "SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_AND_BUSINESS_LOCATION"
      ],
      "default": "SERVICE_AREA_BUSINESS_TYPE_UNSPECIFIED",
      "description": "- SERVICE_AREA_BUSINESS_TYPE_UNSPECIFIED: Not specified.\n - SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_LOCATION_ONLY: Offers service only in the surrounding area (not at the business address).\n - SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_AND_BUSINESS_LOCATION: Offers service at the business address and the surrounding area.",
      "title": "Based on https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#Location.BusinessType"
    },
    "v1SocialURLs": {
      "type": "object",
      "properties": {
        "googleplusUrl": {
          "type": "string",
          "description": "The business's Google+ Page.  Should not be a Google+ User profile."
        },
        "linkedinUrl": {
          "type": "string",
          "title": "The business's LinkedIn Company Page.  Should not be a LinkedIn personal\nprofile"
        },
        "foursquareUrl": {
          "type": "string",
          "description": "The business's FourSquare Location Page."
        },
        "twitterUrl": {
          "type": "string",
          "description": "The business's Twitter Page.  Twitter does not differentiate between\nusers and businesses."
        },
        "facebookUrl": {
          "type": "string",
          "description": "The business's Facebook Page.  The page should be public, and should\nnot be a facebook user."
        },
        "rssUrl": {
          "type": "string",
          "description": "A RSS feed URL for content produced by the business.  Usually a blog\nor podcast feed."
        },
        "youtubeUrl": {
          "type": "string",
          "description": "The URL for the business's youtube channel."
        },
        "instagramUrl": {
          "type": "string",
          "description": "The URL for the business's instagram account.  Instagram does not\ndifferentiate between users and businesses."
        },
        "pinterestUrl": {
          "type": "string",
          "description": "The URL for the business's Pinterest account."
        }
      },
      "description": "A set of Social Media URLs associated with the business.  These should be the\npublically accessible URLs."
    },
    "v1SpecialHoursPeriod": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1SpecialHoursStatus",
          "description": "status describes the behaviour of the special hours period. See enum options for required special hours fields."
        },
        "startDate": {
          "$ref": "#/definitions/v1GoogleDate",
          "description": "start_date is the calendar date this special hour period starts on."
        },
        "startTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "title": "start_time must be specified if status is open. Valid values are 00:00-24:00 where\n24:00 represents midnight at the end of the specified day field.\nTODO: what is returned with unconfirmed holiday status?"
        },
        "endDate": {
          "$ref": "#/definitions/v1GoogleDate",
          "description": "end_date (optional) is the calendar date this special hour period ends on. If endDate field is\nnot set, default to the date specified in startDate. If set, this field must be equal to or after startDate."
        },
        "endTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "title": "end_time must be specified if status is open. Valid values are 00:00-24:00, where 24:00\nrepresents midnight at the end of the specified day field.\nTODO: what is returned with unconfirmed holiday status?"
        }
      }
    },
    "v1SpecialHoursStatus": {
      "type": "string",
      "enum": [
        "SPECIAL_HOURS_STATUS_INVALID",
        "SPECIAL_HOURS_STATUS_OPEN",
        "SPECIAL_HOURS_STATUS_CLOSED",
        "SPECIAL_HOURS_STATUS_UNCONFIRMED_HOLIDAY"
      ],
      "default": "SPECIAL_HOURS_STATUS_INVALID",
      "description": "- SPECIAL_HOURS_STATUS_INVALID: Indicates that the field was not sent on the API request. This is not valid to be used.\n - SPECIAL_HOURS_STATUS_OPEN: Indicates the business is open during the period indicated by\n`start_date`, `start_time`, `end_date`, and `end_time`\n - SPECIAL_HOURS_STATUS_CLOSED: Indicates that the business is closed for the entire period from `start_date` to `end_date`.\n`start_time` and `end_time` will be ignored.\n - SPECIAL_HOURS_STATUS_UNCONFIRMED_HOLIDAY: NOT IMPLEMENTED The UI for this status is not included in the first slice.\nIndicates that there is a holiday during the specified period and the business has not confirmed their hours.\nThese periods should not be sent to listing sites",
      "title": "Describes the different modes that apply to special hour periods"
    },
    "v1SubmitTurboListerResponse": {
      "type": "object",
      "properties": {
        "rejectedReason": {
          "type": "string",
          "description": "reason for rejection. Will be blank or empty string if the request was accepted."
        }
      }
    },
    "v1SuggestFieldUpdateResponse": {
      "type": "object",
      "properties": {
        "suggestion": {
          "type": "string"
        }
      }
    },
    "v1Suggestion": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "suggestion": {
          "type": "string"
        },
        "primaryCategoryId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1SyncData": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "numeric ID of the source"
        },
        "name": {
          "type": "string",
          "title": "The name of the source"
        },
        "iconUrl": {
          "type": "string",
          "title": "The icon URL of the source"
        },
        "account": {
          "$ref": "#/definitions/v1ConnectedDirectSyncAccount",
          "title": "The connected account information for this direct submit source"
        },
        "connectLink": {
          "type": "string"
        },
        "accuracy": {
          "$ref": "#/definitions/v1SourceAccuracy",
          "title": "The accuracy data for this direct submit source"
        },
        "score": {
          "type": "string",
          "format": "int64",
          "title": "The current listing score for this direct submit source"
        },
        "maxScore": {
          "type": "string",
          "format": "int64",
          "title": "The maximum possible listing score for this direct submit source"
        },
        "listingUrl": {
          "type": "string",
          "title": "The URL of the listing for this direct submit source"
        },
        "listingId": {
          "type": "string",
          "title": "The CS listing id of the direct submit listing"
        },
        "syncDetails": {
          "$ref": "#/definitions/v1SyndicationStatus",
          "title": "The syndication status for this direct submit source"
        },
        "additionalAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedDirectSyncAccount"
          },
          "title": "Other accounts that are connected for this source, and could be synced to"
        },
        "isSyncingEnabled": {
          "type": "boolean",
          "description": "Whether syncing to this source is enabled.  Usually this will correspond to the account's is_syncing_enabled flag,\nbut for sources without accounts, it will be populated by the models where we store direct sync setting for the business."
        },
        "isListingVerified": {
          "type": "boolean",
          "title": "Whether the listing has been verified as accurate by the business"
        },
        "hidden": {
          "type": "boolean",
          "title": "Whether the source is hidden from the UI"
        },
        "hiddenReason": {
          "type": "string",
          "title": "The reason the source is hidden"
        },
        "locked": {
          "type": "boolean",
          "title": "Whether the source is locked"
        },
        "requirement": {
          "$ref": "#/definitions/v1SyncRequirement",
          "title": "The product activation requirement to sync to this source"
        },
        "syncStatus": {
          "$ref": "#/definitions/v1SyncStatus",
          "title": "Code indicating the current sync status"
        },
        "sourceType": {
          "type": "string",
          "title": "What kind of source the source is"
        },
        "provider": {
          "$ref": "#/definitions/v1Provider",
          "title": "The provider used to sync the data"
        },
        "ecosystemSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EcosystemSource"
          },
          "title": "Additional sources the data is synced to when this source is synced"
        }
      }
    },
    "v1SyncRequirement": {
      "type": "string",
      "enum": [
        "SYNC_REQUIREMENT_UNSET",
        "SYNC_REQUIREMENT_LSP",
        "SYNC_REQUIREMENT_PRO_EDITION",
        "SYNC_REQUIREMENT_YEXT_LSP",
        "SYNC_REQUIREMENT_UBERALL_LSP",
        "SYNC_REQUIREMENT_LSP_OR_PRO_EDITION"
      ],
      "default": "SYNC_REQUIREMENT_UNSET"
    },
    "v1SyncStatus": {
      "type": "string",
      "enum": [
        "SYNC_STATUS_UNSET",
        "SYNC_STATUS_SYNCING",
        "SYNC_STATUS_PARTIALLY_SYNCED",
        "SYNC_STATUS_SUCCESS",
        "SYNC_STATUS_FAILED",
        "SYNC_STATUS_CLAIMED",
        "SYNC_STATUS_UNAVAILABLE",
        "SYNC_STATUS_SUBMITTED"
      ],
      "default": "SYNC_STATUS_UNSET",
      "description": " - SYNC_STATUS_UNSET: The source is not syncing\n - SYNC_STATUS_SYNCING: The syncing is in progress\n - SYNC_STATUS_PARTIALLY_SYNCED: The source is partially synced.  May have errors or warnings\n - SYNC_STATUS_SUCCESS: The source has synced successfully\n - SYNC_STATUS_FAILED: Syncing of location data has failed. May have errors or warnings\n - SYNC_STATUS_CLAIMED: The source is not syncing because it is claimed by someone else\n - SYNC_STATUS_UNAVAILABLE: We are unable to sync to this source.\n - SYNC_STATUS_SUBMITTED: The information has been submitted to the source.\nFor some sources the most we get is `submitted` and not a `success` status."
    },
    "v1SyndicationInfo": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string"
        },
        "lastAttempted": {
          "type": "string",
          "format": "date-time"
        },
        "lastSucceeded": {
          "type": "string",
          "format": "date-time"
        },
        "lastWorkflowUrl": {
          "type": "string"
        }
      }
    },
    "v1SyndicationStatus": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceLocationId": {
          "type": "string",
          "title": "This will be the account group ID"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "lastAttemptedOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastSucceededOn": {
          "type": "string",
          "format": "date-time"
        },
        "listingUrl": {
          "type": "string"
        },
        "listingExternalId": {
          "type": "string"
        },
        "lastSyncAttemptId": {
          "type": "string"
        },
        "lastSuccessfulAttemptId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "detailedResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DetailedSyndicationStatusResults"
          }
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Metadata"
          }
        },
        "force": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateListingSourceResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1UpdateOperation": {
      "type": "object",
      "properties": {
        "basicData": {
          "$ref": "#/definitions/v1BasicData",
          "title": "Specifying this operation will update the business' basic data"
        },
        "socialUrls": {
          "$ref": "#/definitions/v1SocialURLs",
          "title": "Specifying this operation will update the business' social urls"
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/v1HoursOfOperation",
          "title": "Specifying this operation will update the business' hours of operation"
        },
        "administration": {
          "$ref": "#/definitions/v1Administration",
          "title": "Specifying this operation will update the business' administration details"
        },
        "richData": {
          "$ref": "#/definitions/v1RichData",
          "title": "Specifying this operation will update the business' rich data"
        },
        "externalIdentifiers": {
          "$ref": "#/definitions/v1ExternalIdentifiers",
          "title": "Specifying this operation will update the business' external identifiers"
        },
        "fieldMask": {
          "$ref": "#/definitions/v1FieldMask"
        }
      },
      "title": "Update operation allows updating a specific piece of the business"
    },
    "v1UpdateOption": {
      "type": "string",
      "enum": [
        "UPDATE_OPTION_UNSPECIFIED",
        "UPDATE_OPTION_IMPROVE_WRITING",
        "UPDATE_OPTION_SPELLING_AND_GRAMMAR",
        "UPDATE_OPTION_MAKE_SHORTER",
        "UPDATE_OPTION_OPTIMIZE_BY_KEYWORDS",
        "UPDATE_OPTION_CHANGE_TONE"
      ],
      "default": "UPDATE_OPTION_UNSPECIFIED"
    },
    "v1ValueType": {
      "type": "string",
      "enum": [
        "ATTRIBUTE_VALUE_TYPE_UNSPECIFIED",
        "BOOL",
        "ENUM",
        "URL",
        "REPEATED_ENUM",
        "INTEGER"
      ],
      "default": "ATTRIBUTE_VALUE_TYPE_UNSPECIFIED"
    },
    "v1VendorAttributeMetaData": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string"
        },
        "bingAttributeMetadata": {
          "$ref": "#/definitions/v1BingAttributeMetaDataList"
        },
        "googleAttributeMetadata": {
          "$ref": "#/definitions/v1GoogleAttributeMetaDataList"
        }
      }
    },
    "InitiateOrderExportRequestDataFormatOption": {
      "type": "string",
      "enum": [
        "ORDERS_PER_ROW",
        "PRODUCTS_PER_ROW",
        "ORDERS_PER_ROW_SALES",
        "PRODUCTS_PER_ROW_SALES",
        "ORDERS_PER_ROW_BUYER",
        "PRODUCTS_PER_ROW_BUYER"
      ],
      "default": "ORDERS_PER_ROW",
      "description": "- ORDERS_PER_ROW: specifies to produces one line per order with columns suitable for a Partner Admin.\n - PRODUCTS_PER_ROW: specifies to produces one line per product in the matching orders with columns suitable for a Partner Admin. Order level values will be duplicated on each row.\n - ORDERS_PER_ROW_SALES: specifies to produces one line per order with columns suitable for a Salesperson (SSC).\n - PRODUCTS_PER_ROW_SALES: specifies to produces one line per product in the matching orders with columns suitable for a Salesperson (SSC). Order level values will be duplicated on each row.\n - ORDERS_PER_ROW_BUYER: specifies to produces one line per order with columns suitable for the Buyer (Business Center).\n - PRODUCTS_PER_ROW_BUYER: specifies to produces one line per product in the matching orders with columns suitable for the Buyer (Business Center). Order level values will be duplicated on each row.",
      "title": "Options for how the data should be formatted in the exported file"
    },
    "salesordersv1Status": {
      "type": "string",
      "enum": [
        "SUBMITTED",
        "APPROVED",
        "DECLINED",
        "DRAFTED",
        "FULFILLED",
        "PROCESSING",
        "ACTIVATION_ERRORS",
        "ARCHIVED",
        "SUBMITTED_FOR_CUSTOMER_APPROVAL",
        "CANCELLATION_REQUESTED",
        "CANCELLED",
        "SCHEDULED_ACTIVATION",
        "AWAITING_PAYMENT",
        "PROCESSING_PAYMENT",
        "RESUBMITTED"
      ],
      "default": "SUBMITTED",
      "description": "- SUBMITTED: Submitted is the status when an order is ready for admin approval\n - APPROVED: Approved is the status when an order is has been approved by an admin\n - DECLINED: Declined is the status when an order is has been declined by an admin or a smb\n - DRAFTED: Drafted is currently not used but would be the state the order can be created in before it's sent to someone else\n - FULFILLED: Fulfilled is the status when an order has had all of the products activated\n - PROCESSING: Processing is the status when an order is currently activating the products\n - ACTIVATION_ERRORS: ActivationErrors is the status when an order is has encountered an error when activating products\n - ARCHIVED: Archived is the status to use when hiding the orders from the ui unless explicitly asked for\n - SUBMITTED_FOR_CUSTOMER_APPROVAL: SubmittedForCustomerApproval is the status when an order has been sent to a SMB to approve\n - CANCELLATION_REQUESTED: CancellationRequested is the status when a sales person requests to cancel a full order\n - CANCELLED: Cancelled is the status when a after an admin has approved a Cancellation\n - SCHEDULED_ACTIVATION: ScheduledActivation is the status of an order after the admin requests to activate products on the contract start date\n - AWAITING_PAYMENT: AwaitingPayment is the status of a BIY order on creation before we attempt to charge\n - PROCESSING_PAYMENT: ProcessingPayment is the status of a BIY order while waiting on confirmation for the charge\n - RESUBMITTED: Resubmitted is the status of an order when it has been resubmitted for admin approval, after being submitted at least one other time in the past",
      "title": "The different statuses representing any given state an order can be in"
    },
    "v1ActivateProductsResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of activating products on the order"
    },
    "v1Agreement": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The user who may have agreed to this agreement"
        },
        "term": {
          "type": "string",
          "title": "The term that the user may have agreed to"
        },
        "agreed": {
          "type": "boolean",
          "title": "Whether or not the user agreed"
        }
      }
    },
    "v1ApproveResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of a customer approving an order"
    },
    "v1ApproveSalesOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of approving an order"
    },
    "v1ArchiveSalesOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "ArchiveSalesOrderResponse is returned when an order is archived"
    },
    "v1ChargeOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      }
    },
    "v1CheckSalesOrderExistsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "title": "boolean that will only be true if an order matched the criteria given in the request"
        }
      },
      "title": "CheckSalesOrderExistsResponse describes if an order exists"
    },
    "v1CommonField": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1Field",
          "title": "The field that may be shared by multiple products"
        },
        "productIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of unique product identifiers that share the common field"
        },
        "addonKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddonKey"
          },
          "title": "List of addon keys that share the common field"
        }
      },
      "title": "Represents the answer to a common field may be shared between products"
    },
    "v1Config": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner this config is for"
        },
        "marketId": {
          "type": "string",
          "title": "The market this config is for (this can be empty if it's the config for the partner"
        },
        "defaultNotesContent": {
          "type": "string",
          "title": "When creating a new Order, this is the content that will pre-populate the Notes field"
        },
        "extraFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrderFormField"
          },
          "description": "Extra fields that will be added to all orders (created from that point on) The only type that is currently\nsupported is Text. Prefix/suffix and regex validation are also currently not supported."
        },
        "termsOfServiceUrl": {
          "type": "string",
          "title": "The terms of service url is intended to be a PDF, but as it's just a url to a file it could also be a webpage\nDeprecated: use TermsOfServiceOptions instead"
        },
        "workflowStepOptions": {
          "$ref": "#/definitions/v1WorkflowStepOptions",
          "title": "Options regarding how sales orders flow through the system"
        },
        "salespersonOptions": {
          "$ref": "#/definitions/v1SalespersonOptions",
          "title": "Options regarding how Salesperson interacts with orders"
        },
        "taxOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TaxOptions"
          },
          "title": "Options for adding tax to orders"
        },
        "customerTermsOfServiceOptions": {
          "$ref": "#/definitions/v1TermsOfServiceOptions",
          "title": "The options for showing which terms of service(s) to the customer"
        },
        "customerOptions": {
          "$ref": "#/definitions/v1CustomerOptions",
          "title": "Options for customer initiated orders"
        },
        "emailOptions": {
          "$ref": "#/definitions/v1EmailOptions",
          "title": "Options for how emails are sent"
        }
      }
    },
    "v1CreateAndActivateOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      },
      "title": "Response for creating an order directly into activation state"
    },
    "v1CreateArchivedOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        }
      }
    },
    "v1CreateDocumentResponse": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string"
        }
      }
    },
    "v1CreateDraftSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      }
    },
    "v1CreateForPartnerApprovalResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      },
      "title": "Response when sending orders with payment information that the Partner must approve"
    },
    "v1CreateLeasedToAutomationsSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      }
    },
    "v1CreateReasonResponse": {
      "type": "object",
      "properties": {
        "declinedReason": {
          "$ref": "#/definitions/v1DeclinedReason",
          "title": "Created declined reason"
        }
      }
    },
    "v1CreateSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      },
      "title": "Response of creating an order"
    },
    "v1CreateWithPaymentIntentResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of the created order"
        }
      }
    },
    "v1CustomSalesPersonApproveAction": {
      "type": "object",
      "properties": {
        "customActions": {
          "$ref": "#/definitions/v1CustomSalespersonAction"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1CustomSalespersonAction": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "automationId": {
          "type": "string",
          "title": "The automation that gets triggered when for this button"
        }
      }
    },
    "v1CustomerApproveSalesOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of a customer approving an order"
    },
    "v1CustomerCreateSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      }
    },
    "v1CustomerOptions": {
      "type": "object",
      "properties": {
        "allowCustomerInitiatedOrders": {
          "type": "boolean",
          "title": "Whether or not a customer can initiate an order"
        }
      }
    },
    "v1CustomerRecipient": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The ID of the user"
        },
        "firstName": {
          "type": "string",
          "title": "The user's first name"
        },
        "lastName": {
          "type": "string",
          "title": "The user's last name"
        }
      },
      "title": "The customer who receives the order"
    },
    "v1DeclineResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of a customer declining an order"
    },
    "v1DeclineSalesOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of declining an order"
    },
    "v1DeclinedReason": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "archived": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Declined reason options managed by partner"
    },
    "v1Document": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "pageCount": {
          "type": "string",
          "format": "int64"
        },
        "jsonContent": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1DocumentType"
        },
        "shareType": {
          "$ref": "#/definitions/v1DocumentShareType"
        },
        "organizationId": {
          "type": "string",
          "title": "The organization the document belongs to.\nThis will evolve to be a partner_id, vendor_id, or business_id.\nRead more here: https://vendasta.jira.com/wiki/spaces/RD/pages/510984296/Organization+Hierarchy+and+Roles?focusedCommentId=664830778#comment-664830778"
        },
        "organizationType": {
          "$ref": "#/definitions/v1OrganizationType"
        },
        "creatorUserId": {
          "type": "string",
          "title": "The user_id of the user who created the document\nMay be scoped under organization_type in the future if necessary (hubspot user, vendasta user, etc)"
        },
        "recipientOrganizationId": {
          "type": "string",
          "description": "The organization the document may be getting sent to."
        },
        "recipientOrganizationType": {
          "$ref": "#/definitions/v1OrganizationType"
        },
        "orderId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "marketId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1DocumentStatus"
        },
        "archived": {
          "type": "string",
          "format": "date-time"
        },
        "viewCount": {
          "type": "string",
          "format": "int64"
        },
        "thumbnailPath": {
          "type": "string"
        },
        "pdfPath": {
          "type": "string"
        },
        "snapshotId": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "recipientContactId": {
          "type": "string"
        },
        "format": {
          "$ref": "#/definitions/v1Format"
        }
      }
    },
    "v1DocumentEmailRecipient": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "v1DocumentEvent": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string"
        },
        "occurred": {
          "type": "string",
          "format": "date-time"
        },
        "performedBy": {
          "type": "string",
          "title": "performed_by is who is performing the event, this could be an IAM user id, or an IAM temporary subject id"
        },
        "eventType": {
          "$ref": "#/definitions/v1DocumentEventType",
          "title": "event_type describes the type of event that occurred"
        },
        "eventContext": {
          "type": "string",
          "title": "event_context provides context to the event that occurred"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "context": {
          "$ref": "#/definitions/v1DocumentEventContext"
        }
      }
    },
    "v1DocumentEventContext": {
      "type": "object",
      "properties": {
        "sentByEmailContext": {
          "$ref": "#/definitions/v1DocumentEventContextSentByEmail"
        },
        "viewedByRecipientContext": {
          "$ref": "#/definitions/v1DocumentEventContextViewedByRecipient"
        },
        "approvedByRecipientContext": {
          "$ref": "#/definitions/v1DocumentEventContextApprovedByRecipient"
        },
        "feedbackFromRecipientContext": {
          "$ref": "#/definitions/v1DocumentEventContextFeedbackFromRecipient"
        },
        "commentFromInternalUserContext": {
          "$ref": "#/definitions/v1DocumentEventContextCommentFromInternalUser"
        },
        "sendForInternalReviewContext": {
          "$ref": "#/definitions/v1DocumentEventContextSendForInternalReview"
        },
        "reviewedByInternalUserContext": {
          "$ref": "#/definitions/v1DocumentEventContextReviewedByInternalUser"
        },
        "unlockedDocumentContext": {
          "$ref": "#/definitions/v1DocumentEventContextUnlockDocument"
        }
      }
    },
    "v1DocumentEventContextApprovedByRecipient": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "The email address of the user that approved the proposal"
        }
      }
    },
    "v1DocumentEventContextCommentFromInternalUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "conversationOriginLocationExternalId": {
          "type": "string"
        }
      }
    },
    "v1DocumentEventContextFeedbackFromRecipient": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "recipientOrganizationId": {
          "type": "string"
        },
        "recipientOrganizationType": {
          "$ref": "#/definitions/v1OrganizationType"
        },
        "recipientEmail": {
          "type": "string"
        },
        "recipientName": {
          "type": "string"
        }
      }
    },
    "v1DocumentEventContextReviewedByInternalUser": {
      "type": "object",
      "properties": {
        "reviewerUserId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "v1DocumentEventContextSendForInternalReview": {
      "type": "object",
      "properties": {
        "requesterUserId": {
          "type": "string"
        },
        "reviewerUserId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "v1DocumentEventContextSentByEmail": {
      "type": "object",
      "properties": {
        "sentEmails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SentDocumentEmail"
          }
        }
      }
    },
    "v1DocumentEventContextUnlockDocument": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "v1DocumentEventContextViewedByRecipient": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "The id of the order associated with the proposal"
        },
        "recipientOrganizationId": {
          "type": "string"
        },
        "recipientOrganizationType": {
          "$ref": "#/definitions/v1OrganizationType"
        },
        "recipientEmail": {
          "type": "string"
        },
        "recipientName": {
          "type": "string"
        }
      }
    },
    "v1DocumentEventType": {
      "type": "string",
      "enum": [
        "DOCUMENT_EVENT_TYPE_INVALID",
        "DOCUMENT_EVENT_TYPE_SENT_BY_EMAIL",
        "DOCUMENT_EVENT_TYPE_VIEWED_BY_RECIPIENT",
        "DOCUMENT_EVENT_TYPE_FEEDBACK_FROM_RECIPIENT",
        "DOCUMENT_EVENT_TYPE_APPROVED_BY_RECIPIENT",
        "DOCUMENT_EVENT_TYPE_INTERNAL_REVIEW_REQUESTED",
        "DOCUMENT_EVENT_TYPE_COMMENT_FROM_INTERNAL_USER",
        "DOCUMENT_EVENT_TYPE_REVIEWED_BY_INTERNAL_USER",
        "DOCUMENT_EVENT_TYPE_UNLOCK_DOCUMENT"
      ],
      "default": "DOCUMENT_EVENT_TYPE_INVALID"
    },
    "v1DocumentShareType": {
      "type": "string",
      "enum": [
        "DOCUMENT_SHARE_TYPE_INVALID",
        "DOCUMENT_SHARE_TYPE_GLOBAL",
        "DOCUMENT_SHARE_TYPE_ORGANIZATION"
      ],
      "default": "DOCUMENT_SHARE_TYPE_INVALID",
      "description": "- DOCUMENT_SHARE_TYPE_GLOBAL: GLOBAL share type indicates the document can be seen by every user of the service.\n - DOCUMENT_SHARE_TYPE_ORGANIZATION: ORGANIZATION indicates the document can only be seen by users in the same organization (within the same partner, or within the same business)",
      "title": "DocumentShareType determines how the document can be shared"
    },
    "v1DocumentStatus": {
      "type": "string",
      "enum": [
        "DOCUMENT_STATUS_INVALID",
        "DOCUMENT_STATUS_SENT",
        "DOCUMENT_STATUS_VIEWED_BY_RECIPIENT",
        "DOCUMENT_STATUS_FEEDBACK_FROM_RECIPIENT",
        "DOCUMENT_STATUS_APPROVED_BY_RECIPIENT",
        "DOCUMENT_STATUS_ARCHIVED",
        "DOCUMENT_STATUS_DELETED",
        "DOCUMENT_STATUS_PENDING_REVIEW",
        "DOCUMENT_STATUS_REVIEWED",
        "DOCUMENT_STATUS_DRAFT"
      ],
      "default": "DOCUMENT_STATUS_INVALID",
      "description": " - DOCUMENT_STATUS_DRAFT: Statuses are pretty closely matched with event type.\n{adding this number to make room for them to grow together."
    },
    "v1DocumentType": {
      "type": "string",
      "enum": [
        "DOCUMENT_TYPE_INVALID",
        "DOCUMENT_TYPE_PROPOSAL",
        "DOCUMENT_TYPE_PROPOSAL_TEMPLATE",
        "DOCUMENT_TYPE_PAGE_TEMPLATE",
        "DOCUMENT_TYPE_WIDGET_TEMPLATE"
      ],
      "default": "DOCUMENT_TYPE_INVALID",
      "description": "- DOCUMENT_TYPE_PROPOSAL: intended to be sent to a client or already has been",
      "title": "Thinking this can be a set of pages (proposal), a page, or a widget (portion of a page)"
    },
    "v1DuplicateSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      }
    },
    "v1EmailContent": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "title": "Text for the subject of the email"
        },
        "heading": {
          "type": "string",
          "title": "Text for the heading line of an email"
        },
        "body": {
          "type": "string",
          "title": "Text for the body of an email"
        },
        "button": {
          "type": "string",
          "title": "Text for the action button of an email"
        }
      }
    },
    "v1EmailCustomContent": {
      "type": "object",
      "properties": {
        "contractAwaitingApproval": {
          "$ref": "#/definitions/v1EmailContent",
          "title": "Email that an SMB receives when an order has been submitted for their approval"
        },
        "orderProcessed": {
          "$ref": "#/definitions/v1EmailContent",
          "title": "Email that an SMB receives when they have approved or submitted an order"
        },
        "orderDeclined": {
          "$ref": "#/definitions/v1EmailContent",
          "title": "Email that an SMB receives when they have declined an order"
        }
      }
    },
    "v1EmailOptions": {
      "type": "object",
      "properties": {
        "emailCustomContent": {
          "$ref": "#/definitions/v1EmailCustomContent",
          "title": "Emails that can have custom content set"
        }
      }
    },
    "v1Format": {
      "type": "object",
      "properties": {
        "orientation": {
          "$ref": "#/definitions/v1Orientation"
        }
      },
      "title": "provides global settings for a document's formatting"
    },
    "v1FulfillmentOrderStatus": {
      "type": "string",
      "enum": [
        "FULFILLMENT_ORDER_STATUS_UNSET",
        "FULFILLMENT_ORDER_STATUS_DETAILS_NEEDED",
        "FULFILLMENT_ORDER_STATUS_IN_REVIEW",
        "FULFILLMENT_ORDER_STATUS_IN_PROGRESS",
        "FULFILLMENT_ORDER_STATUS_COMPLETED",
        "FULFILLMENT_ORDER_STATUS_CANCELLED",
        "FULFILLMENT_ORDER_STATUS_ON_HOLD"
      ],
      "default": "FULFILLMENT_ORDER_STATUS_UNSET",
      "title": "- FULFILLMENT_ORDER_STATUS_DETAILS_NEEDED: Details Needed: Fulfillment Form needs to be submitted\n - FULFILLMENT_ORDER_STATUS_IN_REVIEW: In Review: Fulfillment Form has been submitted. Vendor is reviewing submission\n - FULFILLMENT_ORDER_STATUS_IN_PROGRESS: In Progress: Fulfillment Form has required info and work has begun to deliver order.\n - FULFILLMENT_ORDER_STATUS_COMPLETED: Completed: Work for the order is done and has been delivered.\n - FULFILLMENT_ORDER_STATUS_CANCELLED: Cancelled: Fulfillment has not been completed and will not be completed.\n - FULFILLMENT_ORDER_STATUS_ON_HOLD: On Hold: Fulfillment is on hold"
    },
    "v1FulfillmentStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "The status of the fulfillment project, which is custom for each partner"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "title": "The due date of the fulfillment project"
        },
        "assignee": {
          "type": "string",
          "title": "The assignee of the fulfillment project"
        },
        "projectId": {
          "type": "string",
          "title": "The identifier of the fulfillment project"
        },
        "projectName": {
          "type": "string",
          "title": "The project name"
        }
      }
    },
    "v1GetDocumentLineItemsResponse": {
      "type": "object",
      "properties": {
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LineItem"
          }
        }
      }
    },
    "v1GetDocumentResponse": {
      "type": "object",
      "properties": {
        "document": {
          "$ref": "#/definitions/v1Document"
        }
      }
    },
    "v1GetMultiDocumentsResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Document"
          }
        }
      }
    },
    "v1GetMultiSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Order"
          }
        }
      }
    },
    "v1GetOrderRecipientDetailsResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1GetOrderRecipientSessionResponse": {
      "type": "object",
      "properties": {
        "session": {
          "type": "string"
        }
      }
    },
    "v1GetProposalEmailPreviewResponse": {
      "type": "object",
      "properties": {
        "emailPreviewContent": {
          "$ref": "#/definitions/v1Content"
        }
      }
    },
    "v1GetReasonResponse": {
      "type": "object",
      "properties": {
        "declinedReason": {
          "$ref": "#/definitions/v1DeclinedReason",
          "title": "Declined reason retrieved by ID"
        }
      }
    },
    "v1GetSalesOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of getting an order"
    },
    "v1GetStatusCountsRequestFilters": {
      "type": "object",
      "properties": {
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter for orders created for businesses in specific markets"
        },
        "salespersonId": {
          "type": "string",
          "title": "Singular salesperson filter"
        }
      },
      "title": "Filters to list sales orders based on given filter criterias"
    },
    "v1GetStatusCountsResponse": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "Counts is a map from the status to the number of orders that are currently in that status\nthe key is the value of the order.Status values but proto doesn't allow enums as the key type so it's ints"
        }
      }
    },
    "v1GetSubscribedLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubscriptionLocation"
          },
          "title": "The locations the user is subscribed to"
        }
      }
    },
    "v1GetSubscribersResponse": {
      "type": "object",
      "properties": {
        "subscribers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Subscriber"
          },
          "title": "The list of subscribers for the given order"
        }
      }
    },
    "v1GetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1InitiateOrderExportRequestDateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time"
        },
        "endRange": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Begin and end of date range"
    },
    "v1InitiateOrderExportRequestFilters": {
      "type": "object",
      "properties": {
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple market request"
        },
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple salesperson filter"
        },
        "salesTeamIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple sales team filter"
        },
        "created": {
          "$ref": "#/definitions/v1InitiateOrderExportRequestDateRangeFilter",
          "title": "Created date range filter"
        },
        "requestedActivation": {
          "$ref": "#/definitions/v1InitiateOrderExportRequestDateRangeFilter",
          "title": "Requested activation date filter"
        },
        "expiryDate": {
          "$ref": "#/definitions/v1InitiateOrderExportRequestDateRangeFilter",
          "title": "Expiry date filter"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesordersv1Status"
          },
          "title": "Multiple status filter"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags required to be on the order"
        },
        "untagged": {
          "type": "boolean",
          "title": "Will filter for orders that don't have tags if true"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Any one of these packages must be included in the order\nThe package id is defined by the marketplace for a grouping of products sold together"
        },
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple specific business filter"
        },
        "orderId": {
          "type": "string",
          "title": "Singular order identifier to filter for"
        }
      },
      "title": "Filters to export sales orders based on given filter criterias"
    },
    "v1InitiateOrderExportRequestSortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING",
      "title": "The directions that a result set can be sorted in"
    },
    "v1InitiateOrderExportRequestSortField": {
      "type": "string",
      "enum": [
        "REQUESTED_ACTIVATION",
        "CREATED",
        "STATUS",
        "EXPIRY_DATE"
      ],
      "default": "REQUESTED_ACTIVATION",
      "title": "The field to sort a result set on"
    },
    "v1InitiateOrderExportRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1InitiateOrderExportRequestSortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1InitiateOrderExportRequestSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1InitiateOrderExportResponse": {
      "type": "object",
      "properties": {
        "exportId": {
          "type": "string",
          "title": "The unique identifier for the file generation that can be used to check its status"
        }
      },
      "title": "Defines the response body from InitiateOrderExport"
    },
    "v1LeaseData": {
      "type": "object",
      "properties": {
        "actionType": {
          "type": "string",
          "title": "Type of action that was taken on the order (eg. approve, decline)"
        },
        "declinedReason": {
          "type": "string",
          "title": "For action_type decline, notes about why the order is declined"
        },
        "declinedReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The selected declined reasons"
        }
      },
      "title": "Data about the order to be used by the automations service"
    },
    "v1LeaseSalesOrderToAutomationsResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response for leasing a sales order to automations"
    },
    "v1ListCustomerSalesOrderRequestDateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time"
        },
        "endRange": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Begin and end of date range"
    },
    "v1ListCustomerSalesOrderRequestFilters": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesordersv1Status"
          },
          "title": "Multiple status filter"
        },
        "created": {
          "$ref": "#/definitions/v1ListCustomerSalesOrderRequestDateRangeFilter",
          "title": "Created date range filter"
        },
        "requestedActivation": {
          "$ref": "#/definitions/v1ListCustomerSalesOrderRequestDateRangeFilter",
          "title": "Requested activation date filter"
        },
        "expiryDate": {
          "$ref": "#/definitions/v1ListCustomerSalesOrderRequestDateRangeFilter",
          "title": "Expiry date filter"
        },
        "businessId": {
          "type": "string",
          "title": "Singular business filter"
        }
      },
      "title": "Filters to list sales orders based on given filter criterias"
    },
    "v1ListCustomerSalesOrderRequestSortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING",
      "title": "The directions that a result set can be sorted in"
    },
    "v1ListCustomerSalesOrderRequestSortField": {
      "type": "string",
      "enum": [
        "REQUESTED_ACTIVATION",
        "CREATED",
        "STATUS",
        "EXPIRY_DATE"
      ],
      "default": "REQUESTED_ACTIVATION",
      "title": "The field to sort a result set on"
    },
    "v1ListCustomerSalesOrderRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1ListCustomerSalesOrderRequestSortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1ListCustomerSalesOrderRequestSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1ListDocumentEventsRequestFilters": {
      "type": "object",
      "properties": {
        "eventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DocumentEventType"
          }
        }
      }
    },
    "v1ListDocumentEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DocumentEvent"
          }
        }
      }
    },
    "v1ListDocumentsRequestFilters": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DocumentType"
          },
          "title": "If not provided, defaults to all types"
        },
        "organizationId": {
          "type": "string"
        },
        "recipientOrganizationId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DocumentStatus"
          },
          "title": "If not provided, defaults to all statuses"
        }
      }
    },
    "v1ListDocumentsResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Document"
          }
        },
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListOrdersRequestDateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time"
        },
        "endRange": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Begin and end of date range"
    },
    "v1ListOrdersRequestFilters": {
      "type": "object",
      "properties": {
        "resellerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The unique ids of resellers"
        },
        "activationStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ActivationStatus"
          },
          "title": "The activation statuses to filter for"
        },
        "fulfillmentStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The fulfillment statuses to filter for"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The app ids to filter for"
        },
        "created": {
          "$ref": "#/definitions/v1ListOrdersRequestDateRangeFilter",
          "title": "Created date range filter"
        },
        "searchTerm": {
          "type": "string",
          "title": "Search term across account name, product name, project name"
        },
        "excludeChildren": {
          "type": "boolean",
          "title": "Indicator of whether or not to exclude children (addons) results from the search"
        },
        "excludeAppIds": {
          "type": "boolean",
          "title": "Indicator to treat any provided app ids as excluded"
        },
        "excludeResellerIds": {
          "type": "boolean",
          "title": "Indicator to treat any provided reseller ids as excluded"
        }
      }
    },
    "v1ListOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorOrder"
          }
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "description": "An int64 indicating the total number of orders returned by the query."
        }
      },
      "title": "Response for getting orders for vendors"
    },
    "v1ListReasonsRequestFilters": {
      "type": "object",
      "properties": {
        "includeArchived": {
          "type": "boolean",
          "description": "Option to include archived reasons."
        }
      }
    },
    "v1ListReasonsResponse": {
      "type": "object",
      "properties": {
        "declinedReasons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeclinedReason"
          },
          "title": "List of declined reasons for a partner"
        }
      }
    },
    "v1ListSalesOrderRequestDateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time"
        },
        "endRange": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Begin and end of date range"
    },
    "v1ListSalesOrderRequestFilters": {
      "type": "object",
      "properties": {
        "marketId": {
          "type": "string",
          "title": "DEPRECATED: Singular market filter. Use market_ids instead. If both are supplied, market_ids will be used instead"
        },
        "salespersonId": {
          "type": "string",
          "title": "DEPRECATED: Singular salesperson filter.  Use salesperson_ids instead.  If both are supplied, salesperson_ids\nwill be used instead"
        },
        "created": {
          "$ref": "#/definitions/v1ListSalesOrderRequestDateRangeFilter",
          "title": "Created date range filter"
        },
        "requestedActivation": {
          "$ref": "#/definitions/v1ListSalesOrderRequestDateRangeFilter",
          "title": "Requested activation date filter"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesordersv1Status"
          },
          "title": "Multiple status filter"
        },
        "businessId": {
          "type": "string",
          "title": "Singular business filter"
        },
        "productId": {
          "type": "string",
          "title": "Singular product filter"
        },
        "productEditionId": {
          "type": "string",
          "title": "Singular product edition filter"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multi market request"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags required to be on the order"
        },
        "untagged": {
          "type": "boolean",
          "description": "Will filter for orders that don't have tags if true."
        },
        "packageId": {
          "type": "string",
          "title": "Singular package filter"
        },
        "expiryDate": {
          "$ref": "#/definitions/v1ListSalesOrderRequestDateRangeFilter",
          "title": "Expiry date filter"
        },
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple salesperson filter"
        },
        "orderId": {
          "type": "string",
          "title": "DEPRECATED: Singular order identifier to filter for. Use order_ids instead. If both are supplied, order_ids will be used instead"
        },
        "orderIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple order identifiers to filter for"
        },
        "includeArchivedOrders": {
          "type": "boolean",
          "title": "Will include archived orders if true"
        }
      },
      "title": "Filters to list sales orders based on given filter criterias"
    },
    "v1ListSalesOrderRequestSortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING",
      "title": "The directions that a result set can be sorted in"
    },
    "v1ListSalesOrderRequestSortField": {
      "type": "string",
      "enum": [
        "REQUESTED_ACTIVATION",
        "CREATED",
        "STATUS",
        "EXPIRY_DATE"
      ],
      "default": "REQUESTED_ACTIVATION",
      "title": "The field to sort a result set on"
    },
    "v1ListSalesOrderRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1ListSalesOrderRequestSortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1ListSalesOrderRequestSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1ListSalesOrderResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Order"
          },
          "title": "list of the requested sales order data"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The number of total results there are"
        }
      },
      "title": "Response to get a list of orders for a partner"
    },
    "v1ListTagsRequestFilters": {
      "type": "object",
      "properties": {
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The market_ids to include when filtering for tags, if empty will filter for all markets"
        }
      },
      "title": "Filters to list tags based on given filter criterias"
    },
    "v1ListTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1OrganizationType": {
      "type": "string",
      "enum": [
        "ORGANIZATION_TYPE_INVALID",
        "ORGANIZATION_TYPE_PARTNER",
        "ORGANIZATION_TYPE_SMB"
      ],
      "default": "ORGANIZATION_TYPE_INVALID"
    },
    "v1Orientation": {
      "type": "string",
      "enum": [
        "ORIENTATION_PORTRAIT",
        "ORIENTATION_LANDSCAPE"
      ],
      "default": "ORIENTATION_PORTRAIT"
    },
    "v1PreviewOrderActivationsResponse": {
      "type": "object",
      "properties": {
        "productActivations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductActivation"
          },
          "title": "List of product activations for order with activations marking products that are already active"
        }
      },
      "title": "Request for comparing requested activations for the order with what's currently active"
    },
    "v1ProductActivation": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "title": "Identifier of a single product that is going through the activation process"
        },
        "editionId": {
          "type": "string",
          "title": "Identifies the (optional) edition of that product that is going through the activation process"
        },
        "activationStatus": {
          "$ref": "#/definitions/v1ActivationStatus",
          "title": "The activation status of a single product"
        },
        "uniqueId": {
          "type": "string",
          "title": "Unique identifier for this product activation, it is possible for this to be empty (historical activations, activations not fully processed, etc)"
        },
        "previousEditionId": {
          "type": "string",
          "title": "Identifies the previous edition id of that product if this activation is an edition change (optional)"
        },
        "activationId": {
          "type": "string",
          "title": "Identifies the existing activation of a product if it was activated before the order was completed"
        },
        "isEditionChange": {
          "type": "boolean",
          "title": "Identifies whether or not this activation is an edition change or not"
        }
      },
      "title": "Represents a single product with its corresponding activation status"
    },
    "v1ProposalEmailDetails": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "emailText": {
          "type": "string"
        },
        "proposalLinkText": {
          "type": "string"
        },
        "closingText": {
          "type": "string"
        }
      }
    },
    "v1ProposalEmailMessage": {
      "type": "object",
      "properties": {
        "to": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Recipient"
          }
        },
        "replyTo": {
          "$ref": "#/definitions/v1Recipient",
          "title": "Recipient whom the message's replies should go to"
        }
      }
    },
    "v1Recipient": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "v1SalesOrderAuxiliaryDataObjectID": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1SalesOrderProjectionFilter": {
      "type": "object",
      "properties": {
        "includeUserInfoInStatusHistory": {
          "type": "boolean",
          "title": "Indicates whether info and role should be included about the user in the status history"
        },
        "includeCustomerRecipient": {
          "type": "boolean",
          "title": "Indicates whether customer recipient data should be included"
        }
      }
    },
    "v1SalespersonOptions": {
      "type": "object",
      "properties": {
        "validateRequiredFields": {
          "type": "boolean",
          "description": "Setting to validate required fields inside Order form."
        },
        "disableSellingStandaloneProducts": {
          "type": "boolean",
          "title": "If true sales people can only create opportunities and orders with packages"
        },
        "disableTagging": {
          "type": "boolean",
          "title": "If true sales people cannot tag orders"
        }
      }
    },
    "v1SearchDocumentsRequestFilters": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DocumentType"
          },
          "title": "If not provided, defaults to all types"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DocumentStatus"
          },
          "title": "If not provided, defaults to all statuses"
        },
        "organizationId": {
          "type": "string"
        },
        "recipientOrganizationId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "organizationUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "If not provided, defaults to all users"
        }
      }
    },
    "v1SearchDocumentsResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Document"
          }
        },
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1SendForCustomerApprovalResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "Unique identifier of an order"
        }
      }
    },
    "v1SentDocumentEmail": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "recipient": {
          "$ref": "#/definitions/v1DocumentEmailRecipient"
        }
      }
    },
    "v1StatusHistoryItem": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The unique identifier of the user that updated the status"
        },
        "status": {
          "$ref": "#/definitions/salesordersv1Status",
          "title": "The status the order was changed to"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the status was created"
        },
        "email": {
          "type": "string",
          "description": "The email fo the user that updated the status."
        },
        "metadata": {
          "type": "string",
          "title": "The metadata is freeform json about the status history item. It's structure depends on the status"
        },
        "name": {
          "type": "string",
          "title": "The name or email of the user"
        },
        "source": {
          "$ref": "#/definitions/v1Source",
          "title": "The source of the user"
        },
        "userRole": {
          "$ref": "#/definitions/v1UserRole",
          "title": "role of the user triggering status change(admin, salesperson, client)"
        }
      },
      "title": "Represents a status change on the order to determine who it was updated by and what time it was updated"
    },
    "v1SubmitDraftForApprovalResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        }
      }
    },
    "v1SubmitDraftResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        }
      }
    },
    "v1SubscriptionLocation": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_LOCATION_NOT_USED",
        "SUBSCRIPTION_LOCATION_PARTNER_CENTER",
        "SUBSCRIPTION_LOCATION_SALES_CENTER",
        "SUBSCRIPTION_LOCATION_BUSINESS_CENTER"
      ],
      "default": "SUBSCRIPTION_LOCATION_NOT_USED",
      "description": "- SUBSCRIPTION_LOCATION_NOT_USED: Don't use this",
      "title": "The locations of where a user can be subscribed to"
    },
    "v1TaxOptions": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "Setting that defines a name for a given tax that should be applied to an order"
        },
        "percentageMultiplier": {
          "type": "number",
          "format": "double",
          "title": "Setting that defines a tax percentage multiplier with a precision between 0.0000 and 1.0000"
        },
        "initialAmount": {
          "type": "string",
          "format": "int64",
          "title": "The initial amount (in cents) of tax to be applied to an order after all tax rules have been taken into account"
        },
        "taxRateId": {
          "type": "string",
          "title": "The id of the tax rate that this tax corresponds to"
        }
      }
    },
    "v1TermsOfServiceOptions": {
      "type": "object",
      "properties": {
        "hideDefaultTermsOfService": {
          "type": "boolean",
          "title": "If this is true the default terms of service will not be prepended to the list of TOS"
        },
        "termsOfService": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TermsOfService"
          },
          "title": "The list of terms of services that can be agreed to"
        }
      }
    },
    "v1UpdateAnswersResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of a customer approving an order"
    },
    "v1UpdateOrderFormAnswersResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "Sales order"
        }
      },
      "title": "Response of a customer approving an order"
    },
    "v1UpdateReasonResponse": {
      "type": "object",
      "properties": {
        "declinedReason": {
          "$ref": "#/definitions/v1DeclinedReason",
          "title": "Updated declined reason"
        }
      }
    },
    "v1UpdateSalespersonResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order"
        }
      }
    },
    "v1UpdateTagsResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order"
        }
      }
    },
    "v1UserRole": {
      "type": "string",
      "enum": [
        "USER_ROLE_UNSPECIFIED",
        "USER_ROLE_ADMIN",
        "USER_ROLE_SALESPERSON",
        "USER_ROLE_CLIENT"
      ],
      "default": "USER_ROLE_UNSPECIFIED"
    },
    "v1ValidateLineItemsResponse": {
      "type": "object",
      "properties": {
        "errorCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ValidationErrorCodes"
          },
          "title": "The validation errors for the order"
        },
        "lineItemErrors": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValidationErrorList"
          },
          "title": "Map of line item index to validation errors"
        }
      }
    },
    "v1ValidationErrorCodes": {
      "type": "string",
      "enum": [
        "VALIDATION_ERROR_CODES_UNKNOWN",
        "VALIDATION_ERROR_CODES_APP_NOT_FOUND",
        "VALIDATION_ERROR_CODES_NO_ORDER_FORM_SUBMISSION_ID",
        "VALIDATION_ERROR_CODES_ORDER_FORM_NOT_FOUND",
        "VALIDATION_ERROR_CODES_ORDER_FORM_ALREADY_USED",
        "VALIDATION_ERROR_CODES_ORDER_FORM_NOT_SUPPORTED",
        "VALIDATION_ERROR_CODES_INVALID_ENTRY_URL",
        "VALIDATION_ERROR_CODES_ENTRY_URL_NOT_PROVIDED",
        "VALIDATION_ERROR_CODES_INVALID_DEPENDENCY",
        "VALIDATION_ERROR_CODES_ALREADY_ACTIVE",
        "VALIDATION_ERROR_CODES_EDITION_NOT_PROVIDED",
        "VALIDATION_ERROR_CODES_EDITIONS_NOT_SUPPORTED",
        "VALIDATION_ERROR_CODES_INVALID_EDITION",
        "VALIDATION_ERROR_CODES_TRIAL_NOT_SUPPORTED",
        "VALIDATION_ERROR_CODES_ACCOUNT_GROUP_NOT_FOUND",
        "VALIDATION_ERROR_CODES_NO_COUNTRY_INFORMATION",
        "VALIDATION_ERROR_CODES_UNSUPPORTED_COUNTRY",
        "VALIDATION_ERROR_CODES_CANNOT_CHANGE_EDITION_OF_TRIAL",
        "VALIDATION_ERROR_CODES_APP_NOT_ACTIVE",
        "VALIDATION_ERROR_CODES_FEATURE_NOT_ENABLED",
        "VALIDATION_ERROR_CODES_APP_IS_SUSPENDED",
        "VALIDATION_ERROR_CODES_PACKAGE_NOT_FOUND",
        "VALIDATION_ERROR_CODES_PARTNER_NOT_OWNER_OF_PACKAGE"
      ],
      "default": "VALIDATION_ERROR_CODES_UNKNOWN",
      "title": "- VALIDATION_ERROR_CODES_NO_ORDER_FORM_SUBMISSION_ID: Order Form errors\n - VALIDATION_ERROR_CODES_INVALID_DEPENDENCY: Order Dependency errors\n - VALIDATION_ERROR_CODES_EDITION_NOT_PROVIDED: Order Item Property errors\n - VALIDATION_ERROR_CODES_ACCOUNT_GROUP_NOT_FOUND: Account Group errors\n - VALIDATION_ERROR_CODES_CANNOT_CHANGE_EDITION_OF_TRIAL: Edition Change errors\n - VALIDATION_ERROR_CODES_FEATURE_NOT_ENABLED: Partner Feature errors\n - VALIDATION_ERROR_CODES_APP_IS_SUSPENDED: Order Item Property errors con't\n - VALIDATION_ERROR_CODES_PACKAGE_NOT_FOUND: Only applies to retail order items"
    },
    "v1ValidationErrorList": {
      "type": "object",
      "properties": {
        "errorCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ValidationErrorCodes"
          }
        }
      }
    },
    "v1VendorOrder": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "The unique identifier of the order"
        },
        "orderFormSubmissionId": {
          "type": "string",
          "title": "The unique identifier of the order form for the particular order item"
        },
        "resellerId": {
          "type": "string",
          "title": "The unique identifier of the reseller (partner) who placed the order"
        },
        "resellerName": {
          "type": "string",
          "title": "The name of the reseller (partner) who placed the order"
        },
        "businessId": {
          "type": "string",
          "title": "The unique identifier of the business the order was for"
        },
        "appId": {
          "type": "string",
          "title": "The unique identifier of the product / order item"
        },
        "appName": {
          "type": "string",
          "title": "The name of the product / order item"
        },
        "business": {
          "$ref": "#/definitions/v1Business",
          "title": "The business information that the order was for"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time the order was placed by the reseller (partner)"
        },
        "pricing": {
          "$ref": "#/definitions/v1Pricing",
          "title": "Pricing information for the order item"
        },
        "activationStatus": {
          "$ref": "#/definitions/v1ActivationStatus",
          "title": "Activation status is the current activation state of the product"
        },
        "fulfillmentStatus": {
          "$ref": "#/definitions/v1FulfillmentStatus",
          "title": "Fulfillment status is the current fulfillment state of the product"
        },
        "rejectedReason": {
          "type": "string",
          "title": "The reason for a rejected order"
        }
      }
    },
    "v1WorkflowStepOptions": {
      "type": "object",
      "properties": {
        "allowSendDirectToAdmin": {
          "type": "boolean",
          "title": "Whether or not the salesperson can send an order directly to an admin"
        },
        "allowSendToCustomer": {
          "type": "boolean",
          "title": "Whether or not the salesperson can send an order to a customer"
        },
        "maintainTermsAndConditionsAgreement": {
          "type": "boolean",
          "title": "Whether or not the terms and conditions remain even when converting to draft"
        },
        "customSalespersonActions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomSalespersonAction"
          },
          "description": "More buttons to show to the salesperson for when they submit."
        },
        "allowOrderFormEditing": {
          "type": "boolean",
          "title": "Allow editing of the order form after it has been submitted"
        },
        "allowCollectPaymentFromCustomer": {
          "type": "boolean",
          "title": "Whether or not the order sent for approval by a salesperson collects payment information from the customer"
        },
        "customApproveActions": {
          "$ref": "#/definitions/v1CustomSalesPersonApproveAction",
          "title": "More buttons to show to the approve action"
        },
        "canChargeSmbOnOrderSubmission": {
          "type": "boolean",
          "title": "Whether or not the salesperson can charge an SMB's saved payment method when they submit an order"
        },
        "useApprovalWorkflowForAdmins": {
          "type": "boolean",
          "title": "Whether or not admin will have to go through the approval workflow(similar to salespeople) for created orders, instead of activating immediately"
        }
      }
    },
    "v1CreateVendorWebhookRecordResponse": {
      "type": "object",
      "properties": {
        "webhookRecord": {
          "$ref": "#/definitions/v1VendorWebhookRecord",
          "title": "The newly created webhook record"
        }
      },
      "title": "Response to request to create a Vendor Webhook Record"
    },
    "v1GetVendorWebhookRecordResponse": {
      "type": "object",
      "properties": {
        "webhookRecord": {
          "$ref": "#/definitions/v1VendorWebhookRecord"
        }
      },
      "title": "Response to request to Get a Vendor Webhook Record"
    },
    "v1UpdateVendorWebhookRecordResponse": {
      "type": "object",
      "properties": {
        "webhookRecord": {
          "$ref": "#/definitions/v1VendorWebhookRecord",
          "title": "The updated webhook record"
        }
      },
      "title": "Response to request to update a Vendor Webhook Record"
    },
    "v1VendorWebhookRecord": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "App Id for the marketplace app the webhook is pertaining to"
        },
        "businessId": {
          "type": "string",
          "title": "Business Id for the business the webhook is pertaining to"
        },
        "webhookType": {
          "$ref": "#/definitions/v1VendorWebhookType",
          "title": "Type of the webhook"
        },
        "webhookId": {
          "type": "string",
          "title": "Unique id of the webhook record"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp at which the webhook record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp at which the webhook record was last updated"
        },
        "webhookBody": {
          "type": "string",
          "title": "Body of the webhook"
        },
        "response": {
          "$ref": "#/definitions/v1WebhookResponse",
          "title": "Information about the response to the webhook"
        }
      },
      "title": "Vendor Webhook information"
    },
    "v1VendorWebhookType": {
      "type": "string",
      "enum": [
        "VENDOR_WEBHOOK_TYPE_UNDETERMINED",
        "VENDOR_WEBHOOK_TYPE_PRODUCT_PURCHASE",
        "VENDOR_WEBHOOK_TYPE_ADDON_PURCHASE",
        "VENDOR_WEBHOOK_TYPE_LOGOUT",
        "VENDOR_WEBHOOK_TYPE_ACCOUNT",
        "VENDOR_WEBHOOK_TYPE_USER",
        "VENDOR_WEBHOOK_TYPE_CUSTOMER"
      ],
      "default": "VENDOR_WEBHOOK_TYPE_UNDETERMINED",
      "title": "- VENDOR_WEBHOOK_TYPE_UNDETERMINED: Undetermined type\n - VENDOR_WEBHOOK_TYPE_PRODUCT_PURCHASE: Product purchase webhook\n - VENDOR_WEBHOOK_TYPE_ADDON_PURCHASE: Addon purchase webhook\n - VENDOR_WEBHOOK_TYPE_LOGOUT: Logout webhook\n - VENDOR_WEBHOOK_TYPE_ACCOUNT: Account webhook\n - VENDOR_WEBHOOK_TYPE_USER: User webhook\n - VENDOR_WEBHOOK_TYPE_CUSTOMER: Customer webhook"
    },
    "v1WebhookResponse": {
      "type": "object",
      "properties": {
        "responseBody": {
          "type": "string",
          "title": "Body of the response"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "title": "Http status code of the response"
        },
        "received": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp at which the response was received"
        }
      },
      "title": "A response to a webhook"
    },
    "DataContractDetails": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description for the contract table and its partition tables"
        },
        "fieldDescriptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DetailsFieldDescription"
          },
          "title": "The descriptions for the fields on the contract table and its partition tables"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DetailsLabel"
          },
          "title": "The labels to be applied to contract table and its partition tables"
        }
      }
    },
    "DataContractPartitionFilter": {
      "type": "object",
      "properties": {
        "partitionStrategy": {
          "$ref": "#/definitions/v1alpha1DataContractPartitionStrategy"
        },
        "filterBy": {
          "type": "string",
          "description": "A field from the view query to filter by for the partition. This means the partition will select all fields from the view query (except the filter_by field) only where the PartitionID is equal to the filter_by specified here."
        },
        "customQuery": {
          "type": "string",
          "title": "The custom query is a standard SQL BigQuery query that selects from the data contract table created by the view_query and scopes it to a particular partition.\nIt should be used if a more complicated filter is needed (such as excluding more fields or filtering on more conditions).\nSince the name of DataContractTableRef and PartitionID can not be known ahead of time, it is necessary to use two tokens in the query that will be replaced at runtime:\n- {{ .DataContractTableRef }}: The name of the data contract table created by the view query\n- {{ .PartitionID }}: The id of the partition\nexample:\nSELECT\n  id,\n  name\nFROM\n  {{ .DataContractTableRef }}\nWHERE\n  partner_id = {{ .PartitionID }} AND hidden = false\nNote that we did not select partner_id in the custom query because it no longer has a purpose within the scope of the partition"
        },
        "includeFullResults": {
          "type": "boolean",
          "title": "The entire results of the view query will be copied to each partition. This should be used in cases where the data in a contract is global / not specific to individual customers"
        }
      },
      "title": "A PartitionFilter describes how to scope the view query to a specific customer partition"
    },
    "DetailsFieldDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the field selected from the view and/or partition query that should be described"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "DetailsLabel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Keys and values can have a maximum length of 63 characters.\nKeys must begin with a lowercase letter, and contain only lowercase letters, numeric characters, underscores, and dashes.\nKeys must be unique per contract"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ListReportsByCategoryResponseCategoryWithReports": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "description of the category"
        },
        "name": {
          "type": "string",
          "title": "name of the category"
        },
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/data_warehousev1alpha1Report"
          },
          "title": "reports in the category"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata",
          "title": "paging metadata for the reports in the category"
        }
      }
    },
    "UpdatePartitionConfigurationRequestFeatureOperation": {
      "type": "object",
      "properties": {
        "enableCreateAndEditReports": {
          "type": "boolean"
        },
        "disableCreateAndEditReports": {
          "type": "boolean"
        }
      }
    },
    "ValidationFailureSeverity": {
      "type": "string",
      "enum": [
        "SEVERITY_UNSET",
        "SEVERITY_CRITICAL",
        "SEVERITY_WARNING"
      ],
      "default": "SEVERITY_UNSET"
    },
    "data_warehousev1alpha1PartitionStrategy": {
      "type": "string",
      "enum": [
        "PARTITION_STRATEGY_UNSET",
        "PARTITION_STRATEGY_PARTNER_ID",
        "PARTITION_STRATEGY_INTERNAL"
      ],
      "default": "PARTITION_STRATEGY_UNSET"
    },
    "data_warehousev1alpha1Report": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the report in Looker"
        },
        "path": {
          "type": "string",
          "description": "the path to the report in Looker, eg \"/dashboards/8\"\nThis property is read-only."
        },
        "title": {
          "type": "string",
          "title": "the title of the report - this is what the dashboard is titled in Looker"
        },
        "description": {
          "type": "string",
          "title": "the description of the report - this is dashboard's description in Looker"
        },
        "thumbnailUrl": {
          "type": "string",
          "description": "a publicly accessible URL to the preview thumbnail of the report\nThis is property read-only."
        },
        "categoryId": {
          "type": "string",
          "title": "the category that the report belongs in"
        },
        "partitionId": {
          "$ref": "#/definitions/v1alpha1PartitionIdentifier",
          "title": "the partition id that created this report, empty if the report was created to be used by all partitions"
        },
        "layoutAndElementsHash": {
          "type": "string",
          "format": "byte",
          "title": "a hash of the layout type and elements of a Looker report, used to determine if a report layout has changed"
        }
      }
    },
    "v1alpha1CreateReportResponse": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string"
        }
      }
    },
    "v1alpha1DataContract": {
      "type": "object",
      "properties": {
        "dataContractId": {
          "type": "string",
          "title": "The globally unique identifier for this data contract"
        },
        "viewQuery": {
          "type": "string",
          "description": "The view query describes how to render the data contract before partitioning\nIt should be a valid Standard SQL BigQuery materialized view query.\nexample:\nSELECT\n  account_group_id as business_id,\n  company_name as business_name,\n  partner_id\nFROM\n  `repcore-prod.vstore_demo_account_group.AccountGroup_view`\nThis will be created as a materialized view that will then be filtered by a relevant partition filter query for each active partition."
        },
        "partitionFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DataContractPartitionFilter"
          },
          "description": "Describes how the data from the view query will be partitioned across customers\nThere can only be one filter_query per partition_strategy.\nData will only be rendered for PartitionConfigurations having a partition_strategy supported in this list."
        },
        "scheduledQueryResourceName": {
          "type": "string",
          "title": "The Resource Name of the scheduled query that creates the base table for this contract"
        },
        "details": {
          "$ref": "#/definitions/DataContractDetails",
          "title": "Details describing the data contract"
        }
      }
    },
    "v1alpha1DataContractPartitionStrategy": {
      "type": "string",
      "enum": [
        "PARTITION_STRATEGY_UNSET",
        "PARTITION_STRATEGY_PARTNER_ID",
        "PARTITION_STRATEGY_INTERNAL"
      ],
      "default": "PARTITION_STRATEGY_UNSET"
    },
    "v1alpha1GetDataContractResponse": {
      "type": "object",
      "properties": {
        "dataContract": {
          "$ref": "#/definitions/v1alpha1DataContract"
        }
      }
    },
    "v1alpha1GetPartitionConfigurationResponse": {
      "type": "object",
      "properties": {
        "partitionConfiguration": {
          "$ref": "#/definitions/v1alpha1PartitionConfiguration"
        }
      }
    },
    "v1alpha1GetReportAssociationResponse": {
      "type": "object",
      "properties": {
        "association": {
          "$ref": "#/definitions/v1alpha1ReportAssociation"
        }
      }
    },
    "v1alpha1GetReportCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1alpha1ReportCategory"
        }
      }
    },
    "v1alpha1GetReportMultiResponse": {
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/data_warehousev1alpha1Report"
          }
        }
      }
    },
    "v1alpha1GetReportPermissionsResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/v1alpha1ReportPermission"
        },
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1GetReportPermissionsResponseAssociation"
          }
        }
      }
    },
    "v1alpha1GetReportPermissionsResponseAssociation": {
      "type": "object",
      "properties": {
        "scope": {
          "$ref": "#/definitions/v1alpha1ReportAssociationScope"
        },
        "user": {
          "$ref": "#/definitions/v1alpha1User"
        }
      }
    },
    "v1alpha1GetReportResponse": {
      "type": "object",
      "properties": {
        "report": {
          "$ref": "#/definitions/data_warehousev1alpha1Report"
        }
      }
    },
    "v1alpha1GetUserMultiResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1User"
          }
        }
      }
    },
    "v1alpha1ListDataContractsResponse": {
      "type": "object",
      "properties": {
        "dataContracts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DataContract"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListOfficialReportsRequestFilters": {
      "type": "object",
      "properties": {
        "partitionStrategy": {
          "$ref": "#/definitions/data_warehousev1alpha1PartitionStrategy",
          "title": "filter to only reports of the specified partition strategy"
        }
      }
    },
    "v1alpha1ListOfficialReportsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/data_warehousev1alpha1Report"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListReportAssociationsRequestFilters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "idType": {
          "$ref": "#/definitions/v1alpha1ReportAssociationIDType"
        },
        "participantId": {
          "type": "string"
        }
      }
    },
    "v1alpha1ListReportAssociationsResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ReportAssociation"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListReportCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ReportCategory"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListReportsByCategoryRequestFilters": {
      "type": "object",
      "properties": {
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to only reports that belong to the specified categories"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1alpha1ListReportsByCategoryResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ListReportsByCategoryResponseCategoryWithReports"
          },
          "title": "a map of category_id to results for that category"
        }
      }
    },
    "v1alpha1ListReportsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ListReportsResponseReport"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListReportsResponseReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the report in Looker"
        },
        "path": {
          "type": "string",
          "title": "the path to the report in Looker, eg \"/dashboards/8\""
        },
        "title": {
          "type": "string",
          "title": "the title of the report - this is what the dashboard is titled in Looker"
        },
        "description": {
          "type": "string",
          "title": "the description of the report - this is dashboard's description in Looker"
        },
        "thumbnailUrl": {
          "type": "string",
          "title": "a publicly accessible URL to the preview thumbnail of the report"
        }
      }
    },
    "v1alpha1ListReportsV2RequestFilters": {
      "type": "object",
      "properties": {
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter to only reports that belong to the specified categories"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1alpha1ListReportsV2Response": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/data_warehousev1alpha1Report"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1PartitionConfiguration": {
      "type": "object",
      "properties": {
        "partitionId": {
          "$ref": "#/definitions/v1alpha1PartitionIdentifier"
        },
        "activatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "activatedBy": {
          "type": "string"
        },
        "deactivatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deactivatedBy": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "enabled": {
          "type": "boolean"
        },
        "features": {
          "$ref": "#/definitions/v1alpha1PartitionFeatures"
        }
      }
    },
    "v1alpha1PartitionFeatures": {
      "type": "object",
      "properties": {
        "createAndEditReports": {
          "type": "boolean",
          "description": "If true, the partition supports creating and editing reports."
        }
      },
      "description": "All partition features beyond being able to read Vendasta-authored reports are optional. If a feature is not set, it is assumed to be false."
    },
    "v1alpha1PartitionIdentifier": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        }
      }
    },
    "v1alpha1ReportAccessScope": {
      "type": "string",
      "enum": [
        "REPORT_ACCESS_SCOPE_UNSET",
        "REPORT_ACCESS_SCOPE_NO_ACCESS",
        "REPORT_ACCESS_SCOPE_VIEW",
        "REPORT_ACCESS_SCOPE_EDIT"
      ],
      "default": "REPORT_ACCESS_SCOPE_UNSET"
    },
    "v1alpha1ReportAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of a report resource that can have associations"
        },
        "idType": {
          "$ref": "#/definitions/v1alpha1ReportAssociationIDType",
          "title": "The type of the report resource indicated by the ID on the association"
        },
        "participantId": {
          "type": "string",
          "title": "The id of the participant that is associated with the report resource\nThis could be a user id if applying to a specific user, or in the form \"<partition_strategy>:<partition_id>\" if applying defaults across a partition"
        },
        "partitionId": {
          "$ref": "#/definitions/v1alpha1PartitionIdentifier",
          "title": "The id of the partition of the report resource that is associated with the user"
        },
        "scope": {
          "$ref": "#/definitions/v1alpha1ReportAssociationScope",
          "title": "The scope of the association"
        }
      }
    },
    "v1alpha1ReportAssociationIDType": {
      "type": "string",
      "enum": [
        "REPORT_ASSOCIATION_ID_TYPE_UNSET",
        "REPORT_ASSOCIATION_ID_TYPE_REPORT",
        "REPORT_ASSOCIATION_ID_TYPE_REPORT_CATEGORY"
      ],
      "default": "REPORT_ASSOCIATION_ID_TYPE_UNSET"
    },
    "v1alpha1ReportAssociationScope": {
      "type": "string",
      "enum": [
        "REPORT_ASSOCIATION_SCOPE_UNSET",
        "REPORT_ASSOCIATION_SCOPE_VIEW",
        "REPORT_ASSOCIATION_SCOPE_EDIT"
      ],
      "default": "REPORT_ASSOCIATION_SCOPE_UNSET"
    },
    "v1alpha1ReportCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the category of reports"
        },
        "name": {
          "type": "string",
          "title": "the name of the category"
        },
        "description": {
          "type": "string",
          "title": "a description of the category"
        }
      }
    },
    "v1alpha1ReportPermission": {
      "type": "string",
      "enum": [
        "REPORT_PERMISSION_UNSET",
        "REPORT_PERMISSION_ALL_CAN_VIEW_ALL_CAN_EDIT",
        "REPORT_PERMISSION_ALL_CAN_VIEW_SOME_CAN_EDIT",
        "REPORT_PERMISSION_SOME_CAN_VIEW_SOME_CAN_EDIT"
      ],
      "default": "REPORT_PERMISSION_UNSET"
    },
    "v1alpha1SearchUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1User"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1UpdateReportPermissionsRequestAssociation": {
      "type": "object",
      "properties": {
        "participantId": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/v1alpha1ReportAssociationScope"
        }
      }
    },
    "v1alpha1User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "IAM unified user id"
        },
        "fullName": {
          "type": "string"
        },
        "profilePictureUrl": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "accessScope": {
          "$ref": "#/definitions/v1alpha1ReportAccessScope"
        }
      }
    },
    "v1alpha1ValidateDataContractResponse": {
      "type": "object",
      "properties": {
        "failures": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ValidationFailure"
          }
        },
        "fieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the field names of the schema of the data contract"
        }
      }
    },
    "v1alpha1ValidationFailure": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/ValidationFailureSeverity"
        },
        "message": {
          "type": "string"
        },
        "field": {
          "type": "string"
        }
      }
    },
    "v1GetMarketingServicesReportResponse": {
      "type": "object",
      "properties": {
        "siteData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReportSiteData"
          }
        }
      }
    },
    "v1GetMultiWebsiteVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WebsiteVulnerabilities"
          }
        }
      }
    },
    "v1GetPartnerReportResponse": {
      "type": "object",
      "properties": {
        "siteData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReportSiteData"
          }
        }
      }
    },
    "v1GetWebsiteVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1ListPluginVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1ListThemeVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1ListWordpressVulnerabilitiesResponse": {
      "type": "object",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1MarketingServicesReportFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "v1PartnerReportFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1ReportSiteData": {
      "type": "object",
      "properties": {
        "websiteId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "websiteUrl": {
          "type": "string"
        },
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1Vulnerability": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "affectedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "patched": {
          "type": "boolean"
        },
        "patchedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "informational": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "remediation": {
          "type": "string"
        },
        "cvssScore": {
          "type": "number",
          "format": "float"
        },
        "cvssRating": {
          "type": "string"
        },
        "cve": {
          "type": "string"
        },
        "cveLink": {
          "type": "string"
        },
        "publishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1WebsiteVulnerabilities": {
      "type": "object",
      "properties": {
        "websiteId": {
          "type": "string"
        },
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vulnerability"
          }
        }
      }
    },
    "v1GetEmailBuilderTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1EmailBuilderTemplate"
        }
      }
    },
    "v1GetEmailBuilderTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailBuilderTemplate"
          }
        }
      }
    },
    "v1ListEmailBuilderTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailBuilderTemplate"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1OwnerType": {
      "type": "string",
      "enum": [
        "OWNER_TYPE_INVALID",
        "OWNER_TYPE_PARTNER",
        "OWNER_TYPE_ACCOUNT_GROUP",
        "OWNER_TYPE_SYSTEM"
      ],
      "default": "OWNER_TYPE_INVALID"
    },
    "v1SearchEmailBuilderTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailBuilderTemplate"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "hits": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1SuggestContentResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "KeywordMatchType": {
      "type": "string",
      "enum": [
        "EXACT",
        "BROAD",
        "PHRASE"
      ],
      "default": "EXACT",
      "title": "Represents different matching strategies for keywords"
    },
    "v1AdwordsApiError": {
      "type": "string",
      "enum": [
        "NO_ERROR",
        "RATE_LIMIT_EXCEEDED",
        "INVALID_URL_IN_SEARCH_PARAMETER"
      ],
      "default": "NO_ERROR",
      "title": "AdWords API error types"
    },
    "v1GetAccountPerformanceResponse": {
      "type": "object",
      "properties": {
        "clicks": {
          "type": "string",
          "format": "int64",
          "title": "Sum of all clicks from all campaigns on the account"
        },
        "impressions": {
          "type": "string",
          "format": "int64",
          "title": "Sum of all impressions from all campaigns on the account"
        },
        "cost": {
          "type": "string",
          "format": "int64",
          "title": "Sum of cost of all clicks and impressions on the account"
        },
        "conversions": {
          "type": "number",
          "format": "double",
          "title": "The number of conversions for all conversion actions"
        },
        "allConversions": {
          "type": "number",
          "format": "double",
          "title": "The best estimate of total conversions driven by adwords"
        }
      },
      "title": "Response containing a stats summary for an account"
    },
    "v1GetCampaignPerformanceEstimationResponse": {
      "type": "object",
      "properties": {
        "keywordEstimates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordEstimation"
          },
          "title": "A list of keywords and their estimates"
        },
        "adwordsError": {
          "$ref": "#/definitions/v1AdwordsApiError",
          "title": "Error from Adwords"
        }
      },
      "title": "Response containing Campaign/Keyword Performance Estimates"
    },
    "v1GetKeywordSuggestionsResponse": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of suggestions for advertising keywords"
        },
        "adwordsError": {
          "$ref": "#/definitions/v1AdwordsApiError",
          "title": "Error from Adwords"
        }
      },
      "title": "The response message containing a keyword suggestion"
    },
    "v1GetReportResponse": {
      "type": "object",
      "properties": {
        "reportCsv": {
          "type": "string",
          "description": "Month,Campaign,Impressions,Clicks,All conv.,Cost\n2018-02-01,My Campaign Name,5,9,1.02,16\n2018-03-01,My Campaign Name,2,5,9.12,1\n2018-02-01,Your Campaign Name,17,1,4.10,6\n2018-03-01,Your Campaign Name,11,9,15.13,10",
          "title": "A csv string WITH header rows. Headers are provided by google\nIf a breakdown by segment was requested there may be multiple rows for each resource (one for each 'segment')\ne.g. SELECT Month, CampaignName, Impressions, Clicks, AllConversions, Cost FROM CAMPAIGN_PERFORMANCE_REPORT DURING LAST_7_DAYS"
        }
      }
    },
    "v1KeywordEstimationRequest": {
      "type": "object",
      "properties": {
        "keyword": {
          "$ref": "#/definitions/v1Keyword",
          "title": "The keyword or phrase to estimate for"
        },
        "isNegative": {
          "type": "boolean",
          "title": "If 'negative' then searches containing this keyword will be excluded"
        },
        "maxCpc": {
          "type": "string",
          "format": "int64",
          "title": "Bound the estimates by a maximum cost per click (in Micros)"
        }
      },
      "title": "A request for a performance estimation of a keyword"
    },
    "v1ListAllAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        }
      },
      "title": "Response containing all accounts accessible by the provided token"
    },
    "v1ListAllAccountsUnderManagerAccountResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        }
      },
      "title": "Response containing all accounts accessible by the provided token under a manager account"
    },
    "v1PerformanceEstimateRange": {
      "type": "object",
      "properties": {
        "min": {
          "$ref": "#/definitions/v1PerformanceEstimation",
          "title": "Minimum bound of the estimate"
        },
        "max": {
          "$ref": "#/definitions/v1PerformanceEstimation",
          "title": "Maximum bound of the estimate"
        }
      },
      "title": "An upper and lower bounded range of performance estimations"
    },
    "v1Bank": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ibtCode": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountHolderName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "mandateAuthorisedName": {
          "type": "string"
        },
        "mandateReceived": {
          "type": "string",
          "format": "date-time"
        },
        "mandateDayFirst": {
          "type": "string",
          "format": "int64"
        },
        "mandateDayRest": {
          "type": "string",
          "format": "int64"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "v1BillToAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressLine4": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "v1ContactPerson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "contactPosition": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "faxNumber": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "contractSigner": {
          "type": "boolean"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "v1GetBankNamesResponse": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SendFacebookMessageRequestAttachment": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MessageAttachmentType"
        },
        "url": {
          "type": "string"
        },
        "isReusable": {
          "type": "boolean",
          "description": "Whether the image url should be used in the message that is sent to the Facebook user.\nIf false then a different url will be generated."
        }
      }
    },
    "SendWhatsAppMessageRequestDocument": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestImage": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bodyParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SendWhatsAppMessageRequestTemplateBodyParameters"
          }
        }
      }
    },
    "SendWhatsAppMessageRequestTemplateBodyParameters": {
      "type": "object",
      "properties": {
        "field": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestText": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestVideo": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        }
      }
    },
    "v1CreateLeadGenAdFormResponse": {
      "type": "object",
      "properties": {
        "leadId": {
          "type": "string"
        }
      },
      "title": "return the leadID for the newly created leadGenAdForm"
    },
    "v1DeleteWhatsAppConnectionResponse": {
      "type": "object"
    },
    "v1FacebookForm": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "leadgenFormId": {
          "type": "string"
        },
        "leadgenFormName": {
          "type": "string"
        },
        "isEnabledForLeads": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "locale": {
          "type": "string"
        }
      },
      "title": "FacebookForm is a Facebook Lead Form associated with a Partner's Facebook Page"
    },
    "v1FacebookPage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "canSubscribeLeadWebhooks": {
          "type": "boolean",
          "title": "true if the user has all required Task(s) to subscribe to Lead Webhooks for this Page, and false otherwise. This is controlled by the user's assigned Roles/Tasks in Facebook Business Manager: https://developers.facebook.com/docs/graph-api/reference/page/subscribed_apps/#permissions"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the list of Tasks the user is permitted to perform for this Page: https://developers.facebook.com/docs/pages/overview/permissions-features#tasks"
        }
      },
      "title": "Object that represent a page from Facebook"
    },
    "v1FacebookPageMessengerStateResponse": {
      "type": "object",
      "properties": {
        "messengerEnabled": {
          "type": "boolean",
          "description": "if true Facebook page subscription exists, we will recieve messages."
        },
        "tokenValid": {
          "$ref": "#/definitions/v1TokenStatus",
          "description": "if VALID, the token is valid and we can send messages on behalf of the page."
        },
        "isPageOwner": {
          "type": "boolean",
          "description": "if true, the organization is assigned as the owner of the page."
        }
      }
    },
    "v1FacebookPagingRequest": {
      "type": "object",
      "properties": {
        "before": {
          "type": "string"
        },
        "after": {
          "type": "string"
        }
      },
      "title": "FacebookPagingRequest we are using the paging from facebook, so if before is populated we will request with before param and receive the previous page\nand if the after have value we will request with the after param and will return the next page"
    },
    "v1FacebookPagingResponse": {
      "type": "object",
      "properties": {
        "before": {
          "type": "string"
        },
        "after": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "description": "FacebookPagingResponse the Facebook paging return the cursor for the previous page and the cursor for the next page, if the same are equals it means that\ndoesn't have a next page, but Facebook return too a nextUrl param that means it has more or not, so we are using this one to return a hasMore value."
    },
    "v1GetFormDataResponse": {
      "type": "object",
      "properties": {
        "facebookForm": {
          "$ref": "#/definitions/v1FacebookForm",
          "title": "the facebook form payload that the ID was given for"
        }
      },
      "title": "the form that matches the given form ID"
    },
    "v1GetLeadGenAdFormResponse": {
      "type": "object",
      "properties": {
        "leadgenAdform": {
          "$ref": "#/definitions/v1LeadGenAdForm"
        }
      }
    },
    "v1GetPagesDataResponse": {
      "type": "object",
      "properties": {
        "pageData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PageData"
          },
          "description": "A set of PageData info, one for each pageId requested."
        }
      }
    },
    "v1GetUserNameResponse": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "v1GetWhatsAppConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1WhatsAppConnection"
        },
        "status": {
          "$ref": "#/definitions/v1WhatsAppConnectionStatus",
          "description": "Only defined if include_status on the request is true."
        }
      }
    },
    "v1GetWhatsAppMessageTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WhatsAppTemplate"
          }
        }
      }
    },
    "v1LeadGenAdForm": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "leadgenId": {
          "type": "string"
        },
        "rawJsonPayload": {
          "type": "string"
        },
        "adName": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        }
      },
      "title": "Object that represent the raw JSON of a lead gen from Facebook"
    },
    "v1ListFormsForPageResponse": {
      "type": "object",
      "properties": {
        "facebookForms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FacebookForm"
          }
        },
        "facebookPaging": {
          "$ref": "#/definitions/v1FacebookPagingResponse"
        }
      },
      "title": "return list of pages for a connected partner based on the longlivedtoken saved for the partner"
    },
    "v1ListLeadGenAdFormsByPartnerIDResponse": {
      "type": "object",
      "properties": {
        "leadgenAdforms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeadGenAdForm"
          }
        },
        "paging": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListPagesForPartnerResponse": {
      "type": "object",
      "properties": {
        "facebookPage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FacebookPage"
          }
        },
        "facebookPaging": {
          "$ref": "#/definitions/v1FacebookPagingResponse"
        }
      },
      "title": "return list of pages for a connected partner based on the longlivedtoken saved for the partner"
    },
    "v1MessageAttachmentType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "IMAGE",
        "AUDIO",
        "VIDEO",
        "FILE",
        "TEMPLATE"
      ],
      "default": "UNSPECIFIED"
    },
    "v1PageData": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "An access token for the specific page."
        },
        "id": {
          "type": "string",
          "description": "The pageId of this page. Usually a string of numbers."
        },
        "about": {
          "type": "string",
          "description": "A string description about the page."
        },
        "canPost": {
          "type": "boolean",
          "description": "A boolean showing whether the page can post."
        },
        "checkins": {
          "type": "string",
          "format": "int64",
          "description": "An int showing how many checkins are at the place represented by a page."
        },
        "isPublished": {
          "type": "boolean",
          "title": "A bool showing whether the page is published and visible to non-admins"
        },
        "talkingAboutCount": {
          "type": "string",
          "format": "int64",
          "description": "An int showing how many people are talking about this page."
        },
        "ratingCount": {
          "type": "string",
          "format": "int64",
          "description": "An int showing how many public ratings there are on this page."
        },
        "username": {
          "type": "string",
          "description": "The username of the page."
        },
        "wereHereCount": {
          "type": "string",
          "format": "int64",
          "description": "A count of how many people have visited this page."
        },
        "category": {
          "type": "string",
          "description": "The category of this page."
        },
        "name": {
          "type": "string",
          "description": "The name of the page."
        },
        "link": {
          "type": "string",
          "description": "A permalink to this page."
        },
        "picture": {
          "$ref": "#/definitions/v1Picture",
          "description": "The profile picture of this page."
        },
        "fanCount": {
          "type": "string",
          "format": "int64",
          "description": "A count of the number of users who like this page."
        }
      },
      "description": "An object that represents all of the data we need to make a page."
    },
    "v1PartnerLeadAdsTokenStatusResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1PermissionsGroup": {
      "type": "string",
      "enum": [
        "PERMISSIONS_GROUP_UNKNOWN",
        "PERMISSIONS_GROUP_MESSENGER"
      ],
      "default": "PERMISSIONS_GROUP_UNKNOWN"
    },
    "v1Picture": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Permalink to the picture."
        },
        "height": {
          "type": "string",
          "format": "int64",
          "description": "Height of the picture in px."
        },
        "width": {
          "type": "string",
          "format": "int64",
          "description": "Width of the picture in px."
        },
        "isSilhouette": {
          "type": "boolean",
          "description": "Stores whether this picture is in silhouette format."
        }
      },
      "description": "An object to hold profile pictures."
    },
    "v1RegisterSessionToConnectLeadAdsForPartnerResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      }
    },
    "v1SendFacebookMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      }
    },
    "v1SendWhatsAppMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      }
    },
    "v1TokenStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "VALID",
        "INVALID",
        "MISSING_PERMISSIONS"
      ],
      "default": "UNKNOWN"
    },
    "v1UpsertWhatsAppConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1WhatsAppConnection"
        }
      }
    },
    "v1VerifyLeadGenTokensResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "title": "Verify will return if the authentication token stored for the partner and page exists and is valid"
    },
    "v1VerifyTokenHasScopesForFeatureResponse": {
      "type": "object",
      "properties": {
        "tokenValid": {
          "type": "boolean"
        },
        "hasAllPermissions": {
          "type": "boolean"
        }
      }
    },
    "v1WhatsAppConnection": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "whatsappBusinessAccountId": {
          "type": "string"
        },
        "phoneNumberId": {
          "type": "string"
        },
        "whatsappConnectionId": {
          "type": "string"
        }
      }
    },
    "v1WhatsAppConnectionStatus": {
      "type": "object",
      "properties": {
        "displayPhoneNumber": {
          "type": "string"
        },
        "statusCode": {
          "$ref": "#/definitions/v1WhatsAppConnectionStatusCode"
        }
      }
    },
    "v1WhatsAppConnectionStatusCode": {
      "type": "string",
      "enum": [
        "WHATSAPP_STATUS_UNKNOWN",
        "WHATSAPP_STATUS_READY",
        "WHATSAPP_STATUS_ERROR_GENERIC",
        "WHATSAPP_STATUS_TOKEN_INVALID",
        "WHATSAPP_STATUS_WEBHOOK_NOT_SETUP"
      ],
      "default": "WHATSAPP_STATUS_UNKNOWN",
      "title": "- WHATSAPP_STATUS_UNKNOWN: The status of the connection is unknown.\n - WHATSAPP_STATUS_READY: Connection exists\n - WHATSAPP_STATUS_ERROR_GENERIC: Generic error (unspecified problem)\n - WHATSAPP_STATUS_TOKEN_INVALID: Token is invalid\nResolution: User need to go through the connection flow again\n - WHATSAPP_STATUS_WEBHOOK_NOT_SETUP: Webhook not setup\nResolution: we need to subscribe to webhook events for this whatsapp business account"
    },
    "v1WhatsAppTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "footer": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/v1WhatsAppTemplateCategory"
        },
        "status": {
          "$ref": "#/definitions/v1WhatsAppTemplateStatus"
        }
      }
    },
    "v1WhatsAppTemplateCategory": {
      "type": "string",
      "enum": [
        "TEMPLATE_CATEGORY_UNKNOWN",
        "TEMPLATE_CATEGORY_UTILITY",
        "TEMPLATE_CATEGORY_AUTHENTICATION",
        "TEMPLATE_CATEGORY_MARKETING"
      ],
      "default": "TEMPLATE_CATEGORY_UNKNOWN"
    },
    "v1WhatsAppTemplateStatus": {
      "type": "string",
      "enum": [
        "TEMPLATE_STATUS_UNKNOWN",
        "TEMPLATE_STATUS_APPROVED",
        "TEMPLATE_STATUS_PENDING",
        "TEMPLATE_STATUS_REJECTED"
      ],
      "default": "TEMPLATE_STATUS_UNKNOWN"
    },
    "v1ClickToCallResponse": {
      "type": "object"
    },
    "v1DeleteFromBucketResponse": {
      "type": "object"
    },
    "v1FuzeUserConfig": {
      "type": "object",
      "properties": {
        "fuzeUserId": {
          "type": "string"
        },
        "allowUserRecordings": {
          "type": "boolean"
        },
        "fuzePhoneNumber": {
          "type": "string"
        },
        "fuzeUserName": {
          "type": "string"
        }
      }
    },
    "v1GetFileNamesByAccountGroupIDResponse": {
      "type": "object",
      "properties": {
        "fileNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetFileNamesByContactIDResponse": {
      "type": "object",
      "properties": {
        "fileNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetFileNamesByIamIDResponse": {
      "type": "object",
      "properties": {
        "fileNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetFileNamesByPartnerIDResponse": {
      "type": "object",
      "properties": {
        "fileNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetPartnerConfigsResponse": {
      "type": "object",
      "properties": {
        "fuzeConfig": {
          "$ref": "#/definitions/v1PartnerFuzeConfig"
        }
      },
      "title": "Additional service configs should be added here"
    },
    "v1GetRecordingURLByFilenameResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string"
        },
        "timeToExpire": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetUserConfigsResponse": {
      "type": "object",
      "properties": {
        "fuzeUserConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FuzeUserConfig"
          }
        }
      }
    },
    "v1OffboardFuzePartnerResponse": {
      "type": "object"
    },
    "v1OffboardFuzeUserRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "iamUserId": {
          "type": "string"
        }
      }
    },
    "v1OffboardFuzeUserResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1UserOffboardResponse"
        },
        "values": {
          "$ref": "#/definitions/v1OffboardFuzeUserRequest"
        }
      }
    },
    "v1OnboardFuzePartnerResponse": {
      "type": "object"
    },
    "v1OnboardFuzeUserRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "iamUserId": {
          "type": "string"
        },
        "fuzePhoneNumber": {
          "type": "string"
        },
        "allowRecordings": {
          "type": "boolean"
        }
      }
    },
    "v1OnboardFuzeUserResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1UserResponse"
        },
        "values": {
          "$ref": "#/definitions/v1OnboardFuzeUserRequest"
        }
      }
    },
    "v1OnboardFuzeUserV2Request": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "iamUserId": {
          "type": "string"
        },
        "fuzeUserName": {
          "type": "string"
        },
        "allowRecordings": {
          "type": "boolean"
        }
      }
    },
    "v1OnboardFuzeUserV2Response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/v1UserResponse"
        },
        "values": {
          "$ref": "#/definitions/v1OnboardFuzeUserV2Request"
        }
      }
    },
    "v1PartnerFuzeConfig": {
      "type": "object",
      "properties": {
        "isAuthTokenSaved": {
          "type": "boolean"
        },
        "allowRecordings": {
          "type": "boolean"
        },
        "minLengthForAnsweredCalls": {
          "type": "string",
          "format": "int64"
        },
        "logUnansweredCalls": {
          "type": "boolean"
        }
      }
    },
    "v1TransferToBucketResponse": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        }
      }
    },
    "v1UserOffboardResponse": {
      "type": "string",
      "enum": [
        "USER_OFFBOARD_RESPONSE_INVALID",
        "USER_OFFBOARD_RESPONSE_SUCCESS"
      ],
      "default": "USER_OFFBOARD_RESPONSE_INVALID"
    },
    "v1UserResponse": {
      "type": "string",
      "enum": [
        "USER_RESPONSE_INVALID",
        "USER_RESPONSE_SUCCESS",
        "USER_RESPONSE_PID_NOT_FUZE",
        "USER_RESPONSE_USER_DOES_NOT_EXIST",
        "USER_RESPONSE_OTHER_ERROR"
      ],
      "default": "USER_RESPONSE_INVALID"
    },
    "BlameSource": {
      "type": "string",
      "enum": [
        "BLAME_SOURCE_SYSTEM",
        "BLAME_SOURCE_USER"
      ],
      "default": "BLAME_SOURCE_SYSTEM"
    },
    "FulfillmentFormFieldOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Stores the valid set of options with display text and internal value. Both fields will always be populated"
    },
    "ListChangeSpendRequestHistoryRequestListChangeSpendRequestsHistoryFilterOptions": {
      "type": "object",
      "properties": {
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of items to return spend change requests for"
        },
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of businesses to return spend change requests for"
        },
        "changeRequestIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of change request ids"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ChangeSpendRequestStatus"
          },
          "title": "List of which statuses a request should be in to be returned"
        }
      }
    },
    "ListChangeSpendRequestHistoryResponseChangeSpendRequestEvents": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "order item id, which could be app id or addon id"
        },
        "businessId": {
          "type": "string",
          "title": "account group id for this request"
        },
        "changeRequestId": {
          "type": "string",
          "title": "unique identifier for this change spend request"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "title": "time stamp of the event and status change"
        },
        "status": {
          "$ref": "#/definitions/v1ChangeSpendRequestStatus",
          "title": "new status of the event"
        },
        "externalData": {
          "$ref": "#/definitions/v1ChangeRequestEventExternalData",
          "title": "external spend change data"
        },
        "requestingUser": {
          "type": "string",
          "description": "user requesting spend change, this will be the email of the user who made the request."
        },
        "resolvedBy": {
          "type": "string",
          "description": "user requesting spend change, this will be the email of the user who resolved the request."
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "title": "time stamp of the event and status change"
        }
      }
    },
    "ListChangeSpendRequestsRequestListChangeSpendRequestsFilterOptions": {
      "type": "object",
      "properties": {
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of items to return spend change requests for"
        },
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of businesses to return spend change requests for"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ChangeSpendRequestStatus"
          },
          "title": "List of which statuses a request should be in to be returned"
        }
      }
    },
    "SalesInfoCost": {
      "type": "object",
      "properties": {
        "billingFrequency": {
          "type": "string",
          "title": "Billing Frequency"
        },
        "currency": {
          "type": "string",
          "title": "Currency"
        },
        "price": {
          "type": "string",
          "format": "int64",
          "title": "Price in cents"
        }
      }
    },
    "SalesInfoOrderFormSubmission": {
      "type": "object",
      "properties": {
        "commonFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Field"
          }
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Field"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ActivationDateIdentifiers": {
      "type": "object",
      "properties": {
        "activationId": {
          "type": "string",
          "title": "activation id of the item"
        },
        "itemId": {
          "type": "string",
          "title": "item id of the item"
        }
      }
    },
    "v1ActivationDates": {
      "type": "object",
      "properties": {
        "activationDate": {
          "type": "string",
          "format": "date-time",
          "title": "the date an item was activated"
        },
        "renewalDate": {
          "type": "string",
          "format": "date-time",
          "title": "the next payment date for an item"
        },
        "commitmentDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date when the final payment of the subscription's commitment is due\n(first day of final billing period on a commitement)"
        },
        "earliestValidScheduledDeactivationDate": {
          "type": "string",
          "format": "date-time",
          "title": "the earliest date and item can be set to deactivate"
        },
        "endOfCommitmentPeriod": {
          "type": "string",
          "format": "date-time",
          "title": "the last day of final billing period of a commitment, when the service for the last payment officially expires"
        }
      }
    },
    "v1ActivationFailureDetails": {
      "type": "object",
      "properties": {
        "orderItemId": {
          "type": "string",
          "description": "id that identifies an order item."
        },
        "failureReason": {
          "$ref": "#/definitions/v1FailureReason",
          "description": "reason code for failure."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "list of failure reason details.\n     * there are activation failures that may return multiple failure details like validation\n       failure which may return multiple error codes that corresponds to order form fields\n       that are causing validation to fail.\n     * details could be numeric values or strings.\n     * for validation failure, details would be numeric values that corresponds to\n       order-fulfillment's validation error codes.\n     * for charge failures, details would be Stripe's error string/code if available.\n       https://stripe.com/docs/error-codes\n     * for vendor rejection failure, details would be a freeform text provided by vendors when\n       they rejected the order item.\n     * for activation failures, as of writting, more granular error details/codes are not\n       available or provided. So only the FailureReason will be available.\n     * details are not guaranteed to be available for all failure reasons as of writting."
        }
      }
    },
    "v1AppInfo": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "fields related to the app the work order is for"
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "v1Blame": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/BlameSource",
          "description": "The source of action\nThis could be a User identified by subject ID, ie: bbassingthwaite@vendasta.com\nor a System-level action, bulk action, etc."
        },
        "sourceIdentifier": {
          "type": "string",
          "title": "Optionally used to provide additional information on source\nie: If source is USER, identifier could be an e-mail"
        }
      }
    },
    "v1BusinessInfo": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "fields related to the account the work order is for"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "partnerLogoUrl": {
          "type": "string"
        },
        "marketName": {
          "type": "string"
        }
      }
    },
    "v1ChangeRequestEventExternalData": {
      "type": "object",
      "properties": {
        "note": {
          "type": "string",
          "title": "note is the requester_note for created events, vendor_response for resolved events"
        },
        "requestedSpendAmount": {
          "type": "string",
          "format": "int64",
          "title": "new spend amount, which a partner requests from the vendor"
        },
        "businessName": {
          "type": "string",
          "description": "name of the business or account group identified by the business_id."
        },
        "resellerName": {
          "type": "string",
          "description": "partner name associated with a business/accountGroup identified by the business_id."
        },
        "itemName": {
          "type": "string",
          "description": "app or product name identified by the item_id."
        },
        "renewalDate": {
          "type": "string",
          "format": "date-time",
          "description": "the next renewal date of the subscription."
        },
        "currentSubscriptionCost": {
          "type": "string",
          "format": "int64",
          "description": "current spend amount set on the subscription."
        },
        "billingFrequency": {
          "$ref": "#/definitions/v1BillingFrequency",
          "title": "the frequency that the subscription renews at"
        },
        "resellerId": {
          "type": "string",
          "description": "partner id associated with a business/accountGroup identified by the business_id."
        },
        "resellerCurrency": {
          "type": "string",
          "title": "the partner's currency"
        }
      }
    },
    "v1ChangeSpendRequest": {
      "type": "object",
      "properties": {
        "changeRequestId": {
          "type": "string",
          "title": "unique identifier for this change spend request"
        },
        "businessId": {
          "type": "string",
          "title": "account group id for this request"
        },
        "itemId": {
          "type": "string",
          "title": "order item id, which could be app id or addon id"
        },
        "activationId": {
          "type": "string",
          "title": "the activation id, which is specific for this change request"
        },
        "requestedSpendAmount": {
          "type": "string",
          "format": "int64",
          "title": "new spend amount, which a partner requests from the vendor"
        },
        "status": {
          "$ref": "#/definitions/v1ChangeSpendRequestStatus",
          "title": "current status of the change request"
        },
        "requesterNote": {
          "type": "string",
          "title": "requester note for this change request"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "the date the request was created"
        },
        "requestingUser": {
          "type": "string",
          "description": "user requesting spend change, this will be the email of the user who made the request."
        },
        "billingOrderId": {
          "type": "string",
          "title": "the order id in billing associated with the billable item for the request"
        },
        "externalData": {
          "$ref": "#/definitions/v1ChangeSpendRequestExternalData",
          "description": "external data referenced by the id fields."
        }
      }
    },
    "v1ChangeSpendRequestExternalData": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string",
          "description": "name of the business or account group identified by the business_id."
        },
        "resellerName": {
          "type": "string",
          "description": "partner name associated with a business/accountGroup identified by the business_id."
        },
        "itemName": {
          "type": "string",
          "description": "app or product name identified by the item_id."
        },
        "renewalDate": {
          "type": "string",
          "format": "date-time",
          "description": "the next renewal date of the subscription."
        },
        "currentSubscriptionCost": {
          "type": "string",
          "format": "int64",
          "description": "current spend amount set on the subscription."
        },
        "billingFrequency": {
          "$ref": "#/definitions/v1BillingFrequency",
          "title": "the frequency that the subscription renews at"
        },
        "resellerId": {
          "type": "string",
          "description": "partner id associated with a business/accountGroup identified by the business_id."
        },
        "resellerCurrency": {
          "type": "string",
          "title": "the partner's currency"
        }
      }
    },
    "v1CreateFulfillmentOrderResponse": {
      "type": "object",
      "properties": {
        "fulfillmentOrder": {
          "$ref": "#/definitions/v1FulfillmentOrder"
        }
      }
    },
    "v1CreateOrderForSingleItemResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "unique identifier of the created order"
        },
        "orderItemId": {
          "type": "string",
          "title": "unique identifier of the single order item"
        },
        "activationId": {
          "type": "string",
          "title": "pregenerated unique identifier for the activation"
        }
      }
    },
    "v1CreateOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "the id of the created order"
        }
      },
      "title": "response message for the successful creation of an order"
    },
    "v1EditionChangeInformation": {
      "type": "object",
      "properties": {
        "currentActivationId": {
          "type": "string",
          "title": "The activation ID that it is coming from"
        },
        "editionChangeReasons": {
          "$ref": "#/definitions/v1Reasons",
          "title": "The user given reasons for this change"
        }
      },
      "title": "Includes information on the edition change ordered"
    },
    "v1FailureReason": {
      "type": "string",
      "enum": [
        "FAILURE_REASON_UNKNOWN_ERROR",
        "FAILURE_REASON_VALIDATION_ERROR",
        "FAILURE_REASON_CHARGE_ERROR",
        "FAILURE_REASON_VENDOR_REJECTED_ERROR",
        "FAILURE_REASON_ACTIVATION_ERROR"
      ],
      "default": "FAILURE_REASON_UNKNOWN_ERROR"
    },
    "v1FormAnswers": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomFields"
          }
        }
      }
    },
    "v1FulfillmentFormConfig": {
      "type": "object",
      "properties": {
        "orderForm": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FulfillmentFormField"
          },
          "title": "Fulfillment form: fields in the fulfillment form"
        },
        "activationMessage": {
          "type": "string",
          "title": "Fulfillment form: message shown to users upon activating the app"
        },
        "separateOrderForms": {
          "type": "boolean",
          "title": "Fulfillment form: should a multi-activatable app/addon use a separate order form for each activation"
        },
        "usesPostBillingOrderForm": {
          "type": "boolean",
          "title": "Fulfillment form: whether or not the order form is to be used post-billing"
        },
        "footerText": {
          "type": "string",
          "title": "Fulfillment form: footer text"
        }
      },
      "title": "Setup for a fulfillment form"
    },
    "v1FulfillmentFormField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string",
          "title": "For textbox fields, this string will be displayed in front of the textbox"
        },
        "suffix": {
          "type": "string",
          "title": "For textbox fields, this string will be displayed behind the textbox"
        },
        "regexValidator": {
          "type": "string",
          "title": "A regex string used to validate a fields answer"
        },
        "regexErrorMessage": {
          "type": "string",
          "title": "The error message displayed if the regex_validator does not match the answer"
        },
        "useWebhookValidator": {
          "type": "boolean",
          "title": "Indicates if this field will call out to the order_form_validator_webhook_url under Integration"
        },
        "allowMultiples": {
          "type": "boolean",
          "description": "The following 3 options are for dropdowns that allow you to choose multiple options\nWhether or not to allow multiple choices."
        },
        "allowDuplicates": {
          "type": "boolean",
          "description": "If you should be able to choose the same option twice."
        },
        "maxChoices": {
          "type": "string",
          "format": "int64",
          "title": "The maximum number of choices you can make"
        },
        "forOfficeUseOnly": {
          "type": "boolean",
          "title": "if this is true the field will not be shown to end users"
        },
        "optionsWithLabels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FulfillmentFormFieldOption"
          }
        },
        "officeEditableOnly": {
          "type": "boolean",
          "title": "if this is true the field will not be editable by end users"
        }
      },
      "title": "Mostly copied from Order Form in marketplace-apps\nField asking user for information when they try to activate the app"
    },
    "v1FulfillmentFormInfo": {
      "type": "object",
      "properties": {
        "hasForm": {
          "type": "boolean"
        }
      }
    },
    "v1FulfillmentFormSubmission": {
      "type": "object",
      "properties": {
        "fulfillmentOrderId": {
          "type": "string",
          "description": "The FulfillmentOrder this is attached to."
        },
        "salesOrderId": {
          "type": "string",
          "description": "The sales order the submission is for."
        },
        "appId": {
          "type": "string",
          "description": "The app in the sales order this form is tied to."
        },
        "version": {
          "type": "string",
          "description": "Timestamp of when this was submitted, in UTC."
        },
        "userId": {
          "type": "string",
          "description": "User ID who submitted this form."
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances of the app in the sales order. Deprecated."
        },
        "formAnswers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormAnswers"
          },
          "description": "Custom fields answers for this form."
        },
        "formConfig": {
          "$ref": "#/definitions/v1FulfillmentFormConfig",
          "description": "The configuration for the form being answered."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time the fulfillment order was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time the fulfillment order was updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Time the fulfillment order was deleted"
        }
      }
    },
    "v1FulfillmentOrder": {
      "type": "object",
      "properties": {
        "fulfillmentOrderId": {
          "type": "string",
          "title": "The unique identifier for this fulfillment order"
        },
        "salesOrderId": {
          "type": "string",
          "title": "The sales order that generated this fulfillment"
        },
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "resellerPartnerId": {
          "type": "string",
          "title": "The channel partner id of the reseller"
        },
        "vendorPartnerId": {
          "type": "string",
          "title": "The partner ID of the vendor doing fulfillment"
        },
        "appId": {
          "type": "string",
          "title": "The app id"
        },
        "status": {
          "$ref": "#/definitions/v1FulfillmentOrderStatus",
          "title": "The status of this fulfillment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time the fulfillment order was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time the fulfillment order was updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "Time the fulfillment order was deleted"
        },
        "businessInfo": {
          "$ref": "#/definitions/v1BusinessInfo",
          "title": "additional fields that will be included based on a projection filter"
        },
        "resellerPartnerInfo": {
          "$ref": "#/definitions/v1ResellerPartnerInfo"
        },
        "appInfo": {
          "$ref": "#/definitions/v1AppInfo"
        },
        "salesInfo": {
          "$ref": "#/definitions/v1SalesInfo"
        },
        "pendingActivationInfo": {
          "$ref": "#/definitions/v1PendingActivationInfo"
        },
        "pendingActivationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ids of the activations associated with the fulfillment order"
        },
        "fulfillmentFormInfo": {
          "$ref": "#/definitions/v1FulfillmentFormInfo",
          "title": "will be included based on the projection filter"
        },
        "associatedProjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FulfillmentOrderProjects"
          }
        }
      }
    },
    "v1FulfillmentOrderProjectionFilter": {
      "type": "object",
      "properties": {
        "includeBusinessInfo": {
          "type": "boolean",
          "title": "indicates if info should be included about the account group"
        },
        "includeResellerPartnerInfo": {
          "type": "boolean",
          "title": "indicates if info should be included about the reselling partner"
        },
        "includeAppInfo": {
          "type": "boolean",
          "title": "indicates if info should be included about the app the work order is for"
        },
        "includeSalesInfo": {
          "type": "boolean",
          "title": "indicates if info should be included about the sales order"
        },
        "includePendingActivationInfo": {
          "type": "boolean",
          "title": "indicates if info should be included about pending activations related to the sales order"
        },
        "includeFulfillmentFormInfo": {
          "type": "boolean",
          "title": "indicates if info should be included about the fulfillment form"
        },
        "includeProjects": {
          "type": "boolean",
          "title": "indicates if info should be included about the associated projects"
        }
      }
    },
    "v1FulfillmentOrderProjects": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "title": "The unique identifier for this project"
        },
        "projectName": {
          "type": "string",
          "title": "The name of the project"
        },
        "projectStatus": {
          "type": "string",
          "title": "The status of the project"
        },
        "projectAssigneeName": {
          "type": "string",
          "title": "The name of the assignee"
        },
        "projectDueDate": {
          "type": "string",
          "format": "date-time",
          "title": "The email of the assignee"
        }
      }
    },
    "v1FulfillmentOrders": {
      "type": "object",
      "properties": {
        "fulfillmentOrders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FulfillmentOrder"
          }
        }
      }
    },
    "v1GetCurrentSpendResponse": {
      "type": "object",
      "properties": {
        "spendAmount": {
          "type": "string",
          "format": "int64",
          "title": "the current spend for the product"
        }
      }
    },
    "v1GetFulfillmentOrderResponse": {
      "type": "object",
      "properties": {
        "fulfillmentOrder": {
          "$ref": "#/definitions/v1FulfillmentOrder"
        }
      }
    },
    "v1GetFulfillmentOrdersForSalesOrderResponse": {
      "type": "object",
      "properties": {
        "fulfillmentOrders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FulfillmentOrder"
          },
          "description": "list of all the Fulfillment Orders for the sales order."
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results"
        }
      }
    },
    "v1GetLatestFulfillmentFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "fulfillmentFormSubmission": {
          "$ref": "#/definitions/v1FulfillmentFormSubmission"
        }
      }
    },
    "v1GetMultiActivationDatesResponse": {
      "type": "object",
      "properties": {
        "activationDates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivationDates"
          }
        }
      }
    },
    "v1GetMultiActivationErrorsForOrderItemsResponse": {
      "type": "object",
      "properties": {
        "failureDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivationFailureDetails"
          },
          "description": "details about the order item activation failure."
        }
      }
    },
    "v1GetMultiBySalesOrderIdsResponse": {
      "type": "object",
      "properties": {
        "fulfillmentOrdersMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1FulfillmentOrders"
          },
          "title": "Returns a map of sales order id to fulfillment orders"
        }
      }
    },
    "v1GetMultiScheduledDeactivationsForBusinessResponse": {
      "type": "object",
      "properties": {
        "scheduledDeactivations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScheduledProvisioningTask"
          },
          "title": "list of scheduled provisioning tasks to return"
        }
      }
    },
    "v1GetOrderByIdempotencyKeyResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/v1Order",
          "title": "The order"
        }
      }
    },
    "v1ListChangeSpendRequestHistoryResponse": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "changeSpendRequestEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListChangeSpendRequestHistoryResponseChangeSpendRequestEvents"
          },
          "title": "The list of spend change events"
        }
      }
    },
    "v1ListChangeSpendRequestsResponse": {
      "type": "object",
      "properties": {
        "changeSpendRequests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChangeSpendRequest"
          },
          "title": "The list of spend changes returned"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        }
      }
    },
    "v1ListOrderItemsResponse": {
      "type": "object",
      "properties": {
        "orderItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrderItem"
          },
          "title": "the list of order items returned"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        }
      },
      "title": "paged list response of order items"
    },
    "v1ListScheduledActivationsForBusinessResponse": {
      "type": "object",
      "properties": {
        "scheduledActivations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScheduledProvisioningTask"
          },
          "title": "list of scheduled provisioning tasks to return"
        },
        "nextCursor": {
          "type": "string",
          "description": "The next cursor for which to fetch the next page."
        },
        "hasMore": {
          "type": "boolean",
          "description": "The flag indicating whether there is another page."
        }
      }
    },
    "v1OrderItem": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "title": "parent order id of the order item"
        },
        "businessId": {
          "type": "string",
          "title": "the business id of the order item"
        },
        "itemId": {
          "type": "string",
          "title": "the item id of the order item"
        },
        "orderItemId": {
          "type": "string",
          "title": "order item id of the order item"
        },
        "orderFormSubmissionId": {
          "type": "string",
          "title": "the submission form id of the order item"
        },
        "editionId": {
          "type": "string",
          "title": "the optional edition id of the order item"
        },
        "isTrial": {
          "type": "boolean",
          "title": "the flag indicating whether the order item is for a trial or not"
        },
        "activationId": {
          "type": "string",
          "title": "activation id of the associated activation"
        },
        "status": {
          "$ref": "#/definitions/v1OrderItemStatus",
          "title": "status of the order item"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "timestamp of when the order item was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "timestamp of when the order item was last updated"
        },
        "validationErrorCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ValidationErrorCodes"
          },
          "title": "error codes if the order item failed validation"
        },
        "productActivationInformation": {
          "$ref": "#/definitions/v1ProductActivationInformation"
        },
        "editionChangeInformation": {
          "$ref": "#/definitions/v1EditionChangeInformation"
        },
        "packageId": {
          "type": "string",
          "title": "the optional package id of the package/bundle containing the order item"
        },
        "chargeFailureCode": {
          "type": "string",
          "description": "A string representing a failure code for the credit card charge for this order item, as defined here: https://stripe.com/docs/error-codes.\nEmpty if the charge succeeded, or if it failed for an unrelated reason."
        },
        "packageInstanceId": {
          "type": "string",
          "title": "the optional instance ID of the package/bundle containing the order item.\nwhen a package is purchased in multiples, this ID will differentiate which items belong to which instance of the package"
        },
        "customPrice": {
          "type": "string",
          "format": "int64",
          "title": "the optional custom price that will be propagated to the recurring subscription within billing"
        },
        "retailAmount": {
          "type": "string",
          "format": "int64",
          "description": "The retail amount for the order item. This is in the smallest currency unit."
        },
        "retailFrequency": {
          "$ref": "#/definitions/v1Frequency",
          "description": "The frequency at which the retail price will be billed."
        },
        "subscriptionId": {
          "type": "string",
          "title": "The subscription ID of the subscription within billing"
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer",
          "title": "The billing relationship the subscription is for"
        }
      },
      "title": "API representation of an Order Item"
    },
    "v1OrderItemParameters": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "the business id for the order item"
        },
        "itemId": {
          "type": "string",
          "title": "the item id for the order item"
        },
        "orderFormSubmissionId": {
          "type": "string",
          "title": "the submission form id for the order item"
        },
        "editionId": {
          "type": "string",
          "title": "the optional edition id for the order item"
        },
        "isTrial": {
          "type": "boolean",
          "title": "the flag indicating whether the order item is for a trial or not"
        },
        "productActivationInformation": {
          "$ref": "#/definitions/v1ProductActivationInformation"
        },
        "editionChangeInformation": {
          "$ref": "#/definitions/v1EditionChangeInformation"
        },
        "packageId": {
          "type": "string",
          "title": "the optional package id of the package/bundle containing the order item"
        },
        "customPrice": {
          "type": "string",
          "format": "int64",
          "title": "the optional custom price that will be propagated to the recurring subscription within billing"
        },
        "packageInstanceId": {
          "type": "string",
          "title": "the optional instance ID of the package/bundle containing the order item.\nwhen a package is purchased in multiples, this ID will differentiate which items belong to which instance of the package"
        },
        "retailAmount": {
          "type": "string",
          "format": "int64",
          "description": "The retail amount for the order item. This is in the smallest currency unit."
        },
        "retailFrequency": {
          "$ref": "#/definitions/v1Frequency",
          "description": "The frequency at which the retail price will be billed."
        },
        "subscriptionId": {
          "type": "string",
          "title": "The subscription ID of the subscription within billing"
        },
        "consumer": {
          "$ref": "#/definitions/v1Consumer",
          "title": "The billing relationship the subscription is for"
        },
        "scheduledDeactivationDate": {
          "type": "string",
          "format": "date-time",
          "title": "The scheduled deactivation date assigned to an order item"
        },
        "scheduledActivationDate": {
          "type": "string",
          "format": "date-time",
          "title": "The scheduled activation date assigned to an order item"
        }
      },
      "title": "Parameters for an Order Item"
    },
    "v1OrderItemStatus": {
      "type": "string",
      "enum": [
        "ORDER_ITEM_STATUS_INVALID",
        "ORDER_ITEM_STATUS_CREATED",
        "ORDER_ITEM_STATUS_VALIDATION_FAILED",
        "ORDER_ITEM_STATUS_CHARGED",
        "ORDER_ITEM_STATUS_CHARGE_SUCCESSFUL",
        "ORDER_ITEM_STATUS_CHARGE_FAILED",
        "ORDER_ITEM_STATUS_PENDING_ACTIVATION",
        "ORDER_ITEM_STATUS_ACTIVATION_FAILED",
        "ORDER_ITEM_STATUS_ACTIVATION_SUCCESSFUL",
        "ORDER_ITEM_STATUS_CANCELED",
        "ORDER_ITEM_STATUS_WAITING_FOR_CONSUMER_INFORMATION",
        "ORDER_ITEM_STATUS_ACTIVATION_SCHEDULED",
        "ORDER_ITEM_STATUS_ACTIVATION_UNSCHEDULED"
      ],
      "default": "ORDER_ITEM_STATUS_INVALID"
    },
    "v1OrderStatus": {
      "type": "string",
      "enum": [
        "ORDER_STATUS_UNKNOWN",
        "ORDER_STATUS_CREATED",
        "ORDER_STATUS_PROCESSING",
        "ORDER_STATUS_CHARGED"
      ],
      "default": "ORDER_STATUS_UNKNOWN"
    },
    "v1PendingActivationInfo": {
      "type": "object",
      "properties": {
        "activationStatuses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1PendingActivationStatus"
          },
          "title": "activation_statuses is a map of activation IDs to their statuses"
        }
      }
    },
    "v1ProductActivationInformation": {
      "type": "object"
    },
    "v1Reasons": {
      "type": "object",
      "properties": {
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of provided reasons the user chose for downgrading an edition"
        },
        "comments": {
          "type": "string",
          "title": "Additional comments provided with regards to why a product was downgraded"
        }
      },
      "title": "A representation of reasons and comments of user feedback for their action"
    },
    "v1ResellerPartnerInfo": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "fields related to the reselling partner the work order is for"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1SalesInfo": {
      "type": "object",
      "properties": {
        "marketName": {
          "type": "string",
          "title": "The market name"
        },
        "salesContact": {
          "$ref": "#/definitions/v1SalesContact",
          "title": "The sales contact information"
        }
      }
    },
    "v1ScheduledProvisioningTask": {
      "type": "object",
      "properties": {
        "activationId": {
          "type": "string",
          "title": "activation id of the item"
        },
        "businessId": {
          "type": "string",
          "title": "business id of the account"
        },
        "itemId": {
          "type": "string",
          "title": "id of the item"
        },
        "scheduledProvisioningTaskStatus": {
          "type": "string",
          "title": "status of the scheduled task"
        },
        "scheduledFor": {
          "type": "string",
          "format": "date-time",
          "title": "time that the item the scheduled task should execute"
        },
        "editionId": {
          "type": "string",
          "title": "id of the edition"
        }
      }
    },
    "v1SearchFulfillmentOrderResponse": {
      "type": "object",
      "properties": {
        "fulfillmentOrders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FulfillmentOrder"
          },
          "title": "list containing results"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results"
        }
      }
    },
    "v1SearchFulfillmentOrderTimeOptions": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "timeField": {
          "$ref": "#/definitions/v1TimeField"
        }
      }
    },
    "v1TimeField": {
      "type": "string",
      "enum": [
        "TIME_FIELD_UNSET",
        "TIME_FIELD_CREATED",
        "TIME_FIELD_UPDATED",
        "TIME_FIELD_DELETED"
      ],
      "default": "TIME_FIELD_UNSET"
    },
    "v1UpsertFulfillmentFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    },
    "smsv1Attribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "A key/value attribute"
    },
    "smsv1GetAccountInfoResponse": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "title": "Response with info about an sms account"
    },
    "smsv1Participant": {
      "type": "object",
      "properties": {
        "internalId": {
          "type": "string",
          "title": "ID in our system for the sender (e.g. account group ID)"
        },
        "type": {
          "$ref": "#/definitions/smsv1ParticipantType",
          "title": "The participant's type in our system (e.g. account group)"
        }
      }
    },
    "smsv1ParticipantType": {
      "type": "string",
      "enum": [
        "PARTICIPANT_TYPE_UNKNOWN",
        "PARTICIPANT_TYPE_ACCOUNT_GROUP",
        "PARTICIPANT_TYPE_CUSTOMER"
      ],
      "default": "PARTICIPANT_TYPE_UNKNOWN"
    },
    "smsv1SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "The message external id"
        },
        "conversationId": {
          "type": "string",
          "title": "The conversation external id"
        }
      },
      "title": "Response of a message sent in a conversation"
    },
    "smsv1Status": {
      "type": "string",
      "enum": [
        "STATUS_NONE",
        "STATUS_SENT",
        "STATUS_DELIVERED",
        "STATUS_READ",
        "STATUS_FAILED",
        "STATUS_UNDELIVERED"
      ],
      "default": "STATUS_NONE",
      "title": "Status represents the status of a message"
    },
    "smsv2Attribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Attributes are key-value pairs that can be attached to a message"
    },
    "smsv2GetAccountInfoResponse": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string"
        },
        "subaccountId": {
          "type": "string",
          "title": "The Twillio subaccount ID"
        }
      },
      "title": "Response with info about an sms account"
    },
    "smsv2Participant": {
      "type": "object",
      "properties": {
        "internalId": {
          "type": "string",
          "title": "ID in our system for the sender (e.g. account group ID)"
        },
        "type": {
          "$ref": "#/definitions/smsv2ParticipantType",
          "title": "The participant's type in our system (e.g. account group)"
        }
      }
    },
    "smsv2ParticipantType": {
      "type": "string",
      "enum": [
        "PARTICIPANT_TYPE_UNKNOWN",
        "PARTICIPANT_TYPE_ACCOUNT_GROUP",
        "PARTICIPANT_TYPE_CUSTOMER",
        "PARTICIPANT_TYPE_PARTNER"
      ],
      "default": "PARTICIPANT_TYPE_UNKNOWN"
    },
    "smsv2SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "The message external id"
        },
        "conversationId": {
          "type": "string",
          "title": "The conversation external id"
        }
      },
      "title": "Response of a message sent in a conversation"
    },
    "v1ConversationMessages": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string",
          "title": "The id of the conversation"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Message"
          },
          "title": "The list of the message's ids"
        }
      }
    },
    "v1MessageKey": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string",
          "title": "The id of the conversation"
        },
        "messageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of the message's ids"
        }
      }
    },
    "v1SendSMSResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/v1Message"
        }
      },
      "title": "Response to send an SMS in a conversation"
    },
    "v2A2PRegistrationInfo": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "title": "ID of the entity in Vendasta that owns the A2P registration info, account group id or partner id"
        },
        "ownerType": {
          "$ref": "#/definitions/v2OwnerType",
          "title": "The type of entity that owns the A2P registration info, account group or partner"
        },
        "friendlyName": {
          "type": "string",
          "title": "Deprecated: friendly name used in twilio, no longer used since there is not a 1:1 mapping between A2P registration info and twilio subaccounts"
        },
        "business": {
          "$ref": "#/definitions/v2Business",
          "description": "The business details that will be submitted to Twilio for this A2P registration."
        },
        "authorizedRepresentative": {
          "$ref": "#/definitions/v2AuthorizedRepresentative",
          "description": "The contact details for the authorized representative of the business."
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "submitted": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the registration was submitted"
        }
      }
    },
    "v2A2PRegistrationStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "ownerType": {
          "$ref": "#/definitions/v2OwnerType"
        },
        "subaccountId": {
          "type": "string"
        },
        "messagingServiceId": {
          "type": "string"
        },
        "secondaryBusinessProfile": {
          "$ref": "#/definitions/v2SecondaryBusinessProfile"
        },
        "trustBundle": {
          "$ref": "#/definitions/v2TrustBundle"
        },
        "brand": {
          "$ref": "#/definitions/v2Brand"
        },
        "messagingCampaign": {
          "$ref": "#/definitions/v2MessagingCampaign"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2AuthorizedRepresentative": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "businessTitle": {
          "type": "string",
          "description": "Freeform title, eg. CEO, President, etc."
        },
        "jobPosition": {
          "type": "string",
          "description": "More structured title from a list of options."
        }
      }
    },
    "v2Brand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2BrandStatus"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "fieldsWithIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DataField"
          }
        }
      }
    },
    "v2BrandStatus": {
      "type": "string",
      "enum": [
        "BRAND_STATUS_UNSPECIFIED",
        "BRAND_STATUS_PENDING",
        "BRAND_STATUS_IN_REVIEW",
        "BRAND_STATUS_FAILED",
        "BRAND_STATUS_APPROVED"
      ],
      "default": "BRAND_STATUS_UNSPECIFIED"
    },
    "v2Business": {
      "type": "object",
      "properties": {
        "legalName": {
          "type": "string",
          "description": "The name of the business that they are legally registered as."
        },
        "businessType": {
          "type": "string",
          "description": "THe type of registered business, eg. corporation or LLC."
        },
        "industry": {
          "type": "string",
          "description": "The major industry that the business operates in."
        },
        "registrationIdentifier": {
          "$ref": "#/definitions/v2RegistrationIdentifier",
          "description": "Regional/national registration identifier."
        },
        "regionOfOperation": {
          "type": "string",
          "description": "The major region the business operates in, generally a continent."
        },
        "websiteUrl": {
          "type": "string",
          "description": "The business' primary website."
        },
        "socialMediaProfileUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The business' social media profile URLs."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address of the business as registered. May be different than their actual operating location."
        },
        "streetAddressSecondary": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "title": "2 letter state code or full state name"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "title": "2 letter ISO country code"
        }
      }
    },
    "v2CallForwardingConfig": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "description": "A configuration for how incoming calls to the phone number should be forwarded."
    },
    "v2CanSendReason": {
      "type": "string",
      "enum": [
        "CAN_SEND_REASON_UNSPECIFIED",
        "CAN_SEND_REASON_MISSING_PHONE_NUMBER",
        "CAN_SEND_REASON_MISSING_SUBACCOUNT",
        "CAN_SEND_REASON_A2P_REGISTRATION_REQUIRED",
        "CAN_SEND_REASON_A2P_REGISTRATION_IN_PROGRESS",
        "CAN_SEND_REASON_A2P_REGISTRATION_REJECTED",
        "CAN_SEND_REASON_UNSUPPORTED_COUNTRY",
        "CAN_SEND_REASON_UNSUPPORTED_SENDER"
      ],
      "default": "CAN_SEND_REASON_UNSPECIFIED"
    },
    "v2CanSendSmsResponse": {
      "type": "object",
      "properties": {
        "canSendSms": {
          "type": "boolean"
        },
        "reason": {
          "$ref": "#/definitions/v2CanSendReason",
          "title": "The reason the sender cannot send an SMS"
        }
      },
      "title": "Response containing if a sender can send an SMS"
    },
    "v2CreateRegulationInfoResponse": {
      "type": "object",
      "properties": {
        "regulationInfoId": {
          "type": "string",
          "title": "ID of the regulation info"
        }
      }
    },
    "v2DataField": {
      "type": "string",
      "enum": [
        "DATA_FIELD_UNSPECIFIED",
        "DATA_FIELD_LEGAL_BUSINESS_NAME",
        "DATA_FIELD_BUSINESS_CATEGORY",
        "DATA_FIELD_BUSINESS_TYPE",
        "DATA_FIELD_REGION_OF_OPERATION",
        "DATA_FIELD_REGISTRATION_IDENTIFIER",
        "DATA_FIELD_STREET_ADDRESS",
        "DATA_FIELD_STREET_ADDRESS_SECONDARY",
        "DATA_FIELD_CITY",
        "DATA_FIELD_STATE",
        "DATA_FIELD_POSTAL_CODE",
        "DATA_FIELD_WEBSITE_URL",
        "DATA_FIELD_COUNTRY",
        "DATA_FIELD_FIRST_NAME",
        "DATA_FIELD_LAST_NAME",
        "DATA_FIELD_JOB_POSITION",
        "DATA_FIELD_BUSINESS_TITLE",
        "DATA_FIELD_EMAIL",
        "DATA_FIELD_PHONE_NUMBER",
        "DATA_FIELD_BUSINESS_REGISTRATION_NUMBER"
      ],
      "default": "DATA_FIELD_UNSPECIFIED"
    },
    "v2EndCallMessage": {
      "type": "object",
      "properties": {
        "messageContent": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v2GetA2PRegistrationInfoResponse": {
      "type": "object",
      "properties": {
        "a2pRegistrationInfo": {
          "$ref": "#/definitions/v2A2PRegistrationInfo"
        }
      }
    },
    "v2GetAttributeEventStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2StatusStat"
          },
          "title": "The event stats"
        }
      },
      "title": "Response for the GetAttributeEventStats RPC"
    },
    "v2GetLatestA2PRegistrationStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2A2PRegistrationStatus"
        }
      }
    },
    "v2GetLimitResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The place that the limit pertains to, eg. RM."
        },
        "ownerId": {
          "type": "string",
          "title": "ID in our system for the limit (e.g. account group ID)"
        },
        "limitType": {
          "$ref": "#/definitions/v2LimitType",
          "title": "The type of limit being returned"
        },
        "usage": {
          "type": "string",
          "format": "int64",
          "title": "The current usage of the limit"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "The limit"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the limit was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the limit was last updated"
        }
      }
    },
    "v2GetPhoneNumberConfigResponse": {
      "type": "object",
      "properties": {
        "phoneNumberConfig": {
          "$ref": "#/definitions/v2PhoneNumberConfig",
          "title": "The sub-account config"
        }
      }
    },
    "v2LimitType": {
      "type": "string",
      "enum": [
        "LIMIT_TYPE_UNSPECIFIED",
        "LIMIT_TYPE_DAILY"
      ],
      "default": "LIMIT_TYPE_UNSPECIFIED"
    },
    "v2MessagingCampaign": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2MessagingCampaignStatus"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2MessagingCampaignStatus": {
      "type": "string",
      "enum": [
        "MESSAGING_CAMPAIGN_STATUS_UNSPECIFIED",
        "MESSAGING_CAMPAIGN_STATUS_PENDING",
        "MESSAGING_CAMPAIGN_STATUS_FAILED",
        "MESSAGING_CAMPAIGN_STATUS_VERIFIED"
      ],
      "default": "MESSAGING_CAMPAIGN_STATUS_UNSPECIFIED"
    },
    "v2MissedCallMessagingConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "trigger": {
          "$ref": "#/definitions/v2MissedCallTrigger"
        },
        "messageContent": {
          "type": "string"
        }
      },
      "title": "A configuration for how and when messaging should be used to follow up with calls made to the number"
    },
    "v2MissedCallTrigger": {
      "type": "string",
      "enum": [
        "MISSED_CALL_TRIGGER_UNSPECIFIED",
        "MISSED_CALL_TRIGGER_CALL_RECEIVED",
        "MISSED_CALL_TRIGGER_FORWARDED_CALL_MISSED"
      ],
      "default": "MISSED_CALL_TRIGGER_UNSPECIFIED"
    },
    "v2OwnerType": {
      "type": "string",
      "enum": [
        "OWNER_TYPE_UNSPECIFIED",
        "OWNER_TYPE_PARTNER",
        "OWNER_TYPE_ACCOUNT_GROUP"
      ],
      "default": "OWNER_TYPE_UNSPECIFIED"
    },
    "v2PhoneNumberConfig": {
      "type": "object",
      "properties": {
        "callForwarding": {
          "$ref": "#/definitions/v2CallForwardingConfig"
        },
        "missedCallMessaging": {
          "$ref": "#/definitions/v2MissedCallMessagingConfig"
        },
        "voiceAi": {
          "$ref": "#/definitions/v2VoiceAIConfig"
        },
        "endCallMessage": {
          "type": "string"
        },
        "endCall": {
          "$ref": "#/definitions/v2EndCallMessage"
        }
      },
      "description": "A configuration for a phone number in the Twilio platform."
    },
    "v2Recipient": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "title": "The phone number to send an SMS message to"
        }
      },
      "title": "Someone who receives an SMS message"
    },
    "v2RegistrationIdentifier": {
      "type": "object",
      "properties": {
        "identifierType": {
          "type": "string",
          "description": "The type of the identifier, usually a national standard, eg. EIN for the US."
        },
        "identifier": {
          "type": "string",
          "description": "The value of the identifier."
        }
      }
    },
    "v2SecondaryBusinessProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2ValidationStatus"
        },
        "authorizedRepresentativeId": {
          "type": "string"
        },
        "addressResourceId": {
          "type": "string"
        },
        "addressSupportingDocumentId": {
          "type": "string"
        },
        "secondaryBusinessInformationId": {
          "type": "string"
        },
        "fieldsWithIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DataField"
          }
        }
      }
    },
    "v2Sender": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "title": "ID in our system for the sender (e.g. account group ID)"
        },
        "ownerType": {
          "$ref": "#/definitions/v2OwnerType",
          "title": "Type of the owner (e.g. account group)"
        },
        "namespace": {
          "type": "string",
          "description": "The place that the message is coming from, eg. RM."
        }
      },
      "title": "Someone who sends an SMS message"
    },
    "v2StatusStat": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2StatusType"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v2StatusType": {
      "type": "string",
      "enum": [
        "STATUS_TYPE_UNSPECIFIED",
        "STATUS_TYPE_QUEUED",
        "STATUS_TYPE_SENDING",
        "STATUS_TYPE_SENT",
        "STATUS_TYPE_FAILED",
        "STATUS_TYPE_DELIVERED",
        "STATUS_TYPE_UNDELIVERED",
        "STATUS_TYPE_RECEIVING",
        "STATUS_TYPE_RECEIVED",
        "STATUS_TYPE_ACCEPTED",
        "STATUS_TYPE_SCHEDULED",
        "STATUS_TYPE_CANCELED"
      ],
      "default": "STATUS_TYPE_UNSPECIFIED"
    },
    "v2SupportingDocumentInfo": {
      "type": "object",
      "properties": {
        "documentType": {
          "type": "string",
          "title": "Twilio's type of document"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/smsv2Attribute"
          },
          "title": "The attributes of the document, or address attributes to be processed"
        },
        "fileId": {
          "type": "string",
          "title": "File ID for a document that has been uploaded to the SMS microservice (http endpoint)"
        },
        "processAddress": {
          "type": "boolean",
          "title": "Whether to process address attributes into a Twilio address object"
        }
      }
    },
    "v2TrustBundle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2ValidationStatus"
        },
        "companyId": {
          "type": "string"
        },
        "fieldsWithIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DataField"
          }
        }
      }
    },
    "v2ValidationStatus": {
      "type": "string",
      "enum": [
        "VALIDATION_STATUS_UNSPECIFIED",
        "VALIDATION_STATUS_COMPLIANT",
        "VALIDATION_STATUS_NON_COMPLIANT"
      ],
      "default": "VALIDATION_STATUS_UNSPECIFIED"
    },
    "v2VoiceAIConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "description": "A configuration for how AI should engage with incoming calls."
    },
    "ListPostsRequestDateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time"
        },
        "endRange": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OperationCommonResources": {
      "type": "object",
      "properties": {
        "commonResources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ExtractedValue"
          }
        }
      }
    },
    "PostLatestComments": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/theloopv1Comment"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "UpdatePostTypeRequestOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "commonResources": {
          "$ref": "#/definitions/OperationCommonResources"
        },
        "templateId": {
          "type": "string"
        },
        "partnerIdPath": {
          "type": "string"
        },
        "marketIdPath": {
          "type": "string"
        },
        "userIdPath": {
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/UpdatePostTypeRequestOperationFilters"
        },
        "channel": {
          "type": "string"
        },
        "iconResource": {
          "$ref": "#/definitions/v1IconResource"
        },
        "postIdTemplate": {
          "type": "string"
        }
      }
    },
    "UpdatePostTypeRequestOperationFilters": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Filter"
          }
        }
      }
    },
    "theloopv1Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the comment populated on creation"
        },
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "The commenter populated on creation"
        },
        "text": {
          "type": "string",
          "title": "The text of the comment"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/theloopv1Comment",
          "title": "The comment that was created"
        }
      }
    },
    "v1CommonResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The id of the common resource, use this as the id for the common resources of your posttype"
        },
        "name": {
          "type": "string",
          "title": "The display name of this common resource"
        }
      }
    },
    "v1CreatePostTypeResponse": {
      "type": "object",
      "properties": {
        "typeId": {
          "type": "string"
        }
      }
    },
    "v1ExtractedValue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "valuePath": {
          "type": "string"
        }
      }
    },
    "v1FilterOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1GetChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetPostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post",
          "title": "The post"
        }
      }
    },
    "v1GetPostTypeResponse": {
      "type": "object",
      "properties": {
        "postType": {
          "$ref": "#/definitions/v1PostType"
        }
      }
    },
    "v1Icon": {
      "type": "object",
      "properties": {
        "iconPath": {
          "type": "string"
        },
        "matIcon": {
          "type": "string"
        }
      }
    },
    "v1IconResource": {
      "type": "object",
      "properties": {
        "resourcePath": {
          "type": "string",
          "title": "Path to extract value to be used for checking icon type"
        },
        "defaultIcon": {
          "$ref": "#/definitions/v1Icon",
          "title": "Default icon, can be either a path or mat icon"
        },
        "customTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1IconType"
          },
          "title": "Map of custom icon types"
        }
      }
    },
    "v1IconType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "icon": {
          "$ref": "#/definitions/v1Icon"
        }
      }
    },
    "v1LikeResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "The user that liked the post"
        }
      }
    },
    "v1ListCommonResourcesResponse": {
      "type": "object",
      "properties": {
        "commonResources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CommonResource"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListPostTypesRequestFilters": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        }
      }
    },
    "v1ListPostTypesResponse": {
      "type": "object",
      "properties": {
        "postTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PostType"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        }
      }
    },
    "v1ListPostsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Post"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging metadata"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The number of total results there are"
        }
      }
    },
    "v1PostIdentifier": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        }
      }
    },
    "v1RenderOption": {
      "type": "string",
      "enum": [
        "RENDER_OPTION_FULL",
        "RENDER_OPTION_COMPACT"
      ],
      "default": "RENDER_OPTION_FULL",
      "description": "- RENDER_OPTION_FULL: FULL renders the full template html and style and returns latest comments\n - RENDER_OPTION_COMPACT: COMPACT renders the compact template html, and does not return style or latest comments",
      "title": "RenderOption affects the way post information will be returned"
    },
    "DeleteCategoryRelationshipByOriginAndTargetRequestIdentifier": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "categoryType": {
          "$ref": "#/definitions/v1CategoryType"
        }
      }
    },
    "UpdateCategoryMappingsRequestMappings": {
      "type": "object",
      "properties": {
        "referencesId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referencedById": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "relationship": {
          "$ref": "#/definitions/v1TypeCategoryRelationship"
        }
      }
    },
    "UpdateCategoryMappingsV2RequestMapping": {
      "type": "object",
      "properties": {
        "originId": {
          "type": "string"
        },
        "targetType": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "targetId": {
          "type": "string"
        },
        "relationship": {
          "$ref": "#/definitions/v1TypeCategoryRelationship"
        },
        "humanVerified": {
          "type": "boolean"
        }
      }
    },
    "UpdateCategoryRequestUpdateFields": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "isHidden": {
          "type": "boolean"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CategoryTranslation"
          }
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "v1CategoryClass": {
      "type": "string",
      "enum": [
        "CATEGORY_CLASS_CONCRETE",
        "CATEGORY_CLASS_ABSTRACT"
      ],
      "default": "CATEGORY_CLASS_CONCRETE"
    },
    "v1CategoryLocale": {
      "type": "object",
      "properties": {
        "country": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CategoryPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "description": "Metadata for paging through a list/search endpoint."
    },
    "v1CategoryPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "description": "Metadata for paging through a list/search endpoint."
    },
    "v1CategoryRelationships": {
      "type": "object",
      "properties": {
        "originId": {
          "type": "string"
        },
        "targetId": {
          "type": "string"
        },
        "originCategory": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "targetCategory": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "typeCategoryRelationship": {
          "$ref": "#/definitions/v1TypeCategoryRelationship"
        },
        "humanVerified": {
          "type": "boolean"
        }
      }
    },
    "v1CategoryRequest": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "categoryType": {
          "$ref": "#/definitions/v1CategoryType"
        }
      }
    },
    "v1CategorySearchResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1CategoryTranslation": {
      "type": "object",
      "properties": {
        "locale": {
          "$ref": "#/definitions/v1Locale"
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        }
      }
    },
    "v1CategoryType": {
      "type": "string",
      "enum": [
        "CATEGORY_TYPE_V_CATEGORY",
        "CATEGORY_TYPE_V_TAX",
        "CATEGORY_TYPE_GOOGLE_PLACES",
        "CATEGORY_TYPE_GMB",
        "CATEGORY_TYPE_UBERALL",
        "CATEGORY_TYPE_YEXT",
        "CATEGORY_TYPE_BING",
        "CATEGORY_TYPE_DATA_AXLE",
        "CATEGORY_TYPE_FOURSQUARE",
        "CATEGORY_TYPE_LOCALEZE",
        "CATEGORY_TYPE_NEUSTAR",
        "CATEGORY_TYPE_APPLE",
        "CATEGORY_TYPE_APPLE_2",
        "CATEGORY_TYPE_EZLOCAL"
      ],
      "default": "CATEGORY_TYPE_V_CATEGORY",
      "description": " - CATEGORY_TYPE_APPLE: Deprecated: Use CATEGORY_TYPE_APPLE_2 instead."
    },
    "v1CreateCategoryResponse": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        }
      }
    },
    "v1GetAllCategoryMappingsResponse": {
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "a list of categories in which the input category serves as the origin"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "a list of categories in which the input category serves as the target"
        },
        "relationships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CategoryRelationships"
          },
          "title": "a list of mappings with all relationship details"
        }
      }
    },
    "v1GetCategoryByExternalIDsAndTypeResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          }
        }
      }
    },
    "v1GetCategoryByNameAndTypeResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1Category"
        }
      }
    },
    "v1GetCategoryListResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "The obtained category"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1CategoryPagedResponseMetadata"
        }
      }
    },
    "v1GetCategoryMappingResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1Category",
          "title": "The obtained category"
        }
      }
    },
    "v1GetCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/v1Category",
          "title": "The obtained category"
        }
      }
    },
    "v1GetMappingManagementDataResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MappingManagementData"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1GetMultiCategoryMappingResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          },
          "title": "The obtained category"
        }
      }
    },
    "v1GetSuggestedMappingsForCategoryResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SuggestedMappingTarget"
          }
        }
      }
    },
    "v1ListSuggestedMappingsForCategoryTypeResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SuggestedMappings"
          }
        }
      }
    },
    "v1Locale": {
      "type": "string",
      "enum": [
        "LOCALE_UNSET",
        "LOCALE_AFRIKAANS",
        "LOCALE_CZECH",
        "LOCALE_DUTCH",
        "LOCALE_ENGLISH",
        "LOCALE_FRENCH",
        "LOCALE_FRENCH_CANADA",
        "LOCALE_GERMAN",
        "LOCALE_ITALIAN",
        "LOCALE_JAPANESE",
        "LOCALE_PORTUGUESE_BRAZIL",
        "LOCALE_RUSSIAN",
        "LOCALE_SPANISH_LATIN_AMERICA"
      ],
      "default": "LOCALE_UNSET"
    },
    "v1MappingManagementData": {
      "type": "object",
      "properties": {
        "origin": {
          "$ref": "#/definitions/v1Category"
        },
        "targetType": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Category"
          }
        },
        "relationship": {
          "$ref": "#/definitions/v1TypeCategoryRelationship"
        },
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SuggestedMappingTarget"
          }
        }
      }
    },
    "v1SuggestedMappingTarget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1SuggestedMappings": {
      "type": "object",
      "properties": {
        "originType": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "targetType": {
          "$ref": "#/definitions/v1CategoryType"
        },
        "originId": {
          "type": "string"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SuggestedMappingTarget"
          }
        }
      }
    },
    "v1TypeCategoryRelationship": {
      "type": "string",
      "enum": [
        "TYPE_CATEGORY_RELATIONSHIP_EXACT_MATCH",
        "TYPE_CATEGORY_RELATIONSHIP_GOOD_MATCH",
        "TYPE_CATEGORY_RELATIONSHIP_OK_MATCH"
      ],
      "default": "TYPE_CATEGORY_RELATIONSHIP_EXACT_MATCH"
    },
    "v1ValidateCategoryResponse": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean",
          "title": "Returns true when the category is a valid category"
        }
      }
    },
    "v1ValidateVCategoriesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v2GetLogByTimestampResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wsp_loggerv2Log"
          },
          "title": "The logs associated with a site"
        }
      }
    },
    "v2PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "To provide options for the paged request"
    },
    "v2PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "The next cursor that can be provided to retrieve the next page of results"
        }
      },
      "title": "Contains paging metadata about the response"
    },
    "wsp_loggerv1ListLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wsp_loggerv1Log"
          },
          "title": "/ The logs associated with a site"
        }
      }
    },
    "wsp_loggerv1Log": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the error log"
        },
        "severity": {
          "type": "string",
          "title": "Severity of the error"
        },
        "log": {
          "type": "string",
          "title": "The log text payload"
        }
      }
    },
    "wsp_loggerv2ListLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wsp_loggerv2Log"
          },
          "title": "The logs associated with a site"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v2PagedResponseMetadata",
          "title": "Paging metadata for the response"
        }
      }
    },
    "wsp_loggerv2Log": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the error log"
        },
        "severity": {
          "type": "string",
          "title": "Severity of the error"
        },
        "log": {
          "type": "string",
          "title": "The log text payload"
        },
        "timestampString": {
          "type": "string",
          "title": "Timestamp of the error log as a string"
        }
      }
    },
    "FindSimilarEmbeddingsRequestRerankOptions": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/v1alpha1EmbeddingRerankerMethod",
          "description": "The method to use for reranking the embeddings."
        }
      }
    },
    "FindSimilarEmbeddingsResponseMatch": {
      "type": "object",
      "properties": {
        "embedding": {
          "$ref": "#/definitions/v1alpha1Embedding",
          "description": "The embedding that was matched."
        },
        "similarity": {
          "type": "number",
          "format": "double",
          "description": "The similarity between the query and the embedding.\nThis value falls between 0 and 1, with 1 being a perfect match and 0 having no similarity."
        }
      }
    },
    "KnowledgeSourceConfigBusinessProfileConfig": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "KnowledgeSourceConfigCustomDataConfig": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "free-form text content"
        },
        "fileUrl": {
          "type": "string",
          "title": "url to an uploaded file containing the content"
        }
      }
    },
    "KnowledgeSourceConfigWebsiteScrapeConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "the url to scrape, should include the protocol (http/https)"
        },
        "crawlMode": {
          "$ref": "#/definitions/v1alpha1WebsiteScrapeConfigCrawlMode",
          "title": "the crawl mode to use when scraping the website"
        },
        "scrapedPages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WebsiteScrapeConfigScrapedPage"
          }
        },
        "scrapeProgress": {
          "$ref": "#/definitions/v1alpha1WebsiteScrapeConfigProgress",
          "title": "the progress of the scrape"
        },
        "lastScraped": {
          "type": "string",
          "format": "date-time",
          "title": "the last time the website was scraped, which will be the oldest timestamp of all the scraped pages"
        },
        "error": {
          "$ref": "#/definitions/WebsiteScrapeConfigWebsiteScrapeConfigError"
        },
        "inProgressScrapedPages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WebsiteScrapeConfigScrapedPage"
          }
        },
        "options": {
          "$ref": "#/definitions/WebsiteScrapeConfigWebsiteScrapeOptions"
        }
      }
    },
    "NamespaceAdminNamespace": {
      "type": "object",
      "title": "only Vendasta admins can create and modify knowledge in this namespace"
    },
    "WebsiteScrapeConfigScrapedPage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "the url of the page that was scraped"
        },
        "title": {
          "type": "string",
          "title": "the title of the page"
        },
        "errorMessage": {
          "type": "string",
          "title": "error message if the page could not be scraped"
        },
        "trainingEnabled": {
          "type": "boolean",
          "title": "whether the page is enabled for training"
        },
        "lastScraped": {
          "type": "string",
          "format": "date-time",
          "title": "the last time the page was scraped"
        },
        "doneScraping": {
          "type": "boolean",
          "title": "a page is done scraping if it has finished retrieving content for the page or has an error message\nthis should only be relevant for in_progress_scraped_pages"
        }
      }
    },
    "WebsiteScrapeConfigWebsiteScrapeConfigError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "title": "the error message"
        }
      },
      "title": "error if the provided url could not be scraped"
    },
    "WebsiteScrapeConfigWebsiteScrapeOptions": {
      "type": "object",
      "properties": {
        "disableAutoTraining": {
          "type": "boolean",
          "title": "whether to disable auto training for the website scrape"
        }
      },
      "title": "options for scraping the website"
    },
    "v1alpha1App": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the app that is implementing knowledge bases"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the app belongs to. Can be set only on create."
        },
        "name": {
          "type": "string",
          "title": "the name of the app"
        },
        "configurationUrl": {
          "type": "string",
          "title": "a url for where the knowledge bases can be edited for the app"
        },
        "knowledgeBaseKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KnowledgeBaseKey"
          },
          "title": "the knowledge bases that the app is associated with"
        },
        "appType": {
          "type": "string",
          "title": "The type of app"
        },
        "appTypeName": {
          "type": "string",
          "description": "The human-readable name of the app type. Read-only."
        },
        "iconUrl": {
          "type": "string",
          "description": "The url to an icon for the app. Read-only."
        },
        "externalId": {
          "type": "string",
          "title": "the id of the external entity for the app"
        }
      }
    },
    "v1alpha1AppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "the id of the app"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the app belongs to."
        }
      },
      "description": "Deprecated: Use AppKeyV2 instead."
    },
    "v1alpha1AppKeyV2": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string",
          "title": "the id of the external entity for the app"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the app belongs to."
        },
        "appType": {
          "type": "string",
          "title": "The type of app"
        }
      }
    },
    "v1alpha1ChatAnswerCitation": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1alpha1EmbeddingSourceType",
          "title": "The type of source"
        },
        "description": {
          "type": "string",
          "title": "A description of the citation"
        },
        "link": {
          "type": "string",
          "title": "The link to the cited source"
        },
        "title": {
          "type": "string",
          "title": "The title of the cited source"
        },
        "content": {
          "type": "string",
          "title": "The content of the citation"
        }
      }
    },
    "v1alpha1ChatBookingOption": {
      "type": "object",
      "properties": {
        "displayText": {
          "type": "string",
          "title": "The option display text"
        },
        "scheduleId": {
          "type": "string",
          "title": "The option identifier"
        }
      }
    },
    "v1alpha1CreateEmbeddingResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateKnowledgeBaseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      }
    },
    "v1alpha1CreateKnowledgeSourceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      }
    },
    "v1alpha1Embedding": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The embedding ID."
        },
        "content": {
          "type": "string",
          "description": "The content vectorized into an embedding."
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1EmbeddingMetadata"
        }
      }
    },
    "v1alpha1EmbeddingCitation": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string",
          "description": "The link to the source of the content. Required."
        },
        "title": {
          "type": "string",
          "description": "The title of the source of the content. An application could use this to cite the content in a more readable way. Optional."
        },
        "description": {
          "type": "string",
          "description": "The description of the source of the content. An application could use this to cite the content in a more readable way. Optional."
        }
      }
    },
    "v1alpha1EmbeddingMetadata": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The IAM user that created the embedding. Can be a service account. Can be set only on create."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the embedding was created. Read-only."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the embedding was last updated. Read-only."
        },
        "relationship": {
          "$ref": "#/definitions/v1alpha1EmbeddingRelationship",
          "description": "The platform resource that this embedding is related to. Can only be set on create."
        },
        "sourceType": {
          "$ref": "#/definitions/v1alpha1EmbeddingSourceType",
          "description": "The source of the embedding.  Can be set only on create."
        },
        "sourceFeature": {
          "type": "string",
          "description": "The feature or feature set that the embedding was created by/for. Can be set only on create."
        },
        "vendorModel": {
          "$ref": "#/definitions/v1alpha1EmbeddingVendorModel",
          "description": "The embedding model used to create the embedding. Can be set only on create."
        },
        "citation": {
          "$ref": "#/definitions/v1alpha1EmbeddingCitation",
          "description": "Content citation. Optional."
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the embedding is disabled. Disabled embeddings are not used in search."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Tag"
          },
          "description": "Tags associated with the embedding. Optional.\nTags can be set on create and used to filter embeddings in search."
        }
      }
    },
    "v1alpha1EmbeddingRelationship": {
      "type": "object",
      "properties": {
        "accountGroup": {
          "$ref": "#/definitions/v1alpha1EmbeddingRelationshipAccountGroup"
        },
        "partner": {
          "$ref": "#/definitions/v1alpha1EmbeddingRelationshipPartner"
        },
        "admin": {
          "$ref": "#/definitions/v1alpha1EmbeddingRelationshipAdmin"
        }
      }
    },
    "v1alpha1EmbeddingRelationshipAccountGroup": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1alpha1EmbeddingRelationshipAdmin": {
      "type": "object"
    },
    "v1alpha1EmbeddingRelationshipPartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1alpha1EmbeddingRerankerMethod": {
      "type": "string",
      "enum": [
        "EMBEDDING_RERANKER_METHOD_INVALID",
        "EMBEDDING_RERANKER_METHOD_PREQUERY_HYDE"
      ],
      "default": "EMBEDDING_RERANKER_METHOD_INVALID"
    },
    "v1alpha1EmbeddingSourceType": {
      "type": "string",
      "enum": [
        "EMBEDDING_SOURCE_TYPE_INVALID",
        "EMBEDDING_SOURCE_TYPE_USER_INPUT",
        "EMBEDDING_SOURCE_TYPE_WEBSITE",
        "EMBEDDING_SOURCE_TYPE_BUSINESS_PROFILE",
        "EMBEDDING_SOURCE_TYPE_CATEGORIES"
      ],
      "default": "EMBEDDING_SOURCE_TYPE_INVALID"
    },
    "v1alpha1EmbeddingVendorModel": {
      "type": "string",
      "enum": [
        "EMBEDDING_MODEL_INVALID",
        "EMBEDDING_MODEL_OPENAI_ADA_V2",
        "EMBEDDING_MODEL_GOOGLE_GECKO_V2",
        "EMBEDDING_MODEL_TUNED_CATEGORY"
      ],
      "default": "EMBEDDING_MODEL_INVALID"
    },
    "v1alpha1FindSimilarEmbeddingsRequestFilters": {
      "type": "object",
      "properties": {
        "relationship": {
          "$ref": "#/definitions/v1alpha1EmbeddingRelationship"
        },
        "sourceType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1EmbeddingSourceType"
          }
        },
        "vendorModel": {
          "$ref": "#/definitions/v1alpha1EmbeddingVendorModel"
        },
        "associatedAppId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Tag"
          }
        }
      }
    },
    "v1alpha1FindSimilarEmbeddingsResponse": {
      "type": "object",
      "properties": {
        "embeddings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FindSimilarEmbeddingsResponseMatch"
          }
        }
      }
    },
    "v1alpha1FunctionExecutionJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the function execution job"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1FunctionExecutionJobStatus",
          "title": "The status of the function execution job"
        },
        "result": {
          "$ref": "#/definitions/v1alpha1FunctionExecutionJobResult",
          "title": "The result of the function execution job"
        },
        "nextJobId": {
          "type": "string",
          "title": "The ID of the next job in the sequence"
        }
      }
    },
    "v1alpha1FunctionExecutionJobResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          }
        }
      }
    },
    "v1alpha1FunctionExecutionJobStatus": {
      "type": "string",
      "enum": [
        "FUNCTION_EXECUTION_JOB_STATUS_INVALID",
        "FUNCTION_EXECUTION_JOB_STATUS_QUEUED",
        "FUNCTION_EXECUTION_JOB_STATUS_RUNNING",
        "FUNCTION_EXECUTION_JOB_STATUS_COMPLETE"
      ],
      "default": "FUNCTION_EXECUTION_JOB_STATUS_INVALID"
    },
    "v1alpha1GenerateChatAnswerWithEmbeddingsRequestOptions": {
      "type": "object",
      "properties": {
        "includeAllCitations": {
          "type": "boolean",
          "description": "This option allows the user to specify whether to disable filtering only embeddings used on messages. This will make the endpoint return citations for all embeddings found."
        },
        "enableAsyncFunctions": {
          "type": "boolean",
          "description": "This option allows the user to specify whether to enable async functions."
        },
        "maxTokens": {
          "type": "string",
          "format": "int64",
          "description": "the max tokens to generate in the answer. If zero, the default will be used instead."
        }
      }
    },
    "v1alpha1GenerateChatAnswerWithEmbeddingsResponse": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "title": "The generated answer"
        },
        "citations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ChatAnswerCitation"
          },
          "title": "The citations of knowledge that was used to inform the answer"
        },
        "bookingOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ChatBookingOption"
          },
          "title": "The booking options that are available"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KeyValuePair"
          },
          "title": "The metadata associated with the answer"
        },
        "pendingJobId": {
          "type": "string",
          "title": "The pending job ID if the answer is not yet ready"
        }
      }
    },
    "v1alpha1GetAppResponse": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/v1alpha1App"
        }
      }
    },
    "v1alpha1GetEmbeddingResponse": {
      "type": "object",
      "properties": {
        "embedding": {
          "$ref": "#/definitions/v1alpha1Embedding"
        }
      }
    },
    "v1alpha1GetFunctionExecutionJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/v1alpha1FunctionExecutionJob",
          "title": "The function execution job"
        }
      }
    },
    "v1alpha1GetKnowledgeBaseResponse": {
      "type": "object",
      "properties": {
        "knowledgeBase": {
          "$ref": "#/definitions/v1alpha1KnowledgeBase"
        }
      }
    },
    "v1alpha1GetKnowledgeSourceResponse": {
      "type": "object",
      "properties": {
        "knowledgeSource": {
          "$ref": "#/definitions/v1alpha1KnowledgeSource"
        }
      }
    },
    "v1alpha1KnowledgeBase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "the namespace-unique identifier for the knowledge base\nOn create, if this is empty, it will be auto-generated."
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the knowledge base belongs to. Can be set only on create."
        },
        "name": {
          "type": "string",
          "title": "the name of the knowledge base"
        },
        "description": {
          "type": "string",
          "title": "the description of the knowledge base"
        },
        "knowledgeSourceKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KnowledgeSourceKey"
          },
          "title": "the knowledge sources that are used to populate the knowledge base"
        }
      }
    },
    "v1alpha1KnowledgeBaseKey": {
      "type": "object",
      "properties": {
        "knowledgeBaseId": {
          "type": "string",
          "title": "the id of the knowledge base"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the knowledge base belongs to."
        }
      }
    },
    "v1alpha1KnowledgeSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the namespace-unique identifier for the knowledge source"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the knowledge source belongs to. Can be set only on create."
        },
        "name": {
          "type": "string",
          "title": "the name of the knowledge source"
        },
        "description": {
          "type": "string",
          "title": "the description of the knowledge source"
        },
        "config": {
          "$ref": "#/definitions/v1alpha1KnowledgeSourceConfig",
          "title": "the configuration for the knowledge source"
        },
        "knowledgeBaseKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KnowledgeBaseKey"
          },
          "title": "the knowledge bases that the knowledge source is associated with"
        },
        "training": {
          "$ref": "#/definitions/v1alpha1KnowledgeSourceTraining",
          "title": "training progress information of a knowledge source"
        }
      }
    },
    "v1alpha1KnowledgeSourceConfig": {
      "type": "object",
      "properties": {
        "businessProfileConfig": {
          "$ref": "#/definitions/KnowledgeSourceConfigBusinessProfileConfig",
          "description": "the configuration for a business profile knowledge source. Can only be used on AccountGroup namespaced sources."
        },
        "customDataConfig": {
          "$ref": "#/definitions/KnowledgeSourceConfigCustomDataConfig"
        },
        "websiteScrapeConfig": {
          "$ref": "#/definitions/KnowledgeSourceConfigWebsiteScrapeConfig"
        }
      }
    },
    "v1alpha1KnowledgeSourceConfigType": {
      "type": "string",
      "enum": [
        "KNOWLEDGE_SOURCE_CONFIG_TYPE_INVALID",
        "KNOWLEDGE_SOURCE_CONFIG_TYPE_BUSINESS_PROFILE",
        "KNOWLEDGE_SOURCE_CONFIG_TYPE_CUSTOM_DATA",
        "KNOWLEDGE_SOURCE_CONFIG_TYPE_WEBSITE_SCRAPE"
      ],
      "default": "KNOWLEDGE_SOURCE_CONFIG_TYPE_INVALID"
    },
    "v1alpha1KnowledgeSourceKey": {
      "type": "object",
      "properties": {
        "knowledgeSourceId": {
          "type": "string",
          "title": "the id of the knowledge source"
        },
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace",
          "description": "the namespace that the knowledge source belongs to."
        }
      }
    },
    "v1alpha1KnowledgeSourceTraining": {
      "type": "object",
      "properties": {
        "progress": {
          "$ref": "#/definitions/v1alpha1TrainingProgress"
        },
        "totalUnits": {
          "type": "string",
          "format": "int64"
        },
        "completedUnits": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1ListAllAppsForKnowledgeSourceResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1App"
          }
        }
      }
    },
    "v1alpha1ListAllKnowledgeSourcesForAppRequestFilters": {
      "type": "object",
      "properties": {
        "configTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KnowledgeSourceConfigType"
          }
        }
      }
    },
    "v1alpha1ListAllKnowledgeSourcesForAppResponse": {
      "type": "object",
      "properties": {
        "knowledgeSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KnowledgeSource"
          }
        }
      }
    },
    "v1alpha1ListAppsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      }
    },
    "v1alpha1ListAppsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1App"
          }
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListEmbeddingsRequestFilters": {
      "type": "object",
      "properties": {
        "relationship": {
          "$ref": "#/definitions/v1alpha1EmbeddingRelationship"
        },
        "sourceType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1EmbeddingSourceType"
          }
        },
        "vendorModel": {
          "$ref": "#/definitions/v1alpha1EmbeddingVendorModel"
        },
        "associatedAppId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Tag"
          }
        }
      }
    },
    "v1alpha1ListEmbeddingsResponse": {
      "type": "object",
      "properties": {
        "embeddings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Embedding"
          }
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListKnowledgeBasesRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        }
      }
    },
    "v1alpha1ListKnowledgeBasesResponse": {
      "type": "object",
      "properties": {
        "knowledgeBases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KnowledgeBase"
          }
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ListKnowledgeSourcesRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1alpha1Namespace"
        },
        "configTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KnowledgeSourceConfigType"
          }
        }
      }
    },
    "v1alpha1ListKnowledgeSourcesResponse": {
      "type": "object",
      "properties": {
        "knowledgeSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1KnowledgeSource"
          }
        },
        "metadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1alpha1ScrapeWebsiteRequestOptions": {
      "type": "object",
      "properties": {
        "specificUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The next scrape will only re-scrape the URLs provided in this list."
        }
      }
    },
    "v1alpha1ScrapeWebsiteResponse": {
      "type": "object"
    },
    "v1alpha1Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The tag key."
        },
        "value": {
          "type": "string",
          "description": "The tag value."
        }
      }
    },
    "v1alpha1TrainingProgress": {
      "type": "string",
      "enum": [
        "TRAINING_INVALID",
        "TRAINING_QUEUED",
        "TRAINING_IN_PROGRESS",
        "TRAINING_DONE"
      ],
      "default": "TRAINING_INVALID"
    },
    "v1alpha1WebsiteScrapeConfigCrawlMode": {
      "type": "string",
      "enum": [
        "WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_INVALID",
        "WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_SINGLE",
        "WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_RECURSIVE",
        "WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_SITEMAP"
      ],
      "default": "WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_INVALID",
      "title": "- WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_SINGLE: only scrape the specified url\n - WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_RECURSIVE: scrape the specified url and follow links on the page\n - WEBSITE_SCRAPE_CONFIG_CRAWL_MODE_SITEMAP: scrape via a sitemap either given directly by the url or on common paths relative to it (/robots.txt, /sitemap.xml, /sitemap_index.xml)"
    },
    "v1alpha1WebsiteScrapeConfigProgress": {
      "type": "string",
      "enum": [
        "WEBSITE_SCRAPE_CONFIG_PROGRESS_INVALID",
        "WEBSITE_SCRAPE_CONFIG_PROGRESS_QUEUED",
        "WEBSITE_SCRAPE_CONFIG_PROGRESS_IN_PROGRESS",
        "WEBSITE_SCRAPE_CONFIG_PROGRESS_DONE"
      ],
      "default": "WEBSITE_SCRAPE_CONFIG_PROGRESS_INVALID",
      "title": "- WEBSITE_SCRAPE_CONFIG_PROGRESS_QUEUED: the scrape is queued and waiting to start\nA scrape may be in a queued state for some time if it is being rate limited\n - WEBSITE_SCRAPE_CONFIG_PROGRESS_IN_PROGRESS: the scrape is in progress\n - WEBSITE_SCRAPE_CONFIG_PROGRESS_DONE: the scrape has completed and/or no scrape is in progress"
    },
    "v1Method": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isClientStream": {
          "type": "boolean"
        },
        "isServerStream": {
          "type": "boolean"
        }
      }
    },
    "v1Server": {
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Method"
          }
        }
      }
    },
    "v1CleanUpMailResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1ClickArea": {
      "type": "string",
      "enum": [
        "CLICK_AREA_UNKNOWN",
        "CLICK_AREA_MAIN_DROPDOWN_CARD",
        "CLICK_AREA_SET_UP_STORE_CARD",
        "CLICK_AREA_SET_UP_STORE_CARD_CREATE_YOUR_STORE",
        "CLICK_AREA_SET_UP_STORE_CARD_SET_UP_PAYMENT_PROCESSING",
        "CLICK_AREA_SET_UP_STORE_CARD_SET_UP_ORDER_FULFILLMENT",
        "CLICK_AREA_SET_UP_STORE_CARD_ADD_PRODUCTS",
        "CLICK_AREA_SET_UP_STORE_CARD_EDIT_STORE",
        "CLICK_AREA_SET_UP_STORE_CARD_SET_UP_ONLINE_STORE_WOOCOMMERCE_YOUTUBE",
        "CLICK_AREA_SET_UP_STORE_CARD_INSTALL_AND_ACTIVATE_WOOCOMMERCE",
        "CLICK_AREA_SET_UP_STORE_CARD_SETTING_UP_WOO_COMMERCE_STORE",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD_CUSTOMIZE_YOUR_HOMEPAGE",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD_ADD_YOUR_LOGO",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD_ADD_YOUR_THEME_COLORS",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD_ADD_PAGES",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD_EDIT_SITE_DESIGN",
        "CLICK_AREA_CUSTOMIZE_YOUR_SITE_CARD_EDITING_YOUR_SITE_DESIGN",
        "CLICK_AREA_CONNECT_ANALYTICS_CARD",
        "CLICK_AREA_CONNECT_ANALYTICS_CARD_CONNECT_GOOGLE_ANALYTICS",
        "CLICK_AREA_CONNECT_ANALYTICS_CARD_VIEW_ANALYTICS",
        "CLICK_AREA_CONNECT_ANALYTICS_CARD_TRACKING_YOUR_STORE_ANALYTICS"
      ],
      "default": "CLICK_AREA_UNKNOWN",
      "title": "Enum of Card Type user clicked"
    },
    "v1GetAccessTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "The access token"
        },
        "viewId": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        }
      }
    },
    "v1GetMailResponse": {
      "type": "object",
      "properties": {
        "jsonMail": {
          "type": "string",
          "title": "an object that contains a message, to, headers, etc. It mirrors how WordPress defines email"
        }
      },
      "title": "A response that defines the mail"
    },
    "v1GetSiteUpdateResponse": {
      "type": "object",
      "properties": {
        "update": {
          "$ref": "#/definitions/v1SiteUpdate"
        }
      },
      "title": "GetSiteUpdateResponse is the response structure of GetSiteUpdate rpc"
    },
    "v1GetSkipUpgradingHTTPResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "the value the flag is set to"
        }
      }
    },
    "v1IsSiteECommerceEnabledResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "enabled is a flag indicating whether a site is ecommerce enabled or not"
        }
      },
      "title": "IsSiteECommerceEnabledResponse is the request structure of the response sent by the IsSiteEcommerceEnabled"
    },
    "v1IsSiteUserResponse": {
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "boolean"
        }
      },
      "title": "IsSiteUserResponse is the request structure of the response sent by the IsSiteUser"
    },
    "v1SetExposeWPLoginResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1SetGaTrackingIDResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1SetGoogleAnalyticsEnabledResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1SetPHPVersionResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1SetScoreResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "success informs the caller whether the score was set successfully or not"
        }
      },
      "title": "SetScoreResponse defines the response for calling the SetScore API. The response contains a success flag, which\nindicates whether the call to SetScore was executed successfully"
    },
    "v1SetSkipUpgradingHTTPResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1SetStagingPHPVersionResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "The success/fail response"
        }
      }
    },
    "v1SiteUpdate": {
      "type": "object",
      "properties": {
        "phpVersion": {
          "type": "string",
          "title": "php_version the current PHP version"
        },
        "coreVersion": {
          "type": "string",
          "title": "core_version the current WordPress version"
        },
        "latestCoreVersion": {
          "type": "string",
          "title": "latest_core_version the latest WordPress version available"
        },
        "numOfPluginUpdates": {
          "type": "string",
          "format": "int64",
          "title": "num_of_plugin_updates the number of plugins that has more recent versions available to update"
        }
      }
    },
    "BusinessStatsError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "A message describing the error"
        },
        "type": {
          "type": "string",
          "title": "The type of error from Facebook that occured"
        },
        "code": {
          "type": "string",
          "format": "int64",
          "title": "The code of the error from Facebook"
        }
      },
      "title": "A model representing an error that occurred when collecting business stats"
    },
    "BusinessStatsStats": {
      "type": "object",
      "properties": {
        "followersCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of followers for the instagram business"
        },
        "mediaCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of media posted by the instagram business"
        }
      },
      "title": "A model representing stats for an instagram business"
    },
    "SendMessageRequestAttachment": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MessageAttachmentType"
        },
        "url": {
          "type": "string"
        },
        "isReusable": {
          "type": "boolean",
          "description": "Whether the image url is used in the message sent to the Instagram user.\nIf false then a different url will be generated."
        }
      }
    },
    "v1BusinessStats": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The username of the instagram business account"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the stats were reported for"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The created time of the stat entity"
        },
        "followersCount": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use followers_count on the stats property"
        },
        "mediaCount": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use media_count on the stats property"
        },
        "stats": {
          "$ref": "#/definitions/BusinessStatsStats",
          "title": "The stats for the instagram business"
        },
        "error": {
          "$ref": "#/definitions/BusinessStatsError",
          "title": "The error that occurred when collecting business stats"
        }
      },
      "title": "A model representing the state of an instagram business's stats for a date"
    },
    "v1CreateCommentResponse": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "string",
          "title": "The newly generated comment id"
        }
      },
      "title": "Returns the new comment id"
    },
    "v1CreateMediaResponse": {
      "type": "object",
      "properties": {
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier for a Media object"
        }
      },
      "title": "Return media ID if successful"
    },
    "v1DisableMessagingResponse": {
      "type": "object"
    },
    "v1EnableMessagingResponse": {
      "type": "object"
    },
    "v1GetBusinessStatsResponse": {
      "type": "object",
      "properties": {
        "businessStats": {
          "$ref": "#/definitions/v1BusinessStats",
          "title": "Stats for the instagram business"
        },
        "status": {
          "$ref": "#/definitions/v1GetBusinessStatsResponseStatus",
          "title": "Status of the stats collection for today"
        }
      },
      "title": "GetBusinessStatsResponse returns stats for an instagram business"
    },
    "v1GetBusinessStatsResponseStatus": {
      "type": "string",
      "enum": [
        "GET_BUSINESS_STATS_RESPONSE_STATUS_IN_PROGRESS",
        "GET_BUSINESS_STATS_RESPONSE_STATUS_FINISHED"
      ],
      "default": "GET_BUSINESS_STATS_RESPONSE_STATUS_IN_PROGRESS"
    },
    "v1GetInstagramBusinessResponse": {
      "type": "object",
      "properties": {
        "instagramBusiness": {
          "$ref": "#/definitions/v1InstagramBusiness",
          "title": "An instagram business"
        }
      },
      "title": "GetInstagramBusinessResponse returns an instagram business for a facebook page"
    },
    "v1GetMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "$ref": "#/definitions/v1Media",
          "title": "Media for an intstagram user"
        }
      },
      "title": "GetMediaResponse returns an instagram media object"
    },
    "v1GetMessagingStatusResponse": {
      "type": "object",
      "properties": {
        "instagramUserId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1MessagingStatus"
        }
      }
    },
    "v1GetMessagingUserResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "v1GetMultiMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "title": "A list of media"
        }
      },
      "title": "GetMultiMediaResponse is a collection of Media"
    },
    "v1GetMultiMediaStatsResponse": {
      "type": "object",
      "properties": {
        "mediaStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1MediaStats"
          },
          "title": "A map between media_ids and media stats"
        }
      },
      "title": "GetMultiMediaStatsResponse has comment count, share count, likes, reach, and video views"
    },
    "v1InstagramBusiness": {
      "type": "object",
      "properties": {
        "facebookPageId": {
          "type": "string",
          "title": "A facebook page id"
        },
        "instagramBusinessId": {
          "type": "string",
          "title": "An instagram business id"
        },
        "biography": {
          "type": "string",
          "title": "An instagram biography"
        },
        "name": {
          "type": "string",
          "title": "An instagram fullname"
        },
        "profilePictureUrl": {
          "type": "string",
          "title": "An instagram profile picture"
        },
        "username": {
          "type": "string",
          "title": "An instagram username"
        },
        "website": {
          "type": "string",
          "title": "A website"
        },
        "canPost": {
          "type": "boolean",
          "title": "If the current facebook user can post to this instagram page"
        }
      }
    },
    "v1ListFacebookPagesResponse": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Page"
          },
          "title": "A list of facebook pages"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListFacebookPagesResponse returns paging information and facebook pages for a user"
    },
    "v1ListFailedMediasForMultilocationResponse": {
      "type": "object",
      "properties": {
        "medias": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "title": "A list of failed multilocation posts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListFailedMediasForMultilocationResponse contains response payload with failed multilocation posts and pagination"
    },
    "v1ListInstagramBusinessResponse": {
      "type": "object",
      "properties": {
        "instagramBusiness": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InstagramBusiness"
          },
          "title": "a list of instagram business"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListInstagramBusinessResponse returns an list instagram business for a facebook user"
    },
    "v1ListMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "title": "A list of media"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListMediaResponse is a collection of Media and paging metadata, ordered by post_date_time"
    },
    "v1ListUsersByMultiBusinessesResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "A list of instagram Users, ordered alphabetically by name"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListUsersByMultiBusinessesResponse list of instagram Users for multiple business"
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The users connected to a business"
        },
        "boards": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1BoardMap"
          },
          "title": "The boards available to users, keyed by internal user ID"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the next page of boards"
        }
      },
      "title": "Returns a page of connected users and their boards"
    },
    "v1ManageMediaTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of tags"
        }
      },
      "title": "Returns a list of tags on a media object"
    },
    "v1MediaKeyset": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner ID"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID"
        },
        "userId": {
          "type": "string",
          "title": "The user ID"
        },
        "mediaId": {
          "type": "string",
          "title": "The media ID"
        }
      },
      "title": "MediaKeyset is the primary key for a Media object"
    },
    "v1MediaStats": {
      "type": "object",
      "properties": {
        "commentsCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of comments on this media"
        },
        "likeCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of likes on this media"
        },
        "reach": {
          "type": "string",
          "format": "int64",
          "title": "The number of unique users who have seen this media"
        },
        "saves": {
          "type": "string",
          "format": "int64",
          "title": "The number of times this media has been saved"
        },
        "videoViews": {
          "type": "string",
          "format": "int64",
          "title": "The number of times this media's video has been viewed"
        }
      },
      "title": "Stats for a Media objects"
    },
    "v1MessagingStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATUS",
        "MESSAGING_ENABLED",
        "MESSAGING_TOKEN_INVALID",
        "MESSAGING_TOKEN_MISSING_PERMISSIONS",
        "USER_NOT_CONNECTED",
        "USER_TOKEN_INVALID",
        "USER_TOKEN_MISSING_PERMISSIONS",
        "MESSAGING_CAN_BE_ENABLED"
      ],
      "default": "UNKNOWN_STATUS",
      "description": " - MESSAGING_ENABLED: Messaging is fully enabled\n - MESSAGING_TOKEN_INVALID: The messaging subscription exists, but the token is invalid\n - MESSAGING_TOKEN_MISSING_PERMISSIONS: The messaging subscription exists, but the token does not have the required permissions\n - USER_NOT_CONNECTED: No User row exists for the provided partnerId and businessId\n - USER_TOKEN_INVALID: The User row exists, but the token is invalid\n - USER_TOKEN_MISSING_PERMISSIONS: The User row exists, but the token does not have the required permissions\n - MESSAGING_CAN_BE_ENABLED: The User row exists and has a valid token with all permissions, but messaging is not yet enabled."
    },
    "v1Page": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string",
          "title": "An external id for a facebook page"
        },
        "name": {
          "type": "string",
          "title": "The name of a facebook page"
        },
        "location": {
          "type": "string",
          "title": "Location is the location of a facebook page, if set"
        },
        "url": {
          "type": "string",
          "title": "URL is a permalink to the facebook page"
        },
        "perms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Perms is a list of permissions granted to the access token making a page request"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tasks is a list of actions that the facebook user can do on this page"
        }
      },
      "title": "A model representing a facebook page connected through oauth"
    },
    "v1PostMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "$ref": "#/definitions/v1Media",
          "title": "The newly posted media object"
        }
      },
      "title": "PostMediaResponse returns the id of the newly posted media"
    },
    "ListSyndicationSettingRequestOptionalListSyndicationSettingFilters": {
      "type": "object",
      "properties": {
        "sourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1DataValidationResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidationResult"
          },
          "title": "List of result for each invalid field"
        }
      }
    },
    "v1FieldValidationResult": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string",
          "title": "Invalid Field name"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Error messages for the invalid field"
        }
      }
    },
    "v1GetEditionSourceConfigResponse": {
      "type": "object",
      "properties": {
        "freeSourceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "v1GetMultiMostRecentSyndicationStatusResponse": {
      "type": "object",
      "properties": {
        "syndicationStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SyndicationStatus"
          }
        }
      }
    },
    "v1ListSyndicationSettingResponse": {
      "type": "object",
      "properties": {
        "syndicationSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SyndicationSetting"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1SubmitListingSyndicationResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string",
          "title": "ID of Temporal Workflow that was started"
        }
      }
    },
    "v1SyndicationSetting": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "syndicationOn": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "lastSyndicationOnTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastSyndicationOffTime": {
          "type": "string",
          "format": "date-time"
        },
        "sourceLocationId": {
          "type": "string"
        },
        "associatedSocialServiceId": {
          "type": "string"
        }
      }
    },
    "v1CreateSequenceResponse": {
      "type": "object",
      "properties": {
        "sequenceId": {
          "type": "string"
        }
      }
    },
    "v1CreateStepsResponse": {
      "type": "object",
      "properties": {
        "orderedStepIdList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of step IDs created"
        }
      }
    },
    "v1GetSequenceResponse": {
      "type": "object",
      "properties": {
        "sequence": {
          "$ref": "#/definitions/v1SequenceData"
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StepData"
          }
        }
      }
    },
    "v1ListSequencesResponse": {
      "type": "object",
      "properties": {
        "sequenceList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SequenceData"
          },
          "description": "Paging information coming soon.",
          "title": "The actual list of sequences"
        }
      },
      "title": "Response from getting a list of sequences"
    },
    "v1ListStepTypesResponse": {
      "type": "object",
      "properties": {
        "stepTypeList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StepTypeData"
          },
          "title": "The list of step types available for the given sequence type"
        }
      }
    },
    "v1SequenceData": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "sequenceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orderedStepIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Sequence listing"
    },
    "v1StepData": {
      "type": "object",
      "properties": {
        "stepId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1StepInput": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "title": "The display name for the step"
        },
        "delaySeconds": {
          "type": "string",
          "format": "int64",
          "title": "The delay in seconds before the step is executed"
        },
        "taskDefinitionId": {
          "type": "string",
          "title": "The Task ID from the Automation Task, signifies the step type"
        },
        "taskInputData": {
          "type": "string",
          "title": "Input data is freeform json of the data passed into the task"
        }
      },
      "title": "Input needed to create a single step"
    },
    "v1StepTypeData": {
      "type": "object",
      "properties": {
        "nameKey": {
          "type": "string"
        },
        "taskDefinitionId": {
          "type": "string"
        }
      },
      "title": "Sequence step types"
    },
    "v1UpdateStepResponse": {
      "type": "object",
      "properties": {
        "stepId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GetMultiResponseBusinessContainer": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1Business"
        }
      }
    },
    "HoursOfOperationDayOfWeek": {
      "type": "string",
      "enum": [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY",
        "PUBLIC_HOLIDAYS"
      ],
      "default": "MONDAY"
    },
    "v1Administration": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "string",
          "title": "Notes about this business"
        }
      },
      "title": "A set of information about the administration of this business. This information is only\navailable to admins, and not to the local business owner"
    },
    "v1BasicData": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "title": "The operating name of the business"
        },
        "address": {
          "type": "string",
          "title": "The street address of the location"
        },
        "city": {
          "type": "string",
          "title": "The city of the location"
        },
        "state": {
          "type": "string",
          "title": "The state/province/territory of the location"
        },
        "zip": {
          "type": "string",
          "title": "The zip/postalcode of the location"
        },
        "country": {
          "type": "string",
          "title": "The country of the location"
        },
        "website": {
          "type": "string",
          "title": "The website of the location or business"
        },
        "workNumber": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of local phone numbers used by the business.  These can\nnot be toll-free numbers"
        },
        "callTrackingNumber": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of call-tracking nubmers used by the business.  These are\ngenerally used for advertising attribution."
        },
        "location": {
          "$ref": "#/definitions/v1Geo",
          "title": "The geo point describing the location"
        },
        "timezone": {
          "type": "string",
          "title": "The timezone of the location in text form (ie. \"MT\" or \"ET\")"
        },
        "serviceAreaBusiness": {
          "type": "boolean",
          "description": "Does this business serve an area, rather than operate out of a publicly-available location?\nFor example, plumbers, electricians, or people who work at home and sell services online."
        }
      },
      "description": "A set of basic information about a business that is common to almost all\ntypes of business.  Most of this information is required to construct a\ngood online business listing."
    },
    "v1ListRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1SearchRequestFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "customerIdentifier": {
          "type": "string"
        }
      }
    },
    "localmarketingindexv1Facebook": {
      "type": "object",
      "properties": {
        "averageSharesPerPost": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "averageLikesPerPost": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "likes": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "posts": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "recentPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FacebookPost"
          }
        },
        "averagePostsPerMonth": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "localmarketingindexv1Instagram": {
      "type": "object",
      "properties": {
        "followers": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "posts": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "status": {
          "$ref": "#/definitions/v1InstagramStatus"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "localmarketingindexv1Twitter": {
      "type": "object",
      "properties": {
        "following": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "followers": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "tweets": {
          "$ref": "#/definitions/v1SocialGrade"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1Advertising": {
      "type": "object",
      "properties": {
        "costPerClick": {
          "$ref": "#/definitions/v1Percentiles"
        }
      }
    },
    "v1CreateGradesRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      },
      "title": "*******************\nRequests\n*******************"
    },
    "v1Ecommerce": {
      "type": "object",
      "properties": {
        "overallScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "percentagebusinessesecommercesolutionpresent": {
          "type": "number",
          "format": "float"
        },
        "percentagebusinessesonlinepaymentspresent": {
          "type": "number",
          "format": "float"
        },
        "percentagebusinessesadretargetingpresent": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1GetIndustryAverageResponse": {
      "type": "object",
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Sections"
          }
        }
      }
    },
    "v1GetThirdPartyGradesForDateResponse": {
      "type": "object",
      "properties": {
        "grades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ThirdPartyGrade"
          }
        }
      }
    },
    "v1GradeLetter": {
      "type": "string",
      "enum": [
        "GRADE_LETTER_NO_GRADE",
        "GRADE_LETTER_A",
        "GRADE_LETTER_B",
        "GRADE_LETTER_C",
        "GRADE_LETTER_D",
        "GRADE_LETTER_F"
      ],
      "default": "GRADE_LETTER_NO_GRADE"
    },
    "v1InstagramStatus": {
      "type": "string",
      "enum": [
        "INSTAGRAM_STATUS_UNKNOWN_ERROR",
        "INSTAGRAM_STATUS_IN_PROGRESS",
        "INSTAGRAM_STATUS_SUCCESS",
        "INSTAGRAM_STATUS_INVALID_USER_ID"
      ],
      "default": "INSTAGRAM_STATUS_UNKNOWN_ERROR",
      "title": "SocialGrade is a holder for each row of the social info grades"
    },
    "v1ListGradesRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListReviewGradesResponse": {
      "type": "object",
      "properties": {
        "grades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewGradeData"
          }
        }
      },
      "title": "*******************\nResponses\n*******************"
    },
    "v1ListSocialGradesResponse": {
      "type": "object",
      "properties": {
        "grades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SocialGradeData"
          }
        }
      }
    },
    "v1Percentiles": {
      "type": "object",
      "properties": {
        "ninetyFifth": {
          "type": "number",
          "format": "float"
        },
        "eightieth": {
          "type": "number",
          "format": "float"
        },
        "fiftieth": {
          "type": "number",
          "format": "float"
        },
        "twentieth": {
          "type": "number",
          "format": "float"
        },
        "tenth": {
          "type": "number",
          "format": "float"
        },
        "ninetieth": {
          "type": "number",
          "format": "float"
        },
        "seventyFifth": {
          "type": "number",
          "format": "float"
        },
        "fortieth": {
          "type": "number",
          "format": "float"
        },
        "thirtieth": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "Relevant percentiles for computing letter grades and industry stats"
    },
    "v1ReviewGrade": {
      "type": "object",
      "properties": {
        "gradeLetter": {
          "$ref": "#/definitions/v1GradeLetter"
        },
        "business": {
          "type": "number",
          "format": "double"
        },
        "industryAverage": {
          "type": "number",
          "format": "double"
        },
        "industryLeader": {
          "type": "number",
          "format": "double"
        },
        "percentageGrade": {
          "type": "number",
          "format": "double"
        },
        "businessPercentile": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "ReviewGrade is a holder for each row of the review info grades"
    },
    "v1ReviewGradeData": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "gradeLetter": {
          "$ref": "#/definitions/v1GradeLetter"
        },
        "reviewsFound": {
          "$ref": "#/definitions/v1ReviewGrade"
        },
        "reviewsFoundPerMonth": {
          "$ref": "#/definitions/v1ReviewGrade"
        },
        "averageReviewScore": {
          "$ref": "#/definitions/v1ReviewGrade"
        },
        "numberReviewSources": {
          "$ref": "#/definitions/v1ReviewGrade"
        },
        "sampleSourceCount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SampleSourceCount"
          }
        },
        "overallPercentageGrade": {
          "type": "number",
          "format": "double"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "overallPercentile": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "ReviewGradeData represents the review grades found for a business"
    },
    "v1Reviews": {
      "type": "object",
      "properties": {
        "numberOfReviewSources": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "numberOfReviews": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "reviewScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "reviewsPerMonth": {
          "$ref": "#/definitions/v1Percentiles"
        }
      }
    },
    "v1SearchEngineOptimization": {
      "type": "object",
      "properties": {
        "valuePerClick": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "localSeo": {
          "$ref": "#/definitions/v1Percentiles"
        }
      }
    },
    "v1Sections": {
      "type": "object",
      "properties": {
        "taxonomy": {
          "type": "string"
        },
        "social": {
          "$ref": "#/definitions/v1Social"
        },
        "website": {
          "$ref": "#/definitions/v1Website"
        },
        "review": {
          "$ref": "#/definitions/v1Reviews"
        },
        "listings": {
          "$ref": "#/definitions/v1Listings"
        },
        "advertising": {
          "$ref": "#/definitions/v1Advertising"
        },
        "seo": {
          "$ref": "#/definitions/v1SearchEngineOptimization"
        },
        "ecommerce": {
          "$ref": "#/definitions/v1Ecommerce"
        }
      }
    },
    "v1Social": {
      "type": "object",
      "properties": {
        "facebook": {
          "$ref": "#/definitions/v1SocialFacebook"
        },
        "twitter": {
          "$ref": "#/definitions/v1SocialTwitter"
        },
        "instagram": {
          "$ref": "#/definitions/v1SocialInstagram"
        }
      }
    },
    "v1SocialFacebook": {
      "type": "object",
      "properties": {
        "likesPerPost": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "numberOfLikes": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "postsPerMonth": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "sharesPerPost": {
          "$ref": "#/definitions/v1Percentiles"
        }
      }
    },
    "v1SocialGrade": {
      "type": "object",
      "properties": {
        "gradeLetter": {
          "$ref": "#/definitions/v1GradeLetter"
        },
        "business": {
          "type": "number",
          "format": "double"
        },
        "percentageGrade": {
          "type": "number",
          "format": "double"
        },
        "industryAverage": {
          "type": "number",
          "format": "double"
        },
        "industryLeader": {
          "type": "number",
          "format": "double"
        },
        "businessPercentile": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1SocialGradeData": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "gradeLetter": {
          "$ref": "#/definitions/v1GradeLetter"
        },
        "overallPercentageGrade": {
          "type": "number",
          "format": "double"
        },
        "facebook": {
          "$ref": "#/definitions/localmarketingindexv1Facebook"
        },
        "twitter": {
          "$ref": "#/definitions/localmarketingindexv1Twitter"
        },
        "instagram": {
          "$ref": "#/definitions/localmarketingindexv1Instagram"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "overallPercentile": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1SocialInstagram": {
      "type": "object",
      "properties": {
        "followers": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "posts": {
          "$ref": "#/definitions/v1Percentiles"
        }
      }
    },
    "v1SocialTwitter": {
      "type": "object",
      "properties": {
        "numberOfFollowers": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "numberOffOllowing": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "numberOfTweets": {
          "$ref": "#/definitions/v1Percentiles"
        }
      }
    },
    "v1ThirdPartyCategory": {
      "type": "string",
      "enum": [
        "THIRD_PARTY_CATEGORY_SECTION_UNSPECIFIED",
        "THIRD_PARTY_CATEGORY_SECTION_LISTING",
        "THIRD_PARTY_CATEGORY_SECTION_REVIEWS",
        "THIRD_PARTY_CATEGORY_SECTION_WEBSITE",
        "THIRD_PARTY_CATEGORY_SECTION_SOCIAL"
      ],
      "default": "THIRD_PARTY_CATEGORY_SECTION_UNSPECIFIED",
      "title": "Category is used to say which exec report section the grade belongs to"
    },
    "v1ThirdPartyGrade": {
      "type": "object",
      "properties": {
        "gradeSection": {
          "$ref": "#/definitions/v1ThirdPartyCategory",
          "title": "what section does the grade belong to"
        },
        "grade": {
          "type": "string",
          "title": "grade for the section"
        }
      },
      "title": "Grade is the section and grade"
    },
    "v1Website": {
      "type": "object",
      "properties": {
        "mobileScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "desktopSpeedScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "mobileInsightsScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "desktopInsightsScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "pageSizeBytes": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "homepageContentScore": {
          "$ref": "#/definitions/v1Percentiles"
        },
        "percentageBusinessesWithAddressOnHomepage": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithFacebookOnHomepage": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithPhoneOnHomepage": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithTwitterOnHomepage": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithVideoOnHomepage": {
          "type": "number",
          "format": "float"
        },
        "percentageBusinessesWithInstagramOnHomepage": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1SearchListingResponse": {
      "type": "object",
      "properties": {
        "apiResponse": {
          "type": "string",
          "description": "Json string of the exact response from the Healthgrades API."
        }
      }
    },
    "v1SearchTerms": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The provider name (most likely) of the listing you want to find."
        },
        "address": {
          "$ref": "#/definitions/v1PostalAddress"
        }
      }
    },
    "v1StartTransferResponse": {
      "type": "object",
      "properties": {
        "dataTransferId": {
          "type": "string",
          "title": "Unique identifier for the data transfer"
        }
      }
    },
    "v1Board": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner owning this board"
        },
        "businessId": {
          "type": "string",
          "title": "The ID of the business authing this board"
        },
        "userId": {
          "type": "string",
          "title": "The unique internal ID for a pinterest user"
        },
        "boardId": {
          "type": "string",
          "title": "The unique internal ID for the board"
        },
        "pinterestBoardId": {
          "type": "string",
          "title": "The unique external ID for this board"
        },
        "name": {
          "type": "string",
          "title": "The name of this board"
        },
        "boardUrl": {
          "type": "string",
          "title": "The URL to the board"
        },
        "description": {
          "type": "string",
          "title": "The description for this board"
        },
        "userFullName": {
          "type": "string",
          "title": "The user's full name"
        },
        "userTokenBroken": {
          "type": "boolean",
          "title": "If this board's user access token is broken"
        }
      },
      "title": "A model representing a board owned by a user"
    },
    "v1BoardMap": {
      "type": "object",
      "properties": {
        "boards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Board"
          }
        }
      },
      "title": "Boards is a structure of multiple boards"
    },
    "v1CreateBoardResponse": {
      "type": "object",
      "properties": {
        "board": {
          "$ref": "#/definitions/v1Board",
          "title": "The newly created board"
        }
      },
      "title": "The response from CreateBoard"
    },
    "v1CreatePinResponse": {
      "type": "object",
      "properties": {
        "pinId": {
          "type": "string",
          "title": "The ID of the newly created pin"
        }
      },
      "title": "The response from CreatePin"
    },
    "v1GetBoardResponse": {
      "type": "object",
      "properties": {
        "board": {
          "$ref": "#/definitions/v1Board",
          "title": "The pinterest Board"
        }
      },
      "title": "GetBoard returns a connected board"
    },
    "v1GetMultiPinsResponse": {
      "type": "object",
      "properties": {
        "pins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pin"
          },
          "title": "The pinterest Pins"
        }
      },
      "title": "GetMultiPin returns multiple pins"
    },
    "v1GetPinResponse": {
      "type": "object",
      "properties": {
        "pin": {
          "$ref": "#/definitions/v1Pin",
          "title": "The pinterest Pin"
        }
      },
      "title": "GetPin returns a pin"
    },
    "v1ListBoardsResponse": {
      "type": "object",
      "properties": {
        "boards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Board"
          },
          "title": "The boards available to a user on pinterest"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the next page of boards"
        }
      },
      "title": "Returns a page of connected boards for a user"
    },
    "v1ListPinsResponse": {
      "type": "object",
      "properties": {
        "pins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pin"
          },
          "title": "The pins on a board"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the next page of pins"
        }
      },
      "title": "Returns a page of pins on a board"
    },
    "v1ListPinterestBoardsResponse": {
      "type": "object",
      "properties": {
        "boards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Board"
          },
          "title": "The boards available to a user on pinterest"
        }
      },
      "title": "Returns all pinterest boards for a user"
    },
    "v1ManagePinTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of tags"
        }
      },
      "title": "Returns a list of tags on a pin"
    },
    "v1Pin": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner id"
        },
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "userId": {
          "type": "string",
          "title": "The unique internal identifier of the user who posted this pin"
        },
        "boardId": {
          "type": "string",
          "title": "The unique internal identifier of the board this pin should post to"
        },
        "pinId": {
          "type": "string",
          "title": "The unique internal identifier of pinterest pin"
        },
        "pinterestPinId": {
          "type": "string",
          "title": "The unique external identifier for pinterest pin"
        },
        "fullName": {
          "type": "string",
          "title": "The full name of the poster"
        },
        "username": {
          "type": "string",
          "title": "External username of the user who posted this pin"
        },
        "postText": {
          "type": "string",
          "title": "The text body of the pin"
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The indicated post date of the pin"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image url for this pin"
        },
        "linkUrl": {
          "type": "string",
          "title": "The link url for this pin"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Internal tags for this pin"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Client tags for this pin"
        },
        "permalink": {
          "type": "string",
          "title": "A deep link to the pin on pinterest"
        },
        "error": {
          "type": "string",
          "title": "An error returned from posting"
        },
        "postedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The actual posted date time of a pin"
        },
        "profilePictureUrl": {
          "type": "string",
          "title": "The profile picture url of the user who posted this pin"
        },
        "hasScheduledTask": {
          "type": "boolean",
          "title": "The flag for if a task has been scheduled for this pin"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the pin was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the pin was last updated"
        },
        "postedByOwner": {
          "type": "boolean",
          "title": "Whether the pin was posted by the authed user"
        }
      },
      "title": "A model representing a pinterest pin"
    },
    "v1PostPinResponse": {
      "type": "object",
      "properties": {
        "pin": {
          "$ref": "#/definitions/v1Pin",
          "title": "The newly posted pin object"
        }
      },
      "title": "PostPinResponse returns the id of the newly posted pin"
    },
    "GetLocationsRequestAccountGroups": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetLocationsRequestGroups": {
      "type": "object",
      "properties": {
        "groupPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "atlasv1Location": {
      "type": "object",
      "properties": {
        "accountGroup": {
          "$ref": "#/definitions/v1AccountGroup"
        },
        "brand": {
          "$ref": "#/definitions/v1Brand"
        }
      },
      "title": "A location is either an account group or a brand"
    },
    "v1AssociatedLocationIDs": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "The list of associated ids"
    },
    "v1CenterNavigationItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of a center navigation item displayed in the Atlas navbar"
        },
        "entryUrl": {
          "type": "string",
          "title": "Entry URL"
        },
        "centerId": {
          "type": "string",
          "title": "The center's unique ID"
        }
      },
      "title": "Represents a Center navigation item in the Atlas navbar"
    },
    "v1DropdownItem": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The place the link takes you"
        },
        "path": {
          "type": "string",
          "title": "The path that angular would navigate you to, assuming this link takes you to a route in the angular app"
        },
        "translationId": {
          "type": "string",
          "title": "The ID for the translation of this Link"
        },
        "label": {
          "type": "string",
          "title": "the default label in the case that a translation id does not exist"
        }
      },
      "title": "The navigation link for atlas' dropdown"
    },
    "v1GetDataResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserNavigationItem"
          },
          "title": "Navigation items for the user dropdown"
        },
        "centers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CenterNavigationItem"
          },
          "title": "Navigation items for the centers dropdown"
        },
        "username": {
          "type": "string",
          "title": "The username of the user currently logged in"
        },
        "email": {
          "type": "string",
          "title": "The email of the user currently logged in"
        },
        "signOutUrl": {
          "type": "string",
          "title": "Sign out url that the user is taken to when they logout"
        },
        "theme": {
          "$ref": "#/definitions/v1UITheme",
          "title": "The UI theme for Atlas"
        },
        "language": {
          "type": "string",
          "title": "The user's currently selected language"
        },
        "theming": {
          "$ref": "#/definitions/v1Theming",
          "title": "Deprecated (use theme): The theming set for the partner and market"
        },
        "notificationsEnabled": {
          "type": "boolean",
          "title": "Denotes whether or not the notifications bell is enabled"
        },
        "userId": {
          "type": "string",
          "title": "The user's identifier"
        },
        "locationData": {
          "$ref": "#/definitions/v1LocationData",
          "title": "If a business or brand was requested, the location data will be populated"
        },
        "impersonateeUsername": {
          "type": "string",
          "title": "The username of the impersonatee if the current user is impersonating"
        },
        "emailVerified": {
          "type": "boolean",
          "title": "Whether the currently logged in user's email address is verified"
        },
        "userSwitcherData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserSwitcherData"
          },
          "title": "List of users that the current user can switch to"
        },
        "partnerName": {
          "type": "string",
          "title": "The name of the current partner"
        },
        "businessAppUiTheme": {
          "$ref": "#/definitions/v1UITheme",
          "title": "The theme for business app"
        }
      },
      "title": "Response for Atlas.GetData"
    },
    "v1GetDefaultLocationResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        }
      },
      "title": "GetDefaultLocationResponse"
    },
    "v1GetLanguageResponse": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "title": "the remembered language"
        }
      },
      "title": "GetLanguageResponse returns the remembered language"
    },
    "v1GetLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/atlasv1Location"
          }
        }
      },
      "title": "Response for Atlas.GetLocations"
    },
    "v1GetNavigationDataResponse": {
      "type": "object",
      "properties": {
        "branding": {
          "$ref": "#/definitions/v1Branding",
          "title": "The partner's whitelabel branding data"
        },
        "salesInfo": {
          "$ref": "#/definitions/v1SalesInfo",
          "title": "The sales information"
        },
        "pinnedItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PinnedItem"
          },
          "title": "The list of pinned products"
        },
        "associatedLocationIds": {
          "$ref": "#/definitions/v1AssociatedLocationIDs",
          "title": "The list of associated account groups"
        },
        "defaultLocation": {
          "type": "string",
          "title": "The default location (account_group_id)"
        },
        "language": {
          "type": "string",
          "title": "The user's currently selected language"
        },
        "dropdownItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DropdownItem"
          },
          "title": "Dropdown buttons to place in atlas' dropdown menu"
        },
        "currentBrandName": {
          "type": "string",
          "title": "The currently requested brand's name. Used for navigation purposes"
        },
        "userView": {
          "$ref": "#/definitions/v1UserViewType",
          "title": "The type of view the user has"
        },
        "retentionConfig": {
          "$ref": "#/definitions/v1RetentionConfig",
          "title": "The configuration for how the business can contact the partner's retention team"
        },
        "totalLocations": {
          "$ref": "#/definitions/v1TotalLocations",
          "title": "The total number of Accounts and Brands the user has"
        },
        "userId": {
          "type": "string",
          "title": "The user's identifier"
        },
        "businessAppBranding": {
          "type": "boolean",
          "title": "Sets partner branding to the style of the \"Business App\" initiative"
        },
        "disableBusinessNav": {
          "type": "boolean",
          "description": "Determines whether or not the business side navigation should be visible.\nPartners who don't use Business Nav don't want their users going to business nav from\nthe products they do serve."
        },
        "navigationItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SideNavigationItem"
          },
          "title": "the nav items to display to the user"
        },
        "disableProductSwitcher": {
          "type": "boolean",
          "description": "Determines whether or not the product switcher should be visible."
        }
      },
      "title": "Response for Atlas.GetNavigationData"
    },
    "v1GetPinsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PinnedItem"
          },
          "title": "An ordered list of the pinned navigation items"
        }
      },
      "title": "Response for PinsService.SetPins"
    },
    "v1GetSalesInfoResponse": {
      "type": "object",
      "properties": {
        "salesInfo": {
          "$ref": "#/definitions/v1SalesInfo",
          "title": "The sales information"
        }
      },
      "title": "Response for Atlas.GetSalesInfoResponse"
    },
    "v1ListElevatedLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/atlasv1Location"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "title": "Response for Atlas.ListElevatedLocations"
    },
    "v1ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/atlasv1Location"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "title": "Response for Atlas.ListLocations"
    },
    "v1LocationData": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string",
          "title": "The name of the business"
        },
        "address": {
          "type": "string",
          "title": "The business address"
        }
      }
    },
    "v1PinnedItem": {
      "type": "object",
      "properties": {
        "navigationId": {
          "type": "string",
          "title": "The ID of the pinned navigation item"
        }
      },
      "title": "An item which would be pinned in the sidenav"
    },
    "v1PlatformMode": {
      "type": "string",
      "enum": [
        "WEB",
        "MOBILE"
      ],
      "default": "WEB"
    },
    "v1RetentionConfig": {
      "type": "object",
      "properties": {
        "cancellationNotificationEmail": {
          "type": "string",
          "title": "The email address to email if the business would like to cancel"
        }
      }
    },
    "v1SalesContact": {
      "type": "object",
      "properties": {
        "salesPersonId": {
          "type": "string",
          "title": "The salesperson id"
        },
        "email": {
          "type": "string",
          "title": "The salesperson's email"
        },
        "firstName": {
          "type": "string",
          "title": "The salesperson's first name"
        },
        "lastName": {
          "type": "string",
          "title": "The salesperson's last name"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The salesperson's phone number"
        },
        "photoUrlSecure": {
          "type": "string",
          "title": "The salesperson's secure photo URL"
        },
        "jobTitle": {
          "type": "string",
          "title": "The salesperson's job title"
        },
        "country": {
          "type": "string",
          "title": "The salesperson's country"
        },
        "meetingBookingUrl": {
          "type": "string",
          "title": "The user's meeting booking url"
        }
      }
    },
    "v1SideNavigationContainer": {
      "type": "object",
      "properties": {
        "translationId": {
          "type": "string",
          "title": "The id of the translation to use"
        },
        "sideNavigationItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SideNavigationItem"
          },
          "title": "A repeated item for the side nav"
        },
        "icon": {
          "type": "string",
          "title": "The icon of the container"
        },
        "logoUrl": {
          "type": "string",
          "title": "The logo url for the products icon"
        },
        "label": {
          "type": "string",
          "title": "the default label in the case that a translation id does not exist"
        },
        "showIcon": {
          "type": "boolean",
          "title": "Whether or not the icon be shown"
        },
        "chipContent": {
          "type": "string",
          "title": "Any text content to be shown in a chip on the item"
        },
        "url": {
          "type": "string",
          "title": "A URL that can be accessed by clicking on the right side of the container"
        },
        "pinnable": {
          "type": "boolean",
          "title": "Whether or not a link is pinnable"
        },
        "navigationId": {
          "type": "string",
          "title": "The navigation ID"
        }
      },
      "title": "The Container Item for the Side Navigation Bar"
    },
    "v1SideNavigationItem": {
      "type": "object",
      "properties": {
        "sideNavigationSection": {
          "$ref": "#/definitions/v1SideNavigationSection",
          "title": "It could be a section"
        },
        "sideNavigationContainer": {
          "$ref": "#/definitions/v1SideNavigationContainer",
          "title": "It could also be a container"
        },
        "sideNavigationLink": {
          "$ref": "#/definitions/v1SideNavigationLink",
          "title": "It could also just be a normal navigation link"
        }
      }
    },
    "v1SideNavigationLink": {
      "type": "object",
      "properties": {
        "navigationId": {
          "type": "string",
          "title": "The navigation ID"
        },
        "url": {
          "type": "string",
          "title": "The place the link takes you"
        },
        "path": {
          "type": "string",
          "title": "The path that angular would navigate you to, assuming this link takes you to a route in the angular app"
        },
        "serviceProviderId": {
          "type": "string",
          "title": "The service provider ID that owns this link"
        },
        "logoUrl": {
          "type": "string",
          "title": "The logo url for the products icon"
        },
        "icon": {
          "type": "string",
          "title": "The name of the material icon to use"
        },
        "translationId": {
          "type": "string",
          "title": "The ID for the translation of this Link"
        },
        "external": {
          "type": "boolean",
          "title": "Whether or not this link is for an external page"
        },
        "label": {
          "type": "string",
          "title": "the default label in the case that a translation id does not exist"
        },
        "showIcon": {
          "type": "boolean",
          "title": "Whether or not the icon be shown"
        },
        "pinnable": {
          "type": "boolean",
          "title": "Whether or not a link is pinnable"
        },
        "chipContent": {
          "type": "string",
          "title": "Any text content to be shown in a chip on the item"
        },
        "isTrial": {
          "type": "boolean",
          "title": "A flag to indicate whether an activation is a trial"
        },
        "userRequired": {
          "type": "boolean",
          "title": "A flag to show an auth wall when navigation is attempted for items that require a user on the account group"
        },
        "openInNewTab": {
          "type": "boolean",
          "title": "A flag to indicate if we should open a new tab when clicked"
        },
        "subLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SideNavigationLink"
          },
          "title": "Subrouted links"
        },
        "launchUrl": {
          "type": "string",
          "description": "This url is used as the navigation target for a launch button on the links respective page."
        },
        "descriptionTranslationId": {
          "type": "string",
          "title": "The ID for the translation of this Link's description"
        }
      },
      "title": "The navigation link"
    },
    "v1SideNavigationSection": {
      "type": "object",
      "properties": {
        "translationId": {
          "type": "string",
          "title": "The id of the translation to use"
        },
        "sideNavigationItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SideNavigationItem"
          },
          "title": "A repeated item for the side nav"
        },
        "label": {
          "type": "string",
          "title": "the default label in the case that a translation id does not exist"
        },
        "chipContent": {
          "type": "string",
          "title": "Any text content to be shown in a chip on the item"
        }
      },
      "title": "The Container Item for the Side Navigation Bar"
    },
    "v1Theming": {
      "type": "object",
      "properties": {
        "primaryColor": {
          "type": "string",
          "title": "primary color and variations"
        },
        "primaryHoverColor": {
          "type": "string"
        },
        "primaryActiveColor": {
          "type": "string"
        },
        "secondaryColor": {
          "type": "string",
          "title": "secondary color and variations"
        },
        "secondaryHoverColor": {
          "type": "string"
        },
        "secondaryActiveColor": {
          "type": "string"
        },
        "fontColor": {
          "type": "string",
          "title": "font color"
        },
        "fontDisabledColor": {
          "type": "string"
        },
        "accentsColor": {
          "type": "string",
          "title": "accents color and variation, accents are things like the pin icons in the navigation"
        },
        "accentsActiveColor": {
          "type": "string"
        },
        "focusColor": {
          "type": "string",
          "title": "focus color is the target of something that has focus in the current context, i.e. the link to the page you're\ncurrently on has this color as its background in the side navigation"
        },
        "borderColor": {
          "type": "string",
          "title": "the color of borders"
        }
      },
      "title": "Theming values set for a partner and market"
    },
    "v1TotalLocations": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "string",
          "format": "int64",
          "title": "the total number of accounts available to the user"
        },
        "brands": {
          "type": "string",
          "format": "int64",
          "title": "the total number of brands available to the user"
        }
      }
    },
    "v1UITheme": {
      "type": "string",
      "enum": [
        "UI_THEME_DARK",
        "UI_THEME_LIGHT",
        "UI_THEME_USER_PREFERENCE"
      ],
      "default": "UI_THEME_DARK"
    },
    "v1UserNavigationItem": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "The text of a navigation item displayed in the Atlas navbar"
        },
        "url": {
          "type": "string",
          "title": "The url to navigate to upon clicking this navigation item"
        },
        "routeId": {
          "type": "string",
          "title": "Optionally, this will be emitted from Atlas if the Atlas navbar has been initialized as within an Angular app"
        }
      },
      "title": "Represents a User navigation item in the Atlas navbar"
    },
    "v1UserSwitcherData": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The user's identifier"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID"
        },
        "partnerName": {
          "type": "string",
          "title": "Full name of the partner"
        },
        "entryUrl": {
          "type": "string",
          "title": "URL to switch to the specified user"
        }
      }
    },
    "v1UserViewType": {
      "type": "string",
      "enum": [
        "USER_VIEW_TYPE_SMB",
        "USER_VIEW_TYPE_ADMIN"
      ],
      "default": "USER_VIEW_TYPE_SMB"
    },
    "ListActiveAppsMetadataResponseAppMetadatum": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      }
    },
    "v1ListActiveAppsMetadataResponse": {
      "type": "object",
      "properties": {
        "appMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListActiveAppsMetadataResponseAppMetadatum"
          }
        }
      }
    },
    "v1ListActiveAppsResponse": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}