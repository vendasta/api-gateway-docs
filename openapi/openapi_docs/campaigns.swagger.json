{
  "swagger": "2.0",
  "info": {
    "title": "campaigns/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CampaignQuota"
    },
    {
      "name": "Campaigns"
    },
    {
      "name": "Recipient"
    },
    {
      "name": "CampaignConfig"
    },
    {
      "name": "EmailTemplate"
    },
    {
      "name": "RecipientCampaign"
    },
    {
      "name": "RecipientCampaignStepEvent"
    },
    {
      "name": "RecipientCampaignActivatedEvent"
    },
    {
      "name": "CampaignStats"
    },
    {
      "name": "Activations"
    },
    {
      "name": "LegacyAppengineAPIService"
    },
    {
      "name": "EmailBuilder"
    },
    {
      "name": "CampaignTagging"
    },
    {
      "name": "Templates"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/campaigns.v1.Activations/ActivateProductForSender": {
      "post": {
        "operationId": "Activations_ActivateProductForSender",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ActivateProductForSenderRequest"
            }
          }
        ],
        "tags": [
          "Activations"
        ]
      }
    },
    "/campaigns.v1.Activations/DeactivateProduct": {
      "post": {
        "operationId": "Activations_DeactivateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeactivateProductForSenderRequest"
            }
          }
        ],
        "tags": [
          "Activations"
        ]
      }
    },
    "/campaigns.v1.Activations/IsFeatureActive": {
      "post": {
        "operationId": "Activations_IsFeatureActive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IsFeatureActiveForSenderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IsFeatureActiveForSenderRequest"
            }
          }
        ],
        "tags": [
          "Activations"
        ]
      }
    },
    "/campaigns.v1.Activations/IsProductActive": {
      "post": {
        "operationId": "Activations_IsProductActive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IsProductActiveForSenderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IsProductActiveForSenderRequest"
            }
          }
        ],
        "tags": [
          "Activations"
        ]
      }
    },
    "/campaigns.v1.CampaignConfig/GetConfig": {
      "post": {
        "summary": "Gets the campaign options",
        "operationId": "CampaignConfig_GetConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetConfigRequest"
            }
          }
        ],
        "tags": [
          "CampaignConfig"
        ]
      }
    },
    "/campaigns.v1.CampaignConfig/UpdateConfig": {
      "post": {
        "summary": "Updates the campaign options",
        "operationId": "CampaignConfig_UpdateConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateConfigRequest"
            }
          }
        ],
        "tags": [
          "CampaignConfig"
        ]
      }
    },
    "/campaigns.v1.CampaignConfig/UpsertConfig": {
      "post": {
        "summary": "Upserts a campaign config",
        "operationId": "CampaignConfig_UpsertConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertConfigRequest"
            }
          }
        ],
        "tags": [
          "CampaignConfig"
        ]
      }
    },
    "/campaigns.v1.CampaignQuota/CreateQuota": {
      "post": {
        "operationId": "CampaignQuota_CreateQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateQuotaRequest"
            }
          }
        ],
        "tags": [
          "CampaignQuota"
        ]
      }
    },
    "/campaigns.v1.CampaignQuota/GetCampaignQuota": {
      "post": {
        "summary": "Gets the quota for a sender",
        "operationId": "CampaignQuota_GetCampaignQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCampaignQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCampaignQuotaRequest"
            }
          }
        ],
        "tags": [
          "CampaignQuota"
        ]
      }
    },
    "/campaigns.v1.CampaignQuota/UpdateQuotaLimit": {
      "post": {
        "operationId": "CampaignQuota_UpdateQuotaLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateQuotaLimitRequest"
            }
          }
        ],
        "tags": [
          "CampaignQuota"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/ExportRecipientLinkClickStats": {
      "post": {
        "summary": "ExportRecipientLinkClickStats kicks off a process to return a csv of the requested data",
        "operationId": "CampaignStats_ExportRecipientLinkClickStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExportRecipientLinkClickStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/GetAggregatedCampaignStats": {
      "post": {
        "summary": "Gets some campaign stats for all filtered campaigns on a given pid",
        "operationId": "CampaignStats_GetAggregatedCampaignStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAggregatedCampaignStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAggregatedCampaignStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/GetCampaignDetailsStats": {
      "post": {
        "summary": "GetCampaignDetailsStats returns the overall stats for a given campaign",
        "operationId": "CampaignStats_GetCampaignDetailsStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCampaignDetailsStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCampaignDetailsStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/GetCampaignStepStats": {
      "post": {
        "summary": "GetCampaignStepStats returns the stats for each step in a given campaign",
        "operationId": "CampaignStats_GetCampaignStepStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCampaignStepStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCampaignStepStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/GetLinkStats": {
      "post": {
        "summary": "GetLinkStats returns the link stats for a particular campaign step",
        "operationId": "CampaignStats_GetLinkStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLinkStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLinkStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/GetRecipientLinkClickStats": {
      "post": {
        "summary": "GetRecipientLinkClickStats returns details regarding the recipients that clicked on a specific link",
        "operationId": "CampaignStats_GetRecipientLinkClickStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipientLinkClickStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRecipientLinkClickStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/ListCampaignStats": {
      "post": {
        "summary": "Lists campaign stats for a given pid associated to specific filtered campaigns",
        "operationId": "CampaignStats_ListCampaignStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCampaignStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCampaignStatsRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignStats/ListCampaignStatsForSender": {
      "post": {
        "operationId": "CampaignStats_ListCampaignStatsForSender",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCampaignStatsForSenderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCampaignStatsForSenderRequest"
            }
          }
        ],
        "tags": [
          "CampaignStats"
        ]
      }
    },
    "/campaigns.v1.CampaignTagging/AddTagToCampaign": {
      "post": {
        "operationId": "CampaignTagging_AddTagToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddTagToCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignTagging"
        ]
      }
    },
    "/campaigns.v1.CampaignTagging/Create": {
      "post": {
        "operationId": "CampaignTagging_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTagRequest"
            }
          }
        ],
        "tags": [
          "CampaignTagging"
        ]
      }
    },
    "/campaigns.v1.CampaignTagging/Delete": {
      "post": {
        "operationId": "CampaignTagging_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteTagRequest"
            }
          }
        ],
        "tags": [
          "CampaignTagging"
        ]
      }
    },
    "/campaigns.v1.CampaignTagging/ListTagsForCampaign": {
      "post": {
        "operationId": "CampaignTagging_ListTagsForCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTagsForCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListTagsForCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignTagging"
        ]
      }
    },
    "/campaigns.v1.CampaignTagging/ListTagsForSender": {
      "post": {
        "operationId": "CampaignTagging_ListTagsForSender",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTagsForSenderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListTagsForSenderRequest"
            }
          }
        ],
        "tags": [
          "CampaignTagging"
        ]
      }
    },
    "/campaigns.v1.CampaignTagging/RemoveTagFromCampaign": {
      "post": {
        "operationId": "CampaignTagging_RemoveTagFromCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveTagFromCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignTagging"
        ]
      }
    },
    "/campaigns.v1.Campaigns/AddStepToCampaign": {
      "post": {
        "summary": "Adds a step to a campaign",
        "operationId": "Campaigns_AddStepToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StepDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddStepToCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/CheckDuplicateCampaignStatus": {
      "post": {
        "summary": "Checks the background process started by DuplicateCampaignStepAsync",
        "operationId": "Campaigns_CheckDuplicateCampaignStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckDuplicateCampaignStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckDuplicateCampaignStatusRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/CheckDuplicateCampaignStepStatus": {
      "post": {
        "summary": "Checks the background process started by DuplicateCampaignStepAsync",
        "operationId": "Campaigns_CheckDuplicateCampaignStepStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckDuplicateCampaignStepStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckDuplicateCampaignStepStatusRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/CreateCampaign": {
      "post": {
        "summary": "creates a campaign using a senderID",
        "operationId": "Campaigns_CreateCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/DeleteCampaign": {
      "post": {
        "summary": "Deletes a campaign based on a campaign ID",
        "operationId": "Campaigns_DeleteCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/DuplicateAndRecommendCampaign": {
      "post": {
        "summary": "Duplicates the campaign and recommends the duplicated campaign",
        "operationId": "Campaigns_DuplicateAndRecommendCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DuplicateAndRecommendCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/DuplicateCampaignAsync": {
      "post": {
        "summary": "Starts a background process to duplicate an existing step and add it to the same campaign",
        "operationId": "Campaigns_DuplicateCampaignAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DuplicateCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DuplicateCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/DuplicateCampaignAsyncV2": {
      "post": {
        "summary": "Starts a background process to duplicate an existing campaign with a sender",
        "operationId": "Campaigns_DuplicateCampaignAsyncV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DuplicateCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DuplicateCampaignRequestV2"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/DuplicateCampaignStepAsync": {
      "post": {
        "summary": "Starts a background process to duplicate an existing step and add it to the same campaign",
        "operationId": "Campaigns_DuplicateCampaignStepAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DuplicateCampaignStepResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DuplicateCampaignStepRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/ExecuteStep": {
      "post": {
        "summary": "Executes a step as part of a campaign",
        "operationId": "Campaigns_ExecuteStep",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExecuteStepRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/GetAvailableStepTypesForSender": {
      "post": {
        "summary": "Gets which step types this sender can use as part of a campaign",
        "operationId": "Campaigns_GetAvailableStepTypesForSender",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableStepTypesForSenderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAvailableStepTypesForSenderRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/GetCampaign": {
      "post": {
        "summary": "Gets campaign data based on a campaign ID",
        "operationId": "Campaigns_GetCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/GetCampaignStepContent": {
      "post": {
        "summary": "Gets the content for an email-type campaign step, with any dynamic content hydrated",
        "operationId": "Campaigns_GetCampaignStepContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCampaignStepContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCampaignStepContentRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/GetMultiCampaigns": {
      "post": {
        "summary": "GetMultipleCampaigns gets multiple campaigns based on a list of campaign IDs",
        "operationId": "Campaigns_GetMultiCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCampaignsRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/ListCampaigns": {
      "post": {
        "summary": "Gets multiple campaigns",
        "operationId": "Campaigns_ListCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCampaignsRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/ListCampaignsV2": {
      "post": {
        "summary": "RPC to list all campaigns for a sender.",
        "operationId": "Campaigns_ListCampaignsV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCampaignsV2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCampaignsV2Request"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/ListRecommendedCampaigns": {
      "post": {
        "summary": "Gets recommended campaigns",
        "operationId": "Campaigns_ListRecommendedCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRecommendedCampaignsRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/PauseCampaign": {
      "post": {
        "summary": "RPC to pause a campaign",
        "operationId": "Campaigns_PauseCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PauseCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/SendCampaignStepTestEmail": {
      "post": {
        "summary": "Sends a campaign step's content to a user, with any dynamic content hydrated, for testing purposes",
        "operationId": "Campaigns_SendCampaignStepTestEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendCampaignStepTestEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendCampaignStepTestEmailRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/SendRecipientCampaignStepEmail": {
      "post": {
        "summary": "Sends an email as part of a campaign",
        "operationId": "Campaigns_SendRecipientCampaignStepEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendRecipientCampaignStepEmailRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/UnpauseCampaign": {
      "post": {
        "summary": "RPC to unpause a campaign",
        "operationId": "Campaigns_UnpauseCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UnpauseCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/UpdateCampaignName": {
      "post": {
        "summary": "Updates a given campaign's name",
        "operationId": "Campaigns_UpdateCampaignName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCampaignNameRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/UpdateStepOnCampaign": {
      "post": {
        "summary": "Updates a step on a campaign",
        "operationId": "Campaigns_UpdateStepOnCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StepDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateStepOnCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.Campaigns/UpsertCampaign": {
      "post": {
        "summary": "Upserts a campaign",
        "operationId": "Campaigns_UpsertCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertCampaignRequest"
            }
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/campaigns.v1.EmailBuilder/Convert": {
      "post": {
        "operationId": "EmailBuilder_Convert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConvertLegacyTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConvertLegacyTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailBuilder"
        ]
      }
    },
    "/campaigns.v1.EmailBuilder/Create": {
      "post": {
        "operationId": "EmailBuilder_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRequest"
            }
          }
        ],
        "tags": [
          "EmailBuilder"
        ]
      }
    },
    "/campaigns.v1.EmailBuilder/Delete": {
      "post": {
        "operationId": "EmailBuilder_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteRequest"
            }
          }
        ],
        "tags": [
          "EmailBuilder"
        ]
      }
    },
    "/campaigns.v1.EmailBuilder/Get": {
      "post": {
        "operationId": "EmailBuilder_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRequest"
            }
          }
        ],
        "tags": [
          "EmailBuilder"
        ]
      }
    },
    "/campaigns.v1.EmailBuilder/Render": {
      "post": {
        "operationId": "EmailBuilder_Render",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RenderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RenderRequest"
            }
          }
        ],
        "tags": [
          "EmailBuilder"
        ]
      }
    },
    "/campaigns.v1.EmailBuilder/Update": {
      "post": {
        "operationId": "EmailBuilder_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "EmailBuilder"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/CreateEmailTemplate": {
      "post": {
        "operationId": "EmailTemplate_CreateEmailTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateEmailTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/ExtractLinkTrackingDataForTemplate": {
      "post": {
        "operationId": "EmailTemplate_ExtractLinkTrackingDataForTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExtractLinkTrackingDataForTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExtractLinkTrackingDataForTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/GetEmailTemplate": {
      "post": {
        "operationId": "EmailTemplate_GetEmailTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmailTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetEmailTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/GetEmailTemplates": {
      "post": {
        "operationId": "EmailTemplate_GetEmailTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmailTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetEmailTemplatesRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/ListLinksInTemplate": {
      "post": {
        "operationId": "EmailTemplate_ListLinksInTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLinksInTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListLinksInTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/PreviewEmailTemplate": {
      "post": {
        "operationId": "EmailTemplate_PreviewEmailTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PreviewEmailTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PreviewEmailTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/SendPreview": {
      "post": {
        "operationId": "EmailTemplate_SendPreview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendPreviewEmailRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.EmailTemplate/UpdateEmailTemplate": {
      "post": {
        "operationId": "EmailTemplate_UpdateEmailTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateEmailTemplateRequest"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/campaigns.v1.LegacyAppengineAPIService/GetRecipientCampaignsByAgid": {
      "post": {
        "summary": "Get recipient campaigns associated with an Account Group Id",
        "operationId": "LegacyAppengineAPIService_GetRecipientCampaignsByAgid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LegacyGetRecipientCampaignsByAgidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyGetRecipientCampaignsByAgidRequest"
            }
          }
        ],
        "tags": [
          "LegacyAppengineAPIService"
        ]
      }
    },
    "/campaigns.v1.LegacyAppengineAPIService/PauseAccountGroupOnCampaign": {
      "post": {
        "summary": "Pauses each recipient on an account group for a specific campaign",
        "operationId": "LegacyAppengineAPIService_PauseAccountGroupOnCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyPauseAccountGroupOnCampaignRequest"
            }
          }
        ],
        "tags": [
          "LegacyAppengineAPIService"
        ]
      }
    },
    "/campaigns.v1.LegacyAppengineAPIService/RateLimitedAddAccountGroupToCampaign": {
      "post": {
        "summary": "Adds each recipient on an account group to a specific campaign",
        "operationId": "LegacyAppengineAPIService_RateLimitedAddAccountGroupToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyAddAccountGroupToCampaignRequest"
            }
          }
        ],
        "tags": [
          "LegacyAppengineAPIService"
        ]
      }
    },
    "/campaigns.v1.LegacyAppengineAPIService/RateLimitedAddToCampaign": {
      "post": {
        "summary": "Adds a recipient to a specific campaign",
        "operationId": "LegacyAppengineAPIService_RateLimitedAddToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LegacyRateLimitedAddToCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyRateLimitedAddToCampaignRequest"
            }
          }
        ],
        "tags": [
          "LegacyAppengineAPIService"
        ]
      }
    },
    "/campaigns.v1.LegacyAppengineAPIService/UpdateRecipientCampaignStatus": {
      "post": {
        "summary": "Update active state of a recipient campaign",
        "operationId": "LegacyAppengineAPIService_UpdateRecipientCampaignStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyUpdateRecipientCampaignStatusRequest"
            }
          }
        ],
        "tags": [
          "LegacyAppengineAPIService"
        ]
      }
    },
    "/campaigns.v1.Recipient/CreateRecipient": {
      "post": {
        "summary": "Creates a campaign recipient",
        "operationId": "Recipient_CreateRecipient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRecipientRequest"
            }
          }
        ],
        "tags": [
          "Recipient"
        ]
      }
    },
    "/campaigns.v1.Recipient/GetRecipient": {
      "post": {
        "operationId": "Recipient_GetRecipient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRecipientRequest"
            }
          }
        ],
        "tags": [
          "Recipient"
        ]
      }
    },
    "/campaigns.v1.Recipient/ListRecipients": {
      "post": {
        "operationId": "Recipient_ListRecipients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRecipientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRecipientsRequest"
            }
          }
        ],
        "tags": [
          "Recipient"
        ]
      }
    },
    "/campaigns.v1.Recipient/UpdateRecipient": {
      "post": {
        "operationId": "Recipient_UpdateRecipient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRecipientRequest"
            }
          }
        ],
        "tags": [
          "Recipient"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/AddContactToCampaign": {
      "post": {
        "summary": "Add contact to Campaign",
        "operationId": "RecipientCampaign_AddContactToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddContactToCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddContactToCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/BulkAddContactsIdsToCampaign": {
      "post": {
        "summary": "Bulk Add contacts to Campaign with only contact ids",
        "operationId": "RecipientCampaign_BulkAddContactsIdsToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BulkAddContactIdsToCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/BulkAddContactsToCampaign": {
      "post": {
        "summary": "Bulk Add contacts to Campaign",
        "operationId": "RecipientCampaign_BulkAddContactsToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BulkAddContactsToCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/GetRecipientCampaign": {
      "post": {
        "summary": "Gets a recipient campaign by ID",
        "operationId": "RecipientCampaign_GetRecipientCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecipientCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRecipientCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/ListRecipientCampaigns": {
      "post": {
        "summary": "Lists recipient campaigns by business (AGID)",
        "operationId": "RecipientCampaign_ListRecipientCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRecipientCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRecipientCampaignsRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/LookupRecipientCampaign": {
      "post": {
        "summary": "Lookup Campaign Recipient",
        "operationId": "RecipientCampaign_LookupRecipientCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LookupRecipientCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LookupRecipientCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/LookupRecipientCampaigns": {
      "post": {
        "summary": "Lookup Multiple Campaign Recipients (for bulk)",
        "operationId": "RecipientCampaign_LookupRecipientCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LookupRecipientCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LookupRecipientCampaignsRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/PauseRecipientCampaign": {
      "post": {
        "summary": "Pauses a recipient campaign",
        "operationId": "RecipientCampaign_PauseRecipientCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PauseRecipientCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/ResumeRecipientCampaign": {
      "post": {
        "summary": "Resumes a recipient campaign",
        "operationId": "RecipientCampaign_ResumeRecipientCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResumeRecipientCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaign/UpsertRecipientCampaign": {
      "post": {
        "summary": "Upserts a recipient campaign",
        "operationId": "RecipientCampaign_UpsertRecipientCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertRecipientCampaignRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaign"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaignActivatedEvent/UpsertRecipientCampaignActivatedEvent": {
      "post": {
        "summary": "Upserts a RecipientCampaignActivatedEvent",
        "operationId": "RecipientCampaignActivatedEvent_UpsertRecipientCampaignActivatedEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertRecipientCampaignActivatedEventRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaignActivatedEvent"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaignStepEvent/CreateRecipientCampaignStepEvent": {
      "post": {
        "summary": "Creates a recipient campaign step event",
        "operationId": "RecipientCampaignStepEvent_CreateRecipientCampaignStepEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRecipientCampaignStepEventRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaignStepEvent"
        ]
      }
    },
    "/campaigns.v1.RecipientCampaignStepEvent/UpsertRecipientCampaignStepEvent": {
      "post": {
        "summary": "Upserts a recipient campaign step event",
        "operationId": "RecipientCampaignStepEvent_UpsertRecipientCampaignStepEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertRecipientCampaignStepEventRequest"
            }
          }
        ],
        "tags": [
          "RecipientCampaignStepEvent"
        ]
      }
    },
    "/campaigns.v1.Templates/Update": {
      "post": {
        "summary": "Updates a template",
        "operationId": "Templates_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateTemplateRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    }
  },
  "definitions": {
    "FilterValue": {
      "type": "object",
      "properties": {
        "boolean": {
          "type": "boolean"
        },
        "integer": {
          "type": "string",
          "format": "int64"
        },
        "float": {
          "type": "number",
          "format": "float"
        },
        "string": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dateDefault": {
          "$ref": "#/definitions/v1DateDefault"
        },
        "phone": {
          "$ref": "#/definitions/v1Phone"
        }
      }
    },
    "RecipientClickStatsAccount": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "the account group id"
        }
      }
    },
    "RecipientClickStatsRecipient": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "title": "recipient email address"
        }
      }
    },
    "campaignsv1Focuses": {
      "type": "string",
      "enum": [
        "FOCUSES_UNSPECIFIED",
        "FOCUSES_ACQUIRE",
        "FOCUSES_UPSELL",
        "FOCUSES_ADOPT",
        "FOCUSES_NONE"
      ],
      "default": "FOCUSES_UNSPECIFIED",
      "title": "Enumeration of possible focus types a campaign can be"
    },
    "campaignsv1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "Cursor and page size for paging request"
    },
    "campaignsv1Statuses": {
      "type": "string",
      "enum": [
        "STATUSES_UNSPECIFIED",
        "STATUSES_DRAFT",
        "STATUSES_PUBLISHED",
        "STATUSES_ACTIVE",
        "STATUSES_ARCHIVED"
      ],
      "default": "STATUSES_UNSPECIFIED",
      "title": "Enumeration of possible statuses a campaign can have"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ActivateProductForSenderRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The campaign sender to activate for"
        },
        "sku": {
          "type": "string",
          "title": "The activation sku to activate a product for"
        }
      }
    },
    "v1AddContactToCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "Unique identifier of the sender"
        },
        "recipient": {
          "$ref": "#/definitions/v1RecipientV2",
          "title": "Unique identifier of the recipient"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "Date/time when the recipient campaign will start"
        },
        "senderOptions": {
          "$ref": "#/definitions/v1SenderOptions",
          "title": "Optional sender arguments"
        },
        "sendNow": {
          "type": "boolean",
          "title": "Whether to start the campaign now"
        }
      }
    },
    "v1AddContactToCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string"
        }
      }
    },
    "v1AddStepToCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to add the step to"
        },
        "stepType": {
          "$ref": "#/definitions/v1CampaignStepType",
          "title": "The type of campaign step to add"
        },
        "contentId": {
          "type": "string",
          "title": "the ID of the content (email template ID, automation workflow ID, etc)"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "Owner identifier for step"
        },
        "name": {
          "type": "string",
          "title": "name of step"
        }
      }
    },
    "v1AddTagToCampaignRequest": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        }
      }
    },
    "v1AsyncWorkStatus": {
      "type": "string",
      "enum": [
        "ASYNC_WORK_STATUS_INVALID",
        "ASYNC_WORK_STATUS_IN_PROGRESS",
        "ASYNC_WORK_STATUS_COMPLETE",
        "ASYNC_WORK_STATUS_ERROR"
      ],
      "default": "ASYNC_WORK_STATUS_INVALID"
    },
    "v1BulkAddContactIdsToCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "Unique identifier of the sender"
        },
        "contactIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of contact ids to add to the campaign"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "Date/time when the recipient campaign will start"
        }
      }
    },
    "v1BulkAddContactsToCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "Unique identifier of the sender"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "Date/time when the recipient campaign will start"
        },
        "criteria": {
          "$ref": "#/definitions/v1RecipientCriteria",
          "title": "Criteria for selecting  recipients"
        },
        "senderOptions": {
          "$ref": "#/definitions/v1SenderOptions",
          "title": "Optional sender arguments"
        },
        "sendNow": {
          "type": "boolean",
          "title": "Whether to start the campaign now"
        }
      }
    },
    "v1CampaignDetailStats": {
      "type": "object",
      "properties": {
        "active": {
          "type": "string",
          "format": "int64",
          "title": "Number of active accounts on a campaign"
        },
        "clicksPerOpenedEmail": {
          "type": "string",
          "format": "int64",
          "title": "Click through rate of opened emails"
        },
        "completed": {
          "type": "string",
          "format": "int64",
          "title": "How may recipient campaigns have completed"
        },
        "delivered": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been delivered on the campaign"
        },
        "opened": {
          "type": "string",
          "format": "int64",
          "title": "Open rate of a campaign"
        },
        "sent": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been sent"
        },
        "stopped": {
          "type": "string",
          "format": "int64",
          "title": "How may recipient campaigns have stopped"
        },
        "totalAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Total number of accounts on this campaign"
        },
        "totalLeads": {
          "type": "string",
          "format": "int64",
          "title": "Total number of unique accounts with opened emails"
        },
        "totalRecipients": {
          "type": "string",
          "format": "int64",
          "title": "Total number of recipients"
        },
        "undeliverable": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been undelivered"
        },
        "waitingOnRateLimit": {
          "type": "string",
          "format": "int64",
          "title": "How may recipient campaigns are waiting on rate limit"
        }
      }
    },
    "v1CampaignQuotaCategory": {
      "type": "string",
      "enum": [
        "CAMPAIGN_QUOTA_TYPE_INVALID",
        "CAMPAIGN_QUOTA_TYPE_EMAIL",
        "CAMPAIGN_QUOTA_TYPE_SMS"
      ],
      "default": "CAMPAIGN_QUOTA_TYPE_INVALID"
    },
    "v1CampaignRecipient": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1CampaignScheduleStatus": {
      "type": "string",
      "enum": [
        "CAMPAIGN_SCHEDULE_STATUS_UNSPECIFIED",
        "CAMPAIGN_SCHEDULE_STATUS_ACTIVE",
        "CAMPAIGN_SCHEDULE_STATUS_WAITING_ON_RATE_LIMIT",
        "CAMPAIGN_SCHEDULE_STATUS_STOPPED",
        "CAMPAIGN_SCHEDULE_STATUS_COMPLETED"
      ],
      "default": "CAMPAIGN_SCHEDULE_STATUS_UNSPECIFIED",
      "title": "Enumeration of possible campaign schedule statuses"
    },
    "v1CampaignState": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STATE_UNSPECIFIED",
        "CAMPAIGN_STATE_ACTIVE",
        "CAMPAIGN_STATE_IDLE"
      ],
      "default": "CAMPAIGN_STATE_UNSPECIFIED",
      "title": "Enumeration of possible campaign states"
    },
    "v1CampaignStepEvent": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/v1CampaignStepEventType",
          "title": "The event type of the step"
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date for the event"
        }
      }
    },
    "v1CampaignStepEventType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STEP_EVENT_TYPE_UNSPECIFIED",
        "CAMPAIGN_STEP_EVENT_TYPE_PROCESSED",
        "CAMPAIGN_STEP_EVENT_TYPE_DROPPED",
        "CAMPAIGN_STEP_EVENT_TYPE_DELIVERED",
        "CAMPAIGN_STEP_EVENT_TYPE_DEFERRED",
        "CAMPAIGN_STEP_EVENT_TYPE_BOUNCE",
        "CAMPAIGN_STEP_EVENT_TYPE_OPEN",
        "CAMPAIGN_STEP_EVENT_TYPE_CLICK",
        "CAMPAIGN_STEP_EVENT_TYPE_SPAM_REPORT",
        "CAMPAIGN_STEP_EVENT_TYPE_UNSUBSCRIBE",
        "CAMPAIGN_STEP_EVENT_TYPE_CREATED",
        "CAMPAIGN_STEP_EVENT_TYPE_NOT_REQUIRED",
        "CAMPAIGN_STEP_EVENT_TYPE_REFRESHED"
      ],
      "default": "CAMPAIGN_STEP_EVENT_TYPE_UNSPECIFIED",
      "title": "Enumeration of possible campaign step event types"
    },
    "v1CampaignStepInterface": {
      "type": "object",
      "properties": {
        "campaignStepId": {
          "type": "string",
          "title": "Identifier of the campaign step"
        },
        "stepType": {
          "$ref": "#/definitions/v1CampaignStepType",
          "title": "Whether the step is an email or a snapshot creation event"
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template for the step"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64",
          "title": "Delay between this step and the previous one"
        },
        "name": {
          "type": "string",
          "title": "Name of the step"
        }
      }
    },
    "v1CampaignStepSendStatusType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_UNSPECIFIED",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_UNSENT",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_QUEUED",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_SENDING",
        "CAMPAIGN_STEP_SEND_STATUS_TYPE_SENT"
      ],
      "default": "CAMPAIGN_STEP_SEND_STATUS_TYPE_UNSPECIFIED",
      "title": "Enumeration of possible campaign step send status types"
    },
    "v1CampaignStepStats": {
      "type": "object",
      "properties": {
        "campaignStepId": {
          "type": "string"
        },
        "delivered": {
          "type": "string",
          "format": "int64"
        },
        "opens": {
          "type": "string",
          "format": "int64"
        },
        "openRate": {
          "type": "number",
          "format": "double"
        },
        "clickToOpenRate": {
          "type": "number",
          "format": "double"
        },
        "bounced": {
          "type": "string",
          "format": "int64"
        },
        "spam": {
          "type": "string",
          "format": "int64"
        },
        "unsubscribed": {
          "type": "string",
          "format": "int64"
        },
        "dropped": {
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "type": "string",
          "format": "int64"
        },
        "pending": {
          "type": "string",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "refreshed": {
          "type": "string",
          "format": "int64"
        },
        "notRequired": {
          "type": "string",
          "format": "int64"
        },
        "sent": {
          "type": "string",
          "format": "int64"
        },
        "stopped": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CampaignStepType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_STEP_TYPE_UNSPECIFIED",
        "CAMPAIGN_STEP_TYPE_EMAIL",
        "CAMPAIGN_STEP_TYPE_SNAPSHOT_CREATION",
        "CAMPAIGN_STEP_TYPE_SMS"
      ],
      "default": "CAMPAIGN_STEP_TYPE_UNSPECIFIED",
      "title": "Enumeration of possible campaign step types"
    },
    "v1CampaignTag": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        }
      }
    },
    "v1CheckDuplicateCampaignStatusRequest": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string"
        }
      }
    },
    "v1CheckDuplicateCampaignStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AsyncWorkStatus"
        },
        "campaignId": {
          "type": "string",
          "description": "ID of the new campaign ID. Should only be provided when status is \"success\"."
        }
      }
    },
    "v1CheckDuplicateCampaignStepStatusRequest": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string"
        }
      }
    },
    "v1CheckDuplicateCampaignStepStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1DuplicateCampaignStepStatus"
        }
      }
    },
    "v1Colors": {
      "type": "object",
      "properties": {
        "textColor": {
          "type": "string"
        },
        "titleColor": {
          "type": "string"
        },
        "subtitleColor": {
          "type": "string"
        },
        "linkColor": {
          "type": "string"
        },
        "footerTextColor": {
          "type": "string"
        },
        "textBackground": {
          "type": "string"
        },
        "pageBackground": {
          "type": "string"
        }
      }
    },
    "v1Contact": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1ContactType",
          "title": "invalid or email for now"
        },
        "value": {
          "type": "string",
          "title": "value of type"
        }
      }
    },
    "v1ContactType": {
      "type": "string",
      "enum": [
        "CONTACT_TYPE_INVALID",
        "CONTACT_TYPE_EMAIL"
      ],
      "default": "CONTACT_TYPE_INVALID"
    },
    "v1ConvertLegacyTemplateRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1ConvertLegacyTemplateResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1CreateCampaignRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "the info about the sender creating the campaign"
        },
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        }
      }
    },
    "v1CreateCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        }
      }
    },
    "v1CreateEmailTemplateRequest": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1EmailTemplateStruct"
        }
      }
    },
    "v1CreateQuotaRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID and type of the sender"
        },
        "type": {
          "$ref": "#/definitions/v1CampaignQuotaCategory",
          "title": "The type of the quota"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "The limit of the quota"
        },
        "quotaStartDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date that the quota is in effect for"
        },
        "quotaEndDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date that the quota is in effect for"
        }
      }
    },
    "v1CreateRecipientCampaignStepEventRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version number of the recipient campaign step"
        },
        "eventId": {
          "type": "string",
          "title": "Unique identifier of the event"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique identifier of the partner that this campaign step event belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "Unique identifier of the market that this campaign step event belongs to"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Unique identifier of the account group that this campaign step event belongs to"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "campaignStepId": {
          "type": "string",
          "title": "Unique identifier of the campaign step"
        },
        "recipientId": {
          "type": "string",
          "title": "Unique identifier created for the recipient"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign"
        },
        "recipientCampaignStepId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign step"
        },
        "eventType": {
          "$ref": "#/definitions/v1CampaignStepEventType",
          "title": "The event type of the step"
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date for the event"
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template for the step"
        },
        "probablyBot": {
          "type": "boolean",
          "title": "Bot or not"
        },
        "url": {
          "type": "string",
          "title": "The url for a click event"
        },
        "normalizedUrl": {
          "type": "string",
          "title": "The normalized url for a click event"
        }
      }
    },
    "v1CreateRecipientRequest": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string",
          "title": "Unique ID associated to the recipient"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique ID associated to the partner"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Unique ID associated to the account group of the recipient"
        },
        "email": {
          "type": "string",
          "title": "The email address of the recipient"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The sender"
        },
        "recipient": {
          "$ref": "#/definitions/v1RecipientV2",
          "title": "The recipient"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The phone number of the recipient"
        }
      },
      "title": "Request for creating a recipient"
    },
    "v1CreateRequest": {
      "type": "object",
      "properties": {
        "emailBuilderTemplate": {
          "$ref": "#/definitions/v1EmailBuilderTemplate"
        }
      }
    },
    "v1CreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateTagRequest": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        }
      }
    },
    "v1CreateTagResponse": {
      "type": "object",
      "properties": {
        "campaignTag": {
          "$ref": "#/definitions/v1CampaignTag"
        }
      }
    },
    "v1DateDefault": {
      "type": "string",
      "enum": [
        "DATE_DEFAULT_INVALID",
        "DATE_DEFAULT_TODAY",
        "DATE_DEFAULT_YESTERDAY",
        "DATE_DEFAULT_TOMORROW",
        "DATE_DEFAULT_THIS_WEEK",
        "DATE_DEFAULT_LAST_WEEK",
        "DATE_DEFAULT_NEXT_WEEK",
        "DATE_DEFAULT_THIS_MONTH",
        "DATE_DEFAULT_LAST_MONTH",
        "DATE_DEFAULT_NEXT_MONTH",
        "DATE_DEFAULT_THIS_QUARTER",
        "DATE_DEFAULT_LAST_QUARTER",
        "DATE_DEFAULT_NEXT_QUARTER",
        "DATE_DEFAULT_THIS_YEAR",
        "DATE_DEFAULT_LAST_YEAR",
        "DATE_DEFAULT_NEXT_YEAR"
      ],
      "default": "DATE_DEFAULT_INVALID"
    },
    "v1DateFilter": {
      "type": "object",
      "properties": {
        "dateLte": {
          "type": "string",
          "format": "date-time",
          "title": "The inclusively get campaigns that is less than or equal to this date"
        },
        "dateGte": {
          "type": "string",
          "format": "date-time",
          "title": "The inclusively get campaigns that is greater than or equal to this date"
        }
      }
    },
    "v1DaysOfTheWeek": {
      "type": "string",
      "enum": [
        "DAYS_OF_THE_WEEK_MONDAY",
        "DAYS_OF_THE_WEEK_TUESDAY",
        "DAYS_OF_THE_WEEK_WEDNESDAY",
        "DAYS_OF_THE_WEEK_THURSDAY",
        "DAYS_OF_THE_WEEK_FRIDAY",
        "DAYS_OF_THE_WEEK_SATURDAY",
        "DAYS_OF_THE_WEEK_SUNDAY"
      ],
      "default": "DAYS_OF_THE_WEEK_MONDAY"
    },
    "v1DeactivateProductForSenderRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The campaign sender to deactivate a product for"
        },
        "sku": {
          "type": "string",
          "title": "The activation sku to deactivate a product for"
        }
      }
    },
    "v1DeleteCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The corresponding campaign ID associated with the campaign"
        }
      },
      "title": "Request to delete an existing campaign"
    },
    "v1DeleteRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteTagRequest": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        }
      }
    },
    "v1DeletedTagsPolicy": {
      "type": "string",
      "enum": [
        "DELETED_TAGS_POLICY_EXCLUDE_FROM_RESPONSE"
      ],
      "default": "DELETED_TAGS_POLICY_EXCLUDE_FROM_RESPONSE",
      "title": "- DELETED_TAGS_POLICY_EXCLUDE_FROM_RESPONSE: If a campaign is associated to a tag ID that has been deleted or is\notherwise missing, that tag will be excluded from the response"
    },
    "v1DuplicateAndRecommendCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "ID of the campaign to duplicate"
        },
        "campaignDetails": {
          "$ref": "#/definitions/v1DuplicateCampaignDetails",
          "title": "Details for the duplicated campaign"
        }
      }
    },
    "v1DuplicateCampaignDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the duplicated campaign"
        }
      }
    },
    "v1DuplicateCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the source campaign to copy"
        },
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner who should own the new campaign"
        },
        "campaignDetails": {
          "$ref": "#/definitions/v1DuplicateCampaignDetails",
          "title": "Details for the duplicated campaign"
        }
      }
    },
    "v1DuplicateCampaignRequestV2": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the source campaign to copy"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID of the sender who should own the new campaign"
        },
        "campaignDetails": {
          "$ref": "#/definitions/v1DuplicateCampaignDetails",
          "title": "Details for the duplicated campaign"
        }
      }
    },
    "v1DuplicateCampaignResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string",
          "title": "An ID which can be fed into the"
        }
      }
    },
    "v1DuplicateCampaignStepRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the source and destination campaign where the step will be copied"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID of the campaign step that will be copied"
        }
      }
    },
    "v1DuplicateCampaignStepResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string",
          "title": "An ID which can be fed into the"
        }
      }
    },
    "v1DuplicateCampaignStepStatus": {
      "type": "string",
      "enum": [
        "DUPLICATE_CAMPAIGN_STEP_STATUS_INVALID",
        "DUPLICATE_CAMPAIGN_STEP_STATUS_IN_PROGRESS",
        "DUPLICATE_CAMPAIGN_STEP_STATUS_COMPLETE"
      ],
      "default": "DUPLICATE_CAMPAIGN_STEP_STATUS_INVALID",
      "title": "Deprecated: use AsyncWorkStatus"
    },
    "v1EmailBuilderConfiguration": {
      "type": "object",
      "properties": {
        "googleAnalyticsOptions": {
          "$ref": "#/definitions/v1GoogleAnalyticsOptions"
        },
        "pageSetup": {
          "$ref": "#/definitions/v1PageSetup"
        },
        "topLogo": {
          "$ref": "#/definitions/v1TopLogo"
        },
        "footer": {
          "$ref": "#/definitions/v1Footer"
        },
        "contentBlocks": {
          "type": "string"
        },
        "colors": {
          "$ref": "#/definitions/v1Colors"
        }
      }
    },
    "v1EmailBuilderTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subjectLine": {
          "type": "string"
        },
        "previewText": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The iam.User id of the user that last modified this email."
        },
        "emailBuilderConfiguration": {
          "$ref": "#/definitions/v1EmailBuilderConfiguration"
        },
        "createdBy": {
          "type": "string",
          "description": "The iam.User id of the user that created this email."
        },
        "campaignFocus": {
          "$ref": "#/definitions/v1EmailBuilderTemplateFocuses"
        },
        "status": {
          "$ref": "#/definitions/v1EmailBuilderTemplateStatuses"
        },
        "isEditable": {
          "type": "boolean"
        },
        "parent": {
          "$ref": "#/definitions/v1TemplateReference",
          "title": "The reference of the parent template"
        }
      }
    },
    "v1EmailBuilderTemplateFocuses": {
      "type": "string",
      "enum": [
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_UNSPECIFIED",
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_ACQUIRE",
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_UPSELL",
        "EMAIL_BUILDER_TEMPLATE_FOCUSES_ADOPT"
      ],
      "default": "EMAIL_BUILDER_TEMPLATE_FOCUSES_UNSPECIFIED",
      "title": "Enumeration of possible focus types a campaign can be"
    },
    "v1EmailBuilderTemplateStatuses": {
      "type": "string",
      "enum": [
        "EMAIL_BUILDER_TEMPLATE_STATUSES_UNSPECIFIED",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_DRAFT",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_PUBLISHED",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_ACTIVE",
        "EMAIL_BUILDER_TEMPLATE_STATUSES_ARCHIVED"
      ],
      "default": "EMAIL_BUILDER_TEMPLATE_STATUSES_UNSPECIFIED",
      "title": "Enumeration of possible statuses a campaign can have"
    },
    "v1EmailTemplateStruct": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "Unique identifier of the template"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique identifier of the partner that owns this template"
        },
        "marketId": {
          "type": "string",
          "title": "Unique identifier of the market that this template belongs to"
        },
        "name": {
          "type": "string",
          "title": "Name of the template"
        },
        "campaignFocus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The focus of the campaign that this template belongs to"
        },
        "status": {
          "$ref": "#/definitions/v1TemplateStatus",
          "title": "The status of the template (Draft, Published)"
        },
        "isEditable": {
          "type": "boolean",
          "title": "Whether the template is editable or not"
        },
        "updatedByUserEmail": {
          "type": "string",
          "title": "User that last updated the template"
        },
        "createdByUserEmail": {
          "type": "string",
          "title": "User that created the template"
        },
        "publishedByUserEmail": {
          "type": "string",
          "title": "User that published the template"
        },
        "subject": {
          "type": "string",
          "title": "The subject of the template"
        },
        "htmlBody": {
          "type": "string",
          "title": "The html body of the template"
        },
        "useFullHtml": {
          "type": "boolean",
          "title": "Whether full html should be used or not"
        },
        "fullHtml": {
          "type": "string",
          "title": "The full html body of the template"
        },
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version number of the template"
        }
      }
    },
    "v1ExecuteStepRequest": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string",
          "title": "Identifies the recipient campaign that owns the step"
        },
        "recipientCampaignStepId": {
          "type": "string",
          "title": "Identified the step being executed via this RPC"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "Owner identifier"
        }
      }
    },
    "v1ExportRecipientLinkClickStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID for a campaign Step"
        },
        "normalizedUrl": {
          "type": "string",
          "title": "The normalized url to get stats for"
        },
        "userId": {
          "type": "string",
          "title": "The user id of the requester"
        }
      }
    },
    "v1ExtractLinkTrackingDataForTemplateRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "ID of the template to list links for"
        },
        "hydratedTemplateContent": {
          "type": "string",
          "title": "DEPRECATED: Use hydration parameters instead"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account group ID to hydrate templated links with"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID to hydrate templated links with"
        },
        "marketId": {
          "type": "string",
          "title": "Market ID to hydrate templated links with"
        },
        "userId": {
          "type": "string",
          "title": "User ID to hydrate templated links with"
        }
      }
    },
    "v1ExtractLinkTrackingDataForTemplateResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkTrackingData"
          },
          "title": "List of clickable links found in template"
        }
      }
    },
    "v1Feature": {
      "type": "string",
      "enum": [
        "SEND_UNKNOWN",
        "SEND_SMS",
        "SEND_EMAIL",
        "SEND_SNAPSHOT",
        "SEND_EMAIL_ADDONS"
      ],
      "default": "SEND_UNKNOWN"
    },
    "v1Filter": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/v1FilterOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FilterValue"
          },
          "title": "This is repeated to support operations that take zero or more than one value.\nFor example\n   isEmpty()\n   isAnyOf(a, b, c)\n   isBetween(date1, date2)"
        },
        "floatTolerance": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1FilterGroup": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/v1FilterGroupOperator"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Filter"
          }
        }
      }
    },
    "v1FilterGroupOperator": {
      "type": "string",
      "enum": [
        "FILTER_GROUP_OPERATOR_INVALID",
        "FILTER_GROUP_OPERATOR_AND",
        "FILTER_GROUP_OPERATOR_OR"
      ],
      "default": "FILTER_GROUP_OPERATOR_INVALID"
    },
    "v1FilterOperator": {
      "type": "string",
      "enum": [
        "FILTER_OPERATOR_INVALID",
        "FILTER_OPERATOR_IS_EMPTY",
        "FILTER_OPERATOR_IS_NOT_EMPTY",
        "FILTER_OPERATOR_IS",
        "FILTER_OPERATOR_IS_NOT",
        "FILTER_OPERATOR_IS_ANY",
        "FILTER_OPERATOR_IS_NOT_ANY",
        "FILTER_OPERATOR_IS_ALL",
        "FILTER_OPERATOR_IS_NOT_ALL",
        "FILTER_OPERATOR_CONTAINS",
        "FILTER_OPERATOR_DOES_NOT_CONTAIN",
        "FILTER_OPERATOR_IS_EQUAL_TO",
        "FILTER_OPERATOR_IS_NOT_EQUAL_TO",
        "FILTER_OPERATOR_IS_GREATER_THAN",
        "FILTER_OPERATOR_IS_GREATER_THAN_OR_EQUAL_TO",
        "FILTER_OPERATOR_IS_LESS_THAN",
        "FILTER_OPERATOR_IS_LESS_THAN_OR_EQUAL_TO",
        "FILTER_OPERATOR_IS_BEFORE",
        "FILTER_OPERATOR_IS_BEFORE_OR_ON",
        "FILTER_OPERATOR_IS_AFTER",
        "FILTER_OPERATOR_IS_AFTER_OR_ON",
        "FILTER_OPERATOR_IS_BETWEEN",
        "FILTER_OPERATOR_IS_NOT_BETWEEN",
        "FILTER_OPERATOR_IS_VALID",
        "FILTER_OPERATOR_IS_NOT_VALID"
      ],
      "default": "FILTER_OPERATOR_INVALID"
    },
    "v1Footer": {
      "type": "object",
      "properties": {
        "disclaimer": {
          "type": "string"
        },
        "showContactInfo": {
          "type": "boolean"
        },
        "showUnsubscribeLinks": {
          "type": "boolean"
        }
      }
    },
    "v1GetAggregatedCampaignStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner"
        },
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market to filter on"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Statuses"
          },
          "title": "The selected statuses to filter on"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CampaignState"
          },
          "title": "The selected states to filter on"
        },
        "searchTerm": {
          "type": "string",
          "title": "The search term entered to filter campaign names"
        },
        "dateFilter": {
          "$ref": "#/definitions/v1DateFilter",
          "title": "The dates to filter on"
        }
      }
    },
    "v1GetAggregatedCampaignStatsResponse": {
      "type": "object",
      "properties": {
        "totalAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Sum of all unique accounts for campaign(s) after filtering"
        },
        "averageClickThroughRate": {
          "type": "number",
          "format": "double",
          "title": "Average click through rate of filtered campaign(s)"
        },
        "averageOpenRate": {
          "type": "number",
          "format": "double",
          "title": "Average open rate of filtered campaign(s)"
        },
        "totalActiveCampaigns": {
          "type": "string",
          "format": "int64",
          "title": "Sum of active campaigns"
        }
      }
    },
    "v1GetAvailableStepTypesForSenderRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The campaign sender to check for"
        }
      }
    },
    "v1GetAvailableStepTypesForSenderResponse": {
      "type": "object",
      "properties": {
        "availableStepTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Feature"
          },
          "title": "The available step types for the sender"
        }
      }
    },
    "v1GetCampaignDetailsStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner"
        },
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign"
        },
        "marketId": {
          "type": "string",
          "title": "The ID of the market to filter on"
        },
        "dateFilter": {
          "$ref": "#/definitions/v1DateFilter",
          "title": "The date range to filter within"
        }
      }
    },
    "v1GetCampaignDetailsStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/v1CampaignDetailStats",
          "title": "The overall stats for a given campaign"
        }
      }
    },
    "v1GetCampaignQuotaRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID and type of the sender"
        },
        "type": {
          "$ref": "#/definitions/v1CampaignQuotaCategory",
          "title": "The type of the quota"
        },
        "datePeriod": {
          "$ref": "#/definitions/v1Period",
          "title": "The period of the quota"
        }
      }
    },
    "v1GetCampaignQuotaResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The count of the quota"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "The limit of the quota"
        },
        "quotaStartDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of the quota"
        },
        "quotaEndDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of the quota"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The last updated date of the quota"
        }
      }
    },
    "v1GetCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The corresponding campaign ID associated with the campaign"
        }
      },
      "title": "Request for getting a single campaign"
    },
    "v1GetCampaignResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1GetterCampaignData",
          "title": "The corresponding campaign data"
        }
      },
      "title": "Response for getting a single campaign"
    },
    "v1GetCampaignStepContentRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to get the step from"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID of the campaign step to get the HTML for"
        },
        "stepData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The data required for hydrating the template's HTML"
        }
      }
    },
    "v1GetCampaignStepContentResponse": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string",
          "title": "The HTML for the campaign step"
        },
        "subject": {
          "type": "string",
          "title": "The subject line for the campaign step"
        }
      }
    },
    "v1GetCampaignStepStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "dateFilter": {
          "$ref": "#/definitions/v1DateFilter"
        }
      }
    },
    "v1GetCampaignStepStatsResponse": {
      "type": "object",
      "properties": {
        "stepStats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepStats"
          }
        }
      }
    },
    "v1GetConfigRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to get config for"
        }
      }
    },
    "v1GetConfigResponse": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "title": "the timezone associated with the campaign"
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Days that the emails are able to be sent out"
        },
        "rateLimited": {
          "type": "boolean",
          "title": "Whether or not a buffer is enabled to limit the amount emails sent per sales person per day"
        },
        "rateLimit": {
          "type": "string",
          "format": "int64",
          "title": "The size of the buffer for limiting the amount of emails sent"
        }
      }
    },
    "v1GetEmailTemplateRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1GetEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1EmailTemplateStruct"
        }
      }
    },
    "v1GetEmailTemplatesRequest": {
      "type": "object",
      "properties": {
        "templateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetEmailTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailTemplateStruct"
          }
        }
      }
    },
    "v1GetLinkStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "campaignStepId": {
          "type": "string"
        }
      }
    },
    "v1GetLinkStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LinkStats"
          },
          "title": "a LinkStats item per link in template"
        },
        "totalClicksOnCampaignStep": {
          "type": "string",
          "format": "int64",
          "title": "Total clicks across all links on this campaign step"
        }
      }
    },
    "v1GetMultiCampaignsRequest": {
      "type": "object",
      "properties": {
        "campaignIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The corresponding campaign IDs associated with the campaigns"
        }
      },
      "title": "Request for getting multiple campaigns"
    },
    "v1GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetterCampaignData"
          },
          "title": "Thee corresponding campaign data"
        }
      },
      "title": "Response when getting multiple campaigns"
    },
    "v1GetRecipientCampaignRequest": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        }
      }
    },
    "v1GetRecipientCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "$ref": "#/definitions/v1RecipientCampaignStruct",
          "title": "Recipient campaign"
        }
      }
    },
    "v1GetRecipientLinkClickStatsRequest": {
      "type": "object",
      "properties": {
        "pagingOptions": {
          "$ref": "#/definitions/v1GetRecipientLinkClickStatsRequestPagedRequestOptions",
          "title": "paging options"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID for a campaign Step"
        },
        "normalizedUrl": {
          "type": "string",
          "title": "The normalized url to get stats for"
        }
      }
    },
    "v1GetRecipientLinkClickStatsRequestPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "v1GetRecipientLinkClickStatsResponse": {
      "type": "object",
      "properties": {
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientClickStats"
          }
        }
      }
    },
    "v1GetRecipientRequest": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string",
          "title": "Unique ID associated to the recipient"
        }
      }
    },
    "v1GetRecipientResponse": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string",
          "title": "Unique ID associated to the recipient"
        },
        "email": {
          "type": "string",
          "title": "The email address associated with the Recipient"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The type of the sender (partner, business), and the associated ID"
        },
        "recipient": {
          "$ref": "#/definitions/v1RecipientV2",
          "title": "The type of the recipient (business, crm) and the associated ID"
        }
      }
    },
    "v1GetRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1GetResponse": {
      "type": "object",
      "properties": {
        "emailBuilderTemplate": {
          "$ref": "#/definitions/v1EmailBuilderTemplate"
        }
      }
    },
    "v1GetterCampaignData": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner"
        },
        "marketId": {
          "type": "string",
          "title": "ID for market that the stats pertain to"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepInterface"
          },
          "title": "Details of the steps in the campaign"
        },
        "campaignScheduleVersion": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign schedule"
        },
        "eventsCount": {
          "type": "string",
          "format": "int64",
          "title": "Numerical count for number of events/steps in the campaign"
        },
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        },
        "status": {
          "$ref": "#/definitions/campaignsv1Statuses",
          "title": "Status of the campaign"
        },
        "locale": {
          "type": "string",
          "title": "The localization code for the campaign"
        },
        "isEnabled": {
          "type": "boolean",
          "title": "If the campaign is enabled or not"
        },
        "isEditable": {
          "type": "boolean",
          "title": "If the campaign can be edited"
        },
        "hiddenForPartners": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Which partners this campaign is hidden for"
        },
        "isPremade": {
          "type": "boolean",
          "title": "If a campaign is premade/recommended or not"
        },
        "parentCampaignId": {
          "type": "string",
          "description": "If duplicated, the campaign id of the campaign which this campaign was directly duplicated from."
        },
        "rootCampaignId": {
          "type": "string",
          "description": "If duplicated, the campaign id of the campaign which this campaign was ultimately duplicated from."
        },
        "createdUser": {
          "type": "string",
          "title": "User that created the campaign"
        },
        "updatedUser": {
          "type": "string",
          "title": "User that last updated the campaign"
        },
        "publishedUser": {
          "type": "string",
          "title": "User that published the campaign"
        },
        "emailCategoryId": {
          "type": "string",
          "title": "email_category_id is the category identifier of the campaign"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The date that the campaign was published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "Time the campaign was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time the campaign was updated"
        }
      }
    },
    "v1GoogleAnalyticsOptions": {
      "type": "object",
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "campaignSource": {
          "type": "string"
        }
      }
    },
    "v1ImageAlign": {
      "type": "string",
      "enum": [
        "IMAGE_ALIGN_UNSPECIFIED",
        "IMAGE_ALIGN_LEFT",
        "IMAGE_ALIGN_CENTER",
        "IMAGE_ALIGN_RIGHT"
      ],
      "default": "IMAGE_ALIGN_UNSPECIFIED"
    },
    "v1IsFeatureActiveForSenderRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The campaign sender to check for"
        },
        "featureId": {
          "$ref": "#/definitions/v1Feature",
          "title": "The activation featureId to check if a feature is active for the sender"
        }
      }
    },
    "v1IsFeatureActiveForSenderResponse": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "title": "Whether the feature is active for the sender"
        }
      }
    },
    "v1IsProductActiveForSenderRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The campaign sender to activate for"
        },
        "sku": {
          "type": "string",
          "title": "The activation sku to check if a product is active for"
        }
      }
    },
    "v1IsProductActiveForSenderResponse": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "title": "Whether the product is active for the sender"
        }
      }
    },
    "v1LegacyAddAccountGroupToCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1LegacyGetRecipientCampaignsByAgidRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1LegacyGetRecipientCampaignsByAgidResponse": {
      "type": "object",
      "properties": {
        "recipientCampaignPairs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientCampaignPair"
          }
        }
      }
    },
    "v1LegacyPauseAccountGroupOnCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1LegacyRateLimitedAddToCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time"
        },
        "fromEmail": {
          "type": "string"
        },
        "fromName": {
          "type": "string"
        },
        "fromId": {
          "type": "string"
        }
      }
    },
    "v1LegacyRateLimitedAddToCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string"
        }
      }
    },
    "v1LegacyUpdateRecipientCampaignStatusRequest": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1RecipientCampaignStatus"
        }
      }
    },
    "v1LinkStats": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The normalized url"
        },
        "totalClicks": {
          "type": "string",
          "format": "int64",
          "title": "Total number of times this link has been clicked"
        },
        "uniqueClicks": {
          "type": "string",
          "format": "int64",
          "title": "Number of unique clicks on this link"
        },
        "clickRate": {
          "type": "number",
          "format": "double",
          "title": "Rate of clicks per delivered email"
        }
      }
    },
    "v1LinkTrackingData": {
      "type": "object",
      "properties": {
        "normalizedUrl": {
          "type": "string",
          "title": "Normalized (i.e. unhydrated) version of the link to track"
        },
        "hydratedUrl": {
          "type": "string",
          "title": "Hydrated version of the link to track"
        }
      }
    },
    "v1ListCampaignStatsForSenderRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID and type of sender"
        },
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market to filter on"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Statuses"
          },
          "title": "The selected statuses to filter on"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CampaignState"
          },
          "title": "The selected states to filter on"
        },
        "searchTerm": {
          "type": "string",
          "title": "The search term entered to filter campaign names"
        },
        "pagingOptions": {
          "$ref": "#/definitions/campaignsv1PagedRequestOptions",
          "title": "Paging information"
        },
        "deletedTagsPolicy": {
          "$ref": "#/definitions/v1DeletedTagsPolicy",
          "title": "How we should handle campaigns when their associated tags are missing or deleted"
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to filter campaigns by"
        },
        "sortOptions": {
          "$ref": "#/definitions/v1SortOptions",
          "title": "sorting options for campaigns"
        }
      }
    },
    "v1ListCampaignStatsForSenderResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCampaignStatsStruct"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListCampaignStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner"
        },
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market to filter on"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Statuses"
          },
          "title": "The selected statuses to filter on"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CampaignState"
          },
          "title": "The selected states to filter on"
        },
        "searchTerm": {
          "type": "string",
          "title": "The search term entered to filter campaign names"
        },
        "pagingOptions": {
          "$ref": "#/definitions/campaignsv1PagedRequestOptions",
          "title": "Paging information"
        },
        "deletedTagsPolicy": {
          "$ref": "#/definitions/v1DeletedTagsPolicy",
          "title": "How we should handle campaigns when their associated tags are missing or deleted"
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to filter campaigns by"
        }
      }
    },
    "v1ListCampaignStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCampaignStatsStruct"
          },
          "title": "Repeated values defining the list's response"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      }
    },
    "v1ListCampaignStatsStruct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        },
        "totalAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Sum of all unique accounts for on a campaign"
        },
        "activeAccounts": {
          "type": "string",
          "format": "int64",
          "title": "Number of active accounts on a campaign"
        },
        "emailsDelivered": {
          "type": "string",
          "format": "int64",
          "title": "How many emails have been delivered on the campaign"
        },
        "clickThroughRate": {
          "type": "number",
          "format": "double",
          "title": "Click through rate of a campaign"
        },
        "openRate": {
          "type": "number",
          "format": "double",
          "title": "Open rate of a campaign"
        },
        "status": {
          "$ref": "#/definitions/campaignsv1Statuses",
          "title": "The status of the campaign"
        },
        "state": {
          "$ref": "#/definitions/v1CampaignState",
          "title": "The state the campaign is in"
        },
        "automations": {
          "type": "boolean",
          "title": "If the campaign has automations on it or not"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "eventsCount": {
          "type": "string",
          "format": "int64",
          "title": "How many events have/will occur on a campaign"
        },
        "isEditable": {
          "type": "boolean",
          "title": "If a campaign is editable or not"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCampaignTagDetails"
          },
          "title": "Any non-deleted tags on the"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "Time the campaign was updated"
        }
      }
    },
    "v1ListCampaignTagDetails": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "v1ListCampaignsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner"
        },
        "focuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Focuses"
          },
          "title": "The intents/goals of the campaigns"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Statuses"
          },
          "title": "The statuses of the campaigns"
        },
        "pagingOptions": {
          "$ref": "#/definitions/campaignsv1PagedRequestOptions",
          "title": "Paging information"
        },
        "name": {
          "type": "string",
          "title": "Name of the campaigns to search/filter by"
        }
      },
      "title": "Request to get a list of campaigns"
    },
    "v1ListCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetterCampaignData"
          },
          "title": "List of campaign data"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      },
      "title": "Response from getting a list of campaigns"
    },
    "v1ListCampaignsV2Request": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID of the sender"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Statuses"
          },
          "title": "The statuses of the campaigns"
        },
        "pagingOptions": {
          "$ref": "#/definitions/campaignsv1PagedRequestOptions",
          "title": "Paging information"
        },
        "searchTerm": {
          "type": "string",
          "description": "term to search with."
        },
        "sortOptions": {
          "$ref": "#/definitions/v1SortOptions",
          "title": "sort to use"
        }
      }
    },
    "v1ListCampaignsV2Response": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetterCampaignData"
          },
          "title": "list of campaigns for a sender"
        },
        "metadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging meta data"
        }
      }
    },
    "v1ListLinksInTemplateRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "ID of the template to list links for"
        }
      }
    },
    "v1ListLinksInTemplateResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of clickable links found in template"
        }
      }
    },
    "v1ListRecipientCampaignsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "Unique ID associated to the account group of the recipient"
        }
      }
    },
    "v1ListRecipientCampaignsResponse": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientCampaignStruct"
          }
        }
      }
    },
    "v1ListRecipientsRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email of the recipient"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Phone number of the recipient"
        },
        "pagingOptions": {
          "$ref": "#/definitions/campaignsv1PagedRequestOptions",
          "title": "Paging information"
        }
      }
    },
    "v1ListRecipientsResponse": {
      "type": "object",
      "properties": {
        "recipients": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientV2"
          },
          "title": "List of recipients found"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      }
    },
    "v1ListRecommendedCampaignsRequest": {
      "type": "object",
      "properties": {
        "focuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Focuses"
          },
          "title": "The intents/goals of the campaigns"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaignsv1Statuses"
          },
          "title": "The statuses of the campaigns"
        },
        "pagingOptions": {
          "$ref": "#/definitions/campaignsv1PagedRequestOptions",
          "title": "Paging information"
        }
      },
      "title": "Request to get a list of  recommended campaigns"
    },
    "v1ListTagsForCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListTagsForCampaignResponse": {
      "type": "object",
      "properties": {
        "campaignTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignTag"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1ListTagsForSenderRequest": {
      "type": "object",
      "properties": {
        "senderType": {
          "$ref": "#/definitions/v1SenderType"
        },
        "senderId": {
          "type": "string"
        },
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListTagsForSenderResponse": {
      "type": "object",
      "properties": {
        "campaignTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignTag"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1LookupRecipientCampaignRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender"
        },
        "recipient": {
          "$ref": "#/definitions/v1RecipientV2"
        },
        "campaignId": {
          "type": "string"
        }
      }
    },
    "v1LookupRecipientCampaignResponse": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "$ref": "#/definitions/v1RecipientCampaignStruct"
        }
      }
    },
    "v1LookupRecipientCampaignsRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientV2"
          }
        },
        "campaignId": {
          "type": "string"
        }
      }
    },
    "v1LookupRecipientCampaignsResponse": {
      "type": "object",
      "properties": {
        "recipientCampaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecipientCampaignStruct"
          }
        }
      }
    },
    "v1PageSetup": {
      "type": "object",
      "properties": {
        "outerWidth": {
          "type": "string",
          "format": "int64"
        },
        "innerWidth": {
          "type": "string",
          "format": "int64"
        },
        "topPadding": {
          "type": "string",
          "format": "int64"
        },
        "bottomContentPadding": {
          "type": "string",
          "format": "int64"
        },
        "innerHorizontalPadding": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total amount of results"
        }
      },
      "title": "Cursor and has more flag for paging response"
    },
    "v1PauseCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to pause"
        }
      }
    },
    "v1PauseRecipientCampaignRequest": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        }
      }
    },
    "v1Period": {
      "type": "string",
      "enum": [
        "PERIOD_INVALID",
        "PERIOD_MONTH"
      ],
      "default": "PERIOD_INVALID"
    },
    "v1Phone": {
      "type": "object",
      "properties": {
        "isoCountryCode": {
          "type": "string",
          "title": "ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada"
        },
        "nationalNumber": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        }
      },
      "title": "This follows the E164 international standard specification for phone numbers"
    },
    "v1PreviewEmailTemplateRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The account group ID to be used as preview context"
        },
        "partnerId": {
          "type": "string",
          "title": "DEPRECATED: Use sender instead"
        },
        "marketId": {
          "type": "string",
          "title": "DEPRECATED: Use sender instead"
        },
        "locale": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "title": "The user ID to be used as preview context"
        },
        "contactId": {
          "type": "string",
          "title": "The contact ID to be used as preview context"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The sender to be used as preview context"
        }
      }
    },
    "v1PreviewEmailTemplateResponse": {
      "type": "object",
      "properties": {
        "templateHtml": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1RecipientCampaignPair": {
      "type": "object",
      "properties": {
        "recipientCampaign": {
          "$ref": "#/definitions/v1RecipientCampaignStruct"
        },
        "recipient": {
          "$ref": "#/definitions/v1CampaignRecipient"
        }
      }
    },
    "v1RecipientCampaignStatus": {
      "type": "string",
      "enum": [
        "RECIPIENT_CAMPAIGN_STATUS_UNSPECIFIED",
        "RECIPIENT_CAMPAIGN_STATUS_ACTIVE",
        "RECIPIENT_CAMPAIGN_STATUS_PAUSED",
        "RECIPIENT_CAMPAIGN_STATUS_COMPLETED"
      ],
      "default": "RECIPIENT_CAMPAIGN_STATUS_UNSPECIFIED",
      "title": "Enumeration of possible campaign states"
    },
    "v1RecipientCampaignStepEventStruct": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version number of the recipient campaign step"
        },
        "eventId": {
          "type": "string",
          "title": "Unique identifier of the event"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique identifier of the partner that this campaign step event belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "Unique identifier of the market that this campaign step event belongs to"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Unique identifier of the account group that this campaign step event belongs to"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "campaignStepId": {
          "type": "string",
          "title": "Unique identifier of the campaign step"
        },
        "recipientId": {
          "type": "string",
          "title": "Unique identifier created for the recipient"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign"
        },
        "recipientCampaignStepId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign step"
        },
        "eventType": {
          "$ref": "#/definitions/v1CampaignStepEventType",
          "title": "The event type of the step"
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date for the event"
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template for the step"
        },
        "probablyBot": {
          "type": "boolean",
          "title": "Bot or not"
        },
        "url": {
          "type": "string",
          "title": "The url for a click event"
        },
        "normalizedUrl": {
          "type": "string",
          "title": "The normalized url for a click event"
        }
      }
    },
    "v1RecipientCampaignStruct": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the recipient campaign"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        },
        "recipientId": {
          "type": "string",
          "title": "Unique identifier of the recipient"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID that this recipient campaign belongs to"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account group that this recipient campaign belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market for the recipient campaign"
        },
        "fromId": {
          "type": "string",
          "title": "Unique ID of the user that initiated the recipient campaign"
        },
        "fromEmail": {
          "type": "string",
          "title": "Email of the user that initiated the recipient campaign"
        },
        "fromName": {
          "type": "string",
          "title": "Name of the user that initiated the recipient campaign"
        },
        "isActive": {
          "type": "boolean",
          "title": "Whether the recipient campaign is active or not"
        },
        "isCompleted": {
          "type": "boolean",
          "title": "Whether the recipient campaign is completed or not"
        },
        "status": {
          "$ref": "#/definitions/v1CampaignScheduleStatus",
          "title": "Status of the recipient campaign"
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScheduledCampaignStepInterface"
          },
          "title": "Scheduled campaign steps"
        },
        "scheduleStep": {
          "type": "string",
          "format": "int64",
          "title": "Current step in the schedule that the campaign is on"
        },
        "errorMessage": {
          "type": "string",
          "title": "Error message"
        },
        "pausedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Date/time when the recipient campaign was paused"
        }
      }
    },
    "v1RecipientClickStats": {
      "type": "object",
      "properties": {
        "recipient": {
          "$ref": "#/definitions/RecipientClickStatsRecipient",
          "title": "The recipient of the campaign"
        },
        "account": {
          "$ref": "#/definitions/RecipientClickStatsAccount",
          "title": "The account the campaign was sent to"
        },
        "recentDate": {
          "type": "string",
          "format": "date-time",
          "title": "The recent click date"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The number  of clicks"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID"
        }
      }
    },
    "v1RecipientCriteria": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "filterGroupV2": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1RecipientType": {
      "type": "string",
      "enum": [
        "RECIPIENT_TYPE_INVALID",
        "RECIPIENT_TYPE_CRM_CONTACT",
        "RECIPIENT_TYPE_BUSINESS"
      ],
      "default": "RECIPIENT_TYPE_INVALID"
    },
    "v1RecipientV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "E.g. Partner ID, Account Group ID, Etc.\nDEPRECATED: Use external_id instead"
        },
        "type": {
          "$ref": "#/definitions/v1RecipientType",
          "description": "E.g. Partner, Business, Etc."
        },
        "contact": {
          "$ref": "#/definitions/v1Contact",
          "title": "contact info for the recipient\nDEPRECATED: Use phone_number and email_address instead"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The phone number of the recipient"
        },
        "emailAddress": {
          "type": "string",
          "title": "The email address of the recipient"
        },
        "recipientId": {
          "type": "string",
          "title": "The unique ID of the recipient"
        },
        "externalId": {
          "type": "string",
          "title": "The Id that identifies the recipient outside the campaigns service"
        }
      }
    },
    "v1RemoveTagFromCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        }
      }
    },
    "v1RenderRequest": {
      "type": "object",
      "properties": {
        "emailBuilderTemplate": {
          "$ref": "#/definitions/v1EmailBuilderTemplate"
        }
      }
    },
    "v1RenderResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "v1ResumeRecipientCampaignRequest": {
      "type": "object",
      "properties": {
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        }
      }
    },
    "v1ScheduledCampaignStepInterface": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign step"
        },
        "campaignStepId": {
          "type": "string",
          "title": "Unique identifier of the campaign step"
        },
        "templateId": {
          "type": "string",
          "title": "Unique identifier of the template for the step"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier for the recipient campaign"
        },
        "stepId": {
          "type": "string",
          "title": "Unique identifier of the scheduled step"
        },
        "campaignStepType": {
          "$ref": "#/definitions/v1CampaignStepType",
          "title": "Whether the step is an email or a snapshot creation event"
        },
        "name": {
          "type": "string",
          "title": "Name of the scheduled campaign step"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date the campaign step is scheduled"
        },
        "dateSent": {
          "type": "string",
          "format": "date-time",
          "title": "The date the campaign step is sent"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64",
          "title": "Delay between this step and the previous one"
        },
        "sendStatus": {
          "$ref": "#/definitions/v1CampaignStepSendStatusType",
          "title": "Send status of the step"
        },
        "completed": {
          "type": "boolean",
          "title": "Whether the scheduled campaign step has been completed"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepEvent"
          },
          "title": "The events that have occurred for the scheduled campaign step"
        }
      }
    },
    "v1SendCampaignStepTestEmailRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The sender of the email"
        },
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to send the test email for"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID of the campaign step to send the test email for"
        },
        "sendToUserId": {
          "type": "string",
          "title": "The ID of the user to send the test email to (this may be different from\nthe \"recipient\" that is provided in the step data)"
        },
        "stepData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The data required for hydrating the template's HTML"
        }
      }
    },
    "v1SendCampaignStepTestEmailResponse": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "title": "The ID of the email that was sent"
        }
      }
    },
    "v1SendPreviewEmailRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender"
        },
        "htmlContent": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "recipientUserId": {
          "type": "string"
        }
      }
    },
    "v1SendRecipientCampaignStepEmailRequest": {
      "type": "object",
      "properties": {
        "ignoreCampaignState": {
          "type": "boolean",
          "description": "Usable by developers only. It bypasses any state checks and just sends the email."
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "description": "Sender is the entity who owns the campaign. E.g. partner, business, vendor."
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Identifies the recipient campaign that owns the step"
        },
        "recipientCampaignStepId": {
          "type": "string",
          "title": "Identified the step whose email will be sent via this RPC"
        }
      }
    },
    "v1Sender": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1SenderType",
          "description": "E.g. Partner, Business, Etc."
        },
        "id": {
          "type": "string",
          "description": "E.g. Partner ID, Account Group ID, Etc."
        }
      }
    },
    "v1SenderOptions": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The custom user name for the email address. ie; `hello` in `Jane Miles \u003chello@world.com\u003e`"
        },
        "name": {
          "type": "string",
          "title": "The display name. ie; `Jane Miles` in `Jane Miles \u003chello@world.com\u003e`"
        },
        "replyTo": {
          "type": "string",
          "title": "The reply to address"
        },
        "salespersonId": {
          "type": "string",
          "title": "the salesperson's id (company's or contact's)"
        },
        "sendFromAssignedSalesperson": {
          "type": "boolean",
          "title": "To check whether to send from the assigned salesperson's email"
        }
      }
    },
    "v1SenderType": {
      "type": "string",
      "enum": [
        "SENDER_TYPE_INVALID",
        "SENDER_TYPE_PARTNER",
        "SENDER_TYPE_BUSINESS"
      ],
      "default": "SENDER_TYPE_INVALID"
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_ORDER_INVALID",
        "SORT_ORDER_ASCENDING",
        "SORT_ORDER_DESCENDING"
      ],
      "default": "SORT_ORDER_INVALID"
    },
    "v1SortField": {
      "type": "string",
      "enum": [
        "SORT_FIELDS_INVALID",
        "SORT_FIELDS_NAME",
        "SORT_FIELDS_CREATED_AT",
        "SORT_FIELDS_UPDATED_AT"
      ],
      "default": "SORT_FIELDS_INVALID"
    },
    "v1SortOptions": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1SortField",
          "title": "The field to sort on"
        },
        "direction": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "The direction to sort: ie; ascending or descending"
        }
      }
    },
    "v1StepDataResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "The ID of the template on the returned step"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID of the returned step"
        }
      }
    },
    "v1TemplateReference": {
      "type": "object",
      "properties": {
        "appNamespace": {
          "type": "string",
          "title": "The namespace of the parent template"
        },
        "templateId": {
          "type": "string",
          "title": "The template_id of the parent template"
        }
      }
    },
    "v1TemplateStatus": {
      "type": "string",
      "enum": [
        "TEMPLATE_STATUS_INVALID",
        "TEMPLATE_STATUS_DRAFT",
        "TEMPLATE_STATUS_PUBLISHED"
      ],
      "default": "TEMPLATE_STATUS_INVALID"
    },
    "v1TopLogo": {
      "type": "object",
      "properties": {
        "showLogo": {
          "type": "boolean"
        },
        "customImageUrl": {
          "type": "string"
        },
        "width": {
          "type": "string",
          "format": "int64"
        },
        "align": {
          "$ref": "#/definitions/v1ImageAlign"
        },
        "topPadding": {
          "type": "string",
          "format": "int64"
        },
        "bottomPadding": {
          "type": "string",
          "format": "int64"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "v1UnpauseCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to unpause"
        }
      }
    },
    "v1UpdateCampaignNameRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The corresponding campaign ID associated with the campaign"
        },
        "locale": {
          "type": "string",
          "title": "The localization code for the campaign"
        }
      },
      "title": "Request to update the name of a campaign"
    },
    "v1UpdateConfigRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "Unique ID associated to the campaign"
        },
        "timeZoneForEmailsSent": {
          "type": "string"
        },
        "daysEmailsCanBeSent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DaysOfTheWeek"
          },
          "title": "DEPRECATED: Use string array instead"
        },
        "recipientsAddedRateLimitEnabled": {
          "type": "boolean",
          "title": "Whether or not a buffer is enabled to limit the amount emails sent per sales person per day"
        },
        "recipientsAddedRateLimit": {
          "type": "string",
          "format": "int64",
          "title": "The size of the buffer for limiting the amount of emails sent"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "sender making the request"
        },
        "emailSchedulingDay": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The days that the email can be sent on"
        }
      }
    },
    "v1UpdateConfigResponse": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "title": "the timezone associated with the campaign"
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Days that the emails are able to be sent out"
        },
        "rateLimited": {
          "type": "boolean",
          "title": "Whether or not a buffer is enabled to limit the amount emails sent per sales person per day"
        },
        "rateLimit": {
          "type": "string",
          "format": "int64",
          "title": "The size of the buffer for limiting the amount of emails sent"
        }
      }
    },
    "v1UpdateEmailTemplateRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "Unique identifier of the template"
        },
        "name": {
          "type": "string",
          "title": "Name of the template"
        },
        "subject": {
          "type": "string",
          "title": "The subject of the template"
        },
        "htmlBody": {
          "type": "string",
          "title": "The html body of the template"
        },
        "fullHtml": {
          "type": "string",
          "title": "The full html body of the template"
        },
        "updatedByUserEmail": {
          "type": "string",
          "title": "User that last updated the template"
        }
      }
    },
    "v1UpdateQuotaLimitRequest": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID and type of the sender"
        },
        "type": {
          "$ref": "#/definitions/v1CampaignQuotaCategory",
          "title": "The type of the quota"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "The limit to set the quota to"
        }
      }
    },
    "v1UpdateRecipientRequest": {
      "type": "object",
      "properties": {
        "recipientId": {
          "type": "string",
          "title": "Unique ID associated to the recipient"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique ID associated to the partner"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Unique ID associated to the account group of the recipient"
        },
        "email": {
          "type": "string",
          "title": "The email address of the recipient"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The sender"
        },
        "recipient": {
          "$ref": "#/definitions/v1RecipientV2",
          "title": "The recipient"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The phone number of the recipient"
        }
      }
    },
    "v1UpdateRequest": {
      "type": "object",
      "properties": {
        "emailBuilderTemplate": {
          "$ref": "#/definitions/v1EmailBuilderTemplate"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "paths to the properties to update - if not specified all will update"
        }
      }
    },
    "v1UpdateStepOnCampaignRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The ID of the campaign to update the step on"
        },
        "campaignStepId": {
          "type": "string",
          "title": "The ID of the campaign step to update"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "Owner identifier for step"
        },
        "contentId": {
          "type": "string",
          "title": "the ID of the content (email template ID, automation workflow ID, etc)"
        },
        "name": {
          "type": "string",
          "title": "name of step"
        },
        "secondsAfterLastStep": {
          "type": "string",
          "format": "int64",
          "title": "seconds after the previous step in the campaign"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask to only update the needed fields"
        }
      }
    },
    "v1UpdateTemplateRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The unique id for the campaign this template is on"
        },
        "templateId": {
          "type": "string",
          "title": "The unique id for a template"
        },
        "name": {
          "type": "string",
          "title": "The name of this template"
        },
        "content": {
          "type": "string",
          "title": "The content for this template"
        }
      }
    },
    "v1UpsertCampaignRequest": {
      "type": "object",
      "properties": {
        "focus": {
          "$ref": "#/definitions/campaignsv1Focuses",
          "title": "The intent/goal of the campaign"
        },
        "name": {
          "type": "string",
          "title": "The name of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner\nDEPRECATED: Use sender instead"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "marketId": {
          "type": "string",
          "title": "ID for market that the stats pertain to\nDEPRECATED: Use sender instead"
        },
        "parentCampaignId": {
          "type": "string",
          "description": "If duplicated, the campaign id of the campaign which this campaign was directly duplicated from."
        },
        "rootCampaignId": {
          "type": "string",
          "description": "If duplicated, the campaign id of the campaign which this campaign was ultimately duplicated from."
        },
        "createdUser": {
          "type": "string",
          "title": "User that created the campaign"
        },
        "updatedUser": {
          "type": "string",
          "title": "User that last updated the campaign"
        },
        "publishedUser": {
          "type": "string",
          "title": "User that published the campaign"
        },
        "locale": {
          "type": "string",
          "title": "The localization code for the campaign"
        },
        "status": {
          "$ref": "#/definitions/campaignsv1Statuses",
          "title": "Status of the campaign"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CampaignStepInterface"
          },
          "title": "Details of the steps in the campaign"
        },
        "isEnabled": {
          "type": "boolean",
          "title": "Whether the campaign is active or not"
        },
        "hiddenForPartners": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Which partners this campaign is hidden for"
        },
        "campaignScheduleVersion": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign schedule"
        },
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the campaign"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The date that the campaign was published"
        },
        "emailCategoryId": {
          "type": "string",
          "title": "email_category_id is the category identifier of the campaign"
        },
        "isPremade": {
          "type": "boolean",
          "title": "If a campaign is premade/recommended or not"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask to only update the needed fields"
        },
        "sender": {
          "$ref": "#/definitions/v1Sender",
          "title": "The ID and type of the sender"
        }
      },
      "title": "Request to upsert a new or existing campaign"
    },
    "v1UpsertConfigRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "Unique ID associated to the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "Unique ID associated to the partner"
        },
        "timeZoneForEmailsSent": {
          "type": "string",
          "title": "The timezone for the emails being sent"
        },
        "daysEmailsCanBeSent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DaysOfTheWeek"
          },
          "title": "The days that the email can be sent on"
        },
        "recipientsAddedRateLimitEnabled": {
          "type": "boolean",
          "title": "Whether or not a buffer is enabled to limit the amount emails sent per sales person per day"
        },
        "recipientsAddedRateLimit": {
          "type": "string",
          "format": "int64",
          "title": "The size of the buffer for limiting the amount of emails sent"
        }
      },
      "title": "Request for creating or updating a config"
    },
    "v1UpsertRecipientCampaignActivatedEventRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "The version of the recipient campaign activated event"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "/ The unique identifier of the recipient campaign activated event"
        },
        "campaignId": {
          "type": "string",
          "title": "The unique identifier of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "The unique identifier of the partner"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The unique identifier of the account group"
        },
        "fromId": {
          "type": "string",
          "title": "The unique identifier of the person responsible for this activated event"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask to only update the needed fields"
        }
      }
    },
    "v1UpsertRecipientCampaignRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64",
          "title": "Version of the recipient campaign"
        },
        "recipientCampaignId": {
          "type": "string",
          "title": "Unique identifier of the recipient campaign"
        },
        "recipientId": {
          "type": "string",
          "title": "Unique identifier of the recipient"
        },
        "campaignId": {
          "type": "string",
          "title": "Unique identifier of the campaign"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner ID that this recipient campaign belongs to"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account group that this recipient campaign belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "ID of the market for the recipient campaign"
        },
        "fromId": {
          "type": "string",
          "title": "Unique ID of the user that initiated the recipient campaign"
        },
        "fromEmail": {
          "type": "string",
          "title": "Email of the user that initiated the recipient campaign"
        },
        "fromName": {
          "type": "string",
          "title": "Name of the user that initiated the recipient campaign"
        },
        "isActive": {
          "type": "boolean",
          "title": "Whether the recipient campaign is active or not"
        },
        "isCompleted": {
          "type": "boolean",
          "title": "Whether the recipient campaign is completed or not"
        },
        "status": {
          "$ref": "#/definitions/v1CampaignScheduleStatus",
          "title": "Status of the recipient campaign"
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScheduledCampaignStepInterface"
          },
          "title": "Scheduled campaign steps"
        },
        "scheduleStep": {
          "type": "string",
          "format": "int64",
          "title": "Current step in the schedule that the campaign is on"
        },
        "errorMessage": {
          "type": "string",
          "title": "Error message"
        },
        "pausedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Date/time when the recipient campaign was paused"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask to only update the needed fields"
        },
        "replyTo": {
          "type": "string",
          "title": "Email replies should be sent to"
        },
        "sendNow": {
          "type": "boolean",
          "title": "If campaign config should be ignored in favour of sending now"
        }
      }
    },
    "v1UpsertRecipientCampaignStepEventRequest": {
      "type": "object",
      "properties": {
        "stepEvent": {
          "$ref": "#/definitions/v1RecipientCampaignStepEventStruct",
          "title": "The event to either update or create"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask to only update the needed fields"
        }
      }
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
