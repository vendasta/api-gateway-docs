{
  "swagger": "2.0",
  "info": {
    "title": "content_bank/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ContentBank"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/content_bank.v1.ContentBank/CreateOrUpdateAutopostListConfig": {
      "post": {
        "summary": "CreateOrUpdateAutopostListConfig creates or updates a config for list settings",
        "operationId": "ContentBank_CreateOrUpdateAutopostListConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOrUpdateAutopostListConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrUpdateAutopostListConfigRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/CreateRssFeed": {
      "post": {
        "summary": "Creates an RSS Feed from URL. Initiates a scrape for RssFeedItems.",
        "operationId": "ContentBank_CreateRssFeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateRssFeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Create an rss feed from url. Parse RssFeedItems.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRssFeedRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/CreateUserContent": {
      "post": {
        "summary": "CreateUserContent creates a new piece of UserContent",
        "operationId": "ContentBank_CreateUserContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserContentRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/DeleteRssFeed": {
      "post": {
        "summary": "Deletes RSS feed and all content in the bank from that feed",
        "operationId": "ContentBank_DeleteRssFeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRssFeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteRssFeedRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/DeleteRssFeedItem": {
      "post": {
        "summary": "DeleteRssFeedItem sets the deleted value of rss feed item to true",
        "operationId": "ContentBank_DeleteRssFeedItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteRssFeedItemRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/DeleteScheduledPosts": {
      "post": {
        "summary": "DeleteScheduledPosts delete auto scheduled post",
        "operationId": "ContentBank_DeleteScheduledPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteScheduledPostsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/DeleteUserContent": {
      "post": {
        "summary": "DeleteUserContent sets the deleted value of user content item to true",
        "operationId": "ContentBank_DeleteUserContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteUserContentRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/GetAutopostListConfig": {
      "post": {
        "summary": "GetAutopostListConfig gets an existing Autopost list config",
        "operationId": "ContentBank_GetAutopostListConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAutopostListConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAutopostListConfigRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/GetDailyStats": {
      "post": {
        "summary": "GetDailyStats fetches number of scraped rss items and number of posted items for a partner",
        "operationId": "ContentBank_GetDailyStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDailyStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDailyStatsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/GetMultiAutopostListConfigs": {
      "post": {
        "summary": "GetMultiAutopostListConfigs gets multiple existing Autopost list configs",
        "operationId": "ContentBank_GetMultiAutopostListConfigs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiAutopostListConfigsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiAutopostListConfigsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/GetPartnerConfig": {
      "post": {
        "summary": "GetPartnerConfig tries to get a config for a partner and creates one if it fails to find",
        "operationId": "ContentBank_GetPartnerConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPartnerConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetPartnerConfigRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/ListRandomRssFeedItems": {
      "post": {
        "summary": "List random rss feed items.",
        "operationId": "ContentBank_ListRandomRssFeedItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRssFeedItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRandomRssFeedItemsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/ListRandomUserContent": {
      "post": {
        "summary": "ListRandomUserContent returns a list of randomly sorted user content",
        "operationId": "ContentBank_ListRandomUserContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRandomUserContentRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/ListRssFeedItems": {
      "post": {
        "summary": "List queue for partner.",
        "operationId": "ContentBank_ListRssFeedItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRssFeedItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRssFeedItemsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/ListRssFeeds": {
      "post": {
        "summary": "ListRssFeeds returns the list of RSS feeds a partner has added to the content bank",
        "operationId": "ContentBank_ListRssFeeds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRssFeedsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRssFeedsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/ListScheduledUserContent": {
      "post": {
        "summary": "ListScheduledUserContent returns the list of user content a partner has scheduled to the auto post",
        "operationId": "ContentBank_ListScheduledUserContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListScheduledUserContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListScheduledUserContentRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/ListUserContent": {
      "post": {
        "summary": "ListUserContent returns the list of user content a partner has added to the content bank",
        "operationId": "ContentBank_ListUserContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUserContentRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/RefreshRssFeed": {
      "post": {
        "summary": "Refreshes an RSS Feed. Initiates a scrape for RssFeedItems.",
        "operationId": "ContentBank_RefreshRssFeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshRssFeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshRssFeedRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/SchedulePosts": {
      "post": {
        "summary": "Kicks off scheduling of posts.",
        "operationId": "ContentBank_SchedulePosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SchedulePostsRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/UpdatePartnerConfig": {
      "post": {
        "summary": "UpdatePartnerConfig modified a configuration for a partner",
        "operationId": "ContentBank_UpdatePartnerConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePartnerConfigRequest"
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    },
    "/content_bank.v1.ContentBank/UpdateRssFeeds": {
      "post": {
        "summary": "Scrapes all RSS Feeds in the content bank for new content",
        "operationId": "ContentBank_UpdateRssFeeds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "ContentBank"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AutopostListConfig": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "listId": {
          "type": "string",
          "title": "The unique list id"
        },
        "daysToPost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DayOfWeek"
          },
          "title": "A list of the days of the week when posts should go out"
        }
      },
      "title": "AutopostListConfig stores the settings per autopost list"
    },
    "v1Configuration": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "disabledBusinessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "a list of business IDs to be disabled"
        },
        "disabledDates": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          },
          "title": "A list of dates when post scheduling should be disabled"
        }
      },
      "title": "Configuration stores autoposting settings for a specific partner"
    },
    "v1CreateOrUpdateAutopostListConfigRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "listId": {
          "type": "string",
          "title": "The unique list id"
        },
        "daysToPost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DayOfWeek"
          },
          "title": "The days of the week to be post on"
        }
      },
      "title": "Create or update an Autopost list config"
    },
    "v1CreateOrUpdateAutopostListConfigResponse": {
      "type": "object",
      "properties": {
        "listConfig": {
          "$ref": "#/definitions/v1AutopostListConfig",
          "title": "The newly created or updated autopost list config"
        }
      },
      "title": "Return the newly created or updated list config"
    },
    "v1CreateRssFeedRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the RSS feed"
        },
        "feedName": {
          "type": "string",
          "title": "(Optional) name attached to the feed"
        }
      },
      "description": "Create an rss feed from url. Parse RssFeedItems."
    },
    "v1CreateRssFeedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1RssFeedMetadata",
          "title": "Metadata for parsed feed items"
        },
        "feedName": {
          "type": "string",
          "title": "Created rss feed"
        }
      },
      "title": "Response returning length of items, successes, failures, error"
    },
    "v1CreateUserContentRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner id"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "postText": {
          "type": "string",
          "title": "The post text of the content"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image url of the content"
        },
        "linkUrl": {
          "type": "string",
          "title": "The link url of the content"
        }
      },
      "title": "Create a UserContent object"
    },
    "v1DayOfWeek": {
      "type": "string",
      "enum": [
        "DAY_OF_WEEK_SUNDAY",
        "DAY_OF_WEEK_MONDAY",
        "DAY_OF_WEEK_TUESDAY",
        "DAY_OF_WEEK_WEDNESDAY",
        "DAY_OF_WEEK_THURSDAY",
        "DAY_OF_WEEK_FRIDAY",
        "DAY_OF_WEEK_SATURDAY"
      ],
      "default": "DAY_OF_WEEK_SUNDAY",
      "title": "DayOfWeek is an enum representation for each day"
    },
    "v1DeleteRssFeedItemRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the RSS feed"
        },
        "permalink": {
          "type": "string",
          "title": "Permalink of the feed item"
        }
      },
      "title": "Delete a rss feed item"
    },
    "v1DeleteRssFeedRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the RSS feed"
        }
      },
      "title": "Delete an RSS feed and all its items from the content bank"
    },
    "v1DeleteRssFeedResponse": {
      "type": "object",
      "properties": {
        "feedDeleted": {
          "type": "boolean",
          "title": "Whether or not an RssFeed was found and deleted"
        },
        "failedFeedItemDeletions": {
          "type": "string",
          "format": "int64",
          "title": "Number of failed item deletions from the feed"
        }
      },
      "title": "Response returning deletion failure data"
    },
    "v1DeleteScheduledPostsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "userContentId": {
          "type": "string",
          "title": "The unique id for a user content"
        }
      },
      "title": "Delete Scheduled Posts"
    },
    "v1DeleteUserContentRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "userContentId": {
          "type": "string",
          "title": "The unique id for a user content"
        }
      },
      "title": "Delete a user content"
    },
    "v1GetAutopostListConfigRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "listId": {
          "type": "string",
          "title": "The unique list id"
        }
      },
      "title": "Get an existing Autopost list config"
    },
    "v1GetAutopostListConfigResponse": {
      "type": "object",
      "properties": {
        "listConfig": {
          "$ref": "#/definitions/v1AutopostListConfig",
          "title": "The existing autopost list config"
        }
      },
      "title": "Return the existing list config"
    },
    "v1GetDailyStatsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "statDate": {
          "type": "string",
          "format": "date-time",
          "title": "A date to check"
        }
      },
      "title": "Get Daily stats for a partner {"
    },
    "v1GetDailyStatsResponse": {
      "type": "object",
      "properties": {
        "newRssFeedItems": {
          "type": "string",
          "format": "int64",
          "title": "Number of scraped rss feed items"
        },
        "newPosts": {
          "type": "string",
          "format": "int64",
          "title": "Number of posts created"
        }
      },
      "title": "Return number of scraped rss feed items and number of posts created for a partner"
    },
    "v1GetMultiAutopostListConfigsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "listIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The unique list ids"
        }
      },
      "title": "Get multiple existing Autopost list configs"
    },
    "v1GetMultiAutopostListConfigsResponse": {
      "type": "object",
      "properties": {
        "listConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutopostListConfig"
          },
          "title": "The existing autopost list configs"
        }
      },
      "title": "Return the existing list of listConfigs"
    },
    "v1GetPartnerConfigRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique market id within the partner"
        }
      },
      "title": "Request for a partner configuration"
    },
    "v1GetPartnerConfigResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1Configuration",
          "title": "The configuration for the requested partner"
        }
      },
      "title": "Response with configuration for the requested partner"
    },
    "v1ListRandomRssFeedItemsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique market id within the partner"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "Request for a random list of RssFeedItems"
    },
    "v1ListRandomUserContentRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique market id within the partner"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "Request of a random list of UserContent"
    },
    "v1ListRssFeedItemsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique market id within the partner"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "Request for a list of RssFeedItems"
    },
    "v1ListRssFeedItemsResponse": {
      "type": "object",
      "properties": {
        "rssFeedItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RssFeedItem"
          },
          "title": "A list of unused rss feed items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        },
        "totalFeedItems": {
          "type": "string",
          "format": "int64",
          "title": "Total count of rss feed items in the list"
        }
      },
      "title": "A page of RssFeedItems and paging metadata"
    },
    "v1ListRssFeedsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "Request to get a list of RSS feeds for a partner/market"
    },
    "v1ListRssFeedsResponse": {
      "type": "object",
      "properties": {
        "rssFeeds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RssFeed"
          },
          "title": "RSS Feeds that the partner has available to them"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "description": "List of RSS feeds and paging metadata."
    },
    "v1ListScheduledUserContentRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique market id within the partner"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      }
    },
    "v1ListScheduledUserContentResponse": {
      "type": "object",
      "properties": {
        "userContents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserContent"
          },
          "title": "A list of scheduled user content items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      }
    },
    "v1ListUserContentRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique market id within the partner"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "Request for a list of UserContents"
    },
    "v1ListUserContentResponse": {
      "type": "object",
      "properties": {
        "userContents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserContent"
          },
          "title": "A list of unused user content items"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        },
        "totalFeedItems": {
          "type": "string",
          "format": "int64",
          "title": "Total count of rss feed items in the list"
        }
      },
      "title": "A page of UserContents and paging metadata"
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "Options for how to page the response for a List request"
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Metadata related to the paged response from a List request"
    },
    "v1RefreshRssFeedRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the RSS feed"
        }
      },
      "title": "Refresh rss feed attributes and refresh rss feed items for a feed"
    },
    "v1RefreshRssFeedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1RssFeedMetadata",
          "title": "Feed info"
        }
      },
      "title": "Response returning length of items, successes, failures, error"
    },
    "v1RssFeed": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the feed"
        },
        "name": {
          "type": "string",
          "title": "Name of the RSS feed"
        },
        "updatedDatetime": {
          "type": "string",
          "format": "date-time",
          "title": "The last date that feed was updated"
        },
        "deleted": {
          "type": "boolean",
          "title": "Flag for whether or not the feed has been deleted"
        }
      },
      "title": "RssFeed is a url pointing to content"
    },
    "v1RssFeedItem": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "permalink": {
          "type": "string",
          "title": "URL of the item"
        },
        "feedUrl": {
          "type": "string",
          "title": "URL of the parent feed"
        },
        "postedDate": {
          "type": "string",
          "format": "date-time",
          "title": "Time the feed content was posted"
        },
        "author": {
          "type": "string",
          "title": "Author of the item"
        },
        "summary": {
          "type": "string",
          "title": "Summary of the item"
        },
        "title": {
          "type": "string",
          "title": "Title of the item"
        },
        "scheduledDatetime": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime a post was scheduled from this item"
        },
        "deleted": {
          "type": "boolean",
          "title": "Flag for whether or not the feed item has been deleted"
        }
      },
      "title": "An individual piece of content from an RSS feed"
    },
    "v1RssFeedMetadata": {
      "type": "object",
      "properties": {
        "feedItems": {
          "type": "string",
          "format": "int64",
          "title": "Total number of items attempted to add"
        },
        "successfullyAdded": {
          "type": "string",
          "format": "int64",
          "title": "Number of items successfully added"
        },
        "failed": {
          "type": "string",
          "format": "int64",
          "title": "Number of items failed to add"
        }
      },
      "title": "Stores data of an RSS feed"
    },
    "v1SchedulePostsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "(optional) The unique partner ID. If not provided will schedule for FREN only."
        },
        "accountGroupId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "(optional) The businesses for which to schedule posts. Required if providing partner ID."
        },
        "scheduledDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "(optional) The date time for which to schedule posts. If not provided will schedule for tomorrow."
        },
        "actionList": {
          "type": "string",
          "description": "(optional) The list to schedule a post for. If not provided will schedule for all lists matching \"Autopost.*\"."
        }
      },
      "title": "Schedule a rss feed"
    },
    "v1UpdatePartnerConfigRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "disabledBusinessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "a list of business IDs to be disabled"
        },
        "disabledDates": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          },
          "title": "A list of dates when post scheduling should be disabled"
        }
      },
      "title": "Request to update a partner's configuration"
    },
    "v1UserContent": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique partner ID"
        },
        "marketId": {
          "type": "string",
          "title": "The unique id within the partner"
        },
        "userContentId": {
          "type": "string",
          "title": "The unique id for a user content"
        },
        "postText": {
          "type": "string",
          "title": "The post text of the content"
        },
        "imageUrl": {
          "type": "string",
          "title": "The image url of the content"
        },
        "linkUrl": {
          "type": "string",
          "title": "The link url of the content"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime the content was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime the content was modified"
        },
        "scheduledOn": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime the content is scheduled on"
        },
        "deleted": {
          "type": "boolean",
          "title": "Flag for whether or not the user content has been deleted"
        }
      }
    }
  }
}
