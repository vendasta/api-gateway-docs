openapi: 3.0.0
info:
  title: conversation/v1/aisystemmessage.proto
  version: version not set
servers:
  - url: /
tags:
  - name: ConversationService
  - name: InboxService
  - name: EmailService
  - name: AISystemMessageService
paths:
  /conversation.v1.AISystemMessageService/GetAISystemMessage:
    post:
      tags:
        - AISystemMessageService
      summary: Get will retrieve an AI System Message
      operationId: AISystemMessageService_GetAISystemMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetAISystemMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAISystemMessageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.AISystemMessageService/ListAISystemMessages:
    post:
      tags:
        - AISystemMessageService
      summary: List will retrieve a list of AI System Messages
      operationId: AISystemMessageService_ListAISystemMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ListAISystemMessagesRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAISystemMessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.AISystemMessageService/UpsertAISystemMessage:
    post:
      tags:
        - AISystemMessageService
      summary: Upsert will create or update an AI System Message
      operationId: AISystemMessageService_UpsertAISystemMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpsertAISystemMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/AddConversationToConversationView:
    post:
      tags:
        - ConversationService
      summary: Add conversation to Conversation view
      operationId: ConversationService_AddConversationToConversationView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddConversationToConversationViewRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/AddMultiParticipants:
    post:
      tags:
        - ConversationService
      summary: Adds multiple participants to an existing conversation
      operationId: ConversationService_AddMultiParticipants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddMultiParticipantsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddMultiParticipantsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/CreateConversation:
    post:
      tags:
        - ConversationService
      summary: Create a conversation
      operationId: ConversationService_CreateConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateConversationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateConversationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/CreateMessageTemplate:
    post:
      tags:
        - ConversationService
      summary: Create message template
      operationId: ConversationService_CreateMessageTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateMessageTemplateRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateMessageTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/CreateMultiMessages:
    post:
      tags:
        - ConversationService
      summary: Create a list of messages
      operationId: ConversationService_CreateMultiMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateMultiMessagesRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/CreateWidget:
    post:
      tags:
        - ConversationService
      summary: |-
        Widget Configuration CRUD
        Create a new widget
      operationId: ConversationService_CreateWidget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateWidgetRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateWidgetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/CreateWidgetConversation:
    post:
      tags:
        - ConversationService
      summary: Create a new widget conversation
      operationId: ConversationService_CreateWidgetConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateWidgetConversationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateWidgetConversationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/DeleteConversation:
    post:
      tags:
        - ConversationService
      summary: Delete a conversation
      operationId: ConversationService_DeleteConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeleteConversationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/DeleteMessage:
    post:
      tags:
        - ConversationService
      summary: Delete a message of a conversation
      operationId: ConversationService_DeleteMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeleteMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/DeleteMessageTemplate:
    post:
      tags:
        - ConversationService
      summary: Delete message template
      operationId: ConversationService_DeleteMessageTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeleteMessageTemplateRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/DeleteWidget:
    post:
      tags:
        - ConversationService
      summary: Delete a widget
      operationId: ConversationService_DeleteWidget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeleteWidgetRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/EvaluateResponse:
    post:
      tags:
        - ConversationService
      summary: Create a record of the evaluation of a response in a conversation
      operationId: ConversationService_EvaluateResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EvaluateResponseRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetAvailableChannelsForConversation:
    post:
      tags:
        - ConversationService
      summary: Get the list of channels that messages can be sent on for the provided
        conversation
      operationId: ConversationService_GetAvailableChannelsForConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetAvailableChannelsForConversationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAvailableChannelsForConversationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetConversationByKey:
    post:
      tags:
        - ConversationService
      summary: Get a conversation based on the fields of conversation unique index
      operationId: ConversationService_GetConversationByKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetConversationByKeyRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetConversationByKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetConversationSummary:
    post:
      tags:
        - ConversationService
      summary: Get conversation summary
      operationId: ConversationService_GetConversationSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetConversationSummaryRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetConversationSummaryResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetConversationViews:
    post:
      tags:
        - ConversationService
      summary: Get conversation views for participant
      operationId: ConversationService_GetConversationViews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetConversationViewsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetConversationViewsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMessage:
    post:
      tags:
        - ConversationService
      summary: Get a message for a conversation
      operationId: ConversationService_GetMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMessageTemplate:
    post:
      tags:
        - ConversationService
      summary: Get message template
      operationId: ConversationService_GetMessageTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMessageTemplateRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMessageTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiConversationDetails:
    post:
      tags:
        - ConversationService
      summary: "Get the details for a conversation, including participants and latest\
        \ message, for a list of conversation ids."
      operationId: ConversationService_GetMultiConversationDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiConversationDetailsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiConversationDetailsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiConversationMessageCount:
    post:
      tags:
        - ConversationService
      summary: Get a count of the number of messages on a conversation
      operationId: ConversationService_GetMultiConversationMessageCount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiConversationMessageCountRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiConversationMessageCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiEvents:
    post:
      tags:
        - ConversationService
      operationId: ConversationService_GetMultiEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiEventsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiMessages:
    post:
      tags:
        - ConversationService
      summary: Get a list of messages by ids
      operationId: ConversationService_GetMultiMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiMessagesRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiMessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiParticipants:
    post:
      tags:
        - ConversationService
      summary: Get a list of participants by ids
      operationId: ConversationService_GetMultiParticipants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiParticipantsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiParticipantsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiWidget:
    post:
      tags:
        - ConversationService
      summary: Get widgets by id
      operationId: ConversationService_GetMultiWidget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiWidgetRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiWidgetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetMultiWidgetMessages:
    post:
      tags:
        - ConversationService
      summary: Get a list of messages by ids
      operationId: ConversationService_GetMultiWidgetMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiWidgetMessagesRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiWidgetMessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetParticipantsByKey:
    post:
      tags:
        - ConversationService
      summary: Get a list of participants by participant key
      operationId: ConversationService_GetParticipantsByKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetParticipantsByKeyRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetParticipantsByKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetWidget:
    post:
      tags:
        - ConversationService
      summary: Get widget by id
      operationId: ConversationService_GetWidget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetWidgetRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetWidgetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetWidgetConfig:
    post:
      tags:
        - ConversationService
      summary: Get widget config by id
      operationId: ConversationService_GetWidgetConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetWidgetConfigRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetWidgetConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/GetWidgetConversation:
    post:
      tags:
        - ConversationService
      summary: Get a widget conversation using the widget participant token
      operationId: ConversationService_GetWidgetConversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetWidgetConversationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/InjectMessage:
    post:
      tags:
        - ConversationService
      summary: Inject message into a conversation
      operationId: ConversationService_InjectMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InjectMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/ListMessageTemplate:
    post:
      tags:
        - ConversationService
      summary: List message templates for a subject participant
      operationId: ConversationService_ListMessageTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ListMessageTemplateRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMessageTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/ListMessages:
    post:
      tags:
        - ConversationService
      summary: List messages of a conversation
      operationId: ConversationService_ListMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ListMessagesRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/ListResponseEvaluations:
    post:
      tags:
        - ConversationService
      summary: List response evaluations
      operationId: ConversationService_ListResponseEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ListResponseEvaluationsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListResponseEvaluationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/LookupConversations:
    post:
      tags:
        - ConversationService
      summary: Lookup conversations based on a set uf participant attributes
      operationId: ConversationService_LookupConversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1LookupConversationsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1LookupConversationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/NewInboxLeadCaptured:
    post:
      tags:
        - ConversationService
      summary: "Informs conversation that a new Inbox lead was captured, for example:\
        \ form submissions"
      operationId: ConversationService_NewInboxLeadCaptured
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1NewInboxLeadCapturedRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NewInboxLeadCapturedResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/ReceiveMessage:
    post:
      tags:
        - ConversationService
      summary: Receive a message in a conversation
      operationId: ConversationService_ReceiveMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ReceiveMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/RemoveConversationFromConversationView:
    post:
      tags:
        - ConversationService
      summary: Remove conversation from Conversation view
      operationId: ConversationService_RemoveConversationFromConversationView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RemoveConversationFromConversationViewRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/SearchConversations:
    post:
      tags:
        - ConversationService
      summary: Search for conversations for an account and a search term.
      operationId: ConversationService_SearchConversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SearchConversationsRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchConversationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/SendMessage:
    post:
      tags:
        - ConversationService
      summary: Send a message to a conversation
      operationId: ConversationService_SendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SendMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SendMessageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/SendWidgetMessage:
    post:
      tags:
        - ConversationService
      summary: Send message in a widget conversation
      operationId: ConversationService_SendWidgetMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SendWidgetMessageRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SendWidgetMessageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/SetLastSeen:
    post:
      tags:
        - ConversationService
      summary: Set conversation lastSeen field
      operationId: ConversationService_SetLastSeen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SetLastSeenRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SetLastSeenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/UpdateConversation:
    post:
      tags:
        - ConversationService
      summary: Update a conversation
      operationId: ConversationService_UpdateConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateConversationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateConversationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/UpdateMessageStatus:
    post:
      tags:
        - ConversationService
      summary: Update a message status of a conversation
      operationId: ConversationService_UpdateMessageStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateMessageStatusRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/UpdateMessageTemplate:
    post:
      tags:
        - ConversationService
      summary: Update message template
      operationId: ConversationService_UpdateMessageTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateMessageTemplateRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateMessageTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.ConversationService/UpdateWidget:
    post:
      tags:
        - ConversationService
      summary: Update a widget
      operationId: ConversationService_UpdateWidget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateWidgetRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateWidgetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.EmailService/GetOwnerEmail:
    post:
      tags:
        - EmailService
      summary: Get owner email
      operationId: EmailService_GetOwnerEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetOwnerEmailRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetOwnerEmailResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.InboxService/GetConfiguration:
    post:
      tags:
        - InboxService
      summary: Get a configuration for inbox
      operationId: InboxService_GetConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetConfigurationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetConfigurationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.InboxService/GetMultiConfiguration:
    post:
      tags:
        - InboxService
      summary: Get multiple configurations for inbox
      operationId: InboxService_GetMultiConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMultiConfigurationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMultiConfigurationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.InboxService/UpsertConfiguration:
    post:
      tags:
        - InboxService
      summary: Upsert will create or update a configuration for inbox
      operationId: InboxService_UpsertConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpsertConfigurationRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpsertConfigurationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /conversation.v1.InboxService/UpsertProductFeature:
    post:
      tags:
        - InboxService
      summary: Upsert will update or create product feature availaiblity for inbox
      operationId: InboxService_UpsertProductFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpsertProductFeatureRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpsertProductFeatureResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /v1beta/widgets:
    get:
      tags:
        - ConversationService
      summary: List widgets
      operationId: ConversationService_ListWidgets
      parameters:
        - name: namespace
          in: query
          description: |-
            The namespace of the widget e.g. "ABC", "AG-123"
            Use either namespace or options.namespaces
          schema:
            type: string
        - name: pagingOptions.cursor
          in: query
          description: cursor can be passed to retrieve the next page of results keyed
            by the cursor
          schema:
            type: string
        - name: pagingOptions.pageSize
          in: query
          description: page_size specifies the number of items to return in the next
            page
          schema:
            type: integer
            format: int32
        - name: options.namespaces
          in: query
          description: |-
            The namespaces of the widgets e.g. "ABC", "AG-123"
            Use either namespace or options.namespaces
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: options.widgetTypes
          in: query
          description: "The types of the widget e.g. \"inbox-pro\", \"my-listings\""
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListWidgetsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
components:
  schemas:
    GetMessageTemplateRequestHydrationOptions:
      type: object
      properties:
        hydrationEntities:
          type: array
          items:
            $ref: '#/components/schemas/HydrationOptionsHydrationEntity'
    GetMessageTemplateResponseHydrationInformation:
      type: object
      properties:
        allFieldsHydrated:
          title: If all dynamic fields in message template are hydrated
          type: boolean
    HydrationEntityEntityType:
      type: string
      default: ENTITY_TYPE_UNDEFINED
      enum:
        - ENTITY_TYPE_UNDEFINED
        - ENTITY_TYPE_PARTNER
        - ENTITY_TYPE_ACCOUNT_GROUP
        - ENTITY_TYPE_CONTACT
    HydrationOptionsHydrationEntity:
      type: object
      properties:
        entityType:
          $ref: '#/components/schemas/HydrationEntityEntityType'
        entityId:
          title: |-
            The id used to get hydration information
            Such as, partner id used to get partner information to hydrate partner related dynamic fields in message template
          type: string
    ListMessagesRequestListMessagesFilters:
      type: object
      properties:
        conversationId:
          type: string
    ListResponseEvaluationsResponseSummary:
      title: |-
        The summary of the response evaluations, only returned if `summarize` is true in the request
        The summary is cached based on the `subject_participant` and `created_after` and `created_before` filters for 12 hours
        The summary is not specific to the `paging_options`, it considers as many evaluations as possible within the time range
      type: object
      properties:
        feedbackThemes:
          title: Feedback themes that are used to categorize the response evaluations
          type: array
          items:
            $ref: '#/components/schemas/SummaryTheme'
    ListWidgetsRequestListWidgetsFilters:
      type: object
      properties:
        namespaces:
          title: |-
            The namespaces of the widgets e.g. "ABC", "AG-123"
            Use either namespace or options.namespaces
          type: array
          items:
            type: string
        widgetTypes:
          title: "The types of the widget e.g. \"inbox-pro\", \"my-listings\""
          type: array
          items:
            type: string
    LookupConversationsRequestLookupConversationsFilters:
      type: object
      properties:
        internalParticipantId:
          title: the internal participant id (IAM or Contact)
          type: array
          items:
            type: string
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        accountGroupId:
          title: Deprecated
          type: string
        externalConversationId:
          type: string
        originLocation:
          $ref: '#/components/schemas/v1PlatformLocation'
        originLocationExternalId:
          type: string
    LookupConversationsResponseConversations:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
    MetadataIdentifier:
      type: string
      default: METADATA_IDENTIFIER_UNDEFINED
      enum:
        - METADATA_IDENTIFIER_UNDEFINED
        - METADATA_IDENTIFIER_RECIPIENT
        - METADATA_IDENTIFIER_SENDER
        - METADATA_IDENTIFIER_CONVERSATION
        - METADATA_IDENTIFIER_WHATSAPP_TEMPLATE
    SummaryTheme:
      type: object
      properties:
        name:
          title: The name of the theme
          type: string
        description:
          title: The description of the theme
          type: string
        examples:
          title: "Examples of the theme, these are real examples of responses that\
            \ are categorized under the theme"
          type: array
          items:
            type: string
    conversationv1AIConfiguration:
      type: object
      properties:
        aiResponseEnabled:
          type: boolean
        willRespondAt:
          type: string
          format: date-time
    conversationv1Status:
      type: string
      default: ERROR
      enum:
        - ERROR
        - WARNING
        - INFO
        - RESTRICTED
    googlerpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
    v1AISystemMessage:
      type: object
      properties:
        systemMessageId:
          title: The id of the AI System Message
          type: string
        systemMessageBody:
          title: The body of the AI System Message
          type: string
        iamUserId:
          title: The IAM User ID of the user who last updated the AI System Message
          type: string
        updated:
          title: The timestamp when the AI System Message was updated
          type: string
          format: date-time
    v1AddConversationToConversationViewRequest:
      title: AddConversationToConversationViewRequest is the request for adding conversation
        to Conversation view
      type: object
      properties:
        viewId:
          type: string
        conversationId:
          type: string
        participantId:
          type: string
    v1AddMultiParticipantsRequest:
      type: object
      properties:
        conversationId:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
    v1AddMultiParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
    v1Address:
      type: object
      properties:
        firstLineAddress:
          title: Address first line of the participant
          type: string
        secondLineAddress:
          title: Address second line of the participant
          type: string
        city:
          title: City of the participant
          type: string
        state:
          title: State of the participant
          type: string
        country:
          title: Country of the participant
          type: string
        zipCode:
          title: Zip code of the participant
          type: string
    v1CapturedLead:
      title: The captured lead
      type: object
      properties:
        name:
          title: The name of the lead
          type: string
        email:
          title: The email address of the lead
          type: string
        phone:
          title: The phone number of the lead
          type: string
        contactId:
          title: The id of the CRM contact
          type: string
    v1ChannelAvailability:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        isAvailable:
          type: boolean
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/v1ChannelStatus'
    v1ChannelStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/conversationv1Status'
        i18nKey:
          type: string
    v1Configuration:
      title: Configuration for Inbox
      type: object
      properties:
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
        createdAt:
          title: The time that the configuration was created at
          type: string
          format: date-time
        updatedAt:
          title: The last time the configuration was updated
          type: string
          format: date-time
        availabilityMessage:
          title: Availability Message is a message displayed at the top of inbox for
            your organization
          type: string
        showAvailabilityMessage:
          title: Determines if a availability message is displayed
          type: boolean
        googleBusinessMessagesEnabled:
          title: Determines if google business messages is available for the organization
            referred to by subject_participant
          type: boolean
        smsEnabled:
          title: Determines if sms is available for the organization referred to by
            subject_participant
          type: boolean
        inboxProEnabled:
          title: Deprecated
          type: boolean
        webChatEnabled:
          title: Determines if web chat is available for the organization referred
            to by subject_participant
          type: boolean
        facebookMessengerEnabled:
          title: Determines if facebook messenger is available for the organization
            referred to by subject_participant
          type: boolean
        multiLocationEnabled:
          title: Determine if Multi location is available for the organization referred
            to by subject_participant
          type: boolean
        instagramMessagingEnabled:
          title: Determines if instagram messaging is available for the organization
            referred to by subject_participant
          type: boolean
        aiConfiguration:
          $ref: '#/components/schemas/v1ConfigurationAIConfiguration'
        whatsappEnabled:
          title: Determines if whats app is available for the organization referred
            to by subject_participant
          type: boolean
    v1ConfigurationAIConfiguration:
      type: object
      properties:
        smsResponderEnabled:
          type: boolean
    v1Conversation:
      type: object
      properties:
        conversationId:
          type: string
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        externalConversationId:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        participantIds:
          type: array
          items:
            type: string
        latestMsgSentTime:
          type: string
          format: date-time
        originLocation:
          $ref: '#/components/schemas/v1PlatformLocation'
        originLocationExternalId:
          type: string
        lastSeenByParticipant:
          type: array
          items:
            $ref: '#/components/schemas/v1LastSeenByParticipant'
        conversationViewIds:
          type: array
          items:
            type: string
        subjectParticipantsKey:
          type: string
        subjectParticipants:
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectParticipant'
        isOpen:
          type: boolean
        aiConfiguration:
          $ref: '#/components/schemas/conversationv1AIConfiguration'
        latestMsgSentTimeBySubjectParticipant:
          type: array
          items:
            $ref: '#/components/schemas/v1LatestMessageSentTimeBySubjectParticipant'
        subjectParticipantKey:
          $ref: '#/components/schemas/v1SubjectParticipantKey'
        latestRelevantActivityTime:
          type: string
          format: date-time
        metadata:
          title: metadata can represent any kind of value
          type: array
          items:
            $ref: '#/components/schemas/v1KeyValuePair'
        instanceId:
          title: |-
            A uuid that is used to uniquely identify the conversation among a set of conversations between the same subject participants
            If only one conversation is expected between a set of subject participants, this field should be ""
          type: string
    v1ConversationChannel:
      type: string
      default: CONVERSATION_CHANNEL_UNDEFINED
      enum:
        - CONVERSATION_CHANNEL_UNDEFINED
        - CONVERSATION_CHANNEL_INTERNAL
        - CONVERSATION_CHANNEL_SMS
        - CONVERSATION_CHANNEL_FACEBOOK
        - CONVERSATION_CHANNEL_GOOGLE_MESSAGES
        - CONVERSATION_CHANNEL_OPENAI
        - CONVERSATION_CHANNEL_EMAIL
        - CONVERSATION_CHANNEL_GOOGLE_BUSINESS_COMMUNICATIONS
        - CONVERSATION_CHANNEL_WEB_CHAT
        - CONVERSATION_CHANNEL_INSTAGRAM
        - CONVERSATION_CHANNEL_WHATSAPP
        - CONVERSATION_CHANNEL_AI_ASSISTANT
    v1ConversationKey:
      type: object
      properties:
        subjectParticipants:
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectParticipant'
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        originLocationExternalId:
          type: string
    v1ConversationMessageCount:
      title: Deprecated
      type: object
      properties:
        conversationId:
          type: string
        count:
          type: string
          format: int64
    v1CreateConversationRequest:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        externalConversationId:
          type: string
        created:
          title: temporary created/updated field to run migration
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        originLocation:
          $ref: '#/components/schemas/v1PlatformLocation'
        originLocationExternalId:
          type: string
        instanceId:
          type: string
          description: |-
            Setting this to a UUID will allow multiple conversations to exist with the same subject participants.
            In most cases this should be empty. Only set if you know what you're doing.
    v1CreateConversationResponse:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
    v1CreateMessageTemplateRequest:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/v1MessageTemplate'
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
    v1CreateMessageTemplateResponse:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/v1MessageTemplate'
    v1CreateMultiMessagesRequest:
      type: object
      properties:
        messages:
          title: messages
          type: array
          items:
            $ref: '#/components/schemas/v1Message'
        lastSeen:
          title: temporary field to set in the conversation
          type: string
          format: date-time
    v1CreateWidgetConversationRequest:
      type: object
      properties:
        widgetId:
          title: The widget id
          type: string
        chatSourceUrl:
          title: The page that the conversation is start on
          type: string
        greetingMessage:
          title: The greeting message displayed to the user
          type: string
        metadata:
          title: The metadata passed in by the widget owner
          type: array
          items:
            $ref: '#/components/schemas/v1KeyValuePair'
    v1CreateWidgetConversationResponse:
      type: object
      properties:
        widgetParticipantToken:
          title: The widget_participant_token containing data about the widget user
          type: string
        conversation:
          $ref: '#/components/schemas/v1Conversation'
        greetingMessageId:
          title: The message id for the greeting message
          type: string
    v1CreateWidgetRequest:
      type: object
      properties:
        name:
          title: The widget configuration to be created
          type: string
        namespace:
          type: string
        color:
          type: string
        allowedUrls:
          type: array
          items:
            type: string
        welcomeMessage:
          title: The welcome message for the webchat for the widget config
          type: string
        dataSources:
          $ref: '#/components/schemas/v1DataSources'
        textColor:
          title: The text color for the widget
          type: string
        accentColor:
          title: Accent color for the widget secondary elements
          type: string
        accentTextColor:
          title: Accent text color for the widget secondary elements
          type: string
        skipContactCapture:
          title: Whether the widget has contact capturing enabled
          type: boolean
        additionalPromptInstructions:
          title: The prompt provided by a user to be used as additional instructions
            for the web chat AI assistant
          type: string
        assistantName:
          title: assistant_name is the name of the AI assistant
          type: string
        assistantAvatarUrl:
          title: assistant_avatar_url is the url of the AI assistant avatar
          type: string
        position:
          $ref: '#/components/schemas/v1WidgetPosition'
        hideMobileCta:
          title: Hide the popup CTA on mobile screens
          type: boolean
        customGreetingMessage:
          title: The custom greeting message that shows up as first message
          type: string
        enableGreetingMessage:
          title: Enable the greeting message from AI assistant
          type: boolean
    v1CreateWidgetResponse:
      type: object
      properties:
        widget:
          $ref: '#/components/schemas/v1Widget'
    v1DataSources:
      type: object
      properties:
        businessProfile:
          title: Will be used to determine if a business profile data source should
            be associated
          type: boolean
        businessWebsite:
          title: |-
            Will be used to determine if a business website data source should be associated
            This will also depend on the business having their website field filled
          type: boolean
    v1DeleteConversationRequest:
      type: object
      properties:
        conversationId:
          type: string
    v1DeleteMessageRequest:
      type: object
      properties:
        messageId:
          type: string
    v1DeleteMessageTemplateRequest:
      type: object
      properties:
        templateId:
          title: The template to be deleted
          type: string
    v1DeleteWidgetRequest:
      type: object
      properties:
        widgetId:
          title: The id of the widget to be deleted
          type: string
    v1EvaluateResponseRequest:
      type: object
      properties:
        messageId:
          title: "Deprecated: use evaluated_message_id instead"
          type: string
        sentiment:
          $ref: '#/components/schemas/v1EvaluationSentiment'
        comment:
          title: A comment on what was helpful or not helpful about the response
          type: string
        evaluatedEventId:
          type: string
        evaluatedMessageId:
          type: string
        conversationId:
          title: The conversation id
          type: string
    v1EvaluateResponseType:
      type: string
      default: EVALUATION_RESPONSE_TYPE_UNSPECIFIED
      enum:
        - EVALUATION_RESPONSE_TYPE_UNSPECIFIED
        - EVALUATION_RESPONSE_TYPE_EVENT
        - EVALUATION_RESPONSE_TYPE_MESSAGE
    v1EvaluationSentiment:
      type: string
      default: EVALUATION_SENTIMENT_UNDEFINED
      enum:
        - EVALUATION_SENTIMENT_UNDEFINED
        - EVALUATION_SENTIMENT_POSITIVE
        - EVALUATION_SENTIMENT_NEGATIVE
    v1Event:
      type: object
      properties:
        conversationId:
          type: string
        eventId:
          type: string
        happenedAt:
          type: string
          format: date-time
        labelKey:
          type: string
        initiatorId:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        message:
          type: string
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        originatedAt:
          $ref: '#/components/schemas/v1PlatformLocation'
        type:
          $ref: '#/components/schemas/v1EventType'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/v1KeyValuePair'
    v1EventType:
      type: string
      default: EVENT_TYPE_UNDEFINED
      enum:
        - EVENT_TYPE_UNDEFINED
        - EVENT_TYPE_SMS_UNSUBSCRIBED
        - EVENT_TYPE_CAMPAIGN
        - EVENT_TYPE_REVIEW_REQUEST
        - EVENT_TYPE_FORM_SUBMISSION
        - EVENT_TYPE_PHONE_CALL
        - EVENT_TYPE_SMS_SUBSCRIBED
    v1GetAISystemMessageRequest:
      type: object
      properties:
        systemMessageId:
          title: The id of the AI System Message
          type: string
    v1GetAISystemMessageResponse:
      type: object
      properties:
        systemMessage:
          $ref: '#/components/schemas/v1AISystemMessage'
    v1GetAvailableChannelsForConversationRequest:
      type: object
      properties:
        conversationId:
          title: The conversation id
          type: string
    v1GetAvailableChannelsForConversationResponse:
      type: object
      properties:
        channels:
          title: "Deprecated: The list of channels messages can be sent on"
          type: array
          items:
            $ref: '#/components/schemas/v1ConversationChannel'
        preferredChannel:
          $ref: '#/components/schemas/v1ConversationChannel'
        channelAvailabilities:
          type: array
          items:
            $ref: '#/components/schemas/v1ChannelAvailability'
    v1GetConfigurationRequest:
      title: GetConfigurationRequest is the request for a configuration
      type: object
      properties:
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
    v1GetConfigurationResponse:
      title: GetConfigurationResponse will return a configuration for a given subject
        participant
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/v1Configuration'
    v1GetConversationByKeyRequest:
      type: object
      properties:
        conversationKey:
          $ref: '#/components/schemas/v1ConversationKey'
    v1GetConversationByKeyResponse:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
    v1GetConversationSummaryRequest:
      type: object
      properties:
        conversationId:
          type: string
    v1GetConversationSummaryResponse:
      type: object
      properties:
        summary:
          type: string
    v1GetConversationViewsRequest:
      title: GetConversationViewsRequest is the request for getting the ConversationView
        for a participant
      type: object
      properties:
        participantId:
          type: string
    v1GetConversationViewsResponse:
      title: GetConversationViewsResponse will return participant conversation views
      type: object
      properties:
        views:
          type: array
          items:
            $ref: '#/components/schemas/v1View'
    v1GetMessageOptions:
      type: object
      properties:
        includeOriginalContent:
          type: boolean
    v1GetMessageRequest:
      type: object
      properties:
        messageId:
          type: string
        options:
          $ref: '#/components/schemas/v1GetMessageOptions'
    v1GetMessageTemplateRequest:
      type: object
      properties:
        templateId:
          type: string
        hydrationOptions:
          $ref: '#/components/schemas/GetMessageTemplateRequestHydrationOptions'
    v1GetMessageTemplateResponse:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/v1MessageTemplate'
        hydrationInformation:
          $ref: '#/components/schemas/GetMessageTemplateResponseHydrationInformation'
    v1GetMultiConfigurationRequest:
      title: GetMultiConfigurationRequest is the request for getting multiple configurations
      type: object
      properties:
        subjectParticipants:
          title: "A list of subject participants, whose configurations are being requested"
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectParticipant'
    v1GetMultiConfigurationResponse:
      title: GetMultiConfigurationResponse will return multiple configurations for
        a given subject participants
      type: object
      properties:
        configurations:
          title: The configurations for a list of subject participants
          type: array
          items:
            $ref: '#/components/schemas/v1Configuration'
    v1GetMultiConversationDetailsRequest:
      type: object
      properties:
        conversationIds:
          type: array
          items:
            type: string
        options:
          $ref: '#/components/schemas/vendastatypesFieldMask'
    v1GetMultiConversationDetailsResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/v1GetMultiConversationDetailsResponseDetailedConversation'
    v1GetMultiConversationDetailsResponseDetailedConversation:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
        latestMessage:
          $ref: '#/components/schemas/v1Message'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
        summary:
          type: string
        event:
          $ref: '#/components/schemas/v1Event'
        message:
          $ref: '#/components/schemas/v1Message'
    v1GetMultiConversationMessageCountRequest:
      type: object
      properties:
        conversationIds:
          type: array
          items:
            type: string
    v1GetMultiConversationMessageCountResponse:
      type: object
      properties:
        messageCounts:
          title: "Deprecated: use counts instead"
          type: array
          items:
            $ref: '#/components/schemas/v1ConversationMessageCount'
        counts:
          type: object
          additionalProperties:
            type: string
            format: int64
    v1GetMultiEventsRequest:
      type: object
      properties:
        eventIds:
          title: The ids of the events to be retrieved
          type: array
          items:
            type: string
        conversationId:
          title: The conversation id
          type: string
    v1GetMultiEventsResponse:
      type: object
      properties:
        events:
          title: The list of events
          type: array
          items:
            $ref: '#/components/schemas/v1Event'
    v1GetMultiMessagesRequest:
      type: object
      properties:
        messageIds:
          title: message IDs
          type: array
          items:
            type: string
        conversationId:
          title: Conversation ID
          type: string
        languageCode:
          type: string
          description: Code to request OpenAI translation. Provide code in ISO 639-1
            format. Leave empty to skip translation.
    v1GetMultiMessagesResponse:
      type: object
      properties:
        messages:
          title: list of messages
          type: array
          items:
            $ref: '#/components/schemas/v1Message'
    v1GetMultiParticipantsRequest:
      type: object
      properties:
        participantIds:
          title: participant IDs
          type: array
          items:
            type: string
        conversationId:
          title: Deprecated
          type: string
    v1GetMultiParticipantsResponse:
      type: object
      properties:
        participants:
          title: list of participants
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
    v1GetMultiWidgetMessagesRequest:
      type: object
      properties:
        messageIds:
          title: The ids of the messages to be retrieved
          type: array
          items:
            type: string
    v1GetMultiWidgetMessagesResponse:
      type: object
      properties:
        messages:
          title: The list of messages
          type: array
          items:
            $ref: '#/components/schemas/v1Message'
    v1GetMultiWidgetRequest:
      type: object
      properties:
        widgetIds:
          type: array
          items:
            type: string
    v1GetMultiWidgetResponse:
      type: object
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/v1Widget'
    v1GetOwnerEmailRequest:
      type: object
      properties:
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
    v1GetOwnerEmailResponse:
      type: object
      properties:
        forwardingEmail:
          type: string
    v1GetParticipantsByKeyRequest:
      type: object
      properties:
        participantKey:
          $ref: '#/components/schemas/v1ParticipantKey'
    v1GetParticipantsByKeyResponse:
      type: object
      properties:
        participants:
          title: |-
            list of participants
            Deprecated: use participant instead
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
        participant:
          $ref: '#/components/schemas/v1Participant'
    v1GetWidgetConfigRequest:
      type: object
      properties:
        widgetId:
          title: The id of the widget to be retrieved
          type: string
        visitData:
          $ref: '#/components/schemas/v1WidgetVisit'
    v1GetWidgetConfigResponse:
      type: object
      properties:
        name:
          title: "Name of the widget, e.g. \"Mountain Media Support\""
          type: string
        color:
          title: "A hex color code for the widget, e.g. \"#FF0000\""
          type: string
        isEnabled:
          title: Whether the webchat for the widget config is enabled
          type: boolean
        welcomeMessage:
          title: The welcome message for the webchat for the widget config
          type: string
        textColor:
          title: The text color for the widget
          type: string
        accentColor:
          title: Accent color for the widget secondary elements
          type: string
        accentTextColor:
          title: Accent text color for the widget secondary elements
          type: string
        skipContactCapture:
          title: "Deprecated: not meant to be used in the Web Chat client"
          type: boolean
        widgetTopSpace:
          title: Height between the widget top and the screen in pixels
          type: string
          format: int64
        assistantName:
          title: assistant_name is the name of the AI assistant
          type: string
        assistantAvatarUrl:
          title: assistant_avatar_url is the url of the AI assistant avatar
          type: string
        position:
          $ref: '#/components/schemas/v1WidgetPosition'
        hideMobileCta:
          title: Hide the popup CTA on mobile screens
          type: boolean
        customGreetingMessage:
          title: The custom greeting message that shows up as first message
          type: string
        enableGreetingMessage:
          title: Enable the greeting message from AI assistant
          type: boolean
        namespace:
          title: "The namespace of the widget e.g. \"ABC\", \"AG-123\""
          type: string
        poweredByName:
          title: The company name for the widget footer (either current namespace
            or parent namespace)
          type: string
        poweredByWebsite:
          title: The company website for the widget footer (either current namespace
            or parent namespace)
          type: string
        showFooterContent:
          title: Show the footer content on the widget (configured on the partner
            business app configuration)
          type: boolean
    v1GetWidgetConversationResponse:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
    v1GetWidgetRequest:
      type: object
      properties:
        widgetId:
          title: The id of the widget to be retrieved
          type: string
    v1GetWidgetResponse:
      type: object
      properties:
        widget:
          $ref: '#/components/schemas/v1Widget'
    v1GlobalParticipantType:
      title: Participant Type that replaces Type the Type enum in Participant message
      type: string
      default: GLOBAL_PARTICIPANT_TYPE_UNDEFINED
      enum:
        - GLOBAL_PARTICIPANT_TYPE_UNDEFINED
        - GLOBAL_PARTICIPANT_TYPE_CUSTOMER
        - GLOBAL_PARTICIPANT_TYPE_IAM_USER
        - GLOBAL_PARTICIPANT_TYPE_ACCOUNT_GROUP
        - GLOBAL_PARTICIPANT_TYPE_PARTNER
        - GLOBAL_PARTICIPANT_TYPE_IAM_TEMPORARY_SUBJECT
        - GLOBAL_PARTICIPANT_TYPE_DIGITAL_AGENT
        - GLOBAL_PARTICIPANT_TYPE_VENDOR
        - GLOBAL_PARTICIPANT_TYPE_OPENAI_BOT
        - GLOBAL_PARTICIPANT_TYPE_ANONYMOUS
        - GLOBAL_PARTICIPANT_TYPE_GROUP
        - GLOBAL_PARTICIPANT_TYPE_AI_ASSISTANT
    v1InjectMessageRequest:
      type: object
      properties:
        messageId:
          title: message ID could from an internal or external provider
          type: string
        body:
          title: body is the content of the message
          type: string
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        type:
          $ref: '#/components/schemas/v1MessageType'
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
        metadata:
          title: metadata can represents any kind of value
          type: object
          additionalProperties:
            type: string
        media:
          title: media is the media content of the message
          type: array
          items:
            $ref: '#/components/schemas/v1Media'
        namespace:
          $ref: '#/components/schemas/v1NamespaceDetail'
        sourceName:
          title: "source of message that we're injecting into a conversation (e.g.\
            \ SMS, Inbox, Email, etc...)"
          type: string
        created:
          title: The original creation time of the message
          type: string
          format: date-time
    v1KeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    v1LastSeenByParticipant:
      type: object
      properties:
        participantId:
          type: string
        lastSeenTime:
          type: string
          format: date-time
    v1LatestMessageSentTimeBySubjectParticipant:
      type: object
      properties:
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
        time:
          type: string
          format: date-time
    v1ListAISystemMessagesRequest:
      type: object
      properties:
        cursor:
          title: The cursor to start fetching AI System Messages from
          type: string
        pageSize:
          title: The number of AI System Messages to fetch per page
          type: string
          format: int64
    v1ListAISystemMessagesResponse:
      type: object
      properties:
        aiSystemMessages:
          title: The list of AI System Messages
          type: array
          items:
            $ref: '#/components/schemas/v1AISystemMessage'
        nextCursor:
          title: The cursor to fetch the next page of AI System Messages
          type: string
        hasMore:
          title: Whether there are more AI System Messages to fetch
          type: boolean
    v1ListMessageTemplateRequest:
      type: object
      properties:
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
        pagingOptions:
          $ref: '#/components/schemas/v1PagedRequestOptions'
    v1ListMessageTemplateResponse:
      type: object
      properties:
        templates:
          title: All message templates for a given SubjectParticipant
          type: array
          items:
            $ref: '#/components/schemas/v1MessageTemplate'
        pagingMetadata:
          $ref: '#/components/schemas/v1PagedResponseMetadata'
    v1ListMessagesRequest:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ListMessagesRequestListMessagesFilters'
        pagingOptions:
          $ref: '#/components/schemas/v1PagedRequestOptions'
    v1ListMessagesResponse:
      title: |-
        *******************
        Responses
        *******************
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/v1Message'
        pagingMetadata:
          $ref: '#/components/schemas/v1PagedResponseMetadata'
    v1ListResponseEvaluationsRequest:
      type: object
      properties:
        summarize:
          title: Whether to summarize the response evaluations
          type: boolean
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
        pagingOptions:
          $ref: '#/components/schemas/v1PagedRequestOptions'
        createdAfter:
          title: Filter evaluations created after this timestamp (inclusive)
          type: string
          format: date-time
        createdBefore:
          title: Filter evaluations created before this timestamp (inclusive)
          type: string
          format: date-time
        evaluationType:
          title: Filter evaluations by type
          type: array
          items:
            $ref: '#/components/schemas/v1EvaluateResponseType'
    v1ListResponseEvaluationsResponse:
      type: object
      properties:
        evaluations:
          title: The list of response evaluations
          type: array
          items:
            $ref: '#/components/schemas/v1ResponseEvaluation'
        summary:
          $ref: '#/components/schemas/ListResponseEvaluationsResponseSummary'
        pagingMetadata:
          $ref: '#/components/schemas/v1PagedResponseMetadata'
    v1ListWidgetsResponse:
      type: object
      properties:
        widgets:
          title: The list of widgets
          type: array
          items:
            $ref: '#/components/schemas/v1Widget'
        pagingMetadata:
          $ref: '#/components/schemas/v1PagedResponseMetadata'
    v1LookupConversationsRequest:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/LookupConversationsRequestLookupConversationsFilters'
        pagingOptions:
          $ref: '#/components/schemas/v1PagedRequestOptions'
    v1LookupConversationsResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/LookupConversationsResponseConversations'
        pagingMetadata:
          $ref: '#/components/schemas/v1PagedResponseMetadata'
    v1Media:
      type: object
      properties:
        mediaContentType:
          title: media content type is a two part identifier for file types (e.g.
            image/jpeg)
          type: string
        mediaLocationPath:
          title: media location path on a GCP bucket
          type: string
        mediaFileName:
          title: media file name
          type: string
        fileSize:
          title: size of file in bytes
          type: string
          format: int64
        mediaUrl:
          title: media url is the url of the media content
          type: string
    v1Message:
      title: Message represents a message of a conversation
      type: object
      properties:
        messageId:
          type: string
        externalMessageId:
          type: string
        conversationId:
          type: string
        participantId:
          type: string
        type:
          $ref: '#/components/schemas/v1MessageType'
        body:
          type: string
        error:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        media:
          title: media is the media content of the message
          type: array
          items:
            type: string
        sendStatus:
          $ref: '#/components/schemas/v1SendStatus'
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        metadata:
          title: metadata can represent any kind of value
          type: array
          items:
            $ref: '#/components/schemas/v1KeyValuePair'
        originalContent:
          title: original_content is the original content of the message
          type: string
    v1MessageStatus:
      title: MessageStatus represents the status a message is
      type: string
      default: MESSAGE_STATUS_NOT_READ
      enum:
        - MESSAGE_STATUS_NOT_READ
        - MESSAGE_STATUS_READ
        - MESSAGE_STATUS_SENT
        - MESSAGE_STATUS_DELIVERED
        - MESSAGE_STATUS_FAILED
        - MESSAGE_STATUS_UNDELIVERED
        - MESSAGE_STATUS_SENDING
    v1MessageTemplate:
      type: object
      properties:
        templateId:
          title: |-
            A unique RESTful identifier. The format will be used for providing template
            discoverability and categorizing them.
            Example: /business-id/AG-123/template-id/TEMPLATE-123
          type: string
        name:
          title: Template friendly name
          type: string
        content:
          title: Template content
          type: string
        created:
          title: Creation time
          type: string
          format: date-time
    v1MessageType:
      title: MessageType represents the type of a message
      type: string
      description: "- MESSAGE_TYPE_FORM_SUBMISSION: Form Submission messages have\
        \ been moved to events"
      default: MESSAGE_TYPE_MESSAGE
      enum:
        - MESSAGE_TYPE_MESSAGE
        - MESSAGE_TYPE_MEDIA
        - MESSAGE_TYPE_SYSTEM
        - MESSAGE_TYPE_FORM_SUBMISSION
        - MESSAGE_TYPE_BOOKING_AVAILABILITY
        - MESSAGE_TYPE_TEMPLATE
    v1Metadata:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/MetadataIdentifier'
        data:
          type: object
          additionalProperties:
            type: string
    v1NamespaceDetail:
      type: object
      properties:
        participantType:
          $ref: '#/components/schemas/v1GlobalParticipantType'
        internalParticipantId:
          type: string
    v1NewInboxLeadCapturedRequest:
      type: object
      properties:
        namespace:
          title: "The namespace of the lead (e.g. \"ABC\", \"AG-123\" for CRM contacts\
            \ that are namespaced to Vendasta's domain Account Group)"
          type: string
        parentNamespace:
          title: "The parent namespace of the lead (e.g. \"ABC\", for CRM contacts\
            \ that are namespace to Vendasta's domain Account Group OR \"VMF\", for\
            \ CRM contacts that are namespaced to Vendasta's domain Partner)"
          type: string
        conversationId:
          title: |-
            The identifier of the conversation the lead is associated with
            Deprecated: use captured_lead.lead_id
          type: string
        conversationSummary:
          title: The summary of the conversation or summary of where the lead came
            from
          type: string
        capturedLead:
          $ref: '#/components/schemas/v1CapturedLead'
        source:
          title: The location of the lead capture
          type: string
        capturedAt:
          title: The timestamp of when the lead was captured
          type: string
          format: date-time
        message:
          title: A message to be sent to inbox
          type: string
        initiatorId:
          title: The id of the object initiating the lead capture. (e.g. form submission
            id)
          type: string
    v1NewInboxLeadCapturedResponse:
      type: object
    v1PagedRequestOptions:
      type: object
      properties:
        cursor:
          title: cursor can be passed to retrieve the next page of results keyed by
            the cursor
          type: string
        pageSize:
          title: page_size specifies the number of items to return in the next page
          type: integer
          format: int32
    v1PagedResponseMetadata:
      type: object
      properties:
        nextCursor:
          title: A cursor that can be provided to retrieve the next page of results
          type: string
        hasMore:
          title: Whether or not more results exist
          type: boolean
        totalResults:
          title: Total number of results
          type: string
          format: int64
    v1Participant:
      type: object
      properties:
        participantId:
          title: the participant id
          type: string
        internalParticipantId:
          title: the internal participant id (IAM or Contact)
          type: string
        partnerId:
          title: partner ID
          type: string
        accountGroupId:
          title: account group ID
          type: string
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        externalParticipantId:
          title: the external participant id from 3rd party integrations
          type: string
        name:
          title: the name of the participant
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        participantType:
          $ref: '#/components/schemas/v1ParticipantType'
        email:
          title: the email address of the participant
          type: string
        phoneNumber:
          title: the phone number of the participant
          type: string
        address:
          $ref: '#/components/schemas/v1Address'
        isSubjectParticipant:
          type: boolean
          description: |-
            Participant is a "subject participant"
            If a message is sent by an SMB to a Partner,
            then `is_subject_participant` is true for both SMB and Partner
            NOTE: we might add a new field in the future to indicate if a
            subject participant is in the `subject_participant_key`
            this will be a different boolean from `is_subject_participant`.
        isParticipantInternalInfoDeleted:
          title: |-
            If an accountGroup or Customer is deleted the internal
            info will be missing and will not be shown in the conversation
          type: boolean
        profileImageUrl:
          title: the profile image url of the participant
          type: string
        namespaceHierarchy:
          title: |-
            the namespace hierarchy of the participant
            this field is used to determine the organization hierarchy that the participant belongs to
          type: array
          items:
            $ref: '#/components/schemas/v1NamespaceDetail'
    v1ParticipantKey:
      type: object
      properties:
        internalParticipantId:
          title: the internal participant id (IAM or Contact)
          type: string
        partnerId:
          title: partner ID
          type: string
        accountGroupId:
          title: account group ID
          type: string
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
        channels:
          title: Deprecated
          type: array
          items:
            $ref: '#/components/schemas/v1ConversationChannel'
        participantType:
          $ref: '#/components/schemas/v1GlobalParticipantType'
        namespaceHierarchy:
          title: |-
            the namespace hierarchy of the participant
            this field is used to determine the organization hierarchy that the participant belongs to
          type: array
          items:
            $ref: '#/components/schemas/v1NamespaceDetail'
    v1ParticipantType:
      title: the participant type determines the type of a participant in a conversation
      type: string
      default: PARTICIPANT_TYPE_UNDEFINED
      enum:
        - PARTICIPANT_TYPE_UNDEFINED
        - PARTICIPANT_TYPE_CUSTOMER
        - PARTICIPANT_TYPE_IAM_USER
        - PARTICIPANT_TYPE_ACCOUNT_GROUP
        - PARTICIPANT_TYPE_PARTNER
        - PARTICIPANT_TYPE_IAM_TEMPORARY_SUBJECT
        - PARTICIPANT_TYPE_DIGITAL_AGENT
        - PARTICIPANT_TYPE_VENDOR
        - PARTICIPANT_TYPE_OPENAI_BOT
        - PARTICIPANT_TYPE_ANONYMOUS
        - PARTICIPANT_TYPE_GROUP
        - PARTICIPANT_TYPE_AI_ASSISTANT
    v1PlatformLocation:
      type: string
      default: PLATFORM_LOCATION_UNDEFINED
      enum:
        - PLATFORM_LOCATION_UNDEFINED
        - PLATFORM_LOCATION_BUSINESS_APP
        - PLATFORM_LOCATION_PARTNER_CENTER
        - PLATFORM_LOCATION_VENDOR_CENTER
        - PLATFORM_LOCATION_TASK_MANAGER
        - PLATFORM_LOCATION_PROPOSAL_BUILDER
        - PLATFORM_LOCATION_SALES_CENTER
    v1ProductFeature:
      type: object
      properties:
        googleBusinessMessagesEnabled:
          title: Determines if google business messages is available for the organization
            referred to by subject_participant
          type: boolean
        smsEnabled:
          title: Determines if sms is available for the organization referred to by
            subject_participant
          type: boolean
        multiLocationEnabled:
          title: Determine if Multi location is available for the organization referred
            to by subject_participant
          type: boolean
        webChatEnabled:
          title: Determines if web chat is available for the organization referred
            to by subject_participant
          type: boolean
        facebookMessengerEnabled:
          title: Determines if facebook messenger is available for the organization
            referred to by subject_participant
          type: boolean
        instagramMessagingEnabled:
          title: Determines if instagram messaging is available for the organization
            referred to by subject_participant
          type: boolean
        aiSmsResponderEnabled:
          title: Determines if ai sms responder is available for the organization
            referred to by subject_participant
          type: boolean
        whatsappEnabled:
          title: Determines if whats app is available for the organization referred
            to by subject_participant
          type: boolean
    v1ReceiveMessageRequest:
      type: object
      properties:
        senderId:
          title: sender ID could from an internal or external provider
          type: string
        recipientId:
          title: recipient ID sender ID could from an internal or external provider
          type: string
        conversationId:
          title: conversation ID the message will be sent to and could from an internal
            or external provider
          type: string
        messageId:
          title: message ID the message will be sent to and could from an internal
            or external provider
          type: string
        body:
          title: body is the content of the message
          type: string
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        type:
          $ref: '#/components/schemas/v1MessageType'
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
        partnerId:
          title: partner ID
          type: string
          description: "Deprecated: use namespace instead"
        accountGroupId:
          title: account group ID
          type: string
          description: "Deprecated: use namespace instead"
        metadata:
          title: metadata can represents any kind of value
          type: object
          additionalProperties:
            type: string
        media:
          title: media is the media content of the message
          type: array
          items:
            type: string
        namespace:
          $ref: '#/components/schemas/v1NamespaceDetail'
    v1RemoveConversationFromConversationViewRequest:
      title: RemoveConversationFromConversationViewRequest is the request for removing
        conversation from Conversation view
      type: object
      properties:
        viewId:
          type: string
        conversationId:
          type: string
        participantId:
          type: string
    v1ResponseEvaluation:
      type: object
      properties:
        messageId:
          title: The message id of the response evaluation
          type: string
        conversationId:
          title: The conversation id of the response evaluation
          type: string
        sentiment:
          $ref: '#/components/schemas/v1EvaluationSentiment'
        comment:
          title: The comment of the response evaluation
          type: string
        createdAt:
          title: The time the response evaluation was created
          type: string
          format: date-time
        subjectParticipants:
          title: The subject participants associated the response evaluation's conversation
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectParticipant'
        eventId:
          type: string
          description: The event id of the response evaluation; this will be empty
            if there is a message id.
    v1SearchConversationsRequest:
      type: object
      properties:
        partnerId:
          type: string
        accountGroupId:
          type: string
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
        searchTerm:
          type: string
        pagingOptions:
          $ref: '#/components/schemas/v1PagedRequestOptions'
    v1SearchConversationsResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/v1SearchConversationsResponseDetailedConversation'
        pagingMetadata:
          $ref: '#/components/schemas/v1PagedResponseMetadata'
    v1SearchConversationsResponseDetailedConversation:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
        latestMessage:
          $ref: '#/components/schemas/v1Message'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/v1Participant'
    v1SendMessageOptions:
      type: object
      properties:
        runSync:
          title: option to run sendMessage synchronously
          type: boolean
    v1SendMessageRequest:
      title: |-
        *******************
        Requests
        *******************
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/v1Participant'
        recipient:
          $ref: '#/components/schemas/v1Participant'
        conversationId:
          title: conversation ID the message will be sent to - Belongs to the Conversation
            µs
          type: string
        type:
          $ref: '#/components/schemas/v1MessageType'
        body:
          title: message body
          type: string
        metadata:
          title: metadata can represents any kind of value
          type: array
          items:
            $ref: '#/components/schemas/v1Metadata'
        originLocation:
          $ref: '#/components/schemas/v1PlatformLocation'
        media:
          title: message media content
          type: array
          items:
            $ref: '#/components/schemas/v1Media'
        channel:
          $ref: '#/components/schemas/v1ConversationChannel'
        options:
          $ref: '#/components/schemas/v1SendMessageOptions'
    v1SendMessageResponse:
      type: object
      properties:
        workflowId:
          title: "Deprecated: use message_id instead"
          type: string
        messageId:
          title: The unique identifier of the message
          type: string
    v1SendStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/v1MessageStatus'
        reason:
          type: string
        created:
          type: string
          format: date-time
    v1SendWidgetMessageRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/v1MessageType'
        body:
          title: message body
          type: string
        metadata:
          title: metadata can represent any kind of value
          type: array
          items:
            $ref: '#/components/schemas/v1Metadata'
        location:
          $ref: '#/components/schemas/v1PlatformLocation'
    v1SendWidgetMessageResponse:
      type: object
      properties:
        messageId:
          title: The unique identifier of the message
          type: string
    v1SetLastSeenRequest:
      type: object
      properties:
        conversationId:
          title: conversation ID
          type: string
        participant:
          $ref: '#/components/schemas/v1Participant'
        status:
          $ref: '#/components/schemas/v1SetLastSeenRequestStatus'
    v1SetLastSeenRequestStatus:
      title: LastSeenStatus
      type: string
      default: SET_LAST_SEEN_REQUEST_STATUS_READ
      enum:
        - SET_LAST_SEEN_REQUEST_STATUS_READ
        - SET_LAST_SEEN_REQUEST_STATUS_UNREAD
    v1SetLastSeenResponse:
      type: object
      properties:
        participant:
          $ref: '#/components/schemas/v1Participant'
    v1SubjectParticipant:
      type: object
      properties:
        participantType:
          $ref: '#/components/schemas/v1GlobalParticipantType'
        internalParticipantId:
          title: the internal participant id
          type: string
    v1SubjectParticipantKey:
      type: object
      properties:
        subjectParticipantsKey:
          type: string
        subjectParticipants:
          title: parsed from subject_participants_key
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectParticipant'
    v1UpdateConversationRequest:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
        fieldMask:
          $ref: '#/components/schemas/vendastatypesFieldMask'
    v1UpdateConversationResponse:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/v1Conversation'
    v1UpdateMessageStatusRequest:
      type: object
      properties:
        messageId:
          type: string
        participantId:
          type: string
        status:
          $ref: '#/components/schemas/v1MessageStatus'
    v1UpdateMessageTemplateRequest:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/v1MessageTemplate'
        fieldMask:
          $ref: '#/components/schemas/vendastatypesFieldMask'
    v1UpdateMessageTemplateResponse:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/v1MessageTemplate'
    v1UpdateWidgetRequest:
      type: object
      properties:
        widgetId:
          title: The widget information to be updated
          type: string
        name:
          title: "Name of the widget, e.g. \"Mountain Media Support\""
          type: string
        color:
          title: "A hex color code for the widget, e.g. \"#FF0000\""
          type: string
        allowedUrls:
          title: A list of urls that the widget is allowed to be embedded on
          type: array
          items:
            type: string
        welcomeMessage:
          title: The welcome message for the webchat for the widget config
          type: string
        isEnabled:
          title: Whether the webchat for the widget config is enabled
          type: boolean
        textColor:
          title: The text color for the widget
          type: string
        accentColor:
          title: Accent color for the widget secondary elements
          type: string
        accentTextColor:
          title: Accent text color for the widget secondary elements
          type: string
        skipContactCapture:
          title: Whether the widget has contact capturing enabled
          type: boolean
        additionalPromptInstructions:
          title: The prompt provided by a user to be used as additional instructions
            for the web chat AI assistant
          type: string
        assistantName:
          title: assistant_name is the name of the AI assistant
          type: string
        assistantAvatarUrl:
          title: assistant_avatar_url is the url of the AI assistant avatar
          type: string
        position:
          $ref: '#/components/schemas/v1WidgetPosition'
        hideMobileCta:
          title: Hide the popup CTA on mobile screens
          type: boolean
        customGreetingMessage:
          title: The custom greeting message that shows up as first message
          type: string
        enableGreetingMessage:
          title: Enable the greeting message from AI assistant
          type: boolean
        fieldMask:
          $ref: '#/components/schemas/vendastatypesFieldMask'
    v1UpdateWidgetResponse:
      type: object
      properties:
        widget:
          $ref: '#/components/schemas/v1Widget'
    v1UpsertAISystemMessageRequest:
      type: object
      properties:
        systemMessage:
          $ref: '#/components/schemas/v1AISystemMessage'
    v1UpsertConfigurationRequest:
      title: UpsertConfigurationRequest is the request for creating or updating an
        inbox configuration for an org
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/v1Configuration'
        fieldMask:
          $ref: '#/components/schemas/vendastatypesFieldMask'
    v1UpsertConfigurationResponse:
      title: UpsertConfigurationResponse is the response from creating or updating
        a a configuration
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/v1Configuration'
    v1UpsertProductFeatureRequest:
      title: UpsertProductFeatureRequest is the request for updating or creating the
        feature configuration for inbox
      type: object
      properties:
        productFeature:
          $ref: '#/components/schemas/v1ProductFeature'
        fieldMask:
          $ref: '#/components/schemas/vendastatypesFieldMask'
        subjectParticipant:
          $ref: '#/components/schemas/v1SubjectParticipant'
    v1UpsertProductFeatureResponse:
      title: UpsertProductFeatureResponse is the response from updating or creating
        product feature availability
      type: object
      properties:
        productFeature:
          $ref: '#/components/schemas/v1ProductFeature'
    v1View:
      title: View
      type: object
      properties:
        viewId:
          title: The view id
          type: string
        created:
          title: The time that the view was created at
          type: string
          format: date-time
    v1Widget:
      title: "TODO(WARP-1442): add openapiv2 annotations for generated docs"
      type: object
      properties:
        widgetId:
          title: The id of the widget
          type: string
          description: "TODO(WARP-1442): replace above with openapiv2 annotations\
            \ for generated docs"
        name:
          title: "Name of the widget, e.g. \"Mountain Media Support\""
          type: string
        namespace:
          title: "The id of the namespace, e.g. \"ABC\", \"AG-123\""
          type: string
        color:
          title: "A hex color code for the widget, e.g. \"#FF0000\""
          type: string
        allowedUrls:
          title: A list of urls that the widget is allowed to be embedded on
          type: array
          items:
            type: string
        position:
          $ref: '#/components/schemas/v1WidgetPosition'
        created:
          title: The timestamp when the widget was created
          type: string
          format: date-time
        updated:
          title: The timestamp when the widget was updated
          type: string
          format: date-time
        isEnabled:
          title: Whether the webchat for the widget config is enabled
          type: boolean
        welcomeMessage:
          title: The welcome message for the webchat for the widget config
          type: string
        textColor:
          title: The primary text color for the widget
          type: string
        accentColor:
          title: Accent color for the widget secondary elements
          type: string
        accentTextColor:
          title: Accent text color for the widget secondary elements
          type: string
        skipContactCapture:
          title: Whether the widget has contact capturing enabled
          type: boolean
        additionalPromptInstructions:
          title: The prompt provided by a user to be used as additional instructions
            for the web chat AI assistant
          type: string
        assistantName:
          title: The name of the AI assistant
          type: string
        assistantAvatarUrl:
          title: The avatar URL of the AI assistant
          type: string
        embedHistory:
          title: The history of widget installations (typically the domain/hostname
            of the referer URL the widget is embedded on)
          type: array
          items:
            type: string
        hideMobileCta:
          title: Hide the popup CTA on mobile screens
          type: boolean
        customGreetingMessage:
          title: The custom greeting message that shows up as first message
          type: string
        enableGreetingMessage:
          title: Enable the greeting message from AI assistant
          type: boolean
    v1WidgetPosition:
      title: |-
        - WIDGET_POSITION_UNSPECIFIED: Unspecified widget position
         - WIDGET_POSITION_RIGHT: Widget position on the right side of the page
         - WIDGET_POSITION_LEFT: Widget position on the left side of the page
      type: string
      default: WIDGET_POSITION_UNSPECIFIED
      enum:
        - WIDGET_POSITION_UNSPECIFIED
        - WIDGET_POSITION_RIGHT
        - WIDGET_POSITION_LEFT
    v1WidgetVisit:
      title: Cookie "session" data for tracking a visitor to a website hosting the
        widget
      type: object
      properties:
        visitorId:
          title: The id of the visitor for tracking (long-lived user id of a visitor
            to a website hosting the widget)
          type: string
        visitId:
          title: The id of the visit for tracking (short-lived "session" id of a visitor
            to a website hosting the widget)
          type: string
    vendastatypesFieldMask:
      type: object
      properties:
        paths:
          type: array
          description: The set of field mask paths.
          items:
            type: string
      description: paths
x-original-swagger-version: "2.0"
