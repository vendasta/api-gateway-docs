{
  "swagger": "2.0",
  "info": {
    "title": "crm/v1/activities.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CRMService"
    },
    {
      "name": "CRMActivityService"
    },
    {
      "name": "CRMAssociationService"
    },
    {
      "name": "CRMCompanyService"
    },
    {
      "name": "CRMOpportunityService"
    },
    {
      "name": "CRMImporterService"
    },
    {
      "name": "CRMFieldSchemaService"
    },
    {
      "name": "CRMFieldLayoutService"
    },
    {
      "name": "CRMFieldSchemaCustomizationService"
    },
    {
      "name": "CRMFieldExtensionAdminService"
    },
    {
      "name": "CRMFieldExtensionService"
    },
    {
      "name": "NamespaceAdminService"
    },
    {
      "name": "CRMChangeLogService"
    },
    {
      "name": "CrmSearchPITService"
    },
    {
      "name": "Scoring"
    },
    {
      "name": "Pipelines"
    },
    {
      "name": "CRMMultiLocationActivityService"
    },
    {
      "name": "CRMMultiLocationContactService"
    },
    {
      "name": "CRMMultiLocationFieldSchemaService"
    },
    {
      "name": "CRMMultiLocationFieldLayoutService"
    },
    {
      "name": "CRMCustomObjectTypeService"
    },
    {
      "name": "CRMCustomObjectService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/crm.v1.CRMActivityService/CreateActivity": {
      "post": {
        "operationId": "CRMActivityService_CreateActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateActivityRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/DeleteActivity": {
      "post": {
        "operationId": "CRMActivityService_DeleteActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteActivityRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/GetActivityMetrics": {
      "post": {
        "operationId": "CRMActivityService_GetActivityMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetActivityMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetActivityMetricsRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/GetMultiActivity": {
      "post": {
        "operationId": "CRMActivityService_GetMultiActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiActivityRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/ListActivities": {
      "post": {
        "operationId": "CRMActivityService_ListActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListActivitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListActivitiesRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/ListActivityFieldOptions": {
      "post": {
        "summary": "ListActivityFieldOptions returns a list of values that are currently used, and only valid for string based field types.",
        "operationId": "CRMActivityService_ListActivityFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/ListActivityFilters": {
      "post": {
        "operationId": "CRMActivityService_ListActivityFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/UpdateActivity": {
      "post": {
        "operationId": "CRMActivityService_UpdateActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateActivityRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMActivityService/ValidateActivity": {
      "post": {
        "operationId": "CRMActivityService_ValidateActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateActivityRequest"
            }
          }
        ],
        "tags": [
          "CRMActivityService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/CreateAssociation": {
      "post": {
        "operationId": "CRMAssociationService_CreateAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAssociationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAssociationRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/DeleteAssociation": {
      "post": {
        "operationId": "CRMAssociationService_DeleteAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteAssociationRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/FindAssociations": {
      "post": {
        "summary": "This endpoint will query the data directly from vstore",
        "operationId": "CRMAssociationService_FindAssociations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindAssociationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FindAssociationsRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/GetMultiAssociation": {
      "post": {
        "operationId": "CRMAssociationService_GetMultiAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiAssociationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiAssociationRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/ListAssociation": {
      "post": {
        "operationId": "CRMAssociationService_ListAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssociationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAssociationsRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/ListAssociationFieldOptions": {
      "post": {
        "operationId": "CRMAssociationService_ListAssociationFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssociationFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAssociationFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/ListAssociationFilters": {
      "post": {
        "operationId": "CRMAssociationService_ListAssociationFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssociationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAssociationsRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMAssociationService/UpdateAssociation": {
      "post": {
        "operationId": "CRMAssociationService_UpdateAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAssociationRequest"
            }
          }
        ],
        "tags": [
          "CRMAssociationService"
        ]
      }
    },
    "/crm.v1.CRMChangeLogService/GetMultiChangeLog": {
      "post": {
        "operationId": "CRMChangeLogService_GetMultiChangeLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectChangeLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectChangeLogRequest"
            }
          }
        ],
        "tags": [
          "CRMChangeLogService"
        ]
      }
    },
    "/crm.v1.CRMChangeLogService/ListChangeLogs": {
      "post": {
        "operationId": "CRMChangeLogService_ListChangeLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListChangeLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListChangeLogsRequest"
            }
          }
        ],
        "tags": [
          "CRMChangeLogService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/CreateCompany": {
      "post": {
        "operationId": "CRMCompanyService_CreateCompany",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/DeleteCompany": {
      "post": {
        "operationId": "CRMCompanyService_DeleteCompany",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/GetMultiCompany": {
      "post": {
        "operationId": "CRMCompanyService_GetMultiCompany",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/ListCompanies": {
      "post": {
        "operationId": "CRMCompanyService_ListCompanies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/ListCompaniesFilters": {
      "post": {
        "operationId": "CRMCompanyService_ListCompaniesFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/ListCompanyFieldOptions": {
      "post": {
        "summary": "ListCompanyFieldsOptions returns a list of values that are currently used, and only valid for string based field types.",
        "operationId": "CRMCompanyService_ListCompanyFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/StartBulkCompanyCreate": {
      "post": {
        "operationId": "CRMCompanyService_StartBulkCompanyCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartBulkCompanyCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartBulkCompanyCreateRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/UpdateCompany": {
      "post": {
        "operationId": "CRMCompanyService_UpdateCompany",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCompanyService/ValidateCompany": {
      "post": {
        "operationId": "CRMCompanyService_ValidateCompany",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCompanyService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/CreateCustomObject": {
      "post": {
        "operationId": "CRMCustomObjectService_CreateCustomObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/DeleteCustomObject": {
      "post": {
        "operationId": "CRMCustomObjectService_DeleteCustomObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/GetMultiCustomObject": {
      "post": {
        "operationId": "CRMCustomObjectService_GetMultiCustomObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/ListCustomObjectFieldOptions": {
      "post": {
        "operationId": "CRMCustomObjectService_ListCustomObjectFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/ListCustomObjectFilters": {
      "post": {
        "operationId": "CRMCustomObjectService_ListCustomObjectFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/ListCustomObjects": {
      "post": {
        "operationId": "CRMCustomObjectService_ListCustomObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/UpdateCustomObject": {
      "post": {
        "operationId": "CRMCustomObjectService_UpdateCustomObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectService/ValidateCustomObject": {
      "post": {
        "operationId": "CRMCustomObjectService_ValidateCustomObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectTypeService/CreateCustomObjectType": {
      "post": {
        "operationId": "CRMCustomObjectTypeService_CreateCustomObjectType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomObjectTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomObjectTypeRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectTypeService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectTypeService/DeleteCustomObjectType": {
      "post": {
        "operationId": "CRMCustomObjectTypeService_DeleteCustomObjectType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomObjectTypeRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectTypeService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectTypeService/GetMultiCustomObjectType": {
      "post": {
        "operationId": "CRMCustomObjectTypeService_GetMultiCustomObjectType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCustomObjectTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCustomObjectTypeRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectTypeService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectTypeService/ListCustomObjectTypes": {
      "post": {
        "operationId": "CRMCustomObjectTypeService_ListCustomObjectTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomObjectTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCustomObjectTypesRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectTypeService"
        ]
      }
    },
    "/crm.v1.CRMCustomObjectTypeService/UpdateCustomObjectType": {
      "post": {
        "operationId": "CRMCustomObjectTypeService_UpdateCustomObjectType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCustomObjectTypeRequest"
            }
          }
        ],
        "tags": [
          "CRMCustomObjectTypeService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionAdminService/CreateFieldExtension": {
      "post": {
        "summary": "CreateFieldExtension creates and holds information about a namespace\ncontaining fields that\nshould be available for zero-to-many CRM instances",
        "operationId": "CRMFieldExtensionAdminService_CreateFieldExtension",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateFieldExtensionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFieldExtensionRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionAdminService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionAdminService/DeleteFieldExtension": {
      "post": {
        "summary": "DeleteFieldExtension won't remove namespaces that are extending other namespaces at the moment\nmostly for testing at this point",
        "operationId": "CRMFieldExtensionAdminService_DeleteFieldExtension",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteFieldExtensionRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionAdminService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionAdminService/GetMultiFieldExtension": {
      "post": {
        "operationId": "CRMFieldExtensionAdminService_GetMultiFieldExtension",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiFieldExtensionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiFieldExtensionRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionAdminService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionAdminService/UpdateFieldExtension": {
      "post": {
        "operationId": "CRMFieldExtensionAdminService_UpdateFieldExtension",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateFieldExtensionRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionAdminService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionService/AddFieldExtension": {
      "post": {
        "operationId": "CRMFieldExtensionService_AddFieldExtension",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddFieldExtensionRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionService/ListAddedExtensions": {
      "post": {
        "operationId": "CRMFieldExtensionService_ListAddedExtensions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAddedExtensionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAddedExtensionsRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionService"
        ]
      }
    },
    "/crm.v1.CRMFieldExtensionService/RemoveFieldExtension": {
      "post": {
        "operationId": "CRMFieldExtensionService_RemoveFieldExtension",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveFieldExtensionRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldExtensionService"
        ]
      }
    },
    "/crm.v1.CRMFieldLayoutService/ListFieldGroups": {
      "post": {
        "operationId": "CRMFieldLayoutService_ListFieldGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldGroupsRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldLayoutService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaCustomizationService/CreateFieldSchemaCustomization": {
      "post": {
        "operationId": "CRMFieldSchemaCustomizationService_CreateFieldSchemaCustomization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFieldSchemaCustomizationRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaCustomizationService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaCustomizationService/GetMultiFieldSchemaCustomization": {
      "post": {
        "operationId": "CRMFieldSchemaCustomizationService_GetMultiFieldSchemaCustomization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiFieldSchemaCustomizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiFieldSchemaCustomizationRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaCustomizationService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaCustomizationService/UpdateFieldSchemaCustomization": {
      "post": {
        "operationId": "CRMFieldSchemaCustomizationService_UpdateFieldSchemaCustomization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateFieldSchemaCustomizationRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaCustomizationService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaService/ArchiveFieldSchema": {
      "post": {
        "operationId": "CRMFieldSchemaService_ArchiveFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ArchiveFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaService/CreateFieldSchema": {
      "post": {
        "operationId": "CRMFieldSchemaService_CreateFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateFieldSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaService/GetMultiFieldSchema": {
      "post": {
        "operationId": "CRMFieldSchemaService_GetMultiFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiFieldSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaService/ListFieldSchema": {
      "post": {
        "operationId": "CRMFieldSchemaService_ListFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaService/UnarchiveFieldSchema": {
      "post": {
        "operationId": "CRMFieldSchemaService_UnarchiveFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UnarchiveFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMFieldSchemaService/UpdateFieldSchema": {
      "post": {
        "operationId": "CRMFieldSchemaService_UpdateFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMImporterService/GetMultiFileUploadData": {
      "post": {
        "operationId": "CRMImporterService_GetMultiFileUploadData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiFileUploadDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiFileUploadDataRequest"
            }
          }
        ],
        "tags": [
          "CRMImporterService"
        ]
      }
    },
    "/crm.v1.CRMImporterService/ImportFromFile": {
      "post": {
        "operationId": "CRMImporterService_ImportFromFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ImportFromFileRequest"
            }
          }
        ],
        "tags": [
          "CRMImporterService"
        ]
      }
    },
    "/crm.v1.CRMImporterService/ListFileUploads": {
      "post": {
        "operationId": "CRMImporterService_ListFileUploads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFileUploadsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFileUploadsRequest"
            }
          }
        ],
        "tags": [
          "CRMImporterService"
        ]
      }
    },
    "/crm.v1.CRMImporterService/MultiObjectTypeImportFromFile": {
      "post": {
        "operationId": "CRMImporterService_MultiObjectTypeImportFromFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MultiObjectTypeImportFromFileRequest"
            }
          }
        ],
        "tags": [
          "CRMImporterService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationActivityService/ListMultiLocationActivities": {
      "post": {
        "operationId": "CRMMultiLocationActivityService_ListMultiLocationActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationActivitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationActivitiesRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationActivityService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationActivityService/ListMultiLocationActivityFieldOptions": {
      "post": {
        "operationId": "CRMMultiLocationActivityService_ListMultiLocationActivityFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationActivityService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationActivityService/ListMultiLocationActivityFilters": {
      "post": {
        "operationId": "CRMMultiLocationActivityService_ListMultiLocationActivityFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationActivityService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationContactService/ListMultiLocationContactFieldOptions": {
      "post": {
        "operationId": "CRMMultiLocationContactService_ListMultiLocationContactFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationContactService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationContactService/ListMultiLocationContactFilters": {
      "post": {
        "operationId": "CRMMultiLocationContactService_ListMultiLocationContactFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationContactService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationContactService/ListMultiLocationContacts": {
      "post": {
        "operationId": "CRMMultiLocationContactService_ListMultiLocationContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationCrmObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationCrmObjectsRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationContactService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationFieldLayoutService/ListMultiLocationFieldGroups": {
      "post": {
        "operationId": "CRMMultiLocationFieldLayoutService_ListMultiLocationFieldGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldGroupsRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationFieldLayoutService"
        ]
      }
    },
    "/crm.v1.CRMMultiLocationFieldSchemaService/ListMultiLocationFieldSchema": {
      "post": {
        "operationId": "CRMMultiLocationFieldSchemaService_ListMultiLocationFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMultiLocationFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "CRMMultiLocationFieldSchemaService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/CreateOpportunity": {
      "post": {
        "operationId": "CRMOpportunityService_CreateOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/DeleteOpportunity": {
      "post": {
        "operationId": "CRMOpportunityService_DeleteOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/GetMultiOpportunity": {
      "post": {
        "operationId": "CRMOpportunityService_GetMultiOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/GetOpportunityValueSummary": {
      "post": {
        "operationId": "CRMOpportunityService_GetOpportunityValueSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityValueSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityValueSummaryRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/ListOpportunities": {
      "post": {
        "operationId": "CRMOpportunityService_ListOpportunities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/ListOpportunitiesFilters": {
      "post": {
        "operationId": "CRMOpportunityService_ListOpportunitiesFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/ListOpportunityFieldOptions": {
      "post": {
        "summary": "ListOpportunityFieldsOptions returns a list of values that are currently used, and only valid for string based field types.",
        "operationId": "CRMOpportunityService_ListOpportunityFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/UpdateOpportunity": {
      "post": {
        "operationId": "CRMOpportunityService_UpdateOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMOpportunityService/ValidateOpportunity": {
      "post": {
        "operationId": "CRMOpportunityService_ValidateOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMOpportunityService"
        ]
      }
    },
    "/crm.v1.CRMService/CreateContact": {
      "post": {
        "operationId": "CRMService_CreateContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/DeleteContact": {
      "post": {
        "operationId": "CRMService_DeleteContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/GetMultiContact": {
      "post": {
        "operationId": "CRMService_GetMultiContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/ListContactFieldOptions": {
      "post": {
        "summary": "ListContactFieldsOptions returns a list of values that are currently used, and only valid for string based field types.",
        "operationId": "CRMService_ListContactFieldOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFieldOptionsRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/ListContacts": {
      "post": {
        "operationId": "CRMService_ListContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCrmObjectsRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/ListContactsFilters": {
      "post": {
        "operationId": "CRMService_ListContactsFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFiltersRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/UpdateContact": {
      "post": {
        "operationId": "CRMService_UpdateContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CRMService/ValidateContact": {
      "post": {
        "operationId": "CRMService_ValidateContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateCrmObjectRequest"
            }
          }
        ],
        "tags": [
          "CRMService"
        ]
      }
    },
    "/crm.v1.CrmSearchPITService/SearchPointInTimeCrmObjects": {
      "post": {
        "operationId": "CrmSearchPITService_SearchPointInTimeCrmObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchPITCrmObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchPITCrmObjectsRequest"
            }
          }
        ],
        "tags": [
          "CrmSearchPITService"
        ]
      }
    },
    "/crm.v1.NamespaceAdminService/CreateParentNamespace": {
      "post": {
        "operationId": "NamespaceAdminService_CreateParentNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateParentNamespaceRequest"
            }
          }
        ],
        "tags": [
          "NamespaceAdminService"
        ]
      }
    },
    "/crm.v1.NamespaceAdminService/DeleteParentNamespace": {
      "post": {
        "operationId": "NamespaceAdminService_DeleteParentNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteParentNamespaceRequest"
            }
          }
        ],
        "tags": [
          "NamespaceAdminService"
        ]
      }
    },
    "/crm.v1.NamespaceAdminService/GetMultiParentNamespace": {
      "post": {
        "operationId": "NamespaceAdminService_GetMultiParentNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiParentNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiParentNamespaceRequest"
            }
          }
        ],
        "tags": [
          "NamespaceAdminService"
        ]
      }
    },
    "/crm.v1.Pipelines/CreatePipeline": {
      "post": {
        "operationId": "Pipelines_CreatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePipelineRequest"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ]
      }
    },
    "/crm.v1.Pipelines/DeletePipeline": {
      "post": {
        "operationId": "Pipelines_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeletePipelineRequest"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ]
      }
    },
    "/crm.v1.Pipelines/GetMultiPipeline": {
      "post": {
        "operationId": "Pipelines_GetMultiPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiPipelineRequest"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ]
      }
    },
    "/crm.v1.Pipelines/ListPipelines": {
      "post": {
        "operationId": "Pipelines_ListPipelines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPipelinesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPipelinesRequest"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ]
      }
    },
    "/crm.v1.Pipelines/UpdatePipeline": {
      "post": {
        "operationId": "Pipelines_UpdatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineRequest"
            }
          }
        ],
        "tags": [
          "Pipelines"
        ]
      }
    },
    "/crm.v1.Scoring/CreateScoringDefinition": {
      "post": {
        "operationId": "Scoring_CreateScoringDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateScoringDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateScoringDefinitionRequest"
            }
          }
        ],
        "tags": [
          "Scoring"
        ]
      }
    },
    "/crm.v1.Scoring/DeleteScoringDefinition": {
      "post": {
        "operationId": "Scoring_DeleteScoringDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteScoringDefinitionRequest"
            }
          }
        ],
        "tags": [
          "Scoring"
        ]
      }
    },
    "/crm.v1.Scoring/GetMultiScoringDefinition": {
      "post": {
        "operationId": "Scoring_GetMultiScoringDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiScoringDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiScoringDefinitionRequest"
            }
          }
        ],
        "tags": [
          "Scoring"
        ]
      }
    },
    "/crm.v1.Scoring/GetScore": {
      "post": {
        "operationId": "Scoring_GetScore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetScoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetScoreRequest"
            }
          }
        ],
        "tags": [
          "Scoring"
        ]
      }
    },
    "/crm.v1.Scoring/ListScoringDefinitions": {
      "post": {
        "operationId": "Scoring_ListScoringDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListScoringDefinitionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListScoringDefinitionsRequest"
            }
          }
        ],
        "tags": [
          "Scoring"
        ]
      }
    },
    "/crm.v1.Scoring/SetScoringDefinitionsForFieldID": {
      "post": {
        "operationId": "Scoring_SetScoringDefinitionsForFieldID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetScoringDefinitionsForFieldIDRequest"
            }
          }
        ],
        "tags": [
          "Scoring"
        ]
      }
    }
  },
  "definitions": {
    "GetOpportunityValueSummaryResponseAmounts": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/v1Currency"
        },
        "estimated": {
          "$ref": "#/definitions/v1Currency"
        }
      }
    },
    "GetOpportunityValueSummaryResponseStageAmounts": {
      "type": "object",
      "properties": {
        "stageId": {
          "type": "string"
        },
        "amounts": {
          "$ref": "#/definitions/GetOpportunityValueSummaryResponseAmounts"
        }
      }
    },
    "ValidateCrmObjectResponseFieldUniqueness": {
      "type": "string",
      "enum": [
        "FIELD_UNIQUENESS_INVALID",
        "FIELD_UNIQUENESS_NONE",
        "FIELD_UNIQUENESS_WARNING",
        "FIELD_UNIQUENESS_ENFORCED"
      ],
      "default": "FIELD_UNIQUENESS_INVALID"
    },
    "ValidateCrmObjectResponseUniquenessCheck": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "existingCrmObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueness": {
          "$ref": "#/definitions/ValidateCrmObjectResponseFieldUniqueness"
        }
      }
    },
    "ValidateCrmObjectResponseValidationErrorDetails": {
      "type": "object",
      "properties": {
        "uniquenessCheck": {
          "$ref": "#/definitions/ValidateCrmObjectResponseUniquenessCheck"
        }
      }
    },
    "ValidateCrmObjectResponseValidationErrorSeverity": {
      "type": "string",
      "enum": [
        "VALIDATION_ERROR_SEVERITY_UNKNOWN",
        "VALIDATION_ERROR_SEVERITY_INVALID",
        "VALIDATION_ERROR_SEVERITY_WARNING"
      ],
      "default": "VALIDATION_ERROR_SEVERITY_UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Activity": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivityAssociation"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "namespace": {
          "type": "string",
          "title": "This is going to be used for multi response, ignore it on requests"
        }
      }
    },
    "v1ActivityAssociation": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "crmObjectSubtype": {
          "type": "string",
          "title": "only used by custom objects at the moment"
        }
      }
    },
    "v1AddFieldExtensionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "extensionId": {
          "type": "string"
        }
      }
    },
    "v1ArchiveFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1Association": {
      "type": "object",
      "properties": {
        "associationId": {
          "type": "string"
        },
        "associationType": {
          "type": "string"
        },
        "fromId": {
          "type": "string"
        },
        "toId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Tag"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "fromCrmObjectSubtype": {
          "type": "string",
          "title": "these properties are only needed for\nassociations that include custom object types"
        },
        "toCrmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1CSVFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Header"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "size": {
          "$ref": "#/definitions/v1CSVSize"
        },
        "mappingSuggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVHeaderMapping"
          }
        }
      }
    },
    "v1CSVHeaderMapping": {
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1CSVSize": {
      "type": "object",
      "properties": {
        "totalRows": {
          "type": "string"
        },
        "isEstimate": {
          "type": "boolean"
        }
      }
    },
    "v1CreateActivityRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "activity": {
          "$ref": "#/definitions/v1Activity"
        },
        "autoPopulatePrimaryCompany": {
          "type": "boolean"
        }
      }
    },
    "v1CreateActivityResponse": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        }
      }
    },
    "v1CreateAssociationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "association": {
          "$ref": "#/definitions/v1Association"
        }
      }
    },
    "v1CreateAssociationResponse": {
      "type": "object",
      "properties": {
        "associationId": {
          "type": "string"
        }
      }
    },
    "v1CreateCrmObjectRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObject": {
          "$ref": "#/definitions/v1CrmObject"
        }
      }
    },
    "v1CreateCrmObjectResponse": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomObjectTypeRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "customObjectType": {
          "$ref": "#/definitions/v1CustomObjectType"
        }
      }
    },
    "v1CreateCustomObjectTypeResponse": {
      "type": "object",
      "properties": {
        "customObjectTypeId": {
          "type": "string"
        }
      }
    },
    "v1CreateFieldExtensionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "namespace = VA\nwill be used and stored as the owner\nof extension"
        },
        "extension": {
          "$ref": "#/definitions/v1FieldExtension"
        }
      }
    },
    "v1CreateFieldExtensionResponse": {
      "type": "object",
      "properties": {
        "extensionId": {
          "type": "string"
        }
      }
    },
    "v1CreateFieldSchemaCustomizationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "fieldSchemaCustomization": {
          "$ref": "#/definitions/v1FieldSchemaCustomization"
        }
      }
    },
    "v1CreateFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "fieldSchema": {
          "$ref": "#/definitions/v1FieldSchema"
        }
      }
    },
    "v1CreateFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1CreateParentNamespaceRequest": {
      "type": "object",
      "properties": {
        "parentNamespace": {
          "$ref": "#/definitions/v1ParentNamespace"
        }
      }
    },
    "v1CreatePipelineRequest": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        }
      }
    },
    "v1CreatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string"
        }
      }
    },
    "v1CreateScoringDefinitionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "scoringDefinition": {
          "$ref": "#/definitions/v1ScoringDefinition"
        }
      }
    },
    "v1CreateScoringDefinitionResponse": {
      "type": "object",
      "properties": {
        "scoringDefinitionId": {
          "type": "string"
        }
      }
    },
    "v1CrmChangeLogIdentifiers": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmChangeId": {
          "type": "string"
        }
      }
    },
    "v1CrmObject": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "groupId": {
          "type": "string"
        },
        "idempotencyId": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string",
          "title": "only used by CustomObject entities at this time"
        },
        "namespace": {
          "type": "string",
          "title": "This is going to be used for multi response, ignore it on requests"
        }
      }
    },
    "v1CrmObjectChangeLog": {
      "type": "object",
      "properties": {
        "crmChangeId": {
          "type": "string"
        },
        "crmChangeSubtype": {
          "type": "string"
        },
        "crmObjectId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "createdByUserId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "updatedByUserId": {
          "type": "string"
        }
      }
    },
    "v1CrmObjectSearch": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        }
      },
      "title": "CrmObjectSearch represents the possible ways to search\ndata in the CRM"
    },
    "v1CrmPITExtraFields": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        }
      }
    },
    "v1CrmSearchPITParams": {
      "type": "object",
      "properties": {
        "pitId": {
          "type": "string"
        },
        "lastSortResponse": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tiebreaker": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1Currency": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "title": "ISO 4217 currency code"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1CustomObjectType": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "customObjectTypeId": {
          "type": "string"
        },
        "singularObjectName": {
          "type": "string"
        },
        "pluralObjectName": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DateDefault": {
      "type": "string",
      "enum": [
        "DATE_DEFAULT_INVALID",
        "DATE_DEFAULT_TODAY",
        "DATE_DEFAULT_YESTERDAY",
        "DATE_DEFAULT_TOMORROW",
        "DATE_DEFAULT_THIS_WEEK",
        "DATE_DEFAULT_LAST_WEEK",
        "DATE_DEFAULT_NEXT_WEEK",
        "DATE_DEFAULT_THIS_MONTH",
        "DATE_DEFAULT_LAST_MONTH",
        "DATE_DEFAULT_NEXT_MONTH",
        "DATE_DEFAULT_THIS_QUARTER",
        "DATE_DEFAULT_LAST_QUARTER",
        "DATE_DEFAULT_NEXT_QUARTER",
        "DATE_DEFAULT_THIS_YEAR",
        "DATE_DEFAULT_LAST_YEAR",
        "DATE_DEFAULT_NEXT_YEAR"
      ],
      "default": "DATE_DEFAULT_INVALID"
    },
    "v1DeleteActivityRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectId": {
          "type": "string"
        }
      }
    },
    "v1DeleteAssociationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "associationId": {
          "type": "string"
        }
      }
    },
    "v1DeleteCrmObjectRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectId": {
          "type": "string"
        }
      }
    },
    "v1DeleteCustomObjectTypeRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "customObjectTypeId": {
          "type": "string"
        }
      }
    },
    "v1DeleteFieldExtensionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "extensionId": {
          "type": "string"
        }
      }
    },
    "v1DeleteParentNamespaceRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1DeletePipelineRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        }
      }
    },
    "v1DeleteScoringDefinitionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "scoringDefinitionId": {
          "type": "string"
        }
      }
    },
    "v1DropdownOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1DuplicateHandlingType": {
      "type": "string",
      "enum": [
        "DUPLICATE_HANDLING_TYPE_INVALID",
        "DUPLICATE_HANDLING_TYPE_SKIP",
        "DUPLICATE_HANDLING_TYPE_UPDATE"
      ],
      "default": "DUPLICATE_HANDLING_TYPE_INVALID"
    },
    "v1FieldExtension": {
      "type": "object",
      "properties": {
        "extensionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "FieldExtension holds the description of a namespace\nthat will be used to extend one or more CRM namespace instances\ne.g.:\nextension_id = standard\nname = Standard fields\ndescription = Default set of fields available for all CRMs"
    },
    "v1FieldGroup": {
      "type": "object",
      "properties": {
        "fieldGroupId": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "this can be a translation key"
        },
        "fieldIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1FieldSchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldDescription": {
          "type": "string"
        },
        "dropdownOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DropdownOption"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "archived": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "readonly": {
          "type": "boolean"
        },
        "crmObjectType": {
          "type": "string",
          "title": "crm_object_type and crm_object_subtype are only used for responses, ignoring it on requests"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1FieldSchemaCustomization": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "For create or update requests, this should be omitted."
        },
        "fieldId": {
          "type": "string"
        },
        "restrictedFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1FieldType": {
      "type": "string",
      "enum": [
        "FIELD_TYPE_INVALID",
        "FIELD_TYPE_STRING",
        "FIELD_TYPE_INTEGER",
        "FIELD_TYPE_DATE",
        "FIELD_TYPE_DROPDOWN",
        "FIELD_TYPE_CURRENCY",
        "FIELD_TYPE_EMAIL",
        "FIELD_TYPE_PHONE",
        "FIELD_TYPE_BOOLEAN",
        "FIELD_TYPE_TAG",
        "FIELD_TYPE_DATETIME",
        "FIELD_TYPE_STRING_LIST",
        "FIELD_TYPE_GEOPOINT",
        "FIELD_TYPE_FLOAT"
      ],
      "default": "FIELD_TYPE_INVALID",
      "title": "- FIELD_TYPE_DROPDOWN: FIELD_TYPE_DROPDOWN is passed as a string in the field_value\n - FIELD_TYPE_CURRENCY: FIELD_TYPE_CURRENCY is passed as a Currency message containing a code and value\n - FIELD_TYPE_EMAIL: FIELD_TYPE_EMAIL is passed as a string in the field_value\n - FIELD_TYPE_PHONE: FIELD_TYPE_PHONE is passed as a string in the field_value\n - FIELD_TYPE_TAG: FIELD_TYPE_TAG is passed as a StringList in the field_value\n - FIELD_TYPE_GEOPOINT: FIELD_TYPE_GEOPOINT is passed as a Geopoint message containing lat and long fields in the field_value"
    },
    "v1FieldValue": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "nullValue": {
          "type": "string"
        },
        "integerValue": {
          "type": "string",
          "format": "int64"
        },
        "stringValue": {
          "type": "string"
        },
        "dateValue": {
          "type": "string",
          "format": "date-time"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "stringValues": {
          "$ref": "#/definitions/v1StringList"
        },
        "geopointValue": {
          "$ref": "#/definitions/v1Geopoint"
        },
        "floatValue": {
          "type": "number",
          "format": "float"
        },
        "phoneFieldValues": {
          "$ref": "#/definitions/v1PhoneFields"
        },
        "currencyValue": {
          "$ref": "#/definitions/v1Currency"
        }
      },
      "description": "On GetMulti (or any future reading operation) both\nfield_id and external_id will be returned.",
      "title": "FieldValue represents one of the field of an crm_object (Contact, Company,\netc...) On Create/Update we need the field_id or external_id filled, with the\nfield_id taking precedence over external_id"
    },
    "v1Filter": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/v1FilterOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterValue"
          },
          "title": "This is repeated to support operations that take zero or more than one value.\nFor example\n   isEmpty()\n   isAnyOf(a, b, c)\n   isBetween(date1, date2)"
        },
        "floatTolerance": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1FilterDefinition": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "hasFilterOptions": {
          "type": "boolean",
          "description": "If set, the filter has specific options that may be shown in a dropdown."
        },
        "fieldName": {
          "type": "string"
        },
        "typeV2": {
          "$ref": "#/definitions/v1FilterType"
        },
        "supportedOperatorsV2": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FilterOperator"
          }
        }
      }
    },
    "v1FilterGroup": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/v1FilterGroupOperator"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Filter"
          }
        }
      }
    },
    "v1FilterGroupOperator": {
      "type": "string",
      "enum": [
        "FILTER_GROUP_OPERATOR_INVALID",
        "FILTER_GROUP_OPERATOR_AND",
        "FILTER_GROUP_OPERATOR_OR"
      ],
      "default": "FILTER_GROUP_OPERATOR_INVALID"
    },
    "v1FilterOperator": {
      "type": "string",
      "enum": [
        "FILTER_OPERATOR_INVALID",
        "FILTER_OPERATOR_IS_EMPTY",
        "FILTER_OPERATOR_IS_NOT_EMPTY",
        "FILTER_OPERATOR_IS",
        "FILTER_OPERATOR_IS_NOT",
        "FILTER_OPERATOR_IS_ANY",
        "FILTER_OPERATOR_IS_NOT_ANY",
        "FILTER_OPERATOR_IS_ALL",
        "FILTER_OPERATOR_IS_NOT_ALL",
        "FILTER_OPERATOR_CONTAINS",
        "FILTER_OPERATOR_DOES_NOT_CONTAIN",
        "FILTER_OPERATOR_IS_EQUAL_TO",
        "FILTER_OPERATOR_IS_NOT_EQUAL_TO",
        "FILTER_OPERATOR_IS_GREATER_THAN",
        "FILTER_OPERATOR_IS_GREATER_THAN_OR_EQUAL_TO",
        "FILTER_OPERATOR_IS_LESS_THAN",
        "FILTER_OPERATOR_IS_LESS_THAN_OR_EQUAL_TO",
        "FILTER_OPERATOR_IS_BEFORE",
        "FILTER_OPERATOR_IS_BEFORE_OR_ON",
        "FILTER_OPERATOR_IS_AFTER",
        "FILTER_OPERATOR_IS_AFTER_OR_ON",
        "FILTER_OPERATOR_IS_BETWEEN",
        "FILTER_OPERATOR_IS_NOT_BETWEEN",
        "FILTER_OPERATOR_IS_VALID",
        "FILTER_OPERATOR_IS_NOT_VALID"
      ],
      "default": "FILTER_OPERATOR_INVALID"
    },
    "v1FilterType": {
      "type": "string",
      "enum": [
        "FILTER_TYPE_INVALID",
        "FILTER_TYPE_STRING",
        "FILTER_TYPE_INTEGER",
        "FILTER_TYPE_DATE",
        "FILTER_TYPE_FLOAT",
        "FILTER_TYPE_BOOLEAN",
        "FILTER_TYPE_TAG",
        "FILTER_TYPE_PHONE"
      ],
      "default": "FILTER_TYPE_INVALID"
    },
    "v1FilterValue": {
      "type": "object",
      "properties": {
        "boolean": {
          "type": "boolean"
        },
        "integer": {
          "type": "string",
          "format": "int64"
        },
        "float": {
          "type": "number",
          "format": "float"
        },
        "string": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dateDefault": {
          "$ref": "#/definitions/v1DateDefault"
        },
        "phone": {
          "$ref": "#/definitions/v1Phone"
        }
      }
    },
    "v1FindAssociationsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "associationType": {
          "type": "string"
        },
        "fromIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "toIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1FindAssociationsResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Association"
          }
        }
      }
    },
    "v1Geopoint": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1GetActivityMetricsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "metricTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1MetricType"
          }
        },
        "filters": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1GetActivityMetricsResponse": {
      "type": "object",
      "properties": {
        "ownerMetricCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OwnerMetricCounts"
          }
        },
        "summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricSummary"
          }
        }
      }
    },
    "v1GetMultiActivityRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "crm_object_ids of activities, not the associated object"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1GetMultiActivityResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        }
      }
    },
    "v1GetMultiAssociationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "associationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiAssociationResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Association"
          }
        },
        "statusCode": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "HTTP style status codes for each association_id in the request, usually 200, 403, or 404"
        }
      }
    },
    "v1GetMultiCrmObjectChangeLogRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmChangelogIdentifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmChangeLogIdentifiers"
          }
        },
        "crmObjectType": {
          "type": "string"
        }
      }
    },
    "v1GetMultiCrmObjectChangeLogResponse": {
      "type": "object",
      "properties": {
        "changeLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObjectChangeLog"
          }
        }
      }
    },
    "v1GetMultiCrmObjectRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        },
        "projectionFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ObjectProjectionFilter"
          }
        }
      }
    },
    "v1GetMultiCrmObjectResponse": {
      "type": "object",
      "properties": {
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        },
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        }
      }
    },
    "v1GetMultiCustomObjectTypeRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "customObjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiCustomObjectTypeResponse": {
      "type": "object",
      "properties": {
        "customObjectTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomObjectType"
          }
        }
      }
    },
    "v1GetMultiFieldExtensionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "extensionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiFieldExtensionResponse": {
      "type": "object",
      "properties": {
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldExtension"
          }
        }
      }
    },
    "v1GetMultiFieldSchemaCustomizationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "fieldId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiFieldSchemaCustomizationResponse": {
      "type": "object",
      "properties": {
        "fieldSchemaCustomizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchemaCustomization"
          }
        }
      }
    },
    "v1GetMultiFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "fieldId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        }
      }
    },
    "v1GetMultiFileUploadDataRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "filename": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiFileUploadDataResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVFile"
          }
        }
      }
    },
    "v1GetMultiParentNamespaceRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiParentNamespaceResponse": {
      "type": "object",
      "properties": {
        "parentNamespace": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ParentNamespace"
          }
        }
      }
    },
    "v1GetMultiPipelineRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiPipelineResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pipeline"
          }
        }
      }
    },
    "v1GetMultiScoringDefinitionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "scoringDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiScoringDefinitionResponse": {
      "type": "object",
      "properties": {
        "scoringDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringDefinition"
          }
        }
      }
    },
    "v1GetOpportunityValueSummaryRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1GetOpportunityValueSummaryResponse": {
      "type": "object",
      "properties": {
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetOpportunityValueSummaryResponseStageAmounts"
          }
        },
        "pipeline": {
          "$ref": "#/definitions/GetOpportunityValueSummaryResponseAmounts"
        }
      }
    },
    "v1GetScoreRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "scoringIdentifier": {
          "$ref": "#/definitions/v1ScoringIdentifier"
        }
      }
    },
    "v1GetScoreResponse": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1Header": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sampleData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ImportFromFileRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "mappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVHeaderMapping"
          }
        },
        "duplicateHandlingType": {
          "$ref": "#/definitions/v1DuplicateHandlingType"
        }
      }
    },
    "v1ListActivitiesRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectId": {
          "type": "string",
          "title": "the CRM object to list activities for"
        },
        "crmObjectType": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "search": {
          "$ref": "#/definitions/v1CrmObjectSearch"
        },
        "sortBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortBy"
          }
        },
        "filtersV2": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1ListActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListAddedExtensionsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        }
      }
    },
    "v1ListAddedExtensionsResponse": {
      "type": "object",
      "properties": {
        "extensionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListAssociationFieldOptionsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "associationType": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1ListAssociationFieldOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListAssociationsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "filtersV2": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1ListAssociationsResponse": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Association"
          }
        },
        "statusCode": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "HTTP style status codes for each association_id in the request, usually 200, 403, or 404"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListChangeLogsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "sortBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortBy"
          }
        },
        "crmObjectType": {
          "type": "string"
        },
        "filtersV2": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1ListChangeLogsResponse": {
      "type": "object",
      "properties": {
        "changeLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObjectChangeLog"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListCrmObjectsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "search": {
          "$ref": "#/definitions/v1CrmObjectSearch"
        },
        "sortBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortBy"
          }
        },
        "filtersV2": {
          "$ref": "#/definitions/v1FilterGroup"
        },
        "projectionFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ObjectProjectionFilter"
          }
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1ListCrmObjectsResponse": {
      "type": "object",
      "properties": {
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListCustomObjectTypesRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListCustomObjectTypesResponse": {
      "type": "object",
      "properties": {
        "customObjectTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomObjectType"
          }
        }
      }
    },
    "v1ListFieldGroupsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        }
      }
    },
    "v1ListFieldGroupsResponse": {
      "type": "object",
      "properties": {
        "fieldGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldGroup"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListFieldOptionsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "searchTerm": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1ListFieldOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "filters": {
          "$ref": "#/definitions/v1ListFieldSchemaRequestFilters"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1ListFieldSchemaRequestFilters": {
      "type": "object",
      "properties": {
        "onlyArchived": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace may be used to filter the results for specific namespaces that are included automatically or through field extensions."
        }
      }
    },
    "v1ListFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListFileUploadsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1ListFileUploadsResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVFile"
          }
        }
      }
    },
    "v1ListFiltersRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "searchTerm": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1ListFiltersResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterDefinition"
          }
        }
      }
    },
    "v1ListMultiLocationActivitiesRequest": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multiLocationPath": {
          "type": "string"
        },
        "crmObjectId": {
          "type": "string",
          "title": "the CRM object to list multi location activities for"
        },
        "crmObjectType": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "search": {
          "$ref": "#/definitions/v1CrmObjectSearch"
        },
        "sortBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortBy"
          }
        },
        "filtersV2": {
          "$ref": "#/definitions/v1FilterGroup"
        }
      }
    },
    "v1ListMultiLocationActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activity"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationCrmObjectsRequest": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multiLocationPath": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "search": {
          "$ref": "#/definitions/v1CrmObjectSearch"
        },
        "sortBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortBy"
          }
        },
        "filtersV2": {
          "$ref": "#/definitions/v1FilterGroup"
        },
        "projectionFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ObjectProjectionFilter"
          }
        },
        "crmObjectSubtype": {
          "type": "string"
        }
      }
    },
    "v1ListMultiLocationCrmObjectsResponse": {
      "type": "object",
      "properties": {
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationFieldGroupsRequest": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multiLocationPath": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        }
      }
    },
    "v1ListMultiLocationFieldGroupsResponse": {
      "type": "object",
      "properties": {
        "fieldGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldGroup"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationFieldOptionsRequest": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multiLocationPath": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1ListMultiLocationFieldOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListMultiLocationFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multiLocationPath": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "filters": {
          "$ref": "#/definitions/v1ListMultiLocationFieldSchemaRequestFilters"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1ListMultiLocationFieldSchemaRequestFilters": {
      "type": "object",
      "properties": {
        "onlyArchived": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ListMultiLocationFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldSchema"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMultiLocationFiltersRequest": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multiLocationPath": {
          "type": "string"
        },
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "v1ListMultiLocationFiltersResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterDefinition"
          }
        }
      }
    },
    "v1ListOptions": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        }
      }
    },
    "v1ListPipelinesRequest": {
      "type": "object",
      "properties": {
        "listOptions": {
          "$ref": "#/definitions/v1ListOptions"
        }
      }
    },
    "v1ListPipelinesResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pipeline"
          }
        }
      }
    },
    "v1ListScoringDefinitionsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1ListScoringDefinitionsResponse": {
      "type": "object",
      "properties": {
        "scoringDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringDefinition"
          }
        }
      }
    },
    "v1MetricCount": {
      "type": "object",
      "properties": {
        "metricType": {
          "$ref": "#/definitions/v1MetricType"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1MetricSummary": {
      "type": "object",
      "properties": {
        "metricType": {
          "$ref": "#/definitions/v1MetricType"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "average": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1MetricType": {
      "type": "string",
      "enum": [
        "METRIC_TYPE_INVALID",
        "METRIC_TYPE_OUTBOUND_CALLS",
        "METRIC_TYPE_INBOUND_CALLS",
        "METRIC_TYPE_EMAILS_SENT",
        "METRIC_TYPE_EMAILS_RECEIVED",
        "METRIC_TYPE_MEETINGS"
      ],
      "default": "METRIC_TYPE_INVALID"
    },
    "v1MultiObjectTypeImportFromFileRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "mappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CSVHeaderMapping"
          }
        },
        "duplicateHandlingType": {
          "$ref": "#/definitions/v1DuplicateHandlingType"
        }
      }
    },
    "v1ObjectProjectionFilter": {
      "type": "object",
      "properties": {
        "filterType": {
          "$ref": "#/definitions/v1ProjectionFilterType"
        },
        "fromFieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "toFieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1OwnerMetricCounts": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string"
        },
        "metricCounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricCount"
          }
        }
      }
    },
    "v1ParentNamespace": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "parentNamespace": {
          "type": "string"
        }
      }
    },
    "v1Phone": {
      "type": "object",
      "properties": {
        "isoCountryCode": {
          "type": "string",
          "title": "ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada"
        },
        "nationalNumber": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        }
      },
      "title": "This follows the E164 international standard specification for phone numbers"
    },
    "v1PhoneFields": {
      "type": "object",
      "properties": {
        "isoCountryCode": {
          "type": "string",
          "title": "ISO country code is the 2 or 3 letter code for the country, example 'CA' for Canada"
        },
        "nationalNumber": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "e164Compliant": {
          "type": "boolean"
        }
      }
    },
    "v1Pipeline": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stage"
          }
        }
      }
    },
    "v1ProjectionFilterType": {
      "type": "string",
      "enum": [
        "PROJECTION_FILTER_TYPE_INVALID",
        "PROJECTION_FILTER_TYPE_FIELD_TYPE",
        "PROJECTION_FILTER_TYPE_INCLUDE_DELETED"
      ],
      "default": "PROJECTION_FILTER_TYPE_INVALID"
    },
    "v1RemoveFieldExtensionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "extensionId": {
          "type": "string"
        }
      }
    },
    "v1ScoringDefinition": {
      "type": "object",
      "properties": {
        "crmObjectType": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "title": "Deprecated: Use field_id instead"
        },
        "scoringRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringRule"
          }
        },
        "contribution": {
          "type": "number",
          "format": "float"
        },
        "scoringDefinitionId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1ScoringIdentifier": {
      "type": "object",
      "properties": {
        "crmObjectId": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "title": "Label refers to a custom field ID that represents a unique score such as \"Lead Score\" or \"Account Health Score\"\nDeprecated: Use field_id instead"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1ScoringObjectRule": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/v1Filter"
        }
      }
    },
    "v1ScoringRule": {
      "type": "object",
      "properties": {
        "crmObjectType": {
          "type": "string"
        },
        "objectRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringObjectRule"
          }
        }
      }
    },
    "v1SearchPITCrmObjectsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "search": {
          "$ref": "#/definitions/v1CrmObjectSearch"
        },
        "sortBy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortBy"
          }
        },
        "pitParams": {
          "$ref": "#/definitions/v1CrmSearchPITParams"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "filtersV3": {
          "$ref": "#/definitions/v1FilterGroup"
        },
        "checkAccessOnly": {
          "type": "boolean"
        },
        "extraFieldId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filterGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterGroup"
          },
          "title": "All filter groups (these and filters_v3) will be AND'd together in the final query"
        }
      }
    },
    "v1SearchPITCrmObjectsResponse": {
      "type": "object",
      "properties": {
        "crmObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pitParams": {
          "$ref": "#/definitions/v1CrmSearchPITParams"
        },
        "hasMore": {
          "type": "boolean"
        },
        "extraFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmPITExtraFields"
          }
        }
      }
    },
    "v1SetScoringDefinitionsForFieldIDRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "scoringDefinitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScoringDefinition"
          }
        }
      }
    },
    "v1SortBy": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection"
        }
      }
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_INVALID",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_INVALID"
    },
    "v1Stage": {
      "type": "object",
      "properties": {
        "stageId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "filterGroup": {
          "$ref": "#/definitions/v1FilterGroup"
        },
        "mutations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldValue"
          }
        }
      }
    },
    "v1StartBulkCompanyCreateRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "searchTerm": {
          "type": "string"
        },
        "crmObjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CrmObject"
          }
        }
      }
    },
    "v1StartBulkCompanyCreateResponse": {
      "type": "object",
      "properties": {
        "filterTag": {
          "type": "string"
        }
      }
    },
    "v1StringList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Tag": {
      "type": "object",
      "properties": {
        "tagValue": {
          "type": "string"
        }
      }
    },
    "v1UnarchiveFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      }
    },
    "v1UpdateActivityRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "activity": {
          "$ref": "#/definitions/v1Activity"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "a list of field identifiers that need to be updated"
        }
      }
    },
    "v1UpdateAssociationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "associationId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Tag"
          }
        }
      }
    },
    "v1UpdateCrmObjectRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObject": {
          "$ref": "#/definitions/v1CrmObject"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "a list of field identifiers that need to be updated"
        }
      }
    },
    "v1UpdateCustomObjectTypeRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "customObjectType": {
          "$ref": "#/definitions/v1CustomObjectType"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdateFieldExtensionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "extension": {
          "$ref": "#/definitions/v1FieldExtension"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdateFieldSchemaCustomizationRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "fieldSchemaCustomization": {
          "$ref": "#/definitions/v1FieldSchemaCustomization"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdateFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "fieldSchema": {
          "$ref": "#/definitions/v1FieldSchema"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdatePipelineRequest": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1ValidateActivityRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "activity": {
          "$ref": "#/definitions/v1Activity"
        }
      }
    },
    "v1ValidateActivityResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidateActivityResponseValidationError"
          }
        }
      }
    },
    "v1ValidateActivityResponseValidationError": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "title": "this can be a translation key"
        }
      }
    },
    "v1ValidateCrmObjectRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObject": {
          "$ref": "#/definitions/v1CrmObject"
        }
      }
    },
    "v1ValidateCrmObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidateCrmObjectResponseValidationError"
          }
        }
      }
    },
    "v1ValidateCrmObjectResponseValidationError": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "title": "this can be a translation key"
        },
        "severity": {
          "$ref": "#/definitions/ValidateCrmObjectResponseValidationErrorSeverity"
        },
        "details": {
          "$ref": "#/definitions/ValidateCrmObjectResponseValidationErrorDetails"
        }
      }
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    },
    "vendastatypesPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "vendastatypesPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results. This is not supported on all paged apis and will be 0 if it is not supported"
        }
      }
    }
  }
}
