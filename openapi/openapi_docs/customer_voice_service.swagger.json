{
  "swagger": "2.0",
  "info": {
    "title": "customer_voice_service/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CustomerVoice"
    },
    {
      "name": "CampaignService"
    },
    {
      "name": "ListingsService"
    },
    {
      "name": "Twilio"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customervoice.v1.CampaignService/Get": {
      "post": {
        "summary": "Gets a Campaign",
        "operationId": "CampaignService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/customervoice.v1.CampaignService/Upsert": {
      "post": {
        "summary": "Creates or updates a Campaign",
        "operationId": "CampaignService_Upsert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertCampaignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/CreateCustomer": {
      "post": {
        "summary": "Creates a Customer to a business",
        "operationId": "CustomerVoice_CreateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/CreateCustomerAndSendDefaultReviewRequest": {
      "post": {
        "summary": "Create a customer and send a review request using the default template",
        "operationId": "CustomerVoice_CreateCustomerAndSendDefaultReviewRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerAndSendDefaultReviewRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to create a Customer and send a review request with default template.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerAndSendDefaultReviewRequestRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/CreateMultiCustomers": {
      "post": {
        "summary": "Creates one or more Customers to a business",
        "operationId": "CustomerVoice_CreateMultiCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateMultiCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateMultiCustomerRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/CreateReviewRequestEvent": {
      "post": {
        "summary": "Create a request for review",
        "operationId": "CustomerVoice_CreateReviewRequestEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateReviewRequestEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateReviewRequestEventRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/CustomerExists": {
      "post": {
        "summary": "Check if customer already exists or not",
        "operationId": "CustomerVoice_CustomerExists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CustomerExistsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CustomerExistsRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/DeleteCustomer": {
      "post": {
        "summary": "Deletes a customer",
        "operationId": "CustomerVoice_DeleteCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomerRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/GetCustomer": {
      "post": {
        "summary": "Gets a customer",
        "operationId": "CustomerVoice_GetCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCustomerRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/GetMultiCustomerForBusiness": {
      "post": {
        "summary": "Gets one or more customers",
        "operationId": "CustomerVoice_GetMultiCustomerForBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiCustomerForBusinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiCustomerForBusinessRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/GetQRCodeForURL": {
      "post": {
        "summary": "Get a QR code for a url",
        "operationId": "CustomerVoice_GetQRCodeForURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetQRCodeForURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetQRCodeForURLRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/ListBusinessTags": {
      "post": {
        "summary": "List tags on business' customers",
        "operationId": "CustomerVoice_ListBusinessTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBusinessTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListBusinessTagsRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/ListCustomers": {
      "post": {
        "summary": "Returns a list of Customers for a business",
        "operationId": "CustomerVoice_ListCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCustomersRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/ListOrigins": {
      "post": {
        "summary": "List origins on business' customers",
        "operationId": "CustomerVoice_ListOrigins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOriginsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListOriginsRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/ListReviewRequestEvents": {
      "post": {
        "summary": "List review request events",
        "operationId": "CustomerVoice_ListReviewRequestEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListReviewRequestEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListReviewRequestEventRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/MultilocationSendReviewRequestsCSV": {
      "post": {
        "summary": "Creates multiple customers from csv file and sends review requests",
        "operationId": "CustomerVoice_MultilocationSendReviewRequestsCSV",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MultilocationSendReviewRequestsCSVRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/SendReviewRequestEmail": {
      "post": {
        "summary": "Sends an email review request to a Customer",
        "operationId": "CustomerVoice_SendReviewRequestEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendReviewRequestEmailRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/SendReviewRequestSms": {
      "post": {
        "summary": "Sends a SMS review request to a Customer",
        "operationId": "CustomerVoice_SendReviewRequestSms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendReviewRequestSmsRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/SendReviewRequestToDefaultTemplate": {
      "post": {
        "summary": "Send either an email, or sms to a Customer based on their default template",
        "operationId": "CustomerVoice_SendReviewRequestToDefaultTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendReviewRequestToDefaultTemplateRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/SendSMS": {
      "post": {
        "summary": "Send a sms",
        "operationId": "CustomerVoice_SendSMS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendSMSRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.CustomerVoice/UpdateCustomer": {
      "post": {
        "summary": "Updates a customer",
        "operationId": "CustomerVoice_UpdateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCustomerRequest"
            }
          }
        ],
        "tags": [
          "CustomerVoice"
        ]
      }
    },
    "/customervoice.v1.ListingsService/GetReviewSourceSettings": {
      "post": {
        "summary": "Get review source settings for account group",
        "operationId": "ListingsService_GetReviewSourceSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetReviewSourceSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetReviewSourceSettingsRequest"
            }
          }
        ],
        "tags": [
          "ListingsService"
        ]
      }
    },
    "/customervoice.v1.Twilio/StartTrustHubRegistration": {
      "post": {
        "summary": "starts a trust hub registration workflow for the given account group id",
        "operationId": "Twilio_StartTrustHubRegistration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartTrustHubRegistrationRequest"
            }
          }
        ],
        "tags": [
          "Twilio"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Attribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "A key/value attribute"
    },
    "v1AutomationType": {
      "type": "string",
      "enum": [
        "AUTOMATION_TYPE_NONE",
        "AUTOMATION_TYPE_REVIEW_REMINDER"
      ],
      "default": "AUTOMATION_TYPE_NONE",
      "title": "- AUTOMATION_TYPE_NONE: No automation\n - AUTOMATION_TYPE_REVIEW_REMINDER: Send an automated reminder if the previous review request has not been responded to"
    },
    "v1Campaign": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The id of the account group this campaign belongs to"
        },
        "automationType": {
          "$ref": "#/definitions/v1AutomationType",
          "title": "The type of review requst automation eg. review_reminder"
        },
        "enabled": {
          "type": "boolean",
          "title": "Whether the automation is enabled to run"
        },
        "inputParams": {
          "$ref": "#/definitions/v1InputParams",
          "title": "The automation configurations set by the business"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the campaign was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time the campaign was last modified"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The time the campaign was deleted. Will be nil if the campaign has not been deleted"
        }
      }
    },
    "v1CreateCustomerAndSendDefaultReviewRequestRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The customer to create"
        },
        "responseToken": {
          "type": "string",
          "description": "The reCaptcha response token."
        }
      },
      "description": "Request to create a Customer and send a review request with default template."
    },
    "v1CreateCustomerAndSendDefaultReviewRequestResponse": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The customer that was created"
        }
      },
      "description": "Response from creating a Customer and sending a review request with default template."
    },
    "v1CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business to create the Customer for"
        },
        "firstName": {
          "type": "string",
          "title": "The first name of the Customer"
        },
        "lastName": {
          "type": "string",
          "title": "The last name of the Customer"
        },
        "phone": {
          "type": "string",
          "title": "The phone number of the Customer"
        },
        "email": {
          "type": "string",
          "title": "The email address of the Customer"
        },
        "employeeFirstName": {
          "type": "string",
          "title": "The first name of an employee"
        },
        "employeeLastName": {
          "type": "string",
          "title": "The last name of an employee"
        },
        "tag": {
          "type": "string",
          "title": "A descriptive tag for the Customer"
        },
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The customer to create"
        }
      },
      "title": "Request to create a Customer"
    },
    "v1CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The unique id of the customer"
        }
      },
      "title": "Response message for creating a Customer"
    },
    "v1CreateError": {
      "type": "string",
      "enum": [
        "CREATE_ERROR_NO_ERRORS",
        "CREATE_ERROR_EMAIL_OR_PHONE_REQUIRED",
        "CREATE_ERROR_INVALID_EMAIL",
        "CREATE_ERROR_INVALID_PHONE",
        "CREATE_ERROR_INVALID_FIRST_NAME",
        "CREATE_ERROR_INVALID_LAST_NAME",
        "CREATE_ERROR_INVALID_COUNTRY",
        "CREATE_ERROR_INVALID_STATE"
      ],
      "default": "CREATE_ERROR_NO_ERRORS",
      "title": "- CREATE_ERROR_NO_ERRORS: Possible creation errors"
    },
    "v1CreateMultiCustomerError": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "int64",
          "title": "Index of the customer that has errors"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateError"
          },
          "title": "Errors for that specific customer"
        }
      }
    },
    "v1CreateMultiCustomerRequest": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "Customers to create"
        },
        "businessId": {
          "type": "string",
          "title": "Business to create the customers for"
        }
      }
    },
    "v1CreateMultiCustomerResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "Customers created"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateMultiCustomerError"
          },
          "title": "Validation errors"
        }
      }
    },
    "v1CreateReviewRequestEventRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The unique ID of the business"
        },
        "customerRequestEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerRequestEvent"
          },
          "title": "The customers whose reviews have been requested"
        }
      },
      "title": "Request to create a review request"
    },
    "v1CreateReviewRequestEventResponse": {
      "type": "object",
      "properties": {
        "reviewRequestEvent": {
          "$ref": "#/definitions/v1ReviewRequestEvent",
          "title": "The created request for review"
        }
      },
      "title": "Response from creating a review request"
    },
    "v1Customer": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "A unique id for the Customer"
        },
        "businessId": {
          "type": "string",
          "title": "The business this Customer belongs to"
        },
        "firstName": {
          "type": "string",
          "title": "The first name of the Customer"
        },
        "lastName": {
          "type": "string",
          "title": "The last name of the Customer"
        },
        "phone": {
          "type": "string",
          "title": "The phone number of the Customer"
        },
        "email": {
          "type": "string",
          "title": "The email address of the Customer"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the Customer was created"
        },
        "emailRequestLastDateSent": {
          "type": "string",
          "format": "date-time",
          "title": "The time the Customer was last sent an email"
        },
        "smsRequestLastDateSent": {
          "type": "string",
          "format": "date-time",
          "title": "The time the Customer was last sent a SMS"
        },
        "emailReviewRequestStatus": {
          "$ref": "#/definitions/v1ReviewRequestStatus",
          "title": "The most recent status of an email review request"
        },
        "smsReviewRequestStatus": {
          "$ref": "#/definitions/v1ReviewRequestStatus",
          "title": "The most recent status of a SMS review request"
        },
        "emailLastClickedSource": {
          "type": "string",
          "format": "int64",
          "title": "The most recent source clicked in an email review request"
        },
        "employeeFirstName": {
          "type": "string",
          "title": "The first name of an employee"
        },
        "employeeLastName": {
          "type": "string",
          "title": "The last name of an employee"
        },
        "tag": {
          "type": "string",
          "title": "A user-defined tag for this Customer"
        },
        "review": {
          "$ref": "#/definitions/v1CustomerReview",
          "title": "The review the Customer left"
        },
        "smsStatusCode": {
          "$ref": "#/definitions/v1SmsStatusCode",
          "title": "The status code of the SMS review request"
        },
        "address": {
          "type": "string",
          "title": "The address of the customer"
        },
        "city": {
          "type": "string",
          "title": "The city of the customer"
        },
        "state": {
          "type": "string",
          "title": "The state/province of the customer"
        },
        "country": {
          "type": "string",
          "title": "The country of the customer"
        },
        "smsLastClickedSource": {
          "type": "string",
          "format": "int64",
          "title": "The most recent source clicked in a sms review request"
        },
        "origin": {
          "type": "string",
          "title": "App the customer originated from"
        }
      },
      "title": "Customer and request status information"
    },
    "v1CustomerExistsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "email": {
          "type": "string",
          "title": "An email to lookup the customer with"
        },
        "phone": {
          "type": "string",
          "title": "A phone to lookup the customer with"
        }
      },
      "title": "Check if customer exists by email or phone"
    },
    "v1CustomerExistsResponse": {
      "type": "object",
      "properties": {
        "customerExists": {
          "type": "boolean",
          "title": "Whether the customer exists or not"
        }
      }
    },
    "v1CustomerFilters": {
      "type": "object",
      "properties": {
        "emailStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ReviewRequestStatus"
          },
          "title": "Filter by email review request status"
        },
        "smsStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ReviewRequestStatus"
          },
          "title": "Filter by SMS review request status"
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter by tags on Customers"
        },
        "created": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Date range filter for created date"
        },
        "lastRequested": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Date range filter for last review requested date"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter by origins on Customers"
        },
        "negateTags": {
          "type": "boolean",
          "title": "Negate the tag filter"
        },
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Filter by customer ids"
        }
      },
      "title": "Options for querying with filters"
    },
    "v1CustomerRequestEvent": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The customer's unique ID"
        },
        "requestEventType": {
          "$ref": "#/definitions/v1RequestEventType",
          "title": "The type of review requested"
        }
      },
      "title": "An event for a customer request"
    },
    "v1CustomerReview": {
      "type": "object",
      "properties": {
        "starRating": {
          "type": "string",
          "format": "int64",
          "title": "The star rating of the review"
        },
        "reviewUrl": {
          "type": "string",
          "title": "The link to the review"
        }
      },
      "title": "Information of the review left by the Customer"
    },
    "v1DateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time",
          "title": "Start date of range"
        },
        "endRange": {
          "type": "string",
          "format": "date-time",
          "title": "End date of range"
        }
      },
      "title": "The start and end of date range (inclusive)"
    },
    "v1DeleteCustomerRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The id of the customer to delete"
        },
        "businessId": {
          "type": "string",
          "title": "The business of the customer"
        }
      },
      "title": "Delete a customer"
    },
    "v1GetCampaignRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The id of the account group the campaign belongs to"
        },
        "automationType": {
          "$ref": "#/definitions/v1AutomationType",
          "title": "The automation type of the campaign"
        }
      },
      "title": "Request to get the Campaign"
    },
    "v1GetCampaignResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1Campaign",
          "title": "Campaign to get"
        }
      }
    },
    "v1GetCustomerRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The id of the customer to get"
        },
        "businessId": {
          "type": "string",
          "title": "The business of the customer"
        }
      },
      "title": "Gets a customer"
    },
    "v1GetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The requested customer"
        }
      }
    },
    "v1GetMultiCustomerForBusinessRequest": {
      "type": "object",
      "properties": {
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The ids of the customers to get"
        },
        "businessId": {
          "type": "string",
          "title": "The business id of the customers"
        }
      },
      "title": "Gets one or more customers"
    },
    "v1GetMultiCustomerForBusinessResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "The requested customers"
        }
      }
    },
    "v1GetQRCodeForURLRequest": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The url to generate a QR code for"
        }
      },
      "title": "Request to get a QR code for a url"
    },
    "v1GetQRCodeForURLResponse": {
      "type": "object",
      "properties": {
        "qrCode": {
          "type": "string",
          "title": "The base64 encoded image of the qr code"
        }
      },
      "title": "Response to get a QR code for a url"
    },
    "v1GetReviewSourceSettingsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group id the review sources belong to"
        }
      },
      "title": "Request to get review source settings for an account group"
    },
    "v1GetReviewSourceSettingsResponse": {
      "type": "object",
      "properties": {
        "reviewSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewSources"
          },
          "title": "List of review sources"
        },
        "selectedSourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of source ids selected for preferred review sites"
        }
      },
      "title": "Response to get review source settings for an account group"
    },
    "v1HeaderMapping": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "employeeFirstName": {
          "type": "string"
        },
        "employeeLastName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "title": "Mapping headers in the csv file to match each field to whatever it's named"
    },
    "v1InputParams": {
      "type": "object",
      "properties": {
        "emailTemplateId": {
          "type": "string",
          "title": "The id of the email template to use for the automated review request"
        },
        "smsTemplateId": {
          "type": "string",
          "title": "The id of the SMS template to use for the automated review request"
        },
        "maxReviewReminders": {
          "type": "string",
          "format": "int64",
          "title": "The max number of review reminders sent for review_reminder type automations"
        },
        "reviewReminderWaitDays": {
          "type": "string",
          "format": "int64",
          "title": "The number of days between 1 and 7 to wait between sending review reminders"
        }
      }
    },
    "v1ListBusinessTagsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id"
        }
      },
      "title": "Lists tags on all customers for a business"
    },
    "v1ListBusinessTagsResponse": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of tags"
        }
      },
      "title": "Response with list of tags across all customers for a business"
    },
    "v1ListCustomersRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business to retrieve the Customers for"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        },
        "searchTerm": {
          "type": "string",
          "title": "Search term used for text fields of Customer\n(phone, email, first name, last name, employee first name, employee last name)"
        },
        "filters": {
          "$ref": "#/definitions/v1CustomerFilters",
          "title": "Filters that can be applied"
        },
        "sortingOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortingOption"
          },
          "title": "Sorting to be applied - Position in array indicated what order to sort by first"
        }
      },
      "title": "Request to list the Customers"
    },
    "v1ListCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Customer"
          },
          "title": "A list of the Customers"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      },
      "title": "Response message of list of Customers"
    },
    "v1ListOriginsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id"
        }
      },
      "title": "Lists origins on all customers for a business"
    },
    "v1ListOriginsResponse": {
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of origins"
        }
      },
      "title": "Response with list of origins across all customers for a business"
    },
    "v1ListReviewRequestEventRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The unique ID of the business"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "List review request events for business"
    },
    "v1ListReviewRequestEventResponse": {
      "type": "object",
      "properties": {
        "reviewRequestEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewRequestEvent"
          },
          "title": "A list of the requests for reviews"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Paging information"
        }
      },
      "title": "Response including the list of review request events"
    },
    "v1MultilocationSendReviewRequestsCSVRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner creating customers"
        },
        "filePath": {
          "type": "string",
          "title": "The path of the csv file in Google Cloud Storage"
        },
        "mapping": {
          "$ref": "#/definitions/v1HeaderMapping",
          "title": "The header mapping in the csv file"
        }
      }
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "A cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "Specifies the number of items to return in the next page"
        }
      },
      "title": "Provides options for the paged request"
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total results found by the operation"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1RequestEventType": {
      "type": "string",
      "enum": [
        "REQUEST_EVENT_TYPE_UNKNOWN",
        "REQUEST_EVENT_TYPE_EMAIL",
        "REQUEST_EVENT_TYPE_SMS"
      ],
      "default": "REQUEST_EVENT_TYPE_UNKNOWN",
      "description": "- REQUEST_EVENT_TYPE_UNKNOWN: An unknown request type\n - REQUEST_EVENT_TYPE_EMAIL: An email review request\n - REQUEST_EVENT_TYPE_SMS: An sms review request",
      "title": "The type of review request event"
    },
    "v1ReviewRequestEvent": {
      "type": "object",
      "properties": {
        "requestEventId": {
          "type": "string",
          "title": "The unique review request event ID"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID requesting review"
        },
        "customerRequestEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomerRequestEvent"
          },
          "title": "The customers whose reviews have been requested"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The recorded date of the request for review"
        },
        "automationType": {
          "$ref": "#/definitions/v1AutomationType",
          "title": "The type of automation that triggered this review request to happen"
        }
      },
      "title": "An event for a request for review"
    },
    "v1ReviewRequestStatus": {
      "type": "string",
      "enum": [
        "REVIEW_REQUEST_STATUS_NOT_SENT",
        "REVIEW_REQUEST_STATUS_LEFT_REVIEW",
        "REVIEW_REQUEST_STATUS_DELIVERED",
        "REVIEW_REQUEST_STATUS_BOUNCED",
        "REVIEW_REQUEST_STATUS_OPENED",
        "REVIEW_REQUEST_STATUS_CLICKED",
        "REVIEW_REQUEST_STATUS_CLICKED_POSITIVE",
        "REVIEW_REQUEST_STATUS_CLICKED_NEGATIVE",
        "REVIEW_REQUEST_STATUS_UNSUBSCRIBE",
        "REVIEW_REQUEST_STATUS_SPAM_REPORT",
        "REVIEW_REQUEST_STATUS_SENDING",
        "REVIEW_REQUEST_STATUS_DROPPED"
      ],
      "default": "REVIEW_REQUEST_STATUS_NOT_SENT",
      "title": "- REVIEW_REQUEST_STATUS_NOT_SENT: The Customer has not been sent a review request\n - REVIEW_REQUEST_STATUS_LEFT_REVIEW: The Customer has left a review\n - REVIEW_REQUEST_STATUS_DELIVERED: The request has been delivered\n - REVIEW_REQUEST_STATUS_BOUNCED: The request did not make it to the Customer\n - REVIEW_REQUEST_STATUS_OPENED: The request was opened\n - REVIEW_REQUEST_STATUS_CLICKED: The link in the request was clicked\n - REVIEW_REQUEST_STATUS_CLICKED_POSITIVE: The would recommend link in the request was clicked\n - REVIEW_REQUEST_STATUS_CLICKED_NEGATIVE: The would not recommend link in the request was clicked\n - REVIEW_REQUEST_STATUS_UNSUBSCRIBE: The Customer unsubscribed from receiving review requests\n - REVIEW_REQUEST_STATUS_SPAM_REPORT: The Customer marked the request as spam\n - REVIEW_REQUEST_STATUS_SENDING: The request is queued for sending but has not been delivered yet\n - REVIEW_REQUEST_STATUS_DROPPED: The request was dropped"
    },
    "v1ReviewSources": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "The id used to identify the review source"
        },
        "displayName": {
          "type": "string",
          "title": "Display name of the review source"
        },
        "iconClass": {
          "type": "string",
          "title": "Icon class name for the review source"
        },
        "hasListings": {
          "type": "boolean",
          "title": "A listing for the review source exists for the account group"
        },
        "hasWarning": {
          "type": "boolean",
          "title": "The listing for the review source contains errors"
        },
        "url": {
          "type": "string",
          "title": "The url of the listing for the review source"
        },
        "overriddenUrl": {
          "type": "string",
          "title": "The overridden url for the review source"
        }
      }
    },
    "v1SendReviewRequestEmailRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business the Customer is in"
        },
        "customerId": {
          "type": "string",
          "title": "The ID of the Customer being sent the email review request"
        }
      },
      "title": "Send an email review request to a Customer for a specific business"
    },
    "v1SendReviewRequestSmsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business this customer belongs to"
        },
        "customerId": {
          "type": "string",
          "title": "The ID of the customer being sent the SMS review request"
        }
      },
      "title": "Send a SMS review request to a Customer for a specific business"
    },
    "v1SendReviewRequestToDefaultTemplateRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business the Customer is in"
        },
        "customerId": {
          "type": "string",
          "title": "The ID of the Customer being sent the email review request"
        }
      },
      "title": "Send a review request to a Customer for a specific business"
    },
    "v1SendSMSRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "Account group ID of the account"
        },
        "customerId": {
          "type": "string",
          "title": "The ID of the Customer being sent the sms"
        },
        "customerPhoneNumber": {
          "type": "string",
          "title": "The phone number of the customer being sent the sms"
        },
        "messageToSend": {
          "type": "string",
          "title": "The message to send"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attribute"
          },
          "title": "Attributes to attach to the sms message"
        }
      },
      "title": "Request to send an SMS"
    },
    "v1SmsStatusCode": {
      "type": "string",
      "enum": [
        "SMS_STATUS_CODE_SUCCESS",
        "SMS_STATUS_CODE_QUEUE_FULL",
        "SMS_STATUS_CODE_ACCOUNT_SUSPENDED",
        "SMS_STATUS_CODE_UNREACHABLE_DESTINATION",
        "SMS_STATUS_CODE_MESSAGE_BLOCKED",
        "SMS_STATUS_CODE_UNKNOWN_DESTINATION",
        "SMS_STATUS_CODE_LANDLINE_NUMBER",
        "SMS_STATUS_CODE_CARRIER_VIOLATION",
        "SMS_STATUS_CODE_UNKNOWN_ERROR",
        "SMS_STATUS_CODE_UNSUBSCRIBED"
      ],
      "default": "SMS_STATUS_CODE_SUCCESS",
      "title": "- SMS_STATUS_CODE_SUCCESS: No error\n - SMS_STATUS_CODE_QUEUE_FULL: Message queue full\n - SMS_STATUS_CODE_ACCOUNT_SUSPENDED: Account suspended\n - SMS_STATUS_CODE_UNREACHABLE_DESTINATION: Unreachable destination\n - SMS_STATUS_CODE_MESSAGE_BLOCKED: Message blocked\n - SMS_STATUS_CODE_UNKNOWN_DESTINATION: Unknown destination\n - SMS_STATUS_CODE_LANDLINE_NUMBER: Landline number\n - SMS_STATUS_CODE_CARRIER_VIOLATION: Carrier violation\n - SMS_STATUS_CODE_UNKNOWN_ERROR: Unknown error\n - SMS_STATUS_CODE_UNSUBSCRIBED: Number has unsubscribed from receiving messages"
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_NONE",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_NONE"
    },
    "v1SortingOption": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string",
          "title": "Name of column to be sorted by"
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "Direction to sort in. 0: No sort 1: Ascending 2: Descending"
        }
      },
      "title": "Options for sorting query results"
    },
    "v1StartTrustHubRegistrationRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "the account group to register with Twilio"
        }
      }
    },
    "v1UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "The customer to update"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask for listing fields to be updated"
        }
      },
      "title": "A service for customer and review request activity\nUpdates a customer"
    },
    "v1UpsertCampaignRequest": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1Campaign",
          "title": "Campaign to upsert"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask for listing fields to be updated"
        }
      },
      "title": "Request to upsert the Campaign"
    },
    "v1UpsertCampaignResponse": {
      "type": "object",
      "properties": {
        "campaign": {
          "$ref": "#/definitions/v1Campaign",
          "title": "Campaign to upsert"
        }
      }
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
