{
  "swagger": "2.0",
  "info": {
    "title": "email_builder/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Templates"
    },
    {
      "name": "ContentGeneration"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/emailbuilder.v1.ContentGeneration/SuggestContent": {
      "post": {
        "operationId": "ContentGeneration_SuggestContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SuggestContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SuggestContentRequest"
            }
          }
        ],
        "tags": [
          "ContentGeneration"
        ]
      }
    },
    "/emailbuilder.v1.Templates/CreateEmailBuilderTemplate": {
      "post": {
        "operationId": "Templates_CreateEmailBuilderTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateEmailBuilderTemplateRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    },
    "/emailbuilder.v1.Templates/DeleteEmailBuilderTemplate": {
      "post": {
        "operationId": "Templates_DeleteEmailBuilderTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteEmailBuilderTemplateRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    },
    "/emailbuilder.v1.Templates/GetEmailBuilderTemplate": {
      "post": {
        "operationId": "Templates_GetEmailBuilderTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmailBuilderTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetEmailBuilderTemplateRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    },
    "/emailbuilder.v1.Templates/GetEmailBuilderTemplates": {
      "post": {
        "operationId": "Templates_GetEmailBuilderTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmailBuilderTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetEmailBuilderTemplatesRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    },
    "/emailbuilder.v1.Templates/ListEmailBuilderTemplates": {
      "post": {
        "operationId": "Templates_ListEmailBuilderTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEmailBuilderTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListEmailBuilderTemplatesRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    },
    "/emailbuilder.v1.Templates/SearchEmailBuilderTemplates": {
      "post": {
        "operationId": "Templates_SearchEmailBuilderTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchEmailBuilderTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchEmailBuilderTemplatesRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    },
    "/emailbuilder.v1.Templates/UpdateEmailBuilderTemplate": {
      "post": {
        "operationId": "Templates_UpdateEmailBuilderTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateEmailBuilderTemplateRequest"
            }
          }
        ],
        "tags": [
          "Templates"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateEmailBuilderTemplateRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of owner who is creating this template (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner who is creating this template."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template (unique within the app namespace)"
        },
        "templateDisplayName": {
          "type": "string",
          "title": "The display name for the template"
        },
        "templateJson": {
          "type": "string",
          "description": "The JSON data which comprises the email content, layout, etc. when loaded by the Email Builder."
        },
        "templateHtml": {
          "type": "string",
          "title": "The HTML data which comprises the email content, layout, etc"
        },
        "templateSubject": {
          "type": "string",
          "title": "The subject line for the template"
        },
        "parent": {
          "$ref": "#/definitions/v1TemplateReference",
          "title": "The ID of the parent template"
        }
      }
    },
    "v1DeleteEmailBuilderTemplateRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of the owner for this template (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner for this template."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template (unique within the app namespace)"
        }
      }
    },
    "v1EmailBuilderTemplate": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "title": "The unique identifier for fetching this template"
        },
        "templateDisplayName": {
          "type": "string",
          "title": "The display name for the template"
        },
        "templateJson": {
          "type": "string",
          "description": "The JSON data which comprises the email content, layout, etc. when loaded by the Email Builder."
        },
        "previewUrl": {
          "type": "string",
          "title": "The URL where the image preview of the template is stored"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the template was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the template was updated"
        },
        "templateHtml": {
          "type": "string",
          "title": "The HTML data which comprises the email content, layout, etc"
        },
        "templateSubject": {
          "type": "string",
          "title": "the subject of the template"
        }
      }
    },
    "v1GetEmailBuilderTemplateRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of the owner for this template (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner for this template."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template (unique within the app namespace)"
        }
      }
    },
    "v1GetEmailBuilderTemplateResponse": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1EmailBuilderTemplate"
        }
      }
    },
    "v1GetEmailBuilderTemplatesRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of the owner for this template (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner for this template."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "templateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of unique identifier of the template (unique within the app namespace)"
        }
      }
    },
    "v1GetEmailBuilderTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailBuilderTemplate"
          }
        }
      }
    },
    "v1ListEmailBuilderTemplatesRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of the owner for templates (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner for the templates."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "searchTerm": {
          "type": "string",
          "title": "The search term to apply"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "The paging options for the request"
        }
      }
    },
    "v1ListEmailBuilderTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailBuilderTemplate"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1OwnerType": {
      "type": "string",
      "enum": [
        "OWNER_TYPE_INVALID",
        "OWNER_TYPE_PARTNER",
        "OWNER_TYPE_ACCOUNT_GROUP",
        "OWNER_TYPE_SYSTEM"
      ],
      "default": "OWNER_TYPE_INVALID"
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "To provide options for the paged request"
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1SearchEmailBuilderTemplatesRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of the owner for templates (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner for the templates."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "searchTerm": {
          "type": "string",
          "title": "The search term to apply"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "The paging options for the request"
        }
      }
    },
    "v1SearchEmailBuilderTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EmailBuilderTemplate"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "hits": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1SuggestContentRequest": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "title": "the information used by openAI to generate content"
        }
      }
    },
    "v1SuggestContentResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1TemplateReference": {
      "type": "object",
      "properties": {
        "appNamespace": {
          "type": "string",
          "title": "The namespace of the parent template"
        },
        "templateId": {
          "type": "string",
          "title": "The template_id of the parent template"
        }
      }
    },
    "v1UpdateEmailBuilderTemplateRequest": {
      "type": "object",
      "properties": {
        "ownerType": {
          "$ref": "#/definitions/v1OwnerType",
          "title": "The type of owner who is creating this template (e.g. partner, business)"
        },
        "ownerId": {
          "type": "string",
          "description": "The ID of the owner who is creating this template."
        },
        "appNamespace": {
          "type": "string",
          "description": "This describes WHERE the email builder is embedded - each namespace is\nisolated and the Email Builder will only support editing templates that\nwere created in the same namespace."
        },
        "templateId": {
          "type": "string",
          "title": "The unique identifier of the template (unique within the app namespace)"
        },
        "templateDisplayName": {
          "type": "string",
          "title": "The display name for the template"
        },
        "templateJson": {
          "type": "string",
          "description": "The JSON data which comprises the email content, layout, etc. when loaded by the Email Builder."
        },
        "templateHtml": {
          "type": "string",
          "title": "The HTML data which comprises the email content, layout, etc"
        },
        "templateSubject": {
          "type": "string",
          "title": "The subject for the template"
        }
      }
    }
  }
}
