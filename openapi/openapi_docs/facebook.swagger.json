{
  "swagger": "2.0",
  "info": {
    "title": "facebook/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Facebook"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/facebook.v1.Facebook/AssignFacebookPageOwner": {
      "post": {
        "summary": "Sets an organization (Partner or Account Group) as the owner of a Facebook page.",
        "operationId": "Facebook_AssignFacebookPageOwner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AssignFacebookPageOwnerRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/CreateLeadGenAdForm": {
      "post": {
        "summary": "Creates a leadGenAdForm with given details. This is for manual testing purposes since test webhooks on demo aren't fully functional",
        "operationId": "Facebook_CreateLeadGenAdForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateLeadGenAdFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateLeadGenAdFormRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/DeleteWhatsAppConnection": {
      "post": {
        "summary": "Delete a connection between a WhatsApp Business Account and an organization.",
        "operationId": "Facebook_DeleteWhatsAppConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteWhatsAppConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteWhatsAppConnectionRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/DisableMessengerForPage": {
      "post": {
        "summary": "Disables the Facebook Messenger feature for a specific Facebook page.",
        "operationId": "Facebook_DisableMessengerForPage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisableMessengerForPageRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/FacebookPageMessengerState": {
      "post": {
        "summary": "Get the state of a Facebook Messenger page.",
        "operationId": "Facebook_FacebookPageMessengerState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FacebookPageMessengerStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FacebookPageMessengerStateRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/FetchLeads": {
      "post": {
        "summary": "Fetch specified leads, for further processing, for example if they were not previously retrieved.",
        "operationId": "Facebook_FetchLeads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Fetch specified leads.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FetchLeadsRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/GetFormData": {
      "post": {
        "summary": "Given a form ID get more data about the form name, campaign etc.",
        "operationId": "Facebook_GetFormData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFormDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetFormDataRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/GetLeadGenAdForm": {
      "post": {
        "summary": "Get a specific lead by LeadGenID",
        "operationId": "Facebook_GetLeadGenAdForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLeadGenAdFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLeadGenAdFormRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/GetPagesData": {
      "post": {
        "summary": "Gets a full list of pertinent data and an access token of all the pageIds passed in for the given FB user's access token.",
        "operationId": "Facebook_GetPagesData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPagesDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetPagesDataRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/GetUserName": {
      "post": {
        "summary": "[ MESSENGER ENDPOINTS ]\nGetUserName returns the name of the user associated with the given Facebook user ID.",
        "operationId": "Facebook_GetUserName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUserNameRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/GetWhatsAppConnection": {
      "post": {
        "summary": "Get a connection between a WhatsApp Business Account and an organization.",
        "operationId": "Facebook_GetWhatsAppConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetWhatsAppConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetWhatsAppConnectionRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/GetWhatsAppMessageTemplates": {
      "post": {
        "summary": "Get the Templates for a WhatsApp Business Account associated with the provided organization.",
        "operationId": "Facebook_GetWhatsAppMessageTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetWhatsAppMessageTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetWhatsAppMessageTemplatesRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/ListFormsForPage": {
      "post": {
        "summary": "Lists Facebook Forms and their connection status for the Forms for a connected Page that are accessible to a Partner's stored oauth token",
        "operationId": "Facebook_ListFormsForPage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFormsForPageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFormsForPageRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/ListLeadGenAdFormsByPartnerID": {
      "post": {
        "summary": "[OTHER]\nTODO: move these below to an admin service, they're only used for debugging\nList all the LeadGenAdForms by PartnerID",
        "operationId": "Facebook_ListLeadGenAdFormsByPartnerID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLeadGenAdFormsByPartnerIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListLeadGenAdFormsByPartnerIDRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/ListPagesForPartner": {
      "post": {
        "summary": "Lists all the Facebook pages accessible to a Partner's stored oauth token",
        "operationId": "Facebook_ListPagesForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPagesForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPagesForPartnerRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/PartnerLeadAdsTokenStatus": {
      "post": {
        "summary": "Check if we have a valid token for Lead Ads for the partner.",
        "operationId": "Facebook_PartnerLeadAdsTokenStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PartnerLeadAdsTokenStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PartnerLeadAdsTokenStatusRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/RegisterSessionToConnectLeadAdsForPartner": {
      "post": {
        "summary": "Start a session to connect a Lead Ads account, so that we can start receiving leads.",
        "operationId": "Facebook_RegisterSessionToConnectLeadAdsForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterSessionToConnectLeadAdsForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterSessionToConnectLeadAdsForPartnerRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/SendFacebookMessage": {
      "post": {
        "summary": "Sends a message to a Facebook user via Messenger.",
        "operationId": "Facebook_SendFacebookMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendFacebookMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendFacebookMessageRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/SendWhatsAppMessage": {
      "post": {
        "summary": "Send a message to a phone number via WhatsApp from WhatsApp Business Account associated with the provided organization.",
        "operationId": "Facebook_SendWhatsAppMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendWhatsAppMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendWhatsAppMessageRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/SubscribePageToApp": {
      "post": {
        "summary": "Subscribes the page to Vendasta facebook app so we start to receive leads from the page",
        "operationId": "Facebook_SubscribePageToApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Subscribe a partner's page to the Facebook app.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubscribePageToAppRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/UnsubscribePageFromApp": {
      "post": {
        "summary": "Unsubscribes the page to Vendasta facebook app so we stop receiving leads from the page",
        "operationId": "Facebook_UnsubscribePageFromApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Unsubscribe a partner's page to the Facebook app.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UnsubscribePageFromAppRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/UpsertWhatsAppConnection": {
      "post": {
        "summary": "[ WHATSAPP ENDPOINTS ]\nCreate or Update a connection between a WhatsApp Business Account and an organization.",
        "operationId": "Facebook_UpsertWhatsAppConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertWhatsAppConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertWhatsAppConnectionRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/VerifyLeadGenTokens": {
      "post": {
        "summary": "Verify the currently stored tokens to see if they are still valid",
        "operationId": "Facebook_VerifyLeadGenTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifyLeadGenTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifyLeadGenTokensRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    },
    "/facebook.v1.Facebook/VerifyTokenHasScopesForFeature": {
      "post": {
        "summary": "[OAUTH ENDPOINTS]\nVerify that the given Facebook OAuth2 token has the scopes required for the feature being used.",
        "operationId": "Facebook_VerifyTokenHasScopesForFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifyTokenHasScopesForFeatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifyTokenHasScopesForFeatureRequest"
            }
          }
        ],
        "tags": [
          "Facebook"
        ]
      }
    }
  },
  "definitions": {
    "SendFacebookMessageRequestAttachment": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MessageAttachmentType"
        },
        "url": {
          "type": "string"
        },
        "isReusable": {
          "type": "boolean",
          "description": "Whether the image url should be used in the message that is sent to the Facebook user.\nIf false then a different url will be generated."
        }
      }
    },
    "SendWhatsAppMessageRequestDocument": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestImage": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bodyParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SendWhatsAppMessageRequestTemplateBodyParameters"
          }
        }
      }
    },
    "SendWhatsAppMessageRequestTemplateBodyParameters": {
      "type": "object",
      "properties": {
        "field": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestText": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "SendWhatsAppMessageRequestVideo": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AssignFacebookPageOwnerRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "facebookPageId": {
          "type": "string"
        }
      }
    },
    "v1CreateLeadGenAdFormRequest": {
      "type": "object",
      "properties": {
        "leadgenId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "rawJsonPayload": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "adName": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        }
      },
      "title": "Create a leadGenAdForm(similar to what fb has) with given details"
    },
    "v1CreateLeadGenAdFormResponse": {
      "type": "object",
      "properties": {
        "leadId": {
          "type": "string"
        }
      },
      "title": "return the leadID for the newly created leadGenAdForm"
    },
    "v1DeleteWhatsAppConnectionRequest": {
      "type": "object",
      "properties": {
        "whatsappConnectionId": {
          "type": "string"
        }
      }
    },
    "v1DeleteWhatsAppConnectionResponse": {
      "type": "object"
    },
    "v1DisableMessengerForPageRequest": {
      "type": "object",
      "properties": {
        "facebookPageId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        }
      }
    },
    "v1FacebookForm": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "leadgenFormId": {
          "type": "string"
        },
        "leadgenFormName": {
          "type": "string"
        },
        "isEnabledForLeads": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "locale": {
          "type": "string"
        }
      },
      "title": "FacebookForm is a Facebook Lead Form associated with a Partner's Facebook Page"
    },
    "v1FacebookPage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "canSubscribeLeadWebhooks": {
          "type": "boolean",
          "title": "true if the user has all required Task(s) to subscribe to Lead Webhooks for this Page, and false otherwise. This is controlled by the user's assigned Roles/Tasks in Facebook Business Manager: https://developers.facebook.com/docs/graph-api/reference/page/subscribed_apps/#permissions"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the list of Tasks the user is permitted to perform for this Page: https://developers.facebook.com/docs/pages/overview/permissions-features#tasks"
        }
      },
      "title": "Object that represent a page from Facebook"
    },
    "v1FacebookPageMessengerStateRequest": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string"
        },
        "facebookUserId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        }
      }
    },
    "v1FacebookPageMessengerStateResponse": {
      "type": "object",
      "properties": {
        "messengerEnabled": {
          "type": "boolean",
          "description": "if true Facebook page subscription exists, we will recieve messages."
        },
        "tokenValid": {
          "$ref": "#/definitions/v1TokenStatus",
          "description": "if VALID, the token is valid and we can send messages on behalf of the page."
        },
        "isPageOwner": {
          "type": "boolean",
          "description": "if true, the organization is assigned as the owner of the page."
        }
      }
    },
    "v1FacebookPagingRequest": {
      "type": "object",
      "properties": {
        "before": {
          "type": "string"
        },
        "after": {
          "type": "string"
        }
      },
      "title": "FacebookPagingRequest we are using the paging from facebook, so if before is populated we will request with before param and receive the previous page\nand if the after have value we will request with the after param and will return the next page"
    },
    "v1FacebookPagingResponse": {
      "type": "object",
      "properties": {
        "before": {
          "type": "string"
        },
        "after": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "description": "FacebookPagingResponse the Facebook paging return the cursor for the previous page and the cursor for the next page, if the same are equals it means that\ndoesn't have a next page, but Facebook return too a nextUrl param that means it has more or not, so we are using this one to return a hasMore value."
    },
    "v1FetchLeadsRequest": {
      "type": "object",
      "properties": {
        "leadIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerId": {
          "type": "string",
          "description": "Partner that owns the ads and forms, which generated these leads."
        },
        "pageId": {
          "type": "string"
        }
      },
      "description": "Fetch specified leads."
    },
    "v1GetFormDataRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the partner who's form is being requested"
        },
        "formId": {
          "type": "string",
          "title": "the ID of the form more data is being request for"
        }
      },
      "title": "request includes the ID of the form that more data is being required for"
    },
    "v1GetFormDataResponse": {
      "type": "object",
      "properties": {
        "facebookForm": {
          "$ref": "#/definitions/v1FacebookForm",
          "title": "the facebook form payload that the ID was given for"
        }
      },
      "title": "the form that matches the given form ID"
    },
    "v1GetLeadGenAdFormRequest": {
      "type": "object",
      "properties": {
        "leadgenId": {
          "type": "string"
        }
      }
    },
    "v1GetLeadGenAdFormResponse": {
      "type": "object",
      "properties": {
        "leadgenAdform": {
          "$ref": "#/definitions/v1LeadGenAdForm"
        }
      }
    },
    "v1GetPagesDataRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "A user access token that will be used to get the page data."
        },
        "pageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The page ids we wish to get data for."
        }
      }
    },
    "v1GetPagesDataResponse": {
      "type": "object",
      "properties": {
        "pageData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PageData"
          },
          "description": "A set of PageData info, one for each pageId requested."
        }
      }
    },
    "v1GetUserNameRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "The ID of the Facebook user to get the name for"
        },
        "pageId": {
          "type": "string",
          "title": "The Facebook Page whose access token is used to fetch the username"
        },
        "organizationId": {
          "type": "string",
          "title": "The organization that owns the Facebook Page"
        }
      }
    },
    "v1GetUserNameResponse": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "v1GetWhatsAppConnectionRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "includeStatus": {
          "type": "boolean"
        }
      }
    },
    "v1GetWhatsAppConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1WhatsAppConnection"
        },
        "status": {
          "$ref": "#/definitions/v1WhatsAppConnectionStatus",
          "description": "Only defined if include_status on the request is true."
        }
      }
    },
    "v1GetWhatsAppMessageTemplatesRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        }
      }
    },
    "v1GetWhatsAppMessageTemplatesResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WhatsAppTemplate"
          }
        }
      }
    },
    "v1LeadGenAdForm": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "leadgenId": {
          "type": "string"
        },
        "rawJsonPayload": {
          "type": "string"
        },
        "adName": {
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        }
      },
      "title": "Object that represent the raw JSON of a lead gen from Facebook"
    },
    "v1ListFormsForPageRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "facebookPaging": {
          "$ref": "#/definitions/v1FacebookPagingRequest"
        }
      },
      "title": "request the list of pages for a connected partner based on the longlivedtoken saved for the partner"
    },
    "v1ListFormsForPageResponse": {
      "type": "object",
      "properties": {
        "facebookForms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FacebookForm"
          }
        },
        "facebookPaging": {
          "$ref": "#/definitions/v1FacebookPagingResponse"
        }
      },
      "title": "return list of pages for a connected partner based on the longlivedtoken saved for the partner"
    },
    "v1ListLeadGenAdFormsByPartnerIDRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "paging": {
          "$ref": "#/definitions/v1PagedRequestOptions"
        }
      }
    },
    "v1ListLeadGenAdFormsByPartnerIDResponse": {
      "type": "object",
      "properties": {
        "leadgenAdforms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeadGenAdForm"
          }
        },
        "paging": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListPagesForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "facebookPaging": {
          "$ref": "#/definitions/v1FacebookPagingRequest"
        }
      },
      "title": "request the list of pages for a connected partner based on the longlivedtoken saved for the partner"
    },
    "v1ListPagesForPartnerResponse": {
      "type": "object",
      "properties": {
        "facebookPage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FacebookPage"
          }
        },
        "facebookPaging": {
          "$ref": "#/definitions/v1FacebookPagingResponse"
        }
      },
      "title": "return list of pages for a connected partner based on the longlivedtoken saved for the partner"
    },
    "v1MessageAttachmentType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "IMAGE",
        "AUDIO",
        "FILE",
        "VIDEO"
      ],
      "default": "UNSPECIFIED"
    },
    "v1PageData": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "An access token for the specific page."
        },
        "id": {
          "type": "string",
          "description": "The pageId of this page. Usually a string of numbers."
        },
        "about": {
          "type": "string",
          "description": "A string description about the page."
        },
        "canPost": {
          "type": "boolean",
          "description": "A boolean showing whether the page can post."
        },
        "checkins": {
          "type": "string",
          "format": "int64",
          "description": "An int showing how many checkins are at the place represented by a page."
        },
        "isPublished": {
          "type": "boolean",
          "title": "A bool showing whether the page is published and visible to non-admins"
        },
        "talkingAboutCount": {
          "type": "string",
          "format": "int64",
          "description": "An int showing how many people are talking about this page."
        },
        "ratingCount": {
          "type": "string",
          "format": "int64",
          "description": "An int showing how many public ratings there are on this page."
        },
        "username": {
          "type": "string",
          "description": "The username of the page."
        },
        "wereHereCount": {
          "type": "string",
          "format": "int64",
          "description": "A count of how many people have visited this page."
        },
        "category": {
          "type": "string",
          "description": "The category of this page."
        },
        "name": {
          "type": "string",
          "description": "The name of the page."
        },
        "link": {
          "type": "string",
          "description": "A permalink to this page."
        },
        "picture": {
          "$ref": "#/definitions/v1Picture",
          "description": "The profile picture of this page."
        },
        "fanCount": {
          "type": "string",
          "format": "int64",
          "description": "A count of the number of users who like this page."
        }
      },
      "description": "An object that represents all of the data we need to make a page."
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageIndex": {
          "type": "string",
          "format": "int64",
          "title": "pageNumber can be passed if using mat-paginator style paging"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        },
        "allRows": {
          "type": "boolean",
          "title": "deprecated (if you need to load all rows you porbably need to do something else)"
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "total number of results"
        }
      }
    },
    "v1PartnerLeadAdsTokenStatusRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1PartnerLeadAdsTokenStatusResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1PermissionsGroup": {
      "type": "string",
      "enum": [
        "PERMISSIONS_GROUP_UNKNOWN",
        "PERMISSIONS_GROUP_MESSENGER"
      ],
      "default": "PERMISSIONS_GROUP_UNKNOWN"
    },
    "v1Picture": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Permalink to the picture."
        },
        "height": {
          "type": "string",
          "format": "int64",
          "description": "Height of the picture in px."
        },
        "width": {
          "type": "string",
          "format": "int64",
          "description": "Width of the picture in px."
        },
        "isSilhouette": {
          "type": "boolean",
          "description": "Stores whether this picture is in silhouette format."
        }
      },
      "description": "An object to hold profile pictures."
    },
    "v1RegisterSessionToConnectLeadAdsForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1RegisterSessionToConnectLeadAdsForPartnerResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      }
    },
    "v1SendFacebookMessageRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string",
          "title": "The organization that owns the facebook page"
        },
        "facebookPageId": {
          "type": "string",
          "title": "The facebook page the message is sent on behalf of"
        },
        "recipientId": {
          "type": "string",
          "title": "The id of a facebook user that previously sent a message to this page"
        },
        "text": {
          "type": "string"
        },
        "attachment": {
          "$ref": "#/definitions/SendFacebookMessageRequestAttachment"
        }
      }
    },
    "v1SendFacebookMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      }
    },
    "v1SendWhatsAppMessageRequest": {
      "type": "object",
      "properties": {
        "senderOrganizationId": {
          "type": "string",
          "description": "The organization that is sending the message. This can be either PartnerID or an AccountGroupID."
        },
        "recipientPhoneNumber": {
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/SendWhatsAppMessageRequestText"
        },
        "template": {
          "$ref": "#/definitions/SendWhatsAppMessageRequestTemplate"
        },
        "image": {
          "$ref": "#/definitions/SendWhatsAppMessageRequestImage"
        },
        "video": {
          "$ref": "#/definitions/SendWhatsAppMessageRequestVideo"
        },
        "document": {
          "$ref": "#/definitions/SendWhatsAppMessageRequestDocument"
        }
      }
    },
    "v1SendWhatsAppMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      }
    },
    "v1SubscribePageToAppRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        }
      },
      "description": "Subscribe a partner's page to the Facebook app."
    },
    "v1TokenStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "VALID",
        "INVALID",
        "MISSING_PERMISSIONS"
      ],
      "default": "UNKNOWN"
    },
    "v1UnsubscribePageFromAppRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        }
      },
      "description": "Unsubscribe a partner's page to the Facebook app."
    },
    "v1UpsertWhatsAppConnectionRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "whatsappBusinessAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "phoneNumberId": {
          "type": "string"
        }
      }
    },
    "v1UpsertWhatsAppConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/v1WhatsAppConnection"
        }
      }
    },
    "v1VerifyLeadGenTokensRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        }
      },
      "title": "Verify the currently stored tokens to see if they are still valid"
    },
    "v1VerifyLeadGenTokensResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "title": "Verify will return if the authentication token stored for the partner and page exists and is valid"
    },
    "v1VerifyTokenHasScopesForFeatureRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "permissionsGroup": {
          "$ref": "#/definitions/v1PermissionsGroup"
        }
      }
    },
    "v1VerifyTokenHasScopesForFeatureResponse": {
      "type": "object",
      "properties": {
        "tokenValid": {
          "type": "boolean"
        },
        "hasAllPermissions": {
          "type": "boolean"
        }
      }
    },
    "v1WhatsAppConnection": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "whatsappBusinessAccountId": {
          "type": "string"
        },
        "phoneNumberId": {
          "type": "string"
        },
        "whatsappConnectionId": {
          "type": "string"
        }
      }
    },
    "v1WhatsAppConnectionStatus": {
      "type": "object",
      "properties": {
        "displayPhoneNumber": {
          "type": "string"
        },
        "statusCode": {
          "$ref": "#/definitions/v1WhatsAppConnectionStatusCode"
        }
      }
    },
    "v1WhatsAppConnectionStatusCode": {
      "type": "string",
      "enum": [
        "WHATSAPP_STATUS_UNKNOWN",
        "WHATSAPP_STATUS_READY",
        "WHATSAPP_STATUS_ERROR_GENERIC",
        "WHATSAPP_STATUS_TOKEN_INVALID",
        "WHATSAPP_STATUS_WEBHOOK_NOT_SETUP"
      ],
      "default": "WHATSAPP_STATUS_UNKNOWN",
      "title": "- WHATSAPP_STATUS_UNKNOWN: The status of the connection is unknown.\n - WHATSAPP_STATUS_READY: Connection exists\n - WHATSAPP_STATUS_ERROR_GENERIC: Generic error (unspecified problem)\n - WHATSAPP_STATUS_TOKEN_INVALID: Token is invalid\nResolution: User need to go through the connection flow again\n - WHATSAPP_STATUS_WEBHOOK_NOT_SETUP: Webhook not setup\nResolution: we need to subscribe to webhook events for this whatsapp business account"
    },
    "v1WhatsAppTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "footer": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/v1WhatsAppTemplateCategory"
        },
        "status": {
          "$ref": "#/definitions/v1WhatsAppTemplateStatus"
        }
      }
    },
    "v1WhatsAppTemplateCategory": {
      "type": "string",
      "enum": [
        "TEMPLATE_CATEGORY_UNKNOWN",
        "TEMPLATE_CATEGORY_UTILITY",
        "TEMPLATE_CATEGORY_AUTHENTICATION",
        "TEMPLATE_CATEGORY_MARKETING"
      ],
      "default": "TEMPLATE_CATEGORY_UNKNOWN"
    },
    "v1WhatsAppTemplateStatus": {
      "type": "string",
      "enum": [
        "TEMPLATE_STATUS_UNKNOWN",
        "TEMPLATE_STATUS_APPROVED",
        "TEMPLATE_STATUS_PENDING",
        "TEMPLATE_STATUS_REJECTED"
      ],
      "default": "TEMPLATE_STATUS_UNKNOWN"
    }
  }
}
