{
  "swagger": "2.0",
  "info": {
    "title": "forms/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Forms"
    },
    {
      "name": "FormSubmissionService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/forms.v1.FormSubmissionService/CreateFormSubmission": {
      "post": {
        "summary": "CreateFormSubmission create submit a set of value related to form",
        "operationId": "FormSubmissionService_CreateFormSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateFormSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFormSubmissionRequest"
            }
          }
        ],
        "tags": [
          "FormSubmissionService"
        ]
      }
    },
    "/forms.v1.FormSubmissionService/GetMultiFormSubmission": {
      "post": {
        "operationId": "FormSubmissionService_GetMultiFormSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiFormSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiFormSubmissionRequest"
            }
          }
        ],
        "tags": [
          "FormSubmissionService"
        ]
      }
    },
    "/forms.v1.FormSubmissionService/ListFormSubmission": {
      "post": {
        "summary": "ListFormSubmission list submitted values for a specific form",
        "operationId": "FormSubmissionService_ListFormSubmission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFormSubmissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFormSubmissionRequest"
            }
          }
        ],
        "tags": [
          "FormSubmissionService"
        ]
      }
    },
    "/forms.v1.Forms/CreateForm": {
      "post": {
        "summary": "CreateForm will create a new form generating a uuid for form_id\nand using the current timestamp as version",
        "operationId": "Forms_CreateForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFormRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/DeleteForm": {
      "post": {
        "summary": "DeleteForm soft deletes the received version for the form",
        "operationId": "Forms_DeleteForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteFormRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/GetEmbedCode": {
      "post": {
        "operationId": "Forms_GetEmbedCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmbedCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetEmbedCodeRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/GetForm": {
      "post": {
        "summary": "GetForm - FormConfigs may have a chain of versions for the same form_id\nGetForm returns the most recent version of FormConfig for that form_id",
        "operationId": "Forms_GetForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetFormRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/GetMulti": {
      "post": {
        "summary": "GetMulti will get ultiples form configs",
        "operationId": "Forms_GetMulti",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/GetMultiFormVersionsList": {
      "post": {
        "summary": "GetMultiVersionList will list all versions for a form",
        "operationId": "Forms_GetMultiFormVersionsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiFormVersionsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiFormVersionsListRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/ListForms": {
      "post": {
        "summary": "ListForms will list forms based on filter criteria passed in",
        "operationId": "Forms_ListForms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFormsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFormsRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/ListMappedFieldSchema": {
      "post": {
        "summary": "ListMappedFieldSchema returns ths schema for CRM mapped fields",
        "operationId": "Forms_ListMappedFieldSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMappedFieldSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMappedFieldSchemaRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/PreviewForm": {
      "post": {
        "summary": "PreviewForm previews json schema and library specific configuration based\non input, never saves form",
        "operationId": "Forms_PreviewForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PreviewFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PreviewFormRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/RenderForm": {
      "post": {
        "summary": "RenderForm fetchs json schema and library specific configuration",
        "operationId": "Forms_RenderForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RenderFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RenderFormRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    },
    "/forms.v1.Forms/UpdateForm": {
      "post": {
        "summary": "UpdateForm will create a new version of the Form, creating a chain\nof versions based on the form_id.",
        "operationId": "Forms_UpdateForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateFormRequest"
            }
          }
        ],
        "tags": [
          "Forms"
        ]
      }
    }
  },
  "definitions": {
    "FieldSchema": {
      "type": "object",
      "properties": {
        "unmappedField": {
          "$ref": "#/definitions/v1UnmappedField"
        },
        "mappedField": {
          "$ref": "#/definitions/v1MappedField"
        }
      }
    },
    "FormConfigField": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/FieldSchema"
        },
        "label": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "defaultValue": {
          "$ref": "#/definitions/v1FieldValue"
        },
        "preFillByUrlQueryParameter": {
          "type": "string",
          "description": "When displaying the form, pre-fill it with the value in this query\nparameter. For example, you could fill out a hidden field with the\nutm_medium and utm_campaign, so you know how people landed on your page\nbefore filling out the form."
        },
        "placeholder": {
          "type": "string"
        },
        "defaultPhoneIsoCountryCode": {
          "type": "string"
        }
      }
    },
    "FormSubmissionSubmittedValue": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldValue": {
          "$ref": "#/definitions/v1FieldValue"
        },
        "fieldType": {
          "$ref": "#/definitions/v1FieldType"
        },
        "mappedToResource": {
          "type": "string"
        }
      }
    },
    "GetMultiFormVersionsListResponseVersions": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetMultiRequestFormConfigIdentifier": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ListFormsRequestFilters": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "ListFormsResponseFormRow": {
      "type": "object",
      "properties": {
        "form": {
          "$ref": "#/definitions/v1FormConfig"
        },
        "numberOfSubmissions": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "RenderFormResponseDefaultValues": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "jsonValue": {
          "type": "string"
        }
      }
    },
    "RenderFormResponsePreFillByUrlQueryParameter": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "queryParam": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateFormRequest": {
      "type": "object",
      "properties": {
        "formConfig": {
          "$ref": "#/definitions/v1FormConfig"
        }
      },
      "title": "CreateFormRequest - new form request"
    },
    "v1CreateFormResponse": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidationError"
          }
        }
      },
      "title": "CreateFormResponse - returns the newly generated form_id and version"
    },
    "v1CreateFormSubmissionRequest": {
      "type": "object",
      "properties": {
        "submission": {
          "$ref": "#/definitions/v1UserFormSubmission"
        },
        "recaptchaToken": {
          "type": "string"
        }
      }
    },
    "v1CreateFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string"
        }
      }
    },
    "v1DeleteFormRequest": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "DeleteFormRequest - form and version to be deleted"
    },
    "v1FieldOption": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "v1FieldType": {
      "type": "string",
      "enum": [
        "FIELD_TYPE_INVALID",
        "FIELD_TYPE_STRING",
        "FIELD_TYPE_INTEGER",
        "FIELD_TYPE_DATE",
        "FIELD_TYPE_DROPDOWN",
        "FIELD_TYPE_CURRENCY",
        "FIELD_TYPE_BOOLEAN",
        "FIELD_TYPE_RADIO",
        "FIELD_TYPE_RICH_TEXT_ELEMENT",
        "FIELD_TYPE_EMAIL",
        "FIELD_TYPE_PHONE",
        "FIELD_TYPE_BUSINESS_SEARCH",
        "FIELD_TYPE_TEXT_AREA",
        "FIELD_TYPE_TAG"
      ],
      "default": "FIELD_TYPE_INVALID"
    },
    "v1FieldValue": {
      "type": "object",
      "properties": {
        "invalid": {
          "type": "boolean"
        },
        "integer": {
          "type": "string",
          "format": "int64",
          "title": "used for integer and currency"
        },
        "string": {
          "type": "string",
          "title": "used for string, date, dropdown and radio"
        },
        "stringValues": {
          "$ref": "#/definitions/v1StringList",
          "title": "used for tags"
        },
        "boolean": {
          "type": "boolean",
          "title": "used for boolean"
        }
      }
    },
    "v1FormConfig": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "styles": {
          "$ref": "#/definitions/v1Styles"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FormConfigField"
          }
        },
        "formType": {
          "type": "string",
          "title": "the type of form - it will be used to let event-broker filter out\nsubmissions"
        },
        "namespace": {
          "type": "string",
          "title": "namespace basically tells who owns this form"
        },
        "name": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "mostRecent": {
          "type": "boolean"
        },
        "redirectUrl": {
          "type": "string"
        },
        "recaptchaSiteKey": {
          "type": "string"
        },
        "recaptchaSecretKey": {
          "type": "string",
          "description": "This will be redacted but non-empty when retrieving an existing form.\nAn empty value indicates the form was created before we started\nadding recaptcha, and a value must be provided in order to update the form."
        },
        "submitButtonLabel": {
          "type": "string"
        },
        "createInboxConversation": {
          "type": "boolean",
          "title": "On form submission, create a conversation in the inbox or associate submission with an existing conversation"
        }
      },
      "description": "Information about a form needed to display it on a partner's website,\nto validate submissions to that form, or\nshow it in the form-builder for modification."
    },
    "v1FormSubmission": {
      "type": "object",
      "properties": {
        "formSubmissionId": {
          "type": "string"
        },
        "formVersion": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FormSubmissionSubmittedValue"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetEmbedCodeRequest": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string",
          "title": "form unique identifier"
        }
      },
      "title": "Request to fetch an embed code of a custom form"
    },
    "v1GetEmbedCodeResponse": {
      "type": "object",
      "properties": {
        "embedCode": {
          "type": "string",
          "title": "Form's HTML embed code"
        }
      },
      "title": "Response for a embed form code"
    },
    "v1GetFormRequest": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string",
          "title": "form unique identifier"
        }
      },
      "title": "Request to load style, schema and UI config"
    },
    "v1GetFormResponse": {
      "type": "object",
      "properties": {
        "formConfig": {
          "$ref": "#/definitions/v1FormConfig"
        }
      },
      "title": "returns the most recent version of FormConfig for a specific form_id"
    },
    "v1GetMultiFormSubmissionRequest": {
      "type": "object",
      "properties": {
        "formSubmissionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmission"
          }
        }
      }
    },
    "v1GetMultiFormVersionsListRequest": {
      "type": "object",
      "properties": {
        "formIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiFormVersionsListResponse": {
      "type": "object",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiFormVersionsListResponseVersions"
          }
        }
      }
    },
    "v1GetMultiRequest": {
      "type": "object",
      "properties": {
        "formConfigIdentifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiRequestFormConfigIdentifier"
          }
        }
      }
    },
    "v1GetMultiResponse": {
      "type": "object",
      "properties": {
        "formConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormConfig"
          }
        }
      }
    },
    "v1JsonSchemaLibrary": {
      "type": "string",
      "enum": [
        "JSON_SCHEMA_LIBRARY_UNDEFINED",
        "JSON_SCHEMA_LIBRARY_JSONFORM"
      ],
      "default": "JSON_SCHEMA_LIBRARY_UNDEFINED",
      "title": "- JSON_SCHEMA_LIBRARY_JSONFORM: JSONFORMS, ALPACA"
    },
    "v1ListFormSubmissionRequest": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        }
      }
    },
    "v1ListFormSubmissionResponse": {
      "type": "object",
      "properties": {
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmission"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListFormsRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/ListFormsRequestFilters"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        }
      }
    },
    "v1ListFormsResponse": {
      "type": "object",
      "properties": {
        "formRows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListFormsResponseFormRow"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1ListMappedFieldSchemaRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "crmObjectType": {
          "type": "string",
          "title": "dont tie this to crm"
        },
        "crmObjectSubtype": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/vendastatypesPagedRequestOptions"
        },
        "mappedToResource": {
          "type": "string"
        }
      }
    },
    "v1ListMappedFieldSchemaResponse": {
      "type": "object",
      "properties": {
        "fieldSchemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MappedField"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/vendastatypesPagedResponseMetadata"
        }
      }
    },
    "v1MappedField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1FieldType"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldOption"
          }
        },
        "mappedTo": {
          "type": "string"
        },
        "systemDefined": {
          "$ref": "#/definitions/v1SystemDefined"
        },
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "v1PreviewFormRequest": {
      "type": "object",
      "properties": {
        "formConfig": {
          "$ref": "#/definitions/v1FormConfig",
          "title": "form config to preview"
        },
        "library": {
          "$ref": "#/definitions/v1JsonSchemaLibrary",
          "title": "choose library"
        }
      }
    },
    "v1PreviewFormResponse": {
      "type": "object",
      "properties": {
        "jsonSchema": {
          "type": "string"
        },
        "jsonUiSchema": {
          "type": "string"
        }
      }
    },
    "v1RenderFormRequest": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string",
          "title": "form unique identifier"
        },
        "library": {
          "$ref": "#/definitions/v1JsonSchemaLibrary",
          "title": "choose library"
        }
      }
    },
    "v1RenderFormResponse": {
      "type": "object",
      "properties": {
        "jsonSchema": {
          "type": "string"
        },
        "jsonUiSchema": {
          "type": "string"
        },
        "styles": {
          "$ref": "#/definitions/v1Styles"
        },
        "fieldQueryParams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RenderFormResponsePreFillByUrlQueryParameter"
          }
        },
        "recaptchaSiteKey": {
          "type": "string"
        },
        "defaultValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RenderFormResponseDefaultValues"
          }
        }
      }
    },
    "v1StringList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Styles": {
      "type": "object",
      "properties": {
        "width": {
          "type": "string"
        },
        "backgroundColor": {
          "type": "string"
        },
        "borderColor": {
          "type": "string"
        },
        "borderRadius": {
          "type": "string"
        },
        "borderWidth": {
          "type": "string"
        },
        "borderStyle": {
          "type": "string"
        },
        "padding": {
          "type": "string"
        },
        "primaryFontColor": {
          "type": "string",
          "title": "in material, this would be the \"on background\" color"
        },
        "primaryColor": {
          "type": "string",
          "description": "These follow the naming of Material and Bootstrap, with primary, secondary, warning...\n\nbackgrounds of primary button, checkboxes, etc"
        },
        "onPrimaryColor": {
          "type": "string",
          "title": "text on primary buttons, checkmarks in checkboxes, etc"
        }
      },
      "title": "CSS style linked to a form"
    },
    "v1SystemDefined": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "includedByDefault": {
          "type": "boolean",
          "title": "included_by_default fields will be auto-dropped upon init"
        },
        "hidden": {
          "type": "boolean",
          "title": "hidden fields won't display in editor"
        }
      }
    },
    "v1UnmappedField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1FieldType"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FieldOption"
          }
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1UpdateFormRequest": {
      "type": "object",
      "properties": {
        "formConfig": {
          "$ref": "#/definitions/v1FormConfig"
        }
      },
      "title": "UpdateFormRequest - new form version request"
    },
    "v1UpdateFormResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidationError"
          }
        }
      },
      "title": "UpdateFormResponse - returns the newly generated version"
    },
    "v1UserFormSubmission": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string",
          "title": "form identification"
        },
        "version": {
          "type": "string",
          "title": "optional version - if not set it will be used the latest version"
        },
        "values": {
          "type": "string",
          "title": "json with the values being submitted - must conform with form specification"
        }
      },
      "title": "UserFormSubmission represents a set of values being submitted to a form by the user"
    },
    "v1ValidationError": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "title": "this can be a translation key"
        }
      }
    },
    "vendastatypesPagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "vendastatypesPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results. This is not supported on all paged apis and will be 0 if it is not supported"
        }
      }
    }
  }
}
