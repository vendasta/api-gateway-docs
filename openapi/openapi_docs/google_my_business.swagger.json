{
  "swagger": "2.0",
  "info": {
    "title": "google_my_business/v1/answer.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "BusinessMessages"
    },
    {
      "name": "BusinessCommunications"
    },
    {
      "name": "Account"
    },
    {
      "name": "Insights"
    },
    {
      "name": "InsightsSync"
    },
    {
      "name": "QuestionAnswer"
    },
    {
      "name": "GoogleMyBusinessClientLegacyAPI"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/gmb.v1.Account/DeleteAccountLocation": {
      "post": {
        "summary": "Deletes the specified account group's stored GMB account/location association",
        "operationId": "Account_DeleteAccountLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteAccountLocationRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/gmb.v1.Account/DeletePost": {
      "post": {
        "summary": "Deletes a specified post on the GMB platform",
        "operationId": "Account_DeletePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeletePostRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/gmb.v1.Account/GetMultiAccountLocation": {
      "post": {
        "summary": "Retrieves AccountLocations by account_group_ids -\nif a location does not exist will return null in that position in the returned results",
        "operationId": "Account_GetMultiAccountLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiAccountLocationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiAccountLocationRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/gmb.v1.Account/ReplaceAccountLocation": {
      "post": {
        "summary": "Creates or Replace the specified account group's stored GMB account/location association",
        "operationId": "Account_ReplaceAccountLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplaceAccountLocationRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/gmb.v1.BusinessCommunications/CanEnableBusinessCommunications": {
      "post": {
        "operationId": "BusinessCommunications_CanEnableBusinessCommunications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CanEnableBusinessCommunicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CanEnableBusinessCommunicationsRequest"
            }
          }
        ],
        "tags": [
          "BusinessCommunications"
        ]
      }
    },
    "/gmb.v1.BusinessCommunications/ConnectBusinessCommunications": {
      "post": {
        "operationId": "BusinessCommunications_ConnectBusinessCommunications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectBusinessCommunicationsRequest"
            }
          }
        ],
        "tags": [
          "BusinessCommunications"
        ]
      }
    },
    "/gmb.v1.BusinessCommunications/GetBusinessLaunchStatus": {
      "post": {
        "operationId": "BusinessCommunications_GetBusinessLaunchStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBusinessLaunchStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBusinessLaunchStatusRequest"
            }
          }
        ],
        "tags": [
          "BusinessCommunications"
        ]
      }
    },
    "/gmb.v1.BusinessCommunications/UnlaunchBusinessCommunicationsAgent": {
      "post": {
        "operationId": "BusinessCommunications_UnlaunchBusinessCommunicationsAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UnlaunchBusinessCommunicationsAgentRequest"
            }
          }
        ],
        "tags": [
          "BusinessCommunications"
        ]
      }
    },
    "/gmb.v1.BusinessMessages/CreateEvent": {
      "post": {
        "summary": "CreateEvent creates an event in a conversation",
        "operationId": "BusinessMessages_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateEventRequest"
            }
          }
        ],
        "tags": [
          "BusinessMessages"
        ]
      }
    },
    "/gmb.v1.BusinessMessages/SendMessage": {
      "post": {
        "summary": "SendMessage sends a message to a conversation",
        "operationId": "BusinessMessages_SendMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendMessageRequest"
            }
          }
        ],
        "tags": [
          "BusinessMessages"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/CalculateInsightsByTimePeriod": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.calculateInsightsByTimePeriodV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_CalculateInsightsByTimePeriod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CalculateInsightsByTimePeriodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CalculateInsightsByTimePeriodRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/CanRespondToReview": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.canRespondToReviewOnGoogleV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_CanRespondToReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CanRespondToReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CanRespondToReviewRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/Connect": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.connectGoogleMyBusinessLocationV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_Connect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/Disconnect": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.disconnectGoogleMyBusinessLocationV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_Disconnect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisconnectRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/EnableDisableSync": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.enableDisableSyncGoogleMyBusinessLocationV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_EnableDisableSync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableDisableSyncResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EnableDisableSyncRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/GetAsSocialService": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.getGoogleMyBusinessLocationAsSocialServiceV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_GetAsSocialService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAsSocialServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAsSocialServiceRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/GetConnection": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.getGoogleMyBusinessLocationConnectionV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_GetConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConnectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetConnectionRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/GetConnections": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.getGoogleMyBusinessLocationConnectionsV2",
        "operationId": "GoogleMyBusinessClientLegacyAPI_GetConnections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConnectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetConnectionsRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.GoogleMyBusinessClientLegacyAPI/GetGoogleUser": {
      "post": {
        "summary": "equivalent to GoogleMyBusinessClient.GetGoogleUser",
        "operationId": "GoogleMyBusinessClientLegacyAPI_GetGoogleUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoogleUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoogleUserRequest"
            }
          }
        ],
        "tags": [
          "GoogleMyBusinessClientLegacyAPI"
        ]
      }
    },
    "/gmb.v1.Insights/GetMultiTimeRange": {
      "post": {
        "operationId": "Insights_GetMultiTimeRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiTimeRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiTimeRangeRequest"
            }
          }
        ],
        "tags": [
          "Insights"
        ]
      }
    },
    "/gmb.v1.Insights/GetTimeRange": {
      "post": {
        "operationId": "Insights_GetTimeRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InsightsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTimeRangeRequest"
            }
          }
        ],
        "tags": [
          "Insights"
        ]
      }
    },
    "/gmb.v1.Insights/ReplacePostInsightsHistory": {
      "post": {
        "summary": "Write post insights to a history model",
        "operationId": "Insights_ReplacePostInsightsHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplacePostInsightsHistoryRequest"
            }
          }
        ],
        "tags": [
          "Insights"
        ]
      }
    },
    "/gmb.v1.InsightsSync/PopulateGoogleBusinessProfilePerformanceMetrics": {
      "post": {
        "summary": "Used mainly to  backfill the existing Google My Business Performance Metrics data for the given account, up to 18 months",
        "operationId": "InsightsSync_PopulateGoogleBusinessProfilePerformanceMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PopulateGoogleBusinessProfilePerformanceMetricsRequest"
            }
          }
        ],
        "tags": [
          "InsightsSync"
        ]
      }
    },
    "/gmb.v1.InsightsSync/PopulateGoogleBusinessProfileSearchKeywords": {
      "post": {
        "summary": "Fetch search terms for a given location of a given account group up to 18 months",
        "operationId": "InsightsSync_PopulateGoogleBusinessProfileSearchKeywords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PopulateGoogleBusinessProfileSearchKeywordsRequest"
            }
          }
        ],
        "tags": [
          "InsightsSync"
        ]
      }
    },
    "/gmb.v1.InsightsSync/SyncData": {
      "post": {
        "operationId": "InsightsSync_SyncData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SyncDataRequest"
            }
          }
        ],
        "tags": [
          "InsightsSync"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/CreateAnswer": {
      "post": {
        "summary": "Answer a question on GMB",
        "operationId": "QuestionAnswer_CreateAnswer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAnswerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAnswerRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/CreateQuestion": {
      "post": {
        "summary": "Ask a question on GMB",
        "operationId": "QuestionAnswer_CreateQuestion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateQuestionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateQuestionRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/DeleteQuestion": {
      "post": {
        "summary": "Delete a question in vstore",
        "operationId": "QuestionAnswer_DeleteQuestion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteQuestionRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/GetMultiQuestions": {
      "post": {
        "summary": "Retrieves a set of questions by ids",
        "operationId": "QuestionAnswer_GetMultiQuestions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiQuestionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiQuestionsRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/GetQuestion": {
      "post": {
        "summary": "Get question with specified question id",
        "operationId": "QuestionAnswer_GetQuestion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetQuestionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetQuestionRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/GetQuestionAnswerStats": {
      "post": {
        "summary": "Get question and answer stats for a business",
        "operationId": "QuestionAnswer_GetQuestionAnswerStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetQuestionAnswerStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetQuestionAnswerStatsRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    },
    "/gmb.v1.QuestionAnswer/ListQuestions": {
      "post": {
        "summary": "List questions for the specified account group",
        "operationId": "QuestionAnswer_ListQuestions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQuestionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListQuestionsRequest"
            }
          }
        ],
        "tags": [
          "QuestionAnswer"
        ]
      }
    }
  },
  "definitions": {
    "GetMultiTimeRangeResponseInsightsContainer": {
      "type": "object",
      "properties": {
        "insights": {
          "$ref": "#/definitions/v1InsightsResponse"
        }
      }
    },
    "gmbv1Location": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "Account group ID"
        },
        "socialProfileId": {
          "type": "string",
          "title": "Social profile ID"
        },
        "address": {
          "type": "string",
          "title": "Business address"
        },
        "displayName": {
          "type": "string",
          "title": "Display name"
        },
        "googleReverify": {
          "type": "boolean",
          "title": "Google reverify"
        },
        "googleVerified": {
          "type": "boolean",
          "title": "Google verified"
        },
        "isLocalPostApiDisabled": {
          "type": "boolean",
          "title": "Is local post api disabled"
        },
        "isMissing": {
          "type": "boolean",
          "title": "Is missing"
        },
        "isTokenBroken": {
          "type": "boolean",
          "title": "Is token broken"
        },
        "isVerified": {
          "type": "boolean",
          "title": "Is verified"
        },
        "locationPathName": {
          "type": "string",
          "title": "Location path name"
        },
        "logoImageId": {
          "type": "string",
          "title": "Logo image ID"
        },
        "mapsPlaceId": {
          "type": "string",
          "title": "Maps place ID"
        },
        "primaryImageId": {
          "type": "string",
          "title": "Primary image ID"
        },
        "syncSettingFlag": {
          "type": "boolean",
          "title": "Sync setting flag"
        },
        "cannotSyncReasons": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Cannot sync reasons"
        },
        "serviceAreaPlaceId": {
          "type": "string",
          "title": "Service area place ID"
        },
        "locationSyncSucceededOn": {
          "type": "string",
          "format": "date-time",
          "title": "Last time out location data was synced successfully"
        },
        "openStatusSyncSucceededOn": {
          "type": "string",
          "format": "date-time",
          "title": "Last time open status data was synced successfully"
        },
        "syncLastAttemptedOn": {
          "type": "string",
          "format": "date-time",
          "title": "Last time sync was attempted"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the location was created in our system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the location was modified in our system"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "When the location wasg deleted in our system"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1AccountLocation": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "googleAccountId": {
          "type": "string"
        },
        "googleLocationId": {
          "type": "string"
        }
      }
    },
    "v1Answer": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID"
        },
        "locationId": {
          "type": "string",
          "title": "Google Location ID"
        },
        "questionId": {
          "type": "string",
          "title": "Question ID"
        },
        "version": {
          "type": "string",
          "title": "Version of answer"
        },
        "locationPathName": {
          "type": "string",
          "title": "Google Location Path Name"
        },
        "text": {
          "type": "string",
          "title": "Answer Content"
        },
        "author": {
          "type": "string",
          "title": "Author Name"
        },
        "authorPhotoUrl": {
          "type": "string",
          "title": "Author profile photo url"
        },
        "authorType": {
          "type": "string",
          "title": "Author type"
        },
        "answerId": {
          "type": "string",
          "title": "Answer ID"
        },
        "upVoteCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of up votes"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The datatime when the answer is published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the answer is created in our system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the answer is modified in our system"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the answer is deleted in our system"
        },
        "previousVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Answer"
          },
          "title": "Previous versions of this answer"
        }
      }
    },
    "v1CalculateInsightsByTimePeriodRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Request for CalculateInsightsByTimePeriod"
    },
    "v1CalculateInsightsByTimePeriodResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InsightsStat"
          }
        }
      },
      "title": "Response for CalculateInsightsByTimePeriod"
    },
    "v1CanEnableBusinessCommunicationsRequest": {
      "type": "object",
      "properties": {
        "socialProfileId": {
          "type": "string"
        }
      }
    },
    "v1CanEnableBusinessCommunicationsResponse": {
      "type": "object",
      "properties": {
        "hasRequiredAccessScopes": {
          "type": "boolean"
        }
      }
    },
    "v1CanRespondToReviewRequest": {
      "type": "object",
      "properties": {
        "reviewId": {
          "type": "string"
        }
      },
      "title": "Request for CanRespondToReview"
    },
    "v1CanRespondToReviewResponse": {
      "type": "object",
      "properties": {
        "canPublish": {
          "type": "boolean"
        },
        "addLink": {
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "title": "TODO: may have more fields for successful case"
        }
      },
      "title": "Response for CanRespondToReview"
    },
    "v1ConnectBusinessCommunicationsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "socialProfileId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1ConnectRequest": {
      "type": "object",
      "properties": {
        "googleUserId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      },
      "title": "Request for Connect"
    },
    "v1ConnectResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/gmbv1Location"
        }
      },
      "title": "Response for Connect"
    },
    "v1CreateAnswerRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "socialProfileId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "title": "The content of the Answer"
        }
      },
      "title": "Request for answering a specific question on Google My Business"
    },
    "v1CreateAnswerResponse": {
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "#/definitions/v1Answer"
        }
      },
      "title": "Response from answering a question"
    },
    "v1CreateEventRequest": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/v1EventType"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "gmbConversationId": {
          "type": "string"
        }
      }
    },
    "v1CreateEventResponse": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        }
      }
    },
    "v1CreateQuestionRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "socialProfileId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "title": "The content of the Question"
        },
        "partnerId": {
          "type": "string"
        }
      },
      "title": "Request for asking a specific question on Google My Business"
    },
    "v1CreateQuestionResponse": {
      "type": "object",
      "properties": {
        "question": {
          "$ref": "#/definitions/v1Question"
        }
      },
      "title": "Response from asking a question"
    },
    "v1DeleteAccountLocationRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1DeletePostRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "GMB user's access token"
        },
        "postId": {
          "type": "string",
          "title": "External postID of the post to be deleted"
        }
      },
      "title": "Request for deleting a post on GMB's platform"
    },
    "v1DeleteQuestionRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        }
      },
      "title": "Delete a question on GMB"
    },
    "v1DisconnectRequest": {
      "type": "object",
      "properties": {
        "googleUserId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      },
      "title": "Request for Disconnect"
    },
    "v1EnableDisableSyncRequest": {
      "type": "object",
      "properties": {
        "googleUserId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "syncSettingFlag": {
          "type": "boolean"
        }
      },
      "title": "Request for EnableDisableSync"
    },
    "v1EnableDisableSyncResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/gmbv1Location"
        }
      },
      "title": "Response for EnableDisableSync"
    },
    "v1EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "EVENT_TYPE_TYPING_STARTED",
        "EVENT_TYPE_TYPING_STOPPED",
        "EVENT_TYPE_REPRESENTATIVE_JOINED",
        "EVENT_TYPE_REPRESENTATIVE_LEFT"
      ],
      "default": "EVENT_TYPE_UNSPECIFIED",
      "title": "Event"
    },
    "v1GetAsSocialServiceRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      },
      "title": "Request for GetAsSocialService"
    },
    "v1GetAsSocialServiceResponse": {
      "type": "object",
      "properties": {
        "serviceType": {
          "type": "string"
        },
        "ssid": {
          "type": "string"
        },
        "googleUserId": {
          "type": "string"
        },
        "agid": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        },
        "socialSyncFlag": {
          "type": "boolean"
        },
        "spid": {
          "type": "string"
        },
        "isAuthenticated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Response for GetAsSocialService"
    },
    "v1GetBusinessLaunchStatusRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1GetBusinessLaunchStatusResponse": {
      "type": "object",
      "properties": {
        "isLaunched": {
          "type": "boolean"
        }
      }
    },
    "v1GetConnectionRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "googleUserId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "refreshFromGoogleFlag": {
          "type": "boolean"
        }
      },
      "title": "Request for GetConnection"
    },
    "v1GetConnectionsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "googleUserId": {
          "type": "string"
        },
        "locationPathName": {
          "type": "string"
        },
        "refreshFromGoogleFlag": {
          "type": "boolean"
        }
      },
      "title": "Request for GetConnections"
    },
    "v1GetConnectionsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gmbv1Location"
          }
        }
      },
      "title": "Response for GetConnections"
    },
    "v1GetGoogleUserRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "googleUserId": {
          "type": "string"
        }
      },
      "title": "Request for GetGoogleUser"
    },
    "v1GetGoogleUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1GoogleUser"
        }
      },
      "title": "Response for GetGoogleUser"
    },
    "v1GetMultiAccountLocationRequest": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiAccountLocationResponse": {
      "type": "object",
      "properties": {
        "accountLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountLocation"
          }
        }
      }
    },
    "v1GetMultiQuestionsRequest": {
      "type": "object",
      "properties": {
        "questionIds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1QuestionIdentifier"
          },
          "title": "The set of question ids to retrieve"
        },
        "includeAnswers": {
          "type": "boolean",
          "title": "Whether or not to include answers to the questions"
        }
      },
      "title": "Request for getting multiple questions"
    },
    "v1GetMultiQuestionsResponse": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Question"
          }
        }
      },
      "title": "Response for getting multiple questions"
    },
    "v1GetMultiTimeRangeRequest": {
      "type": "object",
      "properties": {
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceId"
          },
          "title": "The list of ResourceId, which are either groups or account groups"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner id which the resources above belong to, necessary for scoping the query"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "metricTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1MetricType"
          },
          "description": "The types of metrics desired in the response. If nothing is provided, all metric types are returned."
        },
        "delta": {
          "type": "boolean",
          "title": "Delta is the difference between the total in the requested time range, and the previous, equal sized time range.\nIf there is not an equal sized previous time range of possible GMB data, delta will not be returned"
        },
        "total": {
          "type": "boolean",
          "title": "Total is the total for a metric in the requested time range"
        },
        "overTime": {
          "type": "boolean",
          "title": "Over time is the values over time for the metric -- the resolution and aggregation strategy is decided by the service"
        }
      }
    },
    "v1GetMultiTimeRangeResponse": {
      "type": "object",
      "properties": {
        "resourceInsights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiTimeRangeResponseInsightsContainer"
          }
        }
      }
    },
    "v1GetQuestionAnswerStatsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        }
      },
      "title": "Request for getting stats for a business"
    },
    "v1GetQuestionAnswerStatsResponse": {
      "type": "object",
      "properties": {
        "unanswered": {
          "type": "string",
          "format": "int64"
        },
        "answeredByOwner": {
          "type": "string",
          "format": "int64"
        },
        "totalQuestions": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Response with stats for a business"
    },
    "v1GetQuestionRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        },
        "includeAnswers": {
          "type": "boolean"
        },
        "onlyLatestVersion": {
          "type": "boolean"
        }
      },
      "title": "Request for getting a question with specific question id"
    },
    "v1GetQuestionResponse": {
      "type": "object",
      "properties": {
        "question": {
          "$ref": "#/definitions/v1Question"
        }
      },
      "title": "Response for getting a questions with specific question id"
    },
    "v1GetTimeRangeRequest": {
      "type": "object",
      "properties": {
        "groupPathNodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The group ids which form the path to the group whose data is being requested"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Optional account group id at the specified group"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "metricTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1MetricType"
          },
          "description": "The types of metrics desired in the response. If nothing is provided, all metric types are returned."
        }
      }
    },
    "v1GoogleUser": {
      "type": "object",
      "properties": {
        "socialProfileId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "socialServiceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "isTokenBroken": {
          "type": "boolean"
        },
        "expiryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1Image": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string"
        }
      }
    },
    "v1Insight": {
      "type": "object",
      "properties": {
        "metricType": {
          "$ref": "#/definitions/v1MetricType"
        },
        "totalValue": {
          "$ref": "#/definitions/v1Metric",
          "description": "The summation of the individual metrics over the period this Insight was requested with."
        },
        "deltaValue": {
          "$ref": "#/definitions/v1Metric",
          "description": "How the total value has changed since the last period this Insight was requested with."
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Metric"
          },
          "title": "The metric over time, sorted time-descending"
        }
      }
    },
    "v1InsightsResponse": {
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "title": "Insight per requested metric type"
        },
        "locationCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of locations at this resource"
        },
        "connectedLocationCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of connected locations at this resource"
        }
      }
    },
    "v1InsightsStat": {
      "type": "object",
      "properties": {
        "currentValue": {
          "type": "string",
          "format": "int64"
        },
        "change": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ListQuestionsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "includeAnswers": {
          "type": "boolean"
        },
        "onlyLatestVersion": {
          "type": "boolean"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        },
        "cursor": {
          "type": "string"
        }
      },
      "title": "Request for listing questions for an account group"
    },
    "v1ListQuestionsResponse": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Question"
          }
        },
        "more": {
          "type": "boolean",
          "description": "Indicates that more questions were avaialable, but not returned due\nto the page size limit."
        },
        "cursor": {
          "type": "string",
          "description": "A cursor that can be passed to subsequent ListQuestionsRequest requests to\npage through the results."
        }
      },
      "title": "Response for listing questions for an account group"
    },
    "v1Metric": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        },
        "timeDimension": {
          "$ref": "#/definitions/v1TimeDimension"
        }
      }
    },
    "v1MetricType": {
      "type": "string",
      "enum": [
        "NONE",
        "QUERIES_DIRECT",
        "QUERIES_INDIRECT",
        "VIEWS_MAPS",
        "VIEWS_SEARCH",
        "ACTIONS_WEBSITE",
        "ACTIONS_PHONE",
        "ACTIONS_DRIVING_DIRECTIONS",
        "QUERIES_CHAIN",
        "PHOTOS_VIEWS_MERCHANT",
        "PHOTOS_VIEWS_CUSTOMERS",
        "PHOTOS_COUNT_MERCHANT",
        "PHOTOS_COUNT_CUSTOMERS",
        "LOCAL_POST_VIEWS_SEARCH",
        "LOCAL_POST_ACTIONS_CALL_TO_ACTION"
      ],
      "default": "NONE",
      "description": "- NONE: Dummy default value\n - QUERIES_DIRECT: The number of times the listing was shown when searching for it directly.\n - QUERIES_INDIRECT: The number of times the listing was shown as a result of a categorical search (for example, restaurant \"restaurant\").\n - VIEWS_MAPS: The number of times the listing was viewed on Google Maps.\n - VIEWS_SEARCH: The number of times the listing was viewed on Google Search.\n - ACTIONS_WEBSITE: The number of times the website was clicked on the listing.\n - ACTIONS_PHONE: The number of times the phone number was clicked on the listing.\n - ACTIONS_DRIVING_DIRECTIONS: The number of times driving directions were requested for the listing.\n - QUERIES_CHAIN: The number of times a resource was shown as a result of a search for the chain it belongs to, or a brand it sells. For example, Starbucks, Adidas. This is a subset of QUERIES_INDIRECT.\n - PHOTOS_VIEWS_MERCHANT: The number of views on media items uploaded by the merchant.\n - PHOTOS_VIEWS_CUSTOMERS: The number of views on media items uploaded by customers.\n - PHOTOS_COUNT_MERCHANT: The total number of media items that are currently live that have been uploaded by the merchant.\n - PHOTOS_COUNT_CUSTOMERS: The total number of media items that are currently live that have been uploaded by customers.\n - LOCAL_POST_VIEWS_SEARCH: The number of times the local post was viewed on Google Search.\n - LOCAL_POST_ACTIONS_CALL_TO_ACTION: The number of times the call to action button was clicked on Google.",
      "title": "These are defined by Google's API for insight data:\nhttps://developers.google.com/my-business/reference/rest/v4/Metric"
    },
    "v1Period": {
      "type": "string",
      "enum": [
        "DAY",
        "WEEK",
        "MONTH"
      ],
      "default": "DAY"
    },
    "v1PopulateGoogleBusinessProfilePerformanceMetricsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group id which the data belongs to"
        },
        "startDate": {
          "$ref": "#/definitions/typeDate",
          "title": "The time range of the data requested"
        },
        "endDate": {
          "$ref": "#/definitions/typeDate"
        }
      }
    },
    "v1PopulateGoogleBusinessProfileSearchKeywordsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group id which the data belongs to"
        },
        "googleLocationId": {
          "type": "string",
          "title": "The listing id of the location that we want to fetch the searched keywords for"
        },
        "startDate": {
          "$ref": "#/definitions/typeDate",
          "title": "The time range of the data requested"
        },
        "endDate": {
          "$ref": "#/definitions/typeDate"
        }
      }
    },
    "v1PostInsightsHistory": {
      "type": "object",
      "properties": {
        "socialProfileId": {
          "type": "string",
          "title": "A social profile id"
        },
        "internalPostId": {
          "type": "string",
          "title": "our internal post id"
        },
        "views": {
          "type": "string",
          "format": "int64",
          "title": "Number of views"
        },
        "callToActionClicks": {
          "type": "string",
          "format": "int64",
          "title": "Number of clicks on the CTA"
        },
        "postedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Datetime for the post is posted"
        },
        "statsDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "the datetime when the post stats data is collected"
        },
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID"
        }
      }
    },
    "v1Question": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner id"
        },
        "accountGroupId": {
          "type": "string",
          "title": "Account Group ID"
        },
        "locationId": {
          "type": "string",
          "title": "Google Location ID"
        },
        "questionId": {
          "type": "string",
          "title": "Question ID"
        },
        "version": {
          "type": "string",
          "title": "Version of question"
        },
        "locationPathName": {
          "type": "string",
          "title": "Google Location Path Name"
        },
        "text": {
          "type": "string",
          "title": "Question Content"
        },
        "author": {
          "type": "string",
          "title": "Author Name"
        },
        "authorPhotoUrl": {
          "type": "string",
          "title": "Author profile photo url"
        },
        "authorType": {
          "type": "string",
          "title": "Author type"
        },
        "totalAnswerCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of answers"
        },
        "upVoteCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of up votes"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "title": "The datatime when the question is published"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the question is created in our system"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the question is modified in our system"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The datetime when the question is deleted in our system"
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Answer"
          },
          "title": "Answers to the question"
        },
        "previousVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Question"
          },
          "title": "Previous versions of this question"
        }
      }
    },
    "v1QuestionIdentifier": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Uniquely identifies a Question"
    },
    "v1ReplaceAccountLocationRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "googleAccountId": {
          "type": "string"
        },
        "googleLocationId": {
          "type": "string"
        }
      }
    },
    "v1ReplacePostInsightsHistoryRequest": {
      "type": "object",
      "properties": {
        "postInsightsHistory": {
          "$ref": "#/definitions/v1PostInsightsHistory",
          "title": "A PostInsightsHistory model"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Mask for the fields that need to be created or updated"
        }
      },
      "title": "Request for writing PostInsightsHistory model"
    },
    "v1ResourceId": {
      "type": "object",
      "properties": {
        "groupPathNodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "If requesting data for a group, this will be the path to that group"
        },
        "accountGroupId": {
          "type": "string",
          "title": "If requesting data for a group, this will be blank\nIf requesting data for an account group, this will be set, and the group at group path should contain this\naccount group as a member, used for authentication"
        }
      },
      "title": "A resource in GMB is either a group, or an account group"
    },
    "v1SendMessageRequest": {
      "type": "object",
      "properties": {
        "gmbConversationId": {
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/v1User"
        },
        "image": {
          "$ref": "#/definitions/v1Image"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "v1SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      }
    },
    "v1SyncDataRequest": {
      "type": "object",
      "properties": {
        "gmbInsightsJson": {
          "type": "string",
          "title": "The raw json from GMB insights -- intentionally untouched to allow for GMB to get this json on it's own in the future\nThe json contains which google account/location ids it is for"
        },
        "requestedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time when the data was requested"
        },
        "accountGroupId": {
          "type": "string",
          "title": "The account group id which the data belongs to"
        }
      }
    },
    "v1TimeDimension": {
      "type": "object",
      "properties": {
        "timeRange": {
          "$ref": "#/definitions/v1TimePeriod"
        }
      }
    },
    "v1TimePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "period": {
          "$ref": "#/definitions/v1Period"
        }
      }
    },
    "v1UnlaunchBusinessCommunicationsAgentRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "userAvatarUrl": {
          "type": "string"
        },
        "userType": {
          "$ref": "#/definitions/v1UserType"
        }
      }
    },
    "v1UserType": {
      "type": "string",
      "enum": [
        "USER_TYPE_UNSPECIFIED",
        "USER_TYPE_BOT",
        "USER_TYPE_HUMAN"
      ],
      "default": "USER_TYPE_UNSPECIFIED",
      "title": "User"
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
