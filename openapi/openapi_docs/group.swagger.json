{
  "swagger": "2.0",
  "info": {
    "title": "group/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "GroupService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/group.v1.GroupService/AddMembers": {
      "post": {
        "summary": "Add members to a specific group",
        "operationId": "GroupService_AddMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddMembersRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/Create": {
      "post": {
        "summary": "Create a new group",
        "operationId": "GroupService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/Delete": {
      "post": {
        "summary": "Delete a group",
        "operationId": "GroupService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/GetMulti": {
      "post": {
        "summary": "GetMulti groups",
        "operationId": "GroupService_GetMulti",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/List": {
      "post": {
        "summary": "List all the child groups for a given path",
        "operationId": "GroupService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/ListGroupsByMembers": {
      "post": {
        "summary": "ListGroupsByMember returns the groups that the member is directly part of",
        "operationId": "GroupService_ListGroupsByMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGroupsByMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListGroupsByMembersRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/ListMembers": {
      "post": {
        "summary": "ListMembers all the values in a group, and it's children as a flat list",
        "operationId": "GroupService_ListMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMembersRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/MembersExist": {
      "post": {
        "summary": "Check if a list of members exist in a given group or the group's children",
        "operationId": "GroupService_MembersExist",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MembersExistResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MembersExistRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/RemoveMembers": {
      "post": {
        "summary": "Remove members to a specific group",
        "operationId": "GroupService_RemoveMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveMembersRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/group.v1.GroupService/Update": {
      "post": {
        "summary": "Update a group",
        "operationId": "GroupService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    }
  },
  "definitions": {
    "GetMultiResponseGroupContainer": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        }
      }
    },
    "ListRequestFilters": {
      "type": "object",
      "properties": {
        "memberType": {
          "type": "string",
          "title": "Filter the groups to the types of values they store"
        },
        "namespace": {
          "type": "string",
          "title": "Filter the groups by a specific namespace"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddMembersRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to a group where the members should be added"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The members to add"
        }
      }
    },
    "v1CreateRequest": {
      "type": "object",
      "properties": {
        "foreignKeys": {
          "$ref": "#/definitions/v1ForeignKeys",
          "title": "Foreign keys which relate to this group"
        },
        "name": {
          "type": "string",
          "title": "The name of the group"
        },
        "path": {
          "$ref": "#/definitions/v1Path",
          "description": "The path to the node where the group should be created."
        },
        "memberType": {
          "type": "string",
          "description": "The type of members this group will store."
        },
        "namespace": {
          "type": "string",
          "title": "The namespace this group is scoped to"
        }
      }
    },
    "v1CreateResponse": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "The id of the group which was created"
        },
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to the group which was created"
        }
      }
    },
    "v1DeleteGroupRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "A path to the group to delete"
        }
      }
    },
    "v1ForeignKeys": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner that owns the group"
        },
        "marketId": {
          "type": "string",
          "title": "The id of the market that owns the group"
        }
      }
    },
    "v1GetMultiRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Path"
          },
          "title": "Path to the groups to get"
        }
      }
    },
    "v1GetMultiResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiResponseGroupContainer"
          }
        }
      }
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "Group identifier"
        },
        "foreignKeys": {
          "$ref": "#/definitions/v1ForeignKeys",
          "title": "Foreign keys which relate to this group"
        },
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to this specific group"
        },
        "name": {
          "type": "string",
          "title": "The name of the group"
        },
        "memberType": {
          "type": "string",
          "description": "The type of the members. A group must consist of the same type of members. A member type could be something\nlike account group, user or salesperson."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The group's created time"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The groups updated time"
        },
        "namespace": {
          "type": "string",
          "title": "The namespace of this group"
        },
        "membershipVersion": {
          "type": "string",
          "format": "int64",
          "title": "The current membership version of this group"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The members of the group"
        },
        "membersCount": {
          "type": "string",
          "format": "int64",
          "title": "The count for the members in the group"
        }
      }
    },
    "v1GroupList": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          }
        }
      }
    },
    "v1ListGroupsByMembersRequest": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The member to search"
        }
      }
    },
    "v1ListGroupsByMembersResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1GroupList"
          },
          "title": "Map of member_id to the groups that member is directly part of"
        }
      }
    },
    "v1ListMembersRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to the node"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      }
    },
    "v1ListMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "All the members in the group and its descendants"
        },
        "totalMembers": {
          "type": "string",
          "format": "int64",
          "title": "The total members in this group"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListRequest": {
      "type": "object",
      "properties": {
        "foreignKeys": {
          "$ref": "#/definitions/v1ForeignKeys",
          "title": "Foreign keys which relate to this group"
        },
        "path": {
          "$ref": "#/definitions/v1Path",
          "description": "The path to the group. If no path is provided a list of the root groups will be returned."
        },
        "filters": {
          "$ref": "#/definitions/ListRequestFilters",
          "title": "Filter the list of groups"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        },
        "includeDescendants": {
          "type": "boolean",
          "title": "Indicates that grand-children, and all descendants should be included"
        },
        "includeMembers": {
          "type": "boolean",
          "title": "Get the members of each desendant"
        },
        "includeMembersCount": {
          "type": "boolean",
          "title": "Get the count of each member's of each desendants"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption",
          "title": "Sort the results by the given field in ascending order"
        }
      }
    },
    "v1ListResponse": {
      "type": "object",
      "properties": {
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          },
          "title": "A list of groups"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "How many total results are there"
        }
      }
    },
    "v1MembersExistRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path of the group to check if the members exist in"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of members"
        }
      }
    },
    "v1MembersExistResponse": {
      "type": "object",
      "properties": {
        "exist": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "title": "A list of booleans indicating whether or not the member exists in this group\nThe order matches the order that the members were provided in the request"
        }
      }
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1Path": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of nodes in the path"
        }
      }
    },
    "v1RemoveMembersRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to a group where the members should be removed"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The members to remove"
        }
      }
    },
    "v1SortField": {
      "type": "string",
      "enum": [
        "SORT_FIELD_UNSET",
        "SORT_FIELD_GROUP_ID",
        "SORT_FIELD_NAME"
      ],
      "default": "SORT_FIELD_UNSET"
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/v1SortField"
        }
      }
    },
    "v1UpdateRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "Path to the group to update"
        },
        "name": {
          "type": "string",
          "title": "Name the new name of the group"
        }
      }
    }
  }
}
