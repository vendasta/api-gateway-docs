{
  "swagger": "2.0",
  "info": {
    "title": "iam_resources/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ResourceOwner"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/iamresources.v1.ResourceOwner/GetResource": {
      "post": {
        "summary": "deprecated: Use GetResources\nGetResource allows IAM to ask for the attribute-based representation of a single resource entity.",
        "operationId": "ResourceOwner_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetResourceRequest allows IAM to ask a ResourceOwner for the attribute-based representation of a single resource entity.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetResourceRequest"
            }
          }
        ],
        "tags": [
          "ResourceOwner"
        ]
      }
    },
    "/iamresources.v1.ResourceOwner/GetResources": {
      "post": {
        "summary": "GetResources allows IAM to ask for the attribute-based representation of multiple resource entities.",
        "operationId": "ResourceOwner_GetResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetResourceRequest allows IAM to ask a ResourceOwner for the attribute-based representation of multiple resource entities.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetResourcesRequest"
            }
          }
        ],
        "tags": [
          "ResourceOwner"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1GetResourceRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "title": "resource_id is the resource type that the subject wants to access"
        },
        "resourceIdentifier": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValueList"
          },
          "description": "resource_identifier is a set of parameters that a resource owner needs to identify a resource."
        }
      },
      "description": "GetResourceRequest allows IAM to ask a ResourceOwner for the attribute-based representation of a single resource entity."
    },
    "v1GetResourceResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValueList"
          }
        }
      },
      "description": "GetResourceResponse includes the expression of a resource as a map of attributes. Only attributes relevant to access control and used by\npolicies defined by this resource need to be includes in this map."
    },
    "v1GetResourcesRequest": {
      "type": "object",
      "properties": {
        "resourceIdentifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Identifiers"
          }
        },
        "resourceId": {
          "type": "string",
          "title": "resource_id is the resource type that the subject wants to access"
        }
      },
      "description": "GetResourceRequest allows IAM to ask a ResourceOwner for the attribute-based representation of multiple resource entities."
    },
    "v1GetResourcesResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Identifiers"
          }
        }
      },
      "description": "GetResourcesResponse includes the expression of a resource as a map of attributes. Only attributes relevant to access control and used by\npolicies defined by the set of resources need to be includes in this map."
    },
    "v1Identifiers": {
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ValueList"
          },
          "description": "identifiers is a set of parameters that a resource owner needs to identify a resource."
        }
      },
      "description": "Identifiers is a set of identifiers for retreiving resources and identifying resource data."
    },
    "v1ValueList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ValueList is a holder for multiple string values in order to be compatible with map declarations"
    }
  }
}
