{
  "swagger": "2.0",
  "info": {
    "title": "instagram/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Instagram"
    },
    {
      "name": "InstagramV2"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/instagram.v1.Instagram/BreakInstagramUserToken": {
      "post": {
        "summary": "Sets the token_broken value to \"true\"",
        "operationId": "Instagram_BreakInstagramUserToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BreakInstagramUserTokenRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ConnectInstagramBusiness": {
      "post": {
        "summary": "ConnectInstagramBusiness saves an instagram business to the InstagramUser",
        "operationId": "Instagram_ConnectInstagramBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectInstagramBusinessRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/CreateComment": {
      "post": {
        "summary": "Create an instagram comment",
        "operationId": "Instagram_CreateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCommentRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/CreateMedia": {
      "post": {
        "summary": "Create Media for a User",
        "operationId": "Instagram_CreateMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateMediaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/CreateUser": {
      "post": {
        "summary": "Create an instagram User",
        "operationId": "Instagram_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/DeleteMedia": {
      "post": {
        "summary": "Delete Media by id",
        "operationId": "Instagram_DeleteMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/DeleteUser": {
      "post": {
        "summary": "Delete an instagram User by id",
        "operationId": "Instagram_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteUserRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/DisableMessaging": {
      "post": {
        "summary": "Disable Instagram Messaging for a given instagram account",
        "operationId": "Instagram_DisableMessaging",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableMessagingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisableMessagingRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/EnableMessaging": {
      "post": {
        "summary": "Enable Instagram Messaging for a given instagram account",
        "operationId": "Instagram_EnableMessaging",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableMessagingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EnableMessagingRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetBusinessStats": {
      "post": {
        "summary": "Gets Stats for an Instagram Business",
        "operationId": "Instagram_GetBusinessStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBusinessStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBusinessStatsRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetInstagramBusiness": {
      "post": {
        "summary": "Get Instagram Business",
        "operationId": "Instagram_GetInstagramBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInstagramBusinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetInstagramBusinessRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetMedia": {
      "post": {
        "summary": "Get Media by id",
        "operationId": "Instagram_GetMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMediaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetMessagingStatus": {
      "post": {
        "summary": "Get the messaging state for a business",
        "operationId": "Instagram_GetMessagingStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMessagingStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMessagingStatusRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetMessagingUser": {
      "post": {
        "summary": "GetMessagingUser fetches details about the user associated with a given page-scoped instagram user id",
        "operationId": "Instagram_GetMessagingUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMessagingUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMessagingUserRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetMultiMedia": {
      "post": {
        "summary": "List Media for a User",
        "operationId": "Instagram_GetMultiMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiMediaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetMultiMediaStats": {
      "post": {
        "summary": "Get Media Stats by ID",
        "operationId": "Instagram_GetMultiMediaStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiMediaStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiMediaStatsRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/GetUser": {
      "post": {
        "summary": "Get an instagram User by id",
        "operationId": "Instagram_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUserRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListComments": {
      "post": {
        "summary": "List instagram comments for media or comments",
        "operationId": "Instagram_ListComments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCommentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCommentsRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListFacebookPages": {
      "post": {
        "summary": "List Facebook pages for a user",
        "operationId": "Instagram_ListFacebookPages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFacebookPagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFacebookPagesRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListFailedMediasForMultilocation": {
      "post": {
        "summary": "List failed multilocation posts",
        "operationId": "Instagram_ListFailedMediasForMultilocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFailedMediasForMultilocationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFailedMediasForMultilocationRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListInstagramBusiness": {
      "post": {
        "summary": "List Instagram Business",
        "operationId": "Instagram_ListInstagramBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListInstagramBusinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListInstagramBusinessRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListMedia": {
      "post": {
        "summary": "List Media for a User",
        "operationId": "Instagram_ListMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMediaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListUsers": {
      "post": {
        "summary": "List instagram Users for a business",
        "operationId": "Instagram_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUsersRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ListUsersByMultiBusinesses": {
      "post": {
        "summary": "List instagram Users across multiple businesses",
        "operationId": "Instagram_ListUsersByMultiBusinesses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersByMultiBusinessesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUsersByMultiBusinessesRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ManageMediaTags": {
      "post": {
        "summary": "Set Tags on a media object",
        "operationId": "Instagram_ManageMediaTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ManageMediaTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ManageMediaTagsRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/PopulateRecentMedia": {
      "post": {
        "summary": "Populates recent media for a user",
        "operationId": "Instagram_PopulateRecentMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PopulateRecentMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/PostMedia": {
      "post": {
        "summary": "Publishes an existing Media object to Instagram",
        "operationId": "Instagram_PostMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PostMediaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PostMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/ProcessBusinessStats": {
      "post": {
        "summary": "Fetches batched instagram business stats",
        "operationId": "Instagram_ProcessBusinessStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/SendMessage": {
      "post": {
        "summary": "Send a message to an instagram user on behalf of a business",
        "operationId": "Instagram_SendMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendMessageRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/UpdateMedia": {
      "post": {
        "summary": "Update Media by id",
        "operationId": "Instagram_UpdateMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMediaRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v1.Instagram/UpdateMediaInsights": {
      "post": {
        "summary": "Update Media Insights",
        "operationId": "Instagram_UpdateMediaInsights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMediaInsightsRequest"
            }
          }
        ],
        "tags": [
          "Instagram"
        ]
      }
    },
    "/instagram.v2.InstagramV2/PublishMedia": {
      "post": {
        "summary": "Publishes an existing Media object to Instagram asynchronously",
        "operationId": "InstagramV2_PublishMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2PublishMediaRequest"
            }
          }
        ],
        "tags": [
          "InstagramV2"
        ]
      }
    }
  },
  "definitions": {
    "BusinessStatsError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "A message describing the error"
        },
        "type": {
          "type": "string",
          "title": "The type of error from Facebook that occured"
        },
        "code": {
          "type": "string",
          "format": "int64",
          "title": "The code of the error from Facebook"
        }
      },
      "title": "A model representing an error that occurred when collecting business stats"
    },
    "BusinessStatsStats": {
      "type": "object",
      "properties": {
        "followersCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of followers for the instagram business"
        },
        "mediaCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of media posted by the instagram business"
        }
      },
      "title": "A model representing stats for an instagram business"
    },
    "SendMessageRequestAttachment": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MessageAttachmentType"
        },
        "url": {
          "type": "string"
        },
        "isReusable": {
          "type": "boolean",
          "description": "Whether the image url is used in the message sent to the Instagram user.\nIf false then a different url will be generated."
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1BreakInstagramUserTokenRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "User's partner id"
        },
        "businessId": {
          "type": "string",
          "title": "User's account group id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for a User"
        }
      },
      "title": "BreakInstagramUserTokenRequest contains the request info needed to break an IG user's token manually (set token_broken to true)"
    },
    "v1BusinessStats": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The username of the instagram business account"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the stats were reported for"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The created time of the stat entity"
        },
        "followersCount": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use followers_count on the stats property"
        },
        "mediaCount": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use media_count on the stats property"
        },
        "stats": {
          "$ref": "#/definitions/BusinessStatsStats",
          "title": "The stats for the instagram business"
        },
        "error": {
          "$ref": "#/definitions/BusinessStatsError",
          "title": "The error that occurred when collecting business stats"
        }
      },
      "title": "A model representing the state of an instagram business's stats for a date"
    },
    "v1Comment": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "string",
          "title": "The internal ID of the comment"
        },
        "parentId": {
          "type": "string",
          "description": "The parent ID of the comment. Can be a media ID or a comment ID."
        },
        "mediaId": {
          "type": "string",
          "description": "The ID of the Media this comment was made on."
        },
        "instagramCommentId": {
          "type": "string",
          "title": "The external ID of the comment"
        },
        "text": {
          "type": "string",
          "title": "The comment text"
        },
        "username": {
          "type": "string",
          "title": "The username of the commenter"
        },
        "instagramUserId": {
          "type": "string",
          "title": "The instagram user ID of the commenter"
        },
        "postedOn": {
          "type": "string",
          "format": "date-time",
          "title": "The time the comment was made"
        },
        "likeCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of likes on this comment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the comment was created in storage"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When comment was updated in storage"
        },
        "hasReplies": {
          "type": "boolean",
          "title": "Indicates if the comment has replies"
        }
      },
      "description": "A model representing an instagram Comment."
    },
    "v1ConnectInstagramBusinessRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for a User"
        },
        "facebookPageId": {
          "type": "string",
          "title": "A unique external identifier for a facebook page"
        },
        "instagramBusinessId": {
          "type": "string",
          "title": "A unique external identifier for an instagram business"
        }
      }
    },
    "v1CreateCommentRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner id"
        },
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "userId": {
          "type": "string",
          "title": "The unique internal identifier for an intstagram User"
        },
        "mediaId": {
          "type": "string",
          "title": "The unique internal identifier for the Media entity that owns the comment chain"
        },
        "parentId": {
          "type": "string",
          "title": "The unique internal identifier for the Media or Comment entity being commented on"
        },
        "text": {
          "type": "string",
          "title": "The comment text"
        }
      },
      "title": "Create a comment on Instagram"
    },
    "v1CreateCommentResponse": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "string",
          "title": "The newly generated comment id"
        }
      },
      "title": "Returns the new comment id"
    },
    "v1CreateMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for a User"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier for a Media object"
        },
        "postText": {
          "type": "string",
          "title": "Text of a social post"
        },
        "imageUrl": {
          "type": "string",
          "title": "Image for a social post"
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Scheduled post date time for a social post"
        },
        "hasScheduledTask": {
          "type": "boolean",
          "title": "The flag for if a task has been scheduled for this media"
        },
        "videoUrl": {
          "type": "string",
          "title": "Video for a social post"
        },
        "postedByOwner": {
          "type": "boolean",
          "title": "The flag indicating if this media entity was created from a mention"
        },
        "linkShortcodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The shortcodes for links used in this media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Adding metadata files here"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Media entry to hold details about the media"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType",
          "title": "post type to identify the media type e.g., image/gif/video etc"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags for a social post"
        },
        "multilocationPostId": {
          "type": "string",
          "title": "Multilocation post id for a social post if posted on multilocation context"
        },
        "brandId": {
          "type": "string",
          "title": "Brand id for a social post if posted on multilocation context"
        },
        "campaignId": {
          "type": "string",
          "title": "Campaign ID , Used to manage the campaign posts"
        }
      },
      "title": "Create Media for a User"
    },
    "v1CreateMediaResponse": {
      "type": "object",
      "properties": {
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier for a Media object"
        }
      },
      "title": "Return media ID if successful"
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "An business id"
        },
        "instagramUserId": {
          "type": "string",
          "title": "A unique ID for an instagram user"
        },
        "username": {
          "type": "string",
          "title": "A name for an instagram user"
        },
        "profilePicture": {
          "type": "string",
          "title": "A URL to a profile picture"
        },
        "fullName": {
          "type": "string",
          "title": "A full name for this instagram user"
        },
        "bio": {
          "type": "string",
          "title": "The bio set by the user in instagram"
        },
        "website": {
          "type": "string",
          "title": "A link to the user's website"
        },
        "accessToken": {
          "type": "string",
          "title": "The access token for this user"
        }
      },
      "title": "Create an instagram User"
    },
    "v1DeleteMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        },
        "instagramMediaId": {
          "type": "string",
          "title": "A unique identifier for a Media object"
        }
      },
      "title": "Delete an Instagram Media object"
    },
    "v1DeleteUserRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        }
      },
      "title": "Delete a user by id"
    },
    "v1DisableMessagingRequest": {
      "type": "object",
      "properties": {
        "instagramUserId": {
          "type": "string"
        }
      }
    },
    "v1DisableMessagingResponse": {
      "type": "object"
    },
    "v1EnableMessagingRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "title": "Internal instagram user ID"
        }
      }
    },
    "v1EnableMessagingResponse": {
      "type": "object"
    },
    "v1GetBusinessStatsRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "An instagram business username"
        }
      },
      "title": "GetBusinessStatsRequest gets stats for an instagram business"
    },
    "v1GetBusinessStatsResponse": {
      "type": "object",
      "properties": {
        "businessStats": {
          "$ref": "#/definitions/v1BusinessStats",
          "title": "Stats for the instagram business"
        },
        "status": {
          "$ref": "#/definitions/v1GetBusinessStatsResponseStatus",
          "title": "Status of the stats collection for today"
        }
      },
      "title": "GetBusinessStatsResponse returns stats for an instagram business"
    },
    "v1GetBusinessStatsResponseStatus": {
      "type": "string",
      "enum": [
        "GET_BUSINESS_STATS_RESPONSE_STATUS_IN_PROGRESS",
        "GET_BUSINESS_STATS_RESPONSE_STATUS_FINISHED"
      ],
      "default": "GET_BUSINESS_STATS_RESPONSE_STATUS_IN_PROGRESS"
    },
    "v1GetInstagramBusinessRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram user"
        },
        "facebookPageId": {
          "type": "string",
          "title": "A unique external identifier for a facebook page"
        }
      },
      "title": "GetInstagramBusinessRequest requests an instagram business for a facebook page"
    },
    "v1GetInstagramBusinessResponse": {
      "type": "object",
      "properties": {
        "instagramBusiness": {
          "$ref": "#/definitions/v1InstagramBusiness",
          "title": "An instagram business"
        }
      },
      "title": "GetInstagramBusinessResponse returns an instagram business for a facebook page"
    },
    "v1GetMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        },
        "instagramMediaId": {
          "type": "string",
          "title": "A unique identifier for a Media object"
        }
      },
      "title": "Get an Instagram Media object for a user"
    },
    "v1GetMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "$ref": "#/definitions/v1Media",
          "title": "Media for an intstagram user"
        }
      },
      "title": "GetMediaResponse returns an instagram media object"
    },
    "v1GetMessagingStatusRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetMessagingStatusResponse": {
      "type": "object",
      "properties": {
        "instagramUserId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1MessagingStatus"
        }
      }
    },
    "v1GetMessagingUserRequest": {
      "type": "object",
      "properties": {
        "instagramUserId": {
          "type": "string",
          "title": "The Instagram user with in-platform message subscriptions"
        },
        "pageScopedInstagramUserId": {
          "type": "string",
          "title": "The page-scoped id of an instagram user that sent a message"
        }
      }
    },
    "v1GetMessagingUserResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "v1GetMultiMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner ID"
        },
        "businessId": {
          "type": "string",
          "title": "A business ID"
        },
        "userId": {
          "type": "string",
          "title": "An internal User ID"
        },
        "mediaId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of unique internal identifier of instagram media for the post that are getting"
        },
        "keysets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaKeyset"
          },
          "title": "A list of keysets for Media"
        }
      },
      "title": "Get Multi Media for a list of media id"
    },
    "v1GetMultiMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "title": "A list of media"
        }
      },
      "title": "GetMultiMediaResponse is a collection of Media"
    },
    "v1GetMultiMediaStatsRequest": {
      "type": "object",
      "properties": {
        "mediaIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The unique internal IDs for Media objects"
        }
      },
      "title": "GetMultiMediaStatsRequest retrieves post stats for multiple media objects"
    },
    "v1GetMultiMediaStatsResponse": {
      "type": "object",
      "properties": {
        "mediaStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1MediaStats"
          },
          "title": "A map between media_ids and media stats"
        }
      },
      "title": "GetMultiMediaStatsResponse has comment count, share count, likes, reach, and video views"
    },
    "v1GetUserRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        }
      },
      "title": "Get an instagram User by id"
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "An instagram User"
        }
      },
      "title": "GetUser returns an instagram User"
    },
    "v1InstagramBusiness": {
      "type": "object",
      "properties": {
        "facebookPageId": {
          "type": "string",
          "title": "A facebook page id"
        },
        "instagramBusinessId": {
          "type": "string",
          "title": "An instagram business id"
        },
        "biography": {
          "type": "string",
          "title": "An instagram biography"
        },
        "name": {
          "type": "string",
          "title": "An instagram fullname"
        },
        "profilePictureUrl": {
          "type": "string",
          "title": "An instagram profile picture"
        },
        "username": {
          "type": "string",
          "title": "An instagram username"
        },
        "website": {
          "type": "string",
          "title": "A website"
        },
        "canPost": {
          "type": "boolean",
          "title": "If the current facebook user can post to this instagram page"
        }
      }
    },
    "v1ListCommentsRequest": {
      "type": "object",
      "properties": {
        "parentId": {
          "type": "string",
          "description": "The parent ID for which to list comments. Can be a Media ID or a Comment ID."
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "List comments for an Instagram Media or Comment"
    },
    "v1ListCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Comment"
          },
          "title": "A list of comments"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListCommentsResponse is a collection of Comments and paging metadata, ordered by posted_on"
    },
    "v1ListFacebookPagesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Option for paging"
        }
      },
      "title": "List facebook pages for a user"
    },
    "v1ListFacebookPagesResponse": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Page"
          },
          "title": "A list of facebook pages"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListFacebookPagesResponse returns paging information and facebook pages for a user"
    },
    "v1ListFailedMediasForMultilocationRequest": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of business ids"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "Filter starting at this timestamp"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "title": "Filter ending at this timestamp"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        },
        "brandId": {
          "type": "string"
        }
      },
      "title": "ListFailedMediasForMultilocationRequest contains request info needed to get  failed multilocation posts"
    },
    "v1ListFailedMediasForMultilocationResponse": {
      "type": "object",
      "properties": {
        "medias": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "title": "A list of failed multilocation posts"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListFailedMediasForMultilocationResponse contains response payload with failed multilocation posts and pagination"
    },
    "v1ListInstagramBusinessRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Option for paging"
        }
      },
      "title": "List Instagram Business for a user"
    },
    "v1ListInstagramBusinessResponse": {
      "type": "object",
      "properties": {
        "instagramBusiness": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InstagramBusiness"
          },
          "title": "a list of instagram business"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListInstagramBusinessResponse returns an list instagram business for a facebook user"
    },
    "v1ListMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner ID"
        },
        "businessId": {
          "type": "string",
          "title": "A business ID"
        },
        "userId": {
          "type": "string",
          "title": "An internal User ID"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "List Media for a User"
    },
    "v1ListMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Media"
          },
          "title": "A list of media"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListMediaResponse is a collection of Media and paging metadata, ordered by post_date_time"
    },
    "v1ListUsersByMultiBusinessesRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of business id"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "ListUsersByMultiBusinessesRequest list of instagram Users for multiple business"
    },
    "v1ListUsersByMultiBusinessesResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "A list of instagram Users, ordered alphabetically by name"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListUsersByMultiBusinessesResponse list of instagram Users for multiple business"
    },
    "v1ListUsersRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "options": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      },
      "title": "List instagram Users by business"
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "A list of instagram Users, ordered alphabetically by name"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paged response"
        }
      },
      "title": "ListUsers returns a list of instagram Users, ordered alphabetically by name"
    },
    "v1ManageMediaTagsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner id"
        },
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "userId": {
          "type": "string",
          "title": "The unique internal identifier for an instagram User"
        },
        "mediaId": {
          "type": "string",
          "title": "The unique identifier for a Media object"
        },
        "addTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to add to the media"
        },
        "removeTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags to remove from the media"
        }
      },
      "title": "Manage tags on an instagram media"
    },
    "v1ManageMediaTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of tags"
        }
      },
      "title": "Returns a list of tags on a media object"
    },
    "v1Media": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier of the user who posted this media"
        },
        "instagramUserId": {
          "type": "string",
          "title": "A unique identifier of the instagram user who posted this media"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier of instagram media"
        },
        "instagramMediaId": {
          "type": "string",
          "title": "A unique external identifier for instagram media"
        },
        "name": {
          "type": "string",
          "title": "The real name of the poster"
        },
        "username": {
          "type": "string",
          "title": "External username of the user who posted this media"
        },
        "postText": {
          "type": "string",
          "title": "The text body of the media"
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The indicated post date of the media"
        },
        "imageUrl": {
          "type": "string",
          "title": "The url belonging to this media image\nMulti-image support will be added as a repeated message in future\ninterations"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Internal tags for this media"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Client tags for this media"
        },
        "permalink": {
          "type": "string",
          "title": "A deep link to the media on instagram"
        },
        "error": {
          "type": "string",
          "title": "An error returned from posting"
        },
        "postedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The actual posted date time of a media"
        },
        "profilePictureUrl": {
          "type": "string",
          "title": "The profile picture url of the user who posted this media"
        },
        "hasScheduledTask": {
          "type": "boolean",
          "title": "The flag for if a task has been scheduled for this media"
        },
        "instagramCreationId": {
          "type": "string",
          "title": "The instagram media creation ID returned during media posting"
        },
        "commentsCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of comments on this media"
        },
        "likeCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of liked on this media"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the media was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The date the media was last updated"
        },
        "videoUrl": {
          "type": "string",
          "title": "The video_url for this media"
        },
        "postedByOwner": {
          "type": "boolean",
          "title": "The flag indicating if this media entity was created from a mention"
        },
        "linkShortcodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The shortcodes for links used in this media"
        },
        "reach": {
          "type": "string",
          "format": "int64",
          "title": "The number of unique users who have seen this post"
        },
        "saves": {
          "type": "string",
          "format": "int64",
          "title": "The number of unique users who have saved this post"
        },
        "videoViews": {
          "type": "string",
          "format": "int64",
          "title": "The number of times the video has been viewed"
        },
        "insightsUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "The last time post insights were updated"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType",
          "title": "The type of post e.g., Image/video/reel/gif etc"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Tracking the time the media was deleted"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Array of media content when uploading multiple media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Metadata about the media, could be anything"
        },
        "multilocationPostId": {
          "type": "string",
          "title": "Multilocation post id for a social post if posted on multilocation context"
        },
        "brandId": {
          "type": "string",
          "title": "Brand id for a social post if posted on multilocation context"
        },
        "campaignId": {
          "type": "string",
          "title": "Campaign ID , Used to manage the campaign posts"
        }
      },
      "title": "A model representing instagram media"
    },
    "v1MediaEntry": {
      "type": "object",
      "properties": {
        "mediaEntryId": {
          "type": "string"
        },
        "mediaUrl": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "containerId": {
          "type": "string"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          }
        }
      }
    },
    "v1MediaKeyset": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner ID"
        },
        "businessId": {
          "type": "string",
          "title": "The business ID"
        },
        "userId": {
          "type": "string",
          "title": "The user ID"
        },
        "mediaId": {
          "type": "string",
          "title": "The media ID"
        }
      },
      "title": "MediaKeyset is the primary key for a Media object"
    },
    "v1MediaStats": {
      "type": "object",
      "properties": {
        "commentsCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of comments on this media"
        },
        "likeCount": {
          "type": "string",
          "format": "int64",
          "title": "The number of likes on this media"
        },
        "reach": {
          "type": "string",
          "format": "int64",
          "title": "The number of unique users who have seen this media"
        },
        "saves": {
          "type": "string",
          "format": "int64",
          "title": "The number of times this media has been saved"
        },
        "videoViews": {
          "type": "string",
          "format": "int64",
          "title": "The number of times this media's video has been viewed"
        }
      },
      "title": "Stats for a Media objects"
    },
    "v1MessageAttachmentType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "IMAGE",
        "AUDIO",
        "VIDEO",
        "FILE",
        "TEMPLATE"
      ],
      "default": "UNSPECIFIED"
    },
    "v1MessagingStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATUS",
        "MESSAGING_ENABLED",
        "MESSAGING_TOKEN_INVALID",
        "MESSAGING_TOKEN_MISSING_PERMISSIONS",
        "USER_NOT_CONNECTED",
        "USER_TOKEN_INVALID",
        "USER_TOKEN_MISSING_PERMISSIONS",
        "MESSAGING_CAN_BE_ENABLED"
      ],
      "default": "UNKNOWN_STATUS",
      "description": " - MESSAGING_ENABLED: Messaging is fully enabled\n - MESSAGING_TOKEN_INVALID: The messaging subscription exists, but the token is invalid\n - MESSAGING_TOKEN_MISSING_PERMISSIONS: The messaging subscription exists, but the token does not have the required permissions\n - USER_NOT_CONNECTED: No User row exists for the provided partnerId and businessId\n - USER_TOKEN_INVALID: The User row exists, but the token is invalid\n - USER_TOKEN_MISSING_PERMISSIONS: The User row exists, but the token does not have the required permissions\n - MESSAGING_CAN_BE_ENABLED: The User row exists and has a valid token with all permissions, but messaging is not yet enabled."
    },
    "v1MetaData": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        }
      },
      "title": "Metadata message type for saving properties in instagram µservice"
    },
    "v1Page": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string",
          "title": "An external id for a facebook page"
        },
        "name": {
          "type": "string",
          "title": "The name of a facebook page"
        },
        "location": {
          "type": "string",
          "title": "Location is the location of a facebook page, if set"
        },
        "url": {
          "type": "string",
          "title": "URL is a permalink to the facebook page"
        },
        "perms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Perms is a list of permissions granted to the access token making a page request"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tasks is a list of actions that the facebook user can do on this page"
        }
      },
      "title": "A model representing a facebook page connected through oauth"
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "Options for how to page the response for a List request"
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Metadata related to the paged response from a List request"
    },
    "v1PopulateRecentMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner ID"
        },
        "businessId": {
          "type": "string",
          "title": "A business ID"
        },
        "userId": {
          "type": "string",
          "title": "An internal User ID"
        }
      },
      "title": "Populate recent media for a User"
    },
    "v1PostMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for a User"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier for a Media object"
        }
      },
      "title": "PostMediaRequest publishes a Media object by ID"
    },
    "v1PostMediaResponse": {
      "type": "object",
      "properties": {
        "media": {
          "$ref": "#/definitions/v1Media",
          "title": "The newly posted media object"
        }
      },
      "title": "PostMediaResponse returns the id of the newly posted media"
    },
    "v1PostType": {
      "type": "string",
      "enum": [
        "POST_TYPE_INVALID",
        "POST_TYPE_IMAGE",
        "POST_TYPE_VIDEO",
        "POST_TYPE_GIF",
        "POST_TYPE_REEL",
        "POST_TYPE_CAROUSEL",
        "POST_TYPE_STORIES"
      ],
      "default": "POST_TYPE_INVALID"
    },
    "v1SendMessageRequest": {
      "type": "object",
      "properties": {
        "senderId": {
          "type": "string",
          "description": "The User ID for the Instagram professional account the recipient will see\nas the sender of the message."
        },
        "recipientId": {
          "type": "string",
          "title": "The id of an instagram user that previously sent a message to this page"
        },
        "text": {
          "type": "string"
        },
        "attachment": {
          "$ref": "#/definitions/SendMessageRequestAttachment"
        }
      }
    },
    "v1SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "title": "Message ID returned from the Facebook Graph messenger API"
        },
        "recipientId": {
          "type": "string",
          "title": "The id of the instagram user the message was sent to"
        }
      }
    },
    "v1UpdateMediaInsightsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for a User"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier for a Media object"
        }
      },
      "title": "UpdateMediaInsightsRequest fetches and saves recent insights for a media object"
    },
    "v1UpdateMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "A partner id"
        },
        "businessId": {
          "type": "string",
          "title": "A business id"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for an instagram User"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique identifier for a Media object"
        },
        "postText": {
          "type": "string",
          "title": "New post text"
        },
        "imageUrl": {
          "type": "string",
          "title": "New image url"
        },
        "postDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "The post date time"
        },
        "hasScheduledTask": {
          "type": "boolean",
          "title": "The flag for if a task has been scheduled for this media"
        },
        "videoUrl": {
          "type": "string",
          "title": "New video url"
        },
        "linkShortcodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The shortcodes for links used in this media"
        },
        "metaData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetaData"
          },
          "title": "Adding metadata files here"
        },
        "mediaEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MediaEntry"
          },
          "title": "Media entry to hold details about the media"
        },
        "postType": {
          "$ref": "#/definitions/v1PostType",
          "title": "post type to identify the media type e.g., image/gif/video etc"
        },
        "multilocationPostId": {
          "type": "string",
          "title": "Multilocation post id for a social post if posted on multilocation context"
        },
        "brandId": {
          "type": "string",
          "title": "Brand id for a social post if posted on multilocation context"
        }
      },
      "title": "UpdateMediaRequest updates an Instagram Media object"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The ID of the partner owning this account group"
        },
        "businessId": {
          "type": "string",
          "title": "The ID of the business authing this user"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal ID for an instagram user"
        },
        "instagramUserId": {
          "type": "string",
          "title": "A unique ID for an instagram user"
        },
        "username": {
          "type": "string",
          "title": "A name for an instagram user"
        },
        "profilePicture": {
          "type": "string",
          "title": "A URL to a profile picture"
        },
        "fullName": {
          "type": "string",
          "title": "A full name for this instagram user"
        },
        "bio": {
          "type": "string",
          "title": "The bio set by the user in instagram"
        },
        "website": {
          "type": "string",
          "title": "A link to the user's website"
        },
        "isBusiness": {
          "type": "boolean",
          "title": "Whether or not this account is a business"
        },
        "accessToken": {
          "type": "string",
          "title": "The access token for this user"
        },
        "facebookUserId": {
          "type": "string",
          "title": "A unique ID for Facebook user"
        },
        "tokenBroken": {
          "type": "boolean",
          "title": "Is the access token broken"
        },
        "metaAppId": {
          "type": "string",
          "description": "Which Meta app the user is connected to."
        }
      },
      "title": "A model representing an instagram user connected through oauth"
    },
    "v2PublishMediaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner id associated with this media"
        },
        "businessId": {
          "type": "string",
          "title": "The business id associated with this media"
        },
        "userId": {
          "type": "string",
          "title": "A unique internal identifier for the user related to this media"
        },
        "mediaId": {
          "type": "string",
          "title": "A unique internal identifier for the Media object"
        }
      },
      "title": "PublishMediaRequest publishes a Media object by ID"
    }
  }
}
