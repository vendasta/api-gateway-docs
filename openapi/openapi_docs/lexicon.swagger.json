{
  "swagger": "2.0",
  "info": {
    "title": "lexicon/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Lexicon"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/lexicon.v1.Lexicon/GetSupportedLanguages": {
      "post": {
        "operationId": "Lexicon_GetSupportedLanguages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSupportedLanguagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSupportedLanguagesRequest"
            }
          }
        ],
        "tags": [
          "Lexicon"
        ]
      }
    },
    "/lexicon.v1.Lexicon/GetTranslation": {
      "post": {
        "operationId": "Lexicon_GetTranslation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTranslationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTranslationRequest"
            }
          }
        ],
        "tags": [
          "Lexicon"
        ]
      }
    },
    "/lexicon.v1.Lexicon/GetTranslations": {
      "post": {
        "operationId": "Lexicon_GetTranslations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTranslationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTranslationsRequest"
            }
          }
        ],
        "tags": [
          "Lexicon"
        ]
      }
    },
    "/lexicon.v1.Lexicon/InvalidateCache": {
      "post": {
        "operationId": "Lexicon_InvalidateCache",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InvalidateCacheRequest"
            }
          }
        ],
        "tags": [
          "Lexicon"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1GetSupportedLanguagesRequest": {
      "type": "object",
      "properties": {
        "componentName": {
          "type": "string",
          "title": "(optional) The name of the component for which to list languages"
        }
      }
    },
    "v1GetSupportedLanguagesResponse": {
      "type": "object",
      "properties": {
        "languages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Language"
          },
          "title": "The supported languages"
        }
      }
    },
    "v1GetTranslationRequest": {
      "type": "object",
      "properties": {
        "componentName": {
          "type": "string",
          "title": "The name of the translated component"
        },
        "partnerId": {
          "type": "string",
          "description": "The partner id for partner overrides. Requires auth if provided."
        },
        "languageCode": {
          "type": "string",
          "description": "The translation language code. If omitted, english (en) will be assumed."
        }
      }
    },
    "v1GetTranslationResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "object"
        }
      }
    },
    "v1GetTranslationsRequest": {
      "type": "object",
      "properties": {
        "componentNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The names of the translated components"
        },
        "partnerId": {
          "type": "string",
          "description": "The partner id for partner overrides. Requires auth if provided."
        },
        "languageCode": {
          "type": "string",
          "description": "The translation language code. If omitted, english (en) will be assumed."
        }
      }
    },
    "v1GetTranslationsResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "object"
        }
      }
    },
    "v1InvalidateCacheRequest": {
      "type": "object",
      "properties": {
        "componentName": {
          "type": "string",
          "title": "The name of the translated component"
        },
        "partnerId": {
          "type": "string",
          "description": "The partner id for partner overrides. Requires auth if provided."
        },
        "languageCode": {
          "type": "string",
          "title": "The translation language code"
        }
      }
    },
    "v1Language": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "title": "The language code"
        },
        "languageName": {
          "type": "string",
          "title": "The language name"
        },
        "languageStatistics": {
          "$ref": "#/definitions/v1Statistics",
          "title": "The stats for this language"
        }
      }
    },
    "v1Statistics": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "title": "The total number of text units"
        },
        "totalWords": {
          "type": "string",
          "format": "int64",
          "title": "The total number of words"
        },
        "translated": {
          "type": "string",
          "format": "int64",
          "title": "The number of translated text units"
        },
        "translatedWords": {
          "type": "string",
          "format": "int64",
          "title": "The number of translated words"
        },
        "failing": {
          "type": "string",
          "format": "int64",
          "title": "The number of text units with failing checks"
        }
      }
    }
  }
}
