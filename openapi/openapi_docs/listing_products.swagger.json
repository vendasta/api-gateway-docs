{
  "swagger": "2.0",
  "info": {
    "title": "listing_products/v0/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ListingProductsService"
    },
    {
      "name": "ListingSourceService"
    },
    {
      "name": "ListingProfileService"
    },
    {
      "name": "SuggestionService"
    },
    {
      "name": "SEOService"
    },
    {
      "name": "Citations"
    },
    {
      "name": "PartnerSettingsService"
    },
    {
      "name": "SEOSuggestedKeywordsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/listing_products.v1.Citations/DeleteCitations": {
      "post": {
        "operationId": "Citations_DeleteCitations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteCitationsRequest"
            }
          }
        ],
        "tags": [
          "Citations"
        ]
      }
    },
    "/listing_products.v1.Citations/GetCitationData": {
      "post": {
        "operationId": "Citations_GetCitationData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCitationDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCitationDataRequest"
            }
          }
        ],
        "tags": [
          "Citations"
        ]
      }
    },
    "/listing_products.v1.Citations/GetCitationSummary": {
      "post": {
        "operationId": "Citations_GetCitationSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCitationSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCitationSummaryRequest"
            }
          }
        ],
        "tags": [
          "Citations"
        ]
      }
    },
    "/listing_products.v1.Citations/ListCitationDomains": {
      "post": {
        "operationId": "Citations_ListCitationDomains",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCitationDomainsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCitationDomainsRequest"
            }
          }
        ],
        "tags": [
          "Citations"
        ]
      }
    },
    "/listing_products.v1.Citations/StartCitationWorkflow": {
      "post": {
        "operationId": "Citations_StartCitationWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartCitationWorkflowRequest"
            }
          }
        ],
        "tags": [
          "Citations"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/BulkConnectLocationsForGoogleUser": {
      "post": {
        "summary": "BulkConnectLocationsForGoogleUser will take all the Google Business Profile locations for the given Google user and attempt\nto connect them to account groups in the given partner. It will return a list of the connections made and the list of\nGBP locations that could not be connected.",
        "operationId": "ListingProductsService_BulkConnectLocationsForGoogleUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BulkConnectLocationsForGoogleUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BulkConnectLocationsForGoogleUserRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/CheckSubmissionStatus": {
      "post": {
        "summary": "CheckSubmissionStatus takes in business_id in request and using this business_id we fetch the latest data-axle submission_id for that business(account) from vtsore.\nThe submission_id obtained is then used to fetch the latest submission status from data-axle.",
        "operationId": "ListingProductsService_CheckSubmissionStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckSubmissionStatusRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/CreateAddonAttributes": {
      "post": {
        "summary": "CreateAddonAttributes creates new record for Addon attributes",
        "operationId": "ListingProductsService_CreateAddonAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAddonAttributesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/DeleteAddonAttributes": {
      "post": {
        "summary": "DeleteAddonAttributes deletes existing record for Addon attributes",
        "operationId": "ListingProductsService_DeleteAddonAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteAddonAttributesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/FetchAndSubmitSourceURLsToCS": {
      "post": {
        "summary": "FetchAndSubmitSourceURLsToCS fetches the source URLs for a given business and submits them to CS",
        "operationId": "ListingProductsService_FetchAndSubmitSourceURLsToCS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FetchAndSubmitSourceURLsToCSRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetAddonAttributes": {
      "post": {
        "summary": "GetAddonAttributes fetches Addon attributes using the AddonID in request",
        "operationId": "ListingProductsService_GetAddonAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddonAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAddonAttributesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetAppleBusinessConnectInfo": {
      "post": {
        "operationId": "ListingProductsService_GetAppleBusinessConnectInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAppleBusinessConnectInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAppleBusinessConnectInfoRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetBingPlacesInfo": {
      "post": {
        "operationId": "ListingProductsService_GetBingPlacesInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBingPlacesInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBingPlacesInfoRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetDirectSyncSourceInfo": {
      "post": {
        "summary": "GetDirectSyncSourceInfo returns information about the directly submitted sources for a given business",
        "operationId": "ListingProductsService_GetDirectSyncSourceInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDirectSyncSourceInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDirectSyncSourceInfoRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetDoctorDotComCategories": {
      "post": {
        "summary": "GetDoctorDotComCategories returns the list of categories for Doctor.com",
        "operationId": "ListingProductsService_GetDoctorDotComCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDoctorDotComCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDoctorDotComCategoriesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetFacebookPageInfo": {
      "post": {
        "operationId": "ListingProductsService_GetFacebookPageInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFacebookPageInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetFacebookPageInfoRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetGoogleBusinessInfo": {
      "post": {
        "summary": "GetGoogleBusinessInfo is used for human Support on Demand interaction only. Google is very strict about how their data is used\n   and it should only be pulled when a user or agent working on behalf of the user has taken action to request it.\n   This endpoint pulls the business information directly from Google's API using the tokens stored in Core Services.",
        "operationId": "ListingProductsService_GetGoogleBusinessInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoogleBusinessInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoogleBusinessInfoRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetGoogleMyBusinessInsightsData": {
      "post": {
        "summary": "GetGoogleMyBusinessInsightsData gets Google My Business insights for a business",
        "operationId": "ListingProductsService_GetGoogleMyBusinessInsightsData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoogleMyBusinessInsightsDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoogleMyBusinessInsightsDataRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetGoogleMyBusinessInsightsDataBucketed": {
      "post": {
        "summary": "GetGoogleMyBusinessInsightsDataBucketed gets bucketed Google My Business insights for a business",
        "operationId": "ListingProductsService_GetGoogleMyBusinessInsightsDataBucketed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoogleMyBusinessInsightsDataBucketedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoogleMyBusinessInsightsDataBucketedRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetInfoGroupId": {
      "post": {
        "summary": "GetInfoGroupId uses business_id and returns InfoGroupID from DataAxleLocation model if available",
        "operationId": "ListingProductsService_GetInfoGroupId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInfoGroupIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetInfoGroupIdRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetLDData": {
      "post": {
        "summary": "GetLDData returns the DirectSyncSource information for Neustar, Data Axle, and Foursquare",
        "operationId": "ListingProductsService_GetLDData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLDDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLDDataRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetListingDistributionActivationStatus": {
      "post": {
        "summary": "GetListingDistributionActivationStatus gets the status of Listing Distribution for the account provided in the request",
        "operationId": "ListingProductsService_GetListingDistributionActivationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetListingDistributionActivationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetListingDistributionActivationStatusRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetMultiAddonAttributes": {
      "post": {
        "summary": "GetMultiAddonAttributes gets a list of Addon attributes based on included filters",
        "operationId": "ListingProductsService_GetMultiAddonAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiAddonAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiAddonAttributesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetNeustarPublications": {
      "post": {
        "operationId": "ListingProductsService_GetNeustarPublications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNeustarPublicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetNeustarPublicationsRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetProductSettings": {
      "post": {
        "summary": "GetProductSettings returns information about the partner settings and checks permissions for a given partnerID / marketID",
        "operationId": "ListingProductsService_GetProductSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProductSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetProductSettingsRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetSyncData": {
      "post": {
        "summary": "GetDirectSyncSourceInfo returns information about the directly submitted sources for a given business",
        "operationId": "ListingProductsService_GetSyncData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSyncDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSyncDataRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/GetSyndicationInfo": {
      "post": {
        "summary": "GetSyndicationInfo returns information about the last syndication workflows performed for a given business",
        "operationId": "ListingProductsService_GetSyndicationInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSyndicationInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSyndicationInfoRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/IsLocalSEOProActiveForAccount": {
      "post": {
        "summary": "IsLocalSEOProActiveForAccount checks if the account has LSEO Pro active",
        "operationId": "ListingProductsService_IsLocalSEOProActiveForAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IsLocalSEOProActiveForAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IsLocalSEOProActiveForAccountRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/IsPartnerUser": {
      "post": {
        "summary": "IsPartnerUser checks if the user making the request is a partner",
        "operationId": "ListingProductsService_IsPartnerUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IsPartnerUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IsPartnerUserRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/ManuallyDeactivateUberallProvisioning": {
      "post": {
        "summary": "ManuallyDeactivateUberallProvisioning bypasses all standard operations regarding Uberall location cancelling and deactivation.\n   It bypasses all Marketplace checks and immediately ends all service on an Uberall location.",
        "operationId": "ListingProductsService_ManuallyDeactivateUberallProvisioning",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ManuallyDeactivateUberallProvisioningRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/ManuallyFixYextProvisioning": {
      "post": {
        "summary": "Manual* IF YOU USE THESE ENDPOINTS IN CODE YOU WILL BREAK EVERYTHING AND LIKELY DIE\nManuallyFixYextProvisioning bypasses all of our Marketplace duplicate activation checks and can make things much much worse.\nManuallyFixYextProvisioning is a one off to fix a broken system state. Interactions with Yext should be done in the\n   Yext microservice.\n This will look up the plan ID for the activation and pass the account to the Yext microservice to try to provision it\n   again since the automated process is broken. Please try to fix the bug that resulted in the account getting into this\n   state in addition to running this endpoint.",
        "operationId": "ListingProductsService_ManuallyFixYextProvisioning",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ManuallyFixYextProvisioningRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/ManuallyProvisionUberall": {
      "post": {
        "summary": "ManuallyProvisionUberall bypasses all of our Marketplace duplicate activation checks and can make things much much worse.\n   This will try to provision the account again since the automated process is broken. Please try to fix the bug that\n   resulted in the account getting into this state in addition to running this endpoint.",
        "operationId": "ListingProductsService_ManuallyProvisionUberall",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ManuallyProvisionUberallRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/StartBusinessDataScoreWorkflow": {
      "post": {
        "summary": "StartBusinessDataScoreWorkflow starts a workflow to calculate the business data score for one or more businesses",
        "operationId": "ListingProductsService_StartBusinessDataScoreWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartBusinessDataScoreWorkflowRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/SubmitTurboLister": {
      "post": {
        "summary": "SubmitTurboLister initiates a workflow to submit listing data for a specified vendor\nThis endpoint is async and returns success when the task has been added to the Cadence workflow list.",
        "operationId": "ListingProductsService_SubmitTurboLister",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitTurboListerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitTurboListerRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/SyncToSources": {
      "post": {
        "operationId": "ListingProductsService_SyncToSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SyncToSourcesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/TriggerBingInsightsBackFill": {
      "post": {
        "operationId": "ListingProductsService_TriggerBingInsightsBackFill",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TriggerBingInsightsBackFillRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/UpdateAddonAttributes": {
      "post": {
        "summary": "UpdateAddonAttributes updates existing record for Addon attributes",
        "operationId": "ListingProductsService_UpdateAddonAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAddonAttributesRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProductsService/UpdateVendorSyncFlag": {
      "post": {
        "summary": "UpdateVendorSyncFlag sets the syncing property for a Vendor such as Bing or Apple.",
        "operationId": "ListingProductsService_UpdateVendorSyncFlag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateVendorSyncFlagRequest"
            }
          }
        ],
        "tags": [
          "ListingProductsService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/Create": {
      "post": {
        "operationId": "ListingProfileService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateListingProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateListingProfileRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/Delete": {
      "post": {
        "operationId": "ListingProfileService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteListingProfileRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/GetAttributeMetadata": {
      "post": {
        "operationId": "ListingProfileService_GetAttributeMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAttributeMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAttributeMetadataRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/GetBusinessProfileFieldStatus": {
      "post": {
        "operationId": "ListingProfileService_GetBusinessProfileFieldStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBusinessProfileFieldStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBusinessProfileFieldStatusRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/GetDoctorDotComCategories": {
      "post": {
        "operationId": "ListingProfileService_GetDoctorDotComCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDoctorDotComCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDoctorDotComCategoriesRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/GetMoreHoursTypes": {
      "post": {
        "operationId": "ListingProfileService_GetMoreHoursTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMoreHoursTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMoreHoursTypesRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/GetMulti": {
      "post": {
        "operationId": "ListingProfileService_GetMulti",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiListingProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiListingProfileRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/LegacyAPICreate": {
      "post": {
        "operationId": "ListingProfileService_LegacyAPICreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyAPICreateRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/LegacyAPIUpdate": {
      "post": {
        "operationId": "ListingProfileService_LegacyAPIUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LegacyAPIUpdateRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingProfileService/Update": {
      "post": {
        "operationId": "ListingProfileService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "BulkUpdateRequest allows updating all of the pieces of the account group and runs them in order.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateListingProfileRequest"
            }
          }
        ],
        "tags": [
          "ListingProfileService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/CreateListingSource": {
      "post": {
        "summary": "CreateListingSource creates a new source",
        "operationId": "ListingSourceService_CreateListingSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateListingSourceRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/DeleteListingSource": {
      "post": {
        "summary": "DeleteListingSource sets a source to deleted",
        "operationId": "ListingSourceService_DeleteListingSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteListingSourceRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/GetListingSourceById": {
      "post": {
        "summary": "GetListingSourceById fetches details for a source based on its numeric ID",
        "operationId": "ListingSourceService_GetListingSourceById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetListingSourceByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetListingSourceByIdRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/GetListingSourceByProviderId": {
      "post": {
        "summary": "GetListingSourceByProviderId fetches details for a source based on its provider ID",
        "operationId": "ListingSourceService_GetListingSourceByProviderId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetListingSourceByProviderIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetListingSourceByProviderIdRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/GetListingSources": {
      "post": {
        "summary": "GetListingSources fetches all listing sources, optionally filtered by provider",
        "operationId": "ListingSourceService_GetListingSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetListingSourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetListingSourcesRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/GetPartnerSources": {
      "post": {
        "summary": "GetPartnerSources gets all sources that have not been disabled by the partner",
        "operationId": "ListingSourceService_GetPartnerSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPartnerSourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetPartnerSourcesRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/UndeleteListingSource": {
      "post": {
        "summary": "UndeleteListingSource restores a deleted source",
        "operationId": "ListingSourceService_UndeleteListingSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UndeleteListingSourceRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.ListingSourceService/UpdateListingSource": {
      "post": {
        "summary": "UpdateListingSource updates fields of a source",
        "operationId": "ListingSourceService_UpdateListingSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateListingSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateListingSourceRequest"
            }
          }
        ],
        "tags": [
          "ListingSourceService"
        ]
      }
    },
    "/listing_products.v1.PartnerSettingsService/CreatePartnerSettings": {
      "post": {
        "summary": "CreatePartnerSettings will create a new PartnerSettings",
        "operationId": "PartnerSettingsService_CreatePartnerSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePartnerSettingsRequest"
            }
          }
        ],
        "tags": [
          "PartnerSettingsService"
        ]
      }
    },
    "/listing_products.v1.PartnerSettingsService/GetConfiguration": {
      "post": {
        "summary": "GetConfiguration returns the configuration for a given partner",
        "operationId": "PartnerSettingsService_GetConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetConfigurationRequest"
            }
          }
        ],
        "tags": [
          "PartnerSettingsService"
        ]
      }
    },
    "/listing_products.v1.PartnerSettingsService/GetPartnerSettings": {
      "post": {
        "summary": "GetPartnerSettings returns information about the partner settings for a given partnerID / marketID",
        "operationId": "PartnerSettingsService_GetPartnerSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPartnerSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetPartnerSettingsRequest"
            }
          }
        ],
        "tags": [
          "PartnerSettingsService"
        ]
      }
    },
    "/listing_products.v1.PartnerSettingsService/UpsertPartnerSettings": {
      "post": {
        "summary": "UpsertPartnerSettings will create a new PartnerSettings if it does not exist yet, or update the existing PartnerSettings if it does.",
        "operationId": "PartnerSettingsService_UpsertPartnerSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertPartnerSettingsRequest"
            }
          }
        ],
        "tags": [
          "PartnerSettingsService"
        ]
      }
    },
    "/listing_products.v1.SEOService/GetActiveSEOAddons": {
      "post": {
        "operationId": "SEOService_GetActiveSEOAddons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetActiveSEOAddonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetActiveSEOAddonsRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/GetDataForSEOCategory": {
      "post": {
        "operationId": "SEOService_GetDataForSEOCategory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDataForSEOCategoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDataForSEOCategoryRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/GetLocalSearchSEOData": {
      "post": {
        "summary": "Get Vicinity Data for keywords",
        "operationId": "SEOService_GetLocalSearchSEOData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLocalSearchSEODataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLocalSearchSEODataRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/GetSEOData": {
      "post": {
        "summary": "Deprecated: use SEODataSummary \u0026 LocalSearchData",
        "operationId": "SEOService_GetSEOData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSEODataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSEODataRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/GetSEODataSummary": {
      "post": {
        "summary": "Get SEO summary data except Vicinity Data for keywords",
        "operationId": "SEOService_GetSEODataSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSEODataSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSEODataSummaryRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/GetSEOSettings": {
      "post": {
        "operationId": "SEOService_GetSEOSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SEOSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSEOSettingsRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/SaveSEOSettings": {
      "post": {
        "operationId": "SEOService_SaveSEOSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SaveSEOSettingsRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/StartLocalSEODataWorkflow": {
      "post": {
        "operationId": "SEOService_StartLocalSEODataWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartLocalSEODataWorkflowRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOService/StartSEOCategoryWorkflow": {
      "post": {
        "operationId": "SEOService_StartSEOCategoryWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartSEOCategoryWorkflowRequest"
            }
          }
        ],
        "tags": [
          "SEOService"
        ]
      }
    },
    "/listing_products.v1.SEOSuggestedKeywordsService/GetOrGenerateSEOSuggestedKeywords": {
      "post": {
        "summary": "GetOrGenerateSEOSuggestedKeywords will get or generate SEO suggested keywords for a given business",
        "operationId": "SEOSuggestedKeywordsService_GetOrGenerateSEOSuggestedKeywords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOrGenerateSEOSuggestedKeywordsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOrGenerateSEOSuggestedKeywordsRequest"
            }
          }
        ],
        "tags": [
          "SEOSuggestedKeywordsService"
        ]
      }
    },
    "/listing_products.v1.SEOSuggestedKeywordsService/GetSEOSuggestedKeywords": {
      "post": {
        "summary": "GetSEOSuggestedKeywords returns SEO suggested keywords for a given business",
        "operationId": "SEOSuggestedKeywordsService_GetSEOSuggestedKeywords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSEOSuggestedKeywordsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSEOSuggestedKeywordsRequest"
            }
          }
        ],
        "tags": [
          "SEOSuggestedKeywordsService"
        ]
      }
    },
    "/listing_products.v1.SuggestionService/Delete": {
      "post": {
        "operationId": "SuggestionService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteSuggestionRequest"
            }
          }
        ],
        "tags": [
          "SuggestionService"
        ]
      }
    },
    "/listing_products.v1.SuggestionService/GetMulti": {
      "post": {
        "operationId": "SuggestionService_GetMulti",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiSuggestionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiSuggestionRequest"
            }
          }
        ],
        "tags": [
          "SuggestionService"
        ]
      }
    },
    "/listing_products.v1.SuggestionService/GetSuggestion": {
      "post": {
        "operationId": "SuggestionService_GetSuggestion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSuggestionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSuggestionRequest"
            }
          }
        ],
        "tags": [
          "SuggestionService"
        ]
      }
    },
    "/listing_products.v1.SuggestionService/List": {
      "post": {
        "operationId": "SuggestionService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSuggestionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSuggestionRequest"
            }
          }
        ],
        "tags": [
          "SuggestionService"
        ]
      }
    },
    "/listing_products.v1.SuggestionService/SuggestFieldUpdate": {
      "post": {
        "operationId": "SuggestionService_SuggestFieldUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SuggestFieldUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SuggestFieldUpdateRequest"
            }
          }
        ],
        "tags": [
          "SuggestionService"
        ]
      }
    },
    "/listing_products.v1.SuggestionService/Upsert": {
      "post": {
        "operationId": "SuggestionService_Upsert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "SetSuggestionRequest is used to create or update a suggestion for a business.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertSuggestionRequest"
            }
          }
        ],
        "tags": [
          "SuggestionService"
        ]
      }
    }
  },
  "definitions": {
    "AddonActivationAddonActivationStatus": {
      "type": "string",
      "enum": [
        "ACTIVATION_STATUS_NOT_SPECIFIED",
        "ACTIVATION_STATUS_ACTIVATED",
        "ACTIVATION_STATUS_PENDING",
        "ACTIVATION_STATUS_CANCELED",
        "ACTIVATION_STATUS_DEACTIVATED"
      ],
      "default": "ACTIVATION_STATUS_NOT_SPECIFIED"
    },
    "GetMultiListingProfileResponseListingProfileContainer": {
      "type": "object",
      "properties": {
        "listingProfile": {
          "$ref": "#/definitions/v1ListingProfile"
        }
      }
    },
    "HealthCareProfessionalInformationGender": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Female",
        "Male",
        "Other"
      ],
      "default": "NotSpecified"
    },
    "HealthCareProfessionalInformationIsProvider": {
      "type": "string",
      "enum": [
        "IsProviderNotSpecified",
        "IsProviderTrue",
        "IsProviderFalse"
      ],
      "default": "IsProviderNotSpecified"
    },
    "HoursOfOperationSpan": {
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "opens": {
          "type": "string"
        },
        "closes": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RichDataPaymentMethods": {
      "type": "string",
      "enum": [
        "AMERICAN_EXPRESS",
        "ANDROID_PAY",
        "APPLE_PAY",
        "CASH",
        "CHECK",
        "DEBIT",
        "DINERS_CLUB",
        "DISCOVER",
        "MASTERCARD",
        "PAYPAL",
        "SAMSUNG_PAY",
        "STORE_CARD",
        "TRAVELERS_CHECK",
        "VISA",
        "CCS",
        "SODEXO",
        "GOPAY",
        "V_PAY",
        "FINANCING",
        "INVOICE",
        "PAYSEC",
        "BITCOIN"
      ],
      "default": "AMERICAN_EXPRESS"
    },
    "listing_productsv1Location": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "workNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callTrackingNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/v1Geo"
        },
        "timezone": {
          "type": "string"
        },
        "serviceAreaBusiness": {
          "type": "boolean"
        },
        "serviceArea": {
          "$ref": "#/definitions/v1ServiceArea"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AccuracyStatus": {
      "type": "string",
      "enum": [
        "ACCURACY_STATUS_INVALID",
        "ACCURACY_STATUS_UNKNOWN",
        "ACCURACY_STATUS_ACCURATE",
        "ACCURACY_STATUS_INACCURATE",
        "ACCURACY_STATUS_UNAVAILABLE"
      ],
      "default": "ACCURACY_STATUS_INVALID",
      "title": "- ACCURACY_STATUS_INVALID: Either the accuracy data could not be interpreted or there was an error\n - ACCURACY_STATUS_UNKNOWN: Either no scraped data was found, or we have none\n - ACCURACY_STATUS_ACCURATE: Scraped listing was found to be totally accurate\n - ACCURACY_STATUS_INACCURATE: Scraped listing was found with discrepancies\n - ACCURACY_STATUS_UNAVAILABLE: Source does not support accuracy reporting"
    },
    "v1ActivateAccounts": {
      "type": "object",
      "properties": {
        "activations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activation"
          }
        }
      }
    },
    "v1Activation": {
      "type": "object",
      "properties": {
        "appKey": {
          "$ref": "#/definitions/v1AppKey"
        },
        "isTrial": {
          "type": "boolean"
        }
      },
      "title": "The information needed to activate an app"
    },
    "v1AddonActivation": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "description": "A prerequisite ID representing the customer/business."
        },
        "appId": {
          "type": "string",
          "description": "A prerequisite marketplace vendor's ID's of the app the addons belong to."
        },
        "addonId": {
          "type": "string",
          "description": "A prerequisite marketplace vendor's ID's of the addon activated."
        },
        "activated": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time the addon was activated."
        },
        "deactivated": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time the addon was or will be deactivated, if ever."
        },
        "status": {
          "$ref": "#/definitions/AddonActivationAddonActivationStatus",
          "title": "The state of activation to determine if the addon is active or cancelled"
        },
        "isTrial": {
          "type": "boolean",
          "title": "A flag determining whether or not the activation is in trial"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Determines the number of activations for a given add-on"
        }
      },
      "title": "AddonActivation is a representation of a addon activation in the Vendasta platform"
    },
    "v1AddonAttributes": {
      "type": "object",
      "properties": {
        "addonType": {
          "$ref": "#/definitions/v1AddonType"
        },
        "providerType": {
          "$ref": "#/definitions/v1ProviderType",
          "title": "Only applicable to LSP addons. Provider type to provide what provider addon is going to use (Yext or Uberall)"
        },
        "providerPlanId": {
          "type": "string",
          "title": "Only applicable to LSP addons. Provider plan id for uberall plan (numeric) and yext plan (alphanumeric) ids"
        },
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "source_id is only applicable for listing source addons (Twitter, Instagram, etc)"
        }
      }
    },
    "v1AddonType": {
      "type": "string",
      "enum": [
        "ADDON_TYPE_UNSPECIFIED",
        "ADDON_TYPE_LD",
        "ADDON_TYPE_LSP",
        "ADDON_TYPE_YEXT_HEALTHCARE",
        "ADDON_TYPE_BRING_YOUR_OWN_YEXT",
        "ADDON_TYPE_LISTING_SOURCE",
        "ADDON_TYPE_KEYWORD_TRACKING",
        "ADDON_TYPE_LSP_EXTENSION",
        "ADDON_TYPE_YEXT_STANDALONE",
        "ADDON_TYPE_YEXT_FOOD"
      ],
      "default": "ADDON_TYPE_UNSPECIFIED",
      "description": "Used to determine what addon family the addon falls into so we can do things like getting all LSP addon IDs.\n\n - ADDON_TYPE_LD: Listing Distribution addon\n - ADDON_TYPE_LSP: Listing Sync Pro Addon\n - ADDON_TYPE_YEXT_HEALTHCARE: Yext Healthcare addon.  Requires Yext LSP to be active.  Activates a new SKU on Yext in addition to the existing LSP SKU\n - ADDON_TYPE_BRING_YOUR_OWN_YEXT: Addon for specific partners with their own Yext contracts. No action is taken on activation\n - ADDON_TYPE_LISTING_SOURCE: Addon enables access to a specific listing source\n - ADDON_TYPE_KEYWORD_TRACKING: Addon adds additional keywords to Keyword Tracking\n - ADDON_TYPE_LSP_EXTENSION: Addon requires a base LSP product, and changes the active SKU to a different SKU\n - ADDON_TYPE_YEXT_STANDALONE: Addon does not require LSP. Activates the SKU on Yext without affecting existing SKUs\n - ADDON_TYPE_YEXT_FOOD: Yext Food addon.  Requires Yext LSP to be active.  Activates a new SKU on Yext in addition to the existing LSP SKU"
    },
    "v1AnchorData": {
      "type": "object",
      "properties": {
        "website": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "title": "AnchorData contains the business NAP data used to compare scraped source results"
    },
    "v1AnchorDataMatches": {
      "type": "object",
      "properties": {
        "website": {
          "type": "boolean"
        },
        "city": {
          "type": "boolean"
        },
        "zip": {
          "type": "boolean"
        },
        "companyName": {
          "type": "boolean"
        },
        "country": {
          "type": "boolean"
        },
        "phone": {
          "type": "boolean"
        },
        "state": {
          "type": "boolean"
        },
        "address": {
          "type": "boolean"
        }
      },
      "title": "AnchorDataMatches contains flags for whether each anchor data field matches the scraped data"
    },
    "v1AppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      },
      "description": "The full identifier for a marketplace app."
    },
    "v1BingAttribute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Bing attribute in the form \"attributes/is_owned_by_women\""
        },
        "value": {
          "title": "Contains the value of the attribute. This can be of 4 types:\n  bool\n  URL (represented as a string google.protobuf.Value)\n  enum (represented as a string google.protobuf.Value)\n  repeated_enum (represented as a struct google.protobuf.Value)\nhttps://bpprodpublicstorage.blob.core.windows.net/bingplacesapi/BingPlaces_API_Latest.pdf"
        }
      }
    },
    "v1BingAttributeMetaData": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "title": "The name of the Bing Attribute in the form \"attributes/is_owned_by_women\""
        },
        "valueType": {
          "$ref": "#/definitions/v1ValueType"
        },
        "displayName": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "valueDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1BingAttributeMetaDataList": {
      "type": "object",
      "properties": {
        "bingAttributeMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttributeMetaData"
          }
        }
      }
    },
    "v1BingAttributes": {
      "type": "object",
      "properties": {
        "bingAttribute": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttribute"
          }
        }
      }
    },
    "v1BulkConnectLocationsForGoogleUserRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "In order for this endpoint to work the Google user must already have been used to connect an account in our system. This AG ID is then\nused to get the google user ID and google user from the social profile in order to copy that to the other businesses, and then connect\na location to those businesses."
        }
      }
    },
    "v1BulkConnectLocationsForGoogleUserResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "connections is a map of the Google Business Profile locations that were connected, to the account group they were connected to."
        },
        "locationsNotConnected": {
          "type": "string",
          "description": "locations_not_connected is a list of the GBP locations on the input Google user that were not connected to a social profile."
        }
      }
    },
    "v1BusinessHours": {
      "type": "object",
      "properties": {
        "hoursTypeId": {
          "type": "string",
          "description": "The hours types are based on the type of business so we don't give an exhaustive list of hours\ntypes here. We get the hours types for the business's category using the Google endpoint\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/categories/batchGet",
          "title": "hours type IDs are based on the Google hours types\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#morehours"
        },
        "regularHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RegularHoursPeriod"
          },
          "title": "RegularHours is a collection of times that this location is open for business. Each\nperiod represents a range of hours when the location is open during the week. You may specify\nmultiple entries for the same date if you are open for multiple periods (Example lunch and supper)"
        },
        "specialHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SpecialHoursPeriod"
          },
          "description": "SpecialHours represents a set of time periods when a location's operational hours differ from\nits regular business hours. This may be a holiday or special event. These hours replace the\nall regular hours for the day. The openTime and startDate must predate the closeTime and endDate."
        }
      }
    },
    "v1BusinessKeywords": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. If not included, the business's stored keywords will be used."
        }
      }
    },
    "v1CheckSubmissionStatusRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1Citation": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "matchedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "breadcrumb": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Citation contains details for a citation"
    },
    "v1CitationsByDomain": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "citations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Citation"
          }
        }
      },
      "title": "CitationsByDomain contains all citations for a domain"
    },
    "v1ClosedStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "OPEN",
        "LIMITED",
        "TEMPORARY",
        "PERMANENT"
      ],
      "default": "UNSPECIFIED",
      "title": "ClosedStatus describes if the business is permanently or temporarily closed, or in a limited state"
    },
    "v1CompetitorLocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "placeId": {
          "type": "string",
          "description": "The Place ID for a place in the Google Places database and on Google Maps.\nSee https://developers.google.com/places/place-id for more about Place IDs."
        }
      }
    },
    "v1ConditionalField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1Configuration": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The partner ID that the Local SEO configuration is scoped to."
        },
        "chatWidgetId": {
          "type": "string",
          "description": "The conversation web chat widget ID that is served on my listing page."
        },
        "publicMyListingUrl": {
          "type": "string",
          "description": "The public view of my listing page for the business."
        }
      }
    },
    "v1ConnectedDirectSyncAccount": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string",
          "title": "The ID used to define the connection. Also known as the Social Service ID"
        },
        "username": {
          "type": "string",
          "title": "The username of the connected account"
        },
        "isAuthenticated": {
          "type": "boolean",
          "title": "Whether the account is authenticated"
        },
        "profileUrl": {
          "type": "string",
          "title": "The URL of the connected account's profile page"
        },
        "profileImageUrl": {
          "type": "string",
          "title": "The profile image URL of the connected account"
        },
        "accountType": {
          "type": "string",
          "title": "The type of account. Also known as the Social Service Type"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The client tags associated with the account"
        },
        "isSyncingEnabled": {
          "type": "boolean",
          "title": "Whether syncing is enabled for the account"
        },
        "accountId": {
          "type": "string",
          "title": "The ID of the account as defined by the provider"
        },
        "disabledFlag": {
          "type": "boolean",
          "description": "Whether the account is disabled."
        },
        "tokenBroken": {
          "type": "boolean",
          "title": "Whether the account's oauth token is broken"
        },
        "isVerified": {
          "type": "boolean",
          "title": "Whether the account is considered 'verified' by the provider"
        }
      }
    },
    "v1CreateAddonAttributesRequest": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string",
          "title": "Addon ID for LB product"
        },
        "addonAttributes": {
          "$ref": "#/definitions/v1AddonAttributes"
        }
      }
    },
    "v1CreateCompetitors": {
      "type": "object",
      "properties": {
        "location": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CompetitorLocation"
          }
        }
      }
    },
    "v1CreateListingProfileRequest": {
      "type": "object",
      "properties": {
        "nap": {
          "$ref": "#/definitions/listing_productsv1Location"
        },
        "businessLocationId": {
          "type": "string",
          "title": "ID of the business location that the listing profile represents"
        },
        "updateOperations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UpdateOperation"
          },
          "description": "The set of update operations to be done to the extended account group data after the create."
        },
        "createOperations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateOperation"
          },
          "title": "The set of create operations to be done to the extended account group on create"
        }
      }
    },
    "v1CreateListingProfileResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1CreateListingSourceRequest": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1CreateOperation": {
      "type": "object",
      "properties": {
        "activateAccounts": {
          "$ref": "#/definitions/v1ActivateAccounts"
        },
        "createCompetitors": {
          "$ref": "#/definitions/v1CreateCompetitors"
        }
      },
      "title": "CreateOperation allows asynchronous operations to take place as a side effect of account creation"
    },
    "v1CreatePartnerSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "isSmbKeyWordEditingDisabled": {
          "type": "boolean"
        },
        "isFavoriteNewKeywordsDisabled": {
          "type": "boolean"
        },
        "isSyncKeywordsDisabled": {
          "type": "boolean"
        }
      }
    },
    "v1DayOfWeek": {
      "type": "string",
      "enum": [
        "DAY_OF_WEEK_UNSPECIFIED",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "default": "DAY_OF_WEEK_UNSPECIFIED",
      "description": "Represents a day of the week.\n\n - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.\n - MONDAY: Monday\n - TUESDAY: Tuesday\n - WEDNESDAY: Wednesday\n - THURSDAY: Thursday\n - FRIDAY: Friday\n - SATURDAY: Saturday\n - SUNDAY: Sunday"
    },
    "v1DeleteAddonAttributesRequest": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string"
        }
      }
    },
    "v1DeleteCitationsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1DeleteListingProfileRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1DeleteListingSourceRequest": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1DeleteSuggestionRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1DetailedSyndicationStatusResultValue": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "syncedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1DetailedSyndicationStatusResults": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/v1DetailedSyndicationStatusResultValue"
        }
      }
    },
    "v1DirectSyncSource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64",
          "title": "numeric ID of the source"
        },
        "name": {
          "type": "string",
          "title": "The name of the source"
        },
        "account": {
          "$ref": "#/definitions/v1ConnectedDirectSyncAccount",
          "title": "The connected account information for this direct submit source"
        },
        "connectLink": {
          "type": "string"
        },
        "accuracy": {
          "$ref": "#/definitions/v1SourceAccuracy",
          "title": "The accuracy data for this direct submit source"
        },
        "score": {
          "type": "string",
          "format": "int64",
          "title": "The current listing score for this direct submit source"
        },
        "maxScore": {
          "type": "string",
          "format": "int64",
          "title": "The maximum possible listing score for this direct submit source"
        },
        "listingUrl": {
          "type": "string",
          "title": "The URL of the listing for this direct submit source"
        },
        "listingId": {
          "type": "string",
          "title": "The CS listing id of the direct submit listing"
        },
        "syncStatus": {
          "$ref": "#/definitions/v1SyndicationStatus",
          "title": "The syndication status for this direct submit source"
        },
        "additionalAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedDirectSyncAccount"
          },
          "title": "Other accounts that are connected for this source, and could be synced to"
        },
        "isSyncingEnabled": {
          "type": "boolean",
          "description": "Whether syncing to this source is enabled.  Usually this will correspond to the account's is_syncing_enabled flag,\nbut for sources without accounts, it will be populated by the models where we store direct sync setting for the business."
        },
        "isListingVerified": {
          "type": "boolean",
          "title": "Whether the listing has been verified as accurate by the business"
        },
        "hidden": {
          "type": "boolean",
          "title": "Whether the source is hidden from the UI"
        }
      }
    },
    "v1DoctorDotComCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "fullName": {
          "type": "string"
        },
        "nuccTaxonomyCode": {
          "type": "string"
        }
      }
    },
    "v1EcosystemSource": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "v1ExternalIdentifiers": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "taxIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vCategoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "marketId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        },
        "additionalSalesPersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerIdentifier": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "socialProfileId": {
          "type": "string"
        },
        "jobId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actionLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateOrigin": {
          "type": "string"
        }
      }
    },
    "v1FetchAndSubmitSourceURLsToCSRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "vendorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1FieldStatus": {
      "type": "object",
      "properties": {
        "updateOrigin": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GBPClaimStatus": {
      "type": "string",
      "enum": [
        "GBP_CLAIM_STATUS_INVALID",
        "GBP_CLAIM_STATUS_UNKNOWN",
        "GBP_CLAIM_STATUS_CLAIMED",
        "GBP_CLAIM_STATUS_UNCLAIMED"
      ],
      "default": "GBP_CLAIM_STATUS_INVALID"
    },
    "v1Geo": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents a geo point location."
    },
    "v1GetActiveSEOAddonsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "description": "A prerequisite ID representing the customer/business."
        }
      }
    },
    "v1GetActiveSEOAddonsResponse": {
      "type": "object",
      "properties": {
        "activeAddons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AddonActivation"
          }
        }
      }
    },
    "v1GetAddonAttributesRequest": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string"
        }
      }
    },
    "v1GetAddonAttributesResponse": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string"
        },
        "addonAttributes": {
          "$ref": "#/definitions/v1AddonAttributes"
        }
      }
    },
    "v1GetAppleBusinessConnectInfoRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID"
        }
      }
    },
    "v1GetAppleBusinessConnectInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Apple into this field. It will contain all the data we request from Apple."
        }
      }
    },
    "v1GetAttributeMetadataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string",
          "title": "Optional Vendor ID if we only want to return a specific vendor's attributes"
        },
        "languageCode": {
          "type": "string"
        }
      }
    },
    "v1GetAttributeMetadataResponse": {
      "type": "object",
      "properties": {
        "attributeMedata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorAttributeMetaData"
          }
        }
      }
    },
    "v1GetBingPlacesInfoRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID"
        }
      }
    },
    "v1GetBingPlacesInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Bing into this field. It will contain all the data we request from Bing."
        }
      }
    },
    "v1GetBusinessProfileFieldStatusRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id"
        }
      }
    },
    "v1GetBusinessProfileFieldStatusResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "companyName": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "address": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "address2": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "city": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "state": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "zip": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "country": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "workNumber": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "callTrackingNumber": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "website": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "location": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "salesPersonId": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "additionalSalesPersonId": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "vcategoryIds": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "customerIdentifier": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "lifecycleStage": {
          "$ref": "#/definitions/v1FieldStatus"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetCitationDataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetCitationDataResponse": {
      "type": "object",
      "properties": {
        "citationCount": {
          "type": "string",
          "format": "int64"
        },
        "initialCitationCount": {
          "type": "string",
          "format": "int64"
        },
        "historicalCitationsSeries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HistoricalCitationsDataPoint"
          }
        },
        "citationsByDomain": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CitationsByDomain"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "citationPercentGrowth": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "GetCitationDataResponse contains the citation data for a business"
    },
    "v1GetCitationSummaryRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetCitationSummaryResponse": {
      "type": "object",
      "properties": {
        "domainCount": {
          "type": "string",
          "format": "int64"
        },
        "citationCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetConfigurationRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The partner ID that the configuration is scoped to."
        },
        "businessId": {
          "type": "string",
          "title": "business ID that the Local SEO is activated on"
        }
      }
    },
    "v1GetConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v1Configuration"
        }
      }
    },
    "v1GetDataForSEOCategoryRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "A prerequisite ID representing the customer/business"
        }
      }
    },
    "v1GetDataForSEOCategoryResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "primaryCategoryId": {
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskId": {
          "type": "string"
        },
        "rawResponse": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetDirectSyncSourceInfoRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "refresh": {
          "type": "boolean",
          "title": "if set to true, connected account credentials will be refreshed"
        }
      }
    },
    "v1GetDirectSyncSourceInfoResponse": {
      "type": "object",
      "properties": {
        "directSubmitSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DirectSyncSource"
          }
        }
      }
    },
    "v1GetDoctorDotComCategoriesRequest": {
      "type": "object"
    },
    "v1GetDoctorDotComCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DoctorDotComCategory"
          }
        }
      }
    },
    "v1GetFacebookPageInfoRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID (aka account group ID)"
        }
      }
    },
    "v1GetFacebookPageInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Facebook into this field. It will contain all the data we request from Facebook."
        }
      }
    },
    "v1GetGoogleBusinessInfoRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID (aka account group ID)"
        }
      }
    },
    "v1GetGoogleBusinessInfoResponse": {
      "type": "object",
      "properties": {
        "textDump": {
          "type": "string",
          "description": "Dump the json response we get from Google into this field. It will contain all the data we request from Google."
        }
      }
    },
    "v1GetGoogleMyBusinessInsightsDataBucketedRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date to get insights data"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date to get insights data"
        }
      }
    },
    "v1GetGoogleMyBusinessInsightsDataBucketedResponse": {
      "type": "object",
      "properties": {
        "actionsDrivingDirections": {
          "$ref": "#/definitions/v1InsightBucketed",
          "description": "The total number of times driving directions were requested for the listing."
        },
        "actionsPhone": {
          "$ref": "#/definitions/v1InsightBucketed",
          "description": "The total number of times the phone number was clicked on the listing."
        }
      }
    },
    "v1GetGoogleMyBusinessInsightsDataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business id"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date to get insights data"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date to get insights data"
        }
      }
    },
    "v1GetGoogleMyBusinessInsightsDataResponse": {
      "type": "object",
      "properties": {
        "actionsDrivingDirections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times driving directions were requested for the listing."
        },
        "actionsPhone": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of times driving directions were requested for the listing."
        },
        "actionsWebsite": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of times the phone number was clicked on the listing."
        },
        "localPostActionsCallToAction": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the call to action button was clicked on Google."
        },
        "localPostViewsSearch": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the local post was viewed on Google Search."
        },
        "photosCountCustomers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of media items that are currently live that have been uploaded by customers."
        },
        "photosCountMerchant": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The total number of media items that are currently live that have been uploaded by the merchant."
        },
        "photosViewsCustomers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of views on media items uploaded by customers."
        },
        "photosViewsMerchant": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of views on media items uploaded by the merchant."
        },
        "queriesChain": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times a resource was shown as a result of a search for the chain it belongs to, or a brand it sells. For example, Starbucks, Adidas. This is a subset of QUERIES_INDIRECT."
        },
        "queriesDirect": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was shown when searching for it directly."
        },
        "queriesIndirect": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was shown as a result of a categorical search (for example, restaurant \"restaurant\")."
        },
        "viewsMaps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was viewed on Google Maps."
        },
        "viewsSearch": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          },
          "description": "The number of times the listing was viewed on Google Search."
        }
      }
    },
    "v1GetInfoGroupIdRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetInfoGroupIdResponse": {
      "type": "object",
      "properties": {
        "infogroupId": {
          "type": "string"
        }
      }
    },
    "v1GetLDDataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetLDDataResponse": {
      "type": "object",
      "properties": {
        "neustar": {
          "$ref": "#/definitions/v1DirectSyncSource"
        },
        "dataAxle": {
          "$ref": "#/definitions/v1DirectSyncSource"
        },
        "foursquare": {
          "$ref": "#/definitions/v1DirectSyncSource"
        }
      }
    },
    "v1GetListingDistributionActivationStatusRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1GetListingDistributionActivationStatusResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account to retrieve LD activation status for"
        },
        "isActive": {
          "type": "boolean",
          "title": "Whether LD is active or not"
        },
        "addonId": {
          "type": "string",
          "title": "The LD addon that is currently active for the account"
        },
        "activation": {
          "type": "string",
          "format": "date-time",
          "title": "The date LD was activated"
        }
      }
    },
    "v1GetListingSourceByIdRequest": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Optional, if included it will only return fields included in the field mask"
        }
      }
    },
    "v1GetListingSourceByIdResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1GetListingSourceByProviderIdRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1Provider"
        },
        "id": {
          "type": "string"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Optional, if included it will only return fields included in the field mask"
        }
      }
    },
    "v1GetListingSourceByProviderIdResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1GetListingSourcesRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1Provider",
          "title": "Optional, if included it will only return sources for that provider"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Optional, if included it will only return fields included in the field mask"
        }
      }
    },
    "v1GetListingSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Source"
          }
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Optional, if included it will only return fields included in the field mask"
        }
      }
    },
    "v1GetLocalSearchSEODataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keyword": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetLocalSearchSEODataResponse": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "localSearchData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalSearchData"
          }
        }
      }
    },
    "v1GetMoreHoursTypesRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        }
      }
    },
    "v1GetMoreHoursTypesResponse": {
      "type": "object",
      "properties": {
        "moreHoursTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MoreHoursType"
          }
        }
      }
    },
    "v1GetMultiAddonAttributesRequest": {
      "type": "object",
      "properties": {
        "addonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional list of Addon IDs to filter results by"
        },
        "addonTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AddonType"
          },
          "title": "Optional list of AddonTypes to filter results by"
        },
        "providerTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProviderType"
          },
          "title": "Optional list of ProviderTypes to filter results by"
        }
      }
    },
    "v1GetMultiAddonAttributesResponse": {
      "type": "object",
      "properties": {
        "addonAttributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1AddonAttributes"
          }
        }
      }
    },
    "v1GetMultiListingProfileRequest": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectionFilter": {
          "$ref": "#/definitions/v1ProjectionFilter"
        },
        "readFilter": {
          "$ref": "#/definitions/v1ReadFilter"
        },
        "languageCode": {
          "type": "string"
        }
      }
    },
    "v1GetMultiListingProfileResponse": {
      "type": "object",
      "properties": {
        "listingProfiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiListingProfileResponseListingProfileContainer"
          }
        }
      }
    },
    "v1GetMultiSuggestionRequest": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerId": {
          "type": "string"
        },
        "fieldType": {
          "type": "string"
        },
        "languageType": {
          "type": "string"
        }
      }
    },
    "v1GetMultiSuggestionResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Suggestion"
          }
        }
      }
    },
    "v1GetNeustarPublicationsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetNeustarPublicationsResponse": {
      "type": "object",
      "properties": {
        "publications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NeustarPublication"
          }
        }
      }
    },
    "v1GetOrGenerateSEOSuggestedKeywordsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetOrGenerateSEOSuggestedKeywordsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywordInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordInfo"
          }
        }
      }
    },
    "v1GetPartnerSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1GetPartnerSettingsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "isSmbKeyWordEditingDisabled": {
          "type": "boolean"
        },
        "isFavoriteNewKeywordsDisabled": {
          "type": "boolean"
        },
        "isSyncKeywordsDisabled": {
          "type": "boolean"
        }
      }
    },
    "v1GetPartnerSourcesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner to get sources for"
        },
        "marketId": {
          "type": "string",
          "title": "Optional, if included it will return enabled sources for that market, if omitted, the endpoint will use the default market sources"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Optional, if included it will only return fields included in the field mask"
        }
      }
    },
    "v1GetPartnerSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Source"
          }
        }
      }
    },
    "v1GetProductSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1GetProductSettingsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "canEditKeywords": {
          "type": "boolean"
        }
      }
    },
    "v1GetSEODataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetSEODataResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEOData"
          },
          "description": "Data is the most recent entry for the business for each keyword."
        },
        "previousData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEOData"
          },
          "description": "Previous data is the oldest data entry for the business for each keyword within the date range."
        }
      }
    },
    "v1GetSEODataSummaryRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetSEODataSummaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEODataSummary"
          },
          "description": "Data is the most recent entry for the business for each keyword."
        },
        "previousData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SEODataSummary"
          },
          "description": "Previous data is the oldest data entry for the business for each keyword within the date range."
        }
      }
    },
    "v1GetSEOSettingsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetSEOSuggestedKeywordsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1GetSEOSuggestedKeywordsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "keywordInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeywordInfo"
          }
        }
      }
    },
    "v1GetSuggestionRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "fieldType": {
          "type": "string",
          "title": "Name of the field we are fetching suggestions for.\nhttps://github.com/vendasta/listing-products/blob/0289934c7984e2ba3494717a7d5d8d501b1922bd/internal/suggestionservice/service.go#L53"
        },
        "languageCode": {
          "type": "string",
          "description": "Language code from frontend."
        }
      }
    },
    "v1GetSuggestionResponse": {
      "type": "object",
      "properties": {
        "suggestion": {
          "type": "string"
        }
      }
    },
    "v1GetSyncDataRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "refresh": {
          "type": "boolean",
          "title": "if set to true, connected account credentials will be refreshed"
        },
        "includeHidden": {
          "type": "boolean",
          "title": "if true, hidden sources will be returned"
        },
        "sourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "if set, only sources with these IDs will be returned"
        }
      }
    },
    "v1GetSyncDataResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SyncData"
          }
        }
      }
    },
    "v1GetSyndicationInfoRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string",
          "title": "optional vendor ID to filter by"
        }
      }
    },
    "v1GetSyndicationInfoResponse": {
      "type": "object",
      "properties": {
        "syndicationInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SyndicationInfo"
          }
        }
      }
    },
    "v1GoogleAttribute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Google attribute in the form \"attributes/is_owned_by_women\""
        },
        "value": {
          "title": "Contains the value of the attribute. This can be of 4 types:\n  bool\n  URL (represented as a string google.protobuf.Value)\n  enum (represented as a string google.protobuf.Value)\n  repeated_enum (represented as a struct google.protobuf.Value)\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/AttributeValueType"
        }
      },
      "title": "Represents a single Google attribute\nreference docs:\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/attributes/list#attributemetadata\nhttps://developers.google.com/my-business/reference/businessinformation/rest/v1/Attributes"
    },
    "v1GoogleAttributeMetaData": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "title": "The name of the Google Attribute in the form \"attributes/is_owned_by_women\""
        },
        "valueType": {
          "$ref": "#/definitions/v1ValueType"
        },
        "displayName": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "valueDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GoogleAttributeMetaDataList": {
      "type": "object",
      "properties": {
        "googleAttributeMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttributeMetaData"
          }
        }
      }
    },
    "v1GoogleAttributes": {
      "type": "object",
      "properties": {
        "googleAttribute": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttribute"
          }
        }
      }
    },
    "v1GoogleDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1GooglePlace": {
      "type": "object",
      "properties": {
        "placeId": {
          "type": "string",
          "title": "The ID of the place"
        },
        "placeName": {
          "type": "string",
          "description": "The localized name of the place. For example, Scottsdale, AZ."
        },
        "city": {
          "type": "string",
          "title": "The city or locality the Google Place is located in"
        }
      },
      "title": "Based on https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#Location.PlaceInfo"
    },
    "v1HealthCareProfessionalInformation": {
      "type": "object",
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "fellowship": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/HealthCareProfessionalInformationGender"
        },
        "initials": {
          "type": "string"
        },
        "insurancesAccepted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastName": {
          "type": "string"
        },
        "medicalLicenseNumber": {
          "type": "string"
        },
        "nationalProviderIdentifier": {
          "type": "string"
        },
        "office": {
          "type": "string"
        },
        "professionalCredential": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "residency": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "school": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specialty": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "standardizedTitle": {
          "type": "string"
        },
        "stateLicense": {
          "type": "string"
        },
        "isTakingPatients": {
          "type": "boolean"
        },
        "doctorDotComCategories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DoctorDotComCategory"
          }
        },
        "hospitalAffiliations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isProvider": {
          "$ref": "#/definitions/HealthCareProfessionalInformationIsProvider"
        }
      }
    },
    "v1HistoricalCitationsDataPoint": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the data point."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "title": "Value of the data point. Represents total citations up to a certain day"
        }
      }
    },
    "v1HoursOfOperation": {
      "type": "object",
      "properties": {
        "hoursOfOperation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HoursOfOperationSpan"
          }
        }
      },
      "title": "Deprecated"
    },
    "v1Insight": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1InsightBucket": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        },
        "bucketLabel": {
          "type": "string"
        }
      }
    },
    "v1InsightBucketed": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InsightBucket"
          }
        },
        "totalAcrossBuckets": {
          "type": "string",
          "format": "int64"
        },
        "totalChangeAcrossBuckets": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1IsAvailable": {
      "type": "string",
      "enum": [
        "UNSET",
        "YES",
        "NO"
      ],
      "default": "UNSET"
    },
    "v1IsLocalSEOProActiveForAccountRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1IsLocalSEOProActiveForAccountResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "editionId": {
          "type": "string"
        }
      }
    },
    "v1IsPartnerUserRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1IsPartnerUserResponse": {
      "type": "object",
      "properties": {
        "isPartnerUser": {
          "type": "boolean"
        }
      }
    },
    "v1KeywordInfo": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "competition": {
          "type": "string"
        },
        "competitionIndex": {
          "type": "string",
          "format": "int64"
        },
        "searchVolume": {
          "type": "string",
          "format": "int64"
        },
        "lowTopOfPageBid": {
          "type": "number",
          "format": "float"
        },
        "highTopOfPageBid": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1LegacyAPICreateRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "args": {
          "type": "string"
        }
      }
    },
    "v1LegacyAPIUpdateRequest": {
      "type": "object",
      "properties": {
        "args": {
          "type": "string"
        }
      }
    },
    "v1LegacyProductDetails": {
      "type": "object",
      "properties": {
        "commonName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "adminNotes": {
          "type": "string"
        },
        "competitor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shareOfVoiceService": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1LifecycleStage": {
      "type": "string",
      "enum": [
        "LIFECYCLE_STAGE_UNSET",
        "LIFECYCLE_STAGE_LEAD",
        "LIFECYCLE_STAGE_PROSPECT",
        "LIFECYCLE_STAGE_CUSTOMER"
      ],
      "default": "LIFECYCLE_STAGE_UNSET",
      "description": "Where an account is at in the lifecycle stage\nThe sales domain has the same concept of a lifecycle stage. Updating this enum\nmost likely means you need to update the one in sales as well."
    },
    "v1ListCitationDomainsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "cursor": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListCitationDomainsResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalResults": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListSuggestionRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListSuggestionResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Suggestion"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListingProfile": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "externalIdentifiers": {
          "$ref": "#/definitions/v1ExternalIdentifiers"
        },
        "socialUrls": {
          "$ref": "#/definitions/v1SocialURLs"
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/v1HoursOfOperation",
          "title": "Deprecated: Use BusinessHours instead"
        },
        "richData": {
          "$ref": "#/definitions/v1RichData"
        },
        "napData": {
          "$ref": "#/definitions/listing_productsv1Location"
        },
        "businessHours": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BusinessHours"
          }
        },
        "googleAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttribute"
          }
        },
        "googleAttributesMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GoogleAttributeMetaData"
          }
        },
        "moreHoursTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MoreHoursType"
          }
        },
        "bingAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttribute"
          }
        },
        "bingAttributesMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BingAttributeMetaData"
          }
        },
        "legacyProductDetails": {
          "$ref": "#/definitions/v1LegacyProductDetails"
        },
        "marketingInfo": {
          "$ref": "#/definitions/v1MarketingInfo"
        }
      },
      "title": "Represents a listing profile"
    },
    "v1LocalSearchData": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "vicinity": {
          "$ref": "#/definitions/v1Vicinity"
        },
        "searchLocation": {
          "$ref": "#/definitions/v1Geo"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalSearchResult"
          }
        }
      }
    },
    "v1LocalSearchResult": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rank": {
          "type": "string"
        },
        "isMainBusiness": {
          "type": "boolean"
        },
        "reviews": {
          "$ref": "#/definitions/v1LocalSearchReviews"
        },
        "phoneNumber": {
          "type": "string"
        },
        "claimStatus": {
          "$ref": "#/definitions/v1GBPClaimStatus"
        }
      }
    },
    "v1LocalSearchReviews": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "number",
          "format": "double"
        },
        "count": {
          "type": "string"
        }
      }
    },
    "v1LocationOverride": {
      "type": "object",
      "properties": {
        "ignoredAnchorDataMatches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "submitListingValidationRegex": {
          "type": "string"
        }
      },
      "title": "Location specific source overrides"
    },
    "v1ManuallyDeactivateUberallProvisioningRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID (aka account group ID)"
        }
      }
    },
    "v1ManuallyFixYextProvisioningRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID (aka account group ID)"
        },
        "addonId": {
          "type": "string"
        },
        "activationId": {
          "type": "string"
        }
      }
    },
    "v1ManuallyProvisionUberallRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID (aka account group ID)"
        },
        "addonId": {
          "type": "string"
        },
        "activationId": {
          "type": "string"
        }
      }
    },
    "v1MarketingClassification": {
      "type": "string",
      "enum": [
        "MARKETING_CLASSIFICATION_UNUSED",
        "MARKETING_CLASSIFICATION_SMB",
        "MARKETING_CLASSIFICATION_SPAM",
        "MARKETING_CLASSIFICATION_DUPLICATE",
        "MARKETING_CLASSIFICATION_BLACKLISTED",
        "MARKETING_CLASSIFICATION_OUT_OF_MARKET"
      ],
      "default": "MARKETING_CLASSIFICATION_UNUSED"
    },
    "v1MarketingInfo": {
      "type": "object",
      "properties": {
        "conversionPoint": {
          "type": "string"
        },
        "marketingClassification": {
          "$ref": "#/definitions/v1MarketingClassification"
        },
        "lifecycleStage": {
          "$ref": "#/definitions/v1LifecycleStage"
        }
      },
      "title": "MarketingInfo store marketing properties for an account group"
    },
    "v1Metadata": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1MoreHoursType": {
      "type": "object",
      "properties": {
        "hoursTypeId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "localizedDisplayName": {
          "type": "string"
        }
      },
      "title": "Information about a Google \"More Hours\" type https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#morehourstype"
    },
    "v1NeustarPublication": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "parentId": {
          "type": "string",
          "format": "int64"
        },
        "platform": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "lastDeliveryTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "disposition": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "v1PartnerOverride": {
      "type": "object",
      "properties": {
        "adminNotes": {
          "type": "string"
        },
        "createListingHtml": {
          "type": "string"
        },
        "claimListingHtml": {
          "type": "string"
        },
        "descriptionHtml": {
          "type": "string"
        },
        "editListingHtml": {
          "type": "string"
        },
        "editListingUrl": {
          "type": "string"
        },
        "iconClass16px": {
          "type": "string"
        },
        "iconClass32px": {
          "type": "string"
        },
        "iconClass50px": {
          "type": "string"
        },
        "iconUrl16px": {
          "type": "string"
        },
        "iconUrl32px": {
          "type": "string"
        },
        "iconUrl50px": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Partner specific source overrides"
    },
    "v1ProjectionFilter": {
      "type": "object",
      "properties": {
        "externalIdentifiers": {
          "type": "boolean",
          "title": "Controls if external_identifiers are returned"
        },
        "socialUrls": {
          "type": "boolean",
          "title": "Controls if social_urls is returned"
        },
        "hoursOfOperation": {
          "type": "boolean",
          "description": "Deprecated",
          "title": "Controls if hours_of_operation are returned"
        },
        "richData": {
          "type": "boolean",
          "title": "Controls if rich_data is returned"
        },
        "napData": {
          "type": "boolean",
          "title": "Controls if nap data is returned"
        },
        "businessHours": {
          "type": "boolean",
          "title": "Controls if business hours are returned"
        },
        "googleAttributes": {
          "type": "boolean"
        },
        "googleAttributesMetadata": {
          "type": "boolean"
        },
        "bingAttributes": {
          "type": "boolean"
        },
        "bingAttributesMetadata": {
          "type": "boolean"
        },
        "legacyProductDetails": {
          "type": "boolean"
        }
      },
      "description": "ProjectionFilter controls which sets of extended account group data is returned for each account group."
    },
    "v1Provider": {
      "type": "string",
      "enum": [
        "PROVIDER_UNSPECIFIED",
        "PROVIDER_UBERALL",
        "PROVIDER_YEXT",
        "PROVIDER_DIRECT"
      ],
      "default": "PROVIDER_UNSPECIFIED",
      "title": "Possible source providers"
    },
    "v1ProviderType": {
      "type": "string",
      "enum": [
        "PROVIDER_TYPE_UNSPECIFIED",
        "PROVIDER_TYPE_UBERALL",
        "PROVIDER_TYPE_YEXT"
      ],
      "default": "PROVIDER_TYPE_UNSPECIFIED",
      "description": "LSP Provider type. If not LSP ignore or use PROVIDER_TYPE_UNSPECIFIED."
    },
    "v1ReadFilter": {
      "type": "object",
      "properties": {
        "includeDeleted": {
          "type": "boolean",
          "title": "Whether or not to include deleted profiles on the read"
        }
      },
      "title": "ReadFilter can be used for filtering at the repository layer"
    },
    "v1RegularHoursPeriod": {
      "type": "object",
      "properties": {
        "openDay": {
          "$ref": "#/definitions/v1DayOfWeek",
          "description": "open_day indicates the day of the week that this period starts on."
        },
        "openTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "title": "open_time valid values are 00:00-23:59"
        },
        "closeDay": {
          "$ref": "#/definitions/v1DayOfWeek",
          "description": "close_day indicates the day of the week that this period ends on. It should be the same as\nopenDay except when the period goes over midnight."
        },
        "closeTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "description": "close_time valid values are 00:00-24:00, where 24:00 represents midnight at the end of the\nspecified day field."
        }
      }
    },
    "v1RichData": {
      "type": "object",
      "properties": {
        "tollFreeNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "servicesOffered": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "brandsCarried": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "landmark": {
          "type": "string"
        },
        "paymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichDataPaymentMethods"
          }
        },
        "healthCareProfessionalInformation": {
          "$ref": "#/definitions/v1HealthCareProfessionalInformation"
        },
        "serviceAvailability": {
          "$ref": "#/definitions/v1ServiceAvailability"
        },
        "cellNumber": {
          "type": "string"
        },
        "faxNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "seoKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bookingUrl": {
          "type": "string"
        },
        "conditionalFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConditionalField"
          }
        },
        "syncingSeoKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inferredAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SEOData": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string",
          "title": "Deprecated: use SEODataSummary"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "Deprecated: use SEODataSummary"
        },
        "localRank": {
          "type": "number",
          "format": "double",
          "title": "Deprecated: use SEODataSummary"
        },
        "organicRank": {
          "type": "number",
          "format": "double",
          "title": "Deprecated: use SEODataSummary"
        },
        "difficulty": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use SEODataSummary"
        },
        "searchVolume": {
          "type": "string",
          "format": "int64",
          "title": "Deprecated: use SEODataSummary"
        },
        "localSearches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LocalSearchData"
          },
          "title": "Deprecated: use LocalSearchData"
        },
        "searchRadius": {
          "type": "number",
          "format": "double",
          "title": "Deprecated: use SEODataSummary"
        },
        "workflowUrl": {
          "type": "string",
          "title": "Deprecated: use SEODataSummary"
        }
      },
      "title": "Deprecated: use SEODataSummary \u0026 LocalSearchData"
    },
    "v1SEODataSummary": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "localRank": {
          "type": "number",
          "format": "double"
        },
        "organicRank": {
          "type": "number",
          "format": "double"
        },
        "difficulty": {
          "type": "string",
          "format": "int64"
        },
        "searchVolume": {
          "type": "string",
          "format": "int64"
        },
        "searchRadius": {
          "type": "number",
          "format": "double"
        },
        "workflowUrl": {
          "type": "string"
        }
      }
    },
    "v1SEOSettingsResponse": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "localSearchRadius": {
          "type": "number",
          "format": "double"
        },
        "favoriteKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isFullSearchEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1SaveSEOSettingsRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "localSearchRadius": {
          "type": "number",
          "format": "double"
        },
        "favoriteKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        },
        "isFullSearchEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1ServiceArea": {
      "type": "object",
      "properties": {
        "businessType": {
          "$ref": "#/definitions/v1ServiceAreaBusinessType"
        },
        "places": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GooglePlace"
          }
        }
      }
    },
    "v1ServiceAreaBusinessType": {
      "type": "string",
      "enum": [
        "SERVICE_AREA_BUSINESS_TYPE_UNSPECIFIED",
        "SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_LOCATION_ONLY",
        "SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_AND_BUSINESS_LOCATION"
      ],
      "default": "SERVICE_AREA_BUSINESS_TYPE_UNSPECIFIED",
      "description": "- SERVICE_AREA_BUSINESS_TYPE_UNSPECIFIED: Not specified.\n - SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_LOCATION_ONLY: Offers service only in the surrounding area (not at the business address).\n - SERVICE_AREA_BUSINESS_TYPE_CUSTOMER_AND_BUSINESS_LOCATION: Offers service at the business address and the surrounding area.",
      "title": "Based on https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations#Location.BusinessType"
    },
    "v1ServiceAvailability": {
      "type": "object",
      "properties": {
        "delivery": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "noContactDelivery": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "inStorePickup": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "curbsidePickup": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "appointmentsOnly": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "ecommerceOnly": {
          "$ref": "#/definitions/v1IsAvailable"
        },
        "closedStatus": {
          "$ref": "#/definitions/v1ClosedStatus"
        },
        "closedStatusDate": {
          "type": "string",
          "format": "date-time"
        },
        "reopeningDate": {
          "type": "string",
          "format": "date-time"
        },
        "servesDineIn": {
          "$ref": "#/definitions/v1IsAvailable"
        }
      }
    },
    "v1SocialURLs": {
      "type": "object",
      "properties": {
        "googleplusUrl": {
          "type": "string"
        },
        "linkedinUrl": {
          "type": "string"
        },
        "foursquareUrl": {
          "type": "string"
        },
        "twitterUrl": {
          "type": "string"
        },
        "facebookUrl": {
          "type": "string"
        },
        "rssUrl": {
          "type": "string"
        },
        "youtubeUrl": {
          "type": "string"
        },
        "instagramUrl": {
          "type": "string"
        },
        "pinterestUrl": {
          "type": "string"
        }
      }
    },
    "v1Source": {
      "type": "object",
      "properties": {
        "adminNotes": {
          "type": "string"
        },
        "createListingHtml": {
          "type": "string"
        },
        "createListingUrl": {
          "type": "string"
        },
        "claimListingHtml": {
          "type": "string"
        },
        "descriptionHtml": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "editListingHtml": {
          "type": "string"
        },
        "editListingUrl": {
          "type": "string"
        },
        "enabledFlag": {
          "type": "boolean"
        },
        "hasListingsFlag": {
          "type": "boolean"
        },
        "hasNoRatingsReviewsFlag": {
          "type": "boolean"
        },
        "hasReviewsFlag": {
          "type": "boolean"
        },
        "hasListingReporting": {
          "type": "boolean",
          "description": "This source has a web crawler, search API or some other method to find the listing online and report on its presence and accuracy."
        },
        "lspIcon": {
          "type": "string"
        },
        "iconClass16px": {
          "type": "string"
        },
        "iconClass32px": {
          "type": "string"
        },
        "iconClass50px": {
          "type": "string"
        },
        "iconUrl16px": {
          "type": "string"
        },
        "iconUrl32px": {
          "type": "string"
        },
        "iconUrl50px": {
          "type": "string"
        },
        "isDirectlySubmittedSource": {
          "type": "boolean",
          "description": "is_directly_submitted_source true if this source is submitted to by Vendasta directly. Some examples are GMB, Facebook and Twitter."
        },
        "isLdSource": {
          "type": "boolean",
          "title": "is_ld_source true if source is part of Listing Distribution"
        },
        "isLocationWhitelistedByDefaultFlag": {
          "type": "boolean"
        },
        "isPartnerWhitelistedByDefaultFlag": {
          "type": "boolean"
        },
        "isTaxonomyWhitelistedByDefaultFlag": {
          "type": "boolean"
        },
        "ignoredAnchorDataMatches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationBlacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationSpecificOverrides": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1LocationOverride"
          }
        },
        "locationWhitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "partnerBlacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerSpecificOverrides": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1PartnerOverride"
          }
        },
        "partnerWhitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "popularity": {
          "type": "string",
          "format": "int64"
        },
        "sourceId": {
          "type": "string",
          "format": "int64"
        },
        "sourceTypeId": {
          "type": "string"
        },
        "sourceTypeName": {
          "type": "string"
        },
        "submitListingHelpText": {
          "type": "string"
        },
        "submitListingValidationRegex": {
          "type": "string"
        },
        "supportsSubmittedListing": {
          "type": "boolean"
        },
        "taxonomyBlacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taxonomyWhitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uberallId": {
          "type": "string"
        },
        "yextId": {
          "type": "string"
        },
        "availableForServiceAreaBusiness": {
          "type": "boolean",
          "title": "Indicates that the listing source supports listings for service area businesses"
        },
        "syncRequirement": {
          "$ref": "#/definitions/v1SyncRequirement",
          "title": "The product activation requirement to sync to this source"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "All info about a listing source"
    },
    "v1SourceAccuracy": {
      "type": "object",
      "properties": {
        "anchorData": {
          "$ref": "#/definitions/v1AnchorData"
        },
        "anchorDataMatches": {
          "$ref": "#/definitions/v1AnchorDataMatches"
        },
        "status": {
          "$ref": "#/definitions/v1AccuracyStatus"
        },
        "lastScraped": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SpecialHoursPeriod": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1SpecialHoursStatus",
          "description": "status describes the behaviour of the special hours period. See enum options for required special hours fields."
        },
        "startDate": {
          "$ref": "#/definitions/v1GoogleDate",
          "description": "start_date is the calendar date this special hour period starts on."
        },
        "startTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "title": "start_time must be specified if status is open. Valid values are 00:00-24:00 where\n24:00 represents midnight at the end of the specified day field.\nTODO: what is returned with unconfirmed holiday status?"
        },
        "endDate": {
          "$ref": "#/definitions/v1GoogleDate",
          "description": "end_date (optional) is the calendar date this special hour period ends on. If endDate field is\nnot set, default to the date specified in startDate. If set, this field must be equal to or after startDate."
        },
        "endTime": {
          "$ref": "#/definitions/v1TimeOfDay",
          "title": "end_time must be specified if status is open. Valid values are 00:00-24:00, where 24:00\nrepresents midnight at the end of the specified day field.\nTODO: what is returned with unconfirmed holiday status?"
        }
      }
    },
    "v1SpecialHoursStatus": {
      "type": "string",
      "enum": [
        "SPECIAL_HOURS_STATUS_INVALID",
        "SPECIAL_HOURS_STATUS_OPEN",
        "SPECIAL_HOURS_STATUS_CLOSED",
        "SPECIAL_HOURS_STATUS_UNCONFIRMED_HOLIDAY"
      ],
      "default": "SPECIAL_HOURS_STATUS_INVALID",
      "description": "- SPECIAL_HOURS_STATUS_INVALID: Indicates that the field was not sent on the API request. This is not valid to be used.\n - SPECIAL_HOURS_STATUS_OPEN: Indicates the business is open during the period indicated by\n`start_date`, `start_time`, `end_date`, and `end_time`\n - SPECIAL_HOURS_STATUS_CLOSED: Indicates that the business is closed for the entire period from `start_date` to `end_date`.\n`start_time` and `end_time` will be ignored.\n - SPECIAL_HOURS_STATUS_UNCONFIRMED_HOLIDAY: NOT IMPLEMENTED The UI for this status is not included in the first slice.\nIndicates that there is a holiday during the specified period and the business has not confirmed their hours.\nThese periods should not be sent to listing sites",
      "title": "Describes the different modes that apply to special hour periods"
    },
    "v1StartBusinessDataScoreWorkflowRequest": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StartCitationWorkflowRequest": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchType": {
          "type": "string",
          "format": "int64",
          "description": "Optional. If not provided, will default to the next search type in sequence for each business."
        }
      }
    },
    "v1StartLocalSEODataWorkflowRequest": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BusinessKeywords"
          }
        },
        "forceSerpWorkflow": {
          "type": "boolean",
          "title": "force_serp_workflow flag will skip date checks and run the SERP workflow"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "Optional: If included, the workflow will save results for the provided date instead of the current date"
        },
        "forceKeywordInfoWorkflow": {
          "type": "boolean",
          "title": "force_keyword_info_workflow flag will skip date checks and run the Keyword Info workflow"
        },
        "forceSuggestedKeywordsWorkflow": {
          "type": "boolean",
          "title": "force_serp_workflow flag will skip date checks and run the Suggested Keywords workflow"
        },
        "ignoreDataLakeResults": {
          "type": "boolean",
          "title": "ignore_data_lake_results will re-fetch data from DataForSEO even if we have it stored in our data lake already"
        }
      }
    },
    "v1StartSEOCategoryWorkflowRequest": {
      "type": "object",
      "properties": {
        "businessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SubmitTurboListerRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "business ID (aka account group ID)"
        },
        "vendorId": {
          "type": "string",
          "description": "the vendor to submit to (Google My Business, Bing, ...).\nTable containing all vendors can be found in the Listing Products vstore namespace."
        },
        "force": {
          "type": "boolean",
          "title": "force the submission by passing the a vendors shouldSyndicate check"
        }
      }
    },
    "v1SubmitTurboListerResponse": {
      "type": "object",
      "properties": {
        "rejectedReason": {
          "type": "string",
          "description": "reason for rejection. Will be blank or empty string if the request was accepted."
        }
      }
    },
    "v1SuggestFieldUpdateRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "fieldType": {
          "type": "string"
        },
        "existingValue": {
          "type": "string"
        },
        "option": {
          "$ref": "#/definitions/v1UpdateOption"
        },
        "tone": {
          "type": "string",
          "title": "Possible tones we can use to change text.\nhttps://github.com/vendasta/galaxy/blob/d624e51ac90c8b6c59d7414626c1649c1f8a3d84/libs/forms/src/lib/controls/input-textarea-ai/input-textarea-ai.component.ts#LL55C20-L55C20"
        },
        "languageCode": {
          "type": "string",
          "description": "Language code from frontend."
        }
      }
    },
    "v1SuggestFieldUpdateResponse": {
      "type": "object",
      "properties": {
        "suggestion": {
          "type": "string"
        }
      }
    },
    "v1Suggestion": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "suggestion": {
          "type": "string"
        },
        "primaryCategoryId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1SyncData": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "title": "numeric ID of the source"
        },
        "name": {
          "type": "string",
          "title": "The name of the source"
        },
        "iconUrl": {
          "type": "string",
          "title": "The icon URL of the source"
        },
        "account": {
          "$ref": "#/definitions/v1ConnectedDirectSyncAccount",
          "title": "The connected account information for this direct submit source"
        },
        "connectLink": {
          "type": "string"
        },
        "accuracy": {
          "$ref": "#/definitions/v1SourceAccuracy",
          "title": "The accuracy data for this direct submit source"
        },
        "score": {
          "type": "string",
          "format": "int64",
          "title": "The current listing score for this direct submit source"
        },
        "maxScore": {
          "type": "string",
          "format": "int64",
          "title": "The maximum possible listing score for this direct submit source"
        },
        "listingUrl": {
          "type": "string",
          "title": "The URL of the listing for this direct submit source"
        },
        "listingId": {
          "type": "string",
          "title": "The CS listing id of the direct submit listing"
        },
        "syncDetails": {
          "$ref": "#/definitions/v1SyndicationStatus",
          "title": "The syndication status for this direct submit source"
        },
        "additionalAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConnectedDirectSyncAccount"
          },
          "title": "Other accounts that are connected for this source, and could be synced to"
        },
        "isSyncingEnabled": {
          "type": "boolean",
          "description": "Whether syncing to this source is enabled.  Usually this will correspond to the account's is_syncing_enabled flag,\nbut for sources without accounts, it will be populated by the models where we store direct sync setting for the business."
        },
        "isListingVerified": {
          "type": "boolean",
          "title": "Whether the listing has been verified as accurate by the business"
        },
        "hidden": {
          "type": "boolean",
          "title": "Whether the source is hidden from the UI"
        },
        "hiddenReason": {
          "type": "string",
          "title": "The reason the source is hidden"
        },
        "locked": {
          "type": "boolean",
          "title": "Whether the source is locked"
        },
        "requirement": {
          "$ref": "#/definitions/v1SyncRequirement",
          "title": "The product activation requirement to sync to this source"
        },
        "syncStatus": {
          "$ref": "#/definitions/v1SyncStatus",
          "title": "Code indicating the current sync status"
        },
        "sourceType": {
          "type": "string",
          "title": "What kind of source the source is"
        },
        "provider": {
          "$ref": "#/definitions/v1Provider",
          "title": "The provider used to sync the data"
        },
        "ecosystemSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1EcosystemSource"
          },
          "title": "Additional sources the data is synced to when this source is synced"
        }
      }
    },
    "v1SyncRequirement": {
      "type": "string",
      "enum": [
        "SYNC_REQUIREMENT_UNSET",
        "SYNC_REQUIREMENT_LSP",
        "SYNC_REQUIREMENT_PRO_EDITION",
        "SYNC_REQUIREMENT_YEXT_LSP",
        "SYNC_REQUIREMENT_UBERALL_LSP",
        "SYNC_REQUIREMENT_LSP_OR_PRO_EDITION"
      ],
      "default": "SYNC_REQUIREMENT_UNSET"
    },
    "v1SyncStatus": {
      "type": "string",
      "enum": [
        "SYNC_STATUS_UNSET",
        "SYNC_STATUS_SYNCING",
        "SYNC_STATUS_PARTIALLY_SYNCED",
        "SYNC_STATUS_SUCCESS",
        "SYNC_STATUS_FAILED",
        "SYNC_STATUS_CLAIMED",
        "SYNC_STATUS_UNAVAILABLE",
        "SYNC_STATUS_SUBMITTED"
      ],
      "default": "SYNC_STATUS_UNSET",
      "description": " - SYNC_STATUS_UNSET: The source is not syncing\n - SYNC_STATUS_SYNCING: The syncing is in progress\n - SYNC_STATUS_PARTIALLY_SYNCED: The source is partially synced.  May have errors or warnings\n - SYNC_STATUS_SUCCESS: The source has synced successfully\n - SYNC_STATUS_FAILED: Syncing of location data has failed. May have errors or warnings\n - SYNC_STATUS_CLAIMED: The source is not syncing because it is claimed by someone else\n - SYNC_STATUS_UNAVAILABLE: We are unable to sync to this source.\n - SYNC_STATUS_SUBMITTED: The information has been submitted to the source.\nFor some sources the most we get is `submitted` and not a `success` status."
    },
    "v1SyncToSourcesRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "trigger": {
          "type": "string"
        }
      }
    },
    "v1SyndicationInfo": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string"
        },
        "lastAttempted": {
          "type": "string",
          "format": "date-time"
        },
        "lastSucceeded": {
          "type": "string",
          "format": "date-time"
        },
        "lastWorkflowUrl": {
          "type": "string"
        }
      }
    },
    "v1SyndicationStatus": {
      "type": "object",
      "properties": {
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "lastAttemptedOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastSucceededOn": {
          "type": "string",
          "format": "date-time"
        },
        "listingUrl": {
          "type": "string"
        },
        "listingExternalId": {
          "type": "string"
        },
        "lastSyncAttemptId": {
          "type": "string"
        },
        "lastSuccessfulAttemptId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "detailedResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DetailedSyndicationStatusResults"
          }
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Metadata"
          }
        }
      },
      "title": "SyndicationStatus info based on the type defined in the listing_syndication service"
    },
    "v1TimeOfDay": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "minutes": {
          "type": "integer",
          "format": "int32",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        }
      },
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are [google.type.Date][google.type.Date] and\n`google.protobuf.Timestamp`."
    },
    "v1TriggerBingInsightsBackFillRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "firstSuccessfulSync": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      }
    },
    "v1UndeleteListingSourceRequest": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1UpdateAddonAttributesRequest": {
      "type": "object",
      "properties": {
        "addonId": {
          "type": "string"
        },
        "addonAttributes": {
          "$ref": "#/definitions/v1AddonAttributes"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdateListingProfileRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "updateOperations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UpdateOperation"
          }
        },
        "ifUnmodifiedSince": {
          "type": "string",
          "format": "date-time",
          "title": "If unmodified since will fail any update is older than current updated time. Much like https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Unmodified-Since"
        },
        "languageCode": {
          "type": "string"
        }
      },
      "description": "BulkUpdateRequest allows updating all of the pieces of the account group and runs them in order."
    },
    "v1UpdateListingSourceRequest": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdateListingSourceResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1Source"
        }
      }
    },
    "v1UpdateOperation": {
      "type": "object",
      "properties": {
        "nap": {
          "$ref": "#/definitions/listing_productsv1Location"
        },
        "externalIdentifiers": {
          "$ref": "#/definitions/v1ExternalIdentifiers"
        },
        "socialUrls": {
          "$ref": "#/definitions/v1SocialURLs"
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/v1HoursOfOperation",
          "title": "Deprecated"
        },
        "richData": {
          "$ref": "#/definitions/v1RichData"
        },
        "businessHours": {
          "$ref": "#/definitions/v1BusinessHours"
        },
        "googleAttributes": {
          "$ref": "#/definitions/v1GoogleAttributes"
        },
        "bingAttributes": {
          "$ref": "#/definitions/v1BingAttributes"
        },
        "legacyProductDetails": {
          "$ref": "#/definitions/v1LegacyProductDetails"
        },
        "marketingInfo": {
          "$ref": "#/definitions/v1MarketingInfo"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      },
      "title": "Update operation allows updating a specific piece of the listing profile"
    },
    "v1UpdateOption": {
      "type": "string",
      "enum": [
        "UPDATE_OPTION_UNSPECIFIED",
        "UPDATE_OPTION_IMPROVE_WRITING",
        "UPDATE_OPTION_SPELLING_AND_GRAMMAR",
        "UPDATE_OPTION_MAKE_SHORTER",
        "UPDATE_OPTION_OPTIMIZE_BY_KEYWORDS",
        "UPDATE_OPTION_CHANGE_TONE"
      ],
      "default": "UPDATE_OPTION_UNSPECIFIED"
    },
    "v1UpdateVendorSyncFlagRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        },
        "syncing": {
          "type": "boolean"
        }
      }
    },
    "v1UpsertPartnerSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "isSmbKeyWordEditingDisabled": {
          "type": "boolean"
        },
        "isFavoriteNewKeywordsDisabled": {
          "type": "boolean"
        },
        "isSyncKeywordsDisabled": {
          "type": "boolean"
        }
      }
    },
    "v1UpsertSuggestionRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "updateOperations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UpdateOperation"
          },
          "title": "Listing Profile UpdateOperation is used so that the suggestion can be created for any listing profile field"
        }
      },
      "description": "SetSuggestionRequest is used to create or update a suggestion for a business."
    },
    "v1ValueType": {
      "type": "string",
      "enum": [
        "ATTRIBUTE_VALUE_TYPE_UNSPECIFIED",
        "BOOL",
        "ENUM",
        "URL",
        "REPEATED_ENUM",
        "INTEGER"
      ],
      "default": "ATTRIBUTE_VALUE_TYPE_UNSPECIFIED"
    },
    "v1VendorAttributeMetaData": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string"
        },
        "bingAttributeMetadata": {
          "$ref": "#/definitions/v1BingAttributeMetaDataList"
        },
        "googleAttributeMetadata": {
          "$ref": "#/definitions/v1GoogleAttributeMetaDataList"
        }
      }
    },
    "v1Vicinity": {
      "type": "string",
      "enum": [
        "VICINITY_UNDEFINED",
        "VICINITY_CITY",
        "VICINITY_A1",
        "VICINITY_A2",
        "VICINITY_A3",
        "VICINITY_A4",
        "VICINITY_A5",
        "VICINITY_B1",
        "VICINITY_B2",
        "VICINITY_B3",
        "VICINITY_B4",
        "VICINITY_B5",
        "VICINITY_C1",
        "VICINITY_C2",
        "VICINITY_C3",
        "VICINITY_C4",
        "VICINITY_C5",
        "VICINITY_D1",
        "VICINITY_D2",
        "VICINITY_D3",
        "VICINITY_D4",
        "VICINITY_D5",
        "VICINITY_E1",
        "VICINITY_E2",
        "VICINITY_E3",
        "VICINITY_E4",
        "VICINITY_E5"
      ],
      "default": "VICINITY_UNDEFINED"
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
