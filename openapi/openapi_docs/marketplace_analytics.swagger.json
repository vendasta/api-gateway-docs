{
  "swagger": "2.0",
  "info": {
    "title": "marketplace_analytics/v1/activation_metrics.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PartnerEngagementService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/marketplaceanalytics.v1.PartnerEngagementService/GetMultiActivationMetrics": {
      "post": {
        "summary": "Get activation metrics for multiple items",
        "operationId": "PartnerEngagementService_GetMultiActivationMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiActivationMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiActivationMetricsRequest"
            }
          }
        ],
        "tags": [
          "PartnerEngagementService"
        ]
      }
    },
    "/marketplaceanalytics.v1.PartnerEngagementService/GetMultiVendorResellerMetrics": {
      "post": {
        "summary": "Get the Vendor's metrics for multiple resellers.",
        "operationId": "PartnerEngagementService_GetMultiVendorResellerMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiVendorResellerMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiVendorResellerMetricsRequest"
            }
          }
        ],
        "tags": [
          "PartnerEngagementService"
        ]
      }
    },
    "/marketplaceanalytics.v1.PartnerEngagementService/GetPartnerEngagement": {
      "post": {
        "summary": "Get all of the partner engagement for a partner and app",
        "operationId": "PartnerEngagementService_GetPartnerEngagement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPartnerEngagementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetPartnerEngagementRequest"
            }
          }
        ],
        "tags": [
          "PartnerEngagementService"
        ]
      }
    },
    "/marketplaceanalytics.v1.PartnerEngagementService/ListPartnerEngagement": {
      "post": {
        "summary": "List all of the partner engagements for an app",
        "operationId": "PartnerEngagementService_ListPartnerEngagement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPartnerEngagementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPartnerEngagementRequest"
            }
          }
        ],
        "tags": [
          "PartnerEngagementService"
        ]
      }
    },
    "/marketplaceanalytics.v1.PartnerEngagementService/ListVendorAccountMetrics": {
      "post": {
        "summary": "List the Vendor Account metrics for a Vendor.",
        "operationId": "PartnerEngagementService_ListVendorAccountMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListVendorAccountMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListVendorAccountMetricsRequest"
            }
          }
        ],
        "tags": [
          "PartnerEngagementService"
        ]
      }
    },
    "/marketplaceanalytics.v1.PartnerEngagementService/ListVendorResellerMetrics": {
      "post": {
        "summary": "List the Vendor Reseller metrics for a Vendor.",
        "operationId": "PartnerEngagementService_ListVendorResellerMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListVendorResellerMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListVendorResellerMetricsRequest"
            }
          }
        ],
        "tags": [
          "PartnerEngagementService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AccountData": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "description": "The name of the business."
        },
        "address": {
          "type": "string",
          "description": "The first address line of the business."
        },
        "address2": {
          "type": "string",
          "description": "The second address line of the business."
        },
        "city": {
          "type": "string",
          "description": "The city of the business."
        },
        "state": {
          "type": "string",
          "description": "The state of the business."
        },
        "zip": {
          "type": "string",
          "description": "The zip of the business."
        },
        "country": {
          "type": "string",
          "description": "The country of the business."
        }
      }
    },
    "v1AccountStatus": {
      "type": "string",
      "enum": [
        "ACCOUNT_STATUS_INVALID",
        "ACCOUNT_STATUS_ACTIVE_ACCOUNT",
        "ACCOUNT_STATUS_INACTIVE_ACCOUNT"
      ],
      "default": "ACCOUNT_STATUS_INVALID"
    },
    "v1Activation": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "description": "The ID of the app the Activation is for."
        },
        "appType": {
          "$ref": "#/definitions/v1AppType",
          "description": "The type of the app the Activation is for."
        },
        "editionId": {
          "type": "string",
          "description": "The ID of the edition the Activation is for."
        },
        "activationId": {
          "type": "string",
          "description": "The ID of the Activation."
        },
        "activationStatus": {
          "$ref": "#/definitions/v1ActivationStatus",
          "description": "The activation status of the Activation."
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the most recent event for this Activation."
        },
        "activatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time this Activation was first activated."
        },
        "addonId": {
          "type": "string",
          "description": "The ID of the add-on the Activation is for."
        },
        "orderFormSubmissionId": {
          "type": "string",
          "description": "The ID of the order form submission for the Activation."
        }
      }
    },
    "v1ActivationMetrics": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "title": "The ID of the item"
        },
        "currentlyActiveCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of instances of the item currently active"
        },
        "activationsInRangeCount": {
          "type": "string",
          "format": "int64",
          "title": "Number times the item was activated in the given range"
        },
        "deactivationsInRangeCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the item was deactivated in the given range"
        },
        "pendingDeactivationsInRangeCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the item had a pending deactivation created in the given range"
        }
      },
      "title": "comments"
    },
    "v1ActivationStatus": {
      "type": "string",
      "enum": [
        "ACTIVATION_STATUS_INVALID",
        "ACTIVATION_STATUS_PENDING_ACTIVATION",
        "ACTIVATION_STATUS_ACTIVE",
        "ACTIVATION_STATUS_PENDING_DEACTIVATION",
        "ACTIVATION_STATUS_DEACTIVATED"
      ],
      "default": "ACTIVATION_STATUS_INVALID"
    },
    "v1Alert": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "description": "The ID of the app the Alert is for."
        },
        "activationId": {
          "type": "string",
          "description": "The ID of the activation the Alert is for."
        },
        "alertType": {
          "$ref": "#/definitions/v1AlertType",
          "description": "The alert type of this Alert."
        }
      }
    },
    "v1AlertType": {
      "type": "string",
      "enum": [
        "ALERT_TYPE_INVALID",
        "ALERT_TYPE_CHANGE_SPEND_REQUESTED_ALERT",
        "ALERT_TYPE_PENDING_ACTIVATION_ALERT",
        "ALERT_TYPE_PENDING_DEACTIVATION_ALERT"
      ],
      "default": "ALERT_TYPE_INVALID"
    },
    "v1AppType": {
      "type": "string",
      "enum": [
        "APP_TYPE_INVALID",
        "APP_TYPE_APP",
        "APP_TYPE_ADDON"
      ],
      "default": "APP_TYPE_INVALID"
    },
    "v1GetMultiActivationMetricsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of the partner to get activation metrics for; if not provided, the metrics for all partners will be returned"
        },
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The IDs of the items to retrieve metrics for"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of the range to get metrics for"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of the range to get metrics for"
        },
        "projectionFilter": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "The metrics to get"
        }
      }
    },
    "v1GetMultiActivationMetricsResponse": {
      "type": "object",
      "properties": {
        "activationMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivationMetrics"
          },
          "title": "The activation metrics"
        }
      }
    },
    "v1GetMultiVendorResellerMetricsRequest": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "resellerPartnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the Resellers ."
        }
      }
    },
    "v1GetMultiVendorResellerMetricsResponse": {
      "type": "object",
      "properties": {
        "vendorResellerMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorResellerMetrics"
          },
          "title": "The reseller metrics"
        }
      }
    },
    "v1GetPartnerEngagementRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "the app id to get engagement for"
        },
        "partnerId": {
          "type": "string",
          "description": "the date to get engagement for",
          "title": "the partner id to get engagement for"
        }
      }
    },
    "v1GetPartnerEngagementResponse": {
      "type": "object",
      "properties": {
        "partnerEngagement": {
          "$ref": "#/definitions/v1PartnerEngagement"
        }
      }
    },
    "v1ListPartnerEngagementRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "title": "the app id to get engagement for"
        },
        "cursor": {
          "type": "string",
          "title": "A cursor to be provided when fetching additional pages of results beyond the first"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "Size of the page to return"
        },
        "sortOptions": {
          "$ref": "#/definitions/v1SortOptions",
          "title": "The options you can sort a table on"
        }
      }
    },
    "v1ListPartnerEngagementResponse": {
      "type": "object",
      "properties": {
        "partnerEngagement": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerEngagement"
          }
        }
      }
    },
    "v1ListVendorAccountMetricsFilterOptions": {
      "type": "object",
      "properties": {
        "resellerPartnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of Reseller Partner IDs to filter by.\nThe list specifies an OR filter, so each Reseller returned will match one of these Partner IDs."
        },
        "searchTerm": {
          "type": "string",
          "description": "The search term to apply to the search.\nOnly Accounts with names or Account Group IDs that match this search term will be returned."
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of App IDs to filter by.\nOnly activations with AppType \"app\" that are \"active\" (not deactivated or rejected) will be returned.\nThe list specifies an OR filter, so each App returned will match one of these App IDs."
        },
        "activationStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ActivationStatus"
          },
          "description": "The list of Activation Status's to filter by.\nThe list specifies an OR filter, so each App returned will match one of these Statuses."
        },
        "trimActivationsByFilters": {
          "type": "boolean",
          "description": "[Optional] This flag is used to indicate if only the Activations matching the provided filters\nshould be returned with their Account."
        }
      }
    },
    "v1ListVendorAccountMetricsRequest": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "cursor": {
          "type": "string",
          "description": "The cursor from which to begin paging."
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "description": "The size of the page to fetch."
        },
        "sortOptions": {
          "$ref": "#/definitions/v1ListVendorAccountMetricsSortOptions",
          "description": "The sort options to be applied to the query."
        },
        "filterOptions": {
          "$ref": "#/definitions/v1ListVendorAccountMetricsFilterOptions",
          "description": "The filter options to be applied to the query."
        }
      }
    },
    "v1ListVendorAccountMetricsResponse": {
      "type": "object",
      "properties": {
        "vendorAccountMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorAccountMetrics"
          },
          "description": "The page of VendorAccountMetrics returned."
        },
        "nextCursor": {
          "type": "string",
          "description": "The next cursor from which to continue paging."
        },
        "hasMore": {
          "type": "boolean",
          "description": "True if there is another page that can be fetched. Otherwise, false."
        }
      }
    },
    "v1ListVendorAccountMetricsSortField": {
      "type": "string",
      "enum": [
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_UNSPECIFIED",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_CREATED",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_ACCOUNT_COMPANY_NAME",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_RESELLER_NAME",
        "VENDOR_ACCOUNT_METRICS_SORT_FIELD_TOTAL_ACTIVE_ACTIVATIONS"
      ],
      "default": "VENDOR_ACCOUNT_METRICS_SORT_FIELD_UNSPECIFIED"
    },
    "v1ListVendorAccountMetricsSortOptions": {
      "type": "object",
      "properties": {
        "sortField": {
          "$ref": "#/definitions/v1ListVendorAccountMetricsSortField",
          "description": "The field by which to sort."
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "description": "The direction by which to sort."
        }
      }
    },
    "v1ListVendorResellerMetricsFilters": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "description": "The search_term to search by Reseller name/PID."
        }
      }
    },
    "v1ListVendorResellerMetricsRequest": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "cursor": {
          "type": "string",
          "description": "The cursor from which to start the list."
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "description": "The page size to restrict the size of the list."
        },
        "sortOptions": {
          "$ref": "#/definitions/v1ListVendorResellerMetricsSortOptions",
          "description": "The sort options to be applied to the query."
        },
        "filters": {
          "$ref": "#/definitions/v1ListVendorResellerMetricsFilters",
          "description": "The filters to be applied to the query."
        }
      }
    },
    "v1ListVendorResellerMetricsResponse": {
      "type": "object",
      "properties": {
        "vendorResellerMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VendorResellerMetrics"
          },
          "description": "The results of the list."
        },
        "nextCursor": {
          "type": "string",
          "description": "The next cursor from which to fetch the next page of results."
        },
        "hasMore": {
          "type": "boolean",
          "description": "A flag indicating whether there is another page of results."
        }
      }
    },
    "v1ListVendorResellerMetricsSortField": {
      "type": "string",
      "enum": [
        "VENDOR_RESELLER_METRICS_SORT_FIELD_UNSPECIFIED",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_RESELLER_NAME",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_TOTAL_ACTIVATIONS",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_TOTAL_ACTIVE_ACCOUNTS",
        "VENDOR_RESELLER_METRICS_SORT_FIELD_RESELLING_SINCE"
      ],
      "default": "VENDOR_RESELLER_METRICS_SORT_FIELD_UNSPECIFIED"
    },
    "v1ListVendorResellerMetricsSortOptions": {
      "type": "object",
      "properties": {
        "sortField": {
          "$ref": "#/definitions/v1ListVendorResellerMetricsSortField",
          "description": "The field by which to sort."
        },
        "sortDirection": {
          "$ref": "#/definitions/v1SortDirection",
          "description": "The direction by which to sort."
        }
      }
    },
    "v1PartnerEngagement": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner"
        },
        "appId": {
          "type": "string",
          "title": "The id of the app"
        },
        "partnerName": {
          "type": "string",
          "title": "The name of the partner"
        },
        "enabledOn": {
          "type": "string",
          "format": "date-time",
          "title": "The date a partner enabled the vendor app"
        },
        "selling": {
          "type": "boolean",
          "title": "True if a partner has the vendor app in at least one published package"
        },
        "totalStoreViews": {
          "type": "string",
          "format": "int64",
          "title": "The amount of times a product has been viewed in business center and marketplace public store,"
        },
        "totalStoreCallToActionEvents": {
          "type": "string",
          "format": "int64",
          "title": "The number of times a user has clicked the call to action in business center and the marketplace public store"
        },
        "totalActivations": {
          "type": "string",
          "format": "int64",
          "title": "The total number of times a vendor app has been activated"
        },
        "totalDeactivations": {
          "type": "string",
          "format": "int64",
          "title": "The total number of times a vendor app has been deactivated"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time the engagement entry was created"
        },
        "salesContactEmail": {
          "type": "string",
          "title": "The account executive email for a given date"
        },
        "totalPartnerViews": {
          "type": "string",
          "format": "int64",
          "title": "The total number of times a partner viewed an app"
        }
      }
    },
    "v1ResellerServiceTier": {
      "type": "string",
      "enum": [
        "RESELLER_SERVICE_TIER_INVALID",
        "RESELLER_SERVICE_TIER_PRE_SALES",
        "RESELLER_SERVICE_TIER_CHURNED_PARTNER",
        "RESELLER_SERVICE_TIER_SILVER",
        "RESELLER_SERVICE_TIER_GOLD",
        "RESELLER_SERVICE_TIER_PLATINUM",
        "RESELLER_SERVICE_TIER_DIAMOND"
      ],
      "default": "RESELLER_SERVICE_TIER_INVALID",
      "description": "Deprecated: This enum is no longer supported."
    },
    "v1ResellingProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product."
        }
      },
      "description": "A representation of a product being resold."
    },
    "v1Salesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string",
          "title": "The ID of the salesperson"
        },
        "salespersonFirstName": {
          "type": "string",
          "title": "The first name of the salesperson"
        },
        "salespersonLastName": {
          "type": "string",
          "title": "The last name of the salesperson"
        }
      },
      "title": "A representation of a salesperson"
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "DESCENDING",
        "ASCENDING"
      ],
      "default": "DESCENDING",
      "description": "The directions that a result set can be sorted in."
    },
    "v1SortField": {
      "type": "string",
      "enum": [
        "TOTAL_ACTIVATIONS",
        "PARTNER_NAME",
        "ENABLED_ON",
        "SELLING",
        "TOTAL_STORE_VIEWS",
        "TOTAL_STORE_CALL_TO_ACTION_EVENTS",
        "TOTAL_DEACTIVATIONS",
        "TOTAL_PARTNER_VIEWS"
      ],
      "default": "TOTAL_ACTIVATIONS",
      "description": "The field to sort a result set on."
    },
    "v1SortOptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1SortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1VendorAccountMetrics": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "businessId": {
          "type": "string",
          "description": "The ID of the business Account."
        },
        "accountData": {
          "$ref": "#/definitions/v1AccountData",
          "description": "The business' NAP data."
        },
        "resellerPartnerId": {
          "type": "string",
          "description": "The Partner ID of the Reseller."
        },
        "resellerName": {
          "type": "string",
          "description": "The name of the Reseller."
        },
        "activations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Activation"
          },
          "description": "The activations of this Account."
        },
        "totalActiveActivations": {
          "type": "string",
          "format": "int64",
          "description": "The number of active activations for this Account."
        },
        "accountStatus": {
          "$ref": "#/definitions/v1AccountStatus",
          "description": "The account status of this Account."
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Alert"
          },
          "description": "The relevant alerts for this Account."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this Account was created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this Account was updated."
        }
      }
    },
    "v1VendorResellerMetrics": {
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor."
        },
        "resellerPartnerId": {
          "type": "string",
          "description": "The Partner ID of the Reseller."
        },
        "resellerName": {
          "type": "string",
          "description": "The name of the Reseller."
        },
        "resellingProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResellingProduct"
          },
          "description": "The Vendor's products the Reseller is reselling."
        },
        "resellingSince": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the Reseller first started reselling the Vendor's products."
        },
        "totalActivations": {
          "type": "string",
          "format": "int64",
          "description": "The total number of activations the Reseller has for the Vendor."
        },
        "totalActiveAccounts": {
          "type": "string",
          "format": "int64",
          "description": "The total number of active accounts the Reseller has for the Vendor."
        },
        "salespersonAssignedToReseller": {
          "$ref": "#/definitions/v1Salesperson",
          "title": "The salesperson assigned to the Reseller"
        },
        "resellerServiceTier": {
          "$ref": "#/definitions/v1ResellerServiceTier",
          "description": "Deprecated: This property is no longer supported.\nThe Reseller's service tier, determine by the sales team of their assigned salesperson."
        }
      },
      "description": "A representation of the metrics for a Vendor-Reseller relationship."
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
