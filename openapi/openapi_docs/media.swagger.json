{
  "swagger": "2.0",
  "info": {
    "title": "media/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ImageService"
    },
    {
      "name": "MediaService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/media.v1.ImageService/Create": {
      "post": {
        "operationId": "ImageService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mediav1CreateImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mediav1CreateImageRequest"
            }
          }
        ],
        "tags": [
          "ImageService"
        ]
      }
    },
    "/media.v2.MediaService/CreateImage": {
      "post": {
        "summary": "Save an uploaded image",
        "operationId": "MediaService_CreateImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mediav2CreateImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mediav2CreateImageRequest"
            }
          }
        ],
        "tags": [
          "MediaService"
        ]
      }
    },
    "/media.v2.MediaService/CreateVideo": {
      "post": {
        "summary": "Save an uploaded video",
        "operationId": "MediaService_CreateVideo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateVideoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateVideoRequest"
            }
          }
        ],
        "tags": [
          "MediaService"
        ]
      }
    },
    "/media.v2.MediaService/GenerateUploadUrl": {
      "post": {
        "summary": "Generate a signed url for video uploading",
        "operationId": "MediaService_GenerateUploadUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GenerateUploadUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GenerateUploadUrlRequest"
            }
          }
        ],
        "tags": [
          "MediaService"
        ]
      }
    },
    "/media.v2.MediaService/GetImage": {
      "post": {
        "summary": "Get an image by ID",
        "operationId": "MediaService_GetImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetImageRequest"
            }
          }
        ],
        "tags": [
          "MediaService"
        ]
      }
    },
    "/media.v2.MediaService/GetResumableUploadSession": {
      "post": {
        "summary": "This service will just return an uri which can be further used to upload\nmedia files",
        "operationId": "MediaService_GetResumableUploadSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetResumableUploadSessionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetResumableUploadSessionRequest"
            }
          }
        ],
        "tags": [
          "MediaService"
        ]
      }
    },
    "/media.v2.MediaService/GetVideo": {
      "post": {
        "summary": "Get a video by ID",
        "operationId": "MediaService_GetVideo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetVideoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetVideoRequest"
            }
          }
        ],
        "tags": [
          "MediaService"
        ]
      }
    }
  },
  "definitions": {
    "mediav1CreateImageRequest": {
      "type": "object",
      "properties": {
        "servingUrl": {
          "type": "string",
          "title": "The serving_url that is generated after an image is uploaded to google cloud storage"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav1Tag"
          },
          "title": "Tag identifiers for statistics"
        }
      },
      "title": "The CreateImageRequest message comes from a client to create an image, after it has been uploaded"
    },
    "mediav1CreateImageResponse": {
      "type": "object",
      "properties": {
        "imageId": {
          "type": "string",
          "title": "The image_id for the image indexed in vStore"
        }
      },
      "title": "The CreateImageResponse returns the image_id of the image that is indexed in vStore"
    },
    "mediav1Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Key value pair"
    },
    "mediav2CreateImageRequest": {
      "type": "object",
      "properties": {
        "servingUrl": {
          "type": "string",
          "title": "The serving_url that is generated after an image is uploaded to google\ncloud storage"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav2Tag"
          },
          "title": "Tag identifiers for statistics"
        }
      },
      "title": "The CreateImageRequest message comes from a client to create an image, after\nit has been uploaded"
    },
    "mediav2CreateImageResponse": {
      "type": "object",
      "properties": {
        "imageId": {
          "type": "string",
          "title": "The image_id for the image indexed in vStore"
        }
      },
      "title": "The CreateImageResponse returns the image_id of the image that is indexed in\nvStore"
    },
    "mediav2Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Tag is a key-value pair"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2CreateVideoRequest": {
      "type": "object",
      "properties": {
        "videoUrl": {
          "type": "string",
          "title": "The public url that is used after a video is uploaded to google cloud\nstorage"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav2Tag"
          },
          "title": "The tag identifiers for statistics"
        }
      },
      "title": "CreateVideoRequest is a request to map a video url to a video_id"
    },
    "v2CreateVideoResponse": {
      "type": "object",
      "properties": {
        "videoId": {
          "type": "string",
          "title": "The video_id for the video that was created"
        }
      },
      "title": "CreateVideoResponse returns the video_id of the video that was created"
    },
    "v2GenerateUploadUrlRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The unique identifier for the account group"
        },
        "fileName": {
          "type": "string",
          "title": "The file_name that is going to upload"
        },
        "contentType": {
          "type": "string",
          "title": "Th content_type the url is going to submit in the header"
        }
      },
      "title": "The GenerateUploadUrlRequest comes from a client to generate a signed url for\nvideo uploading"
    },
    "v2GenerateUploadUrlResponse": {
      "type": "object",
      "properties": {
        "signedUrl": {
          "type": "string",
          "title": "The signed_url used for uploading video"
        }
      },
      "title": "The GenerateUploadUrlResponse returns the signed_url used for uploading video"
    },
    "v2GetImageRequest": {
      "type": "object",
      "properties": {
        "imageId": {
          "type": "string",
          "title": "The ID of the requested image"
        }
      },
      "title": "GetImageRequest is a request for the image metadata associated to a image ID"
    },
    "v2GetImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/v2Image",
          "title": "The requested image"
        }
      },
      "title": "GetImageResponse is the requested image object"
    },
    "v2GetResumableUploadSessionRequest": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string",
          "title": "media type: video/mp4 etc"
        },
        "origin": {
          "type": "string"
        }
      }
    },
    "v2GetResumableUploadSessionResponse": {
      "type": "object",
      "properties": {
        "sessionUri": {
          "type": "string"
        }
      }
    },
    "v2GetVideoRequest": {
      "type": "object",
      "properties": {
        "videoId": {
          "type": "string",
          "title": "The ID of the requested video"
        }
      },
      "title": "GetVideoRequest is a request for the video metadata associated to a video ID"
    },
    "v2GetVideoResponse": {
      "type": "object",
      "properties": {
        "video": {
          "$ref": "#/definitions/v2Video",
          "title": "The requested video"
        }
      },
      "title": "GetVideoResponse is the requested video object"
    },
    "v2Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The internal ID of the image"
        },
        "url": {
          "type": "string",
          "title": "The image public url"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav2Tag"
          },
          "title": "The tags for the image"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the image was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the image was updated"
        }
      },
      "description": "A model representing an image."
    },
    "v2Video": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The internal ID of the video"
        },
        "url": {
          "type": "string",
          "title": "The video url"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/mediav2Tag"
          },
          "title": "The tags for the video"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "When the video was created"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "title": "When the video was updated"
        }
      },
      "description": "A model representing a Video."
    }
  }
}
