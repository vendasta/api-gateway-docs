{
  "swagger": "2.0",
  "info": {
    "title": "ms_office/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Partner"
    },
    {
      "name": "MsOffice"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/msoffice.v1.MsOffice/AddDomainToCustomer": {
      "post": {
        "summary": "Create DomainVerification Model for Customer",
        "operationId": "MsOffice_AddDomainToCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddDomainToCustomerRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ConfirmResellerRelationship": {
      "post": {
        "summary": "Confirm the Customer is now under us as a Reseller",
        "operationId": "MsOffice_ConfirmResellerRelationship",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConfirmResellerRelationshipRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/CreateUser": {
      "post": {
        "summary": "Create Microsoft User",
        "operationId": "MsOffice_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/DeleteUser": {
      "post": {
        "summary": "Delete Microsoft User",
        "operationId": "MsOffice_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteUserRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/DismissFailedStatus": {
      "post": {
        "summary": "Dismiss Failed Status on a UserMap",
        "operationId": "MsOffice_DismissFailedStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DismissFailedStatusRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/GetCustomer": {
      "post": {
        "summary": "Get Customer Model",
        "operationId": "MsOffice_GetCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCustomerRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/GetCustomerByBusinessID": {
      "post": {
        "summary": "Get Customer Model using corresponding BusinessID",
        "operationId": "MsOffice_GetCustomerByBusinessID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomerByBusinessIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCustomerByBusinessIDRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/GetDomainVerification": {
      "post": {
        "summary": "Get DomainVerification Model",
        "operationId": "MsOffice_GetDomainVerification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDomainVerificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDomainVerificationRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/GetLicenses": {
      "post": {
        "summary": "Get Licenses assigned to a user",
        "operationId": "MsOffice_GetLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLicensesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLicensesRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/GetUserMapping": {
      "post": {
        "summary": "Get Microsoft User and its mapped VBC User",
        "operationId": "MsOffice_GetUserMapping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserMappingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUserMappingRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ListCustomers": {
      "post": {
        "summary": "List Customers from Microsoft",
        "operationId": "MsOffice_ListCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCustomersRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ListDomainVerification": {
      "post": {
        "summary": "List DomainVerification Models for Customer",
        "operationId": "MsOffice_ListDomainVerification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDomainVerificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListDomainVerificationRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ListLicenses": {
      "post": {
        "summary": "List Licenses on Customer",
        "operationId": "MsOffice_ListLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLicensesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListLicensesRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ListSupportedSKUs": {
      "post": {
        "summary": "List SKUs for Microsoft Products",
        "operationId": "MsOffice_ListSupportedSKUs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSupportedSKUsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSupportedSKUsRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ListUserMappings": {
      "post": {
        "summary": "List Microsoft Users and their mapped VBC Users",
        "operationId": "MsOffice_ListUserMappings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserMappingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUserMappingsRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/ResetPassword": {
      "post": {
        "summary": "Sends an email to reset a Microsoft User password",
        "operationId": "MsOffice_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/UpdateCustomer": {
      "post": {
        "summary": "Update Customer Model",
        "operationId": "MsOffice_UpdateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCustomerRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/UpdateLicenses": {
      "post": {
        "summary": "Update Licenses to a user",
        "operationId": "MsOffice_UpdateLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateLicensesRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/UpdateUser": {
      "post": {
        "summary": "Update Microsoft User",
        "operationId": "MsOffice_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.MsOffice/VerifyDomain": {
      "post": {
        "summary": "Attempt to verify a domain",
        "operationId": "MsOffice_VerifyDomain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifyDomainRequest"
            }
          }
        ],
        "tags": [
          "MsOffice"
        ]
      }
    },
    "/msoffice.v1.Partner/UpdateSSO": {
      "post": {
        "summary": "Update the SSO setting for a verified Microsoft domain",
        "operationId": "Partner_UpdateSSO",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSSORequest"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      }
    }
  },
  "definitions": {
    "ListCustomersResponseAttributes": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string"
        }
      }
    },
    "ListCustomersResponseCompanyProfile": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "ListCustomersResponseItems": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyProfile": {
          "$ref": "#/definitions/ListCustomersResponseCompanyProfile"
        },
        "relationshipToPartner": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/ListCustomersResponseAttributes"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "msofficev1Status": {
      "type": "string",
      "enum": [
        "STATUS_CREATE_PENDING",
        "STATUS_COMPLETE",
        "STATUS_CREATE_FAILED",
        "STATUS_UPDATE_PENDING",
        "STATUS_UPDATE_FAILED"
      ],
      "default": "STATUS_CREATE_PENDING",
      "description": "- STATUS_CREATE_PENDING: The UserMap has just been created and further create-user work is being done\n - STATUS_COMPLETE: All work has been done for this UserMap\n - STATUS_CREATE_FAILED: The create-user work failed\n - STATUS_UPDATE_PENDING: The User/UserMap is in progress of being updated\n - STATUS_UPDATE_FAILED: The User/UserMap failed to be updated",
      "title": "Status is the create/update status of a UserMap"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1AddDomainToCustomerRequest": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "Domain to assign"
        },
        "tenantId": {
          "type": "string",
          "title": "TenantID for corresponding Customer"
        }
      },
      "title": "Places the provided domain onto the Customer"
    },
    "v1ConfirmResellerRelationshipRequest": {
      "type": "object",
      "properties": {
        "onMicrosoftDomain": {
          "type": "string",
          "title": "Default provided domain on the Customer (example: NameHere.onmicrosoft.com)"
        },
        "partnerId": {
          "type": "string",
          "title": "PartnerID"
        },
        "businessId": {
          "type": "string",
          "title": "BusinessID"
        }
      },
      "title": "Confirm a reseller relationship has been established between us and the Customer"
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of the Customer this User will be created on"
        },
        "serviceProviderPrincipalName": {
          "type": "string",
          "title": "Email of the Microsoft User"
        },
        "serviceProviderFirstName": {
          "type": "string",
          "title": "FirstName of the Microsoft User"
        },
        "serviceProviderLastName": {
          "type": "string",
          "title": "LastName of the Microsoft User"
        },
        "serviceProviderDisplayName": {
          "type": "string",
          "title": "DisplayName of the Microsoft User"
        },
        "alternateEmail": {
          "type": "string",
          "title": "AlternateEmail of the Microsoft User"
        },
        "identityProviderId": {
          "type": "string",
          "title": "ID of the VBC User"
        },
        "productSkuIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ID's of licenses to add to the user on creation"
        }
      },
      "title": "Creates a Microsoft User and Maps it to a VBC User"
    },
    "v1Customer": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID"
        },
        "onMicrosoftDomain": {
          "type": "string",
          "title": "Microsoft Provided Domain, ex mydomain.onmicrosoft.com"
        },
        "partnerId": {
          "type": "string",
          "title": "PartnerID"
        },
        "businessId": {
          "type": "string",
          "title": "BusinessID"
        },
        "requiresIngramMicroResellerAgreement": {
          "type": "boolean",
          "title": "RequiresIngramMicroResellerAgreement indicates whether the Customer still needs to agree to Ingram Micro's reseller agreement"
        }
      },
      "title": "Defines a Customer model"
    },
    "v1DeleteUserRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of the Customer this User will be deleted on"
        },
        "userMapId": {
          "type": "string",
          "title": "ID of particular UserMap"
        }
      },
      "title": "Deletes a Microsoft User"
    },
    "v1DismissFailedStatusRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "userMapId": {
          "type": "string",
          "title": "ID of the UserMap model"
        }
      },
      "title": "Deletes or clears the UserMap with a Failed status"
    },
    "v1DomainVerification": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "domain": {
          "type": "string",
          "title": "Domain"
        },
        "txtToken": {
          "type": "string",
          "title": "TXT record used to verify domain ownership"
        },
        "mxToken": {
          "type": "string",
          "title": "MX record used to verify domain ownership"
        },
        "isVerified": {
          "type": "boolean",
          "title": "Indicates if the domain has been verified"
        },
        "isFederated": {
          "type": "boolean",
          "title": "Indicates if the domain has been federated"
        }
      },
      "title": "Defines a DomainVerification model"
    },
    "v1GetCustomerByBusinessIDRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "BusinessID to search for"
        }
      },
      "title": "Gets Customer model for specified BusinessID"
    },
    "v1GetCustomerByBusinessIDResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "Customer model"
        }
      },
      "title": "The response for getting a Customer via businessID"
    },
    "v1GetCustomerRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID to search for"
        }
      },
      "title": "Gets Customer model for specified TenantID"
    },
    "v1GetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer",
          "title": "Customer model"
        }
      },
      "title": "The response for getting a Customer"
    },
    "v1GetDomainVerificationRequest": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "Domain to search for"
        },
        "tenantId": {
          "type": "string",
          "title": "TenantID for corresponding Customer"
        }
      },
      "title": "Gets DomainVerification model for specified domain"
    },
    "v1GetDomainVerificationResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/v1DomainVerification",
          "title": "DomainVerification model"
        }
      },
      "title": "The response for getting a DomainVerification"
    },
    "v1GetLicensesRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "userId": {
          "type": "string",
          "title": "ID of the particular user"
        }
      },
      "title": "Gets the list of licenses assigned to a user"
    },
    "v1GetLicensesResponse": {
      "type": "object",
      "properties": {
        "productSkus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProductSku"
          }
        }
      }
    },
    "v1GetUserMappingRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "userMapId": {
          "type": "string",
          "title": "ID of particular UserMap"
        }
      },
      "title": "Get a Microsoft/VBC User on Customer"
    },
    "v1GetUserMappingResponse": {
      "type": "object",
      "properties": {
        "userMap": {
          "$ref": "#/definitions/v1UserMap",
          "title": "The UserMap"
        }
      }
    },
    "v1License": {
      "type": "object",
      "properties": {
        "availableUnits": {
          "type": "string",
          "format": "int64",
          "title": "Number of available licenses"
        },
        "consumedUnits": {
          "type": "string",
          "format": "int64",
          "title": "Number of used licenses"
        },
        "productSku": {
          "$ref": "#/definitions/v1ProductSku",
          "title": "Corresponding product of licenses"
        }
      },
      "title": "License"
    },
    "v1ListCustomersRequest": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string",
          "title": "The country we are listing customers from (US, CA)\nrequired"
        },
        "domain": {
          "type": "string",
          "title": "A domain to search for when listing"
        },
        "companyName": {
          "type": "string",
          "title": "Company name to search for when listing"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagingOptions",
          "title": "Paging info"
        }
      }
    },
    "v1ListCustomersResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListCustomersResponseItems"
          }
        },
        "attributes": {
          "$ref": "#/definitions/ListCustomersResponseAttributes"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagingOptions"
        }
      },
      "title": "A response that wraps Microsoft Partner API\nhttps://docs.microsoft.com/en-us/partner-center/develop/get-a-list-of-customers#response-example"
    },
    "v1ListDomainVerificationRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID to search for"
        }
      },
      "title": "Gets all DomainVerification models for Customer"
    },
    "v1ListDomainVerificationResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DomainVerification"
          },
          "title": "DomainVerification model"
        }
      },
      "title": "The response for listing DomainVerification models on Customer"
    },
    "v1ListLicensesRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        }
      },
      "title": "List Licenses on a Customer"
    },
    "v1ListLicensesResponse": {
      "type": "object",
      "properties": {
        "licenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1License"
          },
          "title": "List of License"
        }
      },
      "title": "Response for Listing Licenses"
    },
    "v1ListSupportedSKUsRequest": {
      "type": "object",
      "title": "Gets all the supported SKUs"
    },
    "v1ListSupportedSKUsResponse": {
      "type": "object",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SKUs"
        }
      },
      "title": "Response for listing supported SKUs"
    },
    "v1ListUserMappingsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        }
      },
      "title": "Lists all Microsoft/VBC Users on Customer"
    },
    "v1ListUserMappingsResponse": {
      "type": "object",
      "properties": {
        "usermaps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserMap"
          },
          "title": "UserMapping between Microsoft and VBC users"
        }
      }
    },
    "v1MicrosoftUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the User"
        },
        "userPrincipalName": {
          "type": "string",
          "title": "Email"
        },
        "firstName": {
          "type": "string",
          "title": "FirstName"
        },
        "lastName": {
          "type": "string",
          "title": "LastName"
        },
        "displayName": {
          "type": "string",
          "title": "DisplayName"
        },
        "alternateEmail": {
          "type": "string",
          "title": "Email to send password reset information to"
        }
      },
      "title": "Model of a Microsoft User"
    },
    "v1PagingOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "number of items to returned"
        },
        "continuationToken": {
          "type": "string",
          "title": "Microsoft-specific cursor for retrieving next page"
        }
      }
    },
    "v1ProductSku": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        }
      },
      "title": "ProductSku"
    },
    "v1ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "userMapId": {
          "type": "string",
          "title": "ID of the UserMap model"
        }
      },
      "title": "Reset a Microsoft User's password"
    },
    "v1UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID to update"
        },
        "requiresIngramMicroResellerAgreement": {
          "type": "boolean",
          "title": "RequiresIngramMicroResellerAgreement indicates whether the Customer still needs to agree to Ingram Micro's reseller agreement"
        }
      },
      "title": "The request for updating the Customer"
    },
    "v1UpdateLicensesRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "userId": {
          "type": "string",
          "title": "ID of the particular user"
        },
        "productSkuIdsToAssign": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ID's of licenses to add to the user"
        },
        "productSkuIdsToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ID's of licenses to remove from the user"
        }
      },
      "title": "Change the licenses assigned to a user"
    },
    "v1UpdateSSORequest": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "Domain to update"
        },
        "tenantId": {
          "type": "string",
          "title": "TenantID for corresponding Customer"
        },
        "enableSso": {
          "type": "boolean",
          "title": "Indicates whether to set the SSO to enabled or disabled"
        }
      },
      "title": "Updates the SSO settings for a verified Microsoft domain"
    },
    "v1UpdateUserRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "TenantID of corresponding Customer"
        },
        "userMapId": {
          "type": "string",
          "title": "ID of the UserMap model"
        },
        "identityProviderId": {
          "type": "string",
          "title": "ID of the VBC User"
        },
        "serviceProviderPrincipalName": {
          "type": "string",
          "title": "Email to be assigned"
        },
        "serviceProviderFirstName": {
          "type": "string",
          "title": "FirstName to be assigned"
        },
        "serviceProviderLastName": {
          "type": "string",
          "title": "LastName to be assigned"
        },
        "serviceProviderDisplayName": {
          "type": "string",
          "title": "DisplayName to be assigned"
        },
        "alternateEmail": {
          "type": "string",
          "title": "AlternateEmail to be assigned"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Allows filtering what fields are accepted on the request"
        }
      },
      "title": "Update a User/UserMap"
    },
    "v1UserMap": {
      "type": "object",
      "properties": {
        "microsoftUser": {
          "$ref": "#/definitions/v1MicrosoftUser",
          "title": "MicrosoftUser"
        },
        "vbcUser": {
          "$ref": "#/definitions/v1VBCUser",
          "title": "VBCUser"
        },
        "userMapId": {
          "type": "string",
          "title": "ID of the UserMap model"
        },
        "status": {
          "$ref": "#/definitions/msofficev1Status",
          "title": "Status of create/update user work"
        },
        "statusFailedReason": {
          "type": "string",
          "title": "StatusFailedReason is a message to explain a failure"
        }
      },
      "title": "A Microsoft User and its corresponding VBC User"
    },
    "v1VBCUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the User"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "firstName": {
          "type": "string",
          "title": "FirstName"
        },
        "lastName": {
          "type": "string",
          "title": "LastName"
        }
      },
      "title": "Model of a VBC User"
    },
    "v1VerifyDomainRequest": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "Domain to verify"
        },
        "tenantId": {
          "type": "string",
          "title": "TenantID for corresponding Customer"
        }
      },
      "title": "Attempts to verify ownership of domain"
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
