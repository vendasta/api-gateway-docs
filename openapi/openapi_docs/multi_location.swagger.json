{
  "swagger": "2.0",
  "info": {
    "title": "multi_location/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MultiLocation"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/multilocation.v1.MultiLocation/GetBrand": {
      "post": {
        "summary": "GetBrand returns the brand data, not including it's members",
        "operationId": "MultiLocation_GetBrand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBrandResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBrandRequest"
            }
          }
        ],
        "tags": [
          "MultiLocation"
        ]
      }
    },
    "/multilocation.v1.MultiLocation/GetLocationIds": {
      "post": {
        "summary": "GetLocationIds returns the list of distinct location ids in the brand",
        "operationId": "MultiLocation_GetLocationIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLocationsIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLocationsIdsRequest"
            }
          }
        ],
        "tags": [
          "MultiLocation"
        ]
      }
    },
    "/multilocation.v1.MultiLocation/ListBrandsForBusiness": {
      "post": {
        "summary": "Lists brand information for a business",
        "operationId": "MultiLocation_ListBrandsForBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBrandsForBusinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListBrandsForBusinessRequest"
            }
          }
        ],
        "tags": [
          "MultiLocation"
        ]
      }
    },
    "/multilocation.v1.MultiLocation/ListBrandsMetadata": {
      "post": {
        "summary": "ListBrands returns a list of all the brands on a pid along with the number of associated locations",
        "operationId": "MultiLocation_ListBrandsMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBrandsMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListBrandsMetadataRequest"
            }
          }
        ],
        "tags": [
          "MultiLocation"
        ]
      }
    },
    "/multilocation.v1.MultiLocation/ListGroups": {
      "post": {
        "summary": "ListGroups all the groups and members of each group",
        "operationId": "MultiLocation_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListGroupsRequest"
            }
          }
        ],
        "tags": [
          "MultiLocation"
        ]
      }
    },
    "/multilocation.v1.MultiLocation/SyncBrand": {
      "post": {
        "summary": "SyncBrand is called when a brand is created/updated/deleted",
        "operationId": "MultiLocation_SyncBrand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SyncBrandRequest"
            }
          }
        ],
        "tags": [
          "MultiLocation"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Brand": {
      "type": "object",
      "properties": {
        "brandPath": {
          "type": "string",
          "title": "brand_path is the brand's node path"
        },
        "marketId": {
          "type": "string",
          "title": "market_id is the market that the brand belongs to"
        },
        "group": {
          "$ref": "#/definitions/v1Group",
          "title": "The group for the brand"
        },
        "tabStatuses": {
          "$ref": "#/definitions/v1TabStatuses",
          "title": "the brand tab enablement statuses"
        },
        "featureStatuses": {
          "$ref": "#/definitions/v1FeatureStatuses",
          "title": "the brand feature enablement statuses"
        },
        "activatedVisibilitySources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "activated_visibility_sources are sources enabled for listings/reviews"
        }
      }
    },
    "v1BrandMetadata": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "The brand's group id (node path)"
        },
        "name": {
          "type": "string",
          "title": "The name of the brand"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp the brand was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The timestamp the brand was last updated"
        },
        "locations": {
          "type": "string",
          "format": "int64",
          "title": "The number of account groups associated with the brand"
        }
      }
    },
    "v1FeatureStatuses": {
      "type": "object",
      "properties": {
        "requestReviewPageEnabled": {
          "type": "boolean",
          "title": "request_review_page_enabled denotes whether or not the feature is enabled"
        },
        "requestReviewCardEnabled": {
          "type": "boolean",
          "title": "request_review_card_enabled denotes whether or not the feature is enabled"
        },
        "customerVoiceExecutiveReportEnabled": {
          "type": "boolean",
          "title": "customer_voice_executive_report_enabled denotes whether or not the feature is enabled"
        }
      }
    },
    "v1ForeignKeys": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner that owns the group"
        },
        "marketId": {
          "type": "string",
          "title": "The id of the market that owns the group"
        }
      }
    },
    "v1GetBrandRequest": {
      "type": "object",
      "properties": {
        "brandPath": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "v1GetBrandResponse": {
      "type": "object",
      "properties": {
        "brand": {
          "$ref": "#/definitions/v1Brand",
          "title": "The brand matching the given brand path"
        }
      }
    },
    "v1GetLocationsIdsRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "ex. G-123|G-444"
        }
      }
    },
    "v1GetLocationsIdsResponse": {
      "type": "object",
      "properties": {
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "Group Identifier"
        },
        "path": {
          "$ref": "#/definitions/v1Path",
          "title": "The path to this specific group"
        },
        "name": {
          "type": "string",
          "title": "The name of the group"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The members of the group"
        }
      }
    },
    "v1ListBrandsForBusinessRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The unique identifier of the partner"
        },
        "businessId": {
          "type": "string",
          "title": "The unique identifier of the business"
        }
      }
    },
    "v1ListBrandsForBusinessResponse": {
      "type": "object",
      "properties": {
        "brands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BrandMetadata"
          },
          "title": "List of brand information"
        }
      }
    },
    "v1ListBrandsMetadataRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1ListBrandsMetadataResponse": {
      "type": "object",
      "properties": {
        "brands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BrandMetadata"
          }
        }
      }
    },
    "v1ListGroupsRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "The base group id that will be returned and all their descendants"
        },
        "foreignKeys": {
          "$ref": "#/definitions/v1ForeignKeys",
          "title": "Foreign keys which relate to this group"
        }
      }
    },
    "v1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Group"
          },
          "title": "A list of groups"
        }
      }
    },
    "v1Path": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of nodes in the path"
        }
      }
    },
    "v1SyncBrandRequest": {
      "type": "object",
      "properties": {
        "brandPath": {
          "type": "string"
        }
      },
      "title": "Request message for MultiLocation.SyncBrand"
    },
    "v1TabStatuses": {
      "type": "object",
      "properties": {
        "reviewsTabEnabled": {
          "type": "boolean",
          "title": "reviews_tab_enabled denotes whether or not the tab is enabled"
        },
        "listingsTabEnabled": {
          "type": "boolean",
          "title": "listings_tab_enabled denotes whether or not the tab is enabled"
        },
        "socialTabEnabled": {
          "type": "boolean",
          "title": "social_tab_enabled denotes whether or not the tab is enabled"
        },
        "insightsTabEnabled": {
          "type": "boolean",
          "title": "insights_tab_enabled denotes whether or not the tab is enabled"
        },
        "mapTabEnabled": {
          "type": "boolean",
          "title": "map_tab_enabled denotes whether or not the tab is enabled"
        },
        "advertisingTabEnabled": {
          "type": "boolean",
          "title": "advertising_tab_enabled denotes whether or not the tab is enabled"
        },
        "reportTabEnabled": {
          "type": "boolean",
          "title": "report_tab_enabled denotes whether or not the tab is enabled"
        },
        "dataExportTabEnabled": {
          "type": "boolean",
          "title": "data_export_tab_enabled denotes whether or not the tab is enabled"
        },
        "websiteTabEnabled": {
          "type": "boolean",
          "title": "website_tab_enabled denotes whether or not the tab is enabled"
        },
        "googleQAndATabEnabled": {
          "type": "boolean",
          "title": "google_q_and_a_tab_enabled denotes whether or not the tab is enabled"
        },
        "keywordTrackingTabEnabled": {
          "type": "boolean",
          "title": "keyword_tracking_tab_enabled denotes whether or not the tab is enabled"
        }
      }
    }
  }
}
