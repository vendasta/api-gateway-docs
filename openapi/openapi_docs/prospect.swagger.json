{
  "swagger": "2.0",
  "info": {
    "title": "prospect/v1/account_analytics.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Partner"
    },
    {
      "name": "AccountAnalytics"
    },
    {
      "name": "Affiliates"
    },
    {
      "name": "AnalyticsPresetViews"
    },
    {
      "name": "MarketingAutomation"
    },
    {
      "name": "MarketingForms"
    },
    {
      "name": "OnboardingStrategies"
    },
    {
      "name": "Prospect"
    },
    {
      "name": "Campaign"
    },
    {
      "name": "Leads"
    },
    {
      "name": "DisposableEmail"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/prospect.v1.AccountAnalytics/List": {
      "post": {
        "summary": "List returns a filtered, sorted list of analytics metrics for the SMB accounts associated with a Partner.",
        "operationId": "AccountAnalytics_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountAnalyticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAccountAnalyticsRequest"
            }
          }
        ],
        "tags": [
          "AccountAnalytics"
        ]
      }
    },
    "/prospect.v1.Affiliates/CreateAffiliate": {
      "post": {
        "operationId": "Affiliates_CreateAffiliate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAffiliateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAffiliateRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/CreateTermsOfService": {
      "post": {
        "operationId": "Affiliates_CreateTermsOfService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTermsOfServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTermsOfServiceRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/GetAffiliate": {
      "post": {
        "operationId": "Affiliates_GetAffiliate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAffiliateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAffiliateRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/GetAffiliatePaymentAmounts": {
      "post": {
        "operationId": "Affiliates_GetAffiliatePaymentAmounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAffiliatePaymentAmountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAffiliatePaymentAmountsRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/GetAffiliatePaymentReport": {
      "post": {
        "operationId": "Affiliates_GetAffiliatePaymentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAffiliatePaymentReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAffiliatePaymentReportRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/GetTermsOfService": {
      "post": {
        "operationId": "Affiliates_GetTermsOfService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTermsOfServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTermsOfServiceRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/ListAffiliates": {
      "post": {
        "operationId": "Affiliates_ListAffiliates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAffiliatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAffiliatesRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/PutAffiliatePaymentAmounts": {
      "post": {
        "operationId": "Affiliates_PutAffiliatePaymentAmounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PutAffiliatePaymentAmountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PutAffiliatePaymentAmountsRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.Affiliates/UpdateAffiliateStatus": {
      "post": {
        "operationId": "Affiliates_UpdateAffiliateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAffiliateStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAffiliateStatusRequest"
            }
          }
        ],
        "tags": [
          "Affiliates"
        ]
      }
    },
    "/prospect.v1.AnalyticsPresetViews/List": {
      "post": {
        "summary": "List returns list of presets views.",
        "operationId": "AnalyticsPresetViews_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAnalyticsPresetViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAnalyticsPresetViewRequest"
            }
          }
        ],
        "tags": [
          "AnalyticsPresetViews"
        ]
      }
    },
    "/prospect.v1.AnalyticsPresetViews/Put": {
      "post": {
        "operationId": "AnalyticsPresetViews_Put",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PutAnalyticsPresetViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AnalyticsPresetView"
            }
          }
        ],
        "tags": [
          "AnalyticsPresetViews"
        ]
      }
    },
    "/prospect.v1.Campaign/InitiateCampaignHistoryExport": {
      "post": {
        "summary": "InitiateHistoryExport can be used to request the creation of a export file\nThe contents and datatype of the file will be will be based on the parameters of the request and the current user's permissions\nSince creating files can take several minutes consumers should direct users to look in their notifications box",
        "operationId": "Campaign_InitiateCampaignHistoryExport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitiateCampaignHistoryExportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InitiateCampaignHistoryExportRequest"
            }
          }
        ],
        "tags": [
          "Campaign"
        ]
      }
    },
    "/prospect.v1.DisposableEmail/CheckDisposableEmail": {
      "post": {
        "summary": "CheckDisposableEmail checks if the domain of an email is disposable",
        "operationId": "DisposableEmail_CheckDisposableEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckDisposableEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckDisposableEmailRequest"
            }
          }
        ],
        "tags": [
          "DisposableEmail"
        ]
      }
    },
    "/prospect.v1.Leads/AssociateLeadAndAccountGroup": {
      "post": {
        "summary": "This rpc will associate the given accountGroupID and leadID",
        "operationId": "Leads_AssociateLeadAndAccountGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AssociateLeadAndAccountGroupRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ConnectLeadsForPage": {
      "post": {
        "summary": "ConnectLeadsForPage connects Leads for a partner and subscribes to FB Lead Webhooks",
        "operationId": "Leads_ConnectLeadsForPage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectLeadsForPageRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/CreateAccountGroupFromLead": {
      "post": {
        "summary": "This rpc will create an account group and associate it to the lead that the account was created from",
        "operationId": "Leads_CreateAccountGroupFromLead",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountGroupFromLeadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountGroupFromLeadRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/DisconnectLeadsForPage": {
      "post": {
        "summary": "DisconnectLeadsForPage will disconnect Leads for a partner and unsubscribe from FB Lead Webhooks",
        "operationId": "Leads_DisconnectLeadsForPage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DisconnectLeadsForPageRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/GetLead": {
      "post": {
        "summary": "given an ID will return a Lead model",
        "operationId": "Leads_GetLead",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLeadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLeadRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/GetLeadQualificationSettings": {
      "post": {
        "summary": "returns the specific partner's (optionally select a specific market) lead qualification settings on what to do for incoming leads that pass dupe detection",
        "operationId": "Leads_GetLeadQualificationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLeadQualificationSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLeadQualificationSettingsRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ListAccountGroupsAssociatedToLead": {
      "post": {
        "summary": "This rpc will return a list of accountgroups associated to a lead",
        "operationId": "Leads_ListAccountGroupsAssociatedToLead",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountGroupsAssociatedToLeadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAccountGroupsAssociatedToLeadRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ListLeadAdsFormsConnectionSettings": {
      "post": {
        "summary": "List connection settings for lead-ads forms.",
        "operationId": "Leads_ListLeadAdsFormsConnectionSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLeadAdsFormConnectionSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListLeadAdsFormConnectionSettingsRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ListLeadsAssociatedToAccountGroup": {
      "post": {
        "summary": "This rpc will return a list of leads associated to an accountgroup",
        "operationId": "Leads_ListLeadsAssociatedToAccountGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLeadsAssociatedToAccountGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListLeadsAssociatedToAccountGroupRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ListLeadsForPartner": {
      "post": {
        "summary": "Returns all the leads a partner has generated",
        "operationId": "Leads_ListLeadsForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLeadsForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListLeadsForPartnerRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ListPartnerLeadAdsAutomations": {
      "post": {
        "summary": "List all the lead ads automation for a partner",
        "operationId": "Leads_ListPartnerLeadAdsAutomations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPartnerLeadAdAutomationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPartnerLeadAdAutomationsRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ListPartnersConnectedToPage": {
      "post": {
        "summary": "Lists all partner(s) connected to a Page",
        "operationId": "Leads_ListPartnersConnectedToPage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPartnersConnectedToPageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPartnersConnectedToPageRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/PartnerFacebookLeadAdsConnectionStatus": {
      "post": {
        "summary": "Check if a partner has connected their lead-ads account to our system.",
        "operationId": "Leads_PartnerFacebookLeadAdsConnectionStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PartnerFacebookLeadAdsConnectionStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Check if a partner has connected their lead-ads account to our system.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PartnerFacebookLeadAdsConnectionStatusRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/ReplaceLeadQualificationSettings": {
      "post": {
        "summary": "create/update the partner's (optionally select a specific market) current lead qualification settings that will apply across all lead generation streams (eg. Facebook/linkedin/whatever integration)",
        "operationId": "Leads_ReplaceLeadQualificationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplaceLeadQualificationSettingsRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/UpdateLeadAdsAutomationStatus": {
      "post": {
        "summary": "Turn on/off a lead ads automation",
        "operationId": "Leads_UpdateLeadAdsAutomationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateLeadAdsAutomationStatusRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.Leads/UpdateLeadAdsFormConnectionSettings": {
      "post": {
        "summary": "Change connection settings for lead-ads forms.",
        "operationId": "Leads_UpdateLeadAdsFormConnectionSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateLeadAdsFormConnectionSettingsRequest"
            }
          }
        ],
        "tags": [
          "Leads"
        ]
      }
    },
    "/prospect.v1.MarketingAutomation/CreateTracker": {
      "post": {
        "summary": "CreateTracker will create a new tracker for a partner.",
        "operationId": "MarketingAutomation_CreateTracker",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTrackerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTrackerRequest"
            }
          }
        ],
        "tags": [
          "MarketingAutomation"
        ]
      }
    },
    "/prospect.v1.MarketingAutomation/GetAutomation": {
      "post": {
        "summary": "GetAutomation gets data for Automation workflow",
        "operationId": "MarketingAutomation_GetAutomation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAutomationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAutomationRequest"
            }
          }
        ],
        "tags": [
          "MarketingAutomation"
        ]
      }
    },
    "/prospect.v1.MarketingAutomation/UpdateAutomation": {
      "post": {
        "summary": "UpdateAutomation will update default workflow \"Lead Attribution\"",
        "operationId": "MarketingAutomation_UpdateAutomation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAutomationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAutomationRequest"
            }
          }
        ],
        "tags": [
          "MarketingAutomation"
        ]
      }
    },
    "/prospect.v1.MarketingForms/CreatePartnerAccount": {
      "post": {
        "summary": "CreatePartnerAccount creates an account group for a prospect",
        "operationId": "MarketingForms_CreatePartnerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePartnerAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePartnerAccountRequest"
            }
          }
        ],
        "tags": [
          "MarketingForms"
        ]
      }
    },
    "/prospect.v1.MarketingForms/HandleMarketingForm": {
      "post": {
        "summary": "HandleMarketingForm creates an account group for a prospect",
        "operationId": "MarketingForms_HandleMarketingForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1HandleMarketingFormRequest"
            }
          }
        ],
        "tags": [
          "MarketingForms"
        ]
      }
    },
    "/prospect.v1.MarketingForms/ReIgniteOldAccounts": {
      "post": {
        "summary": "ReIgniteOldAccounts applies tags and cohort size and triggers auto assignment",
        "operationId": "MarketingForms_ReIgniteOldAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReIgniteOldAccountsRequest"
            }
          }
        ],
        "tags": [
          "MarketingForms"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/AddPriorityToProspect": {
      "post": {
        "operationId": "OnboardingStrategies_AddPriorityToProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForProspectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined priorities. Use SetPriorityRequest instead.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddPriorityToProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/DeleteGoalsFromPartner": {
      "post": {
        "operationId": "OnboardingStrategies_DeleteGoalsFromPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGoalsForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined constants for goals.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteGoalsFromPartnerRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/DeletePrioritiesFromPartner": {
      "post": {
        "operationId": "OnboardingStrategies_DeletePrioritiesFromPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeletePrioritiesFromPartnerRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/GetEarlyWinForProspect": {
      "post": {
        "operationId": "OnboardingStrategies_GetEarlyWinForProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEarlyWinForProspectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetEarlyWinForProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/GetGoalForProspect": {
      "post": {
        "operationId": "OnboardingStrategies_GetGoalForProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoalForProspectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoalForProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/GetPriority": {
      "post": {
        "operationId": "OnboardingStrategies_GetPriority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPriorityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetPriorityRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/ListGoalsForPartner": {
      "post": {
        "operationId": "OnboardingStrategies_ListGoalsForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGoalsForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined constants for goals.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListGoalsForPartnerRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/ListPrioritiesForPartner": {
      "post": {
        "operationId": "OnboardingStrategies_ListPrioritiesForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForPartnerRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/ListPrioritiesForProspect": {
      "post": {
        "operationId": "OnboardingStrategies_ListPrioritiesForProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForProspectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined priorities. Use GetPriorityRequest instead.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/RemovePriorityFromProspect": {
      "post": {
        "operationId": "OnboardingStrategies_RemovePriorityFromProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForProspectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined priorities. Use SetPriorityRequest instead.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemovePriorityFromProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/ReplaceEarlyWinForProspect": {
      "post": {
        "operationId": "OnboardingStrategies_ReplaceEarlyWinForProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplaceEarlyWinForProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/ReplaceGoalForProspect": {
      "post": {
        "operationId": "OnboardingStrategies_ReplaceGoalForProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplaceGoalForProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/ReplacePrioritiesForProspect": {
      "post": {
        "operationId": "OnboardingStrategies_ReplacePrioritiesForProspect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined priorities. Use SetPriorityRequest instead.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplacePrioritiesForProspectRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/SetPriority": {
      "post": {
        "operationId": "OnboardingStrategies_SetPriority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetPriorityRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/UpsertGoalsForPartner": {
      "post": {
        "operationId": "OnboardingStrategies_UpsertGoalsForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGoalsForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Deprecated: We no longer use partner-defined constants for goals.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertGoalsForPartnerRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.OnboardingStrategies/UpsertPrioritiesForPartner": {
      "post": {
        "operationId": "OnboardingStrategies_UpsertPrioritiesForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPrioritiesForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertPrioritiesForPartnerRequest"
            }
          }
        ],
        "tags": [
          "OnboardingStrategies"
        ]
      }
    },
    "/prospect.v1.Partner/BackfillLeadAttributionForBusiness": {
      "post": {
        "summary": "BackfillLeadAttributionForBusiness backfills lead attribution in partner prospects",
        "operationId": "Partner_BackfillLeadAttributionForBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BackfillLeadAttributionForBusinessRequest"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      }
    },
    "/prospect.v1.Partner/FindDuplicatePartnerProspects": {
      "post": {
        "summary": "Find duplicate partner-prospects with the given information.",
        "operationId": "Partner_FindDuplicatePartnerProspects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindDuplicatePartnerProspectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FindDuplicatePartnerProspectsRequest"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      }
    },
    "/prospect.v1.Partner/ListPartnerProspects": {
      "post": {
        "summary": "ListPartnerProspects returns a filtered, sorted list of partner prospects.",
        "operationId": "Partner_ListPartnerProspects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPartnerProspectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPartnerProspectsRequest"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      }
    },
    "/prospect.v1.Prospect/CreateDuplicateCriteria": {
      "post": {
        "summary": "create a configuration by which to check if a new account created for a partner is to be considered a dupe",
        "operationId": "Prospect_CreateDuplicateCriteria",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDuplicateCriteriaRequest"
            }
          }
        ],
        "tags": [
          "Prospect"
        ]
      }
    },
    "/prospect.v1.Prospect/FindDuplicateAccounts": {
      "post": {
        "summary": "given an email and/or phone number, this endpoint will return a list of account ids that match either one of the provided fields",
        "operationId": "Prospect_FindDuplicateAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindDuplicateAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FindDuplicateAccountsRequest"
            }
          }
        ],
        "tags": [
          "Prospect"
        ]
      }
    },
    "/prospect.v1.Prospect/GetDuplicateCriteria": {
      "post": {
        "summary": "attempt to get a partner's current dupe criteria configuration",
        "operationId": "Prospect_GetDuplicateCriteria",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDuplicateCriteriaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDuplicateCriteriaRequest"
            }
          }
        ],
        "tags": [
          "Prospect"
        ]
      }
    },
    "/prospect.v1.Prospect/GetUTMAttributes": {
      "post": {
        "operationId": "Prospect_GetUTMAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUTMAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUTMAttributesRequest"
            }
          }
        ],
        "tags": [
          "Prospect"
        ]
      }
    },
    "/prospect.v1.Prospect/UpdateDuplicateCriteria": {
      "post": {
        "summary": "update the partner's current dupe check configuration with new criteria",
        "operationId": "Prospect_UpdateDuplicateCriteria",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateDuplicateCriteriaRequest"
            }
          }
        ],
        "tags": [
          "Prospect"
        ]
      }
    }
  },
  "definitions": {
    "InitiateCampaignHistoryExportRequestOrderBy": {
      "type": "string",
      "enum": [
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_INVALID",
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_ASC",
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_DESC"
      ],
      "default": "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_ORDER_BY_INVALID"
    },
    "InitiateCampaignHistoryExportRequestSortBy": {
      "type": "string",
      "enum": [
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_SORT_BY_INVALID",
        "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_SORT_BY_EVENT_DATE"
      ],
      "default": "INITIATE_CAMPAIGN_HISTORY_EXPORT_REQUEST_SORT_BY_INVALID"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "prospectv1Status": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "STATUS_UNREAD_ACTIVITY",
        "STATUS_ACCOUNT_CREATED",
        "STATUS_READY_TO_SELL",
        "STATUS_IN_PROGRESS",
        "STATUS_FOLLOW_UP_NEEDED",
        "STATUS_CLOSED_WON",
        "STATUS_CLOSED_LOST"
      ],
      "default": "STATUS_INVALID"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The business ID of the prospect"
        },
        "name": {
          "type": "string",
          "title": "The company name of the prospect"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The assigned salespeople of the account, first is the primary"
        },
        "attributes": {
          "$ref": "#/definitions/v1AccountAttributes"
        },
        "metrics": {
          "$ref": "#/definitions/v1AccountMetrics"
        }
      }
    },
    "v1AccountAttributeFilters": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/prospectv1Status"
          }
        },
        "state": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "archivedFilter": {
          "$ref": "#/definitions/v1ArchivedFilter"
        }
      }
    },
    "v1AccountAttributes": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/prospectv1Status"
        },
        "unreadActivity": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "lastSalesActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "facebookPageId": {
          "type": "string"
        },
        "googleMyBusinessPlaceId": {
          "type": "string"
        },
        "isArchived": {
          "type": "boolean"
        }
      },
      "title": "Attributes are unaffected by the date range for the request, and returns the most recent value"
    },
    "v1AccountFilters": {
      "type": "object",
      "properties": {
        "searchText": {
          "type": "string"
        },
        "attributeFilters": {
          "$ref": "#/definitions/v1AccountAttributeFilters"
        },
        "assignee": {
          "type": "string"
        },
        "latestSalesActivityFilter": {
          "$ref": "#/definitions/v1LatestSalesActivityOption"
        }
      }
    },
    "v1AccountMetrics": {
      "type": "object",
      "properties": {
        "lockHitCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times a locked page due to subscription type was visited"
        },
        "contactSalesCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the contact salesperson button was clicked in vbc"
        },
        "updateBusinessProfileCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times business profile was updated in vbc"
        },
        "viewExecReportCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the executive report was viewed in vbc"
        },
        "createSingleCustomerCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times a single customer was added in vbc"
        },
        "createBulkCustomerCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times a bulk upload of customers was done in vbc"
        },
        "viewStoreCount": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the store page was visited in vbc"
        },
        "interestInPackageOrProduct": {
          "type": "string",
          "format": "int64",
          "title": "Number of times the add product button was clicked in vbc"
        },
        "numberOfDaysUserWasActive": {
          "type": "string",
          "format": "int64",
          "title": "Number of unique days a user performed an event in vbc"
        }
      },
      "title": "AccountMetrics contains the Heimdall events being captured in business center"
    },
    "v1AccountsCreatedRange": {
      "type": "string",
      "enum": [
        "ACCOUNTS_CREATED_RANGE_UNKNOWN",
        "ACCOUNTS_CREATED_RANGE_1",
        "ACCOUNTS_CREATED_RANGE_1_2",
        "ACCOUNTS_CREATED_RANGE_3_49",
        "ACCOUNTS_CREATED_RANGE_50_99",
        "ACCOUNTS_CREATED_RANGE_100_249",
        "ACCOUNTS_CREATED_RANGE_250_499",
        "ACCOUNTS_CREATED_RANGE_500PLUS"
      ],
      "default": "ACCOUNTS_CREATED_RANGE_UNKNOWN"
    },
    "v1AddPriorityToProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the priority is associated with"
        },
        "priorityId": {
          "type": "string"
        }
      },
      "description": "Deprecated: We no longer use partner-defined priorities. Use SetPriorityRequest instead."
    },
    "v1Address": {
      "type": "object",
      "properties": {
        "addressLineOne": {
          "type": "string",
          "title": "Address line one"
        },
        "addressLineTwo": {
          "type": "string",
          "title": "Address line two"
        },
        "city": {
          "type": "string",
          "title": "City"
        },
        "state": {
          "type": "string",
          "title": "State"
        },
        "zip": {
          "type": "string",
          "title": "Zip"
        },
        "country": {
          "type": "string",
          "title": "Country"
        }
      },
      "title": "Address information used to create a partner account"
    },
    "v1Affiliate": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string",
          "title": "the partner ID of the Affiliate"
        },
        "name": {
          "type": "string",
          "title": "name of the person who will be the affiliate"
        },
        "email": {
          "type": "string",
          "title": "email for contact with the affiliate"
        },
        "paypalEmail": {
          "type": "string",
          "title": "paypal email used to pay the affiliate"
        },
        "jobTitle": {
          "type": "string",
          "title": "jobtitle of the affiliate"
        },
        "websiteUrl": {
          "type": "string",
          "title": "website for the affiliate"
        },
        "howWillYouPromoteVendasta": {
          "type": "string",
          "title": "Quick description on how the affiliate will help to promote vendasta"
        },
        "status": {
          "$ref": "#/definitions/v1StatusType",
          "title": "Status of the affiliate request (pending, approved or rejected)"
        },
        "userHasSigningAuthority": {
          "type": "boolean",
          "title": "represents that the person applying to be a affiliate has the power to sign in behalf of the partner"
        },
        "acceptedTermsOfServiceVersion": {
          "type": "integer",
          "format": "int32",
          "title": "Deprecated: the terms of service will be automatically fetched from whatever the current terms of service is\nrepresents that they agreed with the term of service (the version is based on the date time of the apply)"
        },
        "acceptedTermsOfService": {
          "type": "boolean",
          "title": "represents that they agreed with the term of service. The Affiliate will be automatically associated with the most current version of the Terms of Service"
        }
      }
    },
    "v1AffiliatePaymentAmounts": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "freeMonthlyUsdCents": {
          "type": "integer",
          "format": "int32",
          "title": "Represents the payment amount that the affiliate will receive when a prospect sign with their affiliate id"
        },
        "freeYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "startupMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "startupYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "essentialsMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "essentialsYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "growthMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "growthYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "scaleMonthlyUsdCents": {
          "type": "integer",
          "format": "int32"
        },
        "scaleYearlyUsdCents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1AffiliatePaymentReportLineItem": {
      "type": "object",
      "properties": {
        "subscriptionTier": {
          "type": "string"
        },
        "subscriptionStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentAmount": {
          "$ref": "#/definitions/v1Money"
        },
        "firstPayByDate": {
          "type": "string",
          "format": "date-time"
        },
        "secondPayByDate": {
          "type": "string",
          "format": "date-time"
        },
        "subscriptionContractLength": {
          "type": "string"
        }
      }
    },
    "v1AnalyticsPresetView": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        },
        "viewName": {
          "type": "string"
        },
        "viewDescription": {
          "type": "string"
        },
        "attributeFiltersJson": {
          "type": "string"
        },
        "sortingJson": {
          "type": "string"
        }
      }
    },
    "v1ArchivedFilter": {
      "type": "string",
      "enum": [
        "ARCHIVED_FILTER_NOT_ARCHIVED",
        "ARCHIVED_FILTER_IS_ARCHIVED",
        "ARCHIVED_FILTER_ANY"
      ],
      "default": "ARCHIVED_FILTER_NOT_ARCHIVED"
    },
    "v1AssociateLeadAndAccountGroupRequest": {
      "type": "object",
      "properties": {
        "leadId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1AttributeFilters": {
      "type": "object",
      "properties": {
        "qualifications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple qualification are treated as \"OR\""
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple goals are treated as \"OR\""
        },
        "countryCode": {
          "type": "string"
        },
        "emailType": {
          "$ref": "#/definitions/v1EmailType"
        },
        "hasWebsite": {
          "$ref": "#/definitions/v1WebsiteFilter"
        },
        "isSelfSignup": {
          "type": "boolean"
        },
        "tagFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple tag filters are treated as \"OR\""
        },
        "isAmountOwing": {
          "$ref": "#/definitions/v1BooleanFilter"
        },
        "subscriptionTier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubscriptionTier"
          },
          "description": "Deprecated: Multiple subscription tier filters are treated as \"OR\". Use subscription_tier_id."
        },
        "subscriptionChanged": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SubscriptionChangeFilter"
          }
        },
        "conversionPoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "leadSources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ContractStatus"
          }
        },
        "isReengagingAccount": {
          "type": "boolean"
        },
        "anySnapshotsGenerated": {
          "type": "boolean"
        },
        "anyPaidProductsActivated": {
          "type": "boolean"
        },
        "anyAccountsCreated": {
          "type": "boolean"
        },
        "anyPaymentCard": {
          "type": "boolean"
        },
        "marketingClassifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "leadProgramDescriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emptyMarketingClassification": {
          "type": "boolean"
        },
        "subscriptionTierId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Multiple subscription tier id filters are treated as \"OR\"."
        },
        "numberOfEmployees": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Multiple choices like \"1-2\", \"3-49\" are treated like \"OR\"."
        },
        "leadTier": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "companySizeCohort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "utmInfo": {
          "$ref": "#/definitions/v1UtmFilters"
        },
        "adName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "segment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainVertical": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerServiceLevel": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inboundOutbound": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isMultiLocation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfDigitalSalespeople": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfSalespeople": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archivedFilter": {
          "$ref": "#/definitions/v1ArchivedFilter"
        },
        "billedClients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1BilledClientsRange"
          }
        },
        "accountsCreated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccountsCreatedRange"
          }
        },
        "paidProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaidProductsRange"
          }
        },
        "hasPid": {
          "type": "boolean",
          "title": "Deprecated: Replaced by has_pid_filter"
        },
        "hasPidFilter": {
          "$ref": "#/definitions/v1HasPidFilter"
        }
      }
    },
    "v1Attributes": {
      "type": "object",
      "properties": {
        "numberOfEmployees": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "emailType": {
          "$ref": "#/definitions/v1EmailType"
        },
        "qualification": {
          "type": "string"
        },
        "goal": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "lastVisit": {
          "type": "string",
          "format": "date-time"
        },
        "lastSalesActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentInfo": {
          "$ref": "#/definitions/v1PaymentInfo"
        },
        "subscriptionTier": {
          "$ref": "#/definitions/v1SubscriptionTier",
          "title": "Deprecated: Use subscription_tier_id"
        },
        "contractSignedDate": {
          "type": "string",
          "format": "date-time"
        },
        "previousSubscriptionTier": {
          "$ref": "#/definitions/v1SubscriptionTier",
          "title": "Deprecated: Use previous_subscription_tier_id"
        },
        "dunningAttempts": {
          "type": "string",
          "format": "int64"
        },
        "conversionPoint": {
          "type": "string"
        },
        "leadSource": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "contractStatus": {
          "$ref": "#/definitions/v1ContractStatus"
        },
        "hasPaymentCard": {
          "type": "boolean"
        },
        "marketingClassification": {
          "type": "string"
        },
        "leadProgramDescription": {
          "type": "string"
        },
        "subscriptionTierId": {
          "type": "string"
        },
        "previousSubscriptionTierId": {
          "type": "string"
        },
        "lastMonthRecognizedRevenue": {
          "$ref": "#/definitions/v1Money"
        },
        "isArchived": {
          "type": "boolean"
        }
      },
      "title": "Attributes are unaffected by the date range for the request, and returns the most recent value"
    },
    "v1BackfillLeadAttributionForBusinessRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "the account group ID of an existing partner prospect(under VMF)"
        },
        "marketingFormId": {
          "type": "string",
          "title": "the marketing form ID associated with the request that was made to create the partner prospect account"
        }
      },
      "title": "This message type will be used to back fill lead attribution data, page views into existing partner prospect account"
    },
    "v1BilledClientsRange": {
      "type": "string",
      "enum": [
        "BILLED_CLIENTS_RANGE_UNKNOWN",
        "BILLED_CLIENTS_RANGE_0",
        "BILLED_CLIENTS_RANGE_1_4",
        "BILLED_CLIENTS_RANGE_5_19",
        "BILLED_CLIENTS_RANGE_20_99",
        "BILLED_CLIENTS_RANGE_100_249",
        "BILLED_CLIENTS_RANGE_250_999",
        "BILLED_CLIENTS_RANGE_1000_4999",
        "BILLED_CLIENTS_RANGE_5000PLUS"
      ],
      "default": "BILLED_CLIENTS_RANGE_UNKNOWN"
    },
    "v1BooleanFilter": {
      "type": "string",
      "enum": [
        "BOOLEAN_FILTER_UNSET",
        "BOOLEAN_FILTER_FALSE",
        "BOOLEAN_FILTER_TRUE"
      ],
      "default": "BOOLEAN_FILTER_UNSET"
    },
    "v1Business": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "title": "the company name the contact works for"
        },
        "website": {
          "type": "string",
          "title": "the website of the business"
        }
      },
      "title": "represents the underlying company that an opportunity belongs to, this could be a business with an existing billing relationship or a completely new business"
    },
    "v1CampaignEventType": {
      "type": "string",
      "enum": [
        "CAMPAIGN_EVENT_TYPE_INVALID",
        "CAMPAIGN_EVENT_TYPE_PROCESSED",
        "CAMPAIGN_EVENT_TYPE_DROPPED",
        "CAMPAIGN_EVENT_TYPE_DELIVERED",
        "CAMPAIGN_EVENT_TYPE_DEFERRED",
        "CAMPAIGN_EVENT_TYPE_BOUNCE",
        "CAMPAIGN_EVENT_TYPE_OPEN",
        "CAMPAIGN_EVENT_TYPE_CLICK",
        "CAMPAIGN_EVENT_TYPE_SPAM_REPORT",
        "CAMPAIGN_EVENT_TYPE_UNSUBSCRIBE",
        "CAMPAIGN_EVENT_TYPE_CREATED",
        "CAMPAIGN_EVENT_TYPE_NOT_REQUIRED",
        "CAMPAIGN_EVENT_TYPE_REFRESHED"
      ],
      "default": "CAMPAIGN_EVENT_TYPE_INVALID"
    },
    "v1CheckDisposableEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "email to be checked if the domain belongs to a\ndisposable email service"
        }
      },
      "title": "CheckDisposableEmailRequest check if a email if disposable"
    },
    "v1CheckDisposableEmailResponse": {
      "type": "object",
      "properties": {
        "isDisposable": {
          "type": "boolean",
          "title": "answer if a domain belonging to an email is disposable"
        }
      },
      "title": "CheckDisposableEmailResponse check if a email if disposable"
    },
    "v1ConnectLeadsForPageRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource"
        },
        "pageName": {
          "type": "string"
        }
      },
      "title": "will connect the leads for a specific page"
    },
    "v1ContractStatus": {
      "type": "string",
      "enum": [
        "CONTRACT_STATUS_UNKNOWN",
        "CONTRACT_STATUS_ACTIVE",
        "CONTRACT_STATUS_CANCELLED",
        "CONTRACT_STATUS_DRAFT",
        "CONTRACT_STATUS_HOLD",
        "CONTRACT_STATUS_SUSPENDED"
      ],
      "default": "CONTRACT_STATUS_UNKNOWN"
    },
    "v1CreateAccountGroupFromLeadRequest": {
      "type": "object",
      "properties": {
        "leadId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1CreateAccountGroupFromLeadResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1CreateAffiliateRequest": {
      "type": "object",
      "properties": {
        "affiliate": {
          "$ref": "#/definitions/v1Affiliate"
        },
        "isPaidPartner": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAffiliateResponse": {
      "type": "object"
    },
    "v1CreateDuplicateCriteriaRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1DuplicateCriteria",
          "title": "the dupe detection configuration to save"
        }
      }
    },
    "v1CreatePartnerAccountRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "the first name of the contact of the prospect"
        },
        "lastName": {
          "type": "string",
          "title": "the last name of the contact of the prospect"
        },
        "partnerId": {
          "type": "string",
          "title": "the partner which the account should be made under"
        },
        "businessName": {
          "type": "string",
          "description": "The name of the business, which is a prospective customer."
        },
        "email": {
          "type": "string",
          "title": "the contact email of the prospect"
        },
        "phoneNumber": {
          "type": "string",
          "title": "the phone number of the prospect (will be used to set the work number of the account as well)"
        },
        "numberOfEmployees": {
          "type": "string",
          "title": "the number of employees at the prospect's business"
        },
        "website": {
          "type": "string",
          "title": "the website of the prospect's business, if the website is invalid it will be ignored"
        },
        "conversionPoint": {
          "type": "string",
          "description": "the conversion point is the source that brought the prospect into our platform. eg. crankwheel or calendly..."
        },
        "prospectPartnerId": {
          "type": "string",
          "title": "the partner ID of the prospect, if the prospect represents a partner that already exists in our system. If this field is specified, the new prospect account group will be associated with this partner ID via a custom field"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomField"
          },
          "title": "the custom fields of the prospect e.g. self-sign-up that came filled due to another µservice logic"
        },
        "visitorId": {
          "type": "string",
          "title": "the visitor id represent the id on snowplow, used to get prospect activity tracking"
        },
        "otherVisitorIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the snowplow visitor id of the visitor on other or third-party domains"
        },
        "affiliateId": {
          "type": "string",
          "title": "the affiliate id is a partner id that represents the affiliate from which the prospect came from"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the tags that the account group should be created with"
        },
        "address": {
          "$ref": "#/definitions/v1Address",
          "title": "Address of the prospect"
        }
      },
      "title": "A request to create a partner account for a prospective lead"
    },
    "v1CreatePartnerAccountResponse": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The ID of the account group (prospect) created"
        }
      },
      "title": "the response to creating a partner account"
    },
    "v1CreateTermsOfServiceRequest": {
      "type": "object",
      "properties": {
        "termOfService": {
          "$ref": "#/definitions/v1TermsOfService"
        }
      }
    },
    "v1CreateTermsOfServiceResponse": {
      "type": "object"
    },
    "v1CreateTrackerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1CreateTrackerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CriteriaMatchType": {
      "type": "string",
      "enum": [
        "CRITERIA_MATCH_TYPE_UNKNOWN",
        "CRITERIA_MATCH_TYPE_ALL",
        "CRITERIA_MATCH_TYPE_ANY"
      ],
      "default": "CRITERIA_MATCH_TYPE_UNKNOWN",
      "title": "- CRITERIA_MATCH_TYPE_UNKNOWN: preserved for error/unknown state\n - CRITERIA_MATCH_TYPE_ALL: will match a dupe if ALL fields specified in the criteria match. IE \"AND\"-ing the separate fields\n - CRITERIA_MATCH_TYPE_ANY: will match a dupe if ANY fields specified in the criteria match. IE \"OR\"-ing the sepratate fields"
    },
    "v1CustomField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1DateRange": {
      "type": "string",
      "enum": [
        "DATE_RANGE_INVALID",
        "DATE_RANGE_7DAYS",
        "DATE_RANGE_30DAYS",
        "DATE_RANGE_60DAYS",
        "DATE_RANGE_ALL_TIME"
      ],
      "default": "DATE_RANGE_INVALID"
    },
    "v1DeleteGoalsFromPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "goalIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined constants for goals."
    },
    "v1DeletePrioritiesFromPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Deprecated: priorities are user defined now"
    },
    "v1DisconnectLeadsForPageRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource"
        }
      },
      "title": "will disconnect the leads for a specific page"
    },
    "v1DuplicateAccount": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1DuplicateCriteria": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the partner which the dupe criteria will apply to"
        },
        "useEmail": {
          "type": "boolean",
          "title": "whether to include the email field in the dupe check"
        },
        "usePhoneNumber": {
          "type": "boolean",
          "title": "whether to include the phonenumber field in the dupe check"
        },
        "criteriaMatchType": {
          "$ref": "#/definitions/v1CriteriaMatchType",
          "title": "how to combine the different field checks"
        }
      },
      "title": "the set of data a partner can choose to look for when checking for dupes"
    },
    "v1EarlyWin": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "v1EmailType": {
      "type": "string",
      "enum": [
        "EMAIL_TYPE_INVALID",
        "EMAIL_TYPE_UNKNOWN",
        "EMAIL_TYPE_GENERIC_PROVIDER",
        "EMAIL_TYPE_BRANDED_TO_THEIR_DOMAIN"
      ],
      "default": "EMAIL_TYPE_INVALID"
    },
    "v1Filters": {
      "type": "object",
      "properties": {
        "salesTeam": {
          "type": "string"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/prospectv1Status"
          },
          "title": "Multiple statuses are treated as \"OR\""
        },
        "searchText": {
          "type": "string"
        },
        "attributeFilters": {
          "$ref": "#/definitions/v1AttributeFilters"
        },
        "assignedSalesperson": {
          "type": "string"
        },
        "latestSalesActivityFilter": {
          "$ref": "#/definitions/v1LatestSalesActivityOption"
        },
        "businessId": {
          "type": "string",
          "title": "Filter stats for a single business that represents this partner"
        }
      }
    },
    "v1FindDuplicateAccountsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "partner scope which accounts will be searched on."
        },
        "marketId": {
          "type": "string",
          "description": "market scope which accounts will be searched on."
        },
        "contactEmail": {
          "type": "string",
          "description": "Email of a contact for this prospect."
        },
        "phoneNumber": {
          "type": "string",
          "description": "phone number of the contact for this prospect."
        }
      }
    },
    "v1FindDuplicateAccountsResponse": {
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "account ids of the accounts that match the search criteria given"
        },
        "hasDuplicateInDifferentMarket": {
          "type": "boolean",
          "title": "a boolean which tells the caller if there are duplicates present in markets different than the given market, which the caller does not have permission to see"
        },
        "duplicateAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DuplicateAccount"
          },
          "title": "duplicate_accounts represent info about accountgroups that are considered as duplicates by the duplicate criteria"
        }
      }
    },
    "v1FindDuplicatePartnerProspectsRequest": {
      "type": "object",
      "properties": {
        "contactEmail": {
          "type": "string",
          "description": "Email of a contact for this prospect."
        }
      }
    },
    "v1FindDuplicatePartnerProspectsResponse": {
      "type": "object",
      "properties": {
        "prospectBusinessIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetAffiliatePaymentAmountsRequest": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        }
      }
    },
    "v1GetAffiliatePaymentAmountsResponse": {
      "type": "object",
      "properties": {
        "affiliatePaymentAmmounts": {
          "$ref": "#/definitions/v1AffiliatePaymentAmounts"
        }
      }
    },
    "v1GetAffiliatePaymentReportRequest": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        }
      }
    },
    "v1GetAffiliatePaymentReportResponse": {
      "type": "object",
      "properties": {
        "paymentReport": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AffiliatePaymentReportLineItem"
          }
        }
      }
    },
    "v1GetAffiliateRequest": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        }
      }
    },
    "v1GetAffiliateResponse": {
      "type": "object",
      "properties": {
        "affiliate": {
          "$ref": "#/definitions/v1Affiliate"
        }
      }
    },
    "v1GetAutomationRequest": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        }
      }
    },
    "v1GetAutomationResponse": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1GetDuplicateCriteriaRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the partner which the configuration belongs to and acts on"
        }
      }
    },
    "v1GetDuplicateCriteriaResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1DuplicateCriteria",
          "title": "the dupe detection configuration found for the given partner"
        }
      }
    },
    "v1GetEarlyWinForProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the early win is associated with"
        }
      }
    },
    "v1GetEarlyWinForProspectResponse": {
      "type": "object",
      "properties": {
        "earlyWin": {
          "$ref": "#/definitions/v1EarlyWin"
        }
      }
    },
    "v1GetGoalForProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the goal is associated with"
        }
      }
    },
    "v1GetGoalForProspectResponse": {
      "type": "object",
      "properties": {
        "goalId": {
          "type": "string",
          "title": "Deprecated: use description instead"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1GetLeadQualificationSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "requesting the current lead qualificiation settings set on the partner/market"
    },
    "v1GetLeadQualificationSettingsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "leadQualificationSettings": {
          "$ref": "#/definitions/v1LeadQualificationSettings"
        }
      },
      "title": "the lead qualification settings that are saved for a specific market, if no market settings defined, then fall back to partner's"
    },
    "v1GetLeadRequest": {
      "type": "object",
      "properties": {
        "leadId": {
          "type": "string",
          "title": "the internal lead entity ID"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1GetLeadResponse": {
      "type": "object",
      "properties": {
        "lead": {
          "$ref": "#/definitions/v1Lead",
          "title": "the lead matching the requested ID"
        }
      }
    },
    "v1GetPriorityRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string"
        }
      }
    },
    "v1GetPriorityResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "v1GetTermsOfServiceRequest": {
      "type": "object"
    },
    "v1GetTermsOfServiceResponse": {
      "type": "object",
      "properties": {
        "termOfService": {
          "$ref": "#/definitions/v1TermsOfService"
        }
      }
    },
    "v1GetUTMAttributesRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string"
        }
      },
      "title": "message has to be defined in the same file in order for\nscope permissions to work:\nhttps://github.com/vendasta/vendastaapis/issues/3444"
    },
    "v1GetUTMAttributesResponse": {
      "type": "object",
      "properties": {
        "utmAttributes": {
          "$ref": "#/definitions/v1UTMAttributes"
        }
      }
    },
    "v1Goal": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Deprecated"
    },
    "v1HandleMarketingFormRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "the first name of the contact of the prospect"
        },
        "lastName": {
          "type": "string",
          "title": "the last name of the contact of the prospect"
        },
        "partnerId": {
          "type": "string",
          "title": "the partner which the account should be made under"
        },
        "businessName": {
          "type": "string",
          "description": "The name of the business, which is a prospective customer."
        },
        "email": {
          "type": "string",
          "title": "the contact email of the prospect"
        },
        "phoneNumber": {
          "type": "string",
          "title": "the phone number of the prospect (will be used to set the work number of the account as well)"
        },
        "numberOfEmployees": {
          "type": "string",
          "title": "the number of employees at the prospect's business"
        },
        "website": {
          "type": "string",
          "title": "the website of the prospect's business, if the website is invalid it will be ignored"
        },
        "localTimeZone": {
          "type": "string",
          "title": "the local timezone of the prospect to display in sales center's account details page. This will empower salespeople to contact the prospect at the appropirate time"
        },
        "conversionPoint": {
          "type": "string",
          "description": "the conversion point is the source that brought the prospect into our platform. eg. crankwheel or calendly..."
        },
        "leadProgram": {
          "type": "string",
          "title": "the source of the lead. eg. Social"
        },
        "leadProgramDescription": {
          "type": "string",
          "title": "the description of the source of the lead eg. Social - Facebook Paid"
        },
        "adName": {
          "type": "string",
          "title": "the name of the Ad campaign"
        },
        "prospectPartnerId": {
          "type": "string",
          "title": "the partner ID of the prospect, if the prospect represents a partner that already exists in our system. If this field is specified, the new prospect account group will be associated with this partner ID via a custom field"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomField"
          },
          "title": "the custom fields of the prospect e.g. self-sign-up that came filled due to another µservice logic"
        },
        "visitorId": {
          "type": "string",
          "title": "the visitor id represent the id on snowplow, used to get prospect activity tracking"
        },
        "otherVisitorIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the snowplow visitor id of the visitor on other or third-party domains"
        },
        "affiliateId": {
          "type": "string",
          "title": "the affiliate id is a partner id that represents the affiliate from which the prospect came from"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the tags that the account group should be created with"
        }
      },
      "title": "a request to create a prospect account for a prospective lead"
    },
    "v1HasPidFilter": {
      "type": "string",
      "enum": [
        "HAS_PID_FILTER_UNKNOWN",
        "HAS_PID_FILTER_NO_PID",
        "HAS_PID_FILTER_WITH_PID"
      ],
      "default": "HAS_PID_FILTER_UNKNOWN"
    },
    "v1InitiateCampaignHistoryExportRequest": {
      "type": "object",
      "properties": {
        "campaignId": {
          "type": "string",
          "title": "The unique identifier of the campaign to export data for\nThis value is required"
        },
        "partnerId": {
          "type": "string",
          "title": "The unique identifier of the partner who's data is being exported\nThis value is required"
        },
        "marketId": {
          "type": "string",
          "title": "An optional unique identifier for a market within the partner used to filter the results"
        },
        "campaignStepIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An optional list of unique identifiers for particular steps of the campaign to be included in the report\nThe step id must be for one of the steps defined on the campaign\nIf no values are specified all steps are included"
        },
        "eventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CampaignEventType"
          },
          "title": "The types of email events you want to see included in the report\nIf no values are specified all event types are included"
        },
        "sortBy": {
          "$ref": "#/definitions/InitiateCampaignHistoryExportRequestSortBy",
          "description": "Specifies which column to sort by.\nInvalid or unspecified values will default to Event Date."
        },
        "orderBy": {
          "$ref": "#/definitions/InitiateCampaignHistoryExportRequestOrderBy",
          "description": "The order the sorted by column values should be listed.\nInvalid or unspecified values will default to Ascending."
        },
        "uniqueEngagementOnly": {
          "type": "boolean",
          "title": "Reduces the results to most recent engagement by recipients"
        }
      }
    },
    "v1InitiateCampaignHistoryExportResponse": {
      "type": "object",
      "properties": {
        "exportId": {
          "type": "string",
          "title": "The unique identifier for the file generation that can be used to check its status"
        }
      },
      "title": "Defines the response body from InitiateExport"
    },
    "v1LatestSalesActivityOption": {
      "type": "string",
      "enum": [
        "LATEST_SALES_ACTIVITY_OPTION_ALL_TIME",
        "LATEST_SALES_ACTIVITY_OPTION_WITHIN_THE_LAST_30_DAYS",
        "LATEST_SALES_ACTIVITY_OPTION_OLDER_THAN_30_DAYS"
      ],
      "default": "LATEST_SALES_ACTIVITY_OPTION_ALL_TIME"
    },
    "v1Lead": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the id of the partner to which this lead belongs to"
        },
        "marketId": {
          "type": "string",
          "title": "the id of the market that the lead belongs to"
        },
        "leadId": {
          "type": "string",
          "title": "the unique ID of the lead"
        },
        "person": {
          "$ref": "#/definitions/v1Person"
        },
        "business": {
          "$ref": "#/definitions/v1Business"
        },
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "title": "the time when this lead was generated (provided by fb)"
        },
        "deletedTime": {
          "type": "string",
          "format": "date-time",
          "title": "the time when this lead was deleted"
        },
        "campaignName": {
          "type": "string",
          "title": "the campaign name from which the lead came"
        },
        "adName": {
          "type": "string",
          "title": "the ad name from which the lead came"
        }
      }
    },
    "v1LeadAdsAutomation": {
      "type": "object",
      "properties": {
        "automationStatus": {
          "type": "boolean",
          "description": "will return on/off to know if we will handle the partner facebook webhook leads or not."
        },
        "pageId": {
          "type": "string",
          "description": "the page that contains the ads that will be automated. All ads on this page will have their formfills generate leads."
        }
      },
      "description": "TODO: rename to LeadAdsPageConnectionSettings for consistency",
      "title": "An automation is a configuration that will automatically listen to form fills on a specific facebook page and generate leads for each form fill"
    },
    "v1LeadAdsFormConnectionSettings": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The partner which controls this form."
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource",
          "description": "The external source for the leads."
        },
        "formId": {
          "type": "string",
          "description": "The external ID for the form, for example on Facebook."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to generate leads from this form's fills, or not."
        },
        "destinationMarketId": {
          "type": "string",
          "description": "What market the new leads will be put in."
        }
      }
    },
    "v1LeadQualificationSettings": {
      "type": "object",
      "properties": {
        "createAccountGroup": {
          "type": "boolean",
          "title": "if this option is true then any lead that passes the dupe check will automatically create an account group"
        },
        "logActivityAndReassign": {
          "type": "boolean",
          "title": "if this option is true then any lead that fails the dupe check will automatically log an activity on the \"first/best\" dupe found and will attempt to reassign that account if no salesperson is currently assigned"
        }
      },
      "title": "settings that determine actions for auto processing incoming leads"
    },
    "v1LeadQualificationType": {
      "type": "string",
      "enum": [
        "LEAD_QUALIFICATION_TYPE_UNKNOWN",
        "LEAD_QUALIFICATION_TYPE_QUALIFIED",
        "LEAD_QUALIFICATION_TYPE_UNQUALIFIED"
      ],
      "default": "LEAD_QUALIFICATION_TYPE_UNKNOWN",
      "title": "- LEAD_QUALIFICATION_TYPE_UNKNOWN: reserved for error state\n - LEAD_QUALIFICATION_TYPE_QUALIFIED: leads that have an action taken on them like creating an account from them or associating them to an account\n - LEAD_QUALIFICATION_TYPE_UNQUALIFIED: new leads that have not yet had actions taken on them"
    },
    "v1LeadSource": {
      "type": "string",
      "enum": [
        "LEAD_SOURCE_NOT_SET",
        "LEAD_SOURCE_FACEBOOK"
      ],
      "default": "LEAD_SOURCE_NOT_SET"
    },
    "v1ListAccountAnalyticsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID is required, and requester must have IAM permission to access the partner"
        },
        "marketId": {
          "type": "string",
          "title": "Market ID is required, and requester must have IAM permission to access the market"
        },
        "paging": {
          "$ref": "#/definitions/v1PagedRequestOptions"
        },
        "filters": {
          "$ref": "#/definitions/v1AccountFilters"
        },
        "sorting": {
          "$ref": "#/definitions/v1MultiSortingOptions"
        }
      }
    },
    "v1ListAccountAnalyticsResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        }
      }
    },
    "v1ListAccountGroupsAssociatedToLeadRequest": {
      "type": "object",
      "properties": {
        "leadId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1ListAccountGroupsAssociatedToLeadResponse": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListAffiliatesRequest": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "cursor": {
          "type": "string"
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListAffiliatesResponse": {
      "type": "object",
      "properties": {
        "affiliates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Affiliate"
          }
        },
        "cursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalResults": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListAnalyticsPresetViewRequest": {
      "type": "object"
    },
    "v1ListAnalyticsPresetViewResponse": {
      "type": "object",
      "properties": {
        "analyticsPresetView": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AnalyticsPresetView"
          }
        }
      }
    },
    "v1ListGoalsForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      },
      "description": "Deprecated: We no longer use partner-defined constants for goals."
    },
    "v1ListGoalsForPartnerResponse": {
      "type": "object",
      "properties": {
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Goal"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined constants for goals."
    },
    "v1ListLeadAdsFormConnectionSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource"
        },
        "pageId": {
          "type": "string"
        }
      }
    },
    "v1ListLeadAdsFormConnectionSettingsResponse": {
      "type": "object",
      "properties": {
        "formAutomations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeadAdsFormConnectionSettings"
          }
        }
      }
    },
    "v1ListLeadsAssociatedToAccountGroupRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1ListLeadsAssociatedToAccountGroupResponse": {
      "type": "object",
      "properties": {
        "leadIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListLeadsForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "the partnerID of the partner which has fb leads"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "paging options including page index/cursor and page size"
        },
        "leadQualificationType": {
          "$ref": "#/definitions/v1LeadQualificationType",
          "title": "optional field to filter which leads you want to list"
        }
      }
    },
    "v1ListLeadsForPartnerResponse": {
      "type": "object",
      "properties": {
        "leads": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Lead"
          },
          "title": "all the fb leads the partner holds"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "paging options response including if there is more data to return, the cursor for the next page and the total result number"
        }
      }
    },
    "v1ListPartnerLeadAdAutomationsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource"
        }
      },
      "title": "List a partner lead gen ads automations"
    },
    "v1ListPartnerLeadAdAutomationsResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "automations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeadAdsAutomation"
          }
        }
      },
      "title": "List a partner lead gen ads automations"
    },
    "v1ListPartnerProspectsRequest": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/v1PagedRequestOptions"
        },
        "dateRange": {
          "$ref": "#/definitions/v1DateRange"
        },
        "filters": {
          "$ref": "#/definitions/v1Filters"
        },
        "multiSortingOptions": {
          "$ref": "#/definitions/v1MultiSortingOptions"
        }
      },
      "title": "message has to be defined in the same file in order for\nscope permissions to work:\nhttps://github.com/vendasta/vendastaapis/issues/3444"
    },
    "v1ListPartnerProspectsResponse": {
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        },
        "partnerProspects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PartnerProspect"
          }
        }
      }
    },
    "v1ListPartnersConnectedToPageRequest": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string"
        }
      }
    },
    "v1ListPartnersConnectedToPageResponse": {
      "type": "object",
      "properties": {
        "partnerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListPrioritiesForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      },
      "title": "Deprecated: priorities are user defined now"
    },
    "v1ListPrioritiesForPartnerResponse": {
      "type": "object",
      "properties": {
        "priorities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Priority"
          }
        }
      },
      "title": "Deprecated: priorities are user defined now"
    },
    "v1ListPrioritiesForProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the priority is associated with"
        }
      },
      "description": "Deprecated: We no longer use partner-defined priorities. Use GetPriorityRequest instead."
    },
    "v1ListPrioritiesForProspectResponse": {
      "type": "object",
      "properties": {
        "priorityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined priorities. Use GetPriorityResponse instead."
    },
    "v1Metrics": {
      "type": "object",
      "properties": {
        "daysActiveInPlatform": {
          "type": "string",
          "format": "int64",
          "description": "Number of days Salesperson and Partner users have been active in S\u0026SC and PC."
        },
        "activePaidProductsDelta": {
          "type": "string",
          "format": "int64",
          "description": "Change in active paid products in the selected date range."
        },
        "accountsDelta": {
          "type": "string",
          "format": "int64",
          "description": "Change in number of accounts in the selected date range."
        },
        "generatedSnapshotsDelta": {
          "type": "string",
          "format": "int64",
          "description": "Change in number of generated snapshots in the selected date range."
        },
        "openOpportunities": {
          "type": "string",
          "format": "int64",
          "title": "Number of open opportunities"
        }
      },
      "description": "Metrics used to qualify a Partner Prospect. These are calculated using the selected DateRange."
    },
    "v1Money": {
      "type": "object",
      "properties": {
        "valueInCents": {
          "type": "string",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1MultiSortingOptions": {
      "type": "object",
      "properties": {
        "sortingOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortingOptions"
          }
        }
      }
    },
    "v1Opportunity": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "miscellaneous data about what the lead is interested in. Will most likely be fleshed out in the future"
        }
      },
      "title": "represents additional information as to what the lead has presented interest in, whether that is product or service or simply a status"
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageIndex": {
          "type": "string",
          "format": "int64",
          "title": "pageNumber can be passed if using mat-paginator style paging"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        },
        "allRows": {
          "type": "boolean",
          "title": "deprecated (if you need to load all rows you porbably need to do something else)"
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "total number of results"
        }
      }
    },
    "v1PaidProductsRange": {
      "type": "string",
      "enum": [
        "PAID_PRODUCTS_RANGE_UNKNOWN",
        "PAID_PRODUCTS_RANGE_1_2",
        "PAID_PRODUCTS_RANGE_3",
        "PAID_PRODUCTS_RANGE_4_5",
        "PAID_PRODUCTS_RANGE_6_10",
        "PAID_PRODUCTS_RANGE_11_20",
        "PAID_PRODUCTS_RANGE_21_50",
        "PAID_PRODUCTS_RANGE_51_100",
        "PAID_PRODUCTS_RANGE_100PLUS"
      ],
      "default": "PAID_PRODUCTS_RANGE_UNKNOWN"
    },
    "v1PartnerFacebookLeadAdsConnectionStatusRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      },
      "description": "Check if a partner has connected their lead-ads account to our system."
    },
    "v1PartnerFacebookLeadAdsConnectionStatusResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "hasGrantedAccessToken": {
          "type": "boolean"
        },
        "isConnected": {
          "type": "boolean"
        },
        "connectedPageId": {
          "type": "string"
        },
        "connectedPageName": {
          "type": "string"
        },
        "tokenIsValid": {
          "type": "boolean"
        }
      },
      "description": "Check if a partner has connected their lead-ads account to our system."
    },
    "v1PartnerProspect": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "businessId": {
          "type": "string",
          "title": "The account group ID of the prospect (which is under the partner VMF)"
        },
        "name": {
          "type": "string",
          "title": "The company name of the prospect"
        },
        "hotness": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/prospectv1Status"
        },
        "unreadActivity": {
          "type": "boolean"
        },
        "assignee": {
          "type": "string",
          "title": "The assigned salesperson of the prospect"
        },
        "metrics": {
          "$ref": "#/definitions/v1Metrics"
        },
        "attributes": {
          "$ref": "#/definitions/v1Attributes"
        }
      }
    },
    "v1PaymentInfo": {
      "type": "object",
      "properties": {
        "lastFailedPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstFailedPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalAmountOwing": {
          "$ref": "#/definitions/v1Money"
        },
        "lastSuccessfulPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstSuccessfulPaymentDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PaymentInfo only is captured for instant billed partners"
    },
    "v1Person": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "the first name of the contact that filled out the form"
        },
        "lastName": {
          "type": "string",
          "title": "the last name of the contact that filled out the form"
        },
        "email": {
          "type": "string",
          "title": "the lead's email address, might be either the contact's or the company's email"
        },
        "phoneNumber": {
          "type": "string",
          "title": "the lead's phone number, might be either the contact's or the company's phone number"
        }
      },
      "title": "represents the person that has indicated an interest in being sold to/ presents an opportunity to sell to. Could be a Contact or a registered user"
    },
    "v1Priority": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Deprecated"
    },
    "v1PutAffiliatePaymentAmountsRequest": {
      "type": "object",
      "properties": {
        "affiliatePaymentAmmounts": {
          "$ref": "#/definitions/v1AffiliatePaymentAmounts"
        }
      }
    },
    "v1PutAffiliatePaymentAmountsResponse": {
      "type": "object"
    },
    "v1PutAnalyticsPresetViewResponse": {
      "type": "object"
    },
    "v1ReIgniteOldAccountsRequest": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the account groups that should be re-ignited"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the tags that the account group should be updated with when re-igniting"
        }
      },
      "title": "a request to set up tags and company cohort size and trigger auto assignment of old account"
    },
    "v1RemovePriorityFromProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the priority is associated with"
        },
        "priorityId": {
          "type": "string"
        }
      },
      "description": "Deprecated: We no longer use partner-defined priorities. Use SetPriorityRequest instead."
    },
    "v1ReplaceEarlyWinForProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the early win is associated with"
        },
        "earlyWin": {
          "$ref": "#/definitions/v1EarlyWin"
        }
      }
    },
    "v1ReplaceGoalForProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string",
          "title": "a prospect is currently the business id that the goal is associated with"
        },
        "goalId": {
          "type": "string",
          "title": "Deprecated: use description instead"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1ReplaceLeadQualificationSettingsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "leadQualificationSettings": {
          "$ref": "#/definitions/v1LeadQualificationSettings"
        }
      },
      "title": "create new settings or update any existing settings for lead qualification (see rpc definition for more info)"
    },
    "v1ReplacePrioritiesForProspectRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined priorities. Use SetPriorityRequest instead."
    },
    "v1SetPriorityRequest": {
      "type": "object",
      "properties": {
        "prospectId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_INVALID",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_INVALID"
    },
    "v1SortingOptions": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "direction": {
          "$ref": "#/definitions/v1SortDirection"
        }
      }
    },
    "v1StatusType": {
      "type": "string",
      "enum": [
        "STATUS_TYPE_UNKNOWN",
        "STATUS_TYPE_PENDING",
        "STATUS_TYPE_APPROVED",
        "STATUS_TYPE_REJECTED"
      ],
      "default": "STATUS_TYPE_UNKNOWN"
    },
    "v1SubscriptionChangeFilter": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_CHANGE_FILTER_UNSET",
        "SUBSCRIPTION_CHANGE_FILTER_UPGRADED",
        "SUBSCRIPTION_CHANGE_FILTER_DOWNGRADED"
      ],
      "default": "SUBSCRIPTION_CHANGE_FILTER_UNSET"
    },
    "v1SubscriptionTier": {
      "type": "string",
      "enum": [
        "SUBSCRIPTION_TIER_BASIC",
        "SUBSCRIPTION_TIER_PROFESSIONAL",
        "SUBSCRIPTION_TIER_ENTERPRISE",
        "SUBSCRIPTION_TIER_LITE",
        "SUBSCRIPTION_TIER_PREMIUM",
        "SUBSCRIPTION_TIER_ELITE",
        "SUBSCRIPTION_TIER_FREE",
        "SUBSCRIPTION_TIER_STARTER",
        "SUBSCRIPTION_TIER_BASIC_PLUS",
        "SUBSCRIPTION_TIER_PROFESSIONAL_PLUS",
        "SUBSCRIPTION_TIER_ENTERPRISE_PLUS",
        "SUBSCRIPTION_TIER_REPLACED_BY_SUBSCRIPTION_TIERS"
      ],
      "default": "SUBSCRIPTION_TIER_BASIC",
      "title": "Effective duplicate of partner/v1/subscription_levels.proto until issues with\nTypeScript SDK generation from importing proto has been fixed"
    },
    "v1TermsOfService": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "terms": {
          "type": "string"
        },
        "createDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1UTMAttributes": {
      "type": "object",
      "properties": {
        "utmCampaign": {
          "type": "string"
        },
        "utmMedium": {
          "type": "string"
        },
        "utmSource": {
          "type": "string"
        },
        "utmContent": {
          "type": "string"
        },
        "utmTerm": {
          "type": "string"
        }
      }
    },
    "v1UpdateAffiliateStatusRequest": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "approveStatus": {
          "$ref": "#/definitions/v1StatusType"
        }
      }
    },
    "v1UpdateAffiliateStatusResponse": {
      "type": "object"
    },
    "v1UpdateAutomationRequest": {
      "type": "object",
      "properties": {
        "automationId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateAutomationResponse": {
      "type": "object"
    },
    "v1UpdateDuplicateCriteriaRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1DuplicateCriteria",
          "title": "the dupe detection configuration to save"
        }
      }
    },
    "v1UpdateLeadAdsAutomationStatusRequest": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string",
          "description": "the page that contains the ads that will be automated. All ads on this page will have their formfills generate leads."
        },
        "automationStatus": {
          "type": "boolean",
          "description": "will change the status on/off to know if we will handle the partner facebook webhook leads or not."
        },
        "partnerId": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1LeadSource"
        }
      },
      "title": "Update the lead ads automation status on or off"
    },
    "v1UpdateLeadAdsFormConnectionSettingsRequest": {
      "type": "object",
      "properties": {
        "formAutomation": {
          "$ref": "#/definitions/v1LeadAdsFormConnectionSettings"
        }
      }
    },
    "v1UpsertGoalsForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Goal"
          }
        }
      },
      "description": "Deprecated: We no longer use partner-defined constants for goals."
    },
    "v1UpsertPrioritiesForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "priorities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Priority"
          }
        }
      },
      "title": "Deprecated: priorities are user defined now"
    },
    "v1UtmFilters": {
      "type": "object",
      "properties": {
        "campaign": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "term": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1WebsiteFilter": {
      "type": "string",
      "enum": [
        "WEBSITE_FILTER_UNSET",
        "WEBSITE_FILTER_NO_WEBSITE",
        "WEBSITE_FILTER_HAS_WEBSITE"
      ],
      "default": "WEBSITE_FILTER_UNSET"
    }
  }
}
