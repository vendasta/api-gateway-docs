{
  "swagger": "2.0",
  "info": {
    "title": "sales/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Sales"
    },
    {
      "name": "SalesTeamService"
    },
    {
      "name": "BusinessService"
    },
    {
      "name": "ExternalIdentifiers"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "UserActionsProvider"
    },
    {
      "name": "SalesActivityService"
    },
    {
      "name": "Meeting"
    },
    {
      "name": "PartnerService"
    },
    {
      "name": "CampaignService"
    },
    {
      "name": "Tasks"
    },
    {
      "name": "LegacyEvents"
    },
    {
      "name": "Freshdesk"
    },
    {
      "name": "BusinessActivity"
    },
    {
      "name": "CancellationRequests"
    },
    {
      "name": "Salespeople"
    },
    {
      "name": "ActionLists"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/sales.v1.BusinessActivity/CreateBusinessActivity": {
      "post": {
        "summary": "Creates a business activity",
        "operationId": "BusinessActivity_CreateBusinessActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateBusinessActivityRequest"
            }
          }
        ],
        "tags": [
          "BusinessActivity"
        ]
      }
    },
    "/sales.v1.BusinessService/List": {
      "post": {
        "summary": "List returns a list of businesses filtered by list options",
        "operationId": "BusinessService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BusinessListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BusinessListRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v1.BusinessService/RequestSubscriptionChange": {
      "post": {
        "summary": "RequestSubscriptionChange allows a business to send a request to the partner configured email address to change\ntheir subscription for a product. Most likely use case is to cancel.",
        "operationId": "BusinessService_RequestSubscriptionChange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RequestSubscriptionChangeRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v1.BusinessService/Search": {
      "post": {
        "summary": "BusinessSearch returns a set of businesses in scored order depending on match criteria",
        "operationId": "BusinessService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BusinessSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BusinessSearchRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v1.CampaignService/AddContactToCampaign": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "CampaignService_AddContactToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesv1AddContactToCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/sales.v1.CampaignService/GetMultiCampaigns": {
      "post": {
        "operationId": "CampaignService_GetMultiCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/salesv1GetMultiCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesv1GetMultiCampaignsRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/sales.v1.CampaignService/LookupCampaigns": {
      "post": {
        "operationId": "CampaignService_LookupCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/salesv1LookupCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesv1LookupCampaignsRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/sales.v1.Contacts/Create": {
      "post": {
        "operationId": "Contacts_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ContactCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ContactCreateRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v1.Contacts/GetContactsByEmail": {
      "post": {
        "summary": "GetContacts returns contacts for a business",
        "operationId": "Contacts_GetContactsByEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetContactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetContactsByEmailRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v1.ExternalIdentifiers/Create": {
      "post": {
        "operationId": "ExternalIdentifiers_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExternalIdentifierCreateRequest"
            }
          }
        ],
        "tags": [
          "ExternalIdentifiers"
        ]
      }
    },
    "/sales.v1.ExternalIdentifiers/GetByInternalID": {
      "post": {
        "operationId": "ExternalIdentifiers_GetByInternalID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExternalIdentifierGetByInternalIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExternalIdentifierGetByInternalIDRequest"
            }
          }
        ],
        "tags": [
          "ExternalIdentifiers"
        ]
      }
    },
    "/sales.v1.Freshdesk/GetConfiguration": {
      "post": {
        "summary": "Get current configuration",
        "operationId": "Freshdesk_GetConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetConfigurationRequest"
            }
          }
        ],
        "tags": [
          "Freshdesk"
        ]
      }
    },
    "/sales.v1.Freshdesk/SearchTickets": {
      "post": {
        "summary": "Searches Freshdesk tickets using Freshdesk's API",
        "operationId": "Freshdesk_SearchTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchTicketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchTicketsRequest"
            }
          }
        ],
        "tags": [
          "Freshdesk"
        ]
      }
    },
    "/sales.v1.Freshdesk/SetConfiguration": {
      "post": {
        "summary": "Set up configuration needed to use freshdesks api",
        "operationId": "Freshdesk_SetConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetConfigurationRequest"
            }
          }
        ],
        "tags": [
          "Freshdesk"
        ]
      }
    },
    "/sales.v1.Freshdesk/ViewTicket": {
      "post": {
        "summary": "Retrieves Freshdesk ticket details",
        "operationId": "Freshdesk_ViewTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ViewTicketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ViewTicketRequest"
            }
          }
        ],
        "tags": [
          "Freshdesk"
        ]
      }
    },
    "/sales.v1.LegacyEvents/PublishAskQuestionEvent": {
      "post": {
        "operationId": "LegacyEvents_PublishAskQuestionEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PublishAskQuestionEventRequest"
            }
          }
        ],
        "tags": [
          "LegacyEvents"
        ]
      }
    },
    "/sales.v1.LegacyEvents/PublishClaimAccountEvent": {
      "post": {
        "operationId": "LegacyEvents_PublishClaimAccountEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PublishClaimAccountEventRequest"
            }
          }
        ],
        "tags": [
          "LegacyEvents"
        ]
      }
    },
    "/sales.v1.LegacyEvents/PublishPackageInterestEvent": {
      "post": {
        "operationId": "LegacyEvents_PublishPackageInterestEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PublishPackageInterestEventRequest"
            }
          }
        ],
        "tags": [
          "LegacyEvents"
        ]
      }
    },
    "/sales.v1.LegacyEvents/PublishProductInterestEvent": {
      "post": {
        "operationId": "LegacyEvents_PublishProductInterestEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PublishProductInterestEventRequest"
            }
          }
        ],
        "tags": [
          "LegacyEvents"
        ]
      }
    },
    "/sales.v1.LegacyEvents/PublishSnapshotOpenEvent": {
      "post": {
        "summary": "Note: Do NOT add new RPCs here after SSC-2697",
        "operationId": "LegacyEvents_PublishSnapshotOpenEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PublishSnapshotOpenEventRequest"
            }
          }
        ],
        "tags": [
          "LegacyEvents"
        ]
      }
    },
    "/sales.v1.Meeting/GetZoomMeetingInfo": {
      "post": {
        "summary": "Get StoreZoomMeetingInfo",
        "operationId": "Meeting_GetZoomMeetingInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetZoomMeetingInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetZoomMeetingInfoRequest"
            }
          }
        ],
        "tags": [
          "Meeting"
        ]
      }
    },
    "/sales.v1.Meeting/StoreZoomMeetingInfo": {
      "post": {
        "summary": "Create StoreZoomMeetingInfo",
        "operationId": "Meeting_StoreZoomMeetingInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StoreZoomMeetingInfoRequest"
            }
          }
        ],
        "tags": [
          "Meeting"
        ]
      }
    },
    "/sales.v1.PartnerService/GetPartnerSalesDomain": {
      "post": {
        "operationId": "PartnerService_GetPartnerSalesDomain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PartnerSalesDomainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PartnerSalesDomainRequest"
            }
          }
        ],
        "tags": [
          "PartnerService"
        ]
      }
    },
    "/sales.v1.PartnerService/UpdatePartnerSalesDomain": {
      "post": {
        "operationId": "PartnerService_UpdatePartnerSalesDomain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePartnerSalesDomainRequest"
            }
          }
        ],
        "tags": [
          "PartnerService"
        ]
      }
    },
    "/sales.v1.Sales/CreateOrUpdateAutoAssignConfig": {
      "post": {
        "summary": "CreateOrUpdateAutoAssignConfig creates or updates the auto assign account configuration for the market.",
        "operationId": "Sales_CreateOrUpdateAutoAssignConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrUpdateAutoAssignConfigRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/GetAssignedSalespersonForPartner": {
      "post": {
        "summary": "Get Assigned Salesperson get the salesperson in VMF who is assigned to the requesting partner.",
        "operationId": "Sales_GetAssignedSalespersonForPartner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssignedSalespersonForPartnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAssignedSalespersonForPartnerRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/GetAutoAssignConfig": {
      "post": {
        "summary": "GetAutoAssignConfig gets the auto assign account configuration for market.",
        "operationId": "Sales_GetAutoAssignConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAutoAssignConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAutoAssignConfigRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/GetMultiSalesperson": {
      "post": {
        "summary": "GetMultiSalesperson gets multiple sales people",
        "operationId": "Sales_GetMultiSalesperson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiSalespersonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiSalespersonRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/GetSalesperson": {
      "post": {
        "summary": "GetSalesperson gets a salesperson",
        "operationId": "Sales_GetSalesperson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/salesv1Salesperson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSalespersonRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/ListSalespersons": {
      "post": {
        "summary": "List Salespersons will return a paged result of salespersons",
        "operationId": "Sales_ListSalespersons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSalespersonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSalespersonsRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/LookupSalespersons": {
      "post": {
        "summary": "LookupSalespersons who match the search criteria given in the request",
        "operationId": "Sales_LookupSalespersons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LookupSalespersonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LookupSalespersonsRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.Sales/SendResetPasswordEmail": {
      "post": {
        "summary": "SendResetPasswordEmail send reset password email to salesperson",
        "operationId": "Sales_SendResetPasswordEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendResetPasswordEmailRequest"
            }
          }
        ],
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales.v1.SalesActivityService/Create": {
      "post": {
        "summary": "Create would create a sales activity",
        "operationId": "SalesActivityService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSalesActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSalesActivityRequest"
            }
          }
        ],
        "tags": [
          "SalesActivityService"
        ]
      }
    },
    "/sales.v1.SalesActivityService/GetMulti": {
      "post": {
        "summary": "GetMulti returns multiple sales activity",
        "operationId": "SalesActivityService_GetMulti",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiSalesActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiSalesActivityRequest"
            }
          }
        ],
        "tags": [
          "SalesActivityService"
        ]
      }
    },
    "/sales.v1.SalesTeamService/GetMembers": {
      "post": {
        "operationId": "SalesTeamService_GetMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMembersRequest"
            }
          }
        ],
        "tags": [
          "SalesTeamService"
        ]
      }
    },
    "/sales.v1.SalesTeamService/GetMulti": {
      "post": {
        "operationId": "SalesTeamService_GetMulti",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMultiSalesTeamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMultiSalesTeamRequest"
            }
          }
        ],
        "tags": [
          "SalesTeamService"
        ]
      }
    },
    "/sales.v1.SalesTeamService/GetTeamsBySalespersons": {
      "post": {
        "operationId": "SalesTeamService_GetTeamsBySalespersons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTeamsBySalespersonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTeamsBySalespersonsRequest"
            }
          }
        ],
        "tags": [
          "SalesTeamService"
        ]
      }
    },
    "/sales.v1.SalesTeamService/List": {
      "post": {
        "operationId": "SalesTeamService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSalesTeamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSalesTeamsRequest"
            }
          }
        ],
        "tags": [
          "SalesTeamService"
        ]
      }
    },
    "/sales.v1.SalesTeamService/UpdateTeamName": {
      "post": {
        "operationId": "SalesTeamService_UpdateTeamName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateTeamNameRequest"
            }
          }
        ],
        "tags": [
          "SalesTeamService"
        ]
      }
    },
    "/sales.v1.Tasks/AssignSalesTask": {
      "post": {
        "operationId": "Tasks_AssignSalesTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AssignSalesTaskRequest"
            }
          }
        ],
        "tags": [
          "Tasks"
        ]
      }
    },
    "/sales.v1.Tasks/CreateSalesTask": {
      "post": {
        "operationId": "Tasks_CreateSalesTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSalesTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSalesTaskRequest"
            }
          }
        ],
        "tags": [
          "Tasks"
        ]
      }
    },
    "/sales.v1.UserActionsProvider/BulkUploadUserActions": {
      "post": {
        "summary": "UploadUserActionCSV allows an API user to send a CSV file that contains many user actions to be processed",
        "operationId": "UserActionsProvider_BulkUploadUserActions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BulkUploadUserActionsRequest"
            }
          }
        ],
        "tags": [
          "UserActionsProvider"
        ]
      }
    },
    "/sales.v1.UserActionsProvider/ListUserActions": {
      "post": {
        "summary": "Return user actions for an account group Id",
        "operationId": "UserActionsProvider_ListUserActions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserActionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUserActionsRequest"
            }
          }
        ],
        "tags": [
          "UserActionsProvider"
        ]
      }
    },
    "/sales.v1.UserActionsProvider/UploadUserAction": {
      "post": {
        "summary": "UploadUserAction allows an API user to upoad a user action for an account group ID",
        "operationId": "UserActionsProvider_UploadUserAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserActionsRequest"
            }
          }
        ],
        "tags": [
          "UserActionsProvider"
        ]
      }
    },
    "/sales.v1.UserActionsProvider/UploadUserActionForCustomerID": {
      "post": {
        "summary": "UploadUserActionForCustomerID allows an API user to upload a user action for a customer ID",
        "operationId": "UserActionsProvider_UploadUserActionForCustomerID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UploadUserActionForCustomerIDRequest"
            }
          }
        ],
        "tags": [
          "UserActionsProvider"
        ]
      }
    },
    "/sales.v2beta1.ActionLists/AddAccountsToActionList": {
      "post": {
        "summary": "wrapper for AA /_ajax/v1/action-lists/add-accounts/",
        "operationId": "ActionLists_AddAccountsToActionList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1AddAccountsToActionListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1AddAccountsToActionListRequest"
            }
          }
        ],
        "tags": [
          "ActionLists"
        ]
      }
    },
    "/sales.v2beta1.ActionLists/ListActionLists": {
      "post": {
        "summary": "wrapper for AA /_ajax/v1/action-lists/get/",
        "operationId": "ActionLists_ListActionLists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListActionListsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1ListActionListsRequest"
            }
          }
        ],
        "tags": [
          "ActionLists"
        ]
      }
    },
    "/sales.v2beta1.BusinessService/GetAccountPrimaryContact": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead\nGetAccountPrimaryContact will get the primaryContactId for an account on the ProspectingInfo table",
        "operationId": "BusinessService_GetAccountPrimaryContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetAccountPrimaryContactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetAccountPrimaryContactRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v2beta1.BusinessService/GetSalesActivityForAccounts": {
      "post": {
        "summary": "GetSalesActivityForAccounts will get the most recent sales activity date for the accounts provided",
        "operationId": "BusinessService_GetSalesActivityForAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetSalesActivityForAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetSalesActivityForAccountsRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v2beta1.BusinessService/Search": {
      "post": {
        "summary": "Search will return a scored list of businesses that match the filters.",
        "operationId": "BusinessService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1SearchRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v2beta1.BusinessService/SearchBusinessesByContactEmail": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead\nSearchBusinessesByContactEmail will return a list of businesses match the request",
        "operationId": "BusinessService_SearchBusinessesByContactEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1SearchBusinessesByContactEmailRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v2beta1.BusinessService/SetAccountPrimaryContact": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead\nSetAccountPrimaryContact will set the primaryContactId for an account on the ProspectingInfo table",
        "operationId": "BusinessService_SetAccountPrimaryContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1SetAccountPrimaryContactRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/sales.v2beta1.CampaignService/AddContactToCampaign": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "CampaignService_AddContactToCampaign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesv2beta1AddContactToCampaignRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/sales.v2beta1.CampaignService/GetMultiCampaigns": {
      "post": {
        "operationId": "CampaignService_GetMultiCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/salesv2beta1GetMultiCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesv2beta1GetMultiCampaignsRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/sales.v2beta1.CampaignService/LookupCampaigns": {
      "post": {
        "operationId": "CampaignService_LookupCampaigns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/salesv2beta1LookupCampaignsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/salesv2beta1LookupCampaignsRequest"
            }
          }
        ],
        "tags": [
          "CampaignService"
        ]
      }
    },
    "/sales.v2beta1.CancellationRequests/Create": {
      "post": {
        "operationId": "CancellationRequests_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1CreateRequest"
            }
          }
        ],
        "tags": [
          "CancellationRequests"
        ]
      }
    },
    "/sales.v2beta1.CancellationRequests/IsConfigValid": {
      "post": {
        "operationId": "CancellationRequests_IsConfigValid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1IsConfigValidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1IsConfigValidRequest"
            }
          }
        ],
        "tags": [
          "CancellationRequests"
        ]
      }
    },
    "/sales.v2beta1.CancellationRequests/List": {
      "post": {
        "operationId": "CancellationRequests_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1ListRequest"
            }
          }
        ],
        "tags": [
          "CancellationRequests"
        ]
      }
    },
    "/sales.v2beta1.CancellationRequests/UpdateStatus": {
      "post": {
        "operationId": "CancellationRequests_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1UpdateStatusRequest"
            }
          }
        ],
        "tags": [
          "CancellationRequests"
        ]
      }
    },
    "/sales.v2beta1.Contacts/Create": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead\nCreates a new V2 contact in vStore",
        "operationId": "Contacts_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1CreateContactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1CreateContactRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/Delete": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "Contacts_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1DeleteContactRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/GetContactByID": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "Contacts_GetContactByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetContactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetContactByIDRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/GetContactsForAccounts": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "Contacts_GetContactsForAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetContactsForAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetContactsForAccountsRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/ListContactsForBusiness": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "Contacts_ListContactsForBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListContactsForBusinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1ListContactsForBusinessRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/ListContactsForEmail": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "Contacts_ListContactsForEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListContactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1ListContactsForEmailRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/ListContactsForPhoneNumber": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead\nList contacts given a phone number\nMatches contacts phone number given specified phone number format",
        "operationId": "Contacts_ListContactsForPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListContactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1ListContactsForPhoneNumberRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/ResendUserWelcomeEmail": {
      "post": {
        "operationId": "Contacts_ResendUserWelcomeEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ResendUserWelcomeEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1ResendUserWelcomeEmailRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Contacts/Update": {
      "post": {
        "summary": "Deprecated: use CRM contacts instead",
        "operationId": "Contacts_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1UpdateContactRequest"
            }
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/sales.v2beta1.Salespeople/CreateSalespersonForUser": {
      "post": {
        "operationId": "Salespeople_CreateSalespersonForUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1CreateSalespersonForUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1CreateSalespersonForUserRequest"
            }
          }
        ],
        "tags": [
          "Salespeople"
        ]
      }
    },
    "/sales.v2beta1.Salespeople/GetMultiOpportunityEfforts": {
      "post": {
        "summary": "Gets efforts salespeople done against opportunities",
        "operationId": "Salespeople_GetMultiOpportunityEfforts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetMultiOpportunityEffortsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetMultiOpportunityEffortsRequest"
            }
          }
        ],
        "tags": [
          "Salespeople"
        ]
      }
    },
    "/sales.v2beta1.Salespeople/GetSalespersonByEmail": {
      "post": {
        "operationId": "Salespeople_GetSalespersonByEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetSalespersonByEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetSalespersonByEmailRequest"
            }
          }
        ],
        "tags": [
          "Salespeople"
        ]
      }
    },
    "/sales.v2beta1.Salespeople/GetSalespersonByUserId": {
      "post": {
        "operationId": "Salespeople_GetSalespersonByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1GetSalespersonByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1GetSalespersonByUserIdRequest"
            }
          }
        ],
        "tags": [
          "Salespeople"
        ]
      }
    },
    "/sales.v2beta1.Salespeople/SendPasswordResetEmail": {
      "post": {
        "operationId": "Salespeople_SendPasswordResetEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1SendPasswordResetEmailRequest"
            }
          }
        ],
        "tags": [
          "Salespeople"
        ]
      }
    }
  },
  "definitions": {
    "AddContactToCampaignRequestSender": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        }
      }
    },
    "AutoAssignCriteriaAccountOriginCriteria": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        }
      },
      "title": "Matches accounts based on the \"origin\" to check if they were created from the self sign up in public store"
    },
    "AutoAssignCriteriaCategoryCriteria": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Matches accounts based on the business categories (also known as the business taxonomy)."
    },
    "AutoAssignCriteriaConversionPointCriteria": {
      "type": "object",
      "properties": {
        "conversionPoint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Matches accounts based on the conversion_point custom field applied. (VMF Only as of Sep 2019)"
    },
    "AutoAssignCriteriaLocationCriteria": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      },
      "description": "Matches accounts based on their geographical location."
    },
    "AutoAssignCriteriaTagCriteria": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchType": {
          "$ref": "#/definitions/v1TagMatchType"
        }
      },
      "description": "Matches accounts based on the generic tags applied."
    },
    "BusinessListResponseSalestoolBusiness": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "contactFirstName": {
          "type": "string"
        },
        "contactLastName": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetMultiSalesActivityResponseSalesActivityContainer": {
      "type": "object",
      "properties": {
        "salesActivity": {
          "$ref": "#/definitions/v1SalesActivity"
        }
      }
    },
    "GetTeamsBySalespersonsResponseTeamsForSalesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "salesTeams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesTeam"
          }
        }
      }
    },
    "ListContactsForPhoneNumberRequestListOptions": {
      "type": "object",
      "properties": {
        "includeDeleted": {
          "type": "boolean",
          "title": "Will return deleted contacts; default is false"
        },
        "phoneNumberFormat": {
          "type": "string",
          "title": "Option to provide a hint on how to treat phone number\nPossible options are either unset or \"e164\""
        }
      },
      "title": "Options for listing contcats given a phone number"
    },
    "ListSalesTeamsRequestListSalesTeamsFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "ListSalespersonsRequestListSalespersonsFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "onlySalesManagers": {
          "type": "boolean"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "salesv1AddContactToCampaignRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesv1AddContactToCampaignRequestRecipient"
        },
        "sender": {
          "$ref": "#/definitions/AddContactToCampaignRequestSender"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "salesv1AddContactToCampaignRequestRecipient": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "salesv1Business": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "hotness": {
          "type": "string",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        },
        "lastSalesActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastCustomerActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "salesStatus": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "salesPersonAction": {
          "type": "string"
        },
        "latestSnapshotExpiry": {
          "type": "string",
          "format": "date-time"
        },
        "snapshotOrCampaignEmailStatus": {
          "type": "boolean"
        },
        "activityType": {
          "type": "string"
        },
        "lastConnectedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lifecycleStage": {
          "type": "string"
        }
      }
    },
    "salesv1Contact": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneExtension": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "vbcUserId": {
          "type": "string"
        },
        "deleted": {
          "type": "string"
        },
        "deletedDate": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead\n Salestool contact - The new contact object is available in the v2 APIs"
    },
    "salesv1GetMultiCampaignsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "campaignIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "salesv1GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1SalesCampaign"
          }
        }
      }
    },
    "salesv1LookupCampaignsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "focus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "string",
          "format": "int64"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "searchTerm": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "salesv1LookupCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1SalesCampaign"
          }
        }
      }
    },
    "salesv1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      },
      "title": "To provide options for the paged request"
    },
    "salesv1SalesCampaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "campaignStatus": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1ScheduleStep"
          }
        }
      }
    },
    "salesv1Salesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "title": "Refers to the iam user.User"
        },
        "countryCode": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "photoUrlHttps": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "jobTitle": {
          "type": "string"
        },
        "isSalesManager": {
          "type": "boolean"
        },
        "meetingBookingUrl": {
          "type": "string"
        }
      },
      "title": "Deprecated: Define your salesperson RPCs in v2 and use the v2 salesperson"
    },
    "salesv1ScheduleStep": {
      "type": "object",
      "properties": {
        "stepType": {
          "type": "string"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "salesv2beta1AddContactToCampaignRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "senderUnifiedUserId": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesv2beta1AddContactToCampaignRequestRecipient"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "salesv2beta1AddContactToCampaignRequestRecipient": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "salesv2beta1Business": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "salesv2beta1Contact": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneExtension": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "phoneNumberCountry": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "salesv2beta1GetMultiCampaignsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "campaignIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "salesv2beta1GetMultiCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1SalesCampaign"
          }
        }
      }
    },
    "salesv2beta1LookupCampaignsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "focus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "string",
          "format": "int64"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "searchTerm": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "salesv2beta1LookupCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1SalesCampaign"
          }
        }
      }
    },
    "salesv2beta1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the requested page"
        }
      },
      "title": "paging using cursors"
    },
    "salesv2beta1SalesCampaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "campaignStatus": {
          "type": "string"
        },
        "campaignId": {
          "type": "string"
        },
        "campaignSchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1ScheduleStep"
          }
        }
      }
    },
    "salesv2beta1Salesperson": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unifiedUserId": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "photoUrlHttps": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "salesv2beta1ScheduleStep": {
      "type": "object",
      "properties": {
        "stepType": {
          "type": "string"
        },
        "secondsAfterLastEmail": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "v1ActionCategory": {
      "type": "string",
      "enum": [
        "ACTION_CATEGORY_UNKNOWN",
        "ACTION_CATEGORY_CLICK",
        "ACTION_CATEGORY_VIEW",
        "ACTION_CATEGORY_LINGER",
        "ACTION_CATEGORY_TYPED",
        "ACTION_CATEGORY_PURCHASED",
        "ACTION_CATEGORY_ADDED_TO_CART"
      ],
      "default": "ACTION_CATEGORY_UNKNOWN"
    },
    "v1Archived": {
      "type": "string",
      "enum": [
        "ARCHIVED_ANY",
        "ARCHIVED_YES",
        "ARCHIVED_NO"
      ],
      "default": "ARCHIVED_ANY"
    },
    "v1AssignSalesTaskRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "salespersonUserId": {
          "type": "string"
        }
      }
    },
    "v1Attachment": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "thumbnailUrl": {
          "type": "string"
        }
      }
    },
    "v1AutoAssignCriteria": {
      "type": "object",
      "properties": {
        "locationCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaLocationCriteria"
        },
        "categoryCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaCategoryCriteria"
        },
        "tagCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaTagCriteria"
        },
        "conversionPointCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaConversionPointCriteria"
        },
        "accountOriginCriteria": {
          "$ref": "#/definitions/AutoAssignCriteriaAccountOriginCriteria"
        }
      }
    },
    "v1AutoAssignRule": {
      "type": "object",
      "properties": {
        "criteria": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignCriteria"
          },
          "description": "The criteria that defines what accounts match this rule.\nMore than one criteria can be defined.\nThe account must match all or any of them to be a match for the rule, depending on the criteria match type."
        },
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The salespeople that are eligible to be assigned accounts that meet the criteria."
        },
        "criteriaMatchType": {
          "$ref": "#/definitions/v1CriteriaMatchType",
          "description": "Controls whether we must match all ot any of the criteria, default behavior is to match all criteria."
        },
        "campaignId": {
          "type": "string",
          "title": "If filled will add to the campaign"
        },
        "appKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignRuleAppKey"
          }
        }
      }
    },
    "v1AutoAssignRuleAppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        }
      }
    },
    "v1BulkUploadUserActionsRequest": {
      "type": "object",
      "properties": {
        "userActions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserActionsRequest"
          },
          "title": "An array of user actions"
        }
      }
    },
    "v1BusinessListRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The namespace the business is in"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The business must be in one of the market ids"
        },
        "contactEmail": {
          "type": "string",
          "title": "The email of the salestool contact to filter businesses by"
        }
      }
    },
    "v1BusinessListResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BusinessListResponseSalestoolBusiness"
          }
        }
      }
    },
    "v1BusinessPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1BusinessSearchFilters": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "salesStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "salesAction": {
          "type": "string"
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "archived": {
          "$ref": "#/definitions/v1Archived"
        },
        "accountTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "businessCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onCampaign": {
          "$ref": "#/definitions/v1Campaign"
        },
        "snapshotSent": {
          "$ref": "#/definitions/v1Snapshot"
        },
        "query": {
          "type": "string"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "goal": {
          "type": "string"
        },
        "trainingPriorities": {
          "type": "string"
        },
        "customFieldPartnerId": {
          "type": "string",
          "description": "DEPRECATED. Will no longer function."
        },
        "lifecycleStage": {
          "$ref": "#/definitions/v1LifecycleStage"
        }
      }
    },
    "v1BusinessSearchRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/v1BusinessSearchFilters"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        },
        "sortOptions": {
          "$ref": "#/definitions/v1BusinessSearchSortOptions"
        }
      }
    },
    "v1BusinessSearchResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Business"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1BusinessPagedResponseMetadata"
        }
      }
    },
    "v1BusinessSearchSortOptions": {
      "type": "object",
      "properties": {
        "sortKey": {
          "type": "string"
        },
        "sortAscending": {
          "type": "boolean"
        }
      }
    },
    "v1Campaign": {
      "type": "string",
      "enum": [
        "CAMPAIGN_ANY",
        "CAMPAIGN_ON",
        "CAMPAIGN_OFF"
      ],
      "default": "CAMPAIGN_ANY"
    },
    "v1ContactCreateRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The primary phone number of the contact as entered by the user.\nIt may include the extension when a separate field is not used for user input"
        },
        "phoneNumberCountry": {
          "type": "string",
          "description": "An optional 2 character country code used to aid in parsing the raw primary phone number."
        },
        "phoneExtension": {
          "type": "string",
          "title": "A local addition to the phone number that is dialed after a connection has been established"
        },
        "notes": {
          "type": "string",
          "title": "Notes recorded in relation to the contact"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v1ContactCreateResponse": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v1Conversation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "type": "string"
        },
        "fromEmail": {
          "type": "string"
        },
        "toEmails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ticketId": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          }
        }
      }
    },
    "v1CreateBusinessActivityRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string"
        },
        "activityType": {
          "type": "string"
        },
        "activityDetail": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "doNotSendEmail": {
          "type": "boolean"
        }
      }
    },
    "v1CreateOrUpdateAutoAssignConfigRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The unique partner ID."
        },
        "marketId": {
          "type": "string",
          "description": "The unique market ID."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignRule"
          },
          "description": "The rules the define which accounts get assigned to which salespeople.\nThese rules will be checked, in order, against an account using the rule's criteria, and the first matching rule (if any) is applicable."
        }
      }
    },
    "v1CreateSalesActivityRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        },
        "submittedBy": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "customActionName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "v1CreateSalesActivityResponse": {
      "type": "object",
      "properties": {
        "salesActivity": {
          "$ref": "#/definitions/v1SalesActivity"
        }
      }
    },
    "v1CreateSalesTaskRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CreateSalesTaskResponse": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskNamespace": {
          "type": "string"
        }
      }
    },
    "v1CriteriaMatchType": {
      "type": "string",
      "enum": [
        "CRITERIA_MATCH_TYPE_ALL",
        "CRITERIA_MATCH_TYPE_ANY"
      ],
      "default": "CRITERIA_MATCH_TYPE_ALL",
      "description": " - CRITERIA_MATCH_TYPE_ALL: Accounts matching all of the criteria will match this rule.\n - CRITERIA_MATCH_TYPE_ANY: Accounts matching any of the criteria will match this rule."
    },
    "v1ExternalIdentifierCreateRequest": {
      "type": "object",
      "properties": {
        "externalIdProvider": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "v1ExternalIdentifierGetByInternalIDRequest": {
      "type": "object",
      "properties": {
        "externalIdProvider": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        }
      }
    },
    "v1ExternalIdentifierGetByInternalIDResponse": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        }
      }
    },
    "v1GetAssignedSalespersonForPartnerRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1GetAssignedSalespersonForPartnerResponse": {
      "type": "object",
      "properties": {
        "salesperson": {
          "$ref": "#/definitions/salesv1Salesperson"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1GetAutoAssignConfigRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The unique partner ID."
        },
        "marketId": {
          "type": "string",
          "description": "The unique market ID."
        }
      }
    },
    "v1GetAutoAssignConfigResponse": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "The unique partner ID."
        },
        "marketId": {
          "type": "string",
          "description": "The unique market ID."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AutoAssignRule"
          },
          "description": "The rules the define which accounts get assigned to which salespeople."
        }
      }
    },
    "v1GetConfigurationRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1GetConfigurationResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "title": "freshdesk domain, e.g. mycompany.freshdesk.com"
        },
        "isValid": {
          "type": "boolean",
          "title": "Whether the configuration is valid. We are able to successfully send requests using the existing configuration"
        }
      }
    },
    "v1GetContactsByEmailRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The specific business to request contacts for"
        },
        "email": {
          "type": "string",
          "title": "The salesperson requesting the information"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v1GetContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v1GetMembersRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "title": "The id of the sales team"
        }
      }
    },
    "v1GetMembersResponse": {
      "type": "object",
      "properties": {
        "salesPeople": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          }
        }
      }
    },
    "v1GetMultiSalesActivityRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesActivityKey"
          }
        }
      }
    },
    "v1GetMultiSalesActivityResponse": {
      "type": "object",
      "properties": {
        "salesActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMultiSalesActivityResponseSalesActivityContainer"
          }
        }
      }
    },
    "v1GetMultiSalesTeamRequest": {
      "type": "object",
      "properties": {
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetMultiSalesTeamResponse": {
      "type": "object",
      "properties": {
        "salesTeams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesTeam"
          }
        }
      }
    },
    "v1GetMultiSalespersonRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "partner_id is the namespace the salespeople are in"
        },
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "salesperson_ids are the IAM SubjectIDs of the matching IAM Personas"
        }
      }
    },
    "v1GetMultiSalespersonResponse": {
      "type": "object",
      "properties": {
        "salespersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          },
          "title": "salespersons are the list of sales person information"
        }
      }
    },
    "v1GetSalespersonRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "partner_id is the namespace the salesperson is in"
        },
        "salespersonId": {
          "type": "string",
          "title": "salesperson_id is the IAM SubjectID of the matching IAM Persona"
        },
        "userId": {
          "type": "string",
          "title": "user_id is the IAM UserID the Subject belongs to"
        }
      }
    },
    "v1GetTeamsBySalespersonsRequest": {
      "type": "object",
      "properties": {
        "salespersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The ids of the salespeople whose teams we need"
        }
      }
    },
    "v1GetTeamsBySalespersonsResponse": {
      "type": "object",
      "properties": {
        "teamMapping": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetTeamsBySalespersonsResponseTeamsForSalesperson"
          },
          "title": "The sales teams that the provided members belong to"
        }
      }
    },
    "v1GetUserActionsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group that the action is associated with"
        },
        "cursor": {
          "type": "string",
          "description": "Cursor allows paging of results, the next_cursor returned by the last response is expected."
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "description": "The number of results to return."
        }
      }
    },
    "v1GetZoomMeetingInfoRequest": {
      "type": "object",
      "properties": {
        "meetingId": {
          "type": "string"
        }
      }
    },
    "v1GetZoomMeetingInfoResponse": {
      "type": "object",
      "properties": {
        "zoomMeeting": {
          "$ref": "#/definitions/v1ZoomMeeting"
        }
      }
    },
    "v1LifecycleStage": {
      "type": "string",
      "enum": [
        "LIFECYCLE_STAGE_UNSET",
        "LIFECYCLE_STAGE_LEAD",
        "LIFECYCLE_STAGE_PROSPECT",
        "LIFECYCLE_STAGE_CUSTOMER"
      ],
      "default": "LIFECYCLE_STAGE_UNSET",
      "description": "Where a business is at in the lifecycle stage\nThe account-group domain has the same concept of a lifecycle stage. Adding to this enum\nmost likely means you need to update the one in account-group as well."
    },
    "v1ListSalesTeamsRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/ListSalesTeamsRequestListSalesTeamsFilters"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      }
    },
    "v1ListSalesTeamsResponse": {
      "type": "object",
      "properties": {
        "salesTeams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SalesTeam"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListSalespersonsRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/ListSalespersonsRequestListSalespersonsFilters"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      }
    },
    "v1ListSalespersonsResponse": {
      "type": "object",
      "properties": {
        "salespersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1LookupSalespersonsRequest": {
      "type": "object",
      "properties": {
        "pagingOptions": {
          "$ref": "#/definitions/salesv1PagedRequestOptions"
        },
        "partnerId": {
          "type": "string"
        },
        "searchTerm": {
          "type": "string"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeLastLogin": {
          "type": "boolean"
        }
      }
    },
    "v1LookupSalespersonsResponse": {
      "type": "object",
      "properties": {
        "salespersons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv1Salesperson"
          }
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "pageIndex": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1PartnerSalesDomainRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        }
      }
    },
    "v1PartnerSalesDomainResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        }
      }
    },
    "v1PublishAskQuestionEventRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "vbcUserId": {
          "type": "string"
        }
      }
    },
    "v1PublishClaimAccountEventRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "v1PublishPackageInterestEventRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "vbcUserId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1PublishProductInterestEventRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "vbcUserId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "v1PublishSnapshotOpenEventRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "snapshotId": {
          "type": "string"
        }
      }
    },
    "v1RequestSubscriptionChangeRequest": {
      "type": "object",
      "properties": {
        "businessId": {
          "type": "string",
          "title": "The id of the business that is making the request to change subscription"
        },
        "message": {
          "type": "string",
          "title": "The message from the business to be sent, requesting the change"
        },
        "phoneNumber": {
          "type": "string",
          "title": "The phone number to be contacted about the subscription change"
        },
        "name": {
          "type": "string",
          "title": "The person to contact about the subscription change"
        }
      }
    },
    "v1SalesActivity": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v1SalesActivityKey"
        },
        "opportunityId": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "salesStatus": {
          "type": "string"
        },
        "previousSalesStatus": {
          "type": "string"
        },
        "salespersonAction": {
          "type": "string"
        },
        "customActionName": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productPrice": {
          "type": "number",
          "format": "double"
        },
        "connected": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "closedLostReason": {
          "type": "string"
        },
        "audioKey": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "lastEdited": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "opportunityName": {
          "type": "string"
        },
        "salesPersonName": {
          "type": "string"
        }
      }
    },
    "v1SalesActivityKey": {
      "type": "object",
      "properties": {
        "salesActivityId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        }
      }
    },
    "v1SalesTeam": {
      "type": "object",
      "properties": {
        "teamName": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SearchTicketsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1SearchTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Ticket"
          }
        }
      }
    },
    "v1SendResetPasswordEmailRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "salespersonId": {
          "type": "string"
        }
      }
    },
    "v1SetConfigurationRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "domain": {
          "type": "string",
          "title": "freshdesk domain, e.g. mycompany.freshdesk.com"
        },
        "apiKey": {
          "type": "string",
          "title": "Api token from freshdesk users account"
        }
      }
    },
    "v1Snapshot": {
      "type": "string",
      "enum": [
        "SNAPSHOT_ANY",
        "SNAPSHOT_SENT",
        "SNAPSHOT_NOT_SENT"
      ],
      "default": "SNAPSHOT_ANY"
    },
    "v1StoreZoomMeetingInfoRequest": {
      "type": "object",
      "properties": {
        "meetingId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1TagMatchType": {
      "type": "string",
      "enum": [
        "TAG_MATCH_TYPE_ALL",
        "TAG_MATCH_TYPE_ANY"
      ],
      "default": "TAG_MATCH_TYPE_ALL",
      "description": " - TAG_MATCH_TYPE_ALL: Accounts containing all of the tags will match this rule.\n - TAG_MATCH_TYPE_ANY: Accounts containing any of the tags will match this rule."
    },
    "v1Ticket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "requested": {
          "type": "string",
          "format": "date-time"
        },
        "requesterId": {
          "type": "string",
          "format": "int64"
        },
        "responderId": {
          "type": "string",
          "format": "int64"
        },
        "subject": {
          "type": "string"
        },
        "statusId": {
          "type": "string",
          "format": "int64"
        },
        "sourceId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1TicketPriority": {
      "type": "string",
      "enum": [
        "TICKET_PRIORITY_UNSET",
        "TICKET_PRIORITY_LOW",
        "TICKET_PRIORITY_MEDIUM",
        "TICKET_PRIORITY_HIGH",
        "TICKET_PRIORITY_URGENT"
      ],
      "default": "TICKET_PRIORITY_UNSET"
    },
    "v1UpdatePartnerSalesDomainRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      }
    },
    "v1UpdateTeamNameRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "newTeamName": {
          "type": "string"
        }
      }
    },
    "v1UploadUserActionForCustomerIDRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "title": "The customer ID that the action is associated with"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner ID that the customer ID belongs to"
        },
        "category": {
          "$ref": "#/definitions/v1ActionCategory",
          "title": "The category that the action is included in"
        },
        "description": {
          "type": "string",
          "title": "The description of the event that occurred"
        }
      }
    },
    "v1UserAction": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The account group that the action is associated with"
        },
        "category": {
          "$ref": "#/definitions/v1ActionCategory",
          "title": "The category that the action is included in"
        },
        "description": {
          "type": "string",
          "title": "The description of the event that occurred"
        }
      }
    },
    "v1UserActionsPagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "Total results found by the operation"
        }
      },
      "title": "Contains metadata about the paged response"
    },
    "v1UserActionsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "The account group that the action is associated with"
        },
        "category": {
          "$ref": "#/definitions/v1ActionCategory",
          "title": "The category that the action is included in"
        },
        "description": {
          "type": "string",
          "title": "The description of the event that occurred"
        }
      }
    },
    "v1UserActionsResponse": {
      "type": "object",
      "properties": {
        "userActions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserAction"
          },
          "title": "A collection of UserActions returned"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1UserActionsPagedResponseMetadata",
          "title": "Contains paging data returned from the query"
        }
      }
    },
    "v1ViewTicketIncludeFields": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "boolean"
        },
        "requester": {
          "type": "boolean"
        },
        "company": {
          "type": "boolean"
        },
        "stats": {
          "type": "boolean"
        }
      }
    },
    "v1ViewTicketRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "ticketId": {
          "type": "string",
          "format": "int64"
        },
        "includeFields": {
          "$ref": "#/definitions/v1ViewTicketIncludeFields"
        }
      }
    },
    "v1ViewTicketResponse": {
      "type": "object",
      "properties": {
        "baseTicket": {
          "$ref": "#/definitions/v1Ticket"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conversations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Conversation"
          }
        },
        "priority": {
          "$ref": "#/definitions/v1TicketPriority"
        },
        "description": {
          "type": "string"
        },
        "dueBy": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ZoomMeeting": {
      "type": "object",
      "properties": {
        "meetingId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v2beta1AccountLatestSalesActivity": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "lastActivityDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2beta1ActionList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accounts": {
          "type": "string",
          "format": "int64"
        },
        "inProgress": {
          "type": "boolean"
        }
      }
    },
    "v2beta1AddAccountsToActionListRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "listName": {
          "type": "string"
        },
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2beta1AddAccountsToActionListResponse": {
      "type": "object",
      "properties": {
        "actionListId": {
          "type": "string",
          "title": "the ID of the action list that was appended or created"
        }
      }
    },
    "v2beta1CancellationRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "cancellationRequestId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "lineItemId": {
          "type": "string"
        },
        "requestingUserId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2beta1CancellationRequestStatus"
        },
        "reason": {
          "$ref": "#/definitions/v2beta1CancellationRequestReason"
        },
        "message": {
          "type": "string"
        },
        "requestCreatedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2beta1CancellationRequestReason": {
      "type": "string",
      "enum": [
        "CANCELLATION_REQUEST_REASON_UNSET",
        "CANCELLATION_REQUEST_REASON_OTHER"
      ],
      "default": "CANCELLATION_REQUEST_REASON_UNSET"
    },
    "v2beta1CancellationRequestStatus": {
      "type": "string",
      "enum": [
        "CANCELLATION_REQUEST_STATUS_UNSET",
        "CANCELLATION_REQUEST_STATUS_REQUESTED",
        "CANCELLATION_REQUEST_STATUS_RESOLVED",
        "CANCELLATION_REQUEST_STATUS_DECLINED"
      ],
      "default": "CANCELLATION_REQUEST_STATUS_UNSET"
    },
    "v2beta1CreateContactRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneNumberCountry": {
          "type": "string"
        },
        "phoneNumberExtension": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1CreateContactResponse": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/salesv2beta1Contact"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1CreateRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "lineItemId": {
          "type": "string"
        },
        "requestingUserId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2beta1CancellationRequestStatus"
        },
        "reason": {
          "$ref": "#/definitions/v2beta1CancellationRequestReason"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v2beta1CreateSalespersonForUserRequest": {
      "type": "object",
      "properties": {
        "authCheckOnly": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "isSalesManager": {
          "type": "boolean"
        }
      }
    },
    "v2beta1CreateSalespersonForUserResponse": {
      "type": "object"
    },
    "v2beta1DeleteContactRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1EffortAggregate": {
      "type": "object",
      "properties": {
        "efforts": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "title": "Number of sales efforts mapped to the effort type"
    },
    "v2beta1GetAccountPrimaryContactRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetAccountPrimaryContactResponse": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetContactByIDRequest": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetContactResponse": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/salesv2beta1Contact"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetContactsForAccountsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetContactsForAccountsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1GetMultiOpportunityEffortsRequest": {
      "type": "object",
      "properties": {
        "opportunityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2beta1GetMultiOpportunityEffortsResponse": {
      "type": "object",
      "properties": {
        "opportunityEfforts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2beta1EffortAggregate"
          },
          "title": "Effort aggregates mapped to the opportunity"
        }
      }
    },
    "v2beta1GetSalesActivityForAccountsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2beta1GetSalesActivityForAccountsResponse": {
      "type": "object",
      "properties": {
        "accountsLatestSalesActivity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1AccountLatestSalesActivity"
          }
        }
      }
    },
    "v2beta1GetSalespersonByEmailRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID of the salesperson"
        },
        "email": {
          "type": "string",
          "title": "Email of the salesperson"
        },
        "marketId": {
          "type": "string",
          "title": "Market ID of the salesperson"
        }
      }
    },
    "v2beta1GetSalespersonByEmailResponse": {
      "type": "object",
      "properties": {
        "salesperson": {
          "$ref": "#/definitions/salesv2beta1Salesperson"
        }
      }
    },
    "v2beta1GetSalespersonByUserIdRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "Partner ID of the salesperson"
        },
        "userId": {
          "type": "string",
          "title": "User ID or Subject ID of the sales person"
        }
      }
    },
    "v2beta1GetSalespersonByUserIdResponse": {
      "type": "object",
      "properties": {
        "salesperson": {
          "$ref": "#/definitions/salesv2beta1Salesperson"
        }
      }
    },
    "v2beta1IsConfigValidRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v2beta1IsConfigValidResponse": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        }
      }
    },
    "v2beta1ListActionListsRequest": {
      "type": "object",
      "properties": {
        "pagingOptions": {
          "$ref": "#/definitions/v2beta1PageIndexedRequestOptions"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "searchString": {
          "type": "string"
        }
      }
    },
    "v2beta1ListActionListsResponse": {
      "type": "object",
      "properties": {
        "actionLists": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1ActionList"
          }
        },
        "nextPage": {
          "type": "string",
          "format": "int64"
        },
        "totalActionListsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v2beta1ListContactsForBusinessRequest": {
      "type": "object",
      "properties": {
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv2beta1PagedRequestOptions"
        },
        "accountGroupId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListContactsForBusinessResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListContactsForEmailRequest": {
      "type": "object",
      "properties": {
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv2beta1PagedRequestOptions"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListContactsForPhoneNumberRequest": {
      "type": "object",
      "properties": {
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "Field mask to return request fields; must specify which fields to return"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv2beta1PagedRequestOptions"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Phone number to match agasint"
        },
        "options": {
          "$ref": "#/definitions/ListContactsForPhoneNumberRequestListOptions"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Contact"
          }
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1ListRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v2beta1ListResponse": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1CancellationRequest"
          }
        }
      }
    },
    "v2beta1PageIndexedRequestOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the requested page"
        },
        "pageIndex": {
          "type": "string",
          "format": "int64",
          "title": "page_index specifies the page number of the first result to return"
        }
      },
      "title": "paging using page size+page index"
    },
    "v2beta1ResendUserWelcomeEmailRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "subjectId": {
          "type": "string"
        }
      }
    },
    "v2beta1ResendUserWelcomeEmailResponse": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "string"
        }
      }
    },
    "v2beta1SearchBusinessesByContactEmailRequest": {
      "type": "object",
      "properties": {
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner the business is in"
        },
        "marketId": {
          "type": "string",
          "title": "The market the business is in"
        },
        "contactEmailQuery": {
          "type": "string",
          "title": "The email of the contact to filter businesses by"
        },
        "assignedUserId": {
          "type": "string",
          "title": "The user assigned to the business"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1SearchRequest": {
      "type": "object",
      "properties": {
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "pagingOptions": {
          "$ref": "#/definitions/salesv2beta1PagedRequestOptions"
        }
      }
    },
    "v2beta1SearchResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/salesv2beta1Business"
          }
        }
      }
    },
    "v2beta1SendPasswordResetEmailRequest": {
      "type": "object",
      "properties": {
        "salesPersonId": {
          "type": "string",
          "title": "ID for the salesperson who will receive the email"
        },
        "usePlatformDefaultDomain": {
          "type": "boolean",
          "description": "When true, the message will be sent using a pre-authorized gray-labelled\ndomain that the platform is authorized to use for sending emails."
        },
        "partnerId": {
          "type": "string",
          "title": "ID for the partner who is sending the email"
        }
      }
    },
    "v2beta1SetAccountPrimaryContactRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1UpdateContactRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesv2beta1Contact",
          "title": "The contact object to be modified"
        },
        "mutatorMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "title": "The fields to be modified, leave empty if all fields should be modified"
        }
      },
      "title": "Deprecated: use CRM contacts instead"
    },
    "v2beta1UpdateStatusRequest": {
      "type": "object",
      "properties": {
        "cancellationRequestId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v2beta1CancellationRequestStatus"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
