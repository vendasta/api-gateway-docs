{
  "swagger": "2.0",
  "info": {
    "title": "sales_opportunities/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "OpportunityScoring"
    },
    {
      "name": "SalesPipelines"
    },
    {
      "name": "SalesPipelinesAdmin"
    },
    {
      "name": "SalesOpportunities"
    },
    {
      "name": "Goals"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/salesopportunities.v1.Goals/Archive": {
      "post": {
        "summary": "Archive a goal",
        "operationId": "Goals_Archive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ArchiveGoalRequest"
            }
          }
        ],
        "tags": [
          "Goals"
        ]
      }
    },
    "/salesopportunities.v1.Goals/Create": {
      "post": {
        "summary": "Creates a goal",
        "operationId": "Goals_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GoalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateGoalRequest"
            }
          }
        ],
        "tags": [
          "Goals"
        ]
      }
    },
    "/salesopportunities.v1.Goals/Delete": {
      "post": {
        "summary": "Delete a goal",
        "operationId": "Goals_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteGoalRequest"
            }
          }
        ],
        "tags": [
          "Goals"
        ]
      }
    },
    "/salesopportunities.v1.Goals/Get": {
      "post": {
        "summary": "Get a goal",
        "operationId": "Goals_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GoalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoalRequest"
            }
          }
        ],
        "tags": [
          "Goals"
        ]
      }
    },
    "/salesopportunities.v1.Goals/List": {
      "post": {
        "summary": "List all goals for a partner",
        "operationId": "Goals_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGoalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListGoalsRequest"
            }
          }
        ],
        "tags": [
          "Goals"
        ]
      }
    },
    "/salesopportunities.v1.Goals/Update": {
      "post": {
        "summary": "Updates a goal",
        "operationId": "Goals_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GoalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateGoalRequest"
            }
          }
        ],
        "tags": [
          "Goals"
        ]
      }
    },
    "/salesopportunities.v1.OpportunityScoring/GetMEDDICScores": {
      "post": {
        "operationId": "OpportunityScoring_GetMEDDICScores",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMEDDICScoresResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMEDDICScoresRequest"
            }
          }
        ],
        "tags": [
          "OpportunityScoring"
        ]
      }
    },
    "/salesopportunities.v1.OpportunityScoring/GetMEDDICSections": {
      "post": {
        "operationId": "OpportunityScoring_GetMEDDICSections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMEDDICSectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetMEDDICSectionsRequest"
            }
          }
        ],
        "tags": [
          "OpportunityScoring"
        ]
      }
    },
    "/salesopportunities.v1.OpportunityScoring/UpdateMEDDICNotesForOpportunity": {
      "post": {
        "operationId": "OpportunityScoring_UpdateMEDDICNotesForOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMEDDICNotesRequest"
            }
          }
        ],
        "tags": [
          "OpportunityScoring"
        ]
      }
    },
    "/salesopportunities.v1.OpportunityScoring/UpdateMEDDICScoringForOpportunity": {
      "post": {
        "operationId": "OpportunityScoring_UpdateMEDDICScoringForOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMEDDICScoringRequest"
            }
          }
        ],
        "tags": [
          "OpportunityScoring"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/AddAttachmentToOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_AddAttachmentToOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddAttachmentToOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/AddOpportunityPackages": {
      "post": {
        "operationId": "SalesOpportunities_AddOpportunityPackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddOpportunityPackagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddOpportunityPackagesRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/CloseAsLostOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_CloseAsLostOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CloseAsLostOpportunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CloseAsLostOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/CloseAsWonOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_CloseAsWonOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CloseAsWonOpportunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CloseAsWonOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/CreateOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_CreateOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOpportunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/DeleteOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_DeleteOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/GetOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_GetOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/GetOpportunityByIdempotencyKey": {
      "post": {
        "operationId": "SalesOpportunities_GetOpportunityByIdempotencyKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityByIdempotencyKeyRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/GetOpportunityCountByAccountGroups": {
      "post": {
        "operationId": "SalesOpportunities_GetOpportunityCountByAccountGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityCountByAccountGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityCountByAccountGroupsRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/GetOpportunityValueByAccountGroups": {
      "post": {
        "operationId": "SalesOpportunities_GetOpportunityValueByAccountGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityValueByAccountGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOpportunityValueByAccountGroupsRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/GetSalespersonStats": {
      "post": {
        "operationId": "SalesOpportunities_GetSalespersonStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SalespersonStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SalespersonStatsRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/GetTagsForOpportunities": {
      "post": {
        "operationId": "SalesOpportunities_GetTagsForOpportunities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTagsForOpportunitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTagsForOpportunitiesRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/InitiateOpportunityExport": {
      "post": {
        "summary": "InitiateOpportunityExport creates a downloadable CSV of ALL opportunities",
        "operationId": "SalesOpportunities_InitiateOpportunityExport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitiateOpportunityExportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InitiateOpportunityExportRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/ListOpportunities": {
      "post": {
        "operationId": "SalesOpportunities_ListOpportunities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOpportunitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "List opportunities. Paged.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListOpportunitiesRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/RemoveOpportunityPackages": {
      "post": {
        "operationId": "SalesOpportunities_RemoveOpportunityPackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveOpportunityPackagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveOpportunityPackagesRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/ReopenClosedOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_ReopenClosedOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReopenClosedOpportunityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateClosedDateForOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_UpdateClosedDateForOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateClosedDateRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateLastActivityDate": {
      "post": {
        "operationId": "SalesOpportunities_UpdateLastActivityDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateLastActivityDateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateLastActivityDateRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateLastConnectedDate": {
      "post": {
        "operationId": "SalesOpportunities_UpdateLastConnectedDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateLastConnectedDateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateLastConnectedDateRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateLineItemsForOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_UpdateLineItemsForOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateLineItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateLineItemsRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityDuration": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityDuration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityDurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityDurationRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityExpectedCloseDate": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityExpectedCloseDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityExpectedCloseDateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityExpectedCloseDateRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityMarket": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityMarket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityMarketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityMarketRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityName": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityNameRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityNotes": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityNotes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityNotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityNotesRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPackage": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityPackage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityPackageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityPackageRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPackageRevenue": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityPackageRevenue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityPackageRevenueResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityPackageRevenueRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPipeline": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityPipelineRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPipelineAndProbability": {
      "post": {
        "summary": "UpdateOpportunityPipelineAndProbability will update both the pipline and probability in one commit",
        "operationId": "SalesOpportunities_UpdateOpportunityPipelineAndProbability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityPipelineAndProbabilityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityProbability": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityProbability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityProbabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityProbabilityRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunitySalesperson": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunitySalesperson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunitySalespersonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunitySalespersonRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityTags": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityTagsRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityType": {
      "post": {
        "operationId": "SalesOpportunities_UpdateOpportunityType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOpportunityTypeRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesOpportunities/UpdateSubscriberUserIDsForOpportunity": {
      "post": {
        "operationId": "SalesOpportunities_UpdateSubscriberUserIDsForOpportunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSubscriberUserIDsRequest"
            }
          }
        ],
        "tags": [
          "SalesOpportunities"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/AddPipelineStages": {
      "post": {
        "operationId": "SalesPipelines_AddPipelineStages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddPipelineStagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddPipelineStagesRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/CreatePipeline": {
      "post": {
        "operationId": "SalesPipelines_CreatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePipelineRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/DeletePipeline": {
      "post": {
        "operationId": "SalesPipelines_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeletePipelineRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/ListPipelines": {
      "post": {
        "operationId": "SalesPipelines_ListPipelines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPipelinesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPipelinesRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/RemovePipelineStages": {
      "post": {
        "operationId": "SalesPipelines_RemovePipelineStages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemovePipelineStagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemovePipelineStagesRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/SetPipelineStages": {
      "post": {
        "operationId": "SalesPipelines_SetPipelineStages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SetPipelineStagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetPipelineStagesRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/UpdatePipelineName": {
      "post": {
        "operationId": "SalesPipelines_UpdatePipelineName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineNameRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/UpdatePipelineStageName": {
      "post": {
        "operationId": "SalesPipelines_UpdatePipelineStageName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineStageNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineStageNameRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelines/UpdatePipelineStageProbability": {
      "post": {
        "operationId": "SalesPipelines_UpdatePipelineStageProbability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineStageProbabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePipelineStageProbabilityRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelines"
        ]
      }
    },
    "/salesopportunities.v1.SalesPipelinesAdmin/RestoreDeletedPipeline": {
      "post": {
        "operationId": "SalesPipelinesAdmin_RestoreDeletedPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RestoreDeletedPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RestoreDeletedPipelineRequest"
            }
          }
        ],
        "tags": [
          "SalesPipelinesAdmin"
        ]
      }
    }
  },
  "definitions": {
    "AddPipelineStagesRequestAddPipelineStage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Display name of the pipeline stage"
        },
        "probability": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Pipeline stage information for the pipeline"
    },
    "CreateOpportunityRequestCreateOpportunityPackage": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string",
          "title": "Unique ID of package"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "Quantity of package"
        }
      },
      "title": "Package information for the opportunity"
    },
    "CreatePipelineRequestCreatePipelineStage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Display name of the pipeline stage"
        },
        "probability": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Pipeline stage information for the pipeline"
    },
    "LineItemAppKey": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        },
        "packageId": {
          "type": "string",
          "description": "A package id is optional, it is used to group line items together in a package."
        },
        "packageInstanceId": {
          "type": "string",
          "description": "A package instance id keeps track of the package instance that a line item belongs to. For example, if the customer purchases two packages that contain the same product,\nthis will identify which package the product belongs to.\n\nThis must be provided if a package id is provided, and should not be provided if there is no package id provided. The ID should be a uuid."
        }
      }
    },
    "ScoringScore": {
      "type": "object",
      "properties": {
        "sectionId": {
          "type": "string",
          "title": "Deprecated: use section instead"
        },
        "scoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "notes": {
          "type": "string"
        },
        "section": {
          "$ref": "#/definitions/v1MEDDICSection"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "salesopportunitiesv1SortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING",
      "description": "The directions that a result set can be sorted in."
    },
    "v1AddAttachmentToOpportunityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the attachment"
        },
        "url": {
          "type": "string",
          "title": "The url to the attachment"
        }
      }
    },
    "v1AddOpportunityPackagesRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1AddOpportunityPackagesResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1AddPipelineStagesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AddPipelineStagesRequestAddPipelineStage"
          }
        }
      }
    },
    "v1AddPipelineStagesResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1ArchiveGoalRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The goal id"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner namespace for this goal"
        }
      }
    },
    "v1Attachment": {
      "type": "object",
      "properties": {
        "attachmentId": {
          "type": "string",
          "title": "The id of the attachment"
        },
        "name": {
          "type": "string",
          "title": "The name of the attachment"
        },
        "url": {
          "type": "string",
          "title": "The url to the attachment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The date the attachment was created"
        }
      },
      "title": "Represents an attachment on an opportunity"
    },
    "v1BillingPeriod": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of the billing period"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of the billing period"
        },
        "duration": {
          "$ref": "#/definitions/v1Duration",
          "title": "Value representing the duration to bill for (use instead of end date)"
        }
      },
      "title": "The Time frame to bill for"
    },
    "v1CSVExports": {
      "type": "object",
      "properties": {
        "opportunities": {
          "type": "boolean"
        },
        "opportunityHistory": {
          "type": "boolean"
        }
      }
    },
    "v1CSVFormatOptions": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        }
      }
    },
    "v1ClientOrigin": {
      "type": "string",
      "enum": [
        "CLIENT_ORIGIN_UNSET",
        "CLIENT_ORIGIN_SALES_CENTER",
        "CLIENT_ORIGIN_PARTNER_CENTER"
      ],
      "default": "CLIENT_ORIGIN_UNSET"
    },
    "v1CloseAsLostOpportunityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to close"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who closed this opportunity"
        },
        "reason": {
          "$ref": "#/definitions/v1ClosedLostReasonOption",
          "title": "Reason why this opportunity was lost"
        },
        "closeDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date/time that the opportunity was lost"
        },
        "notes": {
          "type": "string",
          "title": "Notes to be passed to create sales activity for closed opportunity"
        }
      },
      "title": "Move an opportunity into a closed lost status in the pipeline"
    },
    "v1CloseAsLostOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity",
          "title": "The opportunity's new state"
        }
      },
      "title": "Response to a request to close an opportunity which has been lost"
    },
    "v1CloseAsWonOpportunityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to close"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who closed this opportunity"
        },
        "notes": {
          "type": "string",
          "title": "Notes to be passed to create sales activity for closed opportunity"
        }
      },
      "title": "Move an opportunity into a closed won status in the pipeline"
    },
    "v1CloseAsWonOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity",
          "title": "The opportunity's new state"
        }
      },
      "title": "Response to a request to close an opportunity which has been won"
    },
    "v1ClosedLostReason": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v1ClosedLostReasonOption",
          "title": "The reason the opportunity was lost"
        }
      },
      "title": "A message containing the reason why the opportunity was lost"
    },
    "v1ClosedLostReasonOption": {
      "type": "string",
      "enum": [
        "PRICE",
        "NO_BUDGET",
        "LOST_TO_COMPETITOR",
        "NOT_READY",
        "OTHER"
      ],
      "default": "PRICE",
      "title": "Reasons an opportunity was lost"
    },
    "v1Cost": {
      "type": "object",
      "properties": {
        "customPrice": {
          "type": "string",
          "format": "int64",
          "title": "The custom price of the order item. Can only be changed if the application supports custom pricing"
        }
      },
      "title": "Cost represents the wholesale cost of an order"
    },
    "v1CreateGoalRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner namespace for this goal"
        },
        "name": {
          "type": "string",
          "title": "The name of this goal"
        },
        "contributorId": {
          "type": "string",
          "title": "The contributor to this goal"
        },
        "contributorType": {
          "type": "string",
          "title": "The type of the contributor (i.e. sales-person, sales-team)"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The pipelines contributing to this goal"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this goal"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this goal"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Target"
          },
          "title": "The targets for this goal"
        },
        "goalType": {
          "$ref": "#/definitions/v1GoalType",
          "title": "The type of goal (i.e. revenue, call, email)"
        }
      }
    },
    "v1CreateOpportunityRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "ID of account group that opportunity belongs to"
        },
        "salesPersonId": {
          "type": "string",
          "title": "ID of sales person that is assigned to the opportunity"
        },
        "name": {
          "type": "string",
          "title": "Name of an opportunity"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of package ids (deprecated: Use packages instead)"
        },
        "expectedCloseDate": {
          "type": "string",
          "format": "date-time",
          "title": "Expected close date timestamp"
        },
        "probability": {
          "type": "number",
          "format": "double",
          "title": "The estimated probability of close winning an opportunity"
        },
        "notes": {
          "type": "string",
          "title": "Opportunity notes"
        },
        "marketId": {
          "type": "string",
          "title": "ID of market that opportunity belongs to"
        },
        "partnerId": {
          "type": "string",
          "title": "ID of partner that opportunity belongs to"
        },
        "packages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreateOpportunityRequestCreateOpportunityPackage"
          },
          "title": "List of packages"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of tags"
        },
        "expectedContractDuration": {
          "$ref": "#/definitions/v1Duration",
          "description": "Expected contract duration if opportunity turns into an order."
        },
        "pipelineId": {
          "type": "string",
          "title": "ID of pipeline that opportunity is associated with"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LineItem"
          },
          "title": "Lineitems replace Packages and add the ability to add Products"
        },
        "subscriberUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Subscribers are IAM unified user ids invested in an opportunity"
        },
        "idempotencyKey": {
          "type": "string",
          "title": "A unique key used to prevent request duplication and allows safety when retrying requests"
        },
        "opportunityType": {
          "type": "string",
          "title": "The type of opportunity (i.e. new-business, existing-business etc)"
        }
      },
      "title": "Message containing information to create opportunity"
    },
    "v1CreateOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      },
      "title": "*******************\nOpportunity Responses\n*******************"
    },
    "v1CreatePipelineRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "name": {
          "type": "string",
          "title": "Display name of the pipeline"
        },
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreatePipelineRequestCreatePipelineStage"
          }
        }
      }
    },
    "v1CreatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string"
        }
      }
    },
    "v1Currency": {
      "type": "string",
      "enum": [
        "USD",
        "CAD",
        "EUR",
        "AUD",
        "GBP",
        "NZD",
        "ZAR"
      ],
      "default": "USD",
      "title": "- ZAR: Do not add to this list. If more currencies are required currency_code should be used instead"
    },
    "v1CurrentOpportunityPoint": {
      "type": "object",
      "properties": {
        "day": {
          "type": "string",
          "format": "date-time"
        },
        "openOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "partnerId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1CustomPriceMapping": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "title": "The ID of the product"
        },
        "customPrice": {
          "type": "string",
          "format": "int64",
          "title": "The custom price value of the product"
        }
      },
      "title": "Representing custom prices for variable priced products in a package"
    },
    "v1DateRangeFilter": {
      "type": "object",
      "properties": {
        "beginRange": {
          "type": "string",
          "format": "date-time"
        },
        "endRange": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Begin and end of date range"
    },
    "v1DeleteGoalRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The goal id"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner namespace for this goal"
        }
      }
    },
    "v1DeleteOpportunityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to delete"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who deleted this opportunity"
        }
      }
    },
    "v1DeletePipelineRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        }
      }
    },
    "v1DeletePipelineResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Duration": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64",
          "description": "Value for duration of time of a given operation."
        },
        "duration": {
          "$ref": "#/definitions/v1DurationPeriod",
          "description": "Unit for measuring time."
        }
      }
    },
    "v1DurationPeriod": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "MONTH",
        "YEAR",
        "DAY",
        "WEEK"
      ],
      "default": "UNSPECIFIED"
    },
    "v1Forecasting": {
      "type": "object",
      "properties": {
        "revenueInMonth": {
          "$ref": "#/definitions/v1RevenueInMonth"
        }
      }
    },
    "v1GetGoalRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The goal id"
        }
      }
    },
    "v1GetMEDDICScoresRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "opportunityId": {
          "type": "string"
        }
      }
    },
    "v1GetMEDDICScoresResponse": {
      "type": "object",
      "properties": {
        "scores": {
          "$ref": "#/definitions/v1MEDDICScores"
        }
      }
    },
    "v1GetMEDDICSectionsRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "opportunityId": {
          "type": "string"
        }
      }
    },
    "v1GetMEDDICSectionsResponse": {
      "type": "object",
      "properties": {
        "sections": {
          "$ref": "#/definitions/v1Scoring"
        }
      }
    },
    "v1GetOpportunityByIdempotencyKeyRequest": {
      "type": "object",
      "properties": {
        "idempotencyKey": {
          "type": "string"
        }
      }
    },
    "v1GetOpportunityCountByAccountGroupsRequest": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onlyUnclosed": {
          "type": "boolean"
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      },
      "title": "*******************\nOpportunity Requests\n*******************"
    },
    "v1GetOpportunityCountByAccountGroupsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OpportunityCount"
          }
        }
      }
    },
    "v1GetOpportunityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        }
      }
    },
    "v1GetOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1GetOpportunityValueByAccountGroupsRequest": {
      "type": "object",
      "properties": {
        "accountGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerId": {
          "type": "string"
        },
        "marketId": {
          "type": "string"
        }
      }
    },
    "v1GetOpportunityValueByAccountGroupsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OpportunityValue"
          }
        }
      }
    },
    "v1GetTagsForOpportunitiesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "ID of what partner to get the opportunities for"
        },
        "marketId": {
          "type": "string",
          "title": "ID of what market to get the opportunities for"
        }
      },
      "title": "Get the list of all opportunity tags for a given partner/market"
    },
    "v1GetTagsForOpportunitiesResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Goal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The unique id for this goal"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner namespace for this goal"
        },
        "name": {
          "type": "string",
          "title": "The name of this goal"
        },
        "contributorId": {
          "type": "string",
          "title": "The contributor to this goal (i.e. salesperson_id, salesteam_id)"
        },
        "contributorType": {
          "type": "string",
          "title": "The type of the contributor (i.e. sales-person, sales-team)"
        },
        "type": {
          "$ref": "#/definitions/v1GoalType",
          "title": "The type of this goal (i.e. revenue etc.)"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The pipelines contributing to this goal"
        },
        "interval": {
          "type": "string",
          "title": "The time interval for this goal (i.e. monthly, quarterly, yearly etc.)"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this goal"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this goal"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Target"
          },
          "title": "The targets for this goal"
        },
        "createdBy": {
          "type": "string",
          "title": "The userId who created this goal"
        },
        "status": {
          "type": "string",
          "title": "The status of this goal (i.e. active, archived etc.)"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "The time this goal was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time this goal was last updated"
        },
        "deleted": {
          "type": "string",
          "format": "date-time",
          "title": "The time this goal was deleted"
        }
      }
    },
    "v1GoalResponse": {
      "type": "object",
      "properties": {
        "goal": {
          "$ref": "#/definitions/v1Goal",
          "title": "The resulting goal"
        }
      }
    },
    "v1GoalType": {
      "type": "string",
      "enum": [
        "GOAL_TYPE_UNSPECIFIED",
        "REVENUE",
        "NEW_REVENUE",
        "EXPANSION_REVENUE",
        "EMAIL",
        "CALL",
        "MEETING",
        "OPPORTUNITY"
      ],
      "default": "GOAL_TYPE_UNSPECIFIED",
      "title": "- REVENUE: Won Revenue\n - NEW_REVENUE: Closed Won Revenue (new)\n - EXPANSION_REVENUE: Closed Won Revenue (existing)\n - EMAIL: Emails Sent\n - CALL: Calls Made\n - MEETING: Meetings booked\n - OPPORTUNITY: Opportunities created"
    },
    "v1InitiateOpportunityExportRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The id of the partner to scope the list of opportunities to"
        },
        "marketId": {
          "type": "string",
          "title": "The id of the market to scope the list of opportunities to"
        },
        "filters": {
          "$ref": "#/definitions/v1ListOpportunitiesRequestFilters",
          "title": "Filters used to get list of opportunities"
        },
        "sortOption": {
          "$ref": "#/definitions/v1ListOpportunitiesRequestSortOption",
          "title": "Opportunities list sort option"
        },
        "searchTerm": {
          "type": "string",
          "title": "An arbitrary string to perform full text search across names of opportunities"
        },
        "csvFormatOptions": {
          "$ref": "#/definitions/v1CSVFormatOptions",
          "title": "Format options for CSV"
        },
        "csvExports": {
          "$ref": "#/definitions/v1CSVExports",
          "title": "The export result sets to generate"
        },
        "clientOrigin": {
          "$ref": "#/definitions/v1ClientOrigin",
          "title": "Origin of export request"
        }
      }
    },
    "v1InitiateOpportunityExportResponse": {
      "type": "object",
      "properties": {
        "exportId": {
          "type": "string",
          "title": "The unique identifier for the file generation that can be used to check its status"
        }
      },
      "title": "Defines the response body from InitiateOpportunityExport"
    },
    "v1LineItem": {
      "type": "object",
      "properties": {
        "appKey": {
          "$ref": "#/definitions/LineItemAppKey"
        },
        "packageId": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency",
          "title": "While this is not deprecated, more currencies than the value of the enum are supported. To use those currencies use currency_code instead"
        },
        "initialRevenue": {
          "$ref": "#/definitions/v1Revenue",
          "title": "DEPRECATED: not important now that there is a draft state for sales orders, history of the order should be used instead"
        },
        "currentRevenue": {
          "$ref": "#/definitions/v1Revenue"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "isTrial": {
          "type": "boolean",
          "title": "Only used when AppKey is the identifier"
        },
        "currencyCode": {
          "type": "string",
          "description": "The 3-letter currency code defined in ISO 4217."
        },
        "cost": {
          "$ref": "#/definitions/v1Cost"
        },
        "customPrices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CustomPriceMapping"
          },
          "title": "The custom price mapping for variable priced products in a package in the order"
        },
        "billingPeriod": {
          "$ref": "#/definitions/v1BillingPeriod",
          "title": "The billing period of the line item"
        },
        "autoBillable": {
          "type": "boolean",
          "title": "DEPRECATED: use non_billable instead"
        },
        "nonBillable": {
          "type": "boolean",
          "title": "Indicates whether this line item should be billable or not\nIf true, the item will not be billed"
        },
        "taxRateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The tax rate ids that apply to this line item"
        }
      }
    },
    "v1ListGoalsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner namespace for this goal"
        },
        "pageOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "The page options for this request"
        },
        "filters": {
          "$ref": "#/definitions/v1ListGoalsRequestFilters",
          "title": "The filters for this request"
        },
        "sortOption": {
          "$ref": "#/definitions/v1ListGoalsRequestSortOption",
          "title": "The sort options for this request"
        }
      }
    },
    "v1ListGoalsRequestFilters": {
      "type": "object",
      "properties": {
        "contributorId": {
          "type": "string"
        },
        "contributorType": {
          "type": "string"
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListGoalsRequestSortDirection": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "ASCENDING"
    },
    "v1ListGoalsRequestSortField": {
      "type": "string",
      "enum": [
        "SORT_FIELD_UNSET",
        "SORT_FIELD_CREATED"
      ],
      "default": "SORT_FIELD_UNSET"
    },
    "v1ListGoalsRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1ListGoalsRequestSortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1ListGoalsRequestSortField",
          "title": "Field to sort on"
        }
      }
    },
    "v1ListGoalsResponse": {
      "type": "object",
      "properties": {
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Goal"
          },
          "title": "The resulting goals"
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1ListOpportunitiesRequest": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "id of an account group (deprecated - use filter property account_group_id instead)"
        },
        "cursor": {
          "type": "string",
          "title": "cursor for paging"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page size for paging"
        },
        "salesPersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of sales person ids (deprecated - use filter property sales_person_ids instead)"
        },
        "filters": {
          "$ref": "#/definitions/v1ListOpportunitiesRequestFilters",
          "title": "Filters used to get list of opportunities"
        },
        "sortOption": {
          "$ref": "#/definitions/v1ListOpportunitiesRequestSortOption",
          "title": "Opportunities list sort option"
        },
        "partnerId": {
          "type": "string",
          "title": "The id of the partner to scope the list of opportunities to"
        },
        "marketId": {
          "type": "string",
          "title": "The id of the market to scope the list of opportunities to"
        },
        "searchTerm": {
          "type": "string",
          "title": "An arbitrary string to perform full text search across names of opportunities"
        }
      },
      "description": "List opportunities. Paged."
    },
    "v1ListOpportunitiesRequestFilters": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string",
          "title": "id of an account group (deprecated - use filter property account_group_ids instead)"
        },
        "salesPersonIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of sales person ids"
        },
        "pipelineStages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of pipeline statuses"
        },
        "createdDateFilter": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Create date range filter"
        },
        "expectedCloseDateFilter": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Expected close date range filter"
        },
        "probabilityRangeFilter": {
          "$ref": "#/definitions/v1ProbabilityRangeFilter",
          "title": "Probability range filter"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of package ids"
        },
        "actualCloseDateFilter": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "Actual close date range filter"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Opportunities may have zero-to-many tags that can be used for lookup"
        },
        "pipelineId": {
          "type": "string",
          "title": "Deprecated: use pipeline_ids. The Pipeline ID that the opp is associated with"
        },
        "accountGroupIdsForTag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Deprecated: A list of account group ids for opportunity tag filter"
        },
        "lineItemProductIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of product ids"
        },
        "revenuePeriodFilter": {
          "$ref": "#/definitions/v1RevenuePeriodFilter",
          "title": "Period to retrieve revenue for opportunities (recurring + any initial)"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The Pipeline IDs that the opp is associated with at least one"
        },
        "assignedDate": {
          "$ref": "#/definitions/v1DateRangeFilter",
          "title": "The date that the opportunity was assigned to the current salesperson"
        },
        "opportunityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The types of the opportunities (new-business, existing-business, etc)"
        }
      },
      "title": "Filters to list opportunities based on given filter criterias"
    },
    "v1ListOpportunitiesRequestSortField": {
      "type": "string",
      "enum": [
        "PROJECTED_FIRST_YEAR_VALUE",
        "PROBABILITY",
        "CREATED",
        "EXPECTED_CLOSE",
        "NAME",
        "LAST_ACTIVITY",
        "LAST_CONNECTED",
        "ACTUAL_CLOSE",
        "PIPELINE_STAGE",
        "MEDDIC",
        "ASSIGNED_DATE"
      ],
      "default": "PROJECTED_FIRST_YEAR_VALUE",
      "description": "The field to sort a result set on."
    },
    "v1ListOpportunitiesRequestSortOption": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/salesopportunitiesv1SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1ListOpportunitiesRequestSortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1ListOpportunitiesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Opportunity"
          },
          "title": "List of opportunities"
        },
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        },
        "totalProjectedFirstYearValue": {
          "type": "string",
          "format": "int64",
          "title": "The sum total number of projected first year values for this query across all pages"
        },
        "totalRevenueForRevenuePeriod": {
          "type": "string",
          "format": "int64",
          "title": "The total revenue for the period"
        }
      }
    },
    "v1ListPipelinesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pageOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions",
          "title": "Options for how to page the response for this request"
        }
      }
    },
    "v1ListPipelinesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Pipeline"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata",
          "title": "Metadata about the paging"
        }
      }
    },
    "v1MEDDICScores": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "integer",
          "format": "int64"
        },
        "economicBuyer": {
          "type": "integer",
          "format": "int64"
        },
        "decisionCriteria": {
          "type": "integer",
          "format": "int64"
        },
        "decisionProcess": {
          "type": "integer",
          "format": "int64"
        },
        "identifyPain": {
          "type": "integer",
          "format": "int64"
        },
        "champion": {
          "type": "integer",
          "format": "int64"
        },
        "competition": {
          "type": "integer",
          "format": "int64"
        },
        "paperProcess": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "https://docs.google.com/document/d/1csMxEOXs2IXAz9tBHVTcG7DvCxX9dfAN5HOcztMI2nc/"
    },
    "v1MEDDICSection": {
      "type": "string",
      "enum": [
        "MEDDIC_SECTION_UNDEFINED",
        "MEDDIC_SECTION_METRICS",
        "MEDDIC_SECTION_ECONOMIC_BUYER",
        "MEDDIC_SECTION_DECISION_CRITERIA",
        "MEDDIC_SECTION_DECISION_PROCESS",
        "MEDDIC_SECTION_IDENTIFY_PAIN",
        "MEDDIC_SECTION_CHAMPION_SCORE",
        "MEDDIC_SECTION_COMPETITION",
        "MEDDIC_SECTION_PAPER_PROCESS"
      ],
      "default": "MEDDIC_SECTION_UNDEFINED"
    },
    "v1Opportunity": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string",
          "title": "The sales person the opportunity is assigned to"
        },
        "name": {
          "type": "string"
        },
        "packages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Package"
          }
        },
        "expectedCloseDate": {
          "type": "string",
          "format": "date-time"
        },
        "probability": {
          "type": "number",
          "format": "double"
        },
        "notes": {
          "type": "string"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "projectedFirstYearValue": {
          "type": "string",
          "format": "int64",
          "description": "The projected first year revenue in the smallest common currency unit. This value takes into account one time\npayments and recurring payments that would occur in the first year."
        },
        "probableFirstYearValue": {
          "type": "string",
          "format": "int64",
          "description": "The probable first year value in the smallest common currency unit. Calculated by multiplying the prjected first\nyear value by the probability."
        },
        "pipelineStage": {
          "type": "string",
          "title": "The status of the opportunity (open, closed-won, closed-lost)"
        },
        "isClosed": {
          "type": "boolean"
        },
        "closedLostReason": {
          "$ref": "#/definitions/v1ClosedLostReason",
          "title": "The reason the opportunity was closed lost"
        },
        "actualClosedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date the opportunity was actually closed"
        },
        "lastConnectedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The last date the salesperson connected with the business in relation to this opportunity"
        },
        "lastActivityDate": {
          "type": "string",
          "format": "date-time",
          "title": "The last date the business had activity"
        },
        "reopenedReason": {
          "type": "string",
          "title": "The reason the opportunity was reopened"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "title": "Attachments on the opportunity"
        },
        "expectedContractDuration": {
          "$ref": "#/definitions/v1Duration",
          "title": "Expected contract duration"
        },
        "pipelineId": {
          "type": "string",
          "title": "The id of an opportunity's associated pipeline"
        },
        "canReopen": {
          "type": "boolean",
          "title": "Flag indicating if an opportunity can be reopened"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LineItem"
          },
          "title": "Lineitems replace Packages and add the ability to add Products"
        },
        "scoring": {
          "$ref": "#/definitions/v1Scoring",
          "title": "Used in MEDDIC to set scoring on opportunities"
        },
        "forecasting": {
          "$ref": "#/definitions/v1Forecasting",
          "title": "Provides insights based on the data stored on the opportunity"
        },
        "subscriberUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Subscribers are IAM unified user ids invested in an opportunity"
        },
        "idempotencyKey": {
          "type": "string",
          "title": "Idempotency key to ensure opportunity uniqueness"
        },
        "assignedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The date that the opportunity was assigned to the current salesperson"
        },
        "opportunityType": {
          "type": "string",
          "title": "The type of the opportunity (new-business, existing-business etc)"
        }
      }
    },
    "v1OpportunityCount": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1OpportunityRevenuePeriod": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SELECTED_MONTH"
      ],
      "default": "UNSPECIFIED"
    },
    "v1OpportunityValue": {
      "type": "object",
      "properties": {
        "accountGroupId": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Package": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/v1Currency"
        },
        "initialRevenue": {
          "$ref": "#/definitions/v1Revenue"
        },
        "currentRevenue": {
          "$ref": "#/definitions/v1Revenue"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor can be passed to retrieve the next page of results keyed by the cursor"
        },
        "pageSize": {
          "type": "string",
          "format": "int64",
          "title": "page_size specifies the number of items to return in the next page"
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string",
          "title": "A cursor that can be provided to retrieve the next page of results"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        }
      }
    },
    "v1Pipeline": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string",
          "title": "The unique identifier of a pipeline entity"
        },
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipeline is namespaced in"
        },
        "name": {
          "type": "string",
          "title": "Display name of the pipeline"
        },
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stage"
          }
        }
      }
    },
    "v1PipelineClosePoint": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "format": "date-time"
        },
        "wonOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "lostOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "totalOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "partnerId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1PipelineCreationPoint": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "format": "date-time"
        },
        "createdOpportunities": {
          "type": "integer",
          "format": "int64"
        },
        "partnerId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        }
      }
    },
    "v1ProbabilityRangeFilter": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "maximum": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Minimum and maximum probability range to filter on"
    },
    "v1RemoveOpportunityPackagesRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1RemoveOpportunityPackagesResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1RemovePipelineStagesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        },
        "stageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1RemovePipelineStagesResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1ReopenClosedOpportunityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to reopen"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who reopened the opportunity"
        },
        "reason": {
          "type": "string",
          "title": "Reason for reopening the opportunity"
        }
      }
    },
    "v1RestoreDeletedPipelineRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        }
      }
    },
    "v1RestoreDeletedPipelineResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Revenue": {
      "type": "object",
      "properties": {
        "revenueComponents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RevenueComponent"
          }
        }
      },
      "title": "Revenue represents the retail price of an order"
    },
    "v1RevenueComponent": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64",
          "description": "The value in the smallest common currency unit i.e. cents. Therefore 4000 would represent $40.00."
        },
        "period": {
          "$ref": "#/definitions/v1RevenuePeriod",
          "description": "The frequency this revenue occurs."
        },
        "isStartingRevenue": {
          "type": "boolean",
          "title": "The indication if this is only the starting price or the actual price"
        }
      }
    },
    "v1RevenueInMonth": {
      "type": "object",
      "properties": {
        "initialRevenue": {
          "type": "string",
          "format": "int64"
        },
        "recurringRevenue": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1RevenuePeriod": {
      "type": "string",
      "enum": [
        "ONETIME",
        "DAILY",
        "WEEKLY",
        "BIWEEKLY",
        "MONTHLY",
        "YEARLY"
      ],
      "default": "ONETIME"
    },
    "v1RevenuePeriodFilter": {
      "type": "object",
      "properties": {
        "revenueDate": {
          "type": "string",
          "format": "date-time"
        },
        "revenuePeriod": {
          "$ref": "#/definitions/v1OpportunityRevenuePeriod"
        }
      }
    },
    "v1SalespersonStatsRequest": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "type": "string"
        }
      }
    },
    "v1SalespersonStatsResponse": {
      "type": "object",
      "properties": {
        "pipelineCloseRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PipelineClosePoint"
          }
        },
        "pipelineCreationRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PipelineCreationPoint"
          }
        },
        "currentOpporunities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CurrentOpportunityPoint"
          }
        }
      }
    },
    "v1Scoring": {
      "type": "object",
      "properties": {
        "scores": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ScoringScore"
          }
        }
      }
    },
    "v1SetPipelineStagesRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Stage"
          }
        }
      }
    },
    "v1SetPipelineStagesResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1Stage": {
      "type": "object",
      "properties": {
        "stageId": {
          "type": "string",
          "title": "The unique identifier for the Pipeline Stage entity"
        },
        "name": {
          "type": "string",
          "title": "Display name of the pipeline stage"
        },
        "probability": {
          "type": "number",
          "format": "double",
          "title": "The estimated probability of close winning an opportunity from this stage"
        }
      }
    },
    "v1Target": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64",
          "title": "The numerical value for this target (e.g. USD cents amount if goal type is revenue)"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this target"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this target"
        }
      }
    },
    "v1UpdateClosedDateRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated this opportunity"
        },
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The new closed date for the opportunity"
        }
      }
    },
    "v1UpdateGoalRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner namespace for this goal"
        },
        "id": {
          "type": "string",
          "title": "The goal id"
        },
        "name": {
          "type": "string",
          "title": "The name of this goal"
        },
        "contributorId": {
          "type": "string",
          "title": "The contributor to this goal"
        },
        "contributorType": {
          "type": "string",
          "title": "The type of the contributor (i.e. sales-person, sales-team)"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The pipelines contributing to this goal"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "title": "The start date of this goal"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "The end date of this goal"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Target"
          },
          "title": "The targets for this goal"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask",
          "description": "The field_mask to specify what fields should be updated."
        }
      }
    },
    "v1UpdateLastActivityDateRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated this opportunity"
        },
        "lastActivityDate": {
          "type": "string",
          "format": "date-time",
          "title": "The last activity date"
        },
        "connected": {
          "type": "boolean",
          "title": "Flag to indicate that this activity resulted in a connection"
        }
      }
    },
    "v1UpdateLastActivityDateResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateLastConnectedDateRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated this opportunity"
        },
        "lastConnectedDate": {
          "type": "string",
          "format": "date-time",
          "title": "The last connected date"
        }
      }
    },
    "v1UpdateLastConnectedDateResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateLineItemsRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated this opportunity"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LineItem"
          },
          "title": "new Line Items"
        }
      }
    },
    "v1UpdateLineItemsResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateMEDDICNotesRequest": {
      "type": "object",
      "properties": {
        "sectionName": {
          "$ref": "#/definitions/v1MEDDICSection"
        },
        "sectionNotes": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "opportunityId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        }
      }
    },
    "v1UpdateMEDDICScoringRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "section ID that will be updated with a new score"
        },
        "metricScoreValue": {
          "type": "integer",
          "format": "int64",
          "title": "section ID for meddic data"
        },
        "economicBuyerScoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "decisionCriteriaScoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "decisionProcessScoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "identifyPainScoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "championScoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "competitionScoreValue": {
          "type": "integer",
          "format": "int64"
        },
        "paperProcessScoreValue": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1UpdateOpportunityDurationRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated the duration on the opportunity"
        },
        "expectedContractDuration": {
          "$ref": "#/definitions/v1Duration",
          "description": "Expected contract duration if opportunity turns into an order."
        }
      }
    },
    "v1UpdateOpportunityDurationResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityExpectedCloseDateRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "expectedCloseDate": {
          "type": "string",
          "format": "date-time"
        },
        "createSalesActivity": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateOpportunityExpectedCloseDateResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityMarketRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated this opportunity"
        },
        "marketId": {
          "type": "string",
          "title": "The market id for the opportunity"
        }
      }
    },
    "v1UpdateOpportunityMarketResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityNameRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1UpdateOpportunityNameResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityNotesRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "v1UpdateOpportunityNotesResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityPackageRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "currentRevenue": {
          "$ref": "#/definitions/v1Revenue"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "Quantity of the package in the opportunity, a multiplier for the package's potential revenue"
        }
      }
    },
    "v1UpdateOpportunityPackageResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityPackageRevenueRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "revenue": {
          "$ref": "#/definitions/v1Revenue"
        }
      }
    },
    "v1UpdateOpportunityPackageRevenueResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityPipelineAndProbabilityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated the pipeline on the opportunity"
        },
        "pipelineId": {
          "type": "string",
          "title": "ID of pipeline that opportunity is associated with"
        },
        "probability": {
          "type": "number",
          "format": "double",
          "title": "The probability corresponding to a pipeline stage"
        }
      }
    },
    "v1UpdateOpportunityPipelineRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated the pipeline on the opportunity"
        },
        "pipelineId": {
          "type": "string",
          "title": "ID of pipeline that opportunity is associated with"
        }
      }
    },
    "v1UpdateOpportunityProbabilityRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "probability": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1UpdateOpportunityProbabilityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunitySalespersonRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        },
        "salesPersonId": {
          "type": "string"
        },
        "createSalesActivity": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateOpportunitySalespersonResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityTagsRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated the tags on the opportunity"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of tags to be updated on the opportunity"
        }
      },
      "title": "Update the list of tags on an opportunity"
    },
    "v1UpdateOpportunityTagsResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdateOpportunityTypeRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "string"
        },
        "opportunityType": {
          "type": "string"
        },
        "editSalesPersonId": {
          "type": "string"
        }
      }
    },
    "v1UpdateOpportunityTypeResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/v1Opportunity"
        }
      }
    },
    "v1UpdatePipelineNameRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1UpdatePipelineNameResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdatePipelineStageNameRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        },
        "stageId": {
          "type": "string"
        },
        "stageName": {
          "type": "string"
        }
      }
    },
    "v1UpdatePipelineStageNameResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdatePipelineStageProbabilityRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifier the pipelines are namespaced in"
        },
        "pipelineId": {
          "type": "string"
        },
        "stageId": {
          "type": "string"
        },
        "probability": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1UpdatePipelineStageProbabilityResponse": {
      "type": "object",
      "description": "Currently Empty, as the caller already has all the information. Can be expanded in the future."
    },
    "v1UpdateSubscriberUserIDsRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "type": "string",
          "title": "ID of the opportunity to update"
        },
        "accountGroupId": {
          "type": "string",
          "title": "ID of the account group the opportunity belongs to"
        },
        "editSalesPersonId": {
          "type": "string",
          "title": "ID of the sales person who updated this opportunity"
        },
        "subscriberUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "New subscriber user_ids"
        }
      }
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
