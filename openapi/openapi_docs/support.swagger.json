{
  "swagger": "2.0",
  "info": {
    "title": "support/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Support"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/support.v1.Support/CreateTicket": {
      "post": {
        "operationId": "Support_CreateTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTicketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTicketRequest"
            }
          }
        ],
        "tags": [
          "Support"
        ]
      }
    },
    "/support.v1.Support/GetArticle": {
      "post": {
        "operationId": "Support_GetArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetArticleRequest"
            }
          }
        ],
        "tags": [
          "Support"
        ]
      }
    },
    "/support.v1.Support/GetUserByPhone": {
      "post": {
        "operationId": "Support_GetUserByPhone",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserByPhoneResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUserByPhoneRequest"
            }
          }
        ],
        "tags": [
          "Support"
        ]
      }
    },
    "/support.v1.Support/ListComments": {
      "post": {
        "operationId": "Support_ListComments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCommentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCommentsRequest"
            }
          }
        ],
        "tags": [
          "Support"
        ]
      }
    },
    "/support.v1.Support/ListTickets": {
      "post": {
        "operationId": "Support_ListTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTicketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListTicketsRequest"
            }
          }
        ],
        "tags": [
          "Support"
        ]
      }
    },
    "/support.v1.Support/SearchTickets": {
      "post": {
        "operationId": "Support_SearchTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchTicketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchTicketsRequest"
            }
          }
        ],
        "tags": [
          "Support"
        ]
      }
    }
  },
  "definitions": {
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "supportv1Status": {
      "type": "string",
      "enum": [
        "STATUS_NOT_SPECIFIED",
        "STATUS_NEW",
        "STATUS_OPEN",
        "STATUS_PENDING",
        "STATUS_HOLD",
        "STATUS_SOLVED",
        "STATUS_CLOSED"
      ],
      "default": "STATUS_NOT_SPECIFIED"
    },
    "v1Article": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Article identifier"
        },
        "body": {
          "type": "string",
          "title": "HTML of the article"
        },
        "title": {
          "type": "string",
          "title": "title of the article"
        },
        "url": {
          "type": "string",
          "title": "link to zendesk article"
        }
      }
    },
    "v1Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned when created"
        },
        "fileName": {
          "type": "string",
          "title": "The name of the image file"
        },
        "contentUrl": {
          "type": "string",
          "title": "A full URL where the attachment image file can be downloaded"
        },
        "contentType": {
          "type": "string",
          "title": "The content type of the image. Example value: image/png"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "The size of the image file in bytes"
        },
        "inline": {
          "type": "boolean",
          "title": "If true, the attachment is excluded from the attachment list and the attachment's URL can be referenced within the comment of a ticket. Default is false"
        }
      }
    },
    "v1CreateTicketRequest": {
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/v1Ticket",
          "title": "The minimal set of information to create a ticket"
        }
      }
    },
    "v1CreateTicketResponse": {
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/v1Ticket",
          "title": "The ticket as it was created by Zendesk"
        }
      }
    },
    "v1GetArticleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Zendesk article id"
        }
      }
    },
    "v1GetArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/v1Article",
          "title": "Zendesk article"
        }
      }
    },
    "v1GetUserByPhoneRequest": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "title": "The phone number to search"
        }
      }
    },
    "v1GetUserByPhoneResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "title": "the first user found with thie phone number"
        },
        "pid": {
          "type": "string",
          "title": "The PID that user is associated with in ZenDesk"
        }
      }
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned when creating groups"
        },
        "url": {
          "type": "string",
          "title": "The API url of this group"
        },
        "name": {
          "type": "string",
          "title": "The name of the group"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted groups get marked as such"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time the group was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time of the last update of the group"
        }
      }
    },
    "v1ListCommentsRequest": {
      "type": "object",
      "properties": {
        "ticketId": {
          "type": "string",
          "format": "int64",
          "title": "The ticket identifer to lookup comments for"
        }
      }
    },
    "v1ListCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TicketComment"
          },
          "title": "The comments of a ticket"
        }
      }
    },
    "v1ListTicketsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifer to lookup tickets for a zendesk organization"
        },
        "cursor": {
          "type": "string",
          "title": "A cursor should be supplied from the last response to load the next results"
        }
      }
    },
    "v1ListTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Ticket"
          },
          "title": "The tickets of the organization"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The list of users that were sideloaded from zendesk"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "Count of tickets associated to the organization"
        }
      }
    },
    "v1SearchTicketsRequest": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string",
          "title": "The partner identifer to search tickets within a zendesk organization"
        },
        "searchTerm": {
          "type": "string",
          "title": "The filters to search upon"
        },
        "status": {
          "$ref": "#/definitions/supportv1Status",
          "title": "Deprecated in favour of statuses instead"
        },
        "sortBy": {
          "$ref": "#/definitions/v1SortBy",
          "title": "The sort by for the zendesk response (Defaults to sorting by relevance)"
        },
        "cursor": {
          "type": "string",
          "title": "A cursor should be supplied from the last response to load the next results"
        },
        "sortOrder": {
          "$ref": "#/definitions/v1SortOrder",
          "title": "The sort order of which to display results (Defaults to desc)"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/supportv1Status"
          },
          "title": "Tickets that match these statuses will be returned"
        }
      }
    },
    "v1SearchTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Ticket"
          },
          "title": "The tickets of the organization"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The list of users that were sideloaded from zendesk"
        },
        "nextCursor": {
          "type": "string",
          "title": "The cursor to send with the next request if there are more results to be loaded"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Indicates whether or not there are more results to be loaded"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "Count of tickets associated to the organization"
        }
      }
    },
    "v1SortBy": {
      "type": "string",
      "enum": [
        "SORT_BY_NOT_SPECIFIED",
        "SORT_BY_UPDATED_AT",
        "SORT_BY_CREATED_AT",
        "SORT_BY_PRIORITY",
        "SORT_BY_STATUS",
        "SORT_BY_TICKET_TYPE"
      ],
      "default": "SORT_BY_NOT_SPECIFIED"
    },
    "v1SortOrder": {
      "type": "string",
      "enum": [
        "SORT_ORDER_NOT_SPECIFIED",
        "SORT_ORDER_ASC",
        "SORT_ORDER_DESC"
      ],
      "default": "SORT_ORDER_NOT_SPECIFIED"
    },
    "v1Ticket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned upon creation"
        },
        "url": {
          "type": "string",
          "title": "The API url of this ticket"
        },
        "status": {
          "type": "string",
          "title": "The state of the ticket. Possible values: \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\""
        },
        "priority": {
          "type": "string",
          "title": "The urgency with which the ticket should be addressed. Possible values: \"urgent\", \"high\", \"normal\", \"low\""
        },
        "type": {
          "type": "string",
          "title": "The type of this ticket. Possible values: \"problem\", \"incident\", \"question\" or \"task\""
        },
        "subject": {
          "type": "string",
          "title": "The value of the subject field for this ticket"
        },
        "description": {
          "type": "string",
          "title": "The first comment on the ticket"
        },
        "organizationId": {
          "type": "string",
          "format": "int64",
          "description": "The organization of the requester. You can only specify the ID of an organization associated with the requester."
        },
        "requester": {
          "$ref": "#/definitions/v1User",
          "title": "The user who requested this ticket"
        },
        "collaborators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "title": "The users currently cc'ed on the ticket"
        },
        "dueAt": {
          "type": "string",
          "format": "date-time",
          "description": "If this is a ticket of type \"task\" it has a due date."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "When this record was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "When this record last got updated"
        },
        "recipient": {
          "type": "string",
          "title": "The original recipient e-mail address of the ticket"
        },
        "followupSourceId": {
          "type": "string",
          "format": "int64",
          "title": "Agents currently following the ticket"
        },
        "assignee": {
          "$ref": "#/definitions/v1User",
          "title": "The agent currently assigned to the ticket"
        },
        "group": {
          "$ref": "#/definitions/v1Group",
          "title": "The group this ticket is assigned to"
        },
        "via": {
          "$ref": "#/definitions/v1Via",
          "title": "This object explains how the ticket was created"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The optional tags that describe the ticket"
        },
        "comment": {
          "$ref": "#/definitions/v1TicketComment",
          "description": "ONLY used for ticket creation."
        }
      }
    },
    "v1TicketComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned when the comment is created"
        },
        "type": {
          "type": "string",
          "description": "Comment or VoiceComment."
        },
        "body": {
          "type": "string",
          "title": "The comment string"
        },
        "htmlBody": {
          "type": "string",
          "title": "The comment formatted as HTML"
        },
        "public": {
          "type": "boolean",
          "title": "true if a public comment; false if an internal note"
        },
        "authorId": {
          "type": "string",
          "format": "int64",
          "title": "The id of the comment author"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Attachment"
          },
          "title": "Attachments, if any"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time the comment was created"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Automatically assigned when creating users"
        },
        "url": {
          "type": "string",
          "title": "The API url of this user"
        },
        "name": {
          "type": "string",
          "title": "The name of the user"
        },
        "externalId": {
          "type": "string",
          "title": "A unique identifier from another system"
        },
        "alias": {
          "type": "string",
          "title": "An alias displayed to end users"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time the user was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The time of the last update of the user"
        },
        "active": {
          "type": "boolean",
          "title": "false if the user has been deleted"
        },
        "verified": {
          "type": "boolean",
          "description": "The user's primary identity is verified or not."
        },
        "shared": {
          "type": "boolean",
          "title": "If the user is shared from a different Zendesk Support instance. Ticket sharing accounts only"
        },
        "sharedAgent": {
          "type": "boolean",
          "title": "If the user is a shared agent from a different Zendesk Support instance. Ticket sharing accounts only"
        },
        "locale": {
          "type": "boolean",
          "title": "The locale for this user"
        },
        "localeId": {
          "type": "string",
          "format": "int64",
          "title": "The language identifier for this user"
        },
        "timeZone": {
          "type": "string",
          "title": "The time-zone of this user"
        },
        "lastLoginAt": {
          "type": "string",
          "format": "date-time",
          "title": "The last time the user signed in to Zendesk Support"
        },
        "email": {
          "type": "string",
          "title": "The primary email address of this user"
        },
        "phone": {
          "type": "string",
          "description": "The primary phone number of this user."
        },
        "signature": {
          "type": "string",
          "title": "The user's signature. Only agents and admins can have signatures"
        },
        "details": {
          "type": "string",
          "title": "Any details you want to store about the user, such as an address"
        },
        "notes": {
          "type": "string",
          "title": "Any notes you want to store about the user"
        },
        "organizationId": {
          "type": "string",
          "format": "int64",
          "title": "The id of the organization this user is associated with"
        },
        "role": {
          "type": "string",
          "title": "The role of the user. Possible values:"
        },
        "customRoleId": {
          "type": "string",
          "format": "int64",
          "title": "A custom role if the user is an agent on the Enterprise plan"
        },
        "moderator": {
          "type": "boolean",
          "title": "Designates whether the user has forum moderation capabilities"
        },
        "ticketRestriction": {
          "type": "string",
          "title": "Specifies which tickets the user has access to. Possible values are: \"organization\", \"groups\", \"assigned\", \"requested\", null"
        },
        "onlyPrivateComments": {
          "type": "boolean",
          "title": "true if the user can only create private comments"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The user's tags. Only present if your account has user tagging enabled"
        },
        "restrictedAgent": {
          "type": "boolean",
          "title": "If the agent has any restrictions; false for admins and unrestricted agents, true for other agents"
        },
        "suspended": {
          "type": "boolean",
          "title": "If the agent is suspended. Tickets from suspended users are also suspended, and these users cannot sign in to the end user portal"
        }
      }
    },
    "v1Via": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        }
      }
    }
  }
}
