{
  "swagger": "2.0",
  "info": {
    "title": "wsp_support_tools/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SiteManager"
    },
    {
      "name": "LogsService"
    },
    {
      "name": "MultisiteApiService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/wsp_support_tools.v1.LogsService/CreateActivityLog": {
      "post": {
        "summary": "creates an activity log for the specified site and activity type",
        "operationId": "LogsService_CreateActivityLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateActivityLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateActivityLogRequest"
            }
          }
        ],
        "tags": [
          "LogsService"
        ]
      }
    },
    "/wsp_support_tools.v1.LogsService/GetActivityLog": {
      "post": {
        "summary": "retrieves an activity log for the specified site and activity type",
        "operationId": "LogsService_GetActivityLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ActivityLog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetActivityLogRequest"
            }
          }
        ],
        "tags": [
          "LogsService"
        ]
      }
    },
    "/wsp_support_tools.v1.LogsService/ListActivityLogs": {
      "post": {
        "summary": "retrieves a list of activity logs",
        "operationId": "LogsService_ListActivityLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListActivityLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListActivityLogsRequest"
            }
          }
        ],
        "tags": [
          "LogsService"
        ]
      }
    },
    "/wsp_support_tools.v1.LogsService/UpdateActivityLog": {
      "post": {
        "summary": "updates an activity log for the specified site and activity type",
        "operationId": "LogsService_UpdateActivityLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateActivityLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateActivityLogRequest"
            }
          }
        ],
        "tags": [
          "LogsService"
        ]
      }
    },
    "/wsp_support_tools.v1.MultisiteApiService/UpdateSubSiteInformation": {
      "post": {
        "summary": "To Update SubSite Information in redis and vstore for the specified site",
        "operationId": "MultisiteApiService_UpdateSubSiteInformation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSubSiteInformationRequest"
            }
          }
        ],
        "tags": [
          "MultisiteApiService"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/ActivatePlugin": {
      "post": {
        "summary": "ActivatePlugins represents a method for activating a list of plugins for the specified site",
        "operationId": "SiteManager_ActivatePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ActivatePluginRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/ChatCompletion": {
      "post": {
        "summary": "ChatCompletion",
        "operationId": "SiteManager_ChatCompletion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChatCompletionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChatCompletionRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/CopySite": {
      "post": {
        "summary": "CopySite represents a method for duplicating the source files and database entries of a\nsite to a target site",
        "operationId": "SiteManager_CopySite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CopySiteRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/Deactivate": {
      "post": {
        "summary": "Deactivate allows a caller to deactivate the Site associated with the given site ID",
        "operationId": "SiteManager_Deactivate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeactivateRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/DeactivatePlugin": {
      "post": {
        "summary": "DeactivatePlugins represents a method for deactivating a list of plugins for the site",
        "operationId": "SiteManager_DeactivatePlugin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeactivatePluginRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/DeleteSite": {
      "post": {
        "summary": "DeleteSite represents a method for deleting a site from WebsitePro. Amongst other things this method removes\nthe sites information from datastore, redis, cloudsql, filesystem, certificate and sftp",
        "operationId": "SiteManager_DeleteSite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSiteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteSiteRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/DeleteStaging": {
      "post": {
        "summary": "DeleteStaging allows callers to delete the staging area associated with the given site ID",
        "operationId": "SiteManager_DeleteStaging",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteStagingRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/DeleteUser": {
      "post": {
        "summary": "DeleteUser deletes a WP user with the given identifier (can be login, email or ID)",
        "operationId": "SiteManager_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteUserRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/DowngradeDomains": {
      "post": {
        "summary": "DowngradeDomains allows callers to downgrade domains of the site associated with the given site ID",
        "operationId": "SiteManager_DowngradeDomains",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DowngradeDomainsRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/GetDiscrepancyData": {
      "post": {
        "operationId": "SiteManager_GetDiscrepancyData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDiscrepancyDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/GetDownloadBackupURL": {
      "post": {
        "summary": "GetDownloadBackupURL represents a method of getting a signed URL that provides limited permissions and time\n in which to make a request to download a WebsitePro site backup file from datastore",
        "operationId": "SiteManager_GetDownloadBackupURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDownloadBackupURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDownloadBackupURLRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/GetSiteHealthChecks": {
      "post": {
        "operationId": "SiteManager_GetSiteHealthChecks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResourceUsagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResourceUsagesRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/GetSiteResourceUsagesSummary": {
      "post": {
        "summary": "GetSiteSummary represents a method for getting the site details given an account id",
        "operationId": "SiteManager_GetSiteResourceUsagesSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSiteResourceUsagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSiteResourceUsagesRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/GetSiteStatus": {
      "post": {
        "summary": "GetSiteStatus represents a method for returning the current status information of a site",
        "operationId": "SiteManager_GetSiteStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSiteStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSiteStatusRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/GetSiteSummary": {
      "post": {
        "summary": "GetSiteSummary represents a method for getting the site details given an account id",
        "operationId": "SiteManager_GetSiteSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSiteSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSiteSummaryRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/ListBackups": {
      "post": {
        "summary": "ListBackups represents a method for returning a list of backups available for the specified site and additional\ndata about the backup such as fileSize, numberOfPages, wordpressVersion, timestamp and list of plugins installed",
        "operationId": "SiteManager_ListBackups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBackupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListBackupsRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/ListPlugins": {
      "post": {
        "summary": "ListPlugins represents a method for returning a list of plugins that the specified site has installed",
        "operationId": "SiteManager_ListPlugins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPluginsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPluginsRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/Reactivate": {
      "post": {
        "summary": "Reactivate allows a caller to reactivate the Site associated with the given site ID",
        "operationId": "SiteManager_Reactivate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReactivateRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/ResetDatabaseUserLimits": {
      "post": {
        "summary": "ResetDatabaseUserLimits represents a method for resetting the database user's resource limits for a specified site",
        "operationId": "SiteManager_ResetDatabaseUserLimits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResetDatabaseUserLimitsRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/RestoreSite": {
      "post": {
        "operationId": "SiteManager_RestoreSite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RestoreSiteRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/Search": {
      "post": {
        "operationId": "SiteManager_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResourceUsagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResourceUsagesRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/SetSkipUpgradeHTTP": {
      "post": {
        "summary": "SetSkipUpgradeHTTP allows the caller to set the value of skip upgrade HTTP to enabled or disabled (true/false).\nSetting the skip to true forces a site to serve its content over HTTPS using the SSL certificate that is obtained\nfor the given site. Enforcing this is sometimes required because site databases will have static file links encoded\nas HTTP, rather than HTTPS",
        "operationId": "SiteManager_SetSkipUpgradeHTTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetSkipUpgradeHTTPRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/SetWPDebug": {
      "post": {
        "summary": "SetWPDebug allows callers to set the WP debug field of a site to enabled or disabled. Having the field enabled\nmakes a site echo its PHP errors at the top of the page that errors occur on, which facilitates debugging",
        "operationId": "SiteManager_SetWPDebug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetWPDebugRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/SetWPLoginExposed": {
      "post": {
        "summary": "SetWPLoginExposed allows the caller to set the exposure of the WP login page to true or false. Exposing WP login\nmay expose a site to security vulnerabilities because of DDOS attacks to that page, specifically, as it is a\npopular login page that not many sites change",
        "operationId": "SiteManager_SetWPLoginExposed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetWPLoginExposedRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/SetWpOption": {
      "post": {
        "summary": "SetWpOption allows a caller to set the wp option value of the site identified by the site ID specified",
        "operationId": "SiteManager_SetWpOption",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetWpOptionRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    },
    "/wsp_support_tools.v1.SiteManager/TransferSite": {
      "post": {
        "summary": "TransferSite represents a method for transferring a WebsitePro site from one account to another account.\nThe accounts can either be under the same partner or different ones",
        "operationId": "SiteManager_TransferSite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TransferSiteRequest"
            }
          }
        ],
        "tags": [
          "SiteManager"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ActivatePluginRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "pluginIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ActivityLog": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "activity": {
          "$ref": "#/definitions/v1ActivityType"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdTimestamp": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ActivityType": {
      "type": "string",
      "enum": [
        "TYPE_UNSET",
        "CREATE_STAGING_ENV",
        "PUSH_STAGING_TO_LIVE",
        "RESET_STAGING_TO_LIVE",
        "RESET_STAGING_FROM_BACKUP",
        "RESET_STAGING_FROM_TEMPLATE"
      ],
      "default": "TYPE_UNSET"
    },
    "v1Backup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "fileSize": {
          "type": "string",
          "format": "int64"
        },
        "databaseSize": {
          "type": "string",
          "format": "int64"
        },
        "wordpressVersion": {
          "type": "string"
        },
        "numberOfPages": {
          "type": "string",
          "format": "int64"
        },
        "numberOfPosts": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "plugins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Plugin"
          }
        },
        "timestamp": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      }
    },
    "v1ChatCompletionRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "v1ChatCompletionResponse": {
      "type": "object",
      "properties": {
        "resp": {
          "type": "string"
        }
      }
    },
    "v1CopySiteRequest": {
      "type": "object",
      "properties": {
        "currentSiteId": {
          "type": "string"
        },
        "currentAccountId": {
          "type": "string"
        },
        "destinationAccountId": {
          "type": "string"
        }
      }
    },
    "v1CreateActivityLogRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "activity": {
          "$ref": "#/definitions/v1ActivityType"
        },
        "createdTimestamp": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1CreateActivityLogResponse": {
      "type": "object",
      "properties": {
        "actionSucceeded": {
          "type": "boolean"
        }
      }
    },
    "v1DeactivatePluginRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "pluginIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1DeactivateRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      },
      "title": "DeactivateRequest is the request containing the identifier of the site to be deactivated"
    },
    "v1DeleteSiteRequest": {
      "type": "object",
      "properties": {
        "currentSiteId": {
          "type": "string"
        },
        "currentAccountId": {
          "type": "string"
        }
      }
    },
    "v1DeleteSiteResponse": {
      "type": "object",
      "properties": {
        "deleteSiteTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeleteSiteTask"
          }
        }
      }
    },
    "v1DeleteSiteTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the site delete task"
        },
        "error": {
          "type": "string",
          "title": "The error message from the site delete task (empty if task was successful)"
        }
      }
    },
    "v1DeleteStagingRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      },
      "title": "DeleteStagingRequest is the request containing the identifier of the site to delete the staging area"
    },
    "v1DeleteUserRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "reassignUserId": {
          "type": "string"
        }
      }
    },
    "v1DowngradeDomainsRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      },
      "title": "DowngradeDomainsRequest is the request containing the identifier of the site to downgrade domains"
    },
    "v1Filters": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "activity": {
          "$ref": "#/definitions/v1ActivityType"
        }
      }
    },
    "v1GetActivityLogRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "activity": {
          "$ref": "#/definitions/v1ActivityType"
        },
        "createdTimestamp": {
          "type": "string"
        }
      }
    },
    "v1GetDiscrepancyDataResponse": {
      "type": "object",
      "properties": {
        "discrepancyData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetDownloadBackupURLRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "backupTimeString": {
          "type": "string"
        }
      }
    },
    "v1GetDownloadBackupURLResponse": {
      "type": "object",
      "properties": {
        "signedUrl": {
          "type": "string"
        }
      }
    },
    "v1GetSiteResourceUsagesRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "monthYear": {
          "type": "string"
        }
      }
    },
    "v1GetSiteResourceUsagesResponse": {
      "type": "object",
      "properties": {
        "siteResourceUsages": {
          "$ref": "#/definitions/v1SiteResourceUsages"
        }
      }
    },
    "v1GetSiteStatusRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      }
    },
    "v1GetSiteStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "v1GetSiteSummaryRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "v1GetSiteSummaryResponse": {
      "type": "object",
      "properties": {
        "siteSummary": {
          "$ref": "#/definitions/v1SiteSummary"
        }
      }
    },
    "v1HealthCheckValues": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListActivityLogsRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/v1Filters"
        },
        "pagingOptions": {
          "$ref": "#/definitions/v1PagedRequestOptions"
        }
      }
    },
    "v1ListActivityLogsResponse": {
      "type": "object",
      "properties": {
        "activityLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivityLog"
          }
        },
        "pagingMetadata": {
          "$ref": "#/definitions/v1PagedResponseMetadata"
        }
      }
    },
    "v1ListBackupsRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListBackupsResponse": {
      "type": "object",
      "properties": {
        "backups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Backup"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalNumRecords": {
          "type": "string"
        }
      }
    },
    "v1ListPluginsRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListPluginsResponse": {
      "type": "object",
      "properties": {
        "plugins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Plugin"
          }
        },
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "v1PagedRequestOptions": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1PagedResponseMetadata": {
      "type": "object",
      "properties": {
        "nextCursor": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean"
        },
        "totalResults": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Plugin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the WordPress plugin"
        },
        "name": {
          "type": "string",
          "title": "The name of the WordPress plugin"
        },
        "version": {
          "type": "string",
          "title": "The version of the plugin that the site is currently using"
        },
        "status": {
          "type": "string",
          "title": "The status of the plugin (active or inactive)"
        }
      }
    },
    "v1ReactivateRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      },
      "title": "ReactivateRequest is the request containing the identifier of the site to be reactivated"
    },
    "v1ResetDatabaseUserLimitsRequest": {
      "type": "object",
      "properties": {
        "currentSiteId": {
          "type": "string"
        },
        "currentAccountId": {
          "type": "string"
        }
      }
    },
    "v1ResourceUsagesRequest": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "searchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SearchableField"
          }
        },
        "sortOptions": {
          "$ref": "#/definitions/v1SortOptions"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "from": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ResourceUsagesResponse": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WordPressSite"
          }
        },
        "hasMore": {
          "type": "boolean",
          "title": "Whether or not more results exist"
        },
        "totalResults": {
          "type": "string",
          "format": "int64",
          "title": "The total number of results for this query across all pages"
        },
        "siteHealths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SiteHealths"
          },
          "title": "The cursor to use for the next healthcheckData"
        }
      }
    },
    "v1RestoreSiteRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "backupTimeString": {
          "type": "string"
        }
      }
    },
    "v1SearchableField": {
      "type": "string",
      "enum": [
        "SEARCHABLE_FIELD_ACCOUNT_ID",
        "SEARCHABLE_FIELD_ACCOUNT_GROUP_NAME",
        "SEARCHABLE_FIELD_PRIMARY_DOMAIN"
      ],
      "default": "SEARCHABLE_FIELD_ACCOUNT_ID",
      "description": "All of the possible fields that can be searched against the search term."
    },
    "v1Service": {
      "type": "string",
      "enum": [
        "SERVICE_UNSET",
        "WSP_STAGING_MANAGER",
        "WSP_BACKUP_MANAGER"
      ],
      "default": "SERVICE_UNSET"
    },
    "v1SetSkipUpgradeHTTPRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1SetWPDebugRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1SiteType"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1SetWPLoginExposedRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1SetWpOptionRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "SetWpOptionRequest is the structure of the message that contains the site ID and key for which a new value can be set"
    },
    "v1SiteHealths": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "primaryDomain": {
          "type": "string"
        },
        "healthCheckValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HealthCheckValues"
          }
        }
      }
    },
    "v1SiteResourceUsages": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "string"
        },
        "visitors": {
          "type": "string"
        }
      }
    },
    "v1SiteSummary": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "primaryDomain": {
          "type": "string"
        },
        "alternativeDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTemplate": {
          "type": "boolean"
        },
        "fileSize": {
          "type": "string",
          "format": "int64"
        },
        "databaseSize": {
          "type": "string",
          "format": "int64"
        },
        "wordpressVersion": {
          "type": "string"
        },
        "numberOfPages": {
          "type": "string",
          "format": "int64"
        },
        "numberOfPosts": {
          "type": "string",
          "format": "int64"
        },
        "objectCacheEnabled": {
          "type": "boolean"
        },
        "forceCacheEnabled": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "wpLoginExposed": {
          "type": "boolean"
        },
        "dbName": {
          "type": "string"
        },
        "dbHost": {
          "type": "string"
        },
        "dbUser": {
          "type": "string"
        },
        "stagingDbName": {
          "type": "string"
        },
        "stagingDomain": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "editionId": {
          "type": "string"
        },
        "wpDebugEnabled": {
          "type": "boolean"
        },
        "stagingWpDebugEnabled": {
          "type": "boolean"
        },
        "cdnVersion": {
          "type": "string"
        },
        "objectCacheVersion": {
          "type": "string"
        },
        "deactivated": {
          "type": "boolean"
        },
        "template": {
          "type": "boolean"
        },
        "ignoreCacheHeaders": {
          "type": "boolean"
        },
        "gaTrackingId": {
          "type": "string"
        },
        "skipUpgradingHttp": {
          "type": "boolean"
        },
        "multiSite": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "wpMemoryLimit": {
          "type": "string"
        },
        "wpMaxMemoryLimit": {
          "type": "string"
        },
        "postMaxSize": {
          "type": "string"
        },
        "allowXmlRpc": {
          "type": "boolean"
        },
        "allowUrlFopen": {
          "type": "boolean"
        },
        "detached": {
          "type": "boolean"
        },
        "wpOption": {
          "type": "string"
        },
        "isObjectCache": {
          "type": "string"
        },
        "subsites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubsiteInfo"
          }
        },
        "developerModeEnabled": {
          "type": "boolean"
        }
      }
    },
    "v1SiteType": {
      "type": "string",
      "enum": [
        "SITE_TYPE_LIVE",
        "SITE_TYPE_STAGING"
      ],
      "default": "SITE_TYPE_LIVE",
      "title": "SiteType is an enum that indicates the types of sites that options can be set on"
    },
    "v1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_ASC",
        "SORT_DIRECTION_DESC"
      ],
      "default": "SORT_DIRECTION_ASC",
      "description": "The directions that a result set can be sorted in."
    },
    "v1SortField": {
      "type": "string",
      "enum": [
        "SORT_FIELD_MODIFIED",
        "SORT_FIELD_CREATED",
        "SORT_FIELD_ACCOUNT_GROUP_NAME",
        "SORT_FIELD_PRIMARY_DOMAIN"
      ],
      "default": "SORT_FIELD_MODIFIED",
      "description": "The field to sort a result set on."
    },
    "v1SortOptions": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1SortDirection",
          "title": "A direction to sort results in"
        },
        "field": {
          "$ref": "#/definitions/v1SortField",
          "title": "Field to sort on"
        }
      },
      "title": "Options for controlling the order of query results"
    },
    "v1SubsiteInfo": {
      "type": "object",
      "properties": {
        "blogId": {
          "type": "string",
          "format": "int64",
          "description": "blog_id represents the unique integer id of the subsite."
        },
        "blogName": {
          "type": "string",
          "title": "blog_name represents the title description of the subsite added by user"
        },
        "path": {
          "type": "string",
          "title": "path represents the path of the subsite in url after domain"
        },
        "status": {
          "type": "string",
          "title": "status represents the status of the subsite"
        }
      }
    },
    "v1TransferSiteRequest": {
      "type": "object",
      "properties": {
        "currentSiteId": {
          "type": "string"
        },
        "currentAccountId": {
          "type": "string"
        },
        "destinationAccountId": {
          "type": "string"
        }
      }
    },
    "v1UpdateActivityLogRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "activity": {
          "$ref": "#/definitions/v1ActivityType"
        },
        "createdTimestamp": {
          "type": "string"
        },
        "updateFields": {
          "$ref": "#/definitions/v1UpdateFields"
        },
        "fieldMask": {
          "$ref": "#/definitions/vendastatypesFieldMask"
        }
      }
    },
    "v1UpdateActivityLogResponse": {
      "type": "object",
      "properties": {
        "actionSucceeded": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateFields": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1UpdateSubSiteInformationRequest": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        }
      }
    },
    "v1WordPressAddon": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "currentVersion": {
          "type": "string"
        },
        "latestVersion": {
          "type": "string"
        }
      }
    },
    "v1WordPressSite": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountGroupName": {
          "type": "string"
        },
        "primaryDomain": {
          "type": "string"
        },
        "pluginUpdates": {
          "type": "integer",
          "format": "int32",
          "title": "how many plugins are not the latest version"
        },
        "currentTheme": {
          "$ref": "#/definitions/v1WordPressAddon"
        },
        "currentCoreVersion": {
          "type": "string"
        },
        "latestCoreVersion": {
          "type": "string"
        },
        "filestoreSize": {
          "type": "integer",
          "format": "int32"
        },
        "databaseSize": {
          "type": "integer",
          "format": "int32"
        },
        "bandwidth": {
          "type": "integer",
          "format": "int32"
        },
        "visitors": {
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "vendastatypesFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    }
  }
}
