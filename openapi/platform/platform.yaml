openapi: 3.0.0
info:
  title: Platform REST APIs
  version: Evergreen
servers:
  - url: 'https://prod.apigateway.co/platform'
    description: Production
  - description: Demo
    url: 'https://demo.apigateway.co/platform'
  - description: Local
    url: '{local}/platform'
  - url: 'http://localhost:11001/platform'
    description: Localhost
paths:
  /salesContacts:
    post:
      summary: Create Sales Contact
      operationId: post-salesContacts
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesContacts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created contact
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created contact
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Use this operation to create a new Sales Contact for a business.

        An email and business location must be provided when creating a contact.

        Note: Currently when creating a contact you must specify exactly 1 Business Location id for it to be linked to. We intend to expand this limit.
      security:
        - OAuth2:
            - sales.contact
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/salesContacts'
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      tags:
        - Sales Contacts
    options:
      operationId: options-salesContacts
      tags:
        - Options
        - Sales Contacts
      summary: List valid HTTP verbs for /salesContacts
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
  '/salesContacts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The ID of the contact to be returned
    get:
      summary: Get Sales Contact
      tags:
        - Sales Contacts
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesContacts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-salesContacts-id
      security:
        - OAuth2:
            - sales.contact
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Fetch the current values for the specified sales contact
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      operationId: options-salesContacts-id
      summary: 'List valid HTTP verbs for /salesContacts/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Sales Contacts
  /businessLocations:
    post:
      summary: Create Business Location
      operationId: post-businessLocations
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessLocations'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created business location
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created business location
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/businessLocations'
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Used to record basic data for a new location.

        The following members must be populated during creation:
        - `relationships.businessPartner.data.id`
        - `attributes.name`
        - `attributes.address.countryCode` as well as other address fields based on the norms of the country.
        - `relationships.categories.data.[].id` - At least one category must be provided
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - business
      tags:
        - Business Locations
    options:
      operationId: options-businessLocations
      summary: List valid HTTP verbs for /businessLocations
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Business Locations
    get:
      summary: List Business Locations
      operationId: get-businessLocations
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/businessLocations'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Produces a list of business locations
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[businessPartner.id]'
          description: Return business locations for the specified partner
          required: true
        - schema:
            type: string
          in: query
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
          name: 'page[cursor]'
        - schema:
            type: string
          in: query
          description: The maximum number of tasks you would like returned in a single batch. Use the links.next member in the response to get the remainder.
          name: 'page[limit]'
      security:
        - OAuth2:
            - business
      tags:
        - Business Locations
      x-lifecycle:
        status: trustedTester
  '/businessLocations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Business Location
      tags:
        - Business Locations
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessLocations'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-businessLocations-id
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns basic data about the business location.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      security:
        - OAuth2:
            - business
    options:
      operationId: options-businessLocations-id
      summary: 'List valid HTTP verbs for /businessLocations/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Business Locations
    patch:
      summary: Update Business Location
      operationId: patch-businessLocations-id
      tags:
        - Business Locations
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Update the existing business location.
        Only the root ID and type fields are required. All others are optional and will keep their original value if omitted.
      x-lifecycle:
        status: trustedTester
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - business
      responses:
        '200':
          description: Ok
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessLocations'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the updated business location
          headers: {}
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/businessLocations'
  /users:
    post:
      summary: Create User
      operationId: post-users
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created user
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created user
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/users'
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Used to record basic data for a new location.

        The following members must be populated during creation:
        - `relationships.partner.data.id`
        - `attributes.email`
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - user.admin
      tags:
        - Users
    options:
      operationId: options-users
      summary: List valid HTTP verbs for /users
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Users
    get:
      summary: List Users
      operationId: get-users
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Produces a list of users
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[partner.id]'
          description: Return users for the specified partner. Required except when filtering by id.
        - schema:
            type: string
          in: query
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
          name: 'page[cursor]'
        - schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          in: query
          description: The maximum number of users you would like returned in a single batch. Use the links.next member in the response to get the remainder.
          name: 'page[limit]'
        - schema:
            type: array
            example:
              - 'U-12342,U-5345'
            items:
              type: string
          in: query
          name: 'filter[id]'
          description: A comma separated list of user ids to fetch in a batch
        - schema:
            type: string
          in: query
          name: 'filter[searchTerm]'
          description: A string containing a partial name or email address. The results order is not affected by the quality of this match.
        - schema:
            type: string
          in: query
          name: 'filter[email]'
          description: A string containing a complete email that must be an exact match.
        - schema:
            type: array
            items:
              type: string
              enum:
                - business
                - partner
                - bot
          in: query
          name: 'filter[category]'
          description: 'Filter the users based on the broad category that they fall into. In some rare cases users may be part of multiple categories. '
      security:
        - OAuth2:
            - user.admin
            - user.list
      tags:
        - Users
      x-lifecycle:
        status: trustedTester
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get User
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-users-id
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns information about a single user. The fields you are able to use will be affected by the combination of scopes that you were granted access to.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      security:
        - OAuth2:
            - user.admin
            - 'user.profile:read'
            - 'user.contact:read'
            - 'user.permission:read'
            - user.permission
            - self.user.admin
            - 'self.user.contact:read'
            - openid
            - profile
            - email
            - phone
            - address
    options:
      operationId: options-users-id
      summary: 'List valid HTTP verbs for /users/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Users
    patch:
      summary: Update User
      operationId: patch-users-id
      tags:
        - Users
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Proposed`

        Update the existing user.
        Only the root ID and type fields are required. All others are optional and will keep their original value if omitted.
      x-lifecycle:
        status: proposed
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - user.admin
      responses:
        '200':
          description: Ok
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the updated user
          headers: {}
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/users'
    delete:
      summary: Delete User
      operationId: delete-users-id
      responses:
        '204':
          description: No Content
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Proposed`

        Deleting a user will remove personal data from it and prevent the ID from being used again in the future.
      security:
        - OAuth2:
            - user.admin
      tags:
        - Users
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      x-lifecycle:
        status: proposed
  /purchases:
    get:
      summary: List Purchases
      tags:
        - Purchases
      operationId: get-purchases
      security:
        - OAuth2:
            - financial
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Produces a list of wholesale purchases made.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[partner.id]'
          description: Only return purchases that for the specified partner
          required: true
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[createdAt][>]'
          description: Only return purchases created after the specified time
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[createdAt][<]'
          description: Only return purchases created before the specified time
        - schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 10
          in: query
          name: 'page[limit]'
          description: The maximum number of tasks you would like returned in a single batch. Use the links.next member in the response to get the remainder.
        - schema:
            type: string
          in: query
          name: 'page[cursor]'
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/purchases'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
    options:
      operationId: options-purchases
      summary: List valid HTTP verbs for /purchases
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Purchases
  /businessCategories:
    get:
      summary: List Business Categories
      operationId: get-businessCategories
      tags:
        - Business Categories
      security:
        - OAuth2:
            - business
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Produces a list of business categories
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 10
          in: query
          name: 'page[limit]'
          description: The maximum number of tasks you would like returned in a single batch. Use the links.next member in the response to get the remainder.
        - schema:
            type: string
          in: query
          name: 'page[cursor]'
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
        - schema:
            type: string
          in: header
          name: Accept-Language
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/businessCategories'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
    options:
      operationId: options-businessCategories
      summary: List valid HTTP verbs for /businessCategories
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Business Categories
  /orders:
    post:
      summary: Create Order
      tags:
        - Orders
      operationId: post-orders
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/orders'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created order
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created order
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/orders'
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Use this operation to create a new order for a business.
        All orders created by API start out in the `processing` status and do not require approval by either the partner admin or SMB admin.

        Note: For newly created Business Locations/Sales Account it does take a few seconds for the newly created account to be replicated to the billing system and for the billing system to setup some additional records for it. It is usually under 5 seconds  but may take a little longer on high traffic days.
        We recommend checking for the `NotReady` status code in the error response and retrying on that with an exponential backoff.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - order
    options:
      operationId: options-orders
      summary: 'List valid HTTP verbs for /orders/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Orders
    get:
      summary: List Orders
      operationId: get-orders
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/orders'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Produces a list of orders.
      security:
        - OAuth2:
            - order
      parameters:
        - schema:
            type: string
          in: query
          name: 'filter[partner.id]'
          description: Return orders for the specified partner
          required: true
        - schema:
            type: string
          in: query
          name: 'page[cursor]'
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
        - schema:
            type: string
          in: query
          name: 'page[limit]'
          description: The maximum number of tasks you would like returned in a single batch. Use the links.next member in the response to get the remainder.
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
      tags:
        - Orders
      x-lifecycle:
        status: trustedTester
  '/orders/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The id of the order to be returned
    get:
      summary: Get Order
      tags:
        - Orders
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/orders'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-orders-id
      security:
        - OAuth2:
            - order
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Fetch the current values for the specified order.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      operationId: options-order-id
      summary: 'List valid HTTP verbs for /orders/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Orders
  '/orders/{id}/relationships/customFields':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Custom Fields ID
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links:
                    type: object
                    properties:
                      related:
                        type: string
                      self:
                        type: string
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: orderCustomFields
                      id:
                        type: string
                        example: 'AG-1234123412:ORD-1234567'
              examples:
                Relationship Example:
                  value:
                    links:
                      related: 'http://example.com/platform/orders/AG-1234123412:ORD-1234567/customFields'
                      self: 'http://example.com/platform/orders/AG-1234123412:ORD-1234567/relationships/customFields'
                    data:
                      type: orderCustomFields
                      id: 'AG-1234123412:ORD-123456'
      operationId: get-orderCustomFieldsID-by-order
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns a reference to the custom metadata for this sales order. Use the path without `/relationships/` in it to get the actual data.

        Attributes can be set up at the partner administration page in Partner Center.
      security:
        - OAuth2:
            - order
      x-lifecycle:
        status: trustedTester
      tags:
        - Orders
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      summary: ''
      operationId: options-orderCustomFieldsID-by-order
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Orders
  '/orders/{id}/customFields':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Custom Fields
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/orderCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: 'AG-1231231:ORD-1234567'
                      type: salesAccountCustomFields
                      attributes:
                        partnerFields:
                          - fieldID: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldID: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldID: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-orderCustomFields-by-order
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        This endpoint acts like a alias to [Get Order Custom Fields by ID endpoint](b3A6MzYxMTM5MTY-get-order-custom-data-by-id). It returns custom fields about a sales order.
      security:
        - OAuth2:
            - order
      x-lifecycle:
        status: trustedTester
      tags:
        - Orders
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      summary: ''
      operationId: options-orderCustomFields-by-order
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Orders
  '/orderCustomFields/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        example: 'AG-1231231:ORD-1234567'
        description: The ID of the Custom Fields - actually the same id of the Sales Order
    patch:
      summary: Update Custom Fields
      operationId: patch-orderCustomFields-by-id
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/orderCustomFields'
              required:
                - data
            examples:
              'Example with String, Date and Integer':
                value:
                  data:
                    id: 'AG-1231231:ORD-1234567'
                    type: orderCustomFields
                    attributes:
                      partnerFields:
                        - fieldID: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                          integerValue: 1000
                        - fieldID: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - fieldID: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                          stringValue: A good string value
              Example some fields using externalId instead of fieldId:
                value:
                  data:
                    id: 'AG-1231231:ORD-1234567'
                    type: orderCustomFields
                    attributes:
                      partnerFields:
                        - externalId: days-active
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - externalId: custom-nickname
                          stringValue: A good string value
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/orderCustomFields'
              examples:
                Return Example:
                  value:
                    data:
                      id: 'AG-1231231:ORD-1234567'
                      type: orderCustomFields
                      attributes:
                        partnerFields:
                          - fieldID: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldID: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldID: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom Fields are an additional information attached to an Order
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - order
      tags:
        - Order Custom Fields
    get:
      summary: Get Custom Fields by ID
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/orderCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: 'AG-1231231:ORD-1234567'
                      type: orderCustomFields
                      attributes:
                        partnerFields:
                          - fieldID: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldID: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldID: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-orderCustomFields-by-id
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns custom fields about a sales order.

        Attributes can be set up at the partner administration page in Partner Center.
      security:
        - OAuth2:
            - order
      x-lifecycle:
        status: trustedTester
      tags:
        - Order Custom Fields
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
    options:
      summary: ''
      operationId: options-orderCustomFields-by-id
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Order Custom Fields
  '/users/{id}/relationships/businessLocations':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    options:
      operationId: options-users-id-relationships-businessLocations
      summary: 'List valid HTTP verbs for ''/users/{id}/relationships/businessLocations'''
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Users
    post:
      summary: Associate user with location
      operationId: post-users-id-relationships-businessLocations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: A list of business locations to be added
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: AG-1234567
                        description: The ID of a business location to grant access to
                      type:
                        type: string
                        description: This should always be `businessLocations`
                        default: businessLocations
                        example: businessLocations
                    required:
                      - id
                      - type
              required:
                - data
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Users can be granted access to business location(s) using the POST operation. After the operation completes, the user will have access to all their previous business locations plus any new locations in the POST request. If the user already has access to one or more of the specified locations they will be silently ignored.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - user.admin
      tags:
        - Users
    get:
      summary: Get user locations
      operationId: get-users-id-relationships-businessLocations
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Retrieves the business locations to which the User is associated.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      security:
        - OAuth2:
            - user.admin
      tags:
        - Users
    patch:
      summary: Replace user location access
      operationId: patch-users-id-relationships-businessLocations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: A list of business locations to be updated
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: AG-1234567
                        description: The ID of a business location to grant access to
                      type:
                        type: string
                        description: This should always be `businessLocations`
                        default: businessLocations
                        example: businessLocations
                    required:
                      - id
                      - type
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/users'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Users can be granted access to business location(s) or removed from access to business location(s) using the PATCH operation. After the operation completes, the user will have access only to those business locations specified in the request body (if any).
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - user.admin
      tags:
        - Users
    delete:
      summary: Dissociate user from location
      operationId: delete-users-id-relationships-businessLocations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: A list of business locations to be removed
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: AG-1234567
                        description: The ID of a business location to remove access
                      type:
                        type: string
                        description: This should always be `businessLocations`
                        default: businessLocations
                        example: businessLocations
                    required:
                      - id
                      - type
              required:
                - data
      responses:
        '204':
          description: No Content
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Access to business locations can be removed from a user with the DELETE operation. If the user does not already have access to one or more of the specified locations, they will be silently ignored.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - user.admin
      tags:
        - Users
  /automationRuns:
    parameters: []
    post:
      summary: Create automation run
      tags:
        - Automation Runs
      responses:
        '202':
          description: Accepted
      operationId: post-autoamtionruns
      security:
        - OAuth2:
            - business
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Create an automation run (to trigger a preconfigured automation)
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
          in: header
          name: Content-Type
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
          required: true
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/automationRuns'
    options:
      operationId: options-automationruns-id
      summary: List valid HTTP verbs for /automationRuns
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Automation Runs
  /salesAccounts:
    post:
      summary: Create Sales Account
      operationId: post-salesAccounts
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesAccounts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created business location
              examples:
                Return Example (with ID):
                  value:
                    id: AG-1234567
                    type: salesAccounts
                    attributes:
                      tags:
                        - tag1
                        - tag2
                      customerIdentifier: User-defined-id-123123
                      name: Company Example
                      address:
                        line1: 109 8th Street E.
                        line2: Suite 23
                        city: Saskatoon
                        stateCode: CA
                        zip: S7M 1R3
                        postalCode: S7M 1R3
                        regionCode: CA-SK
                        countryCode: CA
                      phoneNumbers:
                        - '+13068800001'
                      serviceAreaBusiness: true
                      geoCoordinate:
                        latitude: -90
                        longitude: -180
                    relationships:
                      salesPeople:
                        data:
                          - id: U-123123-123123
                            type: users
                      businessPartner:
                        data:
                          type: partners
                          id: ABC
                      businessCategories:
                        data:
                          - type: businessCategories
                            id: 'active:diving:freediving'
                      type: salesAccounts
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created business location
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/salesAccounts'
            examples:
              Insert Sales Account Example:
                value:
                  data:
                    type: salesAccounts
                    attributes:
                      tags:
                        - tag1
                        - tag2
                      customerIdentifier: User-defined-id-123123
                      name: Company Example
                      address:
                        line1: 109 8th Street E.
                        line2: Suite 23
                        city: Saskatoon
                        stateCode: CA
                        zip: S7M 1R3
                        postalCode: S7M 1R3
                        regionCode: CA-SK
                        countryCode: CA
                      phoneNumbers:
                        - '+13068800001'
                      serviceAreaBusiness: true
                      geoCoordinate:
                        latitude: -90
                        longitude: -180
                    relationships:
                      salesPeople:
                        data:
                          - id: U-123123-123123
                            type: users
                      businessPartner:
                        data:
                          type: partners
                          id: ABC
                      businessCategories:
                        data:
                          - type: businessCategories
                            id: 'active:diving:freediving'
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Used to record basic data for a new location.

        The following members must be populated during creation:
        - `relationships.businessPartner.data.id`
        - `attributes.name`
        - `attributes.address.countryCode` as well as other address fields based on the norms of the country.
        - `relationships.categories.data.[].id` - At least one category must be provided
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - sales.account
      tags:
        - Sales Accounts
    options:
      operationId: options-salesAccounts
      summary: List valid HTTP verbs for /salesAccounts
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Sales Accounts
    get:
      summary: List Sales Accounts
      operationId: get-salesAccounts
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/salesAccounts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
              examples:
                Return Example:
                  value:
                    id: AG-1234567
                    type: salesAccounts
                    attributes:
                      tags:
                        - tag1
                        - tag2
                      customerIdentifier: User-defined-id-123123
                      name: Company Example
                      address:
                        line1: 109 8th Street E.
                        line2: Suite 23
                        city: Saskatoon
                        stateCode: CA
                        zip: S7M 1R3
                        postalCode: S7M 1R3
                        regionCode: CA-SK
                        countryCode: CA
                      phoneNumbers:
                        - '+13068800001'
                      serviceAreaBusiness: true
                      geoCoordinate:
                        latitude: -90
                        longitude: -180
                    relationships:
                      salesPeople:
                        data:
                          - id: U-123123-123123
                            type: users
                      customFields:
                        data:
                          - id: AG-1234567
                            type: customFields
                      businessPartner:
                        data:
                          type: partners
                          id: ABC
                      businessCategories:
                        data:
                          - type: businessCategories
                            id: 'active:diving:freediving'
                      type: salesAccounts
                    included:
                      - id: AG-1231231
                        type: salesAccountCustomFields
                        partnerFields:
                          - fieldId: FieldID-1231231-12312312
                            stringValue: Text value
                            title: Title of field FieldID-1231231
                            description: Description of field FieldID-1231231
                            fieldType: string
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Produces a list of sales accounts
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[businessPartner.id]'
          description: Return business locations for the specified partner
          required: true
        - schema:
            type: string
          in: query
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
          name: 'page[cursor]'
        - schema:
            type: string
          in: query
          description: The maximum number of accounts you would like returned in a single batch. Use the links.next member in the response to get the remainder. Any number higher than 25 will be lowered to 25.
          name: 'page[limit]'
        - schema:
            type: string
            enum:
              - customFields
              - salesPeople
              - businessCategories
            uniqueItems: true
          in: query
          name: include
          description: A list of relationships where you would like the related records embedded in the response. This can be used to save a network request.
      security:
        - OAuth2:
            - sales.account
      tags:
        - Sales Accounts
      x-lifecycle:
        status: trustedTester
    parameters: []
  '/salesAccounts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Sales Accounts
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesAccounts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
              examples:
                example-1:
                  value:
                    data:
                      id: AG-1234567
                      type: salesAccounts
                      attributes:
                        tags:
                          - tag1
                          - tag2
                        customerIdentifier: User-defined-id-123123
                        name: Company Example
                        address:
                          line1: 109 8th Street E.
                          line2: Suite 23
                          city: Saskatoon
                          stateCode: CA
                          zip: S7M 1R3
                          postalCode: S7M 1R3
                          regionCode: CA-SK
                          countryCode: CA
                        phoneNumbers:
                          - '+13068800001'
                        serviceAreaBusiness: true
                        geoCoordinate:
                          latitude: -90
                          longitude: -180
                      relationships:
                        salesPeople:
                          data:
                            - id: U-123123-123123
                              type: users
                        customFields:
                          data:
                            - id: AG-1234567
                              type: customFields
                        businessPartner:
                          data:
                            type: partners
                            id: ABC
                        businessCategories:
                          data:
                            - type: businessCategories
                              id: 'active:diving:freediving'
                        type: salesAccounts
                      included:
                        - id: AG-1231231
                          type: salesAccountCustomFields
                          partnerFields:
                            - fieldId: FieldID-1231231-12312312
                              stringValue: Text value
                              title: Title of field FieldID-1231231
                              description: Description of field FieldID-1231231
                              fieldType: string
      operationId: get-salesAccounts-by-id
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns basic data about the sales account.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      security:
        - OAuth2:
            - sales.account
      tags:
        - Sales Accounts
    options:
      operationId: options-salesAccounts-by-id
      summary: 'List valid HTTP verbs for /salesAccounts/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Options
        - Sales Accounts
    patch:
      summary: Update Sales Account
      operationId: patch-salesAccounts-by-id
      tags:
        - Sales Accounts
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Update the existing business location.
        Only the root ID and type fields are required. All others are optional and will keep their original value if omitted.
      x-lifecycle:
        status: trustedTester
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - sales.account
      responses:
        '200':
          description: Ok
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesAccounts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the updated business location
              examples:
                example-1:
                  value:
                    data:
                      id: AG-1234567
                      type: salesAccounts
                      attributes:
                        tags:
                          - tag1
                          - tag2
                        customerIdentifier: User-defined-id-123123
                        name: Company Example
                        address:
                          line1: 109 8th Street E.
                          line2: Suite 23
                          city: Saskatoon
                          stateCode: CA
                          zip: S7M 1R3
                          postalCode: S7M 1R3
                          regionCode: CA-SK
                          countryCode: CA
                        phoneNumbers:
                          - '+13068800001'
                        serviceAreaBusiness: true
                        geoCoordinate:
                          latitude: -90
                          longitude: -180
                      relationships:
                        salesPeople:
                          data:
                            - id: U-123123-123123
                              type: users
                        businessPartner:
                          data:
                            type: partners
                            id: ABC
                        businessCategories:
                          data:
                            - type: businessCategories
                              id: 'active:diving:freediving'
                        type: salesAccounts
          headers: {}
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/salesAccounts'
            examples:
              example-1:
                value:
                  data:
                    id: AG-1234567
                    type: salesAccounts
                    attributes:
                      tags:
                        - tag1
                        - tag2
                      customerIdentifier: User-defined-id-123123
                      name: Company Example
                      address:
                        line1: 109 8th Street E.
                        line2: Suite 23
                        city: Saskatoon
                        stateCode: CA
                        zip: S7M 1R3
                        postalCode: S7M 1R3
                        regionCode: CA-SK
                        countryCode: CA
                      phoneNumbers:
                        - '+13068800001'
                      serviceAreaBusiness: true
                      geoCoordinate:
                        latitude: -90
                        longitude: -180
                    relationships:
                      salesPeople:
                        data:
                          - id: U-123123-123123
                            type: users
                      businessPartner:
                        data:
                          type: partners
                          id: ABC
                      businessCategories:
                        data:
                          - type: businessCategories
                            id: 'active:diving:freediving'
                      type: salesAccounts
  '/salesAccounts/{id}/relationships/customFields':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Custom Fields ID
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links:
                    type: object
                    properties:
                      related:
                        type: string
                      self:
                        type: string
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: salesAccountCustomFields
                      id:
                        type: string
                        example: AG-1234123412
              examples:
                Relationship Example:
                  value:
                    links:
                      related: 'http://example.com/platform/salesAccounts/AG-1234123412/customFields'
                      self: 'http://example.com/platform/salesAccounts/AG-1234567812/relationships/customFields'
                    data:
                      type: salesAccountCustomFields
                      id: AG-1234123412
      operationId: get-salesAccountCustomFieldsID-by-salesAccount
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns a reference to the custom metadata for this sales account. Use the path without `/relationships/` in it to get the actual data.

        Attributes can be set up at the partner administration page in Partner Center.
      security:
        - OAuth2:
            - sales.account
      x-lifecycle:
        status: trustedTester
      tags:
        - Sales Accounts
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      summary: ''
      operationId: options-salesAccountCustomFieldsID-by-salesAccount
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Sales Accounts
  '/salesAccounts/{id}/customFields':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Custom Fields
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesAccountCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: AG-1231231
                      type: salesAccountCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-salesAccountCustomFields-by-salesAccount
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        This endpoint acts like a alias to [Get Sales Account Custom Fields by ID endpoint](b3A6MzYxMTM5MTY-get-sales-account-custom-data-by-id). It returns custom fields about a sales account.
      security:
        - OAuth2:
            - sales.account
      x-lifecycle:
        status: trustedTester
      tags:
        - Sales Accounts
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      summary: ''
      operationId: options-salesAccountCustomFields-by-salesAccount
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Sales Accounts
  '/salesAccountCustomFields/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        example: AG-1231231
        description: The ID of the Custom Fields - actually the same id of the Sales Account
    patch:
      summary: Update Custom Fields
      operationId: patch-salesAccountCustomFields-by-id
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/salesAccountCustomFields'
              required:
                - data
            examples:
              'Example with String, Date and Integer':
                value:
                  data:
                    id: AG-1231231
                    type: salesAccountCustomFields
                    attributes:
                      partnerFields:
                        - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                          stringValue: A good string value
              Example some fields using externalId instead of fieldId:
                value:
                  data:
                    id: AG-1231231
                    type: salesAccountCustomFields
                    attributes:
                      partnerFields:
                        - externalId: days-active
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - externalId: custom-nickname
                          stringValue: A good string value
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesAccountCustomFields'
              examples:
                Return Example:
                  value:
                    data:
                      id: AG-1231231
                      type: salesAccountCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom Fields are an additional information attached to a Sales Account
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - sales.account
      tags:
        - Sales Account Custom Fields
    get:
      summary: Get Custom Fields by ID
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesAccountCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: AG-1231231
                      type: salesAccountCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-salesAccountCustomFields-by-id
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns custom fields about a sales account.

        Attributes can be set up at the partner administration page in Partner Center.
      security:
        - OAuth2:
            - sales.account
      x-lifecycle:
        status: trustedTester
      tags:
        - Sales Account Custom Fields
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
    options:
      summary: ''
      operationId: options-salesAccountCustomFields-by-id
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Sales Account Custom Fields
  '/users/{id}/customFields':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Custom Fields
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/userCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: U-12345678-abcd-1234-abcd-123456789ab1
                      type: userCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-userCustomFields-by-userid
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        This endpoint acts like a alias to [Get User Custom Fields by ID endpoint](b3A6MzczMDUyMjU-get-custom-fields-by-id). It returns custom fields for a user.
      security:
        - OAuth2:
            - user.admin
      x-lifecycle:
        status: trustedTester
      tags:
        - Users
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      summary: 'List valid HTTP verbs for /users/{id}/customFields'
      operationId: options-userCustomFields-by-userid
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - User Custom Fields
  '/userCustomFields/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        example: U-12345678-abcd-1234-abcd-123456789abc
        description: The ID of the Custom Fields - actually the same id of the User
    patch:
      summary: Update Custom Fields
      operationId: patch-userCustomFields-by-id
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/userCustomFields'
              required:
                - data
            examples:
              'Example with String, Date and Integer':
                value:
                  data:
                    id: U-12345678-abcd-1234-abcd-123456789abd
                    type: userCustomFields
                    attributes:
                      partnerFields:
                        - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                          stringValue: A good string value
              Example some fields using externalId instead of fieldId:
                value:
                  data:
                    id: U-12345678-abcd-1234-abcd-123456789abd
                    type: userCustomFields
                    attributes:
                      partnerFields:
                        - externalId: days-active
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - externalId: custom-nickname
                          stringValue: A good string value
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/userCustomFields'
              examples:
                Return Example:
                  value:
                    data:
                      id: U-12345678-abcd-1234-abcd-123456789123
                      type: userCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom Fields are an additional information attached to a User
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - user.admin
      tags:
        - User Custom Fields
    get:
      summary: Get Custom Fields by ID
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/userCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: U-12345678-abcd-1234-abcd-123456789abe
                      type: userCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-userCustomFields-by-id
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns custom fields about a user.

        Attributes can be set up at the partner administration page in Partner Center.
      security:
        - OAuth2:
            - user.admin
      x-lifecycle:
        status: trustedTester
      tags:
        - User Custom Fields
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
    options:
      summary: ''
      operationId: options-userCustomFields-by-id
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - User Custom Fields
  '/productCustomFields/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        example: ABC-MP-1234567890ABCDEFGHIJKLMNOPQRSTUV
        description: 'The ID of the Custom Fields, which is a Product ID'
    patch:
      summary: Update Custom Fields for a product
      operationId: patch-productCustomFields-by-id
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/productCustomFields'
              required:
                - data
            examples:
              'Example with String, Date and Integer':
                value:
                  data:
                    id: ABC-MP-1234567890ABCDEFGHIJKLMNOPQRSTUV
                    type: productCustomFields
                    attributes:
                      partnerFields:
                        - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                          stringValue: A good string value
              Example some fields using externalId instead of fieldId:
                value:
                  data:
                    id: ABC-MP-1234567890ABCDEFGHIJKLMNOPQRSTUV
                    type: productCustomFields
                    attributes:
                      partnerFields:
                        - externalId: days-active
                          integerValue: 1000
                        - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                          dateValue: A good date value
                        - externalId: custom-nickname
                          stringValue: A good string value
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productCustomFields'
              examples:
                Return Example:
                  value:
                    data:
                      id: ABC-MP-1234567890ABCDEFGHIJKLMNOPQRSTUV
                      type: productCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom Fields are an additional information attached to a Product
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth2:
            - product
      tags:
        - Product Custom Fields
    get:
      summary: Get Product Custom Fields by ID
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productCustomFields'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of purchases can be gotten from
                        format: uri
              examples:
                Return Example:
                  value:
                    data:
                      id: ABC-MP-1234567890ABCDEFGHIJKLMNOPQRSTUV
                      type: productCustomFields
                      attributes:
                        partnerFields:
                          - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                            integerValue: 1000
                            title: Title of 123448ca field
                            description: Description for 123448ca field
                            fieldType: integer
                          - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                            dateValue: A good date value
                            title: Title of 987448ca field
                            description: Description for 987448ca field
                            fieldType: date
                          - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                            stringValue: A good string value
                            title: Title of abc448ca field
                            description: Description for abc448ca field
                            fieldType: string
      operationId: get-productCustomFields-by-id
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Returns custom fields for a product.

        Attributes can be set up at the partner administration page in Partner Center.
      security:
        - OAuth2:
            - product
      x-lifecycle:
        status: trustedTester
      tags:
        - Product Custom Fields
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
    options:
      summary: ''
      operationId: options-productCustomFields-by-id
      responses:
        '204':
          description: No Content
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      tags:
        - Options
        - Product Custom Fields
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          scopes:
            sales.contact: Read-write access to sales contact details
            business: Read-write access to business details
            partner: Read-write access to details about your partner
            financial: Read-write access to financial details
            order: Read-write access to order details
            'user.profile:read': Read access to the profile fields of all categories of users
            'user.contact:read': 'Read access to the contact info (email, phone, address) of all categories of users'
            'user.permission:read': 'Read access to the permission info (accessible locations, features and roles) of all categories of users'
            user.permission: 'Read-write access to the permission info (accessible locations, features and roles) of all categories of users'
            user.admin: Read-write access to manage all users
            user.list: '''Allows searching for users based on a set of filters. (ex: email, name, category, organization). Without this scope an exact user id is required.'
            self.user.admin: 'Allows editing the profile, contact info and profile image for the current user.'
            'self.user.contact:read': 'Read access to the contact info (email, phone, address) of the current user.'
            openid: Allows getting the user id of the current user
            profile: 'Readonly access to the user profile, including name, locale, and language preferences.'
            email: Allows readonly access to the email of the current user.
            phone: Allows readonly access to the phone numbers of the current user.
            address: Allows readonly access to the address of the current user.
            sales.account: Allows read-write access to account records
  schemas:
    businessLocations:
      title: Business Location
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Any entity that works with a provider company (two-way communication). These generally have a sustained relationship with the provider company. This may include a potential buyer, an existing client, or a past client that has churned.
      x-tags:
        - Business Locations
      properties:
        id:
          type: string
          example: AG-1234567
        type:
          type: string
          default: businessLocations
          enum:
            - businessLocations
          readOnly: true
        attributes:
          type: object
          properties:
            customerIdentifier:
              type: string
              description: 'A value assigned by the business partner to reference this business location. Customer ID is currently NOT enforced to be unique, and there may be negative side effects to having a duplicate and/or changing a customer ID, specifically around legacy SSO. Use caution when editing a customer ID.'
            name:
              type: string
              description: The common name for this location
            address:
              type: object
              properties:
                line1:
                  type: string
                  example: 109 8th Street E.
                  description: The primary information. Typically a street address.
                line2:
                  type: string
                  example: Suite 23
                  description: An additional line of information to add after the street address.
                city:
                  type: string
                stateCode:
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: CA
                  deprecated: true
                  description: Deprecated - This field has been replaced by regionCode. The two letter state code within the country
                  x-lifecycle:
                    status: deprecated
                    deprecated: '2021-10-04'
                    proposedRemoval: '2021-11-04'
                    description: This field was replaced by regionCode while at the trusted tester phase. It will be removed shortly.
                zip:
                  type: string
                  deprecated: true
                  description: Deprecated - This field has been renamed postalCode
                  x-lifecycle:
                    status: deprecated
                    deprecated: '2021-10-04'
                    proposedRemoval: '2021-11-04'
                    description: This field was renamed to postalCode while at the trusted tester phase. It will be removed shortly.
                postalCode:
                  type: string
                  description: The zip code or postal code component of an address.
                  example: S7M 1R3
                regionCode:
                  type: string
                  description: |-
                    The code for the top level subdivision within the country (state/province) as defined by [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.

                    Examples: CA-SK, US-FL, AG-08, AU-NSW
                  example: CA-SK
                  maxLength: 6
                  minLength: 4
                  pattern: '^[A-Z]{2}-[\w]{1,3}$'
                countryCode:
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: CA
                  description: |-
                    The two letter country code defined by [ISO 3166-1](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)'

                    Examples: CA, US, AU
                  pattern: '^[A-Z]{2}$'
            phoneNumbers:
              type: array
              description: |-
                The standard phone numbers for the location.
                Formating characters may be included.

                **Extentions**

                It is recommended that extentions are included at the end of the number after an appropriate seperator: Pause: `,` Wait: `;` Default: `ext.`

                You may test the parsibility of a number using https://phonenumbers.temba.io/ All phone numbers are assumed to be in the same country as this business location.
              items:
                type: string
            serviceAreaBusiness:
              type: boolean
              description: When true the address will be used as the center of the area that this location services instead of being displayed.
            geoCoordinate:
              type: object
              description: |-
                The point where the map pin for the location should be displayed.

                The values will **not** be automatically updated when the address is updated. If not provided when creating the location they will be initilized based on the address.

                It is expressed as a pair of numbers to represent degrees latitude and degrees longitude in accordance with the [WGS84](https://en.wikipedia.org/wiki/World_Geodetic_System) standard (the one used by your GPS).
              properties:
                latitude:
                  type: number
                  minimum: -90
                  maximum: 90
                longitude:
                  type: number
                  minimum: -180
                  maximum: 180
              required:
                - latitude
                - longitude
            hours:
              $ref: '#/components/schemas/hoursOfOperation'
                
        relationships:
          type: object
          properties:
            businessPartner:
              type: object
              description: A link to the organization that provides the platform to this business location.
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      default: partners
                      enum:
                        - partners
                    id:
                      type: string
                      example: ABC
              required:
                - data
            businessCategories:
              type: object
              description: A list of the types of business this location should be compared against. If not set during creation it will default "other".
              properties:
                data:
                  type: array
                  maxItems: 3
                  minItems: 1
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        default: businessCategories
                        enum:
                          - businessCategories
                        example: businessCategories
                      id:
                        type: string
                        example: 'active:diving:freediving'
                    required:
                      - type
                      - id
    salesContacts:
      title: Sales Contact
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        A Sales Contact is a person who works for the business that your sales team may send communications to regarding the business.

        Note: Currently when creating a contact you must specify exactly 1 businessLocations id for it to be linked to. We intend to expand this limit.
      x-tags:
        - Sales Contacts
      properties:
        type:
          type: string
          default: salesContacts
          enum:
            - salesContacts
          readOnly: false
        id:
          type: string
          description: The id will be assigned by the server and must be included on all update requests. Values sent during creation will be ignored.
        attributes:
          type: object
          properties:
            givenName:
              type: string
              maxLength: 25
              description: 'Given name(s) or first name(s) of the contact. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
              example: Samantha
            familyName:
              type: string
              maxLength: 25
              description: 'Surname(s) or last name(s) of the contact. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
              example: Smith
            phone:
              type: string
              description: |-
                The complete primary phone number for the contact.
                Formating characters may be included.

                **Extentions**

                It is recommended that extentions are included at the end of the number after a supported seperator: `,` (touch tone Pause),  `;` (touch tone Wait), `;ext=` (RFC3966/SIP/ tel: link protocol),  `ext.` (default)

                You may test the parsibility of a number using https://phonenumbers.temba.io/
              example: +1 (306) 555-1234 ext. 89
            phoneCountryCode:
              type: string
              description: An optional 2 character country code used to aid in parsing the raw number.
              maxLength: 2
              minLength: 2
              example: CA
            email:
              type: string
              format: email
              description: 'Required during creation: The primary email address for the contact'
              example: sam@example.com
        relationships:
          type: object
          properties:
            businessLocations:
              type: object
              description: 'Required during creation: The business locations that this contact is for'
              properties:
                data:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: AG-1234567
                      type:
                        type: string
                        default: businessLocations
                        enum:
                          - businessLocations
                    required:
                      - id
                      - type
                meta:
                  type: object
                  description: Readonly
                  properties:
                    total:
                      type: integer
                      description: 'Readonly: The total number of locations connected to this contact'
                      readOnly: true
                  readOnly: true
      required:
        - type
    partners:
      title: Partner
      type: object
      x-lifecycle:
        status: proposed
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Proposed`

        A partner is an organization that has a store filled with products that other organizations can purchase.

        Partners may fill one or more of the following roles:
        - **Business Partner**: Have a direct billing relationship with SMBs
        - **Vendor**: Integrate goods into the Vendasta platform to be sold by Business Partners to SMBs
        - **Service Provider**: Integrate services into the Vendasta platform that they will fulfill for SMBs

        Note: Small/Medium-Sized Businesses (SMBs) are represented by their primary Business Location record. They may only buy products through their Business Partner.
      properties:
        id:
          type: string
          minLength: 3
          maxLength: 4
        type:
          type: string
          enum:
            - partners
          readOnly: false
        attributes:
          type: object
          properties:
            name:
              type: string
              description: The public name for the organization
          required:
            - name
        relationships:
          type: object
          properties:
            parent:
              type: object
              description: 'The parent partner is the partner that this partner primarily purchases stuff from. '
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      minLength: 3
                      maxLength: 4
                    type:
                      type: string
                      enum:
                        - parent
              required:
                - data
      required:
        - id
        - type
      x-tags:
        - Partners
      x-examples:
        example-1:
          data:
            id: ABC
            type: partners
            attributes:
              name: Mountain Media
            relationships:
              parent:
                data:
                  id: VMF
                  type: partners
    purchases:
      title: Purchase
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Purchases are a recipt of items sold to your organization. When selling to another organization you will want to create an Order instead.

        Purchases generated by the platform to record the wholesale fees that are charged to a partner for products they sell to their customers. One time fees and each renewal will appear as seperate line items broken out per customer.

        All amounts will be specified in the minor unit of the purchase's currency. For example in the case of USD that would be cents. For more info on converting between minor and major units see [this wikipedia article](https://en.wikipedia.org/wiki/ISO_4217#Minor_units_of_currency).
      x-tags:
        - Purchases
      properties:
        id:
          type: string
          description: 'A platform generated identifier for the purchase '
        type:
          type: string
          enum:
            - purchases
          readOnly: false
        attributes:
          type: object
          properties:
            createdAt:
              description: The time at which the purchase was created
              format: date-time
              type: string
            statusCode:
              type: string
              default: draft
              readOnly: true
              enum:
                - draft
                - due
                - overdue
                - paid
                - uncollectible
              description: |-
                The payment status of the purchase will be one of the following:
                - `draft`:  Indicates the purchase is not closed yet. New line items can be added when the purchase is in this state.
                - `due`: The purchase has been finialized and is ready to be paid.
                - `overdue`: The purchase is unpaid and has past the due date
                - `paid`: The full amount has been paid.
                - `uncollectible`: After multiple failed attempts to collect payment it's unlikely that this purchase will be paid
            discountAmount:
              type: integer
              description: The sum of all price reductions applied to products
            taxAmount:
              type: integer
              description: The sum of all taxes applied to items of the purchase
            total:
              type: integer
              description: 'The total amount the purchase is for, accounting for any applied discounts or taxes'
            currencyCode:
              type: string
              minLength: 3
              maxLength: 3
              example: CAD
              description: 'The 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)'
            lineItems:
              type: array
              items:
                type: object
                properties:
                  sku:
                    type: string
                    description: The unique identifier of a product or service
                  customerId:
                    type: string
                    description: The ID of the organization that purchased the product
                  unitAmount:
                    description: The wholesale cost of the product before discounts or taxes are applied.
                    type: integer
                  discountAmount:
                    description: The total amount the cost of this product has been reduced by
                    type: integer
                  taxAmount:
                    description: The total amount of tax charged for this product
                    type: integer
                  total:
                    description: The final cost of the product accounting for any applied discounts or taxes
                    type: integer
        relationships:
          type: object
          properties:
            recipient:
              type: object
              description: The partner that the purchase is being sent to. They will be the one who purchased the product at a wholesale rate and activated it for one of their customers
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      minLength: 3
                      maxLength: 4
                    type:
                      type: string
                      enum:
                        - partner
              required:
                - data
      required:
        - id
        - type
    orders:
      title: Order
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        An order records a sale to a business location. For example requests see the [Sales guide](../../../../../../docs/Guides/Sell/Overview.md).
      x-tags:
        - Orders
      properties:
        id:
          type: string
          example: 'AG-1234:ORD-1234567'
          readOnly: true
        type:
          type: string
          default: orders
          enum:
            - orders
        attributes:
          type: object
          properties:
            currencyCode:
              type: string
              minLength: 3
              maxLength: 3
              example: CAD
              description: 'The 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)'
            lineItems:
              type: array
              items:
                type: object
                properties:
                  sku:
                    type: string
                    description: 'The unique identifier of a product, product edition or package. It can be obtained by following [this guide](https://docs.apigateway.co/docs/openapi-specs/docs/Guides/Sell/FindSKU.md).'
                  quantity:
                    type: integer
                    description: The number of units to ordered
                    default: 1
                  amount:
                    type: integer
                    description: The unit price in cents
                    default: 0
                  intervalCode:
                    type: string
                    enum:
                      - onetime
                      - monthly
                      - yearly
                    description: The billing frequency
                  isPackage:
                    type: boolean
                    description: Indicates if this lineitem is a package instead of a product or an addon.
                    readOnly: true
                  containedInPackage:
                    type: string
                    description: Holds the SKU of the package that this lineitem is part of. Products inside of a package do not have pricing so refer to the lineitem of the package SKU to find the price.
                    readOnly: true
                required:
                  - sku
            statusCode:
              type: string
              default: processing
              enum:
                - draft
                - processing
                - declined
                - fulfilled
                - error
                - archived
              description: |-
                The status of the order will be automatically set to one of the following by the system:
                - `draft`: The order has not yet been sent for approval
                - `processing`: The order and its items are being processed
                - `declined`: The order has been declined by an admin or a customer
                - `fulfilled`: The order and its items have been sucessfuly processed. This includes activating the products with the vendor(s).
                - `error`: One or more of the orders items failed to be processed
                - `archived`: The order has been marked as archived
              readOnly: true
        relationships:
          type: object
          properties:
            businessLocation:
              type: object
              description: 'Required during creation: The business location the order is for'
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      example: AG-1234567
                    type:
                      type: string
                      default: businessLocations
                      enum:
                        - businessLocations
              required:
                - data
    orderCustomFields:
      title: Order Custom Fields
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom fields associated with a sales order. The field definitions can be managed at Partner Center -> Administration -> Custom Fields.

        One form of identifier should be chosen, either `fieldId` or `externalId`.
        `fieldId` is the computer generated ID (like `FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99`) and `externalId` is a optional human-readable ID that can be set in the administration panel.

        Dropdown possible value and the currency code are also configured in the Administration panel.
      x-examples:
        Custom Fields with string value Example:
          data:
            id: 'AG-1231231:ORD-1234567'
            type: orderCustomFields
            partnerFields:
              - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                stringValue: A good string value
                title: Title of abc448ca field
                description: Description for abc448ca field
                fieldType: string
        Custom Fields with integer value Example:
          data:
            id: 'AG-1231231:ORD-1234567'
            type: orderCustomFields
            partnerFields:
              - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                integerValue: 1000
                title: Title of 123448ca field
                description: Description for 123448ca field
                fieldType: integer
        Custom Fields with Date value Example:
          data:
            id: 'AG-1231231:ORD-1234567'
            type: orderCustomFields
            partnerFields:
              - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                dateValue: '2016-01-02T15:04:05Z'
                title: Title of 987448ca field
                description: Description for 987448ca field
                fieldType: date
        Custom Fields Full:
          data:
            id: 'AG-1231231:ORD-1234567'
            type: orderCustomFields
            partnerFields:
              - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                stringValue: A good string value
                title: Title of abc448ca field
                description: Description for abc448ca field
                fieldType: string
              - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                integerValue: 1000
                title: Title of 123448ca field
                description: Description for 123448ca field
                fieldType: integer
              - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                dateValue: '2022-01-02T15:04:05Z'
                title: Title of 987448ca field
                description: Description for 987448ca field
                fieldType: date
              - fieldId: FieldID-987448f2-abc0-abc5-abc2-abc640bf4b00
                dropdownValue: red
                title: Title of 987448f2 field
                description: Description for 987448f2 field
                fieldType: dropdown
              - fieldId: FieldID-98744854-abc0-abc5-abc2-abc640bf4b01
                currencyValue: 10000
                title: Title of 98744854 field
                description: Description for 98744854 field
                fieldType: currency
                currencyCode: CAD
        Custom Fields with Dropdown Example:
          data:
            id: 'AG-1231231:ORD-1234567'
            type: orderCustomFields
            partnerFields:
              - fieldId: FieldID-987448f2-abc0-abc5-abc2-abc640bf4b00
                dropdownValue: red
                title: Title of 987448f2 field
                description: Description for 987448f2 field
                fieldType: dropdown
        Custom Fields with Currency Example:
          data:
            id: 'AG-1231231:ORD-1234567'
            type: orderCustomFields
            partnerFields:
              - fieldId: FieldID-98744854-abc0-abc5-abc2-abc640bf4b01
                currencyValue: 10000
                title: Title of 98744854 field
                description: Description for 98744854 field
                fieldType: currency
                currencyCode: CAD
      x-tags:
        - Order Custom Fields
      properties:
        id:
          type: string
          example: 'AG-1231231:ORD-1234567'
          description: 'An identifier for the parent entity, for example order (AG-1231231:ORD-12345671)'
          readOnly: true
        type:
          type: string
          default: orderCustomFields
          enum:
            - orderCustomFields
          description: Should always be orderCustomFields
        attributes:
          type: object
          properties:
            partnerFields:
              type: array
              description: |-
                List of custom fields specific to the partner with a direct relationship to the sales order.
                To send a new value each field must have at least the fieldId and its correspondent value.
                For example a field of type string must have the stringValue attribute filled.

                string -> stringValue

                integer -> integerValue

                date -> dateValue

                Only the fields that you wish to modify need to be sent.
              items:
                type: object
                properties:
                  fieldId:
                    type: string
                    description: 'Field identifier, can be retrieved by listing the attributes'
                  externalId:
                    type: string
                    description: 'Alternative field identifier, can be set on admin panel and can be retrieved by listing the attributes'
                  fieldType:
                    type: string
                    example: string
                    enum:
                      - string
                      - interger
                      - date
                      - dropdown
                      - currency
                    description: |-
                      Indicates which of the value fields to use to read or write the data. It can only be modified from within partner center. 

                      string -> stringValue

                      integer -> integerValue

                      date -> dateValue

                      dropdown -> dropdownValue

                      currency -> currencyValue
                    readOnly: true
                  stringValue:
                    type: string
                    description: Required when the field type is `string`
                  integerValue:
                    type: integer
                    description: Required when the field type is `integer`
                  dateValue:
                    type: string
                    description: Required when the field type is `date`
                    format: date
                  dropdownValue:
                    type: string
                    description: Required when type is `dropdown`. The possible values can be discovered using the administration panel.
                  currencyValue:
                    type: integer
                    description: |-
                      Required when the field type is `currency`.

                      This field represents the cents (or the smallest part of the currency).

                      Example:
                      USD 600.00 -> currencyValue=60000
                  currencyCode:
                    type: string
                    minLength: 3
                    maxLength: 3
                    description: |-
                      Represents the type of currency when the field is type `currency`. It will be the 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)

                      Ex: USD, CAD, AUD
                    example: USD
                    readOnly: true
                  title:
                    type: string
                    description: 'The main label for the field, appearing in most user interfaces that show the value. This field is not read when setting a value.'
                    readOnly: true
                  description:
                    type: string
                    description: 'A longer text explanation of the field, it optionally appears in the UI. This field is not read when setting a value.'
                    readOnly: true
      required:
        - id
        - type
    businessCategories:
      title: Business Category
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        The taxonomy to be applied to business locations indicating the type of services that they provide.
      x-tags:
        - Business Categories
      properties:
        id:
          type: string
          example: AG-1234567
          readOnly: true
        type:
          type: string
          default: businessCategories
          enum:
            - businessCategories
          readOnly: true
        attributes:
          type: object
          properties:
            name:
              type: string
              description: A user friendly description for the category. It will have been translated based on the Accept-Language header.
              readOnly: true
    users:
      title: Users
      type: object
      x-lifecycle:
        status: proposed
      description: "[Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Proposed`\n\t\nA “user” is a person or bot that could potentially interact with the platform. If they have not been granted access to any features they will not be able to do anything after logging in.\n\nA person who is the customer of multiple businesses may have multiple separate user records within the platform so it is important to always include an organization filter when searching by email or name. \n\nTo learn more and view sample requests visit the [user management guide](../../../../../docs/Guides/Users.md)"
      x-tags:
        - Users
      properties:
        type:
          type: string
          default: users
          enum:
            - users
          readOnly: true
        id:
          type: string
          description: |-
            The id will be assigned by the server and must be included on all update requests. Values sent during creation will be ignored. It is globally unique across all platform instances and will not change.

            You may use the special id `me` to operate on the current user if you have the scope `openid`.
        attributes:
          type: object
          nullable: true
          properties:
            displayName:
              type: string
              example: Bill Smith
              description: The user’s name formatted for display. This will always have a value.
              readOnly: true
            givenName:
              type: string
              description: 'Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
              minLength: 0
              maxLength: 20
              example: William
            familyName:
              type: string
              description: 'Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
              minLength: 0
              maxLength: 25
              example: Smith
            greetingName:
              type: string
              description: The name to use at the opening of messages addressed to the user. Note that in some cultures this is an alternate spelling or shortend form of the first name. Defaults to givenName.
              minLength: 0
              maxLength: 20
              example: Billy
            email:
              type: string
              format: email
              example: bill@example.com
              minLength: 5
              description: |-
                The primary email address for the user.
                This is required when creating a user.
            emailVerified:
              type: boolean
              default: false
              description: 'True if the End-User''s e-mail address has been verified; otherwise false. When true affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. '
              readOnly: true
            emailSet:
              type: boolean
              description: Indicates there is an email address available that can have messages sent to it using the notifications system.
              readOnly: true
            languageLocaleCode:
              type: string
              pattern: '^[a-z]{2}-[A-Z]{2}$'
              example: en-US
              description: |-
                The local language that content should be displayed to this user in.

                Note: We currently have a limited set of allowed languages but expect to support many more in the future. When the requested language is not supported US English will be used.

                It should be a single BCP47/RFC5646 language tag. This is an [ISO 639-1 Alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code in lowercase and an [ISO 3166-1 Alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes) country code in uppercase, separated by a dash.

                Examples:
                - `en-US` English (US)
                - `fr-FR` French (France)
                - `cs-Cz` Czech (Czech Republic)
                - `de-DE` German (Germany)
                - `nl-BE` Dutch (Belgium)
            phoneNumbersSet:
              type: boolean
            phoneNumbers:
              type: array
              items:
                type: object
                properties:
                  number:
                    type: string
                    description: |-
                      The standard phone numbers for the location.
                      Formating characters may be included.

                      **Extentions**

                      It is recommended that extentions are included at the end of the number after an appropriate seperator: Pause: `,` Wait: `;` Default: `ext.`

                      You may test the parsibility of a number using https://phonenumbers.temba.io/

                      All partial phone numbers are assumed to be in the same country as this user's address.
                    example: +1-306-555-1234 ext. 56
                  typeCode:
                    type: string
                    description: |-
                      A classification of what the number should be used for.

                      The mobile number should be preferred when sending SMS messages to the user however they may also be sent to work or home numbers.
                    enum:
                      - mobile
                      - work
                      - home
                      - fax
                      - pager
                required:
                  - number
                  - typeCode
            address:
              type: object
              description: The primary address where this user can be reached.
              properties:
                line1:
                  type: string
                  example: 109 8th Street E.
                  description: The primary information. Typically a street address.
                line2:
                  type: string
                  example: Suite 23
                  description: An additional line of information to add after the street address.
                streetAddress:
                  type: string
                  example: 109 8th Street E.
                  deprecated: true
                  description: Deprecated - This field has been renamed line1
                  x-lifecycle:
                    status: deprecated
                    deprecated: '2021-10-04'
                    proposedRemoval: '2021-11-04'
                    description: This field was renamed to line1 while at the trusted tester phase. It will be removed shortly.
                additionalAddress:
                  type: string
                  example: Suite 23
                  deprecated: true
                  description: Deprecated - This field has been renamed line2. An additional line of information to add after the stree address.
                  x-lifecycle:
                    status: deprecated
                    deprecated: '2021-10-04'
                    proposedRemoval: '2021-11-04'
                    description: This field was renamed to line2 while at the trusted tester phase. It will be removed shortly.
                city:
                  type: string
                  description: 'The city, town or locality component of an address.'
                  example: Saskatoon
                postalCode:
                  type: string
                  description: The zip code or postal code component of an address.
                  example: S7M 1R3
                regionCode:
                  type: string
                  description: |-
                    The code for the top level subdivision within the country (state/province) as defined by [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.

                    Examples: CA-SK, US-FL, AG-08, AU-NSW
                  example: CA-SK
                  maxLength: 6
                  minLength: 4
                  pattern: '^[A-Z]{2}-[\w]{1,3}$'
                countryCode:
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: CA
                  description: |-
                    The two letter country code defined by [ISO 3166-1](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)'

                    Examples: CA, US, AU
                  pattern: '^[A-Z]{2}$'
            profileImage:
              type: string
              format: uri
              description: A photo that can be used to represent this user. If the user does not have a custom image set a default image will be returned.
              example: 'https://storage.googleapis.com/wordpress-www-vendasta/vw-wordpress/Brendan-King-1.jpg'
              readOnly: true
            timeZone:
              type: string
              description: |-
                The User's time zone in the IANA [time zone database format](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).

                Example: `America/Los_Angeles`
              example: America/Regina
            createdAt:
              type: string
              format: date-time
              description: The time at which the user was initially created in the platform.
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: 'The time at which the user’s profile was last updated. Note: Changes to permissions will not affect this field.'
              readOnly: true
        relationships:
          type: object
          properties:
            partner:
              type: object
              description: A link to the organization that provides the platform to this user.
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      default: partners
                      enum:
                        - partners
                    id:
                      type: string
                      example: ABC
              required:
                - data
            businessLocations:
              type: object
              description: |-
                The business locations that this user is a member of.

                When a new location is added to a user they will be granted the default business user permissions.

                Fine grained permissions currently must be managed in Partner Center's UI. We are gathering interest to determine how it should work by API so please send us your use cases.
              properties:
                data:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      type:
                        type: string
                        default: businessLocations
                        example: businessLocations
                        enum:
                          - businessLocations
                      id:
                        type: string
                        example: AG-1234567
                        description: The ID of a previously created business location record.
                    required:
                      - type
                      - id
            platformAccess:
              type: object
              description: |-
                `Proposed` The platform access functionality is still at a `proposed` status. Not all options are currently available.

                Use this field to grant access to platform level features to your employees and contractors.
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        default: appFeatures
                        example: appFeatures
                      id:
                        type: string
                        enum:
                          - 'pc:access'
                          - 'pc:canCustomizeWhitelabel'
                          - 'pc:canAccessBilling'
                          - 'pc:canManageSales'
                          - 'pc:canManageAccounts'
                          - 'pc:canManageTasks'
                          - 'pc:canAccessBrands'
                          - 'pc:canAccessMarketing'
                          - 'pc:canAccessDashboard'
                          - 'pc:canAccessOrders'
                          - 'pc:canManageAdmins'
                          - 'pc:canAccessMarketplace'
                          - 'pc:canEnableApps'
                          - 'pc:canAccessCompanyProfile'
                          - 'pc:canAccessAutomations'
                          - 'ssc:access'
                          - 'ssc:manage'
                          - 'tm:access'
                          - 'tm:manage'
                        description: 'The platform access functionality is still at a `proposed` status. Not all options are currently available. '
                    required:
                      - type
                      - id
    automationRuns:
      title: Automation Run
      type: object
      x-examples: {}
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        An Automation run is the instance of an automation executing its steps for a business location.
        You may configure the automation definition and obtain its ID within Partner Center.
      x-tags:
        - Automation Runs
      properties:
        type:
          type: string
          default: automationRuns
          example: automationRuns
          enum:
            - automationRuns
        relationships:
          type: object
          required:
            - automation
          properties:
            automation:
              type: object
              description: 'A link to the automation definition that is being run. '
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      default: automations
                      example: automations
                    id:
                      type: string
                      example: Automation-91cb048c-c498-43ba-ab99-2ca2d27d2c46
                      pattern: ^Automation-
            businessLocation:
              type: object
              description: A link to the business location that this automation is being run for. Either the businessLocation or order is required. (It depends on the automation type.)
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      default: businessLocations
                      example: businessLocations
                    id:
                      type: string
                      example: AG-1234567
            order:
              type: object
              description: 'Proposed: A link to the order that this automation is being run for. Either the businessLocation or order is required. (It depends on the automation type.)'
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - orders
                      default: orders
                    id:
                      type: string
                      example: 'AG-1234:ORD-1234567'
                  required:
                    - type
                    - id
      required:
        - type
        - relationships
    salesAccounts:
      title: Sales Account
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        A Sales Account is used by partners to track their interactions with a Business Location. It contains the public data of a business location plus additional data which is private to the partner.
      x-tags:
        - Sales Accounts
      x-examples:
        Sales Account Example:
          data:
            id: AG-1234567
            type: salesAccounts
            attributes:
              tags:
                - tag1
                - tag2
              customerIdentifier: User-defined-id-123123
              name: Company Example
              address:
                line1: 109 8th Street E.
                line2: Suite 23
                city: Saskatoon
                postalCode: S7M 1R3
                regionCode: CA-SK
                countryCode: CA
              phoneNumbers:
                - '+13068800001'
              serviceAreaBusiness: true
              geoCoordinate:
                latitude: -90
                longitude: -180
            relationships:
              salesPeople:
                data:
                  - id: U-123123-123123
                    type: users
              customFields:
                data:
                  - id: AG-1234567
                    type: customFields
              businessPartner:
                data:
                  type: partners
                  id: ABC
              businessCategories:
                data:
                  - type: businessCategories
                    id: 'active:diving:freediving'
              type: salesAccounts
            included:
              - id: AG-1231231
                type: salesAccountCustomFields
                partnerFields:
                  - fieldId: FieldID-1231231-12312312
                    stringValue: Text value
                    title: Title of field FieldID-1231231
                    description: Description of field FieldID-1231231
                    fieldType: string
      properties:
        id:
          type: string
          example: AG-1234567
        type:
          type: string
          default: salesAccounts
          enum:
            - salesAccounts
          readOnly: true
        attributes:
          type: object
          properties:
            tags:
              type: array
              maxItems: 30
              description: A tag is a label that can be used for grouping and filtering your list of accounts. They may be any string upto 30 characters in length.
              items:
                type: string
                maxLength: 30
                minLength: 1
            customerIdentifier:
              type: string
              description: 'A value assigned by the business partner to reference this business location. Customer ID is currently NOT enforced to be unique, and there may be negative side effects to having a duplicate and/or changing a customer ID, specifically around legacy SSO. Use caution when editing a customer ID.'
            name:
              type: string
              description: The common name for this location
              example: CN Tower
            commonNames:
              type: array
              description: A common name for a business (Something it is often referred to as)
              maxItems: 3
              minItems: 0
              items:
                type: string
            address:
              type: object
              properties:
                line1:
                  type: string
                  example: 290 Bremner Blvd
                  description: The primary information. Typically a street address.
                line2:
                  type: string
                  description: An additional line of information to add after the street address.
                city:
                  type: string
                  example: Toronto
                postalCode:
                  type: string
                  description: The zip code or postal code component of an address.
                  example: M5V 3L9
                regionCode:
                  type: string
                  description: |-
                    The code for the top level subdivision within the country (state/province) as defined by [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.

                    Examples: CA-SK, US-FL, AG-08, AU-NSW
                  example: CA-ON
                  maxLength: 6
                  minLength: 4
                  pattern: '^[A-Z]{2}-[\w]{1,3}$'
                countryCode:
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: CA
                  description: |-
                    The two letter country code defined by [ISO 3166-1](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)'

                    Examples: CA, US, AU
                  pattern: '^[A-Z]{2}$'
            phoneNumbers:
              type: array
              description: |-
                The standard phone numbers for the location.
                Formating characters may be included.

                **Extentions**

                It is recommended that extentions are included at the end of the number after an appropriate seperator: Pause: `,` Wait: `;` Default: `ext.`

                You may test the parsibility of a number using https://phonenumbers.temba.io/ All phone numbers are assumed to be in the same country as this business location.
              items:
                type: string
                example: '+14168686937'
            serviceAreaBusiness:
              type: boolean
              description: When true the address will be used as the center of the area that this location services instead of being displayed.
            geoCoordinate:
              type: object
              description: |-
                The point where the map pin for the location should be displayed.

                The values will **not** be automatically updated when the address is updated. If not provided when creating the location they will be initilized based on the address.

                It is expressed as a pair of numbers to represent degrees latitude and degrees longitude in accordance with the [WGS84](https://en.wikipedia.org/wiki/World_Geodetic_System) standard (the one used by your GPS).
              properties:
                latitude:
                  type: number
                  minimum: -90
                  maximum: 90
                  example: 43.6425662
                longitude:
                  type: number
                  minimum: -180
                  maximum: 180
                  example: -79.3870568
              required:
                - latitude
                - longitude
            seoKeywords:
              type: array
              minItems: 0
              maxItems: 3
              description: SEO (Search Engine Optimization) Keywords are key words or phrases that help customers find your business via search engines. These keywords may be displayed on Listing Builder's My Listing page and similar products to enhance SEO.
              items:
                type: string
            website:
              type: string
              format: uri
              description: 'The primary website for this business location. http:// will be automatically added if no schema is provided.'
              example: 'https://www.vendasta.com'
            servicesOffered:
              type: array
              maxItems: 15
              minItems: 0
              description: |-
                The primary services that the business offers. For example personal tax filing, business tax filing. 

                Total length of services offered must be less than 256 characters, when joined with commas. Maximum instances: 15
              items:
                type: string
                example: root canals
            descriptionShort:
              type: string
              maxLength: 200
              description: A public summary of the business. See also `descriptionLong`
            descriptionLong:
              type: string
              maxLength: 750
              description: A public summary of the business. See also `descriptionShort`
            hours:
              $ref: '#/components/schemas/hoursOfOperation'
        relationships:
          type: object
          properties:
            salesPeople:
              type: object
              description: A list of the sales people assigned to this account. The first sales person in the list will be treated as the primary sales person and given special treatment.
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        pattern: ^U-
                        description: |-
                          The user id of a salesperson. 

                          TestSalesAccountCustomFields_update/platform/users?filter[partner.id]=TEST&filter[email]=user@example.com`.

                          For more information access [GET /platform/users](b3A6MTMxNTA2NDE-get-user)
                      type:
                        type: string
                        example: users
                        default: users
                    required:
                      - id
                      - type
              required:
                - data
            customFields:
              type: object
              description: Custom Fields relative to a sales account
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 'ID of custom fields, can be retrieved using custom fields endpoint'
                      type:
                        type: string
                        example: customFields
                        default: customFields
                    required:
                      - id
                      - type
              required:
                - data
            businessPartner:
              type: object
              description: A link to the organization that provides the platform to this business location.
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      default: partners
                      enum:
                        - partners
                    id:
                      type: string
                      example: ABC
              required:
                - data
            businessCategories:
              type: object
              description: A list of the types of business this location should be compared against. If not set during creation it will default "other".
              properties:
                data:
                  type: array
                  maxItems: 3
                  minItems: 1
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        default: businessCategories
                        enum:
                          - businessCategories
                        example: businessCategories
                      id:
                        type: string
                        example: 'active:diving:freediving'
                    required:
                      - type
                      - id
        included:
          type: array
          description: During Get and List operations you may request the related resources be included by using the `include` query parameter. This can save you making an additional network request.
          items:
            discriminator:
              propertyName: type
            oneOf:
              - $ref: '#/components/schemas/salesAccountCustomFields'
              - $ref: '#/components/schemas/users'
              - $ref: '#/components/schemas/businessCategories'
          readOnly: true
    salesAccountCustomFields:
      title: Sales Accounts Custom Fields
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom fields associated with a sales account. The field definitions can be managed at Partner Center -> Administration -> Custom Fields.

        One form of identifier should be chosen, either `fieldId` or `externalId`.
        `fieldId` is the computer generated ID (like `FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99`) and `externalId` is a optional human-readable ID that can be set in the administration panel.

        Dropdown possible value and the currency code are also configured in the Administration panel.
      x-examples:
        Custom Fields with string value Example:
          data:
            id: AG-1231231
            type: salesAccountCustomFields
            partnerFields:
              - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                stringValue: A good string value
                title: Title of abc448ca field
                description: Description for abc448ca field
                fieldType: string
        Custom Fields with integer value Example:
          data:
            id: AG-1231232
            type: salesAccountCustomFields
            partnerFields:
              - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                integerValue: 1000
                title: Title of 123448ca field
                description: Description for 123448ca field
                fieldType: integer
        Custom Fields with Date value Example:
          data:
            id: AG-1231233
            type: salesAccountCustomFields
            partnerFields:
              - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                dateValue: '2016-01-02T15:04:05Z'
                title: Title of 987448ca field
                description: Description for 987448ca field
                fieldType: date
        Custom Fields Full:
          data:
            id: AG-1231235
            type: salesAccountCustomFields
            partnerFields:
              - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                stringValue: A good string value
                title: Title of abc448ca field
                description: Description for abc448ca field
                fieldType: string
              - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                integerValue: 1000
                title: Title of 123448ca field
                description: Description for 123448ca field
                fieldType: integer
              - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                dateValue: '2022-01-02T15:04:05Z'
                title: Title of 987448ca field
                description: Description for 987448ca field
                fieldType: date
              - fieldId: FieldID-987448f2-abc0-abc5-abc2-abc640bf4b00
                dropdownValue: red
                title: Title of 987448f2 field
                description: Description for 987448f2 field
                fieldType: dropdown
              - fieldId: FieldID-98744854-abc0-abc5-abc2-abc640bf4b01
                currencyValue: 10000
                title: Title of 98744854 field
                description: Description for 98744854 field
                fieldType: currency
                currencyCode: CAD
        Custom Fields with Dropdown Example:
          data:
            id: AG-1231233
            type: salesAccountCustomFields
            partnerFields:
              - fieldId: FieldID-987448f2-abc0-abc5-abc2-abc640bf4b00
                dropdownValue: red
                title: Title of 987448f2 field
                description: Description for 987448f2 field
                fieldType: dropdown
        Custom Fields with Currency Example:
          data:
            id: AG-1231233
            type: salesAccountCustomFields
            partnerFields:
              - fieldId: FieldID-98744854-abc0-abc5-abc2-abc640bf4b01
                currencyValue: 10000
                title: Title of 98744854 field
                description: Description for 98744854 field
                fieldType: currency
                currencyCode: CAD
      x-tags:
        - Sales Account Custom Fields
      properties:
        id:
          type: string
          example: AG-1231232
          description: 'An identifier for the parent entity, for example salesAccount (AG-1231231)'
          readOnly: true
        type:
          type: string
          default: salesAccountCustomFields
          enum:
            - salesAccountCustomFields
          description: Should always be salesAccountCustomFields
        partnerFields:
          type: array
          description: |-
            List of custom fields specific to the partner with a direct relationship to the sales account.
            To send a new value each field must have at least the fieldId and its correspondent value.
            For example a field of type string must have the stringValue attribute filled.

            string -> stringValue

            integer -> integerValue

            date -> dateValue

            Only the fields that you wish to modify need to be sent.
          items:
            type: object
            properties:
              fieldId:
                type: string
                description: 'Field identifier, can be retrieved by listing the attributes'
              externalId:
                type: string
                description: 'Alternative field identifier, can be set on admin panel and can be retrieved by listing the attributes'
              fieldType:
                type: string
                example: string
                enum:
                  - string
                  - interger
                  - date
                  - dropdown
                  - currency
                description: |-
                  Indicates which of the value fields to use to read or write the data. It can only be modified from within partner center.

                  string -> stringValue
                  integer -> integerValue
                  date -> dateValue
                  dropdown -> dropdownValue
                  currency -> currencyValue
                readOnly: true
              stringValue:
                type: string
                description: Required when the field type is `string`
              integerValue:
                type: integer
                description: Required when the field type is `integer`
              dateValue:
                type: string
                description: Required when the field type is `date`
                format: date
              dropdownValue:
                type: string
                description: Required when type is `dropdown`. The possible values can be discovered using the administration panel.
              currencyValue:
                type: integer
                description: |-
                  Required when the field type is `currency`.

                  This field represents the cents (or the smallest part of the currency).

                  Example:
                  USD 600.00 -> currencyValue=60000
              currencyCode:
                type: string
                minLength: 3
                maxLength: 3
                description: |-
                  Represents the type of currency when the field is type `currency`. It will be the 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)

                  Ex: USD, CAD, AUD
                example: USD
                readOnly: true
              title:
                type: string
                description: 'The main label for the field, appearing in most user interfaces that show the value. This field is not read when setting a value.'
                readOnly: true
              description:
                type: string
                description: 'A longer text explanation of the field, it optionally appears in the UI. This field is not read when setting a value.'
                readOnly: true
      required:
        - id
        - type
    userCustomFields:
      title: User Custom Fields
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom fields associated with a user. The field definitions can be managed at Partner Center -> Administration -> Custom Fields.

        One form of identifier should be chosen, either `fieldId` or `externalId`.
        `fieldId` is the computer generated ID (like `FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99`) and `externalId` is a optional human-readable ID that can be set in the administration panel.

        Dropdown possible value and the currency code are also configured in the Administration panel.
      x-examples:
        Custom Fields with string value Example:
          data:
            id: U-12345678-abcd-1234-abcd-123456789abc
            type: userCustomFields
            partnerFields:
              - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                stringValue: A good string value
                title: Title of abc448ca field
                description: Description for abc448ca field
                fieldType: string
        Custom Fields with integer value Example:
          data:
            id: U-12345678-abcd-1234-abcd-123456789abd
            type: userCustomFields
            partnerFields:
              - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                integerValue: 1000
                title: Title of 123448ca field
                description: Description for 123448ca field
                fieldType: integer
        Custom Fields with Date value Example:
          data:
            id: U-12345678-abcd-1234-abcd-123456789abe
            type: userCustomFields
            partnerFields:
              - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                dateValue: '2016-01-02T15:04:05Z'
                title: Title of 987448ca field
                description: Description for 987448ca field
                fieldType: date
        Custom Fields Full:
          data:
            id: U-12345678-abcd-1234-abcd-123456789abf
            type: userCustomFields
            partnerFields:
              - fieldId: FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99
                stringValue: A good string value
                title: Title of abc448ca field
                description: Description for abc448ca field
                fieldType: string
              - fieldId: FieldID-123448ca-abc0-abc5-abc2-abc640bf4b99
                integerValue: 1000
                title: Title of 123448ca field
                description: Description for 123448ca field
                fieldType: integer
              - fieldId: FieldID-987448ca-abc0-abc5-abc2-abc640bf4b99
                dateValue: '2022-01-02T15:04:05Z'
                title: Title of 987448ca field
                description: Description for 987448ca field
                fieldType: date
              - fieldId: FieldID-987448f2-abc0-abc5-abc2-abc640bf4b00
                dropdownValue: red
                title: Title of 987448f2 field
                description: Description for 987448f2 field
                fieldType: dropdown
              - fieldId: FieldID-98744854-abc0-abc5-abc2-abc640bf4b01
                currencyValue: 10000
                title: Title of 98744854 field
                description: Description for 98744854 field
                fieldType: currency
                currencyCode: CAD
        Custom Fields with Dropdown Example:
          data:
            id: U-12345678-abcd-1234-abcd-123456789abc
            type: userCustomFields
            partnerFields:
              - fieldId: FieldID-987448f2-abc0-abc5-abc2-abc640bf4b00
                dropdownValue: red
                title: Title of 987448f2 field
                description: Description for 987448f2 field
                fieldType: dropdown
        Custom Fields with Currency Example:
          data:
            id: U-12345678-abcd-1234-abcd-123456789abc
            type: userCustomFields
            partnerFields:
              - fieldId: FieldID-98744854-abc0-abc5-abc2-abc640bf4b01
                currencyValue: 10000
                title: Title of 98744854 field
                description: Description for 98744854 field
                fieldType: currency
                currencyCode: CAD
      x-tags:
        - User Custom Fields
      properties:
        id:
          type: string
          example: U-12345678-abcd-1234-abcd-123456789abc
          description: 'An identifier for the parent entity, in this case user'
          readOnly: true
        type:
          type: string
          default: userCustomFields
          enum:
            - userCustomFields
          description: Should always be userCustomFields
        partnerFields:
          type: array
          description: |-
            List of custom fields specific to the partner with a direct relationship to the user/contact.
            To send a new value each field must have at least the fieldId and its correspondent value.
            For example a field of type string must have the stringValue attribute filled.

            string -> stringValue

            integer -> integerValue

            date -> dateValue

            Only the fields that you wish to modify need to be sent.
          items:
            type: object
            properties:
              fieldId:
                type: string
                description: 'Field identifier, can be retrieved by listing the attributes'
              externalId:
                type: string
                description: 'Alternative field identifier, can be set on admin panel and can be retrieved by listing the attributes'
              fieldType:
                type: string
                example: string
                enum:
                  - string
                  - interger
                  - date
                  - dropdown
                  - currency
                description: |-
                  Indicates which of the value fields to use to read or write the data. It can only be modified from within partner center.

                  string -> stringValue
                  integer -> integerValue
                  date -> dateValue
                  dropdown -> dropdownValue
                  currency -> currencyValue
                readOnly: true
              stringValue:
                type: string
                description: Required when the field type is `string`
              integerValue:
                type: integer
                description: Required when the field type is `integer`
              dateValue:
                type: string
                description: Required when the field type is `date`
                format: date
              dropdownValue:
                type: string
                description: Required when type is `dropdown`. The possible values can be discovered using the administration panel.
              currencyValue:
                type: integer
                description: |-
                  Required when the field type is `currency`.

                  This field represents the cents (or the smallest part of the currency).

                  Example:
                  USD 600.00 -> currencyValue=60000
              currencyCode:
                type: string
                minLength: 3
                maxLength: 3
                description: |-
                  Represents the type of currency when the field is type `currency`. It will be the 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)

                  Ex: USD, CAD, AUD
                example: USD
                readOnly: true
              title:
                type: string
                description: 'The main label for the field, appearing in most user interfaces that show the value. This field is not read when setting a value.'
                readOnly: true
              description:
                type: string
                description: 'A longer text explanation of the field, it optionally appears in the UI. This field is not read when setting a value.'
                readOnly: true
      required:
        - id
        - type
    productCustomFields:
      title: Product Custom Fields
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Custom fields associated with a product. These attributes can be managed at Partner Center -> Administration -> Data attributes.

        One form of identifier should be chosen, either `fieldId` or `externalId`.
        `fieldId` is the computer generated ID (like `FieldID-abc448ca-abc0-abc5-abc2-abc640bf4b99`) and `externalId` is a optional human-readable ID that can be set in the administration panel.

        Dropdown possible values and the currency code are also configured in the Administration panel.
      x-tags:
        - Product Custom Fields
      properties:
        id:
          type: string
          description: 'An identifier for the parent entity, for example product (ABC-MP-1234567890ABCDEFGHIJKLMNOPQRSTUV)'
          readOnly: true
        type:
          type: string
          default: productCustomFields
          enum:
            - productCustomFields
          description: Should always be productCustomFields
        partnerFields:
          type: array
          description: |-
            List of custom fields specific to the partner with a direct relationship to the product.
            To send a new value each field must have at least the fieldId and its correspondent value.
            For example a field of type string must have the stringValue attribute filled.

            string -> stringValue

            integer -> integerValue

            date -> dateValue

            Only the fields that you wish to modify need to be sent.
          items:
            type: object
            properties:
              fieldId:
                type: string
                description: 'Field identifier, can be retrieved by listing the attributes'
              externalId:
                type: string
                description: 'Alternative field identifier, can be set on admin panel and can be retrieved by listing the attributes'
              fieldType:
                type: string
                example: string
                enum:
                  - string
                  - interger
                  - date
                  - dropdown
                  - currency
                description: |-
                  Indicates which of the value fields to use to read or write the data. It can only be modified from within partner center.

                  string -> stringValue
                  integer -> integerValue
                  date -> dateValue
                  dropdown -> dropdownValue
                  currency -> currencyValue
                readOnly: true
              stringValue:
                type: string
                description: Required when the field type is `string`
              integerValue:
                type: integer
                description: Required when the field type is `integer`
              dateValue:
                type: string
                description: Required when the field type is `date`
                format: date
              dropdownValue:
                type: string
                description: Required when type is `dropdown`. The possible values can be discovered using the administration panel.
              currencyValue:
                type: integer
                description: |-
                  Required when the field type is `currency`.

                  This field represents the cents (or the smallest part of the currency).

                  Example:
                  USD 600.00 -> currencyValue=60000
              currencyCode:
                type: string
                minLength: 3
                maxLength: 3
                description: |-
                  Represents the type of currency when the field is type `currency`. It will be the 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)

                  Ex: USD, CAD, AUD
                example: USD
                readOnly: true
              title:
                type: string
                description: 'The main label for the field, appearing in most user interfaces that show the value. This field is not read when setting a value.'
                readOnly: true
              description:
                type: string
                description: 'A longer text explanation of the field, it optionally appears in the UI. This field is not read when setting a value.'
                readOnly: true
      required:
        - id
        - type
    hoursOfOperation:
      type: array
      description: Each entry in the array is a set of hours for a particular department or customer of the business. It is recommended to provide a set of 'general' hours for all locations.
      items:
        type: object
        properties:
          hoursTypeId:
            type: string
            enum:
              - general
              - delivery
              - kitchen
              - driveThrough
              - pickup
              - takeout
            description: The category of hours that may apply to a specific department or service. Not all types are valid for all business categories.
          regularHours:
            description: Hours on the days of the week
            type: array
            nullable: true
            items:
              type: object
              properties:
                openDay:
                  $ref: '#/components/schemas/dayOfTheWeek'
                closeDay:
                  $ref: '#/components/schemas/dayOfTheWeek'
                openTime:
                  $ref: '#/components/schemas/timeOfDay'
                closeTime:
                  $ref: '#/components/schemas/timeOfDay'
          specialHours:
            x-lifecycle:
              status: proposed
            description: |-
              [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Proposed`
              
              Hours on specific days of the year
            type: array
            nullable: true
            items:
              type: object
              properties:
                startDate:
                  $ref: '#/components/schemas/dayOfTheYear'
                endDate:
                  $ref: '#/components/schemas/dayOfTheYear'
                openTime:
                  $ref: '#/components/schemas/timeOfDay'
                closeTime:
                  $ref: '#/components/schemas/timeOfDay'
    dayOfTheYear:
      title: a day in the year
      type: object
      properties:
        year:
          type: integer
        month:
          type: integer
          minimum: 1
          maximum: 12
        day:
          type: integer
          minimum: 1
          maximum: 31
    dayOfTheWeek:
      title: a day of the week
      type: string
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    timeOfDay:
      title: a time of day
      type: object
      properties:
        hours:
          type: integer
          minimum: 0
          maximum: 24
          description: 'Hour of the day, 24-hour clock'
        minutes:
          type: integer
          minimum: 0
          maximum: 59
tags:
  - name: Automation Runs
  - name: Business Categories
  - name: Business Locations
  - name: Users
  - name: Sales Contacts
  - name: Sales Accounts
  - name: Sales Account Custom Fields
  - name: User Custom Fields
  - name: Purchases
  - name: Orders
  - name: Order Custom Fields
  - name: Partners
  - name: Options
  - name: Products
  - name: Product Custom Fields
